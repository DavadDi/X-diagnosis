
p start
static int raw_sendmsg(struct sock *sk, struct msghdr *msg, size_t len)
    srcip = sk->__sk_common.skc_rcv_saddr
    sk_bound_dev_if = sk->__sk_common.skc_bound_dev_if
    dstip = (struct sockaddr_in *)(msg->msg_name)->sin_addr
    len = len
    icmp_type = (struct icmphdr *)(msg->msg_iter.iov->iov_base)->type
    icmp_code = (struct icmphdr *)(msg->msg_iter.iov->iov_base)->code
    icmp_id = (struct icmphdr *)(msg->msg_iter.iov->iov_base)->echo.id
    icmp_seq = (struct icmphdr *)(msg->msg_iter.iov->iov_base)->echo.sequence
    ip_proto = sk->sk_protocol
    inet_saddr = (struct inet_sock *)sk->inet_saddr
    hdrincl = (struct inet_sock *)sk->hdrincl
end


p start
int __ip_local_out(struct net *net, struct sock *sk, struct sk_buff *skb)
    skb = skb
    srcip = (struct iphdr *)(skb->data)->saddr
    dstip = (struct iphdr *)(skb->data)->daddr
    icmp_type = (struct icmphdr *)(skb->data + 20)->type
    icmp_code = (struct icmphdr *)(skb->data + 20)->code
    icmp_id = (struct icmphdr *)(skb->data + 20)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data + 20)->echo.sequence
    ip_len = (struct iphdr *)(skb->data)->tot_len
    ip_id = (struct iphdr *)(skb->data)->id
    ip_frag = (struct iphdr *)(skb->data)->frag_off
    ip_proto = (struct iphdr *)(skb->data)->protocol
    devname = skb->dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
end

r start
static int ip_finish_output(struct sock *sk, struct sk_buff *skb)
FILTER 'ret!=0'
end


p start
int ip_output(struct net *net, struct sock *sk, struct sk_buff *skb)
    skb = skb
    srcip = (struct iphdr *)(skb->data)->saddr
    dstip = (struct iphdr *)(skb->data)->daddr
    icmp_type = (struct icmphdr *)(skb->data + 20)->type
    icmp_code = (struct icmphdr *)(skb->data + 20)->code
    icmp_id = (struct icmphdr *)(skb->data + 20)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data + 20)->echo.sequence
    ip_len = (struct iphdr *)(skb->data)->tot_len
    ip_id = (struct iphdr *)(skb->data)->id
    ip_frag = (struct iphdr *)(skb->data)->frag_off
    ip_proto = (struct iphdr *)(skb->data)->protocol
    devname = skb->dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
end


p start
int int neigh_resolve_output(struct neighbour *neigh, struct sk_buff *skb)
    skb = skb
    srcip = (struct iphdr *)(skb->data)->saddr
    dstip = (struct iphdr *)(skb->data)->daddr
    icmp_type = (struct icmphdr *)(skb->data + 20)->type
    icmp_code = (struct icmphdr *)(skb->data + 20)->code
    icmp_id = (struct icmphdr *)(skb->data + 20)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data + 20)->echo.sequence
    ip_len = (struct iphdr *)(skb->data)->tot_len
    ip_id = (struct iphdr *)(skb->data)->id
    ip_frag = (struct iphdr *)(skb->data)->frag_off
    ip_proto = (struct iphdr *)(skb->data)->protocol
    devname = skb->dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
end

p start
static int __dev_queue_xmit(struct sk_buff *skb, struct net_device *sb_dev)
    skb = skb
    srcip = (struct iphdr *)(skb->data + 14)->saddr
    dstip = (struct iphdr *)(skb->data + 14)->daddr
    icmp_type = (struct icmphdr *)(skb->data + 34)->type
    icmp_code = (struct icmphdr *)(skb->data + 34)->code
    icmp_id = (struct icmphdr *)(skb->data + 34)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data + 34)->echo.sequence
    ip_tos = (struct iphdr *)(skb->data + 14)->tos
    ip_len = (struct iphdr *)(skb->data + 14)->tot_len
    ip_id = (struct iphdr *)(skb->data + 14)->id
    ip_frag = (struct iphdr *)(skb->data + 14)->frag_off
    ip_proto = (struct iphdr *)(skb->data + 14)->protocol
    ip_check = (struct iphdr *)(skb->data + 14)->check
    src_mac = (struct ethhdr *)(skb->data)->h_source:b48@0/64
    dst_mac = (struct ethhdr *)(skb->data)->h_dest:b48@0/64
    eth_type = (struct ethhdr *)(skb->data)->h_proto
    devname = skb->dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
    txq_state = skb->dev._tx->state
    qdisc_len = skb->dev._tx->qdisc->q.qlen
end


r start
static int pfifo_fast_enqueue(struct sk_buff *skb, struct Qdisc *qdisc,
			      struct sk_buff **to_free)
FILTER 'ret!=0'
end

p start
bool sch_direct_xmit(struct sk_buff *skb, struct Qdisc *q,
                 struct net_device *dev, struct netdev_queue *txq,
                 spinlock_t *root_lock, bool validate)
    skb = skb
    q = q
    txq = txq
    srcip = (struct iphdr *)(skb->data + 14)->saddr
    dstip = (struct iphdr *)(skb->data + 14)->daddr
    icmp_type = (struct icmphdr *)(skb->data + 34)->type
    icmp_code = (struct icmphdr *)(skb->data + 34)->code
    icmp_id = (struct icmphdr *)(skb->data + 34)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data + 34)->echo.sequence
    ip_id = (struct iphdr *)(skb->data + 14)->id
    ip_proto = (struct iphdr *)(skb->data + 14)->protocol
    devname = dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
    txq_state = txq->state
    qdisc_len = q->q.qlen
end

p start
struct sk_buff *dev_hard_start_xmit(struct sk_buff *first, struct net_device *dev,
                        struct netdev_queue *txq, int *ret)
    skb = first
    txq = txq
    srcip = (struct iphdr *)(first->data + 14)->saddr
    dstip = (struct iphdr *)(first->data + 14)->daddr
    icmp_type = (struct icmphdr *)(first->data + 34)->type
    icmp_code = (struct icmphdr *)(first->data + 34)->code
    icmp_id = (struct icmphdr *)(first->data + 34)->echo.id
    icmp_seq = (struct icmphdr *)(first->data + 34)->echo.sequence
    ip_id = (struct iphdr *)(first->data + 14)->id
    ip_proto = (struct iphdr *)(first->data + 14)->protocol
    src_mac = (struct ethhdr *)(first->data)->h_source:b48@0/64
    dst_mac = (struct ethhdr *)(first->data)->h_dest:b48@0/64
    eth_type = (struct ethhdr *)(first->data)->h_proto
    devname = dev->name
    txq_state = txq->state
end

p start
static netdev_tx_t start_xmit(struct sk_buff *skb, struct net_device *dev)
    skb = skb
    srcip = (struct iphdr *)(skb->data + 14)->saddr
    dstip = (struct iphdr *)(skb->data + 14)->daddr
    icmp_type = (struct icmphdr *)(skb->data + 34)->type
    icmp_code = (struct icmphdr *)(skb->data + 34)->code
    icmp_id = (struct icmphdr *)(skb->data + 34)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data + 34)->echo.sequence
    ip_id = (struct iphdr *)(skb->data + 14)->id
    ip_proto = (struct iphdr *)(skb->data + 14)->protocol
    devname = dev->name
end


p start
int nf_hook_slow(struct sk_buff *skb, struct nf_hook_state *state,
             const struct nf_hook_entries *e, unsigned int s)
    skb = skb
    hook = state->hook
    pf = state->pf
    srcip = (struct iphdr *)(skb->data)->saddr
    dstip = (struct iphdr *)(skb->data)->daddr
    icmp_type = (struct icmphdr *)(skb->data + 20)->type
    icmp_code = (struct icmphdr *)(skb->data + 20)->code
    icmp_id = (struct icmphdr *)(skb->data + 20)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data + 20)->echo.sequence
    ip_len = (struct iphdr *)(skb->data)->tot_len
    ip_id = (struct iphdr *)(skb->data)->id
    ip_frag = (struct iphdr *)(skb->data)->frag_off
    ip_proto = (struct iphdr *)(skb->data)->protocol
    devname = skb->dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
end

p start
gro_result_t napi_gro_receive(struct napi_struct *napi, struct sk_buff *skb)
    skb = skb
    srcip = (struct iphdr *)(skb->data)->saddr
    dstip = (struct iphdr *)(skb->data)->daddr
    icmp_type = (struct icmphdr *)(skb->data + 20)->type
    icmp_code = (struct icmphdr *)(skb->data + 20)->code
    icmp_id = (struct icmphdr *)(skb->data + 20)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data + 20)->echo.sequence
    ip_len = (struct iphdr *)(skb->data)->tot_len
    ip_id = (struct iphdr *)(skb->data)->id
    ip_frag = (struct iphdr *)(skb->data)->frag_off
    ip_proto = (struct iphdr *)(skb->data)->protocol
    devname = skb->dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
    poll = napi->poll
end

p start
static int __netif_receive_skb_one_core(struct sk_buff *skb, bool pfmemalloc)
    skb = skb
    pfmemalloc = pfmemalloc
    srcip = (struct iphdr *)(skb->data)->saddr
    dstip = (struct iphdr *)(skb->data)->daddr
    icmp_type = (struct icmphdr *)(skb->data + 20)->type
    icmp_code = (struct icmphdr *)(skb->data + 20)->code
    icmp_id = (struct icmphdr *)(skb->data + 20)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data + 20)->echo.sequence
    ip_len = (struct iphdr *)(skb->data)->tot_len
    ip_id = (struct iphdr *)(skb->data)->id
    ip_frag = (struct iphdr *)(skb->data)->frag_off
    ip_proto = (struct iphdr *)(skb->data)->protocol
    src_mac = (struct ethhdr *)(skb->data - 14)->h_source:b48@0/64
    dst_mac = (struct ethhdr *)(skb->data - 14)->h_dest:b48@0/64
    eth_type = (struct ethhdr *)(skb->data - 14)->h_proto
    devname = skb->dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
    skb_iif = skb->skb_iif
    skb_protocol = skb->protocol
    skb_csum = skb->csum
    skb_ipsummed = skb->ip_summed
    skb_pkttype = skb->pkt_type
    skb_csumvalid = skb->csum_valid
    skb_csumcompletesw = skb->csum_complete_sw
end

p start
int ip_rcv(struct sk_buff *skb, struct net_device *dev, struct packet_type *pt,
           struct net_device *orig_dev)
    skb = skb
    srcip = (struct iphdr *)(skb->data)->saddr
    dstip = (struct iphdr *)(skb->data)->daddr
    icmp_type = (struct icmphdr *)(skb->data + 20)->type
    icmp_code = (struct icmphdr *)(skb->data + 20)->code
    icmp_id = (struct icmphdr *)(skb->data + 20)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data + 20)->echo.sequence
    ip_len = (struct iphdr *)(skb->data)->tot_len
    ip_id = (struct iphdr *)(skb->data)->id
    ip_frag = (struct iphdr *)(skb->data)->frag_off
    ip_proto = (struct iphdr *)(skb->data)->protocol
    devname = skb->dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
    skb_iif = skb->skb_iif
    skb_protocol = skb->protocol
    skb_csum =skb->csum
end

p start
static int ip_rcv_finish(struct net *net, struct sock *sk, struct sk_buff *skb)
    skb = skb
    srcip = (struct iphdr *)(skb->data)->saddr
    dstip = (struct iphdr *)(skb->data)->daddr
    icmp_type = (struct icmphdr *)(skb->data + 20)->type
    icmp_code = (struct icmphdr *)(skb->data + 20)->code
    icmp_id = (struct icmphdr *)(skb->data + 20)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data + 20)->echo.sequence
    ip_len = (struct iphdr *)(skb->data)->tot_len
    ip_id = (struct iphdr *)(skb->data)->id
    ip_frag = (struct iphdr *)(skb->data)->frag_off
    ip_proto = (struct iphdr *)(skb->data)->protocol
    devname = skb->dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
end

p start
int ip_local_deliver(struct sk_buff *skb)
    skb = skb
    srcip = (struct iphdr *)(skb->data)->saddr
    dstip = (struct iphdr *)(skb->data)->daddr
    icmp_type = (struct icmphdr *)(skb->data + 20)->type
    icmp_code = (struct icmphdr *)(skb->data + 20)->code
    icmp_id = (struct icmphdr *)(skb->data + 20)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data + 20)->echo.sequence
    ip_len = (struct iphdr *)(skb->data)->tot_len
    ip_id = (struct iphdr *)(skb->data)->id
    ip_frag = (struct iphdr *)(skb->data)->frag_off
    ip_proto = (struct iphdr *)(skb->data)->protocol
    devname = skb->dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
    skb_iif = skb->skb_iif
    skb_protocol = skb->protocol
    skb_csum = skb->csum
end

p start
static int ip_local_deliver_finish(struct net *net, struct sock *sk, struct sk_buff *skb)
    skb = skb
    srcip = (struct iphdr *)(skb->data)->saddr
    dstip = (struct iphdr *)(skb->data)->daddr
    icmp_type = (struct icmphdr *)(skb->data + 20)->type
    icmp_code = (struct icmphdr *)(skb->data + 20)->code
    icmp_id = (struct icmphdr *)(skb->data + 20)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data + 20)->echo.sequence
    ip_len = (struct iphdr *)(skb->data)->tot_len
    ip_id = (struct iphdr *)(skb->data)->id
    ip_frag = (struct iphdr *)(skb->data)->frag_off
    ip_proto = (struct iphdr *)(skb->data)->protocol
    devname = skb->dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
    skb_csum = skb->csum
end

p start
int icmp_rcv(struct sk_buff *skb)
    skb = skb
    srcip = (struct iphdr *)(skb->data - 20)->saddr
    dstip = (struct iphdr *)(skb->data - 20)->daddr
    icmp_type = (struct icmphdr *)(skb->data)->type
    icmp_code = (struct icmphdr *)(skb->data)->code
    icmp_id = (struct icmphdr *)(skb->data)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data)->echo.sequence
    ip_len = (struct iphdr *)(skb->data - 20)->tot_len
    ip_id = (struct iphdr *)(skb->data - 20)->id
    ip_proto = (struct iphdr *)(skb->data - 20)->protocol
    devname = skb->dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
    skb_iif = skb->skb_iif
    skb_csum = skb->csum
    skb_ipsummed = skb->ip_summed
    skb_pkttype = skb->pkt_type
    skb_csumvalid = skb->csum_valid
    skb_csumcompletesw = skb->csum_complete_sw
end

p start
static void icmp_echo(struct sk_buff *skb)
    skb = skb
    srcip = (struct iphdr *)(skb->data - 28)->saddr
    dstip = (struct iphdr *)(skb->data - 28)->daddr
    icmp_type = (struct icmphdr *)(skb->data - 8)->type
    icmp_code = (struct icmphdr *)(skb->data - 8)->code
    icmp_id = (struct icmphdr *)(skb->data - 8)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data - 8)->echo.sequence
    ip_len = (struct iphdr *)(skb->data - 28)->tot_len
    ip_id = (struct iphdr *)(skb->data - 28)->id
    ip_proto = (struct iphdr *)(skb->data - 28)->protocol
    devname = skb->dev->name
    skb_len = skb->len
    skb_datalen = skb->data_len
    skb_iif = skb->skb_iif
    skb_csum = skb->csum
    skb_ipsummed = skb->ip_summed
    skb_pkttype = skb->pkt_type
    skb_csumvalid = skb->csum_valid
    skb_csumcompletesw = skb->csum_complete_sw
end

p start
void ping_rcv(struct sk_buff *skb)
    skb = skb
    srcip = (struct iphdr *)(skb->data - 28)->saddr
    dstip = (struct iphdr *)(skb->data - 28)->daddr
    icmp_type = (struct icmphdr *)(skb->data - 8)->type
    icmp_code = (struct icmphdr *)(skb->data - 8)->code
    icmp_id = (struct icmphdr *)(skb->data - 8)->echo.id
    icmp_seq = (struct icmphdr *)(skb->data - 8)->echo.sequence
    ip_len = (struct iphdr *)(skb->data - 28)->tot_len
    ip_id = (struct iphdr *)(skb->data - 28)->id
    ip_proto = (struct iphdr *)(skb->data - 28)->protocol
    devname = skb->dev->name
end
