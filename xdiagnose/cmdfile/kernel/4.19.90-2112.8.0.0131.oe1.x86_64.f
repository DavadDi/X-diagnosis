All defined functions:

File ./arch/x86/include/asm//msr-trace.h:
21:	static void __bpf_trace_msr_trace_class(void *, unsigned int, u64, int);
21:	static void perf_trace_msr_trace_class(void *, unsigned int, u64, int);
21:	static int trace_event_define_fields_msr_trace_class(struct trace_event_call *);
21:	static void trace_event_raw_event_msr_trace_class(void *, unsigned int, u64, int);
21:	static enum print_line_t trace_raw_output_msr_trace_class(struct trace_iterator *, int, struct trace_event *);

File ./arch/x86/include/asm/apic.h:
121:	static bool apic_is_x2apic_enabled(void);
74:	static void default_inquire_remote_apic(int);
111:	static u32 native_apic_mem_read(u32);
102:	static void native_apic_mem_write(u32, u32);
217:	static void native_apic_msr_eoi_write(u32, u32);
222:	static u32 native_apic_msr_read(u32);
208:	static void native_apic_msr_write(u32, u32);
239:	static u32 native_safe_x2apic_wait_icr_idle(void);
250:	static u64 native_x2apic_icr_read(void);
245:	static void native_x2apic_icr_write(u32, u32);
233:	static void native_x2apic_wait_icr_idle(void);

File ./arch/x86/include/asm/archrandom.h:
100:	static bool arch_get_random_long(unsigned long *);

File ./arch/x86/include/asm/bootparam_utils.h:
35:	static void sanitize_boot_params(struct boot_params *);

File ./arch/x86/include/asm/debugreg.h:
21:	static unsigned long native_get_debugreg(int);
50:	static void native_set_debugreg(int, unsigned long);

File ./arch/x86/include/asm/desc.h:
212:	static void native_load_gdt(const struct desc_ptr *);
217:	static void native_load_idt(const struct desc_ptr *);
276:	static void native_load_tls(struct thread_struct *, unsigned int);
238:	static void native_load_tr_desc(void);
196:	static void native_set_ldt(const void *, unsigned int);
267:	static unsigned long native_store_tr(void);
152:	static void native_write_gdt_entry(struct desc_struct *, int, const void *, int);
141:	static void native_write_idt_entry(gate_desc *, int, const gate_desc *);
146:	static void native_write_ldt_entry(struct desc_struct *, int, const void *);

File ./arch/x86/include/asm/e820/api.h:
49:	static bool is_ISA_range(u64, u64);

File ./arch/x86/include/asm/ftrace.h:
52:	static bool arch_syscall_match_sym_name(const char *, const char *);

File ./arch/x86/include/asm/gart.h:
54:	static int gart_iommu_hole_init(void);

File ./arch/x86/include/asm/irqflags.h:
63:	static void native_halt(void);
47:	static void native_irq_disable(void);
52:	static void native_irq_enable(void);
57:	static void native_safe_halt(void);

File ./arch/x86/include/asm/kexec.h:
96:	static void crash_setup_regs(struct pt_regs *, struct pt_regs *);

File ./arch/x86/include/asm/mach_traps.h:
21:	static unsigned char default_get_nmi_reason(void);

File ./arch/x86/include/asm/mpspec.h:
143:	static void physid_set_mask_of_physid(int, physid_mask_t *);

File ./arch/x86/include/asm/msr.h:
125:	static unsigned long long native_read_msr(unsigned int);
137:	static unsigned long long native_read_msr_safe(unsigned int, int *);
235:	static unsigned long long native_read_pmc(int);
160:	static void native_write_msr(unsigned int, u32, u32);
170:	static int native_write_msr_safe(unsigned int, u32, u32);

File ./arch/x86/include/asm/page_64.h:
47:	static void clear_page(void *);

File ./arch/x86/include/asm/paravirt.h:
792:	static void arch_local_irq_disable(void);
797:	static void arch_local_irq_enable(void);
802:	static unsigned long arch_local_irq_save(void);
782:	static unsigned long arch_local_save_flags(void);
635:	static void pmd_clear(pmd_t *);
629:	static void pte_clear(unsigned long, pte_t *, struct mm_struct *);
545:	static void pud_clear(pud_t *);
102:	static void wbinvd(void);
148:	static void wrmsrl(unsigned int, u64);

File ./arch/x86/include/asm/pgalloc.h:
9:	static int __paravirt_pgd_alloc(struct mm_struct *);
138:	static void p4d_populate(p4d_t *, pud_t *, struct mm_struct *);
168:	static void pgd_populate(pgd_t *, p4d_t *, struct mm_struct *);
83:	static void pmd_populate(struct mm_struct *, pmd_t *, struct page *);
76:	static void pmd_populate_kernel(pmd_t *, pte_t *, struct mm_struct *);
130:	static void pud_populate(pud_t *, pmd_t *, struct mm_struct *);

File ./arch/x86/include/asm/pgtable.h:
1061:	static void native_set_pte_at(struct mm_struct *, unsigned long, pte_t *, pte_t);
948:	static p4d_t *p4d_offset(pgd_t *, unsigned long);
895:	static unsigned long p4d_page_vaddr(p4d_t);
550:	static pte_t pfn_pte(unsigned long, pgprot_t);
955:	static int pgd_bad(pgd_t);
968:	static int pgd_none(pgd_t);
936:	static unsigned long pgd_page_vaddr(pgd_t);
260:	static int pmd_devmap(pmd_t);
777:	static unsigned long pmd_page_vaddr(pmd_t);
202:	static unsigned long pmd_pfn(pmd_t);
241:	static int pmd_trans_huge(pmd_t);
195:	static unsigned long pte_pfn(pte_t);
676:	static pgd_t pti_set_user_pgtbl(pgd_t *, pgd_t);
862:	static int pud_large(pud_t);
845:	static unsigned long pud_page_vaddr(pud_t);
209:	static unsigned long pud_pfn(pud_t);

File ./arch/x86/include/asm/pgtable_64.h:
136:	static void native_set_p4d(p4d_t *, p4d_t);
155:	static void native_set_pgd(pgd_t *, pgd_t);
75:	static void native_set_pmd(pmd_t *, pmd_t);
59:	static void native_set_pte(pte_t *, pte_t);
111:	static void native_set_pud(pud_t *, pud_t);

File ./arch/x86/include/asm/processor.h:
632:	static unsigned int cpuid_eax(unsigned int);
641:	static unsigned int cpuid_ebx(unsigned int);
650:	static unsigned int cpuid_ecx(unsigned int);
659:	static unsigned int cpuid_edx(unsigned int);
965:	static uint32_t hypervisor_cpuid_base(uint32_t, const char *);
211:	static void native_cpuid(unsigned int *, unsigned int *, unsigned int *, unsigned int *);
559:	static void native_load_sp0(unsigned long);
542:	static void native_set_iopl_mask(unsigned int);
564:	static void native_swapgs(void);

File ./arch/x86/include/asm/special_insns.h:
43:	static unsigned long __native_read_cr3(void);
19:	static unsigned long native_read_cr0(void);
31:	static unsigned long native_read_cr2(void);
81:	static unsigned long native_read_cr8(void);
132:	static void native_wbinvd(void);
26:	static void native_write_cr0(unsigned long);
38:	static void native_write_cr2(unsigned long);
50:	static void native_write_cr3(unsigned long);
75:	static void native_write_cr4(unsigned long);
88:	static void native_write_cr8(unsigned long);

File ./arch/x86/include/asm/syscall.h:
117:	static void syscall_get_arguments(unsigned long *, unsigned int, unsigned int, struct pt_regs *, struct task_struct *);

File ./arch/x86/include/asm/tlbflush.h:
474:	static void __flush_tlb_all(void);
319:	static void cr4_clear_bits(unsigned long);
307:	static void cr4_set_bits(unsigned long);

File ./arch/x86/include/asm/trace//fpu.h:
10:	static void __bpf_trace_x86_fpu(void *, struct fpu *);
10:	static void perf_trace_x86_fpu(void *, struct fpu *);
10:	static int trace_event_define_fields_x86_fpu(struct trace_event_call *);
10:	static void trace_event_raw_event_x86_fpu(void *, struct fpu *);
10:	static enum print_line_t trace_raw_output_x86_fpu(struct trace_iterator *, int, struct trace_event *);

File ./arch/x86/include/asm/trace//hyperv.h:
11:	static void __bpf_trace_hyperv_mmu_flush_tlb_others(void *, const struct cpumask *, const struct flush_tlb_info *);
31:	static void __bpf_trace_hyperv_nested_flush_guest_mapping(void *, u64, int);
45:	static void __bpf_trace_hyperv_send_ipi_mask(void *, const struct cpumask *, int);
11:	static void perf_trace_hyperv_mmu_flush_tlb_others(void *, const struct cpumask *, const struct flush_tlb_info *);
31:	static void perf_trace_hyperv_nested_flush_guest_mapping(void *, u64, int);
45:	static void perf_trace_hyperv_send_ipi_mask(void *, const struct cpumask *, int);
11:	static int trace_event_define_fields_hyperv_mmu_flush_tlb_others(struct trace_event_call *);
31:	static int trace_event_define_fields_hyperv_nested_flush_guest_mapping(struct trace_event_call *);
45:	static int trace_event_define_fields_hyperv_send_ipi_mask(struct trace_event_call *);
11:	static void trace_event_raw_event_hyperv_mmu_flush_tlb_others(void *, const struct cpumask *, const struct flush_tlb_info *);
31:	static void trace_event_raw_event_hyperv_nested_flush_guest_mapping(void *, u64, int);
45:	static void trace_event_raw_event_hyperv_send_ipi_mask(void *, const struct cpumask *, int);
11:	static enum print_line_t trace_raw_output_hyperv_mmu_flush_tlb_others(struct trace_iterator *, int, struct trace_event *);
31:	static enum print_line_t trace_raw_output_hyperv_nested_flush_guest_mapping(struct trace_iterator *, int, struct trace_event *);
45:	static enum print_line_t trace_raw_output_hyperv_send_ipi_mask(struct trace_iterator *, int, struct trace_event *);

File ./arch/x86/include/asm/uv/uv_bau.h:
768:	static unsigned long read_gmmr_proc_sw_ack(int);
748:	static unsigned long read_gmmr_sw_ack(int);
763:	static unsigned long read_mmr_proc_sw_ack(void);
743:	static unsigned long read_mmr_sw_ack(void);
758:	static void write_gmmr_proc_sw_ack(int, unsigned long);
738:	static void write_gmmr_sw_ack(int, unsigned long);
723:	static void write_mmr_misc_control(int, unsigned long);
708:	static void write_mmr_payload_first(int, unsigned long);
718:	static void write_mmr_payload_last(int, unsigned long);
698:	static void write_mmr_proc_payload_first(int, unsigned long);
703:	static void write_mmr_proc_payload_last(int, unsigned long);
753:	static void write_mmr_proc_sw_ack(unsigned long);
733:	static void write_mmr_sw_ack(unsigned long);

File ./arch/x86/include/asm/uv/uv_hub.h:
259:	static int is_uv2_hub(void);
272:	static int is_uv3_hub(void);
454:	static struct uv_gam_range_s *uv_gam_range(unsigned long);
565:	static unsigned long uv_gpa_to_offset(unsigned long);
530:	static unsigned long uv_gpa_to_soc_phys_ram(unsigned long);
680:	static unsigned long *uv_local_mmr_address(unsigned long);
496:	static unsigned long uv_soc_phys_ram_to_gpa(unsigned long);

File ./arch/x86/include/asm/xen/hypervisor.h:
49:	static bool xen_x2apic_para_available(void);

File ./arch/x86/include/asm/xen/page.h:
186:	static unsigned long mfn_to_pfn(unsigned long);

File ./include/acpi/platform/aclinuxex.h:
65:	static void *acpi_os_acquire_object(struct kmem_cache *);
50:	static void *acpi_os_allocate(acpi_size);
55:	static void *acpi_os_allocate_zeroed(acpi_size);

File ./include/asm-generic/getorder.h:
29:	static int get_order(unsigned long);

File ./include/asm-generic/io.h:
1128:	static void memcpy_fromio(void *, const volatile void *, size_t);
1146:	static void memcpy_toio(volatile void *, const void *, size_t);

File ./include/asm-generic/pgtable.h:
583:	static void __ptep_modify_prot_commit(struct mm_struct *, unsigned long, pte_t *, pte_t);
571:	static pte_t __ptep_modify_prot_start(struct mm_struct *, unsigned long, pte_t *);
913:	static int pmd_none_or_trans_huge_or_clear_bad(pmd_t *);

File ./include/asm-generic/tlb.h:
196:	static void tlb_remove_page(struct mmu_gather *, struct page *);

File ./include/crypto/cbc.h:
64:	static int crypto_cbc_encrypt_walk(struct skcipher_request *, void (*)(struct crypto_skcipher *, const u8 *, u8 *));

File ./include/crypto/sha1_base.h:
20:	static int sha1_base_init(struct shash_desc *);

File ./include/crypto/sha256_base.h:
21:	static int sha224_base_init(struct shash_desc *);
38:	static int sha256_base_init(struct shash_desc *);

File ./include/linux/acpi.h:
464:	static int acpi_dev_filter_resource_type_cb(struct acpi_resource *, void *);

File ./include/linux/atomic.h:
1298:	static long long atomic64_dec_if_positive(atomic64_t *);

File ./include/linux/bitmap.h:
301:	static int bitmap_andnot(unsigned long *, const unsigned long *, unsigned int, const unsigned long *);
235:	static void bitmap_copy(unsigned long *, const unsigned long *, unsigned int);
354:	static int bitmap_empty(const unsigned long *, unsigned int);
225:	static void bitmap_fill(unsigned long *, unsigned int);
215:	static void bitmap_zero(unsigned long *, unsigned int);

File ./include/linux/blk-cgroup.h:
740:	static struct blkg_rwstat blkg_rwstat_read(struct blkg_rwstat *);
759:	static uint64_t blkg_rwstat_total(struct blkg_rwstat *);

File ./include/linux/bootmem.h:
187:	static void *memblock_virt_alloc(phys_addr_t, phys_addr_t);

File ./include/linux/cgroup.h:
310:	static void css_get(struct cgroup_subsys_state *);

File ./include/linux/cpumask.h:
325:	static void cpumask_clear_cpu(int, struct cpumask *);
309:	static void cpumask_set_cpu(unsigned int, struct cpumask *);
524:	static unsigned int cpumask_weight(const struct cpumask *);

File ./include/linux/fsnotify.h:
30:	static int fsnotify_perm(int, struct file *);

File ./include/linux/hid.h:
964:	static void hid_map_usage(struct hid_input *, struct hid_usage *, unsigned long **, int *, __u8, unsigned int);
1010:	static void hid_map_usage_clear(struct hid_input *, struct hid_usage *, unsigned long **, int *, __u8, __u16);

File ./include/linux/highmem.h:
226:	static void copy_user_highpage(struct page *, struct page *, struct vm_area_struct *, unsigned long);

File ./include/linux/interrupt.h:
608:	static void tasklet_schedule(struct tasklet_struct *);

File ./include/linux/jhash.h:
70:	static u32 jhash(const void *, u32, u32);
116:	static u32 jhash2(const u32 *, u32, u32);

File ./include/linux/key.h:
257:	static struct key *__key_get(struct key *);

File ./include/linux/kref.h:
45:	static void kref_get(struct kref *);
67:	static int kref_put(struct kref *, void (*)(struct kref *));

File ./include/linux/ktask.h:
246:	static int ktask_run_numa(struct ktask_node *, struct ktask_ctl *, size_t);

File ./include/linux/list.h:
115:	static void __list_del_entry(struct list_head *);

File ./include/linux/memcontrol.h:
772:	static void count_memcg_event_mm(struct mm_struct *, enum vm_event_item);

File ./include/linux/mm.h:
1022:	static void get_page(struct page *);
1941:	static p4d_t *p4d_alloc(pgd_t *, unsigned long, struct mm_struct *);
1948:	static pud_t *pud_alloc(p4d_t *, unsigned long, struct mm_struct *);
1052:	static void put_page(struct page *);

File ./include/linux/mmzone.h:
1251:	static int pfn_valid(unsigned long);
1211:	static int present_section_nr(unsigned long);

File ./include/linux/mroute_base.h:
192:	static int mr_call_mfc_notifiers(struct net *, enum fib_event_type, struct mr_mfc *, u32, unsigned int *, unsigned short);
69:	static int mr_call_vif_notifiers(struct net *, enum fib_event_type, struct vif_device *, unsigned short, u32, unsigned int *, unsigned short);
414:	static void mr_mfc_seq_stop(struct seq_file *, void *);

File ./include/linux/netfilter.h:
285:	static int NF_HOOK(struct net *, struct sk_buff *, struct net_device *, struct net_device *, int (*)(struct net *, struct sock *, struct sk_buff *), struct sock *, unsigned int, uint8_t);

File ./include/linux/nodemask.h:
134:	static void __node_clear(volatile nodemask_t *, int);
238:	static int __nodes_weight(unsigned int, const nodemask_t *);
421:	static void node_set_state(int, enum node_states);

File ./include/linux/pagemap.h:
504:	static void lock_page(struct page *);

File ./include/linux/percpu-refcount.h:
299:	static void percpu_ref_put_many(struct percpu_ref *, unsigned long);

File ./include/linux/phy.h:
994:	static int genphy_no_soft_reset(struct phy_device *);

File ./include/linux/quota.h:
98:	static struct kqid make_kqid(qid_t, enum quota_type, struct user_namespace *);

File ./include/linux/rcupdate.h:
89:	static void synchronize_rcu(void);

File ./include/linux/rhashtable.h:
1009:	static int rhltable_remove(struct rhltable *, struct rhlist_head *, const struct rhashtable_params);

File ./include/linux/rmap.h:
216:	static void page_vma_mapped_walk_done(struct page_vma_mapped_walk *);
113:	static void put_anon_vma(struct anon_vma *);

File ./include/linux/sched/clock.h:
82:	static u64 local_clock(void);

File ./include/linux/sched/task.h:
96:	static void put_task_struct(struct task_struct *);

File ./include/linux/sched/topology.h:
44:	static int cpu_core_flags(void);
51:	static int cpu_numa_flags(void);
37:	static int cpu_smt_flags(void);

File ./include/linux/seqlock.h:
452:	static void write_sequnlock(seqlock_t *);

File ./include/linux/sfi_acpi.h:
70:	static int acpi_sfi_table_parse(int (*)(struct acpi_table_header *), char *);

File ./include/linux/skb_array.h:
189:	static void __skb_array_destroy_skb(void *);

File ./include/linux/skbuff.h:
2149:	static void *__skb_pull(unsigned int, struct sk_buff *);
2177:	static int pskb_may_pull(struct sk_buff *, unsigned int);
2125:	static void *skb_put_data(struct sk_buff *, const void *, unsigned int);

File ./include/linux/slab.h:
629:	static void *kmalloc_array(size_t, size_t, gfp_t);
707:	static void *kzalloc(size_t, gfp_t);
718:	static void *kzalloc_node(size_t, int, gfp_t);

File ./include/linux/spi/spi.h:
1047:	static int spi_sync_transfer(struct spi_device *, struct spi_transfer *, unsigned int);

File ./include/linux/spinlock_api_smp.h:
164:	static void __raw_spin_unlock_irq(raw_spinlock_t *);

File ./include/linux/swapops.h:
67:	static swp_entry_t pte_to_swp_entry(pte_t);

File ./include/linux/thread_bits.h:
44:	static void clear_ti_thread_flag(struct thread_info *, int);
39:	static void set_ti_thread_flag(struct thread_info *, int);

File ./include/linux/thread_info.h:
72:	static void copy_overflow(int, unsigned long);

File ./include/linux/timekeeping.h:
134:	static u64 ktime_get_boot_ns(void);
93:	static ktime_t ktime_get_boottime(void);
106:	static ktime_t ktime_get_clocktai(void);
77:	static ktime_t ktime_get_real(void);
129:	static u64 ktime_get_real_ns(void);
139:	static u64 ktime_get_tai_ns(void);

File ./include/linux/topology.h:
208:	static const struct cpumask *cpu_cpu_mask(int);
202:	static const struct cpumask *cpu_smt_mask(int);

File ./include/linux/tracehook.h:
124:	static void tracehook_report_syscall_exit(struct pt_regs *, int);

File ./include/linux/uidgid.h:
61:	static bool uid_eq(kuid_t, kuid_t);
71:	static bool uid_gt(kuid_t, kuid_t);
91:	static bool uid_lt(kuid_t, kuid_t);

File ./include/linux/uuid.h:
44:	static bool guid_equal(const guid_t *, const guid_t *);

File ./include/net/addrconf.h:
365:	static struct inet6_dev *in6_dev_get(const struct net_device *);
386:	static void in6_dev_put(struct inet6_dev *);
425:	static void in6_ifa_hold(struct inet6_ifaddr *);
276:	static bool ipv6_is_mld(struct sk_buff *, int, int);

File ./include/net/arp.h:
37:	static struct neighbour *__ipv4_neigh_lookup(struct net_device *, u32);

File ./include/net/checksum.h:
100:	static __wsum csum_block_add_ext(__wsum, __wsum, int, int);
116:	static __wsum csum_partial_ext(const void *, int, __wsum);

File ./include/net/codel_impl.h:
100:	static bool codel_should_drop(const struct sk_buff *, struct codel_params *, u32 *, codel_time_t, struct codel_stats *, struct codel_vars *, struct codel_vars *, void *, codel_skb_time_t, codel_skb_len_t);
60:	static void codel_vars_init(struct codel_vars *);

File ./include/net/codel_qdisc.h:
64:	static codel_time_t codel_get_enqueue_time(const struct sk_buff *);

File ./include/net/dst.h:
402:	static int dst_discard(struct sk_buff *);
465:	static int dst_output(struct net *, struct sock *, struct sk_buff *);

File ./include/net/ip.h:
194:	static int ip_queue_xmit(struct sock *, struct sk_buff *, struct flowi *);

File ./include/net/ip6_checksum.h:
84:	static void tcp_v6_send_check(struct sock *, struct sk_buff *);

File ./include/net/ip6_fib.h:
293:	static void fib6_info_release(struct fib6_info *);

File ./include/net/ip6_route.h:
244:	static int ip6_skb_dst_mtu(struct sk_buff *);

File ./include/net/ip_fib.h:
314:	static int fib_lookup(struct net *, struct flowi4 *, struct fib_result *, unsigned int);

File ./include/net/ipv6_frag.h:
31:	static void ip6frag_init(struct inet_frag_queue *, const void *);
40:	static u32 ip6frag_key_hashfn(const void *, u32, u32);
55:	static int ip6frag_obj_cmpfn(struct rhashtable_compare_arg *, const void *);
46:	static u32 ip6frag_obj_hashfn(const void *, u32, u32);

File ./include/net/neighbour.h:
418:	static void neigh_release(struct neighbour *);

File ./include/net/netlink.h:
546:	static void nlmsg_trim(struct sk_buff *, const void *);

File ./include/net/request_sock.h:
109:	static void reqsk_free(struct request_sock *);
121:	static void reqsk_put(struct request_sock *);

File ./include/net/sch_generic.h:
870:	static struct sk_buff *qdisc_dequeue_head(struct Qdisc *);
932:	static struct sk_buff *qdisc_peek_dequeued(struct Qdisc *);
924:	static struct sk_buff *qdisc_peek_head(struct Qdisc *);
672:	static unsigned int qdisc_pkt_len(const struct sk_buff *);
983:	static void qdisc_reset_queue(struct Qdisc *);

File ./include/net/sock.h:
1759:	static void sock_put(struct sock *);

File ./include/net/tcp.h:
1774:	static void tcp_push_pending_frames(struct sock *);
1882:	static bool tcp_stream_memory_free(const struct sock *);

File ./include/net/udp.h:
204:	static void udp_lib_close(struct sock *, long);
195:	static int udp_lib_hash(struct sock *);

File ./include/net/udplite.h:
20:	static int udplite_getfrag(void *, char *, int, int, int, struct sk_buff *);
28:	static int udplite_sk_init(struct sock *);

File ./include/net/xfrm.h:
1198:	static int __xfrm_policy_check2(struct sock *, struct sk_buff *, int, unsigned int, int);

File ./include/trace/../../arch/x86/entry/vsyscall//vsyscall_trace.h:
10:	static void __bpf_trace_emulate_vsyscall(void *, int);
10:	static void perf_trace_emulate_vsyscall(void *, int);
10:	static int trace_event_define_fields_emulate_vsyscall(struct trace_event_call *);
10:	static void trace_event_raw_event_emulate_vsyscall(void *, int);
10:	static enum print_line_t trace_raw_output_emulate_vsyscall(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/../../include/ras/ras_event.h:
336:	static void __bpf_trace_aer_event(void *, const char *, const u32, const u8, const u8, struct aer_header_log_regs *);
177:	static void __bpf_trace_arm_event(void *, const struct cper_sec_proc_arm *, const u8 *, const u32, const u8 *, const u32, const u8 *, const u32, u8, int);
27:	static void __bpf_trace_extlog_mem_event(void *, struct cper_sec_mem_err *, u32, const uuid_le *, const char *, u8);
98:	static void __bpf_trace_mc_event(void *, const unsigned int, const char *, const char *, const int, const u8, const s8, const s8, const s8, unsigned long, const u8, unsigned long, const char *);
437:	static void __bpf_trace_memory_failure_event(void *, unsigned long, int, int);
257:	static void __bpf_trace_non_standard_event(void *, const uuid_le *, const uuid_le *, const char *, const u8, const u8 *, const u32);
336:	static void perf_trace_aer_event(void *, const char *, const u32, const u8, const u8, struct aer_header_log_regs *);
177:	static void perf_trace_arm_event(void *, const struct cper_sec_proc_arm *, const u8 *, const u32, const u8 *, const u32, const u8 *, const u32, u8, int);
27:	static void perf_trace_extlog_mem_event(void *, struct cper_sec_mem_err *, u32, const uuid_le *, const char *, u8);
98:	static void perf_trace_mc_event(void *, const unsigned int, const char *, const char *, const int, const u8, const s8, const s8, const s8, unsigned long, const u8, unsigned long, const char *);
437:	static void perf_trace_memory_failure_event(void *, unsigned long, int, int);
257:	static void perf_trace_non_standard_event(void *, const uuid_le *, const uuid_le *, const char *, const u8, const u8 *, const u32);
336:	static int trace_event_define_fields_aer_event(struct trace_event_call *);
177:	static int trace_event_define_fields_arm_event(struct trace_event_call *);
27:	static int trace_event_define_fields_extlog_mem_event(struct trace_event_call *);
98:	static int trace_event_define_fields_mc_event(struct trace_event_call *);
437:	static int trace_event_define_fields_memory_failure_event(struct trace_event_call *);
257:	static int trace_event_define_fields_non_standard_event(struct trace_event_call *);
336:	static void trace_event_raw_event_aer_event(void *, const char *, const u32, const u8, const u8, struct aer_header_log_regs *);
177:	static void trace_event_raw_event_arm_event(void *, const struct cper_sec_proc_arm *, const u8 *, const u32, const u8 *, const u32, const u8 *, const u32, u8, int);
27:	static void trace_event_raw_event_extlog_mem_event(void *, struct cper_sec_mem_err *, u32, const uuid_le *, const char *, u8);
98:	static void trace_event_raw_event_mc_event(void *, const unsigned int, const char *, const char *, const int, const u8, const s8, const s8, const s8, unsigned long, const u8, unsigned long, const char *);
437:	static void trace_event_raw_event_memory_failure_event(void *, unsigned long, int, int);
257:	static void trace_event_raw_event_non_standard_event(void *, const uuid_le *, const uuid_le *, const char *, const u8, const u8 *, const u32);
336:	static enum print_line_t trace_raw_output_aer_event(struct trace_iterator *, int, struct trace_event *);
177:	static enum print_line_t trace_raw_output_arm_event(struct trace_iterator *, int, struct trace_event *);
27:	static enum print_line_t trace_raw_output_extlog_mem_event(struct trace_iterator *, int, struct trace_event *);
98:	static enum print_line_t trace_raw_output_mc_event(struct trace_iterator *, int, struct trace_event *);
437:	static enum print_line_t trace_raw_output_memory_failure_event(struct trace_iterator *, int, struct trace_event *);
257:	static enum print_line_t trace_raw_output_non_standard_event(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/alarmtimer.h:
45:	static void __bpf_trace_alarm_class(void *, struct alarm *, ktime_t);
23:	static void __bpf_trace_alarmtimer_suspend(void *, ktime_t, int);
45:	static void perf_trace_alarm_class(void *, struct alarm *, ktime_t);
23:	static void perf_trace_alarmtimer_suspend(void *, ktime_t, int);
45:	static int trace_event_define_fields_alarm_class(struct trace_event_call *);
23:	static int trace_event_define_fields_alarmtimer_suspend(struct trace_event_call *);
45:	static void trace_event_raw_event_alarm_class(void *, struct alarm *, ktime_t);
23:	static void trace_event_raw_event_alarmtimer_suspend(void *, ktime_t, int);
45:	static enum print_line_t trace_raw_output_alarm_class(struct trace_iterator *, int, struct trace_event *);
23:	static enum print_line_t trace_raw_output_alarmtimer_suspend(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/block.h:
225:	static void __bpf_trace_block_bio_bounce(void *, struct request_queue *, struct bio *);
262:	static void __bpf_trace_block_bio_complete(void *, struct request_queue *, struct bio *, int);
290:	static void __bpf_trace_block_bio_merge(void *, struct request_queue *, struct request *, struct bio *);
559:	static void __bpf_trace_block_bio_remap(void *, struct request_queue *, struct bio *, dev_t, sector_t);
15:	static void __bpf_trace_block_buffer(void *, struct buffer_head *);
456:	static void __bpf_trace_block_plug(void *, struct request_queue *);
116:	static void __bpf_trace_block_rq_complete(void *, struct request *, int, unsigned int);
603:	static void __bpf_trace_block_rq_remap(void *, struct request_queue *, struct request *, dev_t, sector_t);
74:	static void __bpf_trace_block_rq_requeue(void *, struct request_queue *, struct request *);
519:	static void __bpf_trace_block_split(void *, struct request_queue *, struct bio *, unsigned int);
473:	static void __bpf_trace_block_unplug(void *, struct request_queue *, unsigned int, bool);
225:	static void perf_trace_block_bio_bounce(void *, struct request_queue *, struct bio *);
262:	static void perf_trace_block_bio_complete(void *, struct request_queue *, struct bio *, int);
290:	static void perf_trace_block_bio_merge(void *, struct request_queue *, struct request *, struct bio *);
357:	static void perf_trace_block_bio_queue(void *, struct request_queue *, struct bio *);
559:	static void perf_trace_block_bio_remap(void *, struct request_queue *, struct bio *, dev_t, sector_t);
15:	static void perf_trace_block_buffer(void *, struct buffer_head *);
385:	static void perf_trace_block_get_rq(void *, struct request_queue *, struct bio *, int);
456:	static void perf_trace_block_plug(void *, struct request_queue *);
148:	static void perf_trace_block_rq(void *, struct request_queue *, struct request *);
116:	static void perf_trace_block_rq_complete(void *, struct request *, int, unsigned int);
603:	static void perf_trace_block_rq_remap(void *, struct request_queue *, struct request *, dev_t, sector_t);
74:	static void perf_trace_block_rq_requeue(void *, struct request_queue *, struct request *);
519:	static void perf_trace_block_split(void *, struct request_queue *, struct bio *, unsigned int);
473:	static void perf_trace_block_unplug(void *, struct request_queue *, unsigned int, bool);
225:	static int trace_event_define_fields_block_bio_bounce(struct trace_event_call *);
262:	static int trace_event_define_fields_block_bio_complete(struct trace_event_call *);
290:	static int trace_event_define_fields_block_bio_merge(struct trace_event_call *);
357:	static int trace_event_define_fields_block_bio_queue(struct trace_event_call *);
559:	static int trace_event_define_fields_block_bio_remap(struct trace_event_call *);
15:	static int trace_event_define_fields_block_buffer(struct trace_event_call *);
385:	static int trace_event_define_fields_block_get_rq(struct trace_event_call *);
456:	static int trace_event_define_fields_block_plug(struct trace_event_call *);
148:	static int trace_event_define_fields_block_rq(struct trace_event_call *);
116:	static int trace_event_define_fields_block_rq_complete(struct trace_event_call *);
603:	static int trace_event_define_fields_block_rq_remap(struct trace_event_call *);
74:	static int trace_event_define_fields_block_rq_requeue(struct trace_event_call *);
519:	static int trace_event_define_fields_block_split(struct trace_event_call *);
473:	static int trace_event_define_fields_block_unplug(struct trace_event_call *);
225:	static void trace_event_raw_event_block_bio_bounce(void *, struct request_queue *, struct bio *);
262:	static void trace_event_raw_event_block_bio_complete(void *, struct request_queue *, struct bio *, int);
290:	static void trace_event_raw_event_block_bio_merge(void *, struct request_queue *, struct request *, struct bio *);
357:	static void trace_event_raw_event_block_bio_queue(void *, struct request_queue *, struct bio *);
559:	static void trace_event_raw_event_block_bio_remap(void *, struct request_queue *, struct bio *, dev_t, sector_t);
15:	static void trace_event_raw_event_block_buffer(void *, struct buffer_head *);
385:	static void trace_event_raw_event_block_get_rq(void *, struct request_queue *, struct bio *, int);
456:	static void trace_event_raw_event_block_plug(void *, struct request_queue *);
148:	static void trace_event_raw_event_block_rq(void *, struct request_queue *, struct request *);
116:	static void trace_event_raw_event_block_rq_complete(void *, struct request *, int, unsigned int);
603:	static void trace_event_raw_event_block_rq_remap(void *, struct request_queue *, struct request *, dev_t, sector_t);
74:	static void trace_event_raw_event_block_rq_requeue(void *, struct request_queue *, struct request *);
519:	static void trace_event_raw_event_block_split(void *, struct request_queue *, struct bio *, unsigned int);
473:	static void trace_event_raw_event_block_unplug(void *, struct request_queue *, unsigned int, bool);
225:	static enum print_line_t trace_raw_output_block_bio_bounce(struct trace_iterator *, int, struct trace_event *);
262:	static enum print_line_t trace_raw_output_block_bio_complete(struct trace_iterator *, int, struct trace_event *);
290:	static enum print_line_t trace_raw_output_block_bio_merge(struct trace_iterator *, int, struct trace_event *);
357:	static enum print_line_t trace_raw_output_block_bio_queue(struct trace_iterator *, int, struct trace_event *);
559:	static enum print_line_t trace_raw_output_block_bio_remap(struct trace_iterator *, int, struct trace_event *);
15:	static enum print_line_t trace_raw_output_block_buffer(struct trace_iterator *, int, struct trace_event *);
385:	static enum print_line_t trace_raw_output_block_get_rq(struct trace_iterator *, int, struct trace_event *);
456:	static enum print_line_t trace_raw_output_block_plug(struct trace_iterator *, int, struct trace_event *);
148:	static enum print_line_t trace_raw_output_block_rq(struct trace_iterator *, int, struct trace_event *);
116:	static enum print_line_t trace_raw_output_block_rq_complete(struct trace_iterator *, int, struct trace_event *);
603:	static enum print_line_t trace_raw_output_block_rq_remap(struct trace_iterator *, int, struct trace_event *);
74:	static enum print_line_t trace_raw_output_block_rq_requeue(struct trace_iterator *, int, struct trace_event *);
519:	static enum print_line_t trace_raw_output_block_split(struct trace_iterator *, int, struct trace_event *);
473:	static enum print_line_t trace_raw_output_block_unplug(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/bridge.h:
12:	static void __bpf_trace_br_fdb_add(void *, struct ndmsg *, struct net_device *, const unsigned char *, u16, u16);
42:	static void __bpf_trace_br_fdb_external_learn_add(void *, struct net_bridge *, struct net_bridge_port *, const unsigned char *, u16);
95:	static void __bpf_trace_br_fdb_update(void *, struct net_bridge *, struct net_bridge_port *, const unsigned char *, u16, bool);
69:	static void __bpf_trace_fdb_delete(void *, struct net_bridge *, struct net_bridge_fdb_entry *);
12:	static void perf_trace_br_fdb_add(void *, struct ndmsg *, struct net_device *, const unsigned char *, u16, u16);
42:	static void perf_trace_br_fdb_external_learn_add(void *, struct net_bridge *, struct net_bridge_port *, const unsigned char *, u16);
95:	static void perf_trace_br_fdb_update(void *, struct net_bridge *, struct net_bridge_port *, const unsigned char *, u16, bool);
69:	static void perf_trace_fdb_delete(void *, struct net_bridge *, struct net_bridge_fdb_entry *);
12:	static int trace_event_define_fields_br_fdb_add(struct trace_event_call *);
42:	static int trace_event_define_fields_br_fdb_external_learn_add(struct trace_event_call *);
95:	static int trace_event_define_fields_br_fdb_update(struct trace_event_call *);
69:	static int trace_event_define_fields_fdb_delete(struct trace_event_call *);
12:	static void trace_event_raw_event_br_fdb_add(void *, struct ndmsg *, struct net_device *, const unsigned char *, u16, u16);
42:	static void trace_event_raw_event_br_fdb_external_learn_add(void *, struct net_bridge *, struct net_bridge_port *, const unsigned char *, u16);
95:	static void trace_event_raw_event_br_fdb_update(void *, struct net_bridge *, struct net_bridge_port *, const unsigned char *, u16, bool);
69:	static void trace_event_raw_event_fdb_delete(void *, struct net_bridge *, struct net_bridge_fdb_entry *);
12:	static enum print_line_t trace_raw_output_br_fdb_add(struct trace_iterator *, int, struct trace_event *);
42:	static enum print_line_t trace_raw_output_br_fdb_external_learn_add(struct trace_iterator *, int, struct trace_event *);
95:	static enum print_line_t trace_raw_output_br_fdb_update(struct trace_iterator *, int, struct trace_event *);
69:	static enum print_line_t trace_raw_output_fdb_delete(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/cgroup.h:
54:	static void __bpf_trace_cgroup(void *, struct cgroup *, const char *);
106:	static void __bpf_trace_cgroup_migrate(void *, struct cgroup *, const char *, struct task_struct *, bool);
11:	static void __bpf_trace_cgroup_root(void *, struct cgroup_root *);
54:	static void perf_trace_cgroup(void *, struct cgroup *, const char *);
106:	static void perf_trace_cgroup_migrate(void *, struct cgroup *, const char *, struct task_struct *, bool);
11:	static void perf_trace_cgroup_root(void *, struct cgroup_root *);
54:	static int trace_event_define_fields_cgroup(struct trace_event_call *);
106:	static int trace_event_define_fields_cgroup_migrate(struct trace_event_call *);
11:	static int trace_event_define_fields_cgroup_root(struct trace_event_call *);
54:	static void trace_event_raw_event_cgroup(void *, struct cgroup *, const char *);
106:	static void trace_event_raw_event_cgroup_migrate(void *, struct cgroup *, const char *, struct task_struct *, bool);
11:	static void trace_event_raw_event_cgroup_root(void *, struct cgroup_root *);
54:	static enum print_line_t trace_raw_output_cgroup(struct trace_iterator *, int, struct trace_event *);
106:	static enum print_line_t trace_raw_output_cgroup_migrate(struct trace_iterator *, int, struct trace_event *);
11:	static enum print_line_t trace_raw_output_cgroup_root(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/clk.h:
23:	static void __bpf_trace_clk(void *, struct clk_core *);
195:	static void __bpf_trace_clk_duty_cycle(void *, struct clk_core *, struct clk_duty *);
129:	static void __bpf_trace_clk_parent(void *, struct clk_core *, struct clk_core *);
162:	static void __bpf_trace_clk_phase(void *, struct clk_core *, int);
96:	static void __bpf_trace_clk_rate(void *, struct clk_core *, unsigned long);
23:	static void perf_trace_clk(void *, struct clk_core *);
195:	static void perf_trace_clk_duty_cycle(void *, struct clk_core *, struct clk_duty *);
129:	static void perf_trace_clk_parent(void *, struct clk_core *, struct clk_core *);
162:	static void perf_trace_clk_phase(void *, struct clk_core *, int);
96:	static void perf_trace_clk_rate(void *, struct clk_core *, unsigned long);
23:	static int trace_event_define_fields_clk(struct trace_event_call *);
195:	static int trace_event_define_fields_clk_duty_cycle(struct trace_event_call *);
129:	static int trace_event_define_fields_clk_parent(struct trace_event_call *);
162:	static int trace_event_define_fields_clk_phase(struct trace_event_call *);
96:	static int trace_event_define_fields_clk_rate(struct trace_event_call *);
23:	static void trace_event_raw_event_clk(void *, struct clk_core *);
195:	static void trace_event_raw_event_clk_duty_cycle(void *, struct clk_core *, struct clk_duty *);
129:	static void trace_event_raw_event_clk_parent(void *, struct clk_core *, struct clk_core *);
162:	static void trace_event_raw_event_clk_phase(void *, struct clk_core *, int);
96:	static void trace_event_raw_event_clk_rate(void *, struct clk_core *, unsigned long);
23:	static enum print_line_t trace_raw_output_clk(struct trace_iterator *, int, struct trace_event *);
195:	static enum print_line_t trace_raw_output_clk_duty_cycle(struct trace_iterator *, int, struct trace_event *);
129:	static enum print_line_t trace_raw_output_clk_parent(struct trace_iterator *, int, struct trace_event *);
162:	static enum print_line_t trace_raw_output_clk_phase(struct trace_iterator *, int, struct trace_event *);
96:	static enum print_line_t trace_raw_output_clk_rate(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/compaction.h:
318:	static void __bpf_trace_kcompactd_wake_template(void *, int, int, enum zone_type);
105:	static void __bpf_trace_mm_compaction_begin(void *, unsigned long, unsigned long, unsigned long, unsigned long, bool);
246:	static void __bpf_trace_mm_compaction_defer_template(void *, struct zone *, int);
136:	static void __bpf_trace_mm_compaction_end(void *, unsigned long, unsigned long, unsigned long, unsigned long, bool, int);
14:	static void __bpf_trace_mm_compaction_isolate_template(void *, unsigned long, unsigned long, unsigned long, unsigned long);
301:	static void __bpf_trace_mm_compaction_kcompactd_sleep(void *, int);
67:	static void __bpf_trace_mm_compaction_migratepages(void *, unsigned long, int, struct list_head *);
199:	static void __bpf_trace_mm_compaction_suitable_template(void *, struct zone *, int, int);
171:	static void __bpf_trace_mm_compaction_try_to_compact_pages(void *, int, gfp_t, int);
318:	static void perf_trace_kcompactd_wake_template(void *, int, int, enum zone_type);
105:	static void perf_trace_mm_compaction_begin(void *, unsigned long, unsigned long, unsigned long, unsigned long, bool);
246:	static void perf_trace_mm_compaction_defer_template(void *, struct zone *, int);
136:	static void perf_trace_mm_compaction_end(void *, unsigned long, unsigned long, unsigned long, unsigned long, bool, int);
14:	static void perf_trace_mm_compaction_isolate_template(void *, unsigned long, unsigned long, unsigned long, unsigned long);
301:	static void perf_trace_mm_compaction_kcompactd_sleep(void *, int);
67:	static void perf_trace_mm_compaction_migratepages(void *, unsigned long, int, struct list_head *);
199:	static void perf_trace_mm_compaction_suitable_template(void *, struct zone *, int, int);
171:	static void perf_trace_mm_compaction_try_to_compact_pages(void *, int, gfp_t, int);
318:	static int trace_event_define_fields_kcompactd_wake_template(struct trace_event_call *);
105:	static int trace_event_define_fields_mm_compaction_begin(struct trace_event_call *);
246:	static int trace_event_define_fields_mm_compaction_defer_template(struct trace_event_call *);
136:	static int trace_event_define_fields_mm_compaction_end(struct trace_event_call *);
14:	static int trace_event_define_fields_mm_compaction_isolate_template(struct trace_event_call *);
301:	static int trace_event_define_fields_mm_compaction_kcompactd_sleep(struct trace_event_call *);
67:	static int trace_event_define_fields_mm_compaction_migratepages(struct trace_event_call *);
199:	static int trace_event_define_fields_mm_compaction_suitable_template(struct trace_event_call *);
171:	static int trace_event_define_fields_mm_compaction_try_to_compact_pages(struct trace_event_call *);
318:	static void trace_event_raw_event_kcompactd_wake_template(void *, int, int, enum zone_type);
105:	static void trace_event_raw_event_mm_compaction_begin(void *, unsigned long, unsigned long, unsigned long, unsigned long, bool);
246:	static void trace_event_raw_event_mm_compaction_defer_template(void *, struct zone *, int);
136:	static void trace_event_raw_event_mm_compaction_end(void *, unsigned long, unsigned long, unsigned long, unsigned long, bool, int);
14:	static void trace_event_raw_event_mm_compaction_isolate_template(void *, unsigned long, unsigned long, unsigned long, unsigned long);
301:	static void trace_event_raw_event_mm_compaction_kcompactd_sleep(void *, int);
67:	static void trace_event_raw_event_mm_compaction_migratepages(void *, unsigned long, int, struct list_head *);
199:	static void trace_event_raw_event_mm_compaction_suitable_template(void *, struct zone *, int, int);
171:	static void trace_event_raw_event_mm_compaction_try_to_compact_pages(void *, int, gfp_t, int);
318:	static enum print_line_t trace_raw_output_kcompactd_wake_template(struct trace_iterator *, int, struct trace_event *);
105:	static enum print_line_t trace_raw_output_mm_compaction_begin(struct trace_iterator *, int, struct trace_event *);
246:	static enum print_line_t trace_raw_output_mm_compaction_defer_template(struct trace_iterator *, int, struct trace_event *);
136:	static enum print_line_t trace_raw_output_mm_compaction_end(struct trace_iterator *, int, struct trace_event *);
14:	static enum print_line_t trace_raw_output_mm_compaction_isolate_template(struct trace_iterator *, int, struct trace_event *);
301:	static enum print_line_t trace_raw_output_mm_compaction_kcompactd_sleep(struct trace_iterator *, int, struct trace_event *);
67:	static enum print_line_t trace_raw_output_mm_compaction_migratepages(struct trace_iterator *, int, struct trace_event *);
199:	static enum print_line_t trace_raw_output_mm_compaction_suitable_template(struct trace_iterator *, int, struct trace_event *);
171:	static enum print_line_t trace_raw_output_mm_compaction_try_to_compact_pages(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/context_tracking.h:
10:	static void __bpf_trace_context_tracking_user(void *, int);
10:	static void perf_trace_context_tracking_user(void *, int);
10:	static int trace_event_define_fields_context_tracking_user(struct trace_event_call *);
10:	static void trace_event_raw_event_context_tracking_user(void *, int);
10:	static enum print_line_t trace_raw_output_context_tracking_user(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/cpuhp.h:
10:	static void __bpf_trace_cpuhp_enter(void *, unsigned int, int, int, int (*)(unsigned int));
65:	static void __bpf_trace_cpuhp_exit(void *, unsigned int, int, int, int);
37:	static void __bpf_trace_cpuhp_multi_enter(void *, unsigned int, int, int, int (*)(unsigned int, struct hlist_node *), struct hlist_node *);
10:	static void perf_trace_cpuhp_enter(void *, unsigned int, int, int, int (*)(unsigned int));
65:	static void perf_trace_cpuhp_exit(void *, unsigned int, int, int, int);
37:	static void perf_trace_cpuhp_multi_enter(void *, unsigned int, int, int, int (*)(unsigned int, struct hlist_node *), struct hlist_node *);
10:	static int trace_event_define_fields_cpuhp_enter(struct trace_event_call *);
65:	static int trace_event_define_fields_cpuhp_exit(struct trace_event_call *);
37:	static int trace_event_define_fields_cpuhp_multi_enter(struct trace_event_call *);
10:	static void trace_event_raw_event_cpuhp_enter(void *, unsigned int, int, int, int (*)(unsigned int));
65:	static void trace_event_raw_event_cpuhp_exit(void *, unsigned int, int, int, int);
37:	static void trace_event_raw_event_cpuhp_multi_enter(void *, unsigned int, int, int, int (*)(unsigned int, struct hlist_node *), struct hlist_node *);
10:	static enum print_line_t trace_raw_output_cpuhp_enter(struct trace_iterator *, int, struct trace_event *);
65:	static enum print_line_t trace_raw_output_cpuhp_exit(struct trace_iterator *, int, struct trace_event *);
37:	static enum print_line_t trace_raw_output_cpuhp_multi_enter(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/devlink.h:
17:	static void __bpf_trace_devlink_hwmsg(void *, const struct devlink *, bool, unsigned long, const u8 *, size_t);
17:	static void perf_trace_devlink_hwmsg(void *, const struct devlink *, bool, unsigned long, const u8 *, size_t);
17:	static int trace_event_define_fields_devlink_hwmsg(struct trace_event_call *);
17:	static void trace_event_raw_event_devlink_hwmsg(void *, const struct devlink *, bool, unsigned long, const u8 *, size_t);
17:	static enum print_line_t trace_raw_output_devlink_hwmsg(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/dma_fence.h:
12:	static void __bpf_trace_dma_fence(void *, struct dma_fence *);
12:	static void perf_trace_dma_fence(void *, struct dma_fence *);
12:	static int trace_event_define_fields_dma_fence(struct trace_event_call *);
12:	static void trace_event_raw_event_dma_fence(void *, struct dma_fence *);
12:	static enum print_line_t trace_raw_output_dma_fence(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/fib.h:
13:	static void __bpf_trace_fib_table_lookup(void *, u32, const struct flowi4 *, const struct fib_nh *, int);
13:	static void perf_trace_fib_table_lookup(void *, u32, const struct flowi4 *, const struct fib_nh *, int);
13:	static int trace_event_define_fields_fib_table_lookup(struct trace_event_call *);
13:	static void trace_event_raw_event_fib_table_lookup(void *, u32, const struct flowi4 *, const struct fib_nh *, int);
13:	static enum print_line_t trace_raw_output_fib_table_lookup(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/fib6.h:
13:	static void __bpf_trace_fib6_table_lookup(void *, const struct net *, const struct fib6_info *, struct fib6_table *, const struct flowi6 *);
13:	static void perf_trace_fib6_table_lookup(void *, const struct net *, const struct fib6_info *, struct fib6_table *, const struct flowi6 *);
13:	static int trace_event_define_fields_fib6_table_lookup(struct trace_event_call *);
13:	static void trace_event_raw_event_fib6_table_lookup(void *, const struct net *, const struct fib6_info *, struct fib6_table *, const struct flowi6 *);
13:	static enum print_line_t trace_raw_output_fib6_table_lookup(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/filelock.h:
119:	static void __bpf_trace_filelock_lease(void *, struct inode *, struct file_lock *);
62:	static void __bpf_trace_filelock_lock(void *, struct inode *, struct file_lock *, int);
38:	static void __bpf_trace_locks_get_lock_context(void *, struct inode *, int, struct file_lock_context *);
119:	static void perf_trace_filelock_lease(void *, struct inode *, struct file_lock *);
62:	static void perf_trace_filelock_lock(void *, struct inode *, struct file_lock *, int);
171:	static void perf_trace_generic_add_lease(void *, struct inode *, struct file_lock *);
38:	static void perf_trace_locks_get_lock_context(void *, struct inode *, int, struct file_lock_context *);
119:	static int trace_event_define_fields_filelock_lease(struct trace_event_call *);
62:	static int trace_event_define_fields_filelock_lock(struct trace_event_call *);
171:	static int trace_event_define_fields_generic_add_lease(struct trace_event_call *);
38:	static int trace_event_define_fields_locks_get_lock_context(struct trace_event_call *);
119:	static void trace_event_raw_event_filelock_lease(void *, struct inode *, struct file_lock *);
62:	static void trace_event_raw_event_filelock_lock(void *, struct inode *, struct file_lock *, int);
171:	static void trace_event_raw_event_generic_add_lease(void *, struct inode *, struct file_lock *);
38:	static void trace_event_raw_event_locks_get_lock_context(void *, struct inode *, int, struct file_lock_context *);
119:	static enum print_line_t trace_raw_output_filelock_lease(struct trace_iterator *, int, struct trace_event *);
62:	static enum print_line_t trace_raw_output_filelock_lock(struct trace_iterator *, int, struct trace_event *);
171:	static enum print_line_t trace_raw_output_generic_add_lease(struct trace_iterator *, int, struct trace_event *);
38:	static enum print_line_t trace_raw_output_locks_get_lock_context(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/filemap.h:
82:	static void __bpf_trace_file_check_and_advance_wb_err(void *, struct file *, errseq_t);
57:	static void __bpf_trace_filemap_set_wb_err(void *, struct address_space *, errseq_t);
16:	static void __bpf_trace_mm_filemap_op_page_cache(void *, struct page *);
82:	static void perf_trace_file_check_and_advance_wb_err(void *, struct file *, errseq_t);
57:	static void perf_trace_filemap_set_wb_err(void *, struct address_space *, errseq_t);
16:	static void perf_trace_mm_filemap_op_page_cache(void *, struct page *);
82:	static int trace_event_define_fields_file_check_and_advance_wb_err(struct trace_event_call *);
57:	static int trace_event_define_fields_filemap_set_wb_err(struct trace_event_call *);
16:	static int trace_event_define_fields_mm_filemap_op_page_cache(struct trace_event_call *);
82:	static void trace_event_raw_event_file_check_and_advance_wb_err(void *, struct file *, errseq_t);
57:	static void trace_event_raw_event_filemap_set_wb_err(void *, struct address_space *, errseq_t);
16:	static void trace_event_raw_event_mm_filemap_op_page_cache(void *, struct page *);
57:	static void trace_filemap_set_wb_err(struct address_space *, errseq_t);
82:	static enum print_line_t trace_raw_output_file_check_and_advance_wb_err(struct trace_iterator *, int, struct trace_event *);
57:	static enum print_line_t trace_raw_output_filemap_set_wb_err(struct trace_iterator *, int, struct trace_event *);
16:	static enum print_line_t trace_raw_output_mm_filemap_op_page_cache(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/fs.h:
21:	static void __bpf_trace_fs_file_read(void *, struct fs_file_read_ctx *, int);
26:	static void __bpf_trace_fs_file_release(void *, struct inode *, struct file *);

File ./include/trace/events/fs_dax.h:
197:	static void __bpf_trace_dax_insert_mapping(void *, struct inode *, struct vm_fault *, void *);
10:	static void __bpf_trace_dax_pmd_fault_class(void *, struct inode *, struct vm_fault *, unsigned long, int);
105:	static void __bpf_trace_dax_pmd_insert_mapping_class(void *, struct inode *, struct vm_fault *, long, pfn_t, void *);
63:	static void __bpf_trace_dax_pmd_load_hole_class(void *, struct inode *, struct vm_fault *, struct page *, void *);
153:	static void __bpf_trace_dax_pte_fault_class(void *, struct inode *, struct vm_fault *, int);
227:	static void __bpf_trace_dax_writeback_range_class(void *, struct inode *, unsigned long, unsigned long);
197:	static void perf_trace_dax_insert_mapping(void *, struct inode *, struct vm_fault *, void *);
10:	static void perf_trace_dax_pmd_fault_class(void *, struct inode *, struct vm_fault *, unsigned long, int);
105:	static void perf_trace_dax_pmd_insert_mapping_class(void *, struct inode *, struct vm_fault *, long, pfn_t, void *);
63:	static void perf_trace_dax_pmd_load_hole_class(void *, struct inode *, struct vm_fault *, struct page *, void *);
153:	static void perf_trace_dax_pte_fault_class(void *, struct inode *, struct vm_fault *, int);
259:	static void perf_trace_dax_writeback_one(void *, struct inode *, unsigned long, unsigned long);
227:	static void perf_trace_dax_writeback_range_class(void *, struct inode *, unsigned long, unsigned long);
197:	static int trace_event_define_fields_dax_insert_mapping(struct trace_event_call *);
10:	static int trace_event_define_fields_dax_pmd_fault_class(struct trace_event_call *);
105:	static int trace_event_define_fields_dax_pmd_insert_mapping_class(struct trace_event_call *);
63:	static int trace_event_define_fields_dax_pmd_load_hole_class(struct trace_event_call *);
153:	static int trace_event_define_fields_dax_pte_fault_class(struct trace_event_call *);
259:	static int trace_event_define_fields_dax_writeback_one(struct trace_event_call *);
227:	static int trace_event_define_fields_dax_writeback_range_class(struct trace_event_call *);
197:	static void trace_event_raw_event_dax_insert_mapping(void *, struct inode *, struct vm_fault *, void *);
10:	static void trace_event_raw_event_dax_pmd_fault_class(void *, struct inode *, struct vm_fault *, unsigned long, int);
105:	static void trace_event_raw_event_dax_pmd_insert_mapping_class(void *, struct inode *, struct vm_fault *, long, pfn_t, void *);
63:	static void trace_event_raw_event_dax_pmd_load_hole_class(void *, struct inode *, struct vm_fault *, struct page *, void *);
153:	static void trace_event_raw_event_dax_pte_fault_class(void *, struct inode *, struct vm_fault *, int);
259:	static void trace_event_raw_event_dax_writeback_one(void *, struct inode *, unsigned long, unsigned long);
227:	static void trace_event_raw_event_dax_writeback_range_class(void *, struct inode *, unsigned long, unsigned long);
197:	static enum print_line_t trace_raw_output_dax_insert_mapping(struct trace_iterator *, int, struct trace_event *);
10:	static enum print_line_t trace_raw_output_dax_pmd_fault_class(struct trace_iterator *, int, struct trace_event *);
105:	static enum print_line_t trace_raw_output_dax_pmd_insert_mapping_class(struct trace_iterator *, int, struct trace_event *);
63:	static enum print_line_t trace_raw_output_dax_pmd_load_hole_class(struct trace_iterator *, int, struct trace_event *);
153:	static enum print_line_t trace_raw_output_dax_pte_fault_class(struct trace_iterator *, int, struct trace_event *);
259:	static enum print_line_t trace_raw_output_dax_writeback_one(struct trace_iterator *, int, struct trace_event *);
227:	static enum print_line_t trace_raw_output_dax_writeback_range_class(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/huge_memory.h:
85:	static void __bpf_trace_mm_collapse_huge_page(void *, struct mm_struct *, int, int);
109:	static void __bpf_trace_mm_collapse_huge_page_isolate(void *, struct page *, int, int, bool, int);
140:	static void __bpf_trace_mm_collapse_huge_page_swapin(void *, struct mm_struct *, int, int, int);
48:	static void __bpf_trace_mm_khugepaged_scan_pmd(void *, struct mm_struct *, struct page *, bool, int, int, int, int);
85:	static void perf_trace_mm_collapse_huge_page(void *, struct mm_struct *, int, int);
109:	static void perf_trace_mm_collapse_huge_page_isolate(void *, struct page *, int, int, bool, int);
140:	static void perf_trace_mm_collapse_huge_page_swapin(void *, struct mm_struct *, int, int, int);
48:	static void perf_trace_mm_khugepaged_scan_pmd(void *, struct mm_struct *, struct page *, bool, int, int, int, int);
85:	static int trace_event_define_fields_mm_collapse_huge_page(struct trace_event_call *);
109:	static int trace_event_define_fields_mm_collapse_huge_page_isolate(struct trace_event_call *);
140:	static int trace_event_define_fields_mm_collapse_huge_page_swapin(struct trace_event_call *);
48:	static int trace_event_define_fields_mm_khugepaged_scan_pmd(struct trace_event_call *);
85:	static void trace_event_raw_event_mm_collapse_huge_page(void *, struct mm_struct *, int, int);
109:	static void trace_event_raw_event_mm_collapse_huge_page_isolate(void *, struct page *, int, int, bool, int);
140:	static void trace_event_raw_event_mm_collapse_huge_page_swapin(void *, struct mm_struct *, int, int, int);
48:	static void trace_event_raw_event_mm_khugepaged_scan_pmd(void *, struct mm_struct *, struct page *, bool, int, int, int, int);
85:	static enum print_line_t trace_raw_output_mm_collapse_huge_page(struct trace_iterator *, int, struct trace_event *);
109:	static enum print_line_t trace_raw_output_mm_collapse_huge_page_isolate(struct trace_iterator *, int, struct trace_event *);
140:	static enum print_line_t trace_raw_output_mm_collapse_huge_page_swapin(struct trace_iterator *, int, struct trace_event *);
48:	static enum print_line_t trace_raw_output_mm_khugepaged_scan_pmd(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/i2c.h:
126:	static void __bpf_trace_i2c_result(void *, const struct i2c_adapter *, int, int);
29:	static void __bpf_trace_i2c_write(void *, const struct i2c_adapter *, const struct i2c_msg *, int);
62:	static void perf_trace_i2c_read(void *, const struct i2c_adapter *, const struct i2c_msg *, int);
93:	static void perf_trace_i2c_reply(void *, const struct i2c_adapter *, const struct i2c_msg *, int);
126:	static void perf_trace_i2c_result(void *, const struct i2c_adapter *, int, int);
29:	static void perf_trace_i2c_write(void *, const struct i2c_adapter *, const struct i2c_msg *, int);
62:	static int trace_event_define_fields_i2c_read(struct trace_event_call *);
93:	static int trace_event_define_fields_i2c_reply(struct trace_event_call *);
126:	static int trace_event_define_fields_i2c_result(struct trace_event_call *);
29:	static int trace_event_define_fields_i2c_write(struct trace_event_call *);
62:	static void trace_event_raw_event_i2c_read(void *, const struct i2c_adapter *, const struct i2c_msg *, int);
93:	static void trace_event_raw_event_i2c_reply(void *, const struct i2c_adapter *, const struct i2c_msg *, int);
126:	static void trace_event_raw_event_i2c_result(void *, const struct i2c_adapter *, int, int);
29:	static void trace_event_raw_event_i2c_write(void *, const struct i2c_adapter *, const struct i2c_msg *, int);
62:	static enum print_line_t trace_raw_output_i2c_read(struct trace_iterator *, int, struct trace_event *);
93:	static enum print_line_t trace_raw_output_i2c_reply(struct trace_iterator *, int, struct trace_event *);
126:	static enum print_line_t trace_raw_output_i2c_result(struct trace_iterator *, int, struct trace_event *);
29:	static enum print_line_t trace_raw_output_i2c_write(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/initcall.h:
48:	static void __bpf_trace_initcall_finish(void *, initcall_t, int);
10:	static void __bpf_trace_initcall_level(void *, const char *);
27:	static void __bpf_trace_initcall_start(void *, initcall_t);
48:	static void perf_trace_initcall_finish(void *, initcall_t, int);
10:	static void perf_trace_initcall_level(void *, const char *);
27:	static void perf_trace_initcall_start(void *, initcall_t);
48:	static int trace_event_define_fields_initcall_finish(struct trace_event_call *);
10:	static int trace_event_define_fields_initcall_level(struct trace_event_call *);
27:	static int trace_event_define_fields_initcall_start(struct trace_event_call *);
48:	static void trace_event_raw_event_initcall_finish(void *, initcall_t, int);
10:	static void trace_event_raw_event_initcall_level(void *, const char *);
27:	static void trace_event_raw_event_initcall_start(void *, initcall_t);
10:	static void trace_initcall_level(const char *);
48:	static enum print_line_t trace_raw_output_initcall_finish(struct trace_iterator *, int, struct trace_event *);
10:	static enum print_line_t trace_raw_output_initcall_level(struct trace_iterator *, int, struct trace_event *);
27:	static enum print_line_t trace_raw_output_initcall_start(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/io_uring.h:
240:	static void __bpf_trace_io_uring_add_to_prev(void *, void *, bool);
324:	static void __bpf_trace_io_uring_complete(void *, void *, u64, long);
24:	static void __bpf_trace_io_uring_create(void *, int, void *, u32, u32, u32);
175:	static void __bpf_trace_io_uring_defer(void *, void *, void *, unsigned long long);
297:	static void __bpf_trace_io_uring_fail_link(void *, void *, void *);
108:	static void __bpf_trace_io_uring_file_get(void *, void *, int);
208:	static void __bpf_trace_io_uring_link(void *, void *, void *, void *);
389:	static void __bpf_trace_io_uring_poll_arm(void *, void *, u8, u64, int, int);
417:	static void __bpf_trace_io_uring_poll_wake(void *, void *, u8, u64, int);
137:	static void __bpf_trace_io_uring_queue_async_work(void *, void *, int, void *, struct io_wq_work *, unsigned int);
67:	static void __bpf_trace_io_uring_register(void *, void *, unsigned int, unsigned int, unsigned int, bool, long);
360:	static void __bpf_trace_io_uring_submit_sqe(void *, void *, u8, u64, bool, bool);
469:	static void __bpf_trace_io_uring_task_run(void *, void *, u8, u64);
240:	static void perf_trace_io_uring_add_to_prev(void *, void *, bool);
324:	static void perf_trace_io_uring_complete(void *, void *, u64, long);
269:	static void perf_trace_io_uring_cqring_wait(void *, void *, int);
24:	static void perf_trace_io_uring_create(void *, int, void *, u32, u32, u32);
175:	static void perf_trace_io_uring_defer(void *, void *, void *, unsigned long long);
297:	static void perf_trace_io_uring_fail_link(void *, void *, void *);
108:	static void perf_trace_io_uring_file_get(void *, void *, int);
208:	static void perf_trace_io_uring_link(void *, void *, void *, void *);
389:	static void perf_trace_io_uring_poll_arm(void *, void *, u8, u64, int, int);
417:	static void perf_trace_io_uring_poll_wake(void *, void *, u8, u64, int);
137:	static void perf_trace_io_uring_queue_async_work(void *, void *, int, void *, struct io_wq_work *, unsigned int);
67:	static void perf_trace_io_uring_register(void *, void *, unsigned int, unsigned int, unsigned int, bool, long);
360:	static void perf_trace_io_uring_submit_sqe(void *, void *, u8, u64, bool, bool);
443:	static void perf_trace_io_uring_task_add(void *, void *, u8, u64, int);
469:	static void perf_trace_io_uring_task_run(void *, void *, u8, u64);
240:	static int trace_event_define_fields_io_uring_add_to_prev(struct trace_event_call *);
324:	static int trace_event_define_fields_io_uring_complete(struct trace_event_call *);
269:	static int trace_event_define_fields_io_uring_cqring_wait(struct trace_event_call *);
24:	static int trace_event_define_fields_io_uring_create(struct trace_event_call *);
175:	static int trace_event_define_fields_io_uring_defer(struct trace_event_call *);
297:	static int trace_event_define_fields_io_uring_fail_link(struct trace_event_call *);
108:	static int trace_event_define_fields_io_uring_file_get(struct trace_event_call *);
208:	static int trace_event_define_fields_io_uring_link(struct trace_event_call *);
389:	static int trace_event_define_fields_io_uring_poll_arm(struct trace_event_call *);
417:	static int trace_event_define_fields_io_uring_poll_wake(struct trace_event_call *);
137:	static int trace_event_define_fields_io_uring_queue_async_work(struct trace_event_call *);
67:	static int trace_event_define_fields_io_uring_register(struct trace_event_call *);
360:	static int trace_event_define_fields_io_uring_submit_sqe(struct trace_event_call *);
443:	static int trace_event_define_fields_io_uring_task_add(struct trace_event_call *);
469:	static int trace_event_define_fields_io_uring_task_run(struct trace_event_call *);
240:	static void trace_event_raw_event_io_uring_add_to_prev(void *, void *, bool);
324:	static void trace_event_raw_event_io_uring_complete(void *, void *, u64, long);
269:	static void trace_event_raw_event_io_uring_cqring_wait(void *, void *, int);
24:	static void trace_event_raw_event_io_uring_create(void *, int, void *, u32, u32, u32);
175:	static void trace_event_raw_event_io_uring_defer(void *, void *, void *, unsigned long long);
297:	static void trace_event_raw_event_io_uring_fail_link(void *, void *, void *);
108:	static void trace_event_raw_event_io_uring_file_get(void *, void *, int);
208:	static void trace_event_raw_event_io_uring_link(void *, void *, void *, void *);
389:	static void trace_event_raw_event_io_uring_poll_arm(void *, void *, u8, u64, int, int);
417:	static void trace_event_raw_event_io_uring_poll_wake(void *, void *, u8, u64, int);
137:	static void trace_event_raw_event_io_uring_queue_async_work(void *, void *, int, void *, struct io_wq_work *, unsigned int);
67:	static void trace_event_raw_event_io_uring_register(void *, void *, unsigned int, unsigned int, unsigned int, bool, long);
360:	static void trace_event_raw_event_io_uring_submit_sqe(void *, void *, u8, u64, bool, bool);
443:	static void trace_event_raw_event_io_uring_task_add(void *, void *, u8, u64, int);
469:	static void trace_event_raw_event_io_uring_task_run(void *, void *, u8, u64);
240:	static enum print_line_t trace_raw_output_io_uring_add_to_prev(struct trace_iterator *, int, struct trace_event *);
324:	static enum print_line_t trace_raw_output_io_uring_complete(struct trace_iterator *, int, struct trace_event *);
269:	static enum print_line_t trace_raw_output_io_uring_cqring_wait(struct trace_iterator *, int, struct trace_event *);
24:	static enum print_line_t trace_raw_output_io_uring_create(struct trace_iterator *, int, struct trace_event *);
175:	static enum print_line_t trace_raw_output_io_uring_defer(struct trace_iterator *, int, struct trace_event *);
297:	static enum print_line_t trace_raw_output_io_uring_fail_link(struct trace_iterator *, int, struct trace_event *);
108:	static enum print_line_t trace_raw_output_io_uring_file_get(struct trace_iterator *, int, struct trace_event *);
208:	static enum print_line_t trace_raw_output_io_uring_link(struct trace_iterator *, int, struct trace_event *);
389:	static enum print_line_t trace_raw_output_io_uring_poll_arm(struct trace_iterator *, int, struct trace_event *);
417:	static enum print_line_t trace_raw_output_io_uring_poll_wake(struct trace_iterator *, int, struct trace_event *);
137:	static enum print_line_t trace_raw_output_io_uring_queue_async_work(struct trace_iterator *, int, struct trace_event *);
67:	static enum print_line_t trace_raw_output_io_uring_register(struct trace_iterator *, int, struct trace_event *);
360:	static enum print_line_t trace_raw_output_io_uring_submit_sqe(struct trace_iterator *, int, struct trace_event *);
443:	static enum print_line_t trace_raw_output_io_uring_task_add(struct trace_iterator *, int, struct trace_event *);
469:	static enum print_line_t trace_raw_output_io_uring_task_run(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/iommu.h:
167:	static void __bpf_trace_dev_fault(void *, struct device *, struct iommu_fault_event *);
207:	static void __bpf_trace_dev_page_response(void *, struct device *, struct page_response_msg *);
56:	static void __bpf_trace_iommu_device_event(void *, struct device *);
134:	static void __bpf_trace_iommu_error(void *, struct device *, unsigned long, int);
20:	static void __bpf_trace_iommu_group_event(void *, int, struct device *);
88:	static void __bpf_trace_map(void *, unsigned long, phys_addr_t, size_t);
238:	static void __bpf_trace_sva_invalidate(void *, struct device *, struct tlb_invalidate_info *);
111:	static void __bpf_trace_unmap(void *, unsigned long, size_t, size_t);
167:	static void perf_trace_dev_fault(void *, struct device *, struct iommu_fault_event *);
207:	static void perf_trace_dev_page_response(void *, struct device *, struct page_response_msg *);
56:	static void perf_trace_iommu_device_event(void *, struct device *);
134:	static void perf_trace_iommu_error(void *, struct device *, unsigned long, int);
20:	static void perf_trace_iommu_group_event(void *, int, struct device *);
88:	static void perf_trace_map(void *, unsigned long, phys_addr_t, size_t);
238:	static void perf_trace_sva_invalidate(void *, struct device *, struct tlb_invalidate_info *);
111:	static void perf_trace_unmap(void *, unsigned long, size_t, size_t);
167:	static int trace_event_define_fields_dev_fault(struct trace_event_call *);
207:	static int trace_event_define_fields_dev_page_response(struct trace_event_call *);
56:	static int trace_event_define_fields_iommu_device_event(struct trace_event_call *);
134:	static int trace_event_define_fields_iommu_error(struct trace_event_call *);
20:	static int trace_event_define_fields_iommu_group_event(struct trace_event_call *);
88:	static int trace_event_define_fields_map(struct trace_event_call *);
238:	static int trace_event_define_fields_sva_invalidate(struct trace_event_call *);
111:	static int trace_event_define_fields_unmap(struct trace_event_call *);
167:	static void trace_event_raw_event_dev_fault(void *, struct device *, struct iommu_fault_event *);
207:	static void trace_event_raw_event_dev_page_response(void *, struct device *, struct page_response_msg *);
56:	static void trace_event_raw_event_iommu_device_event(void *, struct device *);
134:	static void trace_event_raw_event_iommu_error(void *, struct device *, unsigned long, int);
20:	static void trace_event_raw_event_iommu_group_event(void *, int, struct device *);
88:	static void trace_event_raw_event_map(void *, unsigned long, phys_addr_t, size_t);
238:	static void trace_event_raw_event_sva_invalidate(void *, struct device *, struct tlb_invalidate_info *);
111:	static void trace_event_raw_event_unmap(void *, unsigned long, size_t, size_t);
167:	static enum print_line_t trace_raw_output_dev_fault(struct trace_iterator *, int, struct trace_event *);
207:	static enum print_line_t trace_raw_output_dev_page_response(struct trace_iterator *, int, struct trace_event *);
56:	static enum print_line_t trace_raw_output_iommu_device_event(struct trace_iterator *, int, struct trace_event *);
134:	static enum print_line_t trace_raw_output_iommu_error(struct trace_iterator *, int, struct trace_event *);
20:	static enum print_line_t trace_raw_output_iommu_group_event(struct trace_iterator *, int, struct trace_event *);
88:	static enum print_line_t trace_raw_output_map(struct trace_iterator *, int, struct trace_event *);
238:	static enum print_line_t trace_raw_output_sva_invalidate(struct trace_iterator *, int, struct trace_event *);
111:	static enum print_line_t trace_raw_output_unmap(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/irq.h:
53:	static void __bpf_trace_irq_handler_entry(void *, int, struct irqaction *);
83:	static void __bpf_trace_irq_handler_exit(void *, int, struct irqaction *, int);
103:	static void __bpf_trace_softirq(void *, unsigned int);
53:	static void perf_trace_irq_handler_entry(void *, int, struct irqaction *);
83:	static void perf_trace_irq_handler_exit(void *, int, struct irqaction *, int);
103:	static void perf_trace_softirq(void *, unsigned int);
53:	static int trace_event_define_fields_irq_handler_entry(struct trace_event_call *);
83:	static int trace_event_define_fields_irq_handler_exit(struct trace_event_call *);
103:	static int trace_event_define_fields_softirq(struct trace_event_call *);
53:	static void trace_event_raw_event_irq_handler_entry(void *, int, struct irqaction *);
83:	static void trace_event_raw_event_irq_handler_exit(void *, int, struct irqaction *, int);
103:	static void trace_event_raw_event_softirq(void *, unsigned int);
53:	static enum print_line_t trace_raw_output_irq_handler_entry(struct trace_iterator *, int, struct trace_event *);
83:	static enum print_line_t trace_raw_output_irq_handler_exit(struct trace_iterator *, int, struct trace_event *);
103:	static enum print_line_t trace_raw_output_softirq(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/irq_matrix.h:
65:	static void __bpf_trace_irq_matrix_cpu(void *, int, unsigned int, struct irq_matrix *, struct cpumap *);
12:	static void __bpf_trace_irq_matrix_global(void *, struct irq_matrix *);
37:	static void __bpf_trace_irq_matrix_global_update(void *, int, struct irq_matrix *);
65:	static void perf_trace_irq_matrix_cpu(void *, int, unsigned int, struct irq_matrix *, struct cpumap *);
12:	static void perf_trace_irq_matrix_global(void *, struct irq_matrix *);
37:	static void perf_trace_irq_matrix_global_update(void *, int, struct irq_matrix *);
65:	static int trace_event_define_fields_irq_matrix_cpu(struct trace_event_call *);
12:	static int trace_event_define_fields_irq_matrix_global(struct trace_event_call *);
37:	static int trace_event_define_fields_irq_matrix_global_update(struct trace_event_call *);
65:	static void trace_event_raw_event_irq_matrix_cpu(void *, int, unsigned int, struct irq_matrix *, struct cpumap *);
12:	static void trace_event_raw_event_irq_matrix_global(void *, struct irq_matrix *);
37:	static void trace_event_raw_event_irq_matrix_global_update(void *, int, struct irq_matrix *);
65:	static enum print_line_t trace_raw_output_irq_matrix_cpu(struct trace_iterator *, int, struct trace_event *);
12:	static enum print_line_t trace_raw_output_irq_matrix_global(struct trace_iterator *, int, struct trace_event *);
37:	static enum print_line_t trace_raw_output_irq_matrix_global_update(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/kmem.h:
12:	static void __bpf_trace_kmem_alloc(void *, unsigned long, const void *, size_t, size_t, gfp_t);
62:	static void __bpf_trace_kmem_alloc_node(void *, unsigned long, const void *, size_t, size_t, gfp_t, int);
118:	static void __bpf_trace_kmem_free(void *, unsigned long, const void *);
221:	static void __bpf_trace_mm_page(void *, struct page *, unsigned int, int);
192:	static void __bpf_trace_mm_page_alloc(void *, struct page *, unsigned int, gfp_t, int);
277:	static void __bpf_trace_mm_page_alloc_extfrag(void *, struct page *, int, int, int, int);
151:	static void __bpf_trace_mm_page_free(void *, struct page *, unsigned int);
173:	static void __bpf_trace_mm_page_free_batched(void *, struct page *);
12:	static void perf_trace_kmem_alloc(void *, unsigned long, const void *, size_t, size_t, gfp_t);
62:	static void perf_trace_kmem_alloc_node(void *, unsigned long, const void *, size_t, size_t, gfp_t, int);
118:	static void perf_trace_kmem_free(void *, unsigned long, const void *);
221:	static void perf_trace_mm_page(void *, struct page *, unsigned int, int);
192:	static void perf_trace_mm_page_alloc(void *, struct page *, unsigned int, gfp_t, int);
277:	static void perf_trace_mm_page_alloc_extfrag(void *, struct page *, int, int, int, int);
151:	static void perf_trace_mm_page_free(void *, struct page *, unsigned int);
173:	static void perf_trace_mm_page_free_batched(void *, struct page *);
254:	static void perf_trace_mm_page_pcpu_drain(void *, struct page *, unsigned int, int);
12:	static int trace_event_define_fields_kmem_alloc(struct trace_event_call *);
62:	static int trace_event_define_fields_kmem_alloc_node(struct trace_event_call *);
118:	static int trace_event_define_fields_kmem_free(struct trace_event_call *);
221:	static int trace_event_define_fields_mm_page(struct trace_event_call *);
192:	static int trace_event_define_fields_mm_page_alloc(struct trace_event_call *);
277:	static int trace_event_define_fields_mm_page_alloc_extfrag(struct trace_event_call *);
151:	static int trace_event_define_fields_mm_page_free(struct trace_event_call *);
173:	static int trace_event_define_fields_mm_page_free_batched(struct trace_event_call *);
254:	static int trace_event_define_fields_mm_page_pcpu_drain(struct trace_event_call *);
12:	static void trace_event_raw_event_kmem_alloc(void *, unsigned long, const void *, size_t, size_t, gfp_t);
62:	static void trace_event_raw_event_kmem_alloc_node(void *, unsigned long, const void *, size_t, size_t, gfp_t, int);
118:	static void trace_event_raw_event_kmem_free(void *, unsigned long, const void *);
221:	static void trace_event_raw_event_mm_page(void *, struct page *, unsigned int, int);
192:	static void trace_event_raw_event_mm_page_alloc(void *, struct page *, unsigned int, gfp_t, int);
277:	static void trace_event_raw_event_mm_page_alloc_extfrag(void *, struct page *, int, int, int, int);
151:	static void trace_event_raw_event_mm_page_free(void *, struct page *, unsigned int);
173:	static void trace_event_raw_event_mm_page_free_batched(void *, struct page *);
254:	static void trace_event_raw_event_mm_page_pcpu_drain(void *, struct page *, unsigned int, int);
12:	static enum print_line_t trace_raw_output_kmem_alloc(struct trace_iterator *, int, struct trace_event *);
62:	static enum print_line_t trace_raw_output_kmem_alloc_node(struct trace_iterator *, int, struct trace_event *);
118:	static enum print_line_t trace_raw_output_kmem_free(struct trace_iterator *, int, struct trace_event *);
221:	static enum print_line_t trace_raw_output_mm_page(struct trace_iterator *, int, struct trace_event *);
192:	static enum print_line_t trace_raw_output_mm_page_alloc(struct trace_iterator *, int, struct trace_event *);
277:	static enum print_line_t trace_raw_output_mm_page_alloc_extfrag(struct trace_iterator *, int, struct trace_event *);
151:	static enum print_line_t trace_raw_output_mm_page_free(struct trace_iterator *, int, struct trace_event *);
173:	static enum print_line_t trace_raw_output_mm_page_free_batched(struct trace_iterator *, int, struct trace_event *);
254:	static enum print_line_t trace_raw_output_mm_page_pcpu_drain(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/mce.h:
12:	static void __bpf_trace_mce_record(void *, struct mce *);
12:	static void perf_trace_mce_record(void *, struct mce *);
12:	static int trace_event_define_fields_mce_record(struct trace_event_call *);
12:	static void trace_event_raw_event_mce_record(void *, struct mce *);
12:	static enum print_line_t trace_raw_output_mce_record(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/mdio.h:
10:	static void __bpf_trace_mdio_access(void *, struct mii_bus *, char, u8, unsigned int, u16, int);
10:	static void perf_trace_mdio_access(void *, struct mii_bus *, char, u8, unsigned int, u16, int);
10:	static int trace_event_define_fields_mdio_access(struct trace_event_call *);
10:	static void trace_event_raw_event_mdio_access(void *, struct mii_bus *, char, u8, unsigned int, u16, int);
10:	static enum print_line_t trace_raw_output_mdio_access(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/migrate.h:
46:	static void __bpf_trace_mm_migrate_pages(void *, unsigned long, unsigned long, enum migrate_mode, int);
46:	static void perf_trace_mm_migrate_pages(void *, unsigned long, unsigned long, enum migrate_mode, int);
46:	static int trace_event_define_fields_mm_migrate_pages(struct trace_event_call *);
46:	static void trace_event_raw_event_mm_migrate_pages(void *, unsigned long, unsigned long, enum migrate_mode, int);
46:	static enum print_line_t trace_raw_output_mm_migrate_pages(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/module.h:
31:	static void __bpf_trace_module_load(void *, struct module *);
70:	static void __bpf_trace_module_refcnt(void *, struct module *, unsigned long);
107:	static void __bpf_trace_module_request(void *, char *, bool, unsigned long);
50:	static void perf_trace_module_free(void *, struct module *);
31:	static void perf_trace_module_load(void *, struct module *);
70:	static void perf_trace_module_refcnt(void *, struct module *, unsigned long);
107:	static void perf_trace_module_request(void *, char *, bool, unsigned long);
50:	static int trace_event_define_fields_module_free(struct trace_event_call *);
31:	static int trace_event_define_fields_module_load(struct trace_event_call *);
70:	static int trace_event_define_fields_module_refcnt(struct trace_event_call *);
107:	static int trace_event_define_fields_module_request(struct trace_event_call *);
50:	static void trace_event_raw_event_module_free(void *, struct module *);
31:	static void trace_event_raw_event_module_load(void *, struct module *);
70:	static void trace_event_raw_event_module_refcnt(void *, struct module *, unsigned long);
107:	static void trace_event_raw_event_module_request(void *, char *, bool, unsigned long);
50:	static enum print_line_t trace_raw_output_module_free(struct trace_iterator *, int, struct trace_event *);
31:	static enum print_line_t trace_raw_output_module_load(struct trace_iterator *, int, struct trace_event *);
70:	static enum print_line_t trace_raw_output_module_refcnt(struct trace_iterator *, int, struct trace_event *);
107:	static enum print_line_t trace_raw_output_module_request(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/napi.h:
14:	static void __bpf_trace_napi_poll(void *, struct napi_struct *, int, int);
14:	static void perf_trace_napi_poll(void *, struct napi_struct *, int, int);
14:	static int trace_event_define_fields_napi_poll(struct trace_event_call *);
14:	static void trace_event_raw_event_napi_poll(void *, struct napi_struct *, int, int);
14:	static enum print_line_t trace_raw_output_napi_poll(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/net.h:
14:	static void __bpf_trace_net_dev_start_xmit(void *, const struct sk_buff *, const struct net_device *);
71:	static void __bpf_trace_net_dev_xmit(void *, struct sk_buff *, int, struct net_device *, unsigned int);
141:	static void perf_trace_net_dev_rx_verbose_template(void *, const struct sk_buff *);
14:	static void perf_trace_net_dev_start_xmit(void *, const struct sk_buff *, const struct net_device *);
98:	static void perf_trace_net_dev_template(void *, struct sk_buff *);
71:	static void perf_trace_net_dev_xmit(void *, struct sk_buff *, int, struct net_device *, unsigned int);
141:	static int trace_event_define_fields_net_dev_rx_verbose_template(struct trace_event_call *);
14:	static int trace_event_define_fields_net_dev_start_xmit(struct trace_event_call *);
98:	static int trace_event_define_fields_net_dev_template(struct trace_event_call *);
71:	static int trace_event_define_fields_net_dev_xmit(struct trace_event_call *);
141:	static void trace_event_raw_event_net_dev_rx_verbose_template(void *, const struct sk_buff *);
14:	static void trace_event_raw_event_net_dev_start_xmit(void *, const struct sk_buff *, const struct net_device *);
98:	static void trace_event_raw_event_net_dev_template(void *, struct sk_buff *);
71:	static void trace_event_raw_event_net_dev_xmit(void *, struct sk_buff *, int, struct net_device *, unsigned int);
141:	static enum print_line_t trace_raw_output_net_dev_rx_verbose_template(struct trace_iterator *, int, struct trace_event *);
14:	static enum print_line_t trace_raw_output_net_dev_start_xmit(struct trace_iterator *, int, struct trace_event *);
98:	static enum print_line_t trace_raw_output_net_dev_template(struct trace_iterator *, int, struct trace_event *);
71:	static enum print_line_t trace_raw_output_net_dev_xmit(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/nmi.h:
11:	static void __bpf_trace_nmi_handler(void *, void *, s64, int);
11:	static void perf_trace_nmi_handler(void *, void *, s64, int);
11:	static int trace_event_define_fields_nmi_handler(struct trace_event_call *);
11:	static void trace_event_raw_event_nmi_handler(void *, void *, s64, int);
11:	static enum print_line_t trace_raw_output_nmi_handler(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/oom.h:
155:	static void __bpf_trace_compact_retry(void *, int, enum compact_priority, enum compact_result, int, int, bool);
74:	static void __bpf_trace_mark_victim(void *, int);
10:	static void __bpf_trace_oom_score_adj_update(void *, struct task_struct *);
32:	static void __bpf_trace_reclaim_retry_zone(void *, struct zoneref *, int, unsigned long, unsigned long, unsigned long, int, bool);
155:	static void perf_trace_compact_retry(void *, int, enum compact_priority, enum compact_result, int, int, bool);
122:	static void perf_trace_finish_task_reaping(void *, int);
74:	static void perf_trace_mark_victim(void *, int);
10:	static void perf_trace_oom_score_adj_update(void *, struct task_struct *);
32:	static void perf_trace_reclaim_retry_zone(void *, struct zoneref *, int, unsigned long, unsigned long, unsigned long, int, bool);
138:	static void perf_trace_skip_task_reaping(void *, int);
106:	static void perf_trace_start_task_reaping(void *, int);
90:	static void perf_trace_wake_reaper(void *, int);
155:	static int trace_event_define_fields_compact_retry(struct trace_event_call *);
74:	static int trace_event_define_fields_mark_victim(struct trace_event_call *);
10:	static int trace_event_define_fields_oom_score_adj_update(struct trace_event_call *);
32:	static int trace_event_define_fields_reclaim_retry_zone(struct trace_event_call *);
155:	static void trace_event_raw_event_compact_retry(void *, int, enum compact_priority, enum compact_result, int, int, bool);
122:	static void trace_event_raw_event_finish_task_reaping(void *, int);
74:	static void trace_event_raw_event_mark_victim(void *, int);
10:	static void trace_event_raw_event_oom_score_adj_update(void *, struct task_struct *);
32:	static void trace_event_raw_event_reclaim_retry_zone(void *, struct zoneref *, int, unsigned long, unsigned long, unsigned long, int, bool);
138:	static void trace_event_raw_event_skip_task_reaping(void *, int);
106:	static void trace_event_raw_event_start_task_reaping(void *, int);
90:	static void trace_event_raw_event_wake_reaper(void *, int);
155:	static enum print_line_t trace_raw_output_compact_retry(struct trace_iterator *, int, struct trace_event *);
122:	static enum print_line_t trace_raw_output_finish_task_reaping(struct trace_iterator *, int, struct trace_event *);
74:	static enum print_line_t trace_raw_output_mark_victim(struct trace_iterator *, int, struct trace_event *);
10:	static enum print_line_t trace_raw_output_oom_score_adj_update(struct trace_iterator *, int, struct trace_event *);
32:	static enum print_line_t trace_raw_output_reclaim_retry_zone(struct trace_iterator *, int, struct trace_event *);
138:	static enum print_line_t trace_raw_output_skip_task_reaping(struct trace_iterator *, int, struct trace_event *);
106:	static enum print_line_t trace_raw_output_start_task_reaping(struct trace_iterator *, int, struct trace_event *);
90:	static enum print_line_t trace_raw_output_wake_reaper(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/page_isolation.h:
10:	static void __bpf_trace_test_pages_isolated(void *, unsigned long, unsigned long, unsigned long);
10:	static void perf_trace_test_pages_isolated(void *, unsigned long, unsigned long, unsigned long);
10:	static int trace_event_define_fields_test_pages_isolated(struct trace_event_call *);
10:	static void trace_event_raw_event_test_pages_isolated(void *, unsigned long, unsigned long, unsigned long);
10:	static enum print_line_t trace_raw_output_test_pages_isolated(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/pagemap.h:
64:	static void __bpf_trace_mm_lru_activate(void *, struct page *);
28:	static void __bpf_trace_mm_lru_insertion(void *, struct page *, int);
64:	static void perf_trace_mm_lru_activate(void *, struct page *);
28:	static void perf_trace_mm_lru_insertion(void *, struct page *, int);
64:	static int trace_event_define_fields_mm_lru_activate(struct trace_event_call *);
28:	static int trace_event_define_fields_mm_lru_insertion(struct trace_event_call *);
64:	static void trace_event_raw_event_mm_lru_activate(void *, struct page *);
28:	static void trace_event_raw_event_mm_lru_insertion(void *, struct page *, int);
64:	static enum print_line_t trace_raw_output_mm_lru_activate(struct trace_iterator *, int, struct trace_event *);
28:	static enum print_line_t trace_raw_output_mm_lru_insertion(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/percpu.h:
10:	static void __bpf_trace_percpu_alloc_percpu(void *, bool, bool, size_t, size_t, void *, int, void *);
65:	static void __bpf_trace_percpu_alloc_percpu_fail(void *, bool, bool, size_t, size_t);
90:	static void __bpf_trace_percpu_create_chunk(void *, void *);
43:	static void __bpf_trace_percpu_free_percpu(void *, void *, int, void *);
10:	static void perf_trace_percpu_alloc_percpu(void *, bool, bool, size_t, size_t, void *, int, void *);
65:	static void perf_trace_percpu_alloc_percpu_fail(void *, bool, bool, size_t, size_t);
90:	static void perf_trace_percpu_create_chunk(void *, void *);
107:	static void perf_trace_percpu_destroy_chunk(void *, void *);
43:	static void perf_trace_percpu_free_percpu(void *, void *, int, void *);
10:	static int trace_event_define_fields_percpu_alloc_percpu(struct trace_event_call *);
65:	static int trace_event_define_fields_percpu_alloc_percpu_fail(struct trace_event_call *);
90:	static int trace_event_define_fields_percpu_create_chunk(struct trace_event_call *);
43:	static int trace_event_define_fields_percpu_free_percpu(struct trace_event_call *);
10:	static void trace_event_raw_event_percpu_alloc_percpu(void *, bool, bool, size_t, size_t, void *, int, void *);
65:	static void trace_event_raw_event_percpu_alloc_percpu_fail(void *, bool, bool, size_t, size_t);
90:	static void trace_event_raw_event_percpu_create_chunk(void *, void *);
107:	static void trace_event_raw_event_percpu_destroy_chunk(void *, void *);
43:	static void trace_event_raw_event_percpu_free_percpu(void *, void *, int, void *);
90:	static void trace_percpu_create_chunk(void *);
10:	static enum print_line_t trace_raw_output_percpu_alloc_percpu(struct trace_iterator *, int, struct trace_event *);
65:	static enum print_line_t trace_raw_output_percpu_alloc_percpu_fail(struct trace_iterator *, int, struct trace_event *);
90:	static enum print_line_t trace_raw_output_percpu_create_chunk(struct trace_iterator *, int, struct trace_event *);
107:	static enum print_line_t trace_raw_output_percpu_destroy_chunk(struct trace_iterator *, int, struct trace_event *);
43:	static enum print_line_t trace_raw_output_percpu_free_percpu(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/power.h:
286:	static void __bpf_trace_clock(void *, const char *, unsigned int, unsigned int);
16:	static void __bpf_trace_cpu(void *, unsigned int, unsigned int);
152:	static void __bpf_trace_cpu_frequency_limits(void *, struct cpufreq_policy *);
482:	static void __bpf_trace_dev_pm_qos_request(void *, const char *, enum dev_pm_qos_req_type, s32);
204:	static void __bpf_trace_device_pm_callback_end(void *, struct device *, int);
176:	static void __bpf_trace_device_pm_callback_start(void *, struct device *, const char *, int);
364:	static void __bpf_trace_pm_qos_request(void *, int, s32);
435:	static void __bpf_trace_pm_qos_update(void *, enum pm_qos_req_action, int, int);
409:	static void __bpf_trace_pm_qos_update_request_timeout(void *, int, s32, unsigned long);
43:	static void __bpf_trace_powernv_throttle(void *, int, const char *, int);
65:	static void __bpf_trace_pstate_sample(void *, u32, u32, u32, u32, u64, u64, u64, u32, u32);
226:	static void __bpf_trace_suspend_resume(void *, const char *, int, bool);
248:	static void __bpf_trace_wakeup_source(void *, const char *, unsigned int);
286:	static void perf_trace_clock(void *, const char *, unsigned int, unsigned int);
16:	static void perf_trace_cpu(void *, unsigned int, unsigned int);
152:	static void perf_trace_cpu_frequency_limits(void *, struct cpufreq_policy *);
482:	static void perf_trace_dev_pm_qos_request(void *, const char *, enum dev_pm_qos_req_type, s32);
204:	static void perf_trace_device_pm_callback_end(void *, struct device *, int);
176:	static void perf_trace_device_pm_callback_start(void *, struct device *, const char *, int);
364:	static void perf_trace_pm_qos_request(void *, int, s32);
435:	static void perf_trace_pm_qos_update(void *, enum pm_qos_req_action, int, int);
409:	static void perf_trace_pm_qos_update_request_timeout(void *, int, s32, unsigned long);
332:	static void perf_trace_power_domain(void *, const char *, unsigned int, unsigned int);
43:	static void perf_trace_powernv_throttle(void *, int, const char *, int);
65:	static void perf_trace_pstate_sample(void *, u32, u32, u32, u32, u64, u64, u64, u32, u32);
226:	static void perf_trace_suspend_resume(void *, const char *, int, bool);
248:	static void perf_trace_wakeup_source(void *, const char *, unsigned int);
286:	static int trace_event_define_fields_clock(struct trace_event_call *);
16:	static int trace_event_define_fields_cpu(struct trace_event_call *);
152:	static int trace_event_define_fields_cpu_frequency_limits(struct trace_event_call *);
482:	static int trace_event_define_fields_dev_pm_qos_request(struct trace_event_call *);
204:	static int trace_event_define_fields_device_pm_callback_end(struct trace_event_call *);
176:	static int trace_event_define_fields_device_pm_callback_start(struct trace_event_call *);
364:	static int trace_event_define_fields_pm_qos_request(struct trace_event_call *);
435:	static int trace_event_define_fields_pm_qos_update(struct trace_event_call *);
409:	static int trace_event_define_fields_pm_qos_update_request_timeout(struct trace_event_call *);
332:	static int trace_event_define_fields_power_domain(struct trace_event_call *);
43:	static int trace_event_define_fields_powernv_throttle(struct trace_event_call *);
65:	static int trace_event_define_fields_pstate_sample(struct trace_event_call *);
226:	static int trace_event_define_fields_suspend_resume(struct trace_event_call *);
248:	static int trace_event_define_fields_wakeup_source(struct trace_event_call *);
286:	static void trace_event_raw_event_clock(void *, const char *, unsigned int, unsigned int);
16:	static void trace_event_raw_event_cpu(void *, unsigned int, unsigned int);
152:	static void trace_event_raw_event_cpu_frequency_limits(void *, struct cpufreq_policy *);
482:	static void trace_event_raw_event_dev_pm_qos_request(void *, const char *, enum dev_pm_qos_req_type, s32);
204:	static void trace_event_raw_event_device_pm_callback_end(void *, struct device *, int);
176:	static void trace_event_raw_event_device_pm_callback_start(void *, struct device *, const char *, int);
364:	static void trace_event_raw_event_pm_qos_request(void *, int, s32);
435:	static void trace_event_raw_event_pm_qos_update(void *, enum pm_qos_req_action, int, int);
409:	static void trace_event_raw_event_pm_qos_update_request_timeout(void *, int, s32, unsigned long);
332:	static void trace_event_raw_event_power_domain(void *, const char *, unsigned int, unsigned int);
43:	static void trace_event_raw_event_powernv_throttle(void *, int, const char *, int);
65:	static void trace_event_raw_event_pstate_sample(void *, u32, u32, u32, u32, u64, u64, u64, u32, u32);
226:	static void trace_event_raw_event_suspend_resume(void *, const char *, int, bool);
248:	static void trace_event_raw_event_wakeup_source(void *, const char *, unsigned int);
286:	static enum print_line_t trace_raw_output_clock(struct trace_iterator *, int, struct trace_event *);
16:	static enum print_line_t trace_raw_output_cpu(struct trace_iterator *, int, struct trace_event *);
152:	static enum print_line_t trace_raw_output_cpu_frequency_limits(struct trace_iterator *, int, struct trace_event *);
482:	static enum print_line_t trace_raw_output_dev_pm_qos_request(struct trace_iterator *, int, struct trace_event *);
204:	static enum print_line_t trace_raw_output_device_pm_callback_end(struct trace_iterator *, int, struct trace_event *);
176:	static enum print_line_t trace_raw_output_device_pm_callback_start(struct trace_iterator *, int, struct trace_event *);
364:	static enum print_line_t trace_raw_output_pm_qos_request(struct trace_iterator *, int, struct trace_event *);
435:	static enum print_line_t trace_raw_output_pm_qos_update(struct trace_iterator *, int, struct trace_event *);
468:	static enum print_line_t trace_raw_output_pm_qos_update_flags(struct trace_iterator *, int, struct trace_event *);
409:	static enum print_line_t trace_raw_output_pm_qos_update_request_timeout(struct trace_iterator *, int, struct trace_event *);
332:	static enum print_line_t trace_raw_output_power_domain(struct trace_iterator *, int, struct trace_event *);
43:	static enum print_line_t trace_raw_output_powernv_throttle(struct trace_iterator *, int, struct trace_event *);
65:	static enum print_line_t trace_raw_output_pstate_sample(struct trace_iterator *, int, struct trace_event *);
226:	static enum print_line_t trace_raw_output_suspend_resume(struct trace_iterator *, int, struct trace_event *);
248:	static enum print_line_t trace_raw_output_wakeup_source(struct trace_iterator *, int, struct trace_event *);
226:	static void trace_suspend_resume(const char *, int, bool);

File ./include/trace/events/printk.h:
10:	static void __bpf_trace_console(void *, const char *, size_t);
10:	static void perf_trace_console(void *, const char *, size_t);
10:	static int trace_event_define_fields_console(struct trace_event_call *);
10:	static void trace_event_raw_event_console(void *, const char *, size_t);
10:	static enum print_line_t trace_raw_output_console(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/qdisc.h:
12:	static void __bpf_trace_qdisc_dequeue(void *, struct Qdisc *, const struct netdev_queue *, int, struct sk_buff *);
12:	static void perf_trace_qdisc_dequeue(void *, struct Qdisc *, const struct netdev_queue *, int, struct sk_buff *);
12:	static int trace_event_define_fields_qdisc_dequeue(struct trace_event_call *);
12:	static void trace_event_raw_event_qdisc_dequeue(void *, struct Qdisc *, const struct netdev_queue *, int, struct sk_buff *);
12:	static enum print_line_t trace_raw_output_qdisc_dequeue(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/random.h:
11:	static void __bpf_trace_add_device_randomness(void *, int, unsigned long);
145:	static void __bpf_trace_add_disk_randomness(void *, dev_t, int);
129:	static void __bpf_trace_add_input_randomness(void *, int);
63:	static void __bpf_trace_credit_entropy_bits(void *, const char *, int, int, unsigned long);
110:	static void __bpf_trace_debit_entropy(void *, const char *, int);
88:	static void __bpf_trace_push_to_pool(void *, const char *, int, int);
30:	static void __bpf_trace_random__mix_pool_bytes(void *, const char *, int, unsigned long);
263:	static void __bpf_trace_random_read(void *, int, int, int, int);
288:	static void __bpf_trace_urandom_read(void *, int, int, int);
164:	static void __bpf_trace_xfer_secondary_pool(void *, const char *, int, int, int, int);
11:	static void perf_trace_add_device_randomness(void *, int, unsigned long);
145:	static void perf_trace_add_disk_randomness(void *, dev_t, int);
129:	static void perf_trace_add_input_randomness(void *, int);
63:	static void perf_trace_credit_entropy_bits(void *, const char *, int, int, unsigned long);
110:	static void perf_trace_debit_entropy(void *, const char *, int);
88:	static void perf_trace_push_to_pool(void *, const char *, int, int);
223:	static void perf_trace_random__extract_entropy(void *, const char *, int, int, unsigned long);
193:	static void perf_trace_random__get_random_bytes(void *, int, unsigned long);
30:	static void perf_trace_random__mix_pool_bytes(void *, const char *, int, unsigned long);
263:	static void perf_trace_random_read(void *, int, int, int, int);
288:	static void perf_trace_urandom_read(void *, int, int, int);
164:	static void perf_trace_xfer_secondary_pool(void *, const char *, int, int, int, int);
11:	static int trace_event_define_fields_add_device_randomness(struct trace_event_call *);
145:	static int trace_event_define_fields_add_disk_randomness(struct trace_event_call *);
129:	static int trace_event_define_fields_add_input_randomness(struct trace_event_call *);
63:	static int trace_event_define_fields_credit_entropy_bits(struct trace_event_call *);
110:	static int trace_event_define_fields_debit_entropy(struct trace_event_call *);
88:	static int trace_event_define_fields_push_to_pool(struct trace_event_call *);
223:	static int trace_event_define_fields_random__extract_entropy(struct trace_event_call *);
193:	static int trace_event_define_fields_random__get_random_bytes(struct trace_event_call *);
30:	static int trace_event_define_fields_random__mix_pool_bytes(struct trace_event_call *);
263:	static int trace_event_define_fields_random_read(struct trace_event_call *);
288:	static int trace_event_define_fields_urandom_read(struct trace_event_call *);
164:	static int trace_event_define_fields_xfer_secondary_pool(struct trace_event_call *);
11:	static void trace_event_raw_event_add_device_randomness(void *, int, unsigned long);
145:	static void trace_event_raw_event_add_disk_randomness(void *, dev_t, int);
129:	static void trace_event_raw_event_add_input_randomness(void *, int);
63:	static void trace_event_raw_event_credit_entropy_bits(void *, const char *, int, int, unsigned long);
110:	static void trace_event_raw_event_debit_entropy(void *, const char *, int);
88:	static void trace_event_raw_event_push_to_pool(void *, const char *, int, int);
223:	static void trace_event_raw_event_random__extract_entropy(void *, const char *, int, int, unsigned long);
193:	static void trace_event_raw_event_random__get_random_bytes(void *, int, unsigned long);
30:	static void trace_event_raw_event_random__mix_pool_bytes(void *, const char *, int, unsigned long);
263:	static void trace_event_raw_event_random_read(void *, int, int, int, int);
288:	static void trace_event_raw_event_urandom_read(void *, int, int, int);
164:	static void trace_event_raw_event_xfer_secondary_pool(void *, const char *, int, int, int, int);
11:	static enum print_line_t trace_raw_output_add_device_randomness(struct trace_iterator *, int, struct trace_event *);
145:	static enum print_line_t trace_raw_output_add_disk_randomness(struct trace_iterator *, int, struct trace_event *);
129:	static enum print_line_t trace_raw_output_add_input_randomness(struct trace_iterator *, int, struct trace_event *);
63:	static enum print_line_t trace_raw_output_credit_entropy_bits(struct trace_iterator *, int, struct trace_event *);
110:	static enum print_line_t trace_raw_output_debit_entropy(struct trace_iterator *, int, struct trace_event *);
88:	static enum print_line_t trace_raw_output_push_to_pool(struct trace_iterator *, int, struct trace_event *);
223:	static enum print_line_t trace_raw_output_random__extract_entropy(struct trace_iterator *, int, struct trace_event *);
193:	static enum print_line_t trace_raw_output_random__get_random_bytes(struct trace_iterator *, int, struct trace_event *);
30:	static enum print_line_t trace_raw_output_random__mix_pool_bytes(struct trace_iterator *, int, struct trace_event *);
263:	static enum print_line_t trace_raw_output_random_read(struct trace_iterator *, int, struct trace_event *);
288:	static enum print_line_t trace_raw_output_urandom_read(struct trace_iterator *, int, struct trace_event *);
164:	static enum print_line_t trace_raw_output_xfer_secondary_pool(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/rcu.h:
21:	static void __bpf_trace_rcu_utilization(void *, const char *);
21:	static void perf_trace_rcu_utilization(void *, const char *);
21:	static int trace_event_define_fields_rcu_utilization(struct trace_event_call *);
21:	static void trace_event_raw_event_rcu_utilization(void *, const char *);
21:	static enum print_line_t trace_raw_output_rcu_utilization(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/rpm.h:
18:	static void __bpf_trace_rpm_internal(void *, struct device *, int);
78:	static void __bpf_trace_rpm_return_int(void *, struct device *, unsigned long, int);
18:	static void perf_trace_rpm_internal(void *, struct device *, int);
78:	static void perf_trace_rpm_return_int(void *, struct device *, unsigned long, int);
18:	static int trace_event_define_fields_rpm_internal(struct trace_event_call *);
78:	static int trace_event_define_fields_rpm_return_int(struct trace_event_call *);
18:	static void trace_event_raw_event_rpm_internal(void *, struct device *, int);
78:	static void trace_event_raw_event_rpm_return_int(void *, struct device *, unsigned long, int);
18:	static enum print_line_t trace_raw_output_rpm_internal(struct trace_iterator *, int, struct trace_event *);
78:	static enum print_line_t trace_raw_output_rpm_return_int(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/rseq.h:
28:	static void __bpf_trace_rseq_ip_fixup(void *, unsigned long, unsigned long, unsigned long, unsigned long);
11:	static void __bpf_trace_rseq_update(void *, struct task_struct *);
28:	static void perf_trace_rseq_ip_fixup(void *, unsigned long, unsigned long, unsigned long, unsigned long);
11:	static void perf_trace_rseq_update(void *, struct task_struct *);
28:	static int trace_event_define_fields_rseq_ip_fixup(struct trace_event_call *);
11:	static int trace_event_define_fields_rseq_update(struct trace_event_call *);
28:	static void trace_event_raw_event_rseq_ip_fixup(void *, unsigned long, unsigned long, unsigned long, unsigned long);
11:	static void trace_event_raw_event_rseq_update(void *, struct task_struct *);
28:	static enum print_line_t trace_raw_output_rseq_ip_fixup(struct trace_iterator *, int, struct trace_event *);
11:	static enum print_line_t trace_raw_output_rseq_update(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/rtc.h:
102:	static void __bpf_trace_rtc_alarm_irq_enable(void *, unsigned int, int);
59:	static void __bpf_trace_rtc_irq_set_freq(void *, int, int);
124:	static void __bpf_trace_rtc_offset_class(void *, long, int);
10:	static void __bpf_trace_rtc_time_alarm_class(void *, time64_t, int);
159:	static void __bpf_trace_rtc_timer_class(void *, struct rtc_timer *);
102:	static void perf_trace_rtc_alarm_irq_enable(void *, unsigned int, int);
59:	static void perf_trace_rtc_irq_set_freq(void *, int, int);
80:	static void perf_trace_rtc_irq_set_state(void *, int, int);
124:	static void perf_trace_rtc_offset_class(void *, long, int);
10:	static void perf_trace_rtc_time_alarm_class(void *, time64_t, int);
159:	static void perf_trace_rtc_timer_class(void *, struct rtc_timer *);
102:	static int trace_event_define_fields_rtc_alarm_irq_enable(struct trace_event_call *);
59:	static int trace_event_define_fields_rtc_irq_set_freq(struct trace_event_call *);
80:	static int trace_event_define_fields_rtc_irq_set_state(struct trace_event_call *);
124:	static int trace_event_define_fields_rtc_offset_class(struct trace_event_call *);
10:	static int trace_event_define_fields_rtc_time_alarm_class(struct trace_event_call *);
159:	static int trace_event_define_fields_rtc_timer_class(struct trace_event_call *);
102:	static void trace_event_raw_event_rtc_alarm_irq_enable(void *, unsigned int, int);
59:	static void trace_event_raw_event_rtc_irq_set_freq(void *, int, int);
80:	static void trace_event_raw_event_rtc_irq_set_state(void *, int, int);
124:	static void trace_event_raw_event_rtc_offset_class(void *, long, int);
10:	static void trace_event_raw_event_rtc_time_alarm_class(void *, time64_t, int);
159:	static void trace_event_raw_event_rtc_timer_class(void *, struct rtc_timer *);
102:	static enum print_line_t trace_raw_output_rtc_alarm_irq_enable(struct trace_iterator *, int, struct trace_event *);
59:	static enum print_line_t trace_raw_output_rtc_irq_set_freq(struct trace_iterator *, int, struct trace_event *);
80:	static enum print_line_t trace_raw_output_rtc_irq_set_state(struct trace_iterator *, int, struct trace_event *);
124:	static enum print_line_t trace_raw_output_rtc_offset_class(struct trace_iterator *, int, struct trace_event *);
10:	static enum print_line_t trace_raw_output_rtc_time_alarm_class(struct trace_iterator *, int, struct trace_event *);
159:	static enum print_line_t trace_raw_output_rtc_timer_class(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/sched.h:
15:	static void __bpf_trace_sched_kthread_stop(void *, struct task_struct *);
37:	static void __bpf_trace_sched_kthread_stop_ret(void *, int);
189:	static void __bpf_trace_sched_migrate_task(void *, struct task_struct *, int);
483:	static void __bpf_trace_sched_move_task_template(void *, struct task_struct *, int, int);
316:	static void __bpf_trace_sched_process_exec(void *, struct task_struct *, pid_t, struct linux_binprm *);
288:	static void __bpf_trace_sched_process_fork(void *, struct task_struct *, struct task_struct *);
263:	static void __bpf_trace_sched_process_wait(void *, struct pid *);
402:	static void __bpf_trace_sched_stat_runtime(void *, struct task_struct *, u64, u64);
343:	static void __bpf_trace_sched_stat_template(void *, struct task_struct *, u64);
531:	static void __bpf_trace_sched_swap_numa(void *, struct task_struct *, int, struct task_struct *, int);
138:	static void __bpf_trace_sched_switch(void *, bool, struct task_struct *, struct task_struct *);
15:	static void perf_trace_sched_kthread_stop(void *, struct task_struct *);
37:	static void perf_trace_sched_kthread_stop_ret(void *, int);
189:	static void perf_trace_sched_migrate_task(void *, struct task_struct *, int);
483:	static void perf_trace_sched_move_task_template(void *, struct task_struct *, int, int);
436:	static void perf_trace_sched_pi_setprio(void *, struct task_struct *, struct task_struct *);
316:	static void perf_trace_sched_process_exec(void *, struct task_struct *, pid_t, struct linux_binprm *);
288:	static void perf_trace_sched_process_fork(void *, struct task_struct *, struct task_struct *);
465:	static void perf_trace_sched_process_hang(void *, struct task_struct *);
216:	static void perf_trace_sched_process_template(void *, struct task_struct *);
263:	static void perf_trace_sched_process_wait(void *, struct pid *);
402:	static void perf_trace_sched_stat_runtime(void *, struct task_struct *, u64, u64);
343:	static void perf_trace_sched_stat_template(void *, struct task_struct *, u64);
531:	static void perf_trace_sched_swap_numa(void *, struct task_struct *, int, struct task_struct *, int);
138:	static void perf_trace_sched_switch(void *, bool, struct task_struct *, struct task_struct *);
574:	static void perf_trace_sched_wake_idle_without_ipi(void *, int);
57:	static void perf_trace_sched_wakeup_template(void *, struct task_struct *);
15:	static int trace_event_define_fields_sched_kthread_stop(struct trace_event_call *);
37:	static int trace_event_define_fields_sched_kthread_stop_ret(struct trace_event_call *);
189:	static int trace_event_define_fields_sched_migrate_task(struct trace_event_call *);
483:	static int trace_event_define_fields_sched_move_task_template(struct trace_event_call *);
436:	static int trace_event_define_fields_sched_pi_setprio(struct trace_event_call *);
316:	static int trace_event_define_fields_sched_process_exec(struct trace_event_call *);
288:	static int trace_event_define_fields_sched_process_fork(struct trace_event_call *);
465:	static int trace_event_define_fields_sched_process_hang(struct trace_event_call *);
216:	static int trace_event_define_fields_sched_process_template(struct trace_event_call *);
263:	static int trace_event_define_fields_sched_process_wait(struct trace_event_call *);
402:	static int trace_event_define_fields_sched_stat_runtime(struct trace_event_call *);
343:	static int trace_event_define_fields_sched_stat_template(struct trace_event_call *);
531:	static int trace_event_define_fields_sched_swap_numa(struct trace_event_call *);
138:	static int trace_event_define_fields_sched_switch(struct trace_event_call *);
574:	static int trace_event_define_fields_sched_wake_idle_without_ipi(struct trace_event_call *);
57:	static int trace_event_define_fields_sched_wakeup_template(struct trace_event_call *);
15:	static void trace_event_raw_event_sched_kthread_stop(void *, struct task_struct *);
37:	static void trace_event_raw_event_sched_kthread_stop_ret(void *, int);
189:	static void trace_event_raw_event_sched_migrate_task(void *, struct task_struct *, int);
483:	static void trace_event_raw_event_sched_move_task_template(void *, struct task_struct *, int, int);
436:	static void trace_event_raw_event_sched_pi_setprio(void *, struct task_struct *, struct task_struct *);
316:	static void trace_event_raw_event_sched_process_exec(void *, struct task_struct *, pid_t, struct linux_binprm *);
288:	static void trace_event_raw_event_sched_process_fork(void *, struct task_struct *, struct task_struct *);
465:	static void trace_event_raw_event_sched_process_hang(void *, struct task_struct *);
216:	static void trace_event_raw_event_sched_process_template(void *, struct task_struct *);
263:	static void trace_event_raw_event_sched_process_wait(void *, struct pid *);
402:	static void trace_event_raw_event_sched_stat_runtime(void *, struct task_struct *, u64, u64);
343:	static void trace_event_raw_event_sched_stat_template(void *, struct task_struct *, u64);
531:	static void trace_event_raw_event_sched_swap_numa(void *, struct task_struct *, int, struct task_struct *, int);
138:	static void trace_event_raw_event_sched_switch(void *, bool, struct task_struct *, struct task_struct *);
574:	static void trace_event_raw_event_sched_wake_idle_without_ipi(void *, int);
57:	static void trace_event_raw_event_sched_wakeup_template(void *, struct task_struct *);
15:	static enum print_line_t trace_raw_output_sched_kthread_stop(struct trace_iterator *, int, struct trace_event *);
37:	static enum print_line_t trace_raw_output_sched_kthread_stop_ret(struct trace_iterator *, int, struct trace_event *);
189:	static enum print_line_t trace_raw_output_sched_migrate_task(struct trace_iterator *, int, struct trace_event *);
483:	static enum print_line_t trace_raw_output_sched_move_task_template(struct trace_iterator *, int, struct trace_event *);
436:	static enum print_line_t trace_raw_output_sched_pi_setprio(struct trace_iterator *, int, struct trace_event *);
316:	static enum print_line_t trace_raw_output_sched_process_exec(struct trace_iterator *, int, struct trace_event *);
288:	static enum print_line_t trace_raw_output_sched_process_fork(struct trace_iterator *, int, struct trace_event *);
465:	static enum print_line_t trace_raw_output_sched_process_hang(struct trace_iterator *, int, struct trace_event *);
216:	static enum print_line_t trace_raw_output_sched_process_template(struct trace_iterator *, int, struct trace_event *);
263:	static enum print_line_t trace_raw_output_sched_process_wait(struct trace_iterator *, int, struct trace_event *);
402:	static enum print_line_t trace_raw_output_sched_stat_runtime(struct trace_iterator *, int, struct trace_event *);
343:	static enum print_line_t trace_raw_output_sched_stat_template(struct trace_iterator *, int, struct trace_event *);
531:	static enum print_line_t trace_raw_output_sched_swap_numa(struct trace_iterator *, int, struct trace_event *);
138:	static enum print_line_t trace_raw_output_sched_switch(struct trace_iterator *, int, struct trace_event *);
574:	static enum print_line_t trace_raw_output_sched_wake_idle_without_ipi(struct trace_iterator *, int, struct trace_event *);
57:	static enum print_line_t trace_raw_output_sched_wakeup_template(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/scsi.h:
242:	static void __bpf_trace_scsi_dispatch_cmd_error(void *, struct scsi_cmnd *, int);
200:	static void __bpf_trace_scsi_dispatch_cmd_start(void *, struct scsi_cmnd *);
344:	static void __bpf_trace_scsi_eh_wakeup(void *, struct Scsi_Host *);
287:	static void perf_trace_scsi_cmd_done_timeout_template(void *, struct scsi_cmnd *);
242:	static void perf_trace_scsi_dispatch_cmd_error(void *, struct scsi_cmnd *, int);
200:	static void perf_trace_scsi_dispatch_cmd_start(void *, struct scsi_cmnd *);
344:	static void perf_trace_scsi_eh_wakeup(void *, struct Scsi_Host *);
287:	static int trace_event_define_fields_scsi_cmd_done_timeout_template(struct trace_event_call *);
242:	static int trace_event_define_fields_scsi_dispatch_cmd_error(struct trace_event_call *);
200:	static int trace_event_define_fields_scsi_dispatch_cmd_start(struct trace_event_call *);
344:	static int trace_event_define_fields_scsi_eh_wakeup(struct trace_event_call *);
287:	static void trace_event_raw_event_scsi_cmd_done_timeout_template(void *, struct scsi_cmnd *);
242:	static void trace_event_raw_event_scsi_dispatch_cmd_error(void *, struct scsi_cmnd *, int);
200:	static void trace_event_raw_event_scsi_dispatch_cmd_start(void *, struct scsi_cmnd *);
344:	static void trace_event_raw_event_scsi_eh_wakeup(void *, struct Scsi_Host *);
287:	static enum print_line_t trace_raw_output_scsi_cmd_done_timeout_template(struct trace_iterator *, int, struct trace_event *);
242:	static enum print_line_t trace_raw_output_scsi_dispatch_cmd_error(struct trace_iterator *, int, struct trace_event *);
200:	static enum print_line_t trace_raw_output_scsi_dispatch_cmd_start(struct trace_iterator *, int, struct trace_event *);
344:	static enum print_line_t trace_raw_output_scsi_eh_wakeup(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/signal.h:
97:	static void __bpf_trace_signal_deliver(void *, int, struct siginfo *, struct k_sigaction *);
51:	static void __bpf_trace_signal_generate(void *, int, struct siginfo *, struct task_struct *, int, int);
97:	static void perf_trace_signal_deliver(void *, int, struct siginfo *, struct k_sigaction *);
51:	static void perf_trace_signal_generate(void *, int, struct siginfo *, struct task_struct *, int, int);
97:	static int trace_event_define_fields_signal_deliver(struct trace_event_call *);
51:	static int trace_event_define_fields_signal_generate(struct trace_event_call *);
97:	static void trace_event_raw_event_signal_deliver(void *, int, struct siginfo *, struct k_sigaction *);
51:	static void trace_event_raw_event_signal_generate(void *, int, struct siginfo *, struct task_struct *, int, int);
97:	static enum print_line_t trace_raw_output_signal_deliver(struct trace_iterator *, int, struct trace_event *);
51:	static enum print_line_t trace_raw_output_signal_generate(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/skb.h:
37:	static void __bpf_trace_consume_skb(void *, struct sk_buff *);
15:	static void __bpf_trace_kfree_skb(void *, struct sk_buff *, void *);
54:	static void __bpf_trace_skb_copy_datagram_iovec(void *, const struct sk_buff *, int);
37:	static void perf_trace_consume_skb(void *, struct sk_buff *);
15:	static void perf_trace_kfree_skb(void *, struct sk_buff *, void *);
54:	static void perf_trace_skb_copy_datagram_iovec(void *, const struct sk_buff *, int);
37:	static int trace_event_define_fields_consume_skb(struct trace_event_call *);
15:	static int trace_event_define_fields_kfree_skb(struct trace_event_call *);
54:	static int trace_event_define_fields_skb_copy_datagram_iovec(struct trace_event_call *);
37:	static void trace_event_raw_event_consume_skb(void *, struct sk_buff *);
15:	static void trace_event_raw_event_kfree_skb(void *, struct sk_buff *, void *);
54:	static void trace_event_raw_event_skb_copy_datagram_iovec(void *, const struct sk_buff *, int);
37:	static enum print_line_t trace_raw_output_consume_skb(struct trace_iterator *, int, struct trace_event *);
15:	static enum print_line_t trace_raw_output_kfree_skb(struct trace_iterator *, int, struct trace_event *);
54:	static enum print_line_t trace_raw_output_skb_copy_datagram_iovec(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/smbus.h:
95:	static void __bpf_trace_smbus_read(void *, const struct i2c_adapter *, u16, unsigned short, char, u8, int);
203:	static void __bpf_trace_smbus_result(void *, const struct i2c_adapter *, u16, unsigned short, char, u8, int, int);
27:	static void __bpf_trace_smbus_write(void *, const struct i2c_adapter *, u16, unsigned short, char, u8, int, const union i2c_smbus_data *);
95:	static void perf_trace_smbus_read(void *, const struct i2c_adapter *, u16, unsigned short, char, u8, int);
137:	static void perf_trace_smbus_reply(void *, const struct i2c_adapter *, u16, unsigned short, char, u8, int, const union i2c_smbus_data *);
203:	static void perf_trace_smbus_result(void *, const struct i2c_adapter *, u16, unsigned short, char, u8, int, int);
27:	static void perf_trace_smbus_write(void *, const struct i2c_adapter *, u16, unsigned short, char, u8, int, const union i2c_smbus_data *);
95:	static int trace_event_define_fields_smbus_read(struct trace_event_call *);
137:	static int trace_event_define_fields_smbus_reply(struct trace_event_call *);
203:	static int trace_event_define_fields_smbus_result(struct trace_event_call *);
27:	static int trace_event_define_fields_smbus_write(struct trace_event_call *);
95:	static void trace_event_raw_event_smbus_read(void *, const struct i2c_adapter *, u16, unsigned short, char, u8, int);
137:	static void trace_event_raw_event_smbus_reply(void *, const struct i2c_adapter *, u16, unsigned short, char, u8, int, const union i2c_smbus_data *);
203:	static void trace_event_raw_event_smbus_result(void *, const struct i2c_adapter *, u16, unsigned short, char, u8, int, int);
27:	static void trace_event_raw_event_smbus_write(void *, const struct i2c_adapter *, u16, unsigned short, char, u8, int, const union i2c_smbus_data *);
95:	static enum print_line_t trace_raw_output_smbus_read(struct trace_iterator *, int, struct trace_event *);
137:	static enum print_line_t trace_raw_output_smbus_reply(struct trace_iterator *, int, struct trace_event *);
203:	static enum print_line_t trace_raw_output_smbus_result(struct trace_iterator *, int, struct trace_event *);
27:	static enum print_line_t trace_raw_output_smbus_write(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/sock.h:
137:	static void __bpf_trace_inet_sock_set_state(void *, const struct sock *, const int, const int);
92:	static void __bpf_trace_sock_exceed_buf_limit(void *, struct sock *, struct proto *, long, int);
70:	static void __bpf_trace_sock_rcvqueue_full(void *, struct sock *, struct sk_buff *);
137:	static void perf_trace_inet_sock_set_state(void *, const struct sock *, const int, const int);
92:	static void perf_trace_sock_exceed_buf_limit(void *, struct sock *, struct proto *, long, int);
70:	static void perf_trace_sock_rcvqueue_full(void *, struct sock *, struct sk_buff *);
137:	static int trace_event_define_fields_inet_sock_set_state(struct trace_event_call *);
92:	static int trace_event_define_fields_sock_exceed_buf_limit(struct trace_event_call *);
70:	static int trace_event_define_fields_sock_rcvqueue_full(struct trace_event_call *);
137:	static void trace_event_raw_event_inet_sock_set_state(void *, const struct sock *, const int, const int);
92:	static void trace_event_raw_event_sock_exceed_buf_limit(void *, struct sock *, struct proto *, long, int);
70:	static void trace_event_raw_event_sock_rcvqueue_full(void *, struct sock *, struct sk_buff *);
137:	static enum print_line_t trace_raw_output_inet_sock_set_state(struct trace_iterator *, int, struct trace_event *);
92:	static enum print_line_t trace_raw_output_sock_exceed_buf_limit(struct trace_iterator *, int, struct trace_event *);
70:	static enum print_line_t trace_raw_output_sock_rcvqueue_full(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/spi.h:
11:	static void __bpf_trace_spi_controller(void *, struct spi_controller *);
45:	static void __bpf_trace_spi_message(void *, struct spi_message *);
112:	static void __bpf_trace_spi_transfer(void *, struct spi_message *, struct spi_transfer *);
11:	static void perf_trace_spi_controller(void *, struct spi_controller *);
45:	static void perf_trace_spi_message(void *, struct spi_message *);
84:	static void perf_trace_spi_message_done(void *, struct spi_message *);
112:	static void perf_trace_spi_transfer(void *, struct spi_message *, struct spi_transfer *);
11:	static int trace_event_define_fields_spi_controller(struct trace_event_call *);
45:	static int trace_event_define_fields_spi_message(struct trace_event_call *);
84:	static int trace_event_define_fields_spi_message_done(struct trace_event_call *);
112:	static int trace_event_define_fields_spi_transfer(struct trace_event_call *);
11:	static void trace_event_raw_event_spi_controller(void *, struct spi_controller *);
45:	static void trace_event_raw_event_spi_message(void *, struct spi_message *);
84:	static void trace_event_raw_event_spi_message_done(void *, struct spi_message *);
112:	static void trace_event_raw_event_spi_transfer(void *, struct spi_message *, struct spi_transfer *);
11:	static enum print_line_t trace_raw_output_spi_controller(struct trace_iterator *, int, struct trace_event *);
45:	static enum print_line_t trace_raw_output_spi_message(struct trace_iterator *, int, struct trace_event *);
84:	static enum print_line_t trace_raw_output_spi_message_done(struct trace_iterator *, int, struct trace_event *);
112:	static enum print_line_t trace_raw_output_spi_transfer(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/swiotlb.h:
10:	static void __bpf_trace_swiotlb_bounced(void *, struct device *, dma_addr_t, size_t, enum swiotlb_force);
10:	static void perf_trace_swiotlb_bounced(void *, struct device *, dma_addr_t, size_t, enum swiotlb_force);
10:	static int trace_event_define_fields_swiotlb_bounced(struct trace_event_call *);
10:	static void trace_event_raw_event_swiotlb_bounced(void *, struct device *, dma_addr_t, size_t, enum swiotlb_force);
10:	static enum print_line_t trace_raw_output_swiotlb_bounced(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/syscalls.h:
18:	static void __bpf_trace_sys_enter(void *, struct pt_regs *, long);
18:	static void perf_trace_sys_enter(void *, struct pt_regs *, long);
44:	static void perf_trace_sys_exit(void *, struct pt_regs *, long);
18:	static int trace_event_define_fields_sys_enter(struct trace_event_call *);
44:	static int trace_event_define_fields_sys_exit(struct trace_event_call *);
18:	static void trace_event_raw_event_sys_enter(void *, struct pt_regs *, long);
44:	static void trace_event_raw_event_sys_exit(void *, struct pt_regs *, long);
42:	static int trace_init_flags_sys_enter(void);
66:	static int trace_init_flags_sys_exit(void);
18:	static enum print_line_t trace_raw_output_sys_enter(struct trace_iterator *, int, struct trace_event *);
44:	static enum print_line_t trace_raw_output_sys_exit(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/task.h:
9:	static void __bpf_trace_task_newtask(void *, struct task_struct *, unsigned long);
34:	static void __bpf_trace_task_rename(void *, struct task_struct *, const char *);
9:	static void perf_trace_task_newtask(void *, struct task_struct *, unsigned long);
34:	static void perf_trace_task_rename(void *, struct task_struct *, const char *);
9:	static int trace_event_define_fields_task_newtask(struct trace_event_call *);
34:	static int trace_event_define_fields_task_rename(struct trace_event_call *);
9:	static void trace_event_raw_event_task_newtask(void *, struct task_struct *, unsigned long);
34:	static void trace_event_raw_event_task_rename(void *, struct task_struct *, const char *);
9:	static enum print_line_t trace_raw_output_task_newtask(struct trace_iterator *, int, struct trace_event *);
34:	static enum print_line_t trace_raw_output_task_rename(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/tcp.h:
115:	static void __bpf_trace_tcp_event_sk(void *, struct sock *);
181:	static void __bpf_trace_tcp_retransmit_synack(void *, const struct sock *, const struct request_sock *);
115:	static void perf_trace_tcp_event_sk(void *, struct sock *);
50:	static void perf_trace_tcp_event_sk_skb(void *, const struct sock *, const struct sk_buff *);
226:	static void perf_trace_tcp_probe(void *, struct sock *, struct sk_buff *);
181:	static void perf_trace_tcp_retransmit_synack(void *, const struct sock *, const struct request_sock *);
115:	static int trace_event_define_fields_tcp_event_sk(struct trace_event_call *);
50:	static int trace_event_define_fields_tcp_event_sk_skb(struct trace_event_call *);
226:	static int trace_event_define_fields_tcp_probe(struct trace_event_call *);
181:	static int trace_event_define_fields_tcp_retransmit_synack(struct trace_event_call *);
115:	static void trace_event_raw_event_tcp_event_sk(void *, struct sock *);
50:	static void trace_event_raw_event_tcp_event_sk_skb(void *, const struct sock *, const struct sk_buff *);
226:	static void trace_event_raw_event_tcp_probe(void *, struct sock *, struct sk_buff *);
181:	static void trace_event_raw_event_tcp_retransmit_synack(void *, const struct sock *, const struct request_sock *);
115:	static enum print_line_t trace_raw_output_tcp_event_sk(struct trace_iterator *, int, struct trace_event *);
50:	static enum print_line_t trace_raw_output_tcp_event_sk_skb(struct trace_iterator *, int, struct trace_event *);
226:	static enum print_line_t trace_raw_output_tcp_probe(struct trace_iterator *, int, struct trace_event *);
181:	static enum print_line_t trace_raw_output_tcp_retransmit_synack(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/thermal.h:
49:	static void __bpf_trace_cdev_update(void *, struct thermal_cooling_device *, unsigned long);
24:	static void __bpf_trace_thermal_temperature(void *, struct thermal_zone_device *);
68:	static void __bpf_trace_thermal_zone_trip(void *, struct thermal_zone_device *, int, enum thermal_trip_type);
49:	static void perf_trace_cdev_update(void *, struct thermal_cooling_device *, unsigned long);
24:	static void perf_trace_thermal_temperature(void *, struct thermal_zone_device *);
68:	static void perf_trace_thermal_zone_trip(void *, struct thermal_zone_device *, int, enum thermal_trip_type);
49:	static int trace_event_define_fields_cdev_update(struct trace_event_call *);
24:	static int trace_event_define_fields_thermal_temperature(struct trace_event_call *);
68:	static int trace_event_define_fields_thermal_zone_trip(struct trace_event_call *);
49:	static void trace_event_raw_event_cdev_update(void *, struct thermal_cooling_device *, unsigned long);
24:	static void trace_event_raw_event_thermal_temperature(void *, struct thermal_zone_device *);
68:	static void trace_event_raw_event_thermal_zone_trip(void *, struct thermal_zone_device *, int, enum thermal_trip_type);
49:	static enum print_line_t trace_raw_output_cdev_update(struct trace_iterator *, int, struct trace_event *);
24:	static enum print_line_t trace_raw_output_thermal_temperature(struct trace_iterator *, int, struct trace_event *);
68:	static enum print_line_t trace_raw_output_thermal_zone_trip(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/timer.h:
250:	static void __bpf_trace_hrtimer_class(void *, struct hrtimer *);
228:	static void __bpf_trace_hrtimer_expire_entry(void *, struct hrtimer *, ktime_t *);
163:	static void __bpf_trace_hrtimer_init(void *, struct hrtimer *, clockid_t, enum hrtimer_mode);
191:	static void __bpf_trace_hrtimer_start(void *, struct hrtimer *, enum hrtimer_mode);
336:	static void __bpf_trace_itimer_expire(void *, int, struct pid *, unsigned long long);
299:	static void __bpf_trace_itimer_state(void *, int, const struct itimerval * const, unsigned long long);
392:	static void __bpf_trace_tick_stop(void *, int, int);
12:	static void __bpf_trace_timer_class(void *, struct timer_list *);
52:	static void __bpf_trace_timer_start(void *, struct timer_list *, unsigned long, unsigned int);
250:	static void perf_trace_hrtimer_class(void *, struct hrtimer *);
228:	static void perf_trace_hrtimer_expire_entry(void *, struct hrtimer *, ktime_t *);
163:	static void perf_trace_hrtimer_init(void *, struct hrtimer *, clockid_t, enum hrtimer_mode);
191:	static void perf_trace_hrtimer_start(void *, struct hrtimer *, enum hrtimer_mode);
336:	static void perf_trace_itimer_expire(void *, int, struct pid *, unsigned long long);
299:	static void perf_trace_itimer_state(void *, int, const struct itimerval * const, unsigned long long);
392:	static void perf_trace_tick_stop(void *, int, int);
12:	static void perf_trace_timer_class(void *, struct timer_list *);
90:	static void perf_trace_timer_expire_entry(void *, struct timer_list *);
52:	static void perf_trace_timer_start(void *, struct timer_list *, unsigned long, unsigned int);
250:	static int trace_event_define_fields_hrtimer_class(struct trace_event_call *);
228:	static int trace_event_define_fields_hrtimer_expire_entry(struct trace_event_call *);
163:	static int trace_event_define_fields_hrtimer_init(struct trace_event_call *);
191:	static int trace_event_define_fields_hrtimer_start(struct trace_event_call *);
336:	static int trace_event_define_fields_itimer_expire(struct trace_event_call *);
299:	static int trace_event_define_fields_itimer_state(struct trace_event_call *);
392:	static int trace_event_define_fields_tick_stop(struct trace_event_call *);
12:	static int trace_event_define_fields_timer_class(struct trace_event_call *);
90:	static int trace_event_define_fields_timer_expire_entry(struct trace_event_call *);
52:	static int trace_event_define_fields_timer_start(struct trace_event_call *);
250:	static void trace_event_raw_event_hrtimer_class(void *, struct hrtimer *);
228:	static void trace_event_raw_event_hrtimer_expire_entry(void *, struct hrtimer *, ktime_t *);
163:	static void trace_event_raw_event_hrtimer_init(void *, struct hrtimer *, clockid_t, enum hrtimer_mode);
191:	static void trace_event_raw_event_hrtimer_start(void *, struct hrtimer *, enum hrtimer_mode);
336:	static void trace_event_raw_event_itimer_expire(void *, int, struct pid *, unsigned long long);
299:	static void trace_event_raw_event_itimer_state(void *, int, const struct itimerval * const, unsigned long long);
392:	static void trace_event_raw_event_tick_stop(void *, int, int);
12:	static void trace_event_raw_event_timer_class(void *, struct timer_list *);
90:	static void trace_event_raw_event_timer_expire_entry(void *, struct timer_list *);
52:	static void trace_event_raw_event_timer_start(void *, struct timer_list *, unsigned long, unsigned int);
250:	static enum print_line_t trace_raw_output_hrtimer_class(struct trace_iterator *, int, struct trace_event *);
228:	static enum print_line_t trace_raw_output_hrtimer_expire_entry(struct trace_iterator *, int, struct trace_event *);
163:	static enum print_line_t trace_raw_output_hrtimer_init(struct trace_iterator *, int, struct trace_event *);
191:	static enum print_line_t trace_raw_output_hrtimer_start(struct trace_iterator *, int, struct trace_event *);
336:	static enum print_line_t trace_raw_output_itimer_expire(struct trace_iterator *, int, struct trace_event *);
299:	static enum print_line_t trace_raw_output_itimer_state(struct trace_iterator *, int, struct trace_event *);
392:	static enum print_line_t trace_raw_output_tick_stop(struct trace_iterator *, int, struct trace_event *);
12:	static enum print_line_t trace_raw_output_timer_class(struct trace_iterator *, int, struct trace_event *);
90:	static enum print_line_t trace_raw_output_timer_expire_entry(struct trace_iterator *, int, struct trace_event *);
52:	static enum print_line_t trace_raw_output_timer_start(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/tlb.h:
38:	static void __bpf_trace_tlb_flush(void *, int, unsigned long);
38:	static void perf_trace_tlb_flush(void *, int, unsigned long);
38:	static int trace_event_define_fields_tlb_flush(struct trace_event_call *);
38:	static void trace_event_raw_event_tlb_flush(void *, int, unsigned long);
38:	static enum print_line_t trace_raw_output_tlb_flush(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/udp.h:
11:	static void __bpf_trace_udp_fail_queue_rcv_skb(void *, int, struct sock *);
11:	static void perf_trace_udp_fail_queue_rcv_skb(void *, int, struct sock *);
11:	static int trace_event_define_fields_udp_fail_queue_rcv_skb(struct trace_event_call *);
11:	static void trace_event_raw_event_udp_fail_queue_rcv_skb(void *, int, struct sock *);
11:	static enum print_line_t trace_raw_output_udp_fail_queue_rcv_skb(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/vmscan.h:
241:	static void __bpf_trace_mm_shrink_slab_end(void *, struct shrinker *, int, int, long, long, long);
196:	static void __bpf_trace_mm_shrink_slab_start(void *, struct shrinker *, struct shrink_control *, long, unsigned long, unsigned long long, unsigned long, int);
106:	static void __bpf_trace_mm_vmscan_direct_reclaim_begin_template(void *, int, int, gfp_t, int);
156:	static void __bpf_trace_mm_vmscan_direct_reclaim_end_template(void *, unsigned long);
429:	static void __bpf_trace_mm_vmscan_inactive_list_is_low(void *, int, int, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, int);
41:	static void __bpf_trace_mm_vmscan_kswapd_sleep(void *, int);
58:	static void __bpf_trace_mm_vmscan_kswapd_wake(void *, int, int, int);
278:	static void __bpf_trace_mm_vmscan_lru_isolate(void *, int, int, unsigned long, unsigned long, unsigned long, unsigned long, isolate_mode_t, int);
393:	static void __bpf_trace_mm_vmscan_lru_shrink_active(void *, int, unsigned long, unsigned long, unsigned long, unsigned long, int, int);
345:	static void __bpf_trace_mm_vmscan_lru_shrink_inactive(void *, int, unsigned long, unsigned long, struct reclaim_stat *, int, int);
79:	static void __bpf_trace_mm_vmscan_wakeup_kswapd(void *, int, int, int, gfp_t);
323:	static void __bpf_trace_mm_vmscan_writepage(void *, struct page *);
241:	static void perf_trace_mm_shrink_slab_end(void *, struct shrinker *, int, int, long, long, long);
196:	static void perf_trace_mm_shrink_slab_start(void *, struct shrinker *, struct shrink_control *, long, unsigned long, unsigned long long, unsigned long, int);
106:	static void perf_trace_mm_vmscan_direct_reclaim_begin_template(void *, int, int, gfp_t, int);
156:	static void perf_trace_mm_vmscan_direct_reclaim_end_template(void *, unsigned long);
429:	static void perf_trace_mm_vmscan_inactive_list_is_low(void *, int, int, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, int);
41:	static void perf_trace_mm_vmscan_kswapd_sleep(void *, int);
58:	static void perf_trace_mm_vmscan_kswapd_wake(void *, int, int, int);
278:	static void perf_trace_mm_vmscan_lru_isolate(void *, int, int, unsigned long, unsigned long, unsigned long, unsigned long, isolate_mode_t, int);
393:	static void perf_trace_mm_vmscan_lru_shrink_active(void *, int, unsigned long, unsigned long, unsigned long, unsigned long, int, int);
345:	static void perf_trace_mm_vmscan_lru_shrink_inactive(void *, int, unsigned long, unsigned long, struct reclaim_stat *, int, int);
79:	static void perf_trace_mm_vmscan_wakeup_kswapd(void *, int, int, int, gfp_t);
323:	static void perf_trace_mm_vmscan_writepage(void *, struct page *);
241:	static int trace_event_define_fields_mm_shrink_slab_end(struct trace_event_call *);
196:	static int trace_event_define_fields_mm_shrink_slab_start(struct trace_event_call *);
106:	static int trace_event_define_fields_mm_vmscan_direct_reclaim_begin_template(struct trace_event_call *);
156:	static int trace_event_define_fields_mm_vmscan_direct_reclaim_end_template(struct trace_event_call *);
429:	static int trace_event_define_fields_mm_vmscan_inactive_list_is_low(struct trace_event_call *);
41:	static int trace_event_define_fields_mm_vmscan_kswapd_sleep(struct trace_event_call *);
58:	static int trace_event_define_fields_mm_vmscan_kswapd_wake(struct trace_event_call *);
278:	static int trace_event_define_fields_mm_vmscan_lru_isolate(struct trace_event_call *);
393:	static int trace_event_define_fields_mm_vmscan_lru_shrink_active(struct trace_event_call *);
345:	static int trace_event_define_fields_mm_vmscan_lru_shrink_inactive(struct trace_event_call *);
79:	static int trace_event_define_fields_mm_vmscan_wakeup_kswapd(struct trace_event_call *);
323:	static int trace_event_define_fields_mm_vmscan_writepage(struct trace_event_call *);
241:	static void trace_event_raw_event_mm_shrink_slab_end(void *, struct shrinker *, int, int, long, long, long);
196:	static void trace_event_raw_event_mm_shrink_slab_start(void *, struct shrinker *, struct shrink_control *, long, unsigned long, unsigned long long, unsigned long, int);
106:	static void trace_event_raw_event_mm_vmscan_direct_reclaim_begin_template(void *, int, int, gfp_t, int);
156:	static void trace_event_raw_event_mm_vmscan_direct_reclaim_end_template(void *, unsigned long);
429:	static void trace_event_raw_event_mm_vmscan_inactive_list_is_low(void *, int, int, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, int);
41:	static void trace_event_raw_event_mm_vmscan_kswapd_sleep(void *, int);
58:	static void trace_event_raw_event_mm_vmscan_kswapd_wake(void *, int, int, int);
278:	static void trace_event_raw_event_mm_vmscan_lru_isolate(void *, int, int, unsigned long, unsigned long, unsigned long, unsigned long, isolate_mode_t, int);
393:	static void trace_event_raw_event_mm_vmscan_lru_shrink_active(void *, int, unsigned long, unsigned long, unsigned long, unsigned long, int, int);
345:	static void trace_event_raw_event_mm_vmscan_lru_shrink_inactive(void *, int, unsigned long, unsigned long, struct reclaim_stat *, int, int);
79:	static void trace_event_raw_event_mm_vmscan_wakeup_kswapd(void *, int, int, int, gfp_t);
323:	static void trace_event_raw_event_mm_vmscan_writepage(void *, struct page *);
241:	static enum print_line_t trace_raw_output_mm_shrink_slab_end(struct trace_iterator *, int, struct trace_event *);
196:	static enum print_line_t trace_raw_output_mm_shrink_slab_start(struct trace_iterator *, int, struct trace_event *);
106:	static enum print_line_t trace_raw_output_mm_vmscan_direct_reclaim_begin_template(struct trace_iterator *, int, struct trace_event *);
156:	static enum print_line_t trace_raw_output_mm_vmscan_direct_reclaim_end_template(struct trace_iterator *, int, struct trace_event *);
429:	static enum print_line_t trace_raw_output_mm_vmscan_inactive_list_is_low(struct trace_iterator *, int, struct trace_event *);
41:	static enum print_line_t trace_raw_output_mm_vmscan_kswapd_sleep(struct trace_iterator *, int, struct trace_event *);
58:	static enum print_line_t trace_raw_output_mm_vmscan_kswapd_wake(struct trace_iterator *, int, struct trace_event *);
278:	static enum print_line_t trace_raw_output_mm_vmscan_lru_isolate(struct trace_iterator *, int, struct trace_event *);
393:	static enum print_line_t trace_raw_output_mm_vmscan_lru_shrink_active(struct trace_iterator *, int, struct trace_event *);
345:	static enum print_line_t trace_raw_output_mm_vmscan_lru_shrink_inactive(struct trace_iterator *, int, struct trace_event *);
79:	static enum print_line_t trace_raw_output_mm_vmscan_wakeup_kswapd(struct trace_iterator *, int, struct trace_event *);
323:	static enum print_line_t trace_raw_output_mm_vmscan_writepage(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/wbt.h:
58:	static void __bpf_trace_wbt_lat(void *, struct backing_dev_info *, unsigned long);
15:	static void __bpf_trace_wbt_stat(void *, struct backing_dev_info *, struct blk_rq_stat *);
87:	static void __bpf_trace_wbt_step(void *, struct backing_dev_info *, const char *, int, unsigned long, unsigned int, unsigned int, unsigned int);
126:	static void __bpf_trace_wbt_timer(void *, struct backing_dev_info *, unsigned int, int, unsigned int);
58:	static void perf_trace_wbt_lat(void *, struct backing_dev_info *, unsigned long);
15:	static void perf_trace_wbt_stat(void *, struct backing_dev_info *, struct blk_rq_stat *);
87:	static void perf_trace_wbt_step(void *, struct backing_dev_info *, const char *, int, unsigned long, unsigned int, unsigned int, unsigned int);
126:	static void perf_trace_wbt_timer(void *, struct backing_dev_info *, unsigned int, int, unsigned int);
58:	static int trace_event_define_fields_wbt_lat(struct trace_event_call *);
15:	static int trace_event_define_fields_wbt_stat(struct trace_event_call *);
87:	static int trace_event_define_fields_wbt_step(struct trace_event_call *);
126:	static int trace_event_define_fields_wbt_timer(struct trace_event_call *);
58:	static void trace_event_raw_event_wbt_lat(void *, struct backing_dev_info *, unsigned long);
15:	static void trace_event_raw_event_wbt_stat(void *, struct backing_dev_info *, struct blk_rq_stat *);
87:	static void trace_event_raw_event_wbt_step(void *, struct backing_dev_info *, const char *, int, unsigned long, unsigned int, unsigned int, unsigned int);
126:	static void trace_event_raw_event_wbt_timer(void *, struct backing_dev_info *, unsigned int, int, unsigned int);
58:	static enum print_line_t trace_raw_output_wbt_lat(struct trace_iterator *, int, struct trace_event *);
15:	static enum print_line_t trace_raw_output_wbt_stat(struct trace_iterator *, int, struct trace_event *);
87:	static enum print_line_t trace_raw_output_wbt_step(struct trace_iterator *, int, struct trace_event *);
126:	static enum print_line_t trace_raw_output_wbt_timer(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/workqueue.h:
40:	static void __bpf_trace_workqueue_queue_work(void *, unsigned int, struct pool_workqueue *, struct work_struct *);
11:	static void __bpf_trace_workqueue_work(void *, struct work_struct *);
89:	static void perf_trace_workqueue_execute_start(void *, struct work_struct *);
40:	static void perf_trace_workqueue_queue_work(void *, unsigned int, struct pool_workqueue *, struct work_struct *);
11:	static void perf_trace_workqueue_work(void *, struct work_struct *);
89:	static int trace_event_define_fields_workqueue_execute_start(struct trace_event_call *);
40:	static int trace_event_define_fields_workqueue_queue_work(struct trace_event_call *);
11:	static int trace_event_define_fields_workqueue_work(struct trace_event_call *);
89:	static void trace_event_raw_event_workqueue_execute_start(void *, struct work_struct *);
40:	static void trace_event_raw_event_workqueue_queue_work(void *, unsigned int, struct pool_workqueue *, struct work_struct *);
11:	static void trace_event_raw_event_workqueue_work(void *, struct work_struct *);
89:	static enum print_line_t trace_raw_output_workqueue_execute_start(struct trace_iterator *, int, struct trace_event *);
40:	static enum print_line_t trace_raw_output_workqueue_queue_work(struct trace_iterator *, int, struct trace_event *);
11:	static enum print_line_t trace_raw_output_workqueue_work(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/writeback.h:
483:	static void __bpf_trace_balance_dirty_pages(void *, struct bdi_writeback *, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, long, unsigned long);
437:	static void __bpf_trace_bdi_dirty_ratelimit(void *, struct bdi_writeback *, unsigned long, unsigned long);
389:	static void __bpf_trace_global_dirty_state(void *, unsigned long, unsigned long);
303:	static void __bpf_trace_wbc_class(void *, struct writeback_control *, struct backing_dev_info *);
289:	static void __bpf_trace_writeback_bdi_register(void *, struct backing_dev_info *);
266:	static void __bpf_trace_writeback_class(void *, struct bdi_writeback *);
600:	static void __bpf_trace_writeback_congest_waited_template(void *, unsigned int, unsigned int);
81:	static void __bpf_trace_writeback_dirty_inode_template(void *, struct inode *, int);
55:	static void __bpf_trace_writeback_dirty_page(void *, struct page *, struct address_space *);
254:	static void __bpf_trace_writeback_pages_written(void *, long);
357:	static void __bpf_trace_writeback_queue_io(void *, struct bdi_writeback *, struct wb_writeback_work *, unsigned long, int);
568:	static void __bpf_trace_writeback_sb_inodes_requeue(void *, struct inode *);
635:	static void __bpf_trace_writeback_single_inode_template(void *, struct inode *, struct writeback_control *, unsigned long);
206:	static void __bpf_trace_writeback_work_class(void *, struct bdi_writeback *, struct wb_writeback_work *);
163:	static void __bpf_trace_writeback_write_inode_template(void *, struct inode *, struct writeback_control *);
483:	static void perf_trace_balance_dirty_pages(void *, struct bdi_writeback *, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, long, unsigned long);
437:	static void perf_trace_bdi_dirty_ratelimit(void *, struct bdi_writeback *, unsigned long, unsigned long);
389:	static void perf_trace_global_dirty_state(void *, unsigned long, unsigned long);
303:	static void perf_trace_wbc_class(void *, struct writeback_control *, struct backing_dev_info *);
289:	static void perf_trace_writeback_bdi_register(void *, struct backing_dev_info *);
266:	static void perf_trace_writeback_class(void *, struct bdi_writeback *);
600:	static void perf_trace_writeback_congest_waited_template(void *, unsigned int, unsigned int);
81:	static void perf_trace_writeback_dirty_inode_template(void *, struct inode *, int);
55:	static void perf_trace_writeback_dirty_page(void *, struct page *, struct address_space *);
695:	static void perf_trace_writeback_inode_template(void *, struct inode *);
254:	static void perf_trace_writeback_pages_written(void *, long);
357:	static void perf_trace_writeback_queue_io(void *, struct bdi_writeback *, struct wb_writeback_work *, unsigned long, int);
568:	static void perf_trace_writeback_sb_inodes_requeue(void *, struct inode *);
635:	static void perf_trace_writeback_single_inode_template(void *, struct inode *, struct writeback_control *, unsigned long);
206:	static void perf_trace_writeback_work_class(void *, struct bdi_writeback *, struct wb_writeback_work *);
163:	static void perf_trace_writeback_write_inode_template(void *, struct inode *, struct writeback_control *);
483:	static int trace_event_define_fields_balance_dirty_pages(struct trace_event_call *);
437:	static int trace_event_define_fields_bdi_dirty_ratelimit(struct trace_event_call *);
389:	static int trace_event_define_fields_global_dirty_state(struct trace_event_call *);
303:	static int trace_event_define_fields_wbc_class(struct trace_event_call *);
289:	static int trace_event_define_fields_writeback_bdi_register(struct trace_event_call *);
266:	static int trace_event_define_fields_writeback_class(struct trace_event_call *);
600:	static int trace_event_define_fields_writeback_congest_waited_template(struct trace_event_call *);
81:	static int trace_event_define_fields_writeback_dirty_inode_template(struct trace_event_call *);
55:	static int trace_event_define_fields_writeback_dirty_page(struct trace_event_call *);
695:	static int trace_event_define_fields_writeback_inode_template(struct trace_event_call *);
254:	static int trace_event_define_fields_writeback_pages_written(struct trace_event_call *);
357:	static int trace_event_define_fields_writeback_queue_io(struct trace_event_call *);
568:	static int trace_event_define_fields_writeback_sb_inodes_requeue(struct trace_event_call *);
635:	static int trace_event_define_fields_writeback_single_inode_template(struct trace_event_call *);
206:	static int trace_event_define_fields_writeback_work_class(struct trace_event_call *);
163:	static int trace_event_define_fields_writeback_write_inode_template(struct trace_event_call *);
483:	static void trace_event_raw_event_balance_dirty_pages(void *, struct bdi_writeback *, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, long, unsigned long);
437:	static void trace_event_raw_event_bdi_dirty_ratelimit(void *, struct bdi_writeback *, unsigned long, unsigned long);
389:	static void trace_event_raw_event_global_dirty_state(void *, unsigned long, unsigned long);
303:	static void trace_event_raw_event_wbc_class(void *, struct writeback_control *, struct backing_dev_info *);
289:	static void trace_event_raw_event_writeback_bdi_register(void *, struct backing_dev_info *);
266:	static void trace_event_raw_event_writeback_class(void *, struct bdi_writeback *);
600:	static void trace_event_raw_event_writeback_congest_waited_template(void *, unsigned int, unsigned int);
81:	static void trace_event_raw_event_writeback_dirty_inode_template(void *, struct inode *, int);
55:	static void trace_event_raw_event_writeback_dirty_page(void *, struct page *, struct address_space *);
695:	static void trace_event_raw_event_writeback_inode_template(void *, struct inode *);
254:	static void trace_event_raw_event_writeback_pages_written(void *, long);
357:	static void trace_event_raw_event_writeback_queue_io(void *, struct bdi_writeback *, struct wb_writeback_work *, unsigned long, int);
568:	static void trace_event_raw_event_writeback_sb_inodes_requeue(void *, struct inode *);
635:	static void trace_event_raw_event_writeback_single_inode_template(void *, struct inode *, struct writeback_control *, unsigned long);
206:	static void trace_event_raw_event_writeback_work_class(void *, struct bdi_writeback *, struct wb_writeback_work *);
163:	static void trace_event_raw_event_writeback_write_inode_template(void *, struct inode *, struct writeback_control *);
483:	static enum print_line_t trace_raw_output_balance_dirty_pages(struct trace_iterator *, int, struct trace_event *);
437:	static enum print_line_t trace_raw_output_bdi_dirty_ratelimit(struct trace_iterator *, int, struct trace_event *);
389:	static enum print_line_t trace_raw_output_global_dirty_state(struct trace_iterator *, int, struct trace_event *);
303:	static enum print_line_t trace_raw_output_wbc_class(struct trace_iterator *, int, struct trace_event *);
289:	static enum print_line_t trace_raw_output_writeback_bdi_register(struct trace_iterator *, int, struct trace_event *);
266:	static enum print_line_t trace_raw_output_writeback_class(struct trace_iterator *, int, struct trace_event *);
600:	static enum print_line_t trace_raw_output_writeback_congest_waited_template(struct trace_iterator *, int, struct trace_event *);
81:	static enum print_line_t trace_raw_output_writeback_dirty_inode_template(struct trace_iterator *, int, struct trace_event *);
55:	static enum print_line_t trace_raw_output_writeback_dirty_page(struct trace_iterator *, int, struct trace_event *);
695:	static enum print_line_t trace_raw_output_writeback_inode_template(struct trace_iterator *, int, struct trace_event *);
254:	static enum print_line_t trace_raw_output_writeback_pages_written(struct trace_iterator *, int, struct trace_event *);
357:	static enum print_line_t trace_raw_output_writeback_queue_io(struct trace_iterator *, int, struct trace_event *);
568:	static enum print_line_t trace_raw_output_writeback_sb_inodes_requeue(struct trace_iterator *, int, struct trace_event *);
635:	static enum print_line_t trace_raw_output_writeback_single_inode_template(struct trace_iterator *, int, struct trace_event *);
206:	static enum print_line_t trace_raw_output_writeback_work_class(struct trace_iterator *, int, struct trace_event *);
163:	static enum print_line_t trace_raw_output_writeback_write_inode_template(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/xdp.h:
161:	static void __bpf_trace_xdp_cpumap_kthread(void *, int, unsigned int, unsigned int, int);
231:	static void __bpf_trace_xdp_devmap_xmit(void *, const struct bpf_map *, u32, int, int, const struct net_device *, const struct net_device *, int);
28:	static void __bpf_trace_xdp_exception(void *, const struct net_device *, const struct bpf_prog *, u32);
53:	static void __bpf_trace_xdp_redirect_template(void *, const struct net_device *, const struct bpf_prog *, int, int, const struct bpf_map *, u32);
196:	static void perf_trace_xdp_cpumap_enqueue(void *, int, unsigned int, unsigned int, int);
161:	static void perf_trace_xdp_cpumap_kthread(void *, int, unsigned int, unsigned int, int);
231:	static void perf_trace_xdp_devmap_xmit(void *, const struct bpf_map *, u32, int, int, const struct net_device *, const struct net_device *, int);
28:	static void perf_trace_xdp_exception(void *, const struct net_device *, const struct bpf_prog *, u32);
53:	static void perf_trace_xdp_redirect_template(void *, const struct net_device *, const struct bpf_prog *, int, int, const struct bpf_map *, u32);
196:	static int trace_event_define_fields_xdp_cpumap_enqueue(struct trace_event_call *);
161:	static int trace_event_define_fields_xdp_cpumap_kthread(struct trace_event_call *);
231:	static int trace_event_define_fields_xdp_devmap_xmit(struct trace_event_call *);
28:	static int trace_event_define_fields_xdp_exception(struct trace_event_call *);
53:	static int trace_event_define_fields_xdp_redirect_template(struct trace_event_call *);
196:	static void trace_event_raw_event_xdp_cpumap_enqueue(void *, int, unsigned int, unsigned int, int);
161:	static void trace_event_raw_event_xdp_cpumap_kthread(void *, int, unsigned int, unsigned int, int);
231:	static void trace_event_raw_event_xdp_devmap_xmit(void *, const struct bpf_map *, u32, int, int, const struct net_device *, const struct net_device *, int);
28:	static void trace_event_raw_event_xdp_exception(void *, const struct net_device *, const struct bpf_prog *, u32);
53:	static void trace_event_raw_event_xdp_redirect_template(void *, const struct net_device *, const struct bpf_prog *, int, int, const struct bpf_map *, u32);
196:	static enum print_line_t trace_raw_output_xdp_cpumap_enqueue(struct trace_iterator *, int, struct trace_event *);
161:	static enum print_line_t trace_raw_output_xdp_cpumap_kthread(struct trace_iterator *, int, struct trace_event *);
231:	static enum print_line_t trace_raw_output_xdp_devmap_xmit(struct trace_iterator *, int, struct trace_event *);
28:	static enum print_line_t trace_raw_output_xdp_exception(struct trace_iterator *, int, struct trace_event *);
111:	static enum print_line_t trace_raw_output_xdp_redirect_map(struct trace_iterator *, int, struct trace_event *);
126:	static enum print_line_t trace_raw_output_xdp_redirect_map_err(struct trace_iterator *, int, struct trace_event *);
53:	static enum print_line_t trace_raw_output_xdp_redirect_template(struct trace_iterator *, int, struct trace_event *);

File ./include/trace/events/xen.h:
429:	static void __bpf_trace_xen_cpu_load_idt(void *, const struct desc_ptr *);
458:	static void __bpf_trace_xen_cpu_set_ldt(void *, const void *, unsigned int);
439:	static void __bpf_trace_xen_cpu_write_gdt_entry(void *, struct desc_struct *, int, const void *, int);
415:	static void __bpf_trace_xen_cpu_write_idt_entry(void *, gate_desc *, int, const gate_desc *);
398:	static void __bpf_trace_xen_cpu_write_ldt_entry(void *, struct desc_struct *, int, u64);
15:	static void __bpf_trace_xen_mc__batch(void *, enum paravirt_lazy_mode);
65:	static void __bpf_trace_xen_mc_callback(void *, xen_mc_callback_fn_t, void *);
36:	static void __bpf_trace_xen_mc_entry(void *, struct multicall_entry *, unsigned int);
55:	static void __bpf_trace_xen_mc_entry_alloc(void *, size_t);
109:	static void __bpf_trace_xen_mc_extend_args(void *, unsigned long, size_t, enum xen_mc_extend_args);
94:	static void __bpf_trace_xen_mc_flush(void *, unsigned int, unsigned int, unsigned int);
80:	static void __bpf_trace_xen_mc_flush_reason(void *, enum xen_mc_flush_reason);
130:	static void __bpf_trace_xen_mmu__set_pte(void *, pte_t *, pte_t);
302:	static void __bpf_trace_xen_mmu_alloc_ptpage(void *, struct mm_struct *, unsigned long, unsigned int, bool);
365:	static void __bpf_trace_xen_mmu_flush_tlb_others(void *, const struct cpumask *, struct mm_struct *, unsigned long, unsigned long);
336:	static void __bpf_trace_xen_mmu_pgd(void *, struct mm_struct *, pgd_t *);
320:	static void __bpf_trace_xen_mmu_release_ptpage(void *, unsigned long, unsigned int, bool);
239:	static void __bpf_trace_xen_mmu_set_p4d(void *, p4d_t *, p4d_t *, p4d_t);
174:	static void __bpf_trace_xen_mmu_set_pmd(void *, pmd_t *, pmd_t);
152:	static void __bpf_trace_xen_mmu_set_pte_at(void *, struct mm_struct *, unsigned long, pte_t *, pte_t);
222:	static void __bpf_trace_xen_mmu_set_pud(void *, pud_t *, pud_t);
383:	static void __bpf_trace_xen_mmu_write_cr3(void *, bool, unsigned long);
429:	static void perf_trace_xen_cpu_load_idt(void *, const struct desc_ptr *);
458:	static void perf_trace_xen_cpu_set_ldt(void *, const void *, unsigned int);
439:	static void perf_trace_xen_cpu_write_gdt_entry(void *, struct desc_struct *, int, const void *, int);
415:	static void perf_trace_xen_cpu_write_idt_entry(void *, gate_desc *, int, const gate_desc *);
398:	static void perf_trace_xen_cpu_write_ldt_entry(void *, struct desc_struct *, int, u64);
15:	static void perf_trace_xen_mc__batch(void *, enum paravirt_lazy_mode);
65:	static void perf_trace_xen_mc_callback(void *, xen_mc_callback_fn_t, void *);
36:	static void perf_trace_xen_mc_entry(void *, struct multicall_entry *, unsigned int);
55:	static void perf_trace_xen_mc_entry_alloc(void *, size_t);
109:	static void perf_trace_xen_mc_extend_args(void *, unsigned long, size_t, enum xen_mc_extend_args);
94:	static void perf_trace_xen_mc_flush(void *, unsigned int, unsigned int, unsigned int);
80:	static void perf_trace_xen_mc_flush_reason(void *, enum xen_mc_flush_reason);
130:	static void perf_trace_xen_mmu__set_pte(void *, pte_t *, pte_t);
302:	static void perf_trace_xen_mmu_alloc_ptpage(void *, struct mm_struct *, unsigned long, unsigned int, bool);
355:	static void perf_trace_xen_mmu_flush_tlb_one_user(void *, unsigned long);
365:	static void perf_trace_xen_mmu_flush_tlb_others(void *, const struct cpumask *, struct mm_struct *, unsigned long, unsigned long);
336:	static void perf_trace_xen_mmu_pgd(void *, struct mm_struct *, pgd_t *);
274:	static void perf_trace_xen_mmu_ptep_modify_prot(void *, struct mm_struct *, unsigned long, pte_t *, pte_t);
320:	static void perf_trace_xen_mmu_release_ptpage(void *, unsigned long, unsigned int, bool);
239:	static void perf_trace_xen_mmu_set_p4d(void *, p4d_t *, p4d_t *, p4d_t);
174:	static void perf_trace_xen_mmu_set_pmd(void *, pmd_t *, pmd_t);
152:	static void perf_trace_xen_mmu_set_pte_at(void *, struct mm_struct *, unsigned long, pte_t *, pte_t);
222:	static void perf_trace_xen_mmu_set_pud(void *, pud_t *, pud_t);
383:	static void perf_trace_xen_mmu_write_cr3(void *, bool, unsigned long);
458:	static int trace_event_define_fields_xen_cpu_set_ldt(struct trace_event_call *);
439:	static int trace_event_define_fields_xen_cpu_write_gdt_entry(struct trace_event_call *);
415:	static int trace_event_define_fields_xen_cpu_write_idt_entry(struct trace_event_call *);
398:	static int trace_event_define_fields_xen_cpu_write_ldt_entry(struct trace_event_call *);
15:	static int trace_event_define_fields_xen_mc__batch(struct trace_event_call *);
65:	static int trace_event_define_fields_xen_mc_callback(struct trace_event_call *);
36:	static int trace_event_define_fields_xen_mc_entry(struct trace_event_call *);
55:	static int trace_event_define_fields_xen_mc_entry_alloc(struct trace_event_call *);
109:	static int trace_event_define_fields_xen_mc_extend_args(struct trace_event_call *);
94:	static int trace_event_define_fields_xen_mc_flush(struct trace_event_call *);
80:	static int trace_event_define_fields_xen_mc_flush_reason(struct trace_event_call *);
130:	static int trace_event_define_fields_xen_mmu__set_pte(struct trace_event_call *);
302:	static int trace_event_define_fields_xen_mmu_alloc_ptpage(struct trace_event_call *);
355:	static int trace_event_define_fields_xen_mmu_flush_tlb_one_user(struct trace_event_call *);
365:	static int trace_event_define_fields_xen_mmu_flush_tlb_others(struct trace_event_call *);
336:	static int trace_event_define_fields_xen_mmu_pgd(struct trace_event_call *);
274:	static int trace_event_define_fields_xen_mmu_ptep_modify_prot(struct trace_event_call *);
320:	static int trace_event_define_fields_xen_mmu_release_ptpage(struct trace_event_call *);
239:	static int trace_event_define_fields_xen_mmu_set_p4d(struct trace_event_call *);
174:	static int trace_event_define_fields_xen_mmu_set_pmd(struct trace_event_call *);
152:	static int trace_event_define_fields_xen_mmu_set_pte_at(struct trace_event_call *);
222:	static int trace_event_define_fields_xen_mmu_set_pud(struct trace_event_call *);
383:	static int trace_event_define_fields_xen_mmu_write_cr3(struct trace_event_call *);
429:	static void trace_event_raw_event_xen_cpu_load_idt(void *, const struct desc_ptr *);
458:	static void trace_event_raw_event_xen_cpu_set_ldt(void *, const void *, unsigned int);
439:	static void trace_event_raw_event_xen_cpu_write_gdt_entry(void *, struct desc_struct *, int, const void *, int);
415:	static void trace_event_raw_event_xen_cpu_write_idt_entry(void *, gate_desc *, int, const gate_desc *);
398:	static void trace_event_raw_event_xen_cpu_write_ldt_entry(void *, struct desc_struct *, int, u64);
15:	static void trace_event_raw_event_xen_mc__batch(void *, enum paravirt_lazy_mode);
65:	static void trace_event_raw_event_xen_mc_callback(void *, xen_mc_callback_fn_t, void *);
36:	static void trace_event_raw_event_xen_mc_entry(void *, struct multicall_entry *, unsigned int);
55:	static void trace_event_raw_event_xen_mc_entry_alloc(void *, size_t);
109:	static void trace_event_raw_event_xen_mc_extend_args(void *, unsigned long, size_t, enum xen_mc_extend_args);
94:	static void trace_event_raw_event_xen_mc_flush(void *, unsigned int, unsigned int, unsigned int);
80:	static void trace_event_raw_event_xen_mc_flush_reason(void *, enum xen_mc_flush_reason);
130:	static void trace_event_raw_event_xen_mmu__set_pte(void *, pte_t *, pte_t);
302:	static void trace_event_raw_event_xen_mmu_alloc_ptpage(void *, struct mm_struct *, unsigned long, unsigned int, bool);
355:	static void trace_event_raw_event_xen_mmu_flush_tlb_one_user(void *, unsigned long);
365:	static void trace_event_raw_event_xen_mmu_flush_tlb_others(void *, const struct cpumask *, struct mm_struct *, unsigned long, unsigned long);
336:	static void trace_event_raw_event_xen_mmu_pgd(void *, struct mm_struct *, pgd_t *);
274:	static void trace_event_raw_event_xen_mmu_ptep_modify_prot(void *, struct mm_struct *, unsigned long, pte_t *, pte_t);
320:	static void trace_event_raw_event_xen_mmu_release_ptpage(void *, unsigned long, unsigned int, bool);
239:	static void trace_event_raw_event_xen_mmu_set_p4d(void *, p4d_t *, p4d_t *, p4d_t);
174:	static void trace_event_raw_event_xen_mmu_set_pmd(void *, pmd_t *, pmd_t);
152:	static void trace_event_raw_event_xen_mmu_set_pte_at(void *, struct mm_struct *, unsigned long, pte_t *, pte_t);
222:	static void trace_event_raw_event_xen_mmu_set_pud(void *, pud_t *, pud_t);
383:	static void trace_event_raw_event_xen_mmu_write_cr3(void *, bool, unsigned long);
429:	static enum print_line_t trace_raw_output_xen_cpu_load_idt(struct trace_iterator *, int, struct trace_event *);
458:	static enum print_line_t trace_raw_output_xen_cpu_set_ldt(struct trace_iterator *, int, struct trace_event *);
439:	static enum print_line_t trace_raw_output_xen_cpu_write_gdt_entry(struct trace_iterator *, int, struct trace_event *);
415:	static enum print_line_t trace_raw_output_xen_cpu_write_idt_entry(struct trace_iterator *, int, struct trace_event *);
398:	static enum print_line_t trace_raw_output_xen_cpu_write_ldt_entry(struct trace_iterator *, int, struct trace_event *);
15:	static enum print_line_t trace_raw_output_xen_mc__batch(struct trace_iterator *, int, struct trace_event *);
65:	static enum print_line_t trace_raw_output_xen_mc_callback(struct trace_iterator *, int, struct trace_event *);
36:	static enum print_line_t trace_raw_output_xen_mc_entry(struct trace_iterator *, int, struct trace_event *);
55:	static enum print_line_t trace_raw_output_xen_mc_entry_alloc(struct trace_iterator *, int, struct trace_event *);
109:	static enum print_line_t trace_raw_output_xen_mc_extend_args(struct trace_iterator *, int, struct trace_event *);
94:	static enum print_line_t trace_raw_output_xen_mc_flush(struct trace_iterator *, int, struct trace_event *);
80:	static enum print_line_t trace_raw_output_xen_mc_flush_reason(struct trace_iterator *, int, struct trace_event *);
130:	static enum print_line_t trace_raw_output_xen_mmu__set_pte(struct trace_iterator *, int, struct trace_event *);
302:	static enum print_line_t trace_raw_output_xen_mmu_alloc_ptpage(struct trace_iterator *, int, struct trace_event *);
355:	static enum print_line_t trace_raw_output_xen_mmu_flush_tlb_one_user(struct trace_iterator *, int, struct trace_event *);
365:	static enum print_line_t trace_raw_output_xen_mmu_flush_tlb_others(struct trace_iterator *, int, struct trace_event *);
336:	static enum print_line_t trace_raw_output_xen_mmu_pgd(struct trace_iterator *, int, struct trace_event *);
274:	static enum print_line_t trace_raw_output_xen_mmu_ptep_modify_prot(struct trace_iterator *, int, struct trace_event *);
320:	static enum print_line_t trace_raw_output_xen_mmu_release_ptpage(struct trace_iterator *, int, struct trace_event *);
239:	static enum print_line_t trace_raw_output_xen_mmu_set_p4d(struct trace_iterator *, int, struct trace_event *);
174:	static enum print_line_t trace_raw_output_xen_mmu_set_pmd(struct trace_iterator *, int, struct trace_event *);
152:	static enum print_line_t trace_raw_output_xen_mmu_set_pte_at(struct trace_iterator *, int, struct trace_event *);
222:	static enum print_line_t trace_raw_output_xen_mmu_set_pud(struct trace_iterator *, int, struct trace_event *);
383:	static enum print_line_t trace_raw_output_xen_mmu_write_cr3(struct trace_iterator *, int, struct trace_event *);

File ./include/xen/hvm.h:
39:	static int hvm_get_parameter(int, uint64_t *);

File arch/x86/crypto/aes_glue.c:
19:	void crypto_aes_decrypt_x86(struct crypto_aes_ctx *, u8 *, const u8 *);
13:	void crypto_aes_encrypt_x86(struct crypto_aes_ctx *, u8 *, const u8 *);
30:	static void aes_decrypt(struct crypto_tfm *, u8 *, const u8 *);
25:	static void aes_encrypt(struct crypto_tfm *, u8 *, const u8 *);
59:	static void aes_fini(void);
54:	static int aes_init(void);

File arch/x86/crypto/aesni-intel_glue.c:
413:	static void __aes_decrypt(struct crypto_tfm *, u8 *, const u8 *);
406:	static void __aes_encrypt(struct crypto_tfm *, u8 *, const u8 *);
393:	static void aes_decrypt(struct crypto_tfm *, u8 *, const u8 *);
380:	static void aes_encrypt(struct crypto_tfm *, u8 *, const u8 *);
374:	static int aes_set_key(struct crypto_tfm *, const u8 *, unsigned int);
350:	static int aes_set_key_common(struct crypto_tfm *, void *, const u8 *, unsigned int);
532:	static void aesni_ctr_enc_avx_tfm(struct crypto_aes_ctx *, u8 *, const u8 *, unsigned int, u8 *);
1532:	static void aesni_exit(void);
223:	static void aesni_gcm_dec_avx(void *, struct gcm_context_data *, u8 *, const u8 *, unsigned long, u8 *, u8 *, const u8 *, unsigned long, u8 *, unsigned long);
282:	static void aesni_gcm_dec_avx2(void *, struct gcm_context_data *, u8 *, const u8 *, unsigned long, u8 *, u8 *, const u8 *, unsigned long, u8 *, unsigned long);
205:	static void aesni_gcm_enc_avx(void *, struct gcm_context_data *, u8 *, const u8 *, unsigned long, u8 *, u8 *, const u8 *, unsigned long, u8 *, unsigned long);
260:	static void aesni_gcm_enc_avx2(void *, struct gcm_context_data *, u8 *, const u8 *, unsigned long, u8 *, u8 *, const u8 *, unsigned long, u8 *, unsigned long);
1434:	static int aesni_init(void);
420:	static int aesni_skcipher_setkey(struct crypto_skcipher *, const u8 *, unsigned int);
610:	static void aesni_xts_dec(void *, u128 *, const u128 *, le128 *);
620:	static void aesni_xts_dec8(void *, u128 *, const u128 *, le128 *);
605:	static void aesni_xts_enc(void *, u128 *, const u128 *, le128 *);
615:	static void aesni_xts_enc8(void *, u128 *, const u128 *, le128 *);
600:	static void aesni_xts_tweak(void *, u8 *, const u8 *);
493:	static int cbc_decrypt(struct skcipher_request *);
471:	static int cbc_encrypt(struct skcipher_request *);
749:	static int common_rfc4106_set_authsize(struct crypto_aead *, unsigned int);
721:	static int common_rfc4106_set_key(struct crypto_aead *, const u8 *, unsigned int);
550:	static int ctr_crypt(struct skcipher_request *);
449:	static int ecb_decrypt(struct skcipher_request *);
427:	static int ecb_encrypt(struct skcipher_request *);
794:	static int gcmaes_crypt_by_sg(bool, struct aead_request *, unsigned int, u8 *, u8 *, void *);
987:	static int gcmaes_decrypt(struct aead_request *, unsigned int, u8 *, u8 *, void *);
918:	static int gcmaes_encrypt(struct aead_request *, unsigned int, u8 *, u8 *, void *);
1133:	static int gcmaes_wrapper_decrypt(struct aead_request *);
1117:	static int gcmaes_wrapper_encrypt(struct aead_request *);
766:	static int gcmaes_wrapper_set_authsize(struct crypto_aead *, unsigned int);
740:	static int gcmaes_wrapper_set_key(struct crypto_aead *, const u8 *, unsigned int);
1301:	static int generic_gcmaes_decrypt(struct aead_request *);
1286:	static int generic_gcmaes_encrypt(struct aead_request *);
1316:	static int generic_gcmaes_init(struct crypto_aead *);
775:	static int generic_gcmaes_set_authsize(struct crypto_aead *, unsigned int);
1276:	static int generic_gcmaes_set_key(struct crypto_aead *, const u8 *, unsigned int);
1090:	static int helper_rfc4106_decrypt(struct aead_request *);
1064:	static int helper_rfc4106_encrypt(struct aead_request *);
689:	static void rfc4106_exit(struct crypto_aead *);
673:	static int rfc4106_init(struct crypto_aead *);
697:	static int rfc4106_set_hash_subkey(u8 *, const u8 *, unsigned int);
576:	static int xts_aesni_setkey(struct crypto_skcipher *, const u8 *, unsigned int);
662:	static int xts_decrypt(struct skcipher_request *);
651:	static int xts_encrypt(struct skcipher_request *);

File arch/x86/crypto/fpu.c:
202:	void crypto_fpu_exit(void);
197:	int crypto_fpu_init(void);
114:	static int crypto_fpu_create(struct crypto_template *, struct rtattr **);
63:	static int crypto_fpu_decrypt(struct skcipher_request *);
42:	static int crypto_fpu_encrypt(struct skcipher_request *);
101:	static void crypto_fpu_exit_tfm(struct crypto_skcipher *);
108:	static void crypto_fpu_free(struct skcipher_instance *);
84:	static int crypto_fpu_init_tfm(struct crypto_skcipher *);
26:	static int crypto_fpu_setkey(struct crypto_skcipher *, const u8 *, unsigned int);

File arch/x86/crypto/glue_helper.c:
112:	int glue_cbc_decrypt_req_128bit(const struct common_glue_ctx *, struct skcipher_request *);
80:	int glue_cbc_encrypt_req_128bit(const common_glue_func_t, struct skcipher_request *);
172:	int glue_ctr_req_128bit(const struct common_glue_ctx *, struct skcipher_request *);
35:	int glue_ecb_req_128bit(const struct common_glue_ctx *, struct skcipher_request *);
311:	void glue_xts_crypt_128bit_one(void *, u128 *, const u128 *, le128 *, common_glue_func_t);
274:	int glue_xts_req_128bit(const struct common_glue_ctx *, struct skcipher_request *, common_glue_func_t, void *, void *);

File arch/x86/crypto/sha1_ssse3_glue.c:
200:	static bool avx2_usable(void);
164:	static bool avx_usable(void);
210:	static void sha1_apply_transform_avx2(u32 *, const char *, unsigned int);
234:	static int sha1_avx2_final(struct shash_desc *, u8 *);
227:	static int sha1_avx2_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
220:	static int sha1_avx2_update(struct shash_desc *, const u8 *, unsigned int);
143:	static int sha1_avx_final(struct shash_desc *, u8 *);
136:	static int sha1_avx_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
129:	static int sha1_avx_update(struct shash_desc *, const u8 *, unsigned int);
57:	static int sha1_finup(struct shash_desc *, const u8 *, unsigned int, u8 *, sha1_transform_fn *);
291:	static int sha1_ni_final(struct shash_desc *, u8 *);
284:	static int sha1_ni_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
277:	static int sha1_ni_update(struct shash_desc *, const u8 *, unsigned int);
91:	static int sha1_ssse3_final(struct shash_desc *, u8 *);
83:	static int sha1_ssse3_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
358:	static void sha1_ssse3_mod_fini(void);
330:	static int sha1_ssse3_mod_init(void);
76:	static int sha1_ssse3_update(struct shash_desc *, const u8 *, unsigned int);
37:	static int sha1_update(struct shash_desc *, const u8 *, unsigned int, sha1_transform_fn *);
182:	static void unregister_sha1_avx(void);
262:	static void unregister_sha1_avx2(void);

File arch/x86/crypto/sha256_ssse3_glue.c:
279:	static bool avx2_usable(void);
197:	static bool avx_usable(void);
244:	static int sha256_avx2_final(struct shash_desc *, u8 *);
238:	static int sha256_avx2_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
232:	static int sha256_avx2_update(struct shash_desc *, const u8 *, unsigned int);
162:	static int sha256_avx_final(struct shash_desc *, u8 *);
156:	static int sha256_avx_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
150:	static int sha256_avx_update(struct shash_desc *, const u8 *, unsigned int);
67:	static int sha256_finup(struct shash_desc *, const u8 *, unsigned int, u8 *, sha256_transform_fn *);
324:	static int sha256_ni_final(struct shash_desc *, u8 *);
318:	static int sha256_ni_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
312:	static int sha256_ni_update(struct shash_desc *, const u8 *, unsigned int);
96:	static int sha256_ssse3_final(struct shash_desc *, u8 *);
89:	static int sha256_ssse3_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
407:	static void sha256_ssse3_mod_fini(void);
379:	static int sha256_ssse3_mod_init(void);
83:	static int sha256_ssse3_update(struct shash_desc *, const u8 *, unsigned int);
47:	static int sha256_update(struct shash_desc *, const u8 *, unsigned int, sha256_transform_fn *);
139:	static void unregister_sha256_ssse3(void);

File arch/x86/entry/common.c:
368:	long do_fast_syscall_32(struct pt_regs *);
360:	void do_int80_syscall_32(struct pt_regs *);
280:	void do_syscall_64(unsigned long, struct pt_regs *);
41:	void enter_from_user_mode(void);
189:	void prepare_exit_to_usermode(struct pt_regs *);
255:	void syscall_return_slowpath(struct pt_regs *);
139:	static void exit_to_usermode_loop(struct pt_regs *, u32);
229:	static void syscall_slow_exit_work(struct pt_regs *, u32);
68:	static long syscall_trace_enter(struct pt_regs *);

File arch/x86/entry/vdso/vdso32-setup.c:
53:	int sysenter_setup(void);
93:	static int ia32_binfmt_init(void);
30:	static int vdso32_setup(char *);

File arch/x86/entry/vdso/vma.c:
295:	int arch_setup_additional_pages(struct linux_binprm *, int);
304:	int compat_arch_setup_additional_pages(struct linux_binprm *, int);
31:	void init_vdso_image(const struct vdso_image *);
259:	int map_vdso_once(const struct vdso_image *, unsigned long);
370:	static int init_vdso(void);
152:	static int map_vdso(const struct vdso_image *, unsigned long);
42:	static int vdso_fault(const struct vm_special_mapping *, struct vm_area_struct *, struct vm_fault *);
72:	static int vdso_mremap(const struct vm_special_mapping *, struct vm_area_struct *);
329:	static int vdso_setup(char *);
338:	static void vgetcpu_cpu_init(void *);
365:	static int vgetcpu_online(unsigned int);
87:	static int vvar_fault(const struct vm_special_mapping *, struct vm_area_struct *, struct vm_fault *);

File arch/x86/entry/vsyscall/vsyscall_64.c:
123:	bool emulate_vsyscall(struct pt_regs *, unsigned long);
302:	struct vm_area_struct *get_gate_vma(struct mm_struct *);
313:	int in_gate_area(struct mm_struct *, unsigned long);
328:	int in_gate_area_no_mm(unsigned long);
362:	void map_vsyscall(void);
343:	void set_vsyscall_pgtable_user_bits(pgd_t *);
287:	static const char *gate_vma_name(struct vm_area_struct *);
52:	static int vsyscall_setup(char *);
69:	static void warn_bad_vsyscall(const char *, struct pt_regs *, const char *);
95:	static bool write_ok_or_segv(unsigned long, size_t);

File arch/x86/entry/vsyscall/vsyscall_gtod.c:
30:	void update_vsyscall(struct timekeeper *);
24:	void update_vsyscall_tz(void);

File arch/x86/events/amd/core.c:
1045:	void amd_pmu_disable_virt(void);
1033:	void amd_pmu_enable_virt(void);
1003:	int amd_pmu_init(void);
907:	static ssize_t amd_event_sysfs_show(char *, u64);
703:	static struct event_constraint *amd_get_event_constraints(struct cpu_hw_events *, int, struct perf_event *);
812:	static struct event_constraint *amd_get_event_constraints_f15h(struct cpu_hw_events *, int, struct perf_event *);
887:	static struct event_constraint *amd_get_event_constraints_f17h(struct cpu_hw_events *, int, struct perf_event *);
279:	static int amd_pmu_addr_offset(int, bool);
558:	static void amd_pmu_cpu_dead(int);
511:	static int amd_pmu_cpu_prepare(int);
527:	static void amd_pmu_cpu_starting(int);
606:	static void amd_pmu_disable_all(void);
635:	static void amd_pmu_disable_event(struct perf_event *);
258:	static u64 amd_pmu_event_map(int);
670:	static int amd_pmu_handle_irq(struct pt_regs *);
359:	static int amd_pmu_hw_config(struct perf_event *);
586:	static void amd_pmu_wait_on_overflow(int);
715:	static void amd_put_event_constraints(struct cpu_hw_events *, struct perf_event *);
898:	static void amd_put_event_constraints_f17h(struct cpu_hw_events *, struct perf_event *);
726:	static ssize_t cmask_show(struct device *, struct device_attribute *, char *);
724:	static ssize_t edge_show(struct device *, struct device_attribute *, char *);
722:	static ssize_t event_show(struct device *, struct device_attribute *, char *);
725:	static ssize_t inv_show(struct device *, struct device_attribute *, char *);
723:	static ssize_t umask_show(struct device *, struct device_attribute *, char *);

File arch/x86/events/amd/ibs.c:
788:	u32 get_ibs_caps(void);
1004:	static int amd_ibs_init(void);
953:	static void clear_APIC_ibs(void);
519:	static ssize_t cnt_ctl_show(struct device *, struct device_attribute *, char *);
880:	static void force_ibs_eilvt_setup(void);
340:	static u64 get_ibs_fetch_count(u64);
345:	static u64 get_ibs_op_count(u64);
483:	static int perf_ibs_add(struct perf_event *, int);
501:	static void perf_ibs_del(struct perf_event *, int);
359:	static void perf_ibs_event_update(struct perf_event *, u64 *, struct perf_ibs *);
580:	static int perf_ibs_handle_irq(struct perf_ibs *, struct pt_regs *);
265:	static int perf_ibs_init(struct perf_event *);
695:	static int perf_ibs_nmi_handler(unsigned int, struct pt_regs *);
712:	static int perf_ibs_pmu_init(struct perf_ibs *, char *);
516:	static void perf_ibs_read(struct perf_event *);
976:	static void perf_ibs_resume(void);
404:	static void perf_ibs_start(struct perf_event *, int);
429:	static void perf_ibs_stop(struct perf_event *, int);
970:	static int perf_ibs_suspend(void);
518:	static ssize_t rand_en_show(struct device *, struct device_attribute *, char *);
938:	static void setup_APIC_ibs(void);
998:	static int x86_pmu_amd_ibs_dying_cpu(unsigned int);
962:	static int x86_pmu_amd_ibs_starting_cpu(unsigned int);

File arch/x86/events/amd/iommu.c:
138:	static ssize_t _iommu_cpumask_show(struct device *, struct device_attribute *, char *);
91:	static ssize_t _iommu_event_show(struct device *, struct device_attribute *, char *);
456:	static int amd_iommu_pc_init(void);
55:	static ssize_t csource_show(struct device *, struct device_attribute *, char *);
59:	static ssize_t devid_mask_show(struct device *, struct device_attribute *, char *);
56:	static ssize_t devid_show(struct device *, struct device_attribute *, char *);
60:	static ssize_t domid_mask_show(struct device *, struct device_attribute *, char *);
57:	static ssize_t domid_show(struct device *, struct device_attribute *, char *);
61:	static ssize_t pasid_mask_show(struct device *, struct device_attribute *, char *);
58:	static ssize_t pasid_show(struct device *, struct device_attribute *, char *);
350:	static int perf_iommu_add(struct perf_event *, int);
367:	static void perf_iommu_del(struct perf_event *, int);
210:	static int perf_iommu_event_init(struct perf_event *);
309:	static void perf_iommu_read(struct perf_event *);
286:	static void perf_iommu_start(struct perf_event *, int);
332:	static void perf_iommu_stop(struct perf_event *, int);

File arch/x86/events/amd/uncore.c:
129:	static int amd_uncore_add(struct perf_event *, int);
243:	static ssize_t amd_uncore_attr_show_cpumask(struct device *, struct device_attribute *, char *);
510:	static int amd_uncore_cpu_dead(unsigned int);
487:	static int amd_uncore_cpu_down_prepare(unsigned int);
450:	static int amd_uncore_cpu_online(unsigned int);
403:	static int amd_uncore_cpu_starting(unsigned int);
335:	static int amd_uncore_cpu_up_prepare(unsigned int);
170:	static void amd_uncore_del(struct perf_event *, int);
186:	static int amd_uncore_event_init(struct perf_event *);
377:	static struct amd_uncore *amd_uncore_find_online_sibling(struct amd_uncore *, struct amd_uncore **);
521:	static int amd_uncore_init(void);
85:	static void amd_uncore_read(struct perf_event *);
104:	static void amd_uncore_start(struct perf_event *, int);
116:	static void amd_uncore_stop(struct perf_event *, int);
302:	static ssize_t event_show(struct device *, struct device_attribute *, char *);
304:	static ssize_t event_show_df(struct device *, struct device_attribute *, char *);
305:	static ssize_t event_show_l3(struct device *, struct device_attribute *, char *);
75:	static struct amd_uncore *event_to_amd_uncore(struct perf_event *);
303:	static ssize_t umask_show(struct device *, struct device_attribute *, char *);
498:	static void uncore_dead(unsigned int, struct amd_uncore **);
461:	static void uncore_down_prepare(unsigned int, struct amd_uncore **);
439:	static void uncore_online(unsigned int, struct amd_uncore **);

File arch/x86/events/core.c:
2359:	void arch_perf_update_userpage(struct perf_event *, struct perf_event_mmap_page *, u64);
1701:	ssize_t events_ht_sysfs_show(struct device *, struct device_attribute *, char *);
1687:	ssize_t events_sysfs_show(struct device *, struct device_attribute *, char *);
288:	void hw_perf_lbr_event_destroy(struct perf_event *);
875:	int perf_assign_events(struct event_constraint **, int, int, int, int, int *);
2409:	void perf_callchain_kernel(struct perf_callchain_entry_ctx *, struct pt_regs *);
2518:	void perf_callchain_user(struct perf_callchain_entry_ctx *, struct pt_regs *);
2313:	void perf_check_microcode(void);
1386:	void perf_event_print_debug(void);
1580:	void perf_events_lapic_init(void);
2635:	void perf_get_x86_pmu_capability(struct x86_pmu_capability *);
2605:	unsigned long perf_instruction_pointer(struct pt_regs *);
2613:	unsigned long perf_misc_flags(struct pt_regs *);
371:	int x86_add_exclusive(unsigned int);
401:	void x86_del_exclusive(unsigned int);
1771:	ssize_t x86_event_sysfs_show(char *, u64, u64);
689:	struct pmu *x86_get_pmu(void);
1214:	int x86_perf_event_set_period(struct perf_event *);
68:	u64 x86_perf_event_update(struct perf_event *);
616:	void x86_pmu_disable_all(void);
667:	void x86_pmu_enable_all(int);
1288:	void x86_pmu_enable_event(struct perf_event *);
1531:	int x86_pmu_handle_irq(struct pt_regs *);
501:	int x86_pmu_hw_config(struct perf_event *);
483:	int x86_pmu_max_precise(void);
1446:	void x86_pmu_stop(struct perf_event *, int);
358:	void x86_release_hardware(void);
338:	int x86_reserve_hardware(void);
893:	int x86_schedule_events(struct cpu_hw_events *, int, int *);
414:	int x86_setup_perfctr(struct perf_event *);
2044:	static struct cpu_hw_events *allocate_fake_cpuc(void);
1036:	static int collect_event(struct cpu_hw_events *, struct perf_event *, int, int);
1057:	static int collect_events(struct cpu_hw_events *, struct perf_event *, bool);
2227:	static ssize_t get_attr_rdpmc(struct device *, struct device_attribute *, char *);
2440:	static unsigned long get_segment_base(unsigned int);
282:	static void hw_perf_event_destroy(struct perf_event *);
1829:	static int init_hw_perf_events(void);
1756:	static umode_t is_visible(struct kobject *, struct attribute *, int);
2280:	static ssize_t max_precise_show(struct device *, struct device_attribute *, char *);
1592:	static int perf_event_nmi_handler(unsigned int, struct pt_regs *);
2178:	static void refresh_pce(void *);
2234:	static ssize_t set_attr_rdpmc(struct device *, struct device_attribute *, const char *, size_t);
1301:	static int x86_pmu_add(struct perf_event *, int);
1813:	static int x86_pmu_attr_update_notify(struct notifier_block *, unsigned long, void *);
1969:	static void x86_pmu_cancel_txn(struct pmu *);
2319:	static int x86_pmu_check_period(struct perf_event *, u64);
1998:	static int x86_pmu_commit_txn(struct pmu *);
1630:	static int x86_pmu_dead_cpu(unsigned int);
1469:	static void x86_pmu_del(struct perf_event *, int);
650:	static void x86_pmu_disable(struct pmu *);
1656:	static int x86_pmu_dying_cpu(unsigned int);
1136:	static void x86_pmu_enable(struct pmu *);
2214:	static int x86_pmu_event_idx(struct perf_event *);
2133:	static int x86_pmu_event_init(struct perf_event *);
2183:	static void x86_pmu_event_mapped(struct perf_event *, struct mm_struct *);
2204:	static void x86_pmu_event_unmapped(struct perf_event *, struct mm_struct *);
116:	static int x86_pmu_extra_regs(u64, struct perf_event *);
1637:	static int x86_pmu_online_cpu(unsigned int);
1618:	static int x86_pmu_prepare_cpu(unsigned int);
1933:	static void x86_pmu_read(struct perf_event *);
2307:	static void x86_pmu_sched_task(struct perf_event_context *, bool);
1361:	static void x86_pmu_start(struct perf_event *, int);
1949:	static void x86_pmu_start_txn(struct pmu *, unsigned int);
1649:	static int x86_pmu_starting_cpu(unsigned int);

File arch/x86/events/intel/../perf_event.h:
913:	static void x86_pmu_disable_event(struct perf_event *);

File arch/x86/events/intel/bts.c:
361:	void intel_bts_disable_local(void);
341:	void intel_bts_enable_local(void);
452:	int intel_bts_interrupt(void);
234:	static void __bts_event_start(struct perf_event *);
141:	static void bts_buffer_free_aux(void *);
377:	static int bts_buffer_reset(struct bts_buffer *, struct perf_output_handle *);
88:	static void *bts_buffer_setup_aux(struct perf_event *, void **, int, bool);
521:	static int bts_event_add(struct perf_event *, int);
516:	static void bts_event_del(struct perf_event *, int);
544:	static void bts_event_destroy(struct perf_event *);
550:	static int bts_event_init(struct perf_event *);
584:	static void bts_event_read(struct perf_event *);
262:	static void bts_event_start(struct perf_event *, int);
307:	static void bts_event_stop(struct perf_event *, int);
588:	static int bts_init(void);
191:	static void bts_update(struct bts_ctx *);

File arch/x86/events/intel/core.c:
3995:	void intel_cpuc_finish(struct cpu_hw_events *);
3842:	int intel_cpuc_prepare(struct cpu_hw_events *, int);
3802:	ssize_t intel_event_sysfs_show(char *, u64);
4589:	int intel_pmu_init(void);
2506:	int intel_pmu_save_and_restart(struct perf_event *);
3531:	struct perf_guest_switch_msr *perf_guest_get_msrs(int *);
2926:	struct event_constraint *x86_get_event_constraints(struct cpu_hw_events *, int, struct perf_event *);
2280:	static void __icl_update_topdown_event(struct perf_event *, u64, u64, u64, u64);
1956:	static void __intel_pmu_disable_all(void);
1974:	static void __intel_pmu_enable_all(bool, int);
2801:	static struct event_constraint *__intel_shared_reg_get_constraints(struct perf_event *, struct hw_perf_event_extra *, struct cpu_hw_events *, struct cpu_hw_events *);
2876:	static void __intel_shared_reg_put_constraints(struct hw_perf_event_extra *, struct hw_perf_event_extra *, struct cpu_hw_events *, struct cpu_hw_events *);
3786:	static ssize_t any_show(struct device *, struct device_attribute *, char *);
3766:	static u64 bdw_limit_period(struct perf_event *, u64);
4474:	static ssize_t branches_show(struct device *, struct device_attribute *, char *);
4233:	static bool check_msr(unsigned long, u64);
3788:	static ssize_t cmask_show(struct device *, struct device_attribute *, char *);
3561:	static struct perf_guest_switch_msr *core_guest_get_msrs(int *);
3595:	static void core_pmu_enable_all(int);
3589:	static void core_pmu_enable_event(struct perf_event *);
3412:	static int core_pmu_hw_config(struct perf_event *);
3052:	static struct event_constraint *dyn_constraint(struct event_constraint *, int, struct cpu_hw_events *);
3784:	static ssize_t edge_show(struct device *, struct device_attribute *, char *);
3782:	static ssize_t event_show(struct device *, struct device_attribute *, char *);
4531:	static umode_t exra_is_visible(struct kobject *, struct attribute *, int);
5248:	static int fixup_ht_bug(void);
3887:	static void flip_smm_bit(void *);
3975:	static void free_excl_cntrs(struct cpu_hw_events *, struct cpu_hw_events *);
4433:	static ssize_t freeze_on_smi_show(struct device *, struct device_attribute *, char *);
4442:	static ssize_t freeze_on_smi_store(struct device *, struct device_attribute *, const char *, size_t);
4030:	static ssize_t frontend_show(struct device *, struct device_attribute *, char *);
3694:	static struct event_constraint *glp_get_event_constraints(struct cpu_hw_events *, int, struct perf_event *);
2561:	static int handle_pmi_common(struct pt_regs *, u64);
3661:	static struct event_constraint *hsw_get_event_constraints(struct cpu_hw_events *, int, struct perf_event *);
3611:	static int hsw_hw_config(struct perf_event *);
3679:	static struct event_constraint *icl_get_event_constraints(struct cpu_hw_events *, int, struct perf_event *);
2223:	static int icl_set_topdown_event_period(struct perf_event *);
2329:	static u64 icl_update_topdown_event(struct perf_event *);
3790:	static ssize_t in_tx_cp_show(struct device *, struct device_attribute *, char *);
3789:	static ssize_t in_tx_show(struct device *, struct device_attribute *, char *);
4293:	static void intel_arch_events_quirk(void);
4152:	static void intel_clovertown_quirk(void);
2998:	static void intel_commit_scheduling(struct cpu_hw_events *, int, int);
3177:	static struct event_constraint *intel_get_event_constraints(struct cpu_hw_events *, int, struct perf_event *);
3540:	static struct perf_guest_switch_msr *intel_guest_get_msrs(int *);
4336:	static void intel_ht_bug(void);
4305:	static void intel_nehalem_quirk(void);
3278:	static void intel_pebs_aliases_core2(struct perf_event *);
3358:	static void intel_pebs_aliases_ivb(struct perf_event *);
3365:	static void intel_pebs_aliases_skl(struct perf_event *);
3306:	static void intel_pebs_aliases_snb(struct perf_event *);
2494:	static void intel_pmu_add_event(struct perf_event *);
3385:	static int intel_pmu_bts_config(struct perf_event *);
4021:	static int intel_pmu_check_period(struct perf_event *, u64);
4009:	static void intel_pmu_cpu_dead(int);
3990:	static void intel_pmu_cpu_dying(int);
3882:	static int intel_pmu_cpu_prepare(int);
3900:	static void intel_pmu_cpu_starting(int);
2215:	static void intel_pmu_del_event(struct perf_event *);
1968:	static void intel_pmu_disable_all(void);
2179:	static void intel_pmu_disable_event(struct perf_event *);
1994:	static void intel_pmu_enable_all(int);
2463:	static void intel_pmu_enable_event(struct perf_event *);
378:	static u64 intel_pmu_event_map(int);
2664:	static int intel_pmu_handle_irq(struct pt_regs *);
3422:	static int intel_pmu_hw_config(struct perf_event *);
2073:	static void intel_pmu_nhm_enable_all(int);
2400:	static void intel_pmu_read_event(struct perf_event *);
4014:	static void intel_pmu_sched_task(struct perf_event_context *, bool);
3264:	static void intel_put_event_constraints(struct cpu_hw_events *, struct perf_event *);
4275:	static void intel_sandybridge_quirk(void);
4197:	static void intel_snb_check_microcode(void);
2969:	static void intel_start_scheduling(struct cpu_hw_events *);
3025:	static void intel_stop_scheduling(struct cpu_hw_events *);
2090:	static void intel_tfa_commit_scheduling(struct cpu_hw_events *, int, int);
2099:	static void intel_tfa_pmu_enable_all(int);
3787:	static ssize_t inv_show(struct device *, struct device_attribute *, char *);
4525:	static umode_t lbr_is_visible(struct kobject *, struct attribute *, int);
4028:	static ssize_t ldlat_show(struct device *, struct device_attribute *, char *);
3777:	static u64 nhm_limit_period(struct perf_event *, u64);
4026:	static ssize_t offcore_rsp_show(struct device *, struct device_attribute *, char *);
3785:	static ssize_t pc_show(struct device *, struct device_attribute *, char *);
4519:	static umode_t pebs_is_visible(struct kobject *, struct attribute *, int);
4490:	static ssize_t pmu_name_show(struct device *, struct device_attribute *, char *);
3734:	static struct event_constraint *tfa_get_event_constraints(struct cpu_hw_events *, int, struct perf_event *);
3709:	static struct event_constraint *tnt_get_event_constraints(struct cpu_hw_events *, int, struct perf_event *);
4513:	static umode_t tsx_is_visible(struct kobject *, struct attribute *, int);
3783:	static ssize_t umask_show(struct device *, struct device_attribute *, char *);
2304:	static void update_saved_topdown_regs(u64, u64, struct perf_event *, struct perf_event *);

File arch/x86/events/intel/ds.c:
275:	void fini_debug_store_on_cpu(int);
263:	void init_debug_store_on_cpu(int);
1956:	void intel_ds_init(void);
872:	struct event_constraint *intel_pebs_constraints(struct perf_event *);
1610:	void intel_pmu_auto_reload_read(struct perf_event *);
563:	void intel_pmu_disable_bts(void);
580:	int intel_pmu_drain_bts_buffer(void);
543:	void intel_pmu_enable_bts(u64);
1053:	void intel_pmu_pebs_add(struct perf_event *);
81:	void intel_pmu_pebs_data_source_nhm(void);
88:	void intel_pmu_pebs_data_source_skl(bool);
1105:	void intel_pmu_pebs_del(struct perf_event *);
1118:	void intel_pmu_pebs_disable(struct perf_event *);
1148:	void intel_pmu_pebs_disable_all(void);
1066:	void intel_pmu_pebs_enable(struct perf_event *);
1140:	void intel_pmu_pebs_enable_all(void);
908:	void intel_pmu_pebs_sched_task(struct perf_event_context *, bool);
2040:	void perf_restore_debug_store(void);
448:	void release_ds_buffers(void);
473:	void reserve_ds_buffers(void);
1678:	static void __intel_pmu_pebs_event(struct perf_event *, struct pt_regs *, void *, void *, int, int, void (*)(struct perf_event *, struct pt_regs *, void *, struct perf_sample_data *, struct pt_regs *));
305:	static void ds_clear_cea(void *, size_t);
285:	static void ds_update_cea(void *, void *, size_t, pgprot_t);
318:	static void *dsalloc_pages(size_t, gfp_t, int);
1281:	static u64 get_data_src(u64, struct perf_event *);
670:	static void intel_pmu_drain_pebs_buffer(void);
1727:	static void intel_pmu_drain_pebs_core(struct pt_regs *);
1898:	static void intel_pmu_drain_pebs_icl(struct pt_regs *);
1784:	static void intel_pmu_drain_pebs_nhm(struct pt_regs *);
1765:	static void intel_pmu_pebs_event_update_no_drain(struct cpu_hw_events *, int);
1156:	static int intel_pmu_pebs_fixup_ip(struct pt_regs *);
1623:	static int intel_pmu_save_and_restart_reload(struct perf_event *, int);
1006:	static void pebs_update_state(bool, struct cpu_hw_events *, struct perf_event *, bool);
419:	static void release_bts_buffer(int);
372:	static void release_pebs_buffer(int);
1465:	static void setup_pebs_adaptive_sample_data(struct perf_event *, struct pt_regs *, void *, struct perf_sample_data *, struct pt_regs *);
1296:	static void setup_pebs_fixed_sample_data(struct perf_event *, struct pt_regs *, void *, struct perf_sample_data *, struct pt_regs *);

File arch/x86/events/intel/knc.c:
314:	int knc_pmu_init(void);
279:	static ssize_t cmask_show(struct device *, struct device_attribute *, char *);
277:	static ssize_t edge_show(struct device *, struct device_attribute *, char *);
275:	static ssize_t event_show(struct device *, struct device_attribute *, char *);
278:	static ssize_t inv_show(struct device *, struct device_attribute *, char *);
158:	static void knc_pmu_disable_all(void);
177:	static void knc_pmu_disable_event(struct perf_event *);
167:	static void knc_pmu_enable_all(int);
188:	static void knc_pmu_enable_event(struct perf_event *);
120:	static u64 knc_pmu_event_map(int);
213:	static int knc_pmu_handle_irq(struct pt_regs *);
276:	static ssize_t umask_show(struct device *, struct device_attribute *, char *);

File arch/x86/events/intel/lbr.c:
463:	void intel_pmu_lbr_add(struct perf_event *);
507:	void intel_pmu_lbr_del(struct perf_event *);
548:	void intel_pmu_lbr_disable_all(void);
540:	void intel_pmu_lbr_enable_all(bool);
1277:	void intel_pmu_lbr_init_atom(void);
1190:	void intel_pmu_lbr_init_core(void);
1243:	void intel_pmu_lbr_init_hsw(void);
1320:	void intel_pmu_lbr_init_knl(void);
1204:	void intel_pmu_lbr_init_nhm(void);
1258:	void intel_pmu_lbr_init_skl(void);
1302:	void intel_pmu_lbr_init_slm(void);
1224:	void intel_pmu_lbr_init_snb(void);
682:	void intel_pmu_lbr_read(void);
217:	void intel_pmu_lbr_reset(void);
426:	void intel_pmu_lbr_sched_task(struct perf_event_context *, bool);
816:	int intel_pmu_setup_lbr_filter(struct perf_event *);
1114:	void intel_pmu_store_pebs_lbrs(struct pebs_lbr *);
279:	u64 lbr_from_signext_quirk_wr(u64);
1342:	int x86_perf_get_lbr(struct x86_pmu_lbr *);
853:	static int branch_type(unsigned long, unsigned long, int);
1062:	static void intel_pmu_lbr_filter(struct cpu_hw_events *);

File arch/x86/events/intel/p4.c:
1339:	int p4_pmu_init(void);
1290:	static ssize_t cccr_show(struct device *, struct device_attribute *, char *);
1291:	static ssize_t escr_show(struct device *, struct device_attribute *, char *);
1292:	static ssize_t ht_show(struct device *, struct device_attribute *, char *);
801:	static int p4_hw_config(struct perf_event *);
916:	static void p4_pmu_disable_all(void);
903:	static void p4_pmu_disable_event(struct perf_event *);
985:	static void p4_pmu_enable_all(int);
949:	static void p4_pmu_enable_event(struct perf_event *);
716:	static u64 p4_pmu_event_map(int);
998:	static int p4_pmu_handle_irq(struct pt_regs *);
1206:	static int p4_pmu_schedule_events(struct cpu_hw_events *, int, int *);

File arch/x86/events/intel/p6.c:
247:	int p6_pmu_init(void);
189:	static ssize_t cmask_show(struct device *, struct device_attribute *, char *);
186:	static ssize_t edge_show(struct device *, struct device_attribute *, char *);
184:	static ssize_t event_show(struct device *, struct device_attribute *, char *);
188:	static ssize_t inv_show(struct device *, struct device_attribute *, char *);
138:	static void p6_pmu_disable_all(void);
159:	static void p6_pmu_disable_event(struct perf_event *);
148:	static void p6_pmu_enable_all(int);
167:	static void p6_pmu_enable_event(struct perf_event *);
114:	static u64 p6_pmu_event_map(int);
235:	static void p6_pmu_rdpmc_quirk(void);
187:	static ssize_t pc_show(struct device *, struct device_attribute *, char *);
185:	static ssize_t umask_show(struct device *, struct device_attribute *, char *);

File arch/x86/events/intel/pt.c:
1474:	void cpu_emergency_stop_pt(void);
1303:	void intel_pt_handle_vmx(int);
1249:	void intel_pt_interrupt(void);
110:	static ssize_t branch_show(struct device *, struct device_attribute *, char *);
103:	static ssize_t cyc_show(struct device *, struct device_attribute *, char *);
112:	static ssize_t cyc_thresh_show(struct device *, struct device_attribute *, char *);
105:	static ssize_t fup_on_ptw_show(struct device *, struct device_attribute *, char *);
111:	static ssize_t mtc_period_show(struct device *, struct device_attribute *, char *);
106:	static ssize_t mtc_show(struct device *, struct device_attribute *, char *);
108:	static ssize_t noretcomp_show(struct device *, struct device_attribute *, char *);
113:	static ssize_t psb_period_show(struct device *, struct device_attribute *, char *);
1043:	static void pt_buffer_fini_topa(struct pt_buffer *);
1144:	static void pt_buffer_free_aux(void *);
918:	static int pt_buffer_reset_markers(struct pt_buffer *, struct perf_output_handle *);
1020:	static void pt_buffer_reset_offsets(struct pt_buffer *, unsigned long);
1107:	static void *pt_buffer_setup_aux(struct perf_event *, void **, int, bool);
87:	static ssize_t pt_cap_show(struct device *, struct device_attribute *, char *);
469:	static void pt_config(struct perf_event *);
536:	static void pt_config_buffer(void *, unsigned int, unsigned int);
510:	static void pt_config_stop(struct perf_event *);
1419:	static int pt_event_add(struct perf_event *, int);
1213:	static void pt_event_addr_filters_sync(struct perf_event *);
1184:	static int pt_event_addr_filters_validate(struct list_head *);
1414:	static void pt_event_del(struct perf_event *, int);
1447:	static void pt_event_destroy(struct perf_event *);
1453:	static int pt_event_init(struct perf_event *);
1443:	static void pt_event_read(struct perf_event *);
1343:	static void pt_event_start(struct perf_event *, int);
1374:	static void pt_event_stop(struct perf_event *, int);
809:	static void pt_handle_status(struct pt *);
1482:	static int pt_init(void);
866:	static void pt_read_offset(struct pt_buffer *);
102:	static ssize_t pt_show(struct device *, struct device_attribute *, char *);
137:	static ssize_t pt_timing_attr_show(struct device *, struct device_attribute *, char *);
710:	static void pt_topa_dump(struct pt_buffer *);
763:	static void pt_update_head(struct pt *);
109:	static ssize_t ptw_show(struct device *, struct device_attribute *, char *);
104:	static ssize_t pwr_evt_show(struct device *, struct device_attribute *, char *);
583:	static struct topa *topa_alloc(int, gfp_t);
627:	static void topa_insert_table(struct pt_buffer *, struct topa *);
107:	static ssize_t tsc_show(struct device *, struct device_attribute *, char *);

File arch/x86/events/msr.c:
140:	static ssize_t event_show(struct device *, struct device_attribute *, char *);
243:	static int msr_event_add(struct perf_event *, int);
156:	static int msr_event_init(struct perf_event *);
226:	static void msr_event_start(struct perf_event *, int);
233:	static void msr_event_stop(struct perf_event *, int);
200:	static void msr_event_update(struct perf_event *);
263:	static int msr_init(void);
20:	static bool test_aperfmperf(int);
40:	static bool test_intel(int);
30:	static bool test_irperf(int);
25:	static bool test_ptsc(int);
35:	static bool test_therm_status(int);

File arch/x86/events/zhaoxin/core.c:
505:	int zhaoxin_pmu_init(void);
441:	static ssize_t cmask_show(struct device *, struct device_attribute *, char *);
439:	static ssize_t edge_show(struct device *, struct device_attribute *, char *);
437:	static ssize_t event_show(struct device *, struct device_attribute *, char *);
440:	static ssize_t inv_show(struct device *, struct device_attribute *, char *);
438:	static ssize_t umask_show(struct device *, struct device_attribute *, char *);
493:	static void zhaoxin_arch_events_quirk(void);
452:	static ssize_t zhaoxin_event_sysfs_show(char *, u64);
422:	static struct event_constraint *zhaoxin_get_event_constraints(struct cpu_hw_events *, int, struct perf_event *);
255:	static void zhaoxin_pmu_disable_all(void);
301:	static void zhaoxin_pmu_disable_event(struct perf_event *);
260:	static void zhaoxin_pmu_enable_all(int);
338:	static void zhaoxin_pmu_enable_event(struct perf_event *);
416:	static u64 zhaoxin_pmu_event_map(int);
354:	static int zhaoxin_pmu_handle_irq(struct pt_regs *);

File arch/x86/events/zhaoxin/uncore.c:
1032:	void chx_uncore_cpu_init(void);
53:	ssize_t zx_uncore_event_show(struct kobject *, struct kobj_attribute *, char *);
51:	static ssize_t __uncore_cmask8_show(struct kobject *, struct kobj_attribute *, char *);
49:	static ssize_t __uncore_edge_show(struct kobject *, struct kobj_attribute *, char *);
47:	static ssize_t __uncore_event_show(struct kobject *, struct kobj_attribute *, char *);
50:	static ssize_t __uncore_inv_show(struct kobject *, struct kobj_attribute *, char *);
48:	static ssize_t __uncore_umask_show(struct kobject *, struct kobj_attribute *, char *);
75:	static void chx_uncore_msr_disable_box(struct zhaoxin_uncore_box *);
61:	static void chx_uncore_msr_disable_event(struct zhaoxin_uncore_box *, struct perf_event *);
80:	static void chx_uncore_msr_enable_box(struct zhaoxin_uncore_box *);
85:	static void chx_uncore_msr_enable_event(struct zhaoxin_uncore_box *, struct perf_event *);
244:	static struct zhaoxin_uncore_box *uncore_alloc_box(struct zhaoxin_uncore_type *, int);
308:	static int uncore_assign_events(struct zhaoxin_uncore_box *, int *, int);
772:	static void uncore_change_type_ctx(int, int, struct zhaoxin_uncore_type *, struct zhaoxin_uncore_type *);
412:	static int uncore_collect_events(struct zhaoxin_uncore_box *, struct perf_event *, bool);
827:	static int uncore_event_cpu_offline(unsigned int);
915:	static int uncore_event_cpu_online(unsigned int);
644:	static ssize_t uncore_get_attr_cpumask(struct device *, struct device_attribute *, char *);
66:	static u64 uncore_msr_read_counter(struct zhaoxin_uncore_box *, struct perf_event *);
171:	static void uncore_perf_event_update(struct zhaoxin_uncore_box *, struct perf_event *);
449:	static int uncore_pmu_event_add(struct perf_event *, int);
545:	static void uncore_pmu_event_del(struct perf_event *, int);
575:	static int uncore_pmu_event_init(struct perf_event *);
568:	static void uncore_pmu_event_read(struct perf_event *);
357:	static void uncore_pmu_event_start(struct perf_event *, int);
383:	static void uncore_pmu_event_stop(struct perf_event *, int);
194:	static enum hrtimer_restart uncore_pmu_hrtimer(struct hrtimer *);
677:	static void uncore_type_exit(struct zhaoxin_uncore_type *);
1094:	static void zhaoxin_uncore_exit(void);
1051:	static int zhaoxin_uncore_init(void);

File arch/x86/hyperv/hv_apic.c:
241:	void hv_apic_init(void);
135:	static bool __send_ipi_mask(const struct cpumask *, int);
191:	static bool __send_ipi_one(int, int);
88:	static void hv_apic_eoi_write(u32, u32);
38:	static u64 hv_apic_icr_read(void);
46:	static void hv_apic_icr_write(u32, u32);
57:	static u32 hv_apic_read(u32);
74:	static void hv_apic_write(u32, u32);
199:	static void hv_send_ipi(int, int);
229:	static void hv_send_ipi_all(int);
224:	static void hv_send_ipi_allbutself(int);
205:	static void hv_send_ipi_mask(const struct cpumask *, int);
211:	static void hv_send_ipi_mask_allbutself(const struct cpumask *, int);
235:	static void hv_send_ipi_self(int);

File arch/x86/hyperv/hv_init.c:
214:	void clear_hv_tscchange_cb(void);
39:	struct ms_hyperv_tsc_page *hv_get_tsc_page(void);
487:	bool hv_is_hyperv_initialized(void);
407:	void hyperv_cleanup(void);
286:	void hyperv_init(void);
179:	void hyperv_reenlightenment_intr(struct pt_regs *);
431:	void hyperv_report_panic(struct pt_regs *, long);
465:	void hyperv_report_panic_msg(phys_addr_t, size_t);
154:	void hyperv_stop_tsc_emulation(void);
190:	void set_hv_tscchange_cb(void (*)(void));
229:	static int hv_cpu_die(unsigned int);
101:	static int hv_cpu_init(unsigned int);
262:	static int hv_pci_init(void);
142:	static void hv_reenlightenment_notify(struct work_struct *);
64:	static u64 read_hv_clock_msr(struct clocksource *);
45:	static u64 read_hv_clock_tsc(struct clocksource *);

File arch/x86/hyperv/mmu.c:
230:	void hyperv_setup_mmu_ops(void);
55:	static void hyperv_flush_tlb_others(const struct cpumask *, const struct flush_tlb_info *);

File arch/x86/hyperv/nested.c:
19:	int hyperv_flush_guest_mapping(u64);

File arch/x86/ia32/audit.c:
29:	int ia32_classify_syscall(unsigned int);

File arch/x86/ia32/ia32_signal.c:
256:	int ia32_setup_frame(int, struct ksignal *, compat_sigset_t *, struct pt_regs *);
334:	int ia32_setup_rt_frame(int, struct ksignal *, compat_sigset_t *, struct pt_regs *);
147:	long sys32_rt_sigreturn(void);
121:	long sys32_sigreturn(void);
220:	static void *get_sigframe(size_t, void **, struct pt_regs *, struct pt_regs *, struct ksignal *, struct ksignal *);
70:	static int ia32_restore_sigcontext(struct pt_regs *, struct sigcontext_32 *);
179:	static int ia32_setup_sigcontext(struct sigcontext_32 *, void *, struct pt_regs *, unsigned int);

File arch/x86/ia32/sys_ia32.c:
236:	long __ia32_compat_sys_x86_clone(const struct pt_regs *);
218:	long __ia32_compat_sys_x86_fadvise64(const struct pt_regs *);
193:	long __ia32_compat_sys_x86_fadvise64_64(const struct pt_regs *);
225:	long __ia32_compat_sys_x86_fallocate(const struct pt_regs *);
121:	long __ia32_compat_sys_x86_fstat64(const struct pt_regs *);
131:	long __ia32_compat_sys_x86_fstatat(const struct pt_regs *);
62:	long __ia32_compat_sys_x86_ftruncate64(const struct pt_regs *);
111:	long __ia32_compat_sys_x86_lstat64(const struct pt_regs *);
159:	long __ia32_compat_sys_x86_mmap(const struct pt_regs *);
174:	long __ia32_compat_sys_x86_pread(const struct pt_regs *);
181:	long __ia32_compat_sys_x86_pwrite(const struct pt_regs *);
203:	long __ia32_compat_sys_x86_readahead(const struct pt_regs *);
100:	long __ia32_compat_sys_x86_stat64(const struct pt_regs *);
209:	long __ia32_compat_sys_x86_sync_file_range(const struct pt_regs *);
55:	long __ia32_compat_sys_x86_truncate64(const struct pt_regs *);
121:	static long __do_compat_sys_x86_fstat64(unsigned int, struct stat64 *);
131:	static long __do_compat_sys_x86_fstatat(unsigned int, const char *, struct stat64 *, int);
111:	static long __do_compat_sys_x86_lstat64(const char *, struct stat64 *);
100:	static long __do_compat_sys_x86_stat64(const char *, struct stat64 *);
72:	static int cp_stat64(struct stat64 *, struct kstat *);

File arch/x86/kernel/../include/asm/trace/./irq_vectors.h:
283:	static void __bpf_trace_vector_activate(void *, unsigned int, bool, bool, bool);
234:	static void __bpf_trace_vector_alloc(void *, unsigned int, unsigned int, bool, int);
260:	static void __bpf_trace_vector_alloc_managed(void *, unsigned int, unsigned int, int);
141:	static void __bpf_trace_vector_config(void *, unsigned int, unsigned int, unsigned int, unsigned int);
362:	static void __bpf_trace_vector_free_moved(void *, unsigned int, unsigned int, unsigned int, bool);
167:	static void __bpf_trace_vector_mod(void *, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);
207:	static void __bpf_trace_vector_reserve(void *, unsigned int, int);
340:	static void __bpf_trace_vector_setup(void *, unsigned int, bool, int);
318:	static void __bpf_trace_vector_teardown(void *, unsigned int, bool, bool);
16:	static void __bpf_trace_x86_irq_vector(void *, int);
90:	static int perf_perm_irq_work_exit(struct trace_event_call *, struct perf_event *);
283:	static void perf_trace_vector_activate(void *, unsigned int, bool, bool, bool);
234:	static void perf_trace_vector_alloc(void *, unsigned int, unsigned int, bool, int);
260:	static void perf_trace_vector_alloc_managed(void *, unsigned int, unsigned int, int);
141:	static void perf_trace_vector_config(void *, unsigned int, unsigned int, unsigned int, unsigned int);
362:	static void perf_trace_vector_free_moved(void *, unsigned int, unsigned int, unsigned int, bool);
167:	static void perf_trace_vector_mod(void *, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);
207:	static void perf_trace_vector_reserve(void *, unsigned int, int);
340:	static void perf_trace_vector_setup(void *, unsigned int, bool, int);
318:	static void perf_trace_vector_teardown(void *, unsigned int, bool, bool);
16:	static void perf_trace_x86_irq_vector(void *, int);
283:	static int trace_event_define_fields_vector_activate(struct trace_event_call *);
234:	static int trace_event_define_fields_vector_alloc(struct trace_event_call *);
260:	static int trace_event_define_fields_vector_alloc_managed(struct trace_event_call *);
141:	static int trace_event_define_fields_vector_config(struct trace_event_call *);
362:	static int trace_event_define_fields_vector_free_moved(struct trace_event_call *);
167:	static int trace_event_define_fields_vector_mod(struct trace_event_call *);
207:	static int trace_event_define_fields_vector_reserve(struct trace_event_call *);
340:	static int trace_event_define_fields_vector_setup(struct trace_event_call *);
318:	static int trace_event_define_fields_vector_teardown(struct trace_event_call *);
16:	static int trace_event_define_fields_x86_irq_vector(struct trace_event_call *);
283:	static void trace_event_raw_event_vector_activate(void *, unsigned int, bool, bool, bool);
234:	static void trace_event_raw_event_vector_alloc(void *, unsigned int, unsigned int, bool, int);
260:	static void trace_event_raw_event_vector_alloc_managed(void *, unsigned int, unsigned int, int);
141:	static void trace_event_raw_event_vector_config(void *, unsigned int, unsigned int, unsigned int, unsigned int);
362:	static void trace_event_raw_event_vector_free_moved(void *, unsigned int, unsigned int, unsigned int, bool);
167:	static void trace_event_raw_event_vector_mod(void *, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);
207:	static void trace_event_raw_event_vector_reserve(void *, unsigned int, int);
340:	static void trace_event_raw_event_vector_setup(void *, unsigned int, bool, int);
318:	static void trace_event_raw_event_vector_teardown(void *, unsigned int, bool, bool);
16:	static void trace_event_raw_event_x86_irq_vector(void *, int);
90:	static int trace_init_perf_perm_irq_work_exit(void);
283:	static enum print_line_t trace_raw_output_vector_activate(struct trace_iterator *, int, struct trace_event *);
234:	static enum print_line_t trace_raw_output_vector_alloc(struct trace_iterator *, int, struct trace_event *);
260:	static enum print_line_t trace_raw_output_vector_alloc_managed(struct trace_iterator *, int, struct trace_event *);
141:	static enum print_line_t trace_raw_output_vector_config(struct trace_iterator *, int, struct trace_event *);
362:	static enum print_line_t trace_raw_output_vector_free_moved(struct trace_iterator *, int, struct trace_event *);
167:	static enum print_line_t trace_raw_output_vector_mod(struct trace_iterator *, int, struct trace_event *);
207:	static enum print_line_t trace_raw_output_vector_reserve(struct trace_iterator *, int, struct trace_event *);
340:	static enum print_line_t trace_raw_output_vector_setup(struct trace_iterator *, int, struct trace_event *);
318:	static enum print_line_t trace_raw_output_vector_teardown(struct trace_iterator *, int, struct trace_event *);
16:	static enum print_line_t trace_raw_output_x86_irq_vector(struct trace_iterator *, int, struct trace_event *);

File arch/x86/kernel/acpi/apei.c:
20:	int arch_apei_enable_cmcff(struct acpi_hest_header *, void *);
49:	void arch_apei_report_mem_error(int, struct cper_sec_mem_err *);

File arch/x86/kernel/acpi/boot.c:
1746:	int __acpi_acquire_global_lock(unsigned int *);
121:	void *__acpi_map_table(unsigned long, unsigned long);
1757:	int __acpi_release_global_lock(unsigned int *);
130:	void __acpi_unmap_table(void *, unsigned long);
1609:	int acpi_boot_init(void);
1555:	void acpi_boot_table_init(void);
1386:	void acpi_generic_reduced_hw_init(void);
620:	int acpi_gsi_to_irq(u32, unsigned int *);
856:	int acpi_ioapic_registered(acpi_handle, u32);
644:	int acpi_isa_irq_to_gsi(unsigned int, u32 *);
765:	int acpi_map_cpu(acpi_handle, phys_cpuid_t, u32, int *);
1694:	int acpi_mps_check(void);
584:	void acpi_pic_sci_set_trigger(unsigned int, u16);
722:	int acpi_register_gsi(struct device *, u32, int, int);
799:	int acpi_register_ioapic(acpi_handle, u64, u32);
784:	int acpi_unmap_cpu(int);
728:	void acpi_unregister_gsi(u32);
833:	int acpi_unregister_ioapic(acpi_handle, u32);
1768:	void arch_reserve_mem_area(acpi_physical_address, size_t);
1574:	int early_acpi_boot_init(void);
966:	static int acpi_parse_fadt(struct acpi_table_header *);
883:	static int acpi_parse_hpet(struct acpi_table_header *);
510:	static int acpi_parse_int_src_ovr(union acpi_subtable_headers *, const unsigned long);
451:	static int acpi_parse_ioapic(union acpi_subtable_headers *, const unsigned long);
244:	static int acpi_parse_lapic(union acpi_subtable_headers *, const unsigned long);
293:	static int acpi_parse_lapic_addr_ovr(union acpi_subtable_headers *, const unsigned long);
330:	static int acpi_parse_lapic_nmi(union acpi_subtable_headers *, const unsigned long);
139:	static int acpi_parse_madt(struct acpi_table_header *);
552:	static int acpi_parse_nmi_src(union acpi_subtable_headers *, const unsigned long);
274:	static int acpi_parse_sapic(union acpi_subtable_headers *, const unsigned long);
869:	static int acpi_parse_sbf(struct acpi_table_header *);
199:	static int acpi_parse_x2apic(union acpi_subtable_headers *, const unsigned long);
311:	static int acpi_parse_x2apic_nmi(union acpi_subtable_headers *, const unsigned long);
670:	static int acpi_register_gsi_ioapic(struct device *, u32, int, int);
655:	static int acpi_register_gsi_pic(struct device *, u32, int, int);
173:	static int acpi_register_lapic(int, u32, u8);
479:	static void acpi_sci_ioapic_setup(u8, u16, u16, u32);
694:	static void acpi_unregister_gsi_ioapic(u32);
1334:	static int disable_acpi_irq(const struct dmi_system_id *);
1344:	static int disable_acpi_pci(const struct dmi_system_id *);
1354:	static int dmi_disable_acpi(const struct dmi_system_id *);
1369:	static int dmi_ignore_irq0_timer_override(const struct dmi_system_id *);
952:	static int hpet_insert_resource(void);
355:	static void mp_override_legacy_irq(u8, u8, u8, u32);
422:	static int mp_register_ioapic_irq(u8, u8, u8, u32);
1644:	static int parse_acpi(char *);
1709:	static int parse_acpi_skip_timer_override(char *);
1716:	static int parse_acpi_use_timer_override(char *);
1686:	static int parse_pci(char *);
1724:	static int setup_acpi_sci(char *);

File arch/x86/kernel/acpi/cppc_msr.c:
21:	bool cpc_ffh_supported(void);
26:	int cpc_read_ffh(int, struct cpc_reg *, u64 *);
41:	int cpc_write_ffh(int, struct cpc_reg *, u64);

File arch/x86/kernel/acpi/cstate.c:
182:	void acpi_processor_ffh_cstate_enter(struct acpi_processor_cx *);
144:	int acpi_processor_ffh_cstate_probe(unsigned int, struct acpi_processor_cx *, struct acpi_power_register *);
28:	void acpi_processor_power_init_bm_check(struct acpi_processor_flags *, unsigned int);
98:	static long acpi_processor_ffh_cstate_probe_cpu(void *);
205:	static void ffh_cstate_exit(void);
193:	static int ffh_cstate_init(void);

File arch/x86/kernel/acpi/sleep.c:
36:	acpi_status x86_acpi_enter_sleep_state(u8);
47:	int x86_acpi_suspend_lowlevel(void);
122:	static int acpi_sleep_setup(char *);

File arch/x86/kernel/alternative.c:
642:	void alternative_instructions(void);
538:	void alternatives_enable_smp(void);
486:	void alternatives_smp_module_add(struct module *, char *, void *, void *, void *, void *);
523:	void alternatives_smp_module_del(struct module *);
564:	int alternatives_text_reserved(void *, void *);
365:	void apply_alternatives(struct alt_instr *, struct alt_instr *);
589:	void apply_paravirt(struct paravirt_patch_site *, struct paravirt_patch_site *);
198:	void arch_init_ideal_nops(void);
822:	int poke_int3_handler(struct pt_regs *);
788:	void *text_poke(void *, const void *, size_t);
869:	void *text_poke_bp(void *, const void *, size_t, void *);
709:	void *text_poke_early(void *, const void *, size_t);
736:	static void *__text_poke(void *, const void *, size_t);
252:	static void add_nops(void *, unsigned int);
33:	static int debug_alt(char *);
814:	static void do_sync_core(void *);
337:	static void optimize_nops(struct alt_instr *, u8 *);
42:	static int setup_noreplace_smp(char *);

File arch/x86/kernel/amd_nb.c:
210:	int amd_cache_northbridges(void);
172:	int amd_df_indirect_read(u16, u8, u16, u8, u32 *);
409:	void amd_flush_garts(void);
306:	struct resource *amd_get_mmconfig_range(struct resource *);
338:	int amd_get_subcaches(int);
94:	bool amd_nb_has_feature(unsigned int);
88:	u16 amd_nb_num(void);
351:	int amd_set_subcaches(int, unsigned long);
150:	int amd_smn_read(u16, u32, u32 *);
156:	int amd_smn_write(u16, u32, u32);
286:	bool early_is_amd_nb(u32);
100:	struct amd_northbridge *node_to_amd_nb(int);
117:	static int __amd_smn_rw(u16, u32, u32 *, bool);
448:	static void __fix_erratum_688(void *);
483:	static int init_amd_nbs(void);
106:	static struct pci_dev *next_northbridge(struct pci_dev *, const struct pci_device_id *);

File arch/x86/kernel/apic/apic.c:
1759:	void apic_ap_setup(void);
2543:	void apic_bsp_setup(bool);
2336:	bool apic_id_is_primary_thread(unsigned int);
1437:	void apic_intr_mode_init(void);
1382:	void apic_intr_mode_select(void);
2791:	int apic_is_clustered_box(void);
822:	bool apic_needs_pit(void);
2507:	void apic_set_eoi_write(void (*)(u32, u32));
1889:	void check_x2apic(void);
1165:	void clear_local_APIC(void);
1236:	void disable_local_APIC(void);
2256:	void disconnect_bsp_APIC(int);
1915:	void enable_IR_x2apic(void);
2377:	int generic_processor_info(int, int);
2496:	int hard_smp_processor_id(void);
2078:	void init_apic_mappings(void);
1390:	void init_bsp_APIC(void);
301:	int lapic_get_maxlvt(void);
1275:	void lapic_shutdown(void);
683:	void lapic_update_tsc_freq(void);
278:	u64 native_apic_icr_read(void);
268:	void native_apic_icr_write(u32, u32);
245:	void native_apic_wait_icr_idle(void);
251:	u32 native_safe_apic_wait_icr_idle(void);
2123:	void register_lapic_address(unsigned long);
429:	int setup_APIC_eilvt(u8, u8, u8, u8);
1043:	void setup_boot_APIC_clock(void);
1149:	int setup_profiling_timer(unsigned int);
1080:	void setup_secondary_APIC_clock(void);
1128:	void smp_apic_timer_interrupt(struct pt_regs *);
2186:	void smp_error_interrupt(struct pt_regs *);
2145:	void smp_spurious_interrupt(struct pt_regs *);
1298:	void sync_Arb_IDs(void);
1823:	void x2apic_setup(void);
673:	static void __lapic_update_tsc_freq(void *);
328:	static void __setup_APIC_LVTT(unsigned int, int, int);
1775:	static void __x2apic_disable(void);
1791:	static void __x2apic_enable(void);
2882:	static int apic_set_disabled_cpu_apicid(char *);
2891:	static int apic_set_extnmi(char *);
2837:	static int apic_set_verbosity(char *);
563:	static u32 bdx_deadline_rev(void);
553:	static u32 hsx_deadline_rev(void);
2730:	static int init_lapic_sysfs(void);
725:	static void lapic_cal_handler(struct clock_event_device *);
804:	static int lapic_init_clockevent(void);
2863:	static int lapic_insert_resource(void);
470:	static int lapic_next_deadline(unsigned long, struct clock_event_device *);
463:	static int lapic_next_event(unsigned long, struct clock_event_device *);
2645:	static void lapic_resume(void);
1466:	static void lapic_setup_esr(void);
2597:	static int lapic_suspend(void);
519:	static void lapic_timer_broadcast(const struct cpumask *);
511:	static int lapic_timer_set_oneshot(struct clock_event_device *);
506:	static int lapic_timer_set_periodic(struct clock_event_device *);
480:	static int lapic_timer_shutdown(struct clock_event_device *);
2823:	static int parse_disable_apic_timer(char *);
152:	static int parse_lapic(char *);
2816:	static int parse_lapic_timer_c2_ok(char *);
2753:	static int set_multi(const struct dmi_system_id *);
644:	static void setup_APIC_timer(void);
164:	static int setup_apicpmtimer(char *);
2801:	static int setup_disableapic(char *);
1581:	static void setup_local_APIC(void);
2810:	static int setup_nolapic(char *);
1802:	static int setup_nox2apic(char *);
575:	static u32 skx_deadline_rev(void);

File arch/x86/kernel/apic/apic_common.c:
9:	u32 apic_default_calc_apicid(unsigned int);
14:	u32 apic_flat_calc_apicid(unsigned int);
43:	int default_apic_id_valid(u32);
19:	bool default_check_apicid_used(physid_mask_t *, int);
38:	int default_check_phys_apicid_present(int);
29:	int default_cpu_present_to_apicid(int);
24:	void default_ioapic_phys_id_map(physid_mask_t *, physid_mask_t *);

File arch/x86/kernel/apic/apic_flat_64.c:
44:	void flat_init_apic_ldr(void);
57:	static void _flat_send_IPI_mask(unsigned long, int);
32:	static int flat_acpi_madt_oem_check(char *, char *);
129:	static int flat_apic_id_registered(void);
114:	static unsigned int flat_get_apic_id(unsigned long);
134:	static int flat_phys_pkg_id(int, int);
139:	static int flat_probe(void);
104:	static void flat_send_IPI_all(int);
85:	static void flat_send_IPI_allbutself(int);
66:	static void flat_send_IPI_mask(const struct cpumask *, int);
74:	static void flat_send_IPI_mask_allbutself(const struct cpumask *, int);
195:	static int physflat_acpi_madt_oem_check(char *, char *);
218:	static void physflat_init_apic_ldr(void);
237:	static int physflat_probe(void);
232:	static void physflat_send_IPI_all(int);
227:	static void physflat_send_IPI_allbutself(int);
119:	static u32 set_apic_id(unsigned int);

File arch/x86/kernel/apic/apic_noop.c:
52:	static u64 noop_apic_icr_read(void);
40:	static void noop_apic_icr_write(u32, u32);
76:	static int noop_apic_id_registered(void);
87:	static u32 noop_apic_read(u32);
93:	static void noop_apic_write(u32, u32);
62:	static unsigned int noop_get_apic_id(unsigned long);
32:	static void noop_init_apic_ldr(void);
57:	static int noop_phys_pkg_id(int, int);
67:	static int noop_probe(void);
47:	static u32 noop_safe_apic_wait_icr_idle(void);
33:	static void noop_send_IPI(int, int);
36:	static void noop_send_IPI_allbutself(int);
34:	static void noop_send_IPI_mask(const struct cpumask *, int);
42:	static int noop_wakeup_secondary_cpu(int, unsigned long);

File arch/x86/kernel/apic/hw_nmi.c:
36:	void arch_trigger_cpumask_backtrace(const cpumask_t *, bool);
24:	u64 hw_nmi_get_sample_period(int);
42:	static int nmi_cpu_backtrace_handler(unsigned int, struct pt_regs *);
31:	static void nmi_raise_cpu_backtrace(cpumask_t *);
51:	static int register_nmi_cpu_backtrace_handler(void);

File arch/x86/kernel/apic/io_apic.c:
1146:	int IO_APIC_get_PCI_irq_vector(int, int, int);
2597:	int acpi_get_override_irq(u32, int *, int *);
2438:	unsigned int arch_dynirq_lower_bound(unsigned int);
253:	int arch_early_ioapic_init(void);
592:	void clear_IO_APIC(void);
197:	void disable_ioapic_support(void);
1364:	void enable_IO_APIC(void);
2660:	void io_apic_init_mappings(void);
2700:	void ioapic_insert_resources(void);
869:	void ioapic_set_alloc_attr(struct irq_alloc_info *, int, int, int);
1226:	void ioapic_zap_locks(void);
663:	void mask_ioapic_entries(void);
2718:	int mp_find_ioapic(u32);
2736:	int mp_find_ioapic_pin(int, u32);
2923:	int mp_ioapic_registered(u32);
3044:	int mp_irqdomain_activate(struct irq_domain *, struct irq_data *, bool);
2968:	int mp_irqdomain_alloc(struct irq_domain *, unsigned int, unsigned int, void *);
3055:	void mp_irqdomain_deactivate(struct irq_domain *, struct irq_data *);
3026:	void mp_irqdomain_free(struct irq_domain *, unsigned int, unsigned int);
3063:	int mp_irqdomain_ioapic_idx(struct irq_domain *);
1108:	int mp_map_gsi_to_irq(u32, unsigned int, struct irq_alloc_info *);
2787:	int mp_register_ioapic(int, u32, u32, struct ioapic_domain_cfg *);
215:	void mp_save_irq(struct mpc_intsrc *);
1124:	void mp_unmap_irq(int);
2881:	int mp_unregister_ioapic(u32);
130:	unsigned int mpc_ioapic_addr(int);
125:	int mpc_ioapic_id(int);
286:	unsigned int native_io_apic_read(unsigned int, unsigned int);
1415:	void native_restore_boot_irq_mode(void);
1317:	void print_IO_APICs(void);
1443:	void restore_boot_irq_mode(void);
686:	int restore_ioapic_entries(void);
641:	int save_ioapic_entries(void);
2357:	void setup_IO_APIC(void);
374:	static int __add_pin_to_irq_node(struct mp_chip_data *, int, int, int);
510:	static void __eoi_ioapic_pin(int, int, int);
307:	static struct IO_APIC_route_entry __ioapic_read_entry(int, int);
2012:	static void ack_lapic_irq(struct irq_data *);
234:	static void alloc_ioapic_saved_registers(int);
999:	static int alloc_isa_irq_from_domain(struct irq_domain *, int, int, struct irq_alloc_info *, int);
2126:	static void check_timer(void);
545:	static void clear_IO_APIC_pin(unsigned int, unsigned int);
2092:	static int disable_timer_pin_setup(char *);
534:	static void eoi_ioapic_pin(int, struct mp_chip_data *);
737:	static int find_isa_irq_apic(int, int);
721:	static int find_isa_irq_pin(int, int);
438:	static void io_apic_modify_irq(struct mp_chip_data *, int, int, void (*)(struct irq_pin_list *));
1231:	static void io_apic_print_entries(unsigned int, unsigned int);
457:	static void io_apic_sync(struct irq_pin_list *);
1783:	static void ioapic_ack_level(struct irq_data *);
1863:	static void ioapic_configure_entry(struct irq_data *);
2413:	static int ioapic_init_ops(void);
1849:	static void ioapic_ir_ack_level(struct irq_data *);
1912:	static int ioapic_irq_get_chip_state(struct irq_data *, enum irqchip_irq_state, bool *);
358:	static void ioapic_mask_entry(int, int);
317:	static struct IO_APIC_route_entry ioapic_read_entry(int, int);
2398:	static void ioapic_resume(void);
1882:	static int ioapic_set_affinity(struct irq_data *, const struct cpumask *, bool);
344:	static void ioapic_write_entry(int, int, struct IO_APIC_route_entry);
842:	static int irq_trigger(int);
469:	static void mask_ioapic_irq(struct irq_data *);
1996:	static void mask_lapic_irq(struct irq_data *);
937:	static bool mp_check_pin_attr(int, struct irq_alloc_info *);
2297:	static int mp_irqdomain_create(int);
1032:	static int mp_map_pin_to_irq(u32, int, int, int, unsigned int, struct irq_alloc_info *);
920:	static void mp_register_handler(unsigned int, unsigned long);
1577:	static int notimercheck(char *);
206:	static int parse_noapic(char *);
1075:	static int pin_2_irq(int, int, int, unsigned int);
1683:	static unsigned int startup_ioapic_irq(struct irq_data *);
1629:	static int timer_irq_works(void);
484:	static void unmask_ioapic_irq(struct irq_data *);
2004:	static void unmask_lapic_irq(struct irq_data *);

File arch/x86/kernel/apic/ipi.c:
52:	void __default_send_IPI_dest_field(unsigned int, int, unsigned int);
21:	void __default_send_IPI_shortcut(unsigned int, int, unsigned int);
109:	void default_send_IPI_mask_allbutself_phys(const struct cpumask *, int);
91:	void default_send_IPI_mask_sequence_phys(const struct cpumask *, int);
131:	void default_send_IPI_single(int, int);
81:	void default_send_IPI_single_phys(int, int);

File arch/x86/kernel/apic/msi.c:
300:	struct irq_domain *arch_create_remap_msi_irq_domain(struct irq_domain *, const char *, int);
259:	void arch_init_msi_domain(struct irq_domain *);
381:	int dmar_alloc_hwirq(int, int, void *);
397:	void dmar_free_hwirq(int);
503:	int hpet_assign_irq(struct irq_domain *, struct hpet_dev *, int);
465:	struct irq_domain *hpet_create_irq_domain(int);
190:	int native_setup_msi_irqs(struct pci_dev *, int, int);
208:	void native_teardown_msi_irq(unsigned int);
219:	int pci_msi_prepare(struct irq_domain *, struct device *, int, msi_alloc_info_t *);
238:	void pci_msi_set_desc(msi_alloc_info_t *, struct msi_desc *);
29:	static void __irq_msi_compose_msg(struct irq_cfg *, struct msi_msg *);
334:	static irq_hw_number_t dmar_msi_get_hwirq(struct msi_domain_info *, msi_alloc_info_t *);
340:	static int dmar_msi_init(struct irq_domain *, struct msi_domain_info *, unsigned int, irq_hw_number_t, msi_alloc_info_t *);
316:	static void dmar_msi_write_msg(struct irq_data *, struct msi_msg *);
448:	static void hpet_msi_free(struct irq_domain *, struct msi_domain_info *, unsigned int);
431:	static irq_hw_number_t hpet_msi_get_hwirq(struct msi_domain_info *, msi_alloc_info_t *);
437:	static int hpet_msi_init(struct irq_domain *, struct msi_domain_info *, unsigned int, irq_hw_number_t, msi_alloc_info_t *);
414:	static void hpet_msi_write_msg(struct irq_data *, struct msi_msg *);
51:	static void irq_msi_compose_msg(struct irq_data *, struct msi_msg *);
56:	static void irq_msi_update_msg(struct irq_data *, struct irq_cfg *);
65:	static int msi_set_affinity(struct irq_data *, const struct cpumask *, bool);
213:	static irq_hw_number_t pci_msi_get_hwirq(struct msi_domain_info *, msi_alloc_info_t *);

File arch/x86/kernel/apic/probe_64.c:
51:	void apic_send_IPI_self(int);
56:	int default_acpi_madt_oem_check(char *, char *);
28:	void default_setup_apic_routing(void);

File arch/x86/kernel/apic/vector.c:
839:	void apic_ack_edge(struct irq_data *);
833:	void apic_ack_irq(struct irq_data *);
727:	int arch_early_irq_init(void);
650:	int arch_probe_nr_irqs(void);
72:	void copy_irq_alloc_info(struct irq_alloc_info *, struct irq_alloc_info *);
65:	void init_irq_alloc_info(struct irq_alloc_info *, const struct cpumask *);
99:	struct irq_cfg *irq_cfg(unsigned int);
947:	void irq_complete_move(struct irq_cfg *);
955:	void irq_force_complete_move(struct irq_desc *);
91:	struct irq_cfg *irqd_cfg(struct irq_data *);
677:	void lapic_assign_legacy_vector(unsigned int, bool);
707:	void lapic_assign_system_vectors(void);
1048:	int lapic_can_unplug_cpu(void);
792:	void lapic_offline(void);
770:	void lapic_online(void);
687:	void lapic_update_legacy_vectors(void);
52:	void lock_vector_lock(void);
926:	void send_cleanup_vector(struct irq_cfg *);
876:	void smp_irq_move_cleanup_interrupt(void);
60:	void unlock_vector_lock(void);
935:	static void __irq_complete_move(struct irq_cfg *, unsigned int);
910:	static void __send_cleanup_vector(struct apic_chip_data *);
80:	static struct apic_chip_data *apic_chip_data(struct irq_data *);
821:	static int apic_retrigger_irq(struct irq_data *);
799:	static int apic_set_affinity(struct irq_data *, const struct cpumask *, bool);
119:	static void apic_update_irq_cfg(struct irq_data *, unsigned int, unsigned int);
133:	static void apic_update_vector(struct irq_data *, unsigned int, unsigned int);
271:	static int assign_irq_vector_any_locked(struct irq_data *);
310:	static int assign_managed_vector(struct irq_data *, const struct cpumask *);
223:	static int assign_vector_locked(struct irq_data *, const struct cpumask *);
331:	static void clear_irq_vector(struct irq_data *);
854:	static void free_moved_vector(struct apic_chip_data *);
1074:	static void print_APIC_field(int);
1258:	static int print_ICs(void);
1086:	static void print_local_APIC(void *);
200:	static void reserve_irq_vector_locked(struct irq_data *);
1242:	static int setup_show_lapic(char *);
178:	static void vector_assign_managed_shutdown(struct irq_data *);
441:	static int x86_vector_activate(struct irq_domain *, struct irq_data *, bool);
528:	static int x86_vector_alloc_irqs(struct irq_domain *, unsigned int, unsigned int, void *);
361:	static void x86_vector_deactivate(struct irq_domain *, struct irq_data *);
478:	static void x86_vector_free_irqs(struct irq_domain *, unsigned int, unsigned int);

File arch/x86/kernel/apic/x2apic_cluster.c:
39:	static void __x2apic_send_IPI_mask(const struct cpumask *, int, int);
100:	static void init_x2apic_ldr(void);
25:	static int x2apic_acpi_madt_oem_check(char *, char *);
95:	static u32 x2apic_calc_apicid(unsigned int);
167:	static int x2apic_cluster_probe(void);
157:	static int x2apic_dead_cpu(unsigned int);
148:	static int x2apic_prepare_cpu(unsigned int);
30:	static void x2apic_send_IPI(int, int);
90:	static void x2apic_send_IPI_all(int);
85:	static void x2apic_send_IPI_allbutself(int);
74:	static void x2apic_send_IPI_mask(const struct cpumask *, int);
80:	static void x2apic_send_IPI_mask_allbutself(const struct cpumask *, int);

File arch/x86/kernel/apic/x2apic_phys.c:
114:	void __x2apic_send_IPI_dest(unsigned int, int, unsigned int);
109:	int x2apic_apic_id_registered(void);
104:	int x2apic_apic_id_valid(u32);
120:	unsigned int x2apic_get_apic_id(unsigned long);
130:	int x2apic_phys_pkg_id(int, int);
135:	void x2apic_send_IPI_self(int);
125:	u32 x2apic_set_apic_id(unsigned int);
50:	static void __x2apic_send_IPI_mask(const struct cpumask *, int, int);
91:	static void init_x2apic_ldr(void);
17:	static int set_x2apic_phys_mode(char *);
36:	static int x2apic_acpi_madt_oem_check(char *, char *);
95:	static int x2apic_phys_probe(void);
41:	static void x2apic_send_IPI(int, int);
86:	static void x2apic_send_IPI_all(int);
81:	static void x2apic_send_IPI_allbutself(int);
70:	static void x2apic_send_IPI_mask(const struct cpumask *, int);
76:	static void x2apic_send_IPI_mask_allbutself(const struct cpumask *, int);

File arch/x86/kernel/apic/x2apic_uv_x.c:
347:	enum uv_system_type get_uv_system_type(void);
358:	int is_uv_hubless(void);
352:	int is_uv_system(void);
1104:	void uv_cpu_init(void);
390:	int uv_hub_info_version(void);
1151:	void uv_init_hub_info(struct uv_hub_info_s *);
1082:	int uv_set_vga_state(struct pci_dev *, bool, unsigned int, u32);
1598:	void uv_system_init(void);
75:	unsigned long uv_undefined(char *);
620:	static u32 apic_uv_calc_apicid(unsigned int);
1335:	static void build_socket_tables(void);
753:	static void map_high(char *, unsigned long, int, int, int, enum map_type);
844:	static void map_mmioh_high_uv34(int, int, int);
400:	static int parse_mem_block_size(char *);
635:	static u32 set_apic_id(unsigned int);
270:	static int uv_acpi_madt_oem_check(char *, char *);
611:	static int uv_apic_id_registered(void);
606:	static int uv_apic_id_valid(u32);
87:	static unsigned long uv_early_read_mmr(unsigned long);
1005:	static void uv_heartbeat(struct timer_list *);
1043:	static int uv_heartbeat_disable(unsigned int);
1025:	static int uv_heartbeat_enable(unsigned int);
616:	static void uv_init_apic_ldr(void);
116:	static bool uv_is_untracked_pat_range(u64, u64);
646:	static int uv_phys_pkg_id(int, int);
656:	static int uv_probe(void);
601:	static void uv_send_IPI_all(int);
590:	static void uv_send_IPI_allbutself(int);
571:	static void uv_send_IPI_mask(const struct cpumask *, int);
579:	static void uv_send_IPI_mask_allbutself(const struct cpumask *, int);
561:	static void uv_send_IPI_one(int, int);
651:	static void uv_send_IPI_self(int);
1456:	static void uv_system_init_hub(void);
536:	static int uv_wakeup_secondary(int, unsigned long);
625:	static unsigned int x2apic_get_apic_id(unsigned long);

File arch/x86/kernel/audit_64.c:
32:	int audit_classify_arch(int);
41:	int audit_classify_syscall(int, unsigned int);
61:	static int audit_classes_init(void);

File arch/x86/kernel/bootflag.c:
79:	static int sbf_init(void);

File arch/x86/kernel/check.c:
135:	void check_for_bios_corruption(void);
87:	void setup_bios_corruption_check(void);
163:	static void check_corruption(struct work_struct *);
29:	static int set_corruption_check(char *);
48:	static int set_corruption_check_period(char *);
67:	static int set_corruption_check_size(char *);
170:	static int start_periodic_check_for_corruption(void);

File arch/x86/kernel/cpu/amd.c:
397:	u16 amd_get_nb_id(int);
403:	u32 amd_get_nodes_per_socket(void);
1145:	void set_dr_addr_mask(unsigned long, int);
486:	static void bsp_init_amd(struct cpuinfo_x86 *);
818:	static void clear_rdrand_cpuid_bit(struct cpuinfo_x86 *);
1005:	static void cpu_detect_tlb_amd(struct cpuinfo_x86 *);
1114:	static bool cpu_has_amd_erratum(struct cpuinfo_x86 *, const int *);
618:	static void early_init_amd(struct cpuinfo_x86 *);
895:	static void init_amd(struct cpuinfo_x86 *);
804:	static int rdrand_cmdline(char *);

File arch/x86/kernel/cpu/aperfmperf.c:
80:	unsigned int aperfmperf_get_khz(int);
112:	unsigned int arch_freq_get_on_cpu(int);
92:	void arch_freq_prepare_all(void);
66:	static bool aperfmperf_snapshot_cpu(int, ktime_t, bool);
38:	static void aperfmperf_snapshot_khz(void *);

File arch/x86/kernel/cpu/bugs.c:
1358:	int arch_prctl_spec_ctrl_get(struct task_struct *, unsigned long);
1290:	int arch_prctl_spec_ctrl_set(struct task_struct *, unsigned long, unsigned long);
1304:	void arch_seccomp_spec_mitigate(struct task_struct *);
1012:	void arch_smt_update(void);
78:	void check_bugs(void);
1715:	ssize_t cpu_show_itlb_multihit(struct device *, struct device_attribute *, char *);
1700:	ssize_t cpu_show_l1tf(struct device *, struct device_attribute *, char *);
1705:	ssize_t cpu_show_mds(struct device *, struct device_attribute *, char *);
1680:	ssize_t cpu_show_meltdown(struct device *, struct device_attribute *, char *);
1695:	ssize_t cpu_show_spec_store_bypass(struct device *, struct device_attribute *, char *);
1685:	ssize_t cpu_show_spectre_v1(struct device *, struct device_attribute *, char *);
1690:	ssize_t cpu_show_spectre_v2(struct device *, struct device_attribute *, char *);
1720:	ssize_t cpu_show_srbds(struct device *, struct device_attribute *, char *);
1710:	ssize_t cpu_show_tsx_async_abort(struct device *, struct device_attribute *, char *);
592:	bool retpoline_module_ok(bool);
418:	void update_srbds_msr(void);
1370:	void x86_spec_ctrl_setup_ap(void);
155:	void x86_virt_spec_ctrl(u64, u64, bool);
1626:	static ssize_t cpu_show_common(char *, unsigned int, struct device_attribute *, struct device *);
1245:	static int ib_prctl_set(struct task_struct *, unsigned long);
1479:	static int l1tf_cmdline(char *);
610:	static bool match_option(const char *, int, const char *);
267:	static int mds_cmdline(char *);
240:	static void mds_select_mitigation(void);
571:	static int nospectre_v1_cmdline(char *);
473:	static int srbds_parse_cmdline(char *);
1216:	static int ssb_prctl_set(struct task_struct *, unsigned long);
1199:	static void task_update_spec_tif(struct task_struct *);
374:	static int tsx_async_abort_parse_cmdline(char *);
955:	static void update_stibp_msr(void *);
217:	static void x86_amd_ssb_disable(void);

File arch/x86/kernel/cpu/cacheinfo.c:
560:	const struct attribute_group *cache_get_priv_group(struct cacheinfo *);
647:	void cacheinfo_amd_init_llc_id(struct cpuinfo_x86 *, int, u8);
685:	void cacheinfo_hygon_init_llc_id(struct cpuinfo_x86 *, int, u8);
701:	void init_amd_cacheinfo(struct cpuinfo_x86 *);
1035:	int init_cache_level(unsigned int);
714:	void init_hygon_cacheinfo(struct cpuinfo_x86 *);
719:	void init_intel_cacheinfo(struct cpuinfo_x86 *);
1036:	int populate_cache_leaves(unsigned int);
1035:	static void _init_cache_level(void *);
1036:	static void _populate_cache_leaves(void *);
334:	static int amd_get_l3_disable_slot(unsigned int, struct amd_northbridge *);
573:	static void amd_init_l3_cache(struct _cpuid4_info_regs *, int);
368:	static ssize_t cache_disable_0_show(struct device *, struct device_attribute *, char *);
468:	static ssize_t cache_disable_0_store(struct device *, struct device_attribute *, const char *, size_t);
369:	static ssize_t cache_disable_1_show(struct device *, struct device_attribute *, char *);
469:	static ssize_t cache_disable_1_store(struct device *, struct device_attribute *, const char *, size_t);
505:	static umode_t cache_private_attrs_is_visible(struct kobject *, struct attribute *, int);
591:	static int cpuid4_cache_lookup_regs(int, struct _cpuid4_info_regs *);
626:	static int find_num_cache_leaves(struct cpuinfo_x86 *);
347:	static ssize_t show_cache_disable(char *, unsigned int, struct cacheinfo *);
433:	static ssize_t store_cache_disable(struct cacheinfo *, const char *, size_t, unsigned int);
471:	static ssize_t subcaches_show(struct device *, struct device_attribute *, char *);
480:	static ssize_t subcaches_store(struct device *, struct device_attribute *, const char *, size_t);

File arch/x86/kernel/cpu/centaur.c:
100:	static void early_init_centaur(struct cpuinfo_x86 *);
160:	static void init_centaur(struct cpuinfo_x86 *);

File arch/x86/kernel/cpu/common.c:
735:	void cpu_detect(struct cpuinfo_x86 *);
603:	void cpu_detect_cache_sizes(struct cpuinfo_x86 *);
1793:	void cpu_init(void);
1710:	void debug_stack_reset(void);
1703:	void debug_stack_set_zero(void);
687:	void detect_ht(struct cpuinfo_x86 *);
664:	int detect_ht_early(struct cpuinfo_x86 *);
590:	void detect_num_cpu_cores(struct cpuinfo_x86 *);
1241:	void early_cpu_init(void);
912:	void get_cpu_address_sizes(struct cpuinfo_x86 *);
835:	void get_cpu_cap(struct cpuinfo_x86 *);
1552:	void identify_boot_cpu(void);
1563:	void identify_secondary_cpu(struct cpuinfo_x86 *);
1693:	int is_debug_stack(unsigned long);
524:	void load_direct_gdt(int);
535:	void load_fixmap_gdt(int);
494:	void load_percpu_segment(int);
1984:	void microcode_check(void);
1584:	void print_cpu_info(struct cpuinfo_x86 *);
80:	void setup_cpu_local_masks(void);
549:	void switch_to_new_gdt(int);
1644:	void syscall_init(void);
1059:	u64 x86_read_arch_cap_msr(void);
1962:	static void bsp_resume(void);
1052:	static bool cpu_matches(const struct x86_cpu_id *, unsigned long);
88:	static void default_init(struct cpuinfo_x86 *);
432:	static void filter_cpuid_features(struct cpuinfo_x86 *, bool);
709:	static void get_cpu_vendor(struct cpuinfo_x86 *);
1403:	static void identify_cpu(struct cpuinfo_x86 *);
1972:	static int init_cpu_syscore(void);
1616:	static int setup_clearcpuid(char *);
394:	static int setup_disable_pku(char *);
321:	static int setup_disable_smap(char *);
306:	static int setup_disable_smep(char *);
1576:	static int setup_noclflush(char *);
167:	static int x86_mpx_setup(char *);
201:	static int x86_noinvpcid_setup(char *);
184:	static int x86_nopcid_setup(char *);

File arch/x86/kernel/cpu/cpuid-deps.c:
117:	void clear_cpu_cap(struct cpuinfo_x86 *, unsigned int);
122:	void setup_clear_cpu_cap(unsigned int);
87:	static void do_clear_cpu_cap(struct cpuinfo_x86 *, unsigned int);

File arch/x86/kernel/cpu/hygon.c:
204:	static void bsp_init_hygon(struct cpuinfo_x86 *);
371:	static void cpu_detect_tlb_hygon(struct cpuinfo_x86 *);
260:	static void early_init_hygon(struct cpuinfo_x86 *);
306:	static void init_hygon(struct cpuinfo_x86 *);

File arch/x86/kernel/cpu/hypervisor.c:
88:	void init_hypervisor_platform(void);

File arch/x86/kernel/cpu/intel.c:
48:	void check_mpx_erratum(struct cpuinfo_x86 *);
164:	static void early_init_intel(struct cpuinfo_x86 *);
40:	static int forcempx_setup(char *);
657:	static void init_intel(struct cpuinfo_x86 *);
599:	static void init_intel_energy_perf(struct cpuinfo_x86 *);
620:	static void intel_bsp_resume(struct cpuinfo_x86 *);
946:	static void intel_detect_tlb(struct cpuinfo_x86 *);
71:	static int ring3mwait_disable(char *);

File arch/x86/kernel/cpu/intel_pconfig.c:
27:	int pconfig_target_supported(enum pconfig_target);
40:	static int intel_pconfig_init(void);

File arch/x86/kernel/cpu/match.c:
32:	const struct x86_cpu_id *x86_match_cpu(const struct x86_cpu_id *);

File arch/x86/kernel/cpu/mce/amd.c:
818:	bool amd_mce_is_memory_error(struct mce *);
552:	void disable_err_thresholding(struct cpuinfo_x86 *);
583:	void mce_amd_feature_init(struct cpuinfo_x86 *);
1407:	int mce_threshold_create_device(unsigned int);
1392:	int mce_threshold_remove_device(unsigned int);
111:	const char *smca_get_long_name(enum smca_bank_types);
864:	void smp_deferred_error_interrupt(struct pt_regs *);
618:	int umc_normaddr_to_sysaddr(u64, u16, u8, u64 *);
829:	static void __log_error(unsigned int, u64, u64, u64);
1155:	static int allocate_threshold_blocks(unsigned int, unsigned int, unsigned int, u32);
930:	static void amd_deferred_error_interrupt(void);
970:	static void amd_threshold_interrupt(void);
187:	static void default_deferred_error_interrupt(void);
474:	static u32 get_block_address(u32, u32, unsigned int, unsigned int, u32);
1125:	static const char *get_name(unsigned int, struct threshold_block *);
943:	static void log_and_reset_block(struct threshold_block *);
502:	static int prepare_threshold_block(unsigned int, unsigned int, u32, int, u32);
1092:	static ssize_t show(struct kobject *, struct attribute *, char *);
1057:	static ssize_t show_error_count(struct threshold_block *, char *);
1008:	static ssize_t show_interrupt_enable(struct threshold_block *, char *);
1009:	static ssize_t show_threshold_limit(struct threshold_block *, char *);
1103:	static ssize_t store(struct kobject *, struct attribute *, const char *, size_t);
1012:	static ssize_t store_interrupt_enable(struct threshold_block *, const char *, size_t);
1034:	static ssize_t store_threshold_limit(struct threshold_block *, const char *, size_t);
1437:	static int threshold_init_device(void);
339:	static void threshold_restart_bank(void *);

File arch/x86/kernel/cpu/mce/apei.c:
149:	int apei_check_mce(void);
154:	int apei_clear_mce(u64);
41:	void apei_mce_report_mem_error(int, struct cper_sec_mem_err *);
115:	ssize_t apei_read_mce(struct mce *, u64 *);
83:	int apei_write_mce(struct mce *);

File arch/x86/kernel/cpu/mce/core.c:
1215:	void do_machine_check(struct pt_regs *, long);
1840:	void do_mce(struct pt_regs *, long);
684:	bool machine_check_poll(enum mcp_flags, mce_banks_t *);
447:	int mce_available(struct cpuinfo_x86 *);
1906:	void mce_disable_bank(int);
2453:	struct dentry *mce_get_debugfs_dir(void);
145:	void mce_inject_log(struct mce *);
528:	bool mce_is_correctable(struct mce *);
495:	bool mce_is_memory_error(struct mce *);
139:	void mce_log(struct mce *);
1466:	int mce_notify_irq(void);
163:	void mce_register_decode_chain(struct notifier_block *);
118:	void mce_setup(struct mce *);
1441:	void mce_timer_kick(unsigned long);
174:	void mce_unregister_decode_chain(struct notifier_block *);
471:	int mce_usable_address(struct mce *);
1883:	void mcheck_cpu_clear(struct cpuinfo_x86 *);
1849:	void mcheck_cpu_init(struct cpuinfo_x86 *);
1970:	int mcheck_init(void);
1899:	static void __mce_disable_bank(void *);
1554:	static void __mcheck_cpu_init_clear_banks(void);
1532:	static void __mcheck_cpu_init_generic(void);
1821:	static void __mcheck_cpu_init_timer(void);
1759:	static void __mcheck_cpu_init_vendor(struct cpuinfo_x86 *);
229:	static void __print_mce(struct mce *);
1393:	static void __start_timer(struct timer_list *, unsigned long);
192:	static u32 addr_reg(int);
182:	static u32 ctl_reg(int);
2485:	static int fake_panic_fops_open(struct inode *, struct file *);
2472:	static int fake_panic_get(void *, u64 *);
2478:	static int fake_panic_set(void *, u64);
1386:	static unsigned long mce_adjust_timer_default(unsigned long);
2333:	static int mce_cpu_dead(unsigned int);
2343:	static int mce_cpu_online(unsigned int);
2360:	static int mce_cpu_pre_down(unsigned int);
2057:	static void mce_cpu_restart(void *);
606:	static int mce_default_notifier(struct notifier_block *, unsigned long, void *);
2227:	static void mce_device_release(struct device *);
2285:	static void mce_device_remove(unsigned int);
2074:	static void mce_disable_cmci(void *);
2081:	static void mce_enable_ce(void *);
558:	static int mce_first_notifier(struct notifier_block *, unsigned long, void *);
460:	static void mce_irq_work_cb(struct irq_work *);
298:	static void mce_panic(const char *, struct mce *, char *);
377:	static u64 mce_rdmsrl(u32);
631:	static void mce_read_aux(struct mce *, int);
454:	static void mce_schedule_work(void);
1803:	static void mce_start_timer(struct timer_list *);
2040:	static void mce_syscore_resume(void);
2030:	static void mce_syscore_shutdown(void);
2024:	static int mce_syscore_suspend(void);
832:	static int mce_timed_out(u64 *, const char *);
1453:	static void mce_timer_delete_all(void);
1406:	static void mce_timer_fn(struct timer_list *);
402:	static void mce_wrmsrl(u32, u64);
2445:	static int mcheck_disable(char *);
1933:	static int mcheck_enable(char *);
2389:	static int mcheck_init_device(void);
2509:	static int mcheck_late_init(void);
197:	static u32 misc_reg(int);
359:	static int msr_to_offset(u32);
269:	static void print_mce(struct mce *);
1576:	static void quirk_sandybridge_ifu(int, struct mce *, struct pt_regs *);
2109:	static ssize_t set_bank(struct device *, struct device_attribute *, const char *, size_t);
2150:	static ssize_t set_cmci_disabled(struct device *, struct device_attribute *, const char *, size_t);
2123:	static ssize_t set_ignore_ce(struct device *, struct device_attribute *, const char *, size_t);
2103:	static ssize_t show_bank(struct device *, struct device_attribute *, char *);
212:	static u32 smca_addr_reg(int);
202:	static u32 smca_ctl_reg(int);
217:	static u32 smca_misc_reg(int);
207:	static u32 smca_status_reg(int);
584:	static int srao_decode_notifier(struct notifier_block *, unsigned long, void *);
187:	static u32 status_reg(int);
2176:	static ssize_t store_int_with_restart(struct device *, struct device_attribute *, const char *, size_t);
1830:	static void unexpected_machine_check(struct pt_regs *, long);
2005:	static void vendor_disable_error_reporting(void);
285:	static void wait_for_panic(void);

File arch/x86/kernel/cpu/mce/dev-mcelog.c:
283:	void mce_register_injector_chain(struct notifier_block *);
289:	void mce_unregister_injector_chain(struct notifier_block *);
90:	void mce_work_trigger(void);
164:	static int __mce_read_apei(char **, size_t);
44:	static int dev_mce_log(struct notifier_block *, unsigned long, void *);
344:	static int dev_mcelog_init_device(void);
256:	static long mce_chrdev_ioctl(struct file *, unsigned int, unsigned long);
129:	static int mce_chrdev_open(struct inode *, struct file *);
246:	static __poll_t mce_chrdev_poll(struct file *, poll_table *);
204:	static ssize_t mce_chrdev_read(struct file *, char *, size_t, loff_t *);
149:	static int mce_chrdev_release(struct inode *, struct file *);
295:	static ssize_t mce_chrdev_write(struct file *, const char *, size_t, loff_t *);
82:	static void mce_do_trigger(struct work_struct *);
104:	static ssize_t set_trigger(struct device *, struct device_attribute *, const char *, size_t);
97:	static ssize_t show_trigger(struct device *, struct device_attribute *, char *);

File arch/x86/kernel/cpu/mce/genpool.c:
98:	int mce_gen_pool_add(struct mce *);
93:	bool mce_gen_pool_empty(void);
138:	int mce_gen_pool_init(void);
56:	struct llist_node *mce_gen_pool_prepare_records(void);
75:	void mce_gen_pool_process(struct work_struct *);

File arch/x86/kernel/cpu/mce/intel.c:
372:	void cmci_clear(void);
416:	void cmci_disable_bank(int);
176:	unsigned long cmci_intel_adjust_timer(unsigned long);
342:	void cmci_recheck(void);
396:	void cmci_rediscover(void);
409:	void cmci_reenable(void);
461:	void intel_clear_lmce(void);
429:	void intel_init_cmci(void);
448:	void intel_init_lmce(void);
130:	bool mce_intel_cmci_poll(void);
518:	void mce_intel_feature_clear(struct cpuinfo_x86 *);
510:	void mce_intel_feature_init(struct cpuinfo_x86 *);
147:	void mce_intel_hcpu_update(unsigned long);
356:	static void __cmci_disable_bank(int);
267:	static void cmci_discover(int);
386:	static void cmci_rediscover_work_func(void *);
76:	static int cmci_supported(int *);
155:	static void cmci_toggle_interrupt_mode(bool);
254:	static void intel_threshold_interrupt(void);
100:	static bool lmce_supported(void);

File arch/x86/kernel/cpu/mce/severity.c:
342:	void mcheck_vendor_init_severity(void);
256:	static int mce_severity_amd(struct mce *, int, char **, bool);
308:	static int mce_severity_intel(struct mce *, int, char **, bool);
357:	static void *s_next(struct seq_file *, void *, loff_t *);
368:	static int s_show(struct seq_file *, void *);
350:	static void *s_start(struct seq_file *, loff_t *);
364:	static void s_stop(struct seq_file *, void *);
382:	static int severities_coverage_open(struct inode *, struct file *);
387:	static ssize_t severities_coverage_write(struct file *, const char *, size_t, loff_t *);
405:	static int severities_debugfs_init(void);

File arch/x86/kernel/cpu/mce/therm_throt.c:
425:	void intel_init_thermal(struct cpuinfo_x86 *);
414:	void mcheck_intel_therm_init(void);
394:	void smp_thermal_interrupt(struct pt_regs *);
225:	static int int_pln_enable_setup(char *);
350:	static void intel_thermal_interrupt(void);
405:	static int intel_thermal_supported(struct cpuinfo_x86 *);
112:	static ssize_t therm_throt_device_show_core_power_limit_count(struct device *, struct device_attribute *, char *);
109:	static ssize_t therm_throt_device_show_core_throttle_count(struct device *, struct device_attribute *, char *);
118:	static ssize_t therm_throt_device_show_package_power_limit_count(struct device *, struct device_attribute *, char *);
115:	static ssize_t therm_throt_device_show_package_throttle_count(struct device *, struct device_attribute *, char *);
146:	static void therm_throt_process(bool, int, int);
282:	static int thermal_throttle_init_device(void);
274:	static int thermal_throttle_offline(unsigned int);
267:	static int thermal_throttle_online(unsigned int);
386:	static void unexpected_thermal_interrupt(void);

File arch/x86/kernel/cpu/mce/threshold.c:
22:	void smp_threshold_interrupt(struct pt_regs *);
14:	static void default_threshold_interrupt(void);

File arch/x86/kernel/cpu/microcode/amd.c:
815:	void exit_amd_microcode(void);
799:	struct microcode_ops *init_amd_microcode(void);
291:	void load_ucode_amd_ap(unsigned int);
280:	void load_ucode_amd_bsp(unsigned int);
348:	void reload_ucode_amd(void);
325:	int save_microcode_in_initrd_amd(unsigned int);
174:	static int __apply_microcode_amd(struct microcode_amd *);
254:	static void __load_ucode_amd(unsigned int, struct cpio_data *);
501:	static enum ucode_state apply_microcode_amd(int);
200:	static bool apply_microcode_early_amd(u32, void *, size_t, bool);
442:	static int collect_cpu_info_amd(int, struct cpu_signature *);
431:	static struct ucode_patch *find_patch(unsigned int);
420:	static void free_cache(void);
692:	static enum ucode_state load_microcode_amd(bool, u8, const u8 *, size_t);
784:	static void microcode_fini_cpu_amd(int);
83:	static ssize_t parse_container(u8 *, ssize_t, struct cont_desc *);
742:	static enum ucode_state request_microcode_amd(int, struct device *, bool);
779:	static enum ucode_state request_microcode_user(int, const void *, size_t);

File arch/x86/kernel/cpu/microcode/core.c:
261:	struct cpio_data find_microcode_in_initrd(const char *, bool);
155:	bool get_builtin_firmware(struct cpio_data *, const char *);
215:	void load_ucode_ap(void);
171:	void load_ucode_bsp(void);
831:	int microcode_init(void);
329:	void reload_early_microcode(void);
559:	static int __reload_late(void *);
532:	static int __wait_for_cpus(atomic_t *, long long);
384:	static void apply_microcode_local(void *);
391:	static int apply_microcode_on_target(int);
370:	static int collect_cpu_info(int);
350:	static void collect_cpu_info_local(void *);
778:	static void mc_bp_resume(void);
809:	static int mc_cpu_down_prep(unsigned int);
800:	static int mc_cpu_online(unsigned int);
793:	static int mc_cpu_starting(unsigned int);
737:	static int mc_device_add(struct device *, struct subsys_interface *);
756:	static void mc_device_remove(struct device *, struct subsys_interface *);
486:	static void microcode_dev_exit(void);
700:	static enum ucode_state microcode_init_cpu(int, bool);
429:	static int microcode_open(struct inode *, struct file *);
434:	static ssize_t microcode_write(struct file *, const char *, size_t, loff_t *);
661:	static ssize_t pf_show(struct device *, struct device_attribute *, char *);
614:	static ssize_t reload_store(struct device *, struct device_attribute *, const char *, size_t);
238:	static int save_microcode_in_initrd(void);
653:	static ssize_t version_show(struct device *, struct device_attribute *, char *);

File arch/x86/kernel/cpu/microcode/intel.c:
1034:	struct microcode_ops *init_intel_microcode(void);
698:	void load_ucode_intel_ap(void);
684:	void load_ucode_intel_bsp(void);
749:	void reload_ucode_intel(void);
627:	int save_microcode_in_initrd_intel(void);
658:	static struct microcode_intel *__load_ucode_intel(struct ucode_cpu_info *);
584:	static int apply_microcode_early(struct ucode_cpu_info *, bool);
793:	static enum ucode_state apply_microcode_intel(int);
765:	static int collect_cpu_info(int, struct cpu_signature *);
391:	static int collect_cpu_info_early(struct ucode_cpu_info *);
68:	static int find_matching_signature(void *, unsigned int, int);
727:	static struct microcode_intel *find_patch(struct ucode_cpu_info *);
864:	static enum ucode_state generic_load_microcode(int, void *, size_t, int (*)(void *, const void *, size_t));
948:	static int get_ucode_fw(void *, const void *, size_t);
1004:	static int get_ucode_user(void *, const void *, size_t);
954:	static bool is_blacklisted(unsigned int);
502:	static bool load_builtin_intel_microcode(struct cpio_data *);
153:	static struct ucode_patch *memdup_patch(void *, unsigned int);
227:	static int microcode_sanity_check(void *, int);
522:	static void print_ucode_info(unsigned int, struct ucode_cpu_info *);
977:	static enum ucode_state request_microcode_fw(int, struct device *, bool);
1010:	static enum ucode_state request_microcode_user(int, const void *, size_t);
170:	static void save_microcode_patch(void *, unsigned int);
330:	static struct microcode_intel *scan_microcode(void *, size_t, struct ucode_cpu_info *, bool);

File arch/x86/kernel/cpu/mshyperv.c:
127:	void hv_remove_crash_handler(void);
115:	void hv_remove_kexec_handler(void);
102:	void hv_remove_stimer0_irq(int);
66:	void hv_remove_vmbus_irq(void);
121:	void hv_setup_crash_handler(void (*)(struct pt_regs *));
109:	void hv_setup_kexec_handler(void (*)(void));
93:	int hv_setup_stimer0_irq(int *, int *, void (*)(void));
61:	void hv_setup_vmbus_irq(void (*)(void));
79:	void hv_stimer0_vector_handler(struct pt_regs *);
45:	void hyperv_vector_handler(struct pt_regs *);
169:	static unsigned char hv_get_nmi_reason(void);
194:	static unsigned long hv_get_tsc_khz(void);
141:	static void hv_machine_crash_shutdown(struct pt_regs *);
134:	static void hv_machine_shutdown(void);
180:	static int hv_nmi_unknown(unsigned int, struct pt_regs *);
203:	static void ms_hyperv_init_platform(void);
150:	static uint32_t ms_hyperv_platform(void);

File arch/x86/kernel/cpu/mtrr/cleanup.c:
830:	int amd_special_default_mtrr(void);
684:	int mtrr_cleanup(unsigned int);
878:	int mtrr_trim_uncached_memory(unsigned long);
153:	static int disable_mtrr_cleanup_setup(char *);
814:	static int disable_mtrr_trim_setup(char *);
160:	static int enable_mtrr_cleanup_setup(char *);
591:	static void mtrr_calc_range_state(u64, u64, unsigned long, int, unsigned long);
167:	static int mtrr_cleanup_debug_setup(char *);
637:	static void mtrr_print_out_one_result(int);
441:	static int parse_mtrr_chunk_size_opt(char *);
453:	static int parse_mtrr_gran_size_opt(char *);
465:	static int parse_mtrr_spare_reg(char *);
528:	static void print_out_mtrr_range_state(void);
249:	static unsigned int range_to_mtrr(unsigned int, unsigned long, unsigned long, unsigned char);
295:	static unsigned int range_to_mtrr_with_hole(struct var_mtrr_state *, unsigned long, unsigned long);
853:	static u64 real_trim_memory(unsigned long, unsigned long);
212:	static void set_var_mtrr_all(unsigned int);
65:	static int x86_get_mtrr_mem_range(struct range *, int, unsigned long, unsigned long);
474:	static int x86_setup_var_mtrrs(int, u64, u64, struct range *);

File arch/x86/kernel/cpu/mtrr/generic.c:
322:	void fill_mtrr_var_range(unsigned int, u32, u32, u32, u32);
559:	int generic_get_free_region(unsigned long, unsigned long, int);
851:	int generic_validate_add_page(unsigned long, unsigned long, unsigned int);
462:	bool get_mtrr_state(void);
448:	void mtrr_bp_pat_init(void);
350:	void mtrr_save_fixed_ranges(void *);
501:	void mtrr_state_warn(void);
257:	u8 mtrr_type_lookup(u64, u64, u8 *);
523:	void mtrr_wrmsr(unsigned int, unsigned int, unsigned int);
897:	int positive_have_wrcomb(void);
82:	static int check_type_overlap(u8 *, u8 *);
578:	static void generic_get_mtrr(unsigned int, unsigned long *, unsigned long *, mtrr_type *);
890:	static int generic_have_wrcomb(void);
783:	static void generic_set_all(void);
819:	static void generic_set_mtrr(unsigned int, unsigned long, unsigned long, mtrr_type);
335:	static void get_fixed_ranges(mtrr_type *);
159:	static u8 mtrr_type_lookup_variable(u64, u64, u64 *, int *, u8 *);
765:	static void post_set(void);
729:	static void prepare_set(void);
380:	static void print_fixed(unsigned int, unsigned int, const mtrr_type *);
360:	static void print_fixed_last(void);

File arch/x86/kernel/cpu/mtrr/if.c:
30:	const char *mtrr_attrib_to_str(int);
357:	static int mtrr_close(struct inode *, struct file *);
38:	static int mtrr_file_add(unsigned long, unsigned long, unsigned int, struct file *, int, bool);
429:	static int mtrr_if_init(void);
158:	static long mtrr_ioctl(struct file *, unsigned int, unsigned long);
378:	static int mtrr_open(struct inode *, struct file *);
398:	static int mtrr_seq_show(struct seq_file *, void *);
94:	static ssize_t mtrr_write(struct file *, const char *, size_t, loff_t *);

File arch/x86/kernel/cpu/mtrr/mtrr.c:
567:	int arch_phys_wc_add(unsigned long, unsigned long);
593:	void arch_phys_wc_del(int);
613:	int arch_phys_wc_index(int);
453:	int mtrr_add(unsigned long, unsigned long, unsigned int, bool);
301:	int mtrr_add_page(unsigned long, unsigned long, unsigned int, bool);
789:	void mtrr_ap_init(void);
842:	void mtrr_aps_init(void);
689:	void mtrr_bp_init(void);
859:	void mtrr_bp_restore(void);
543:	int mtrr_del(int, unsigned long, unsigned long);
478:	int mtrr_del_page(int, unsigned long, unsigned long);
818:	void mtrr_save_state(void);
829:	void set_mtrr_aps_delayed_init(void);
83:	void set_mtrr_ops(const struct mtrr_ops *);
407:	static int mtrr_check(unsigned long, unsigned long);
867:	static int mtrr_init_finialize(void);
161:	static int mtrr_rendezvous_handler(void *);
659:	static void mtrr_restore(void);
647:	static int mtrr_save(void);

File arch/x86/kernel/cpu/perfctr-watchdog.c:
109:	int avail_to_resrv_perfctr_nmi_bit(unsigned int);
160:	void release_evntsel_nmi(unsigned int);
132:	void release_perfctr_nmi(unsigned int);
145:	int reserve_evntsel_nmi(unsigned int);
117:	int reserve_perfctr_nmi(unsigned int);

File arch/x86/kernel/cpu/proc.c:
152:	static void *c_next(struct seq_file *, void *, loff_t *);
144:	static void *c_start(struct seq_file *, loff_t *);
158:	static void c_stop(struct seq_file *, void *);
57:	static int show_cpuinfo(struct seq_file *, void *);

File arch/x86/kernel/cpu/rdrand.c:
43:	void x86_init_rdrand(struct cpuinfo_x86 *);
27:	static int x86_rdrand_setup(char *);

File arch/x86/kernel/cpu/scattered.c:
64:	u32 get_scattered_cpuid_leaf(unsigned int, unsigned int, enum cpuid_regs_idx);
41:	void init_scattered_cpuid_features(struct cpuinfo_x86 *);

File arch/x86/kernel/cpu/topology.c:
90:	int detect_extended_topology(struct cpuinfo_x86 *);
63:	int detect_extended_topology_early(struct cpuinfo_x86 *);
33:	static int check_extended_topology_leaf(int);
47:	static int detect_extended_topology_leaf(struct cpuinfo_x86 *);

File arch/x86/kernel/cpu/tsx.c:
19:	void tsx_disable(void);
39:	void tsx_enable(void);
84:	void tsx_init(void);

File arch/x86/kernel/cpu/vmware.c:
73:	static int setup_vmw_sched_clock(char *);
64:	static unsigned long vmware_get_tsc_khz(void);
200:	static bool vmware_legacy_x2apic_available(void);
182:	static uint32_t vmware_platform(void);
134:	static void vmware_platform_setup(void);
80:	static unsigned long long vmware_sched_clock(void);

File arch/x86/kernel/cpu/zhaoxin.c:
63:	static void early_init_zhaoxin(struct cpuinfo_x86 *);
117:	static void init_zhaoxin(struct cpuinfo_x86 *);

File arch/x86/kernel/cpuid.c:
133:	static int cpuid_device_create(unsigned int);
142:	static int cpuid_device_destroy(unsigned int);
148:	static char *cpuid_devnode(struct device *, umode_t *);
186:	static void cpuid_exit(void);
153:	static int cpuid_init(void);
107:	static int cpuid_open(struct inode *, struct file *);
67:	static ssize_t cpuid_read(struct file *, char *, size_t, loff_t *);
56:	static void cpuid_smp_cpuid(void *);

File arch/x86/kernel/crash.c:
424:	int crash_load_segments(struct kimage *);
351:	int crash_setup_memmap_entries(struct kimage *, struct boot_params *);
114:	void crash_smp_send_stop(void);
106:	void kdump_nmi_shootdown_cpus(void);
136:	void native_machine_crash_shutdown(struct pt_regs *);
298:	static int add_e820_entry(struct boot_params *, struct e820_entry *);
413:	static int determine_backup_region(struct resource *, void *);
182:	static int get_nr_ram_ranges_callback(struct resource *, void *);
72:	static void kdump_nmi_callback(int, struct pt_regs *);
312:	static int memmap_entry_callback(struct resource *, void *);
240:	static int prepare_elf64_ram_headers_callback(struct resource *, void *);

File arch/x86/kernel/crash_dump_64.c:
27:	ssize_t copy_oldmem_page(unsigned long, char *, size_t, unsigned long, int);

File arch/x86/kernel/doublefault.c:
77:	void df_debug(struct pt_regs *, long);

File arch/x86/kernel/dumpstack.c:
368:	int __die(const char *, struct pt_regs *, long);
398:	void die(const char *, struct pt_regs *, long);
49:	bool in_entry_stack(unsigned long *, struct stack_info *);
32:	bool in_task_stack(unsigned long *, struct task_struct *, struct stack_info *);
305:	unsigned long oops_begin(void);
331:	void oops_end(unsigned long, struct pt_regs *, int);
119:	void show_ip(struct pt_regs *, const char *);
129:	void show_iret_regs(struct pt_regs *);
93:	void show_opcodes(struct pt_regs *, const char *);
408:	void show_regs(struct pt_regs *);
282:	void show_stack(struct task_struct *, unsigned long *);
296:	void show_stack_regs(struct pt_regs *);
162:	void show_trace_log_lvl(struct task_struct *, struct pt_regs *, unsigned long *, char *);
136:	static void show_regs_if_on_stack(struct stack_info *, struct pt_regs *, bool);

File arch/x86/kernel/dumpstack_64.c:
107:	int get_stack_info(unsigned long *, struct task_struct *, struct stack_info *, unsigned long *);
33:	const char *stack_type_name(enum stack_type);

File arch/x86/kernel/e820.c:
845:	unsigned long e820__end_of_low_ram_pfn(void);
840:	unsigned long e820__end_of_ram_pfn(void);
1004:	void e820__finish_early_params(void);
143:	int e820__get_entry_type(u64, u64);
135:	bool e820__mapped_all(u64, u64, enum e820_type);
76:	bool e820__mapped_any(u64, u64, enum e820_type);
778:	u64 e820__memblock_alloc_reserved(u64, u64);
1247:	void e820__memblock_setup(void);
1231:	void e820__memory_setup(void);
1193:	char *e820__memory_setup_default(void);
699:	void e820__memory_setup_extended(u64, u32);
189:	void e820__print_table(char *);
169:	void e820__range_add(u64, u64, enum e820_type);
513:	u64 e820__range_remove(u64, u64, enum e820_type, bool);
502:	u64 e820__range_update(u64, u64, enum e820_type, enum e820_type);
669:	void e820__reallocate_tables(void);
728:	void e820__register_nosave_regions(unsigned long);
1091:	void e820__reserve_resources(void);
1155:	void e820__reserve_resources_late(void);
975:	void e820__reserve_setup_data(void);
630:	void e820__setup_pci_gap(void);
294:	int e820__update_table(struct e820_table *);
574:	void e820__update_table_print(void);
394:	static int __append_e820_table(struct boot_e820_entry *, u32);
153:	static void __e820__range_add(struct e820_table *, u64, u64, enum e820_type);
435:	static u64 __e820__range_update(struct e820_table *, u64, u64, enum e820_type, enum e820_type);
277:	static int cpcompare(const void *, const void *);
754:	static int e820__register_nvs_regions(void);
805:	static unsigned long e820_end_pfn(unsigned long, enum e820_type);
174:	static void e820_print_type(enum e820_type);
1015:	static const char *e820_type_to_string(struct e820_entry *);
954:	static int parse_memmap_opt(char *);
859:	static int parse_memopt(char *);

File arch/x86/kernel/early-quirks.c:
788:	void early_quirks(void);
616:	static void apple_airport_reset(int, int, int);
134:	static void ati_bugs(int, int, int);
170:	static void ati_bugs_contd(int, int, int);
425:	static resource_size_t chv_stolen_size(int, int, int);
775:	static void early_pci_scan_bus(int);
31:	static void fix_hypertransport_config(int, int, int);
603:	static void force_disable_hpet(int, int, int);
341:	static resource_size_t gen11_stolen_base(int, int, int, resource_size_t);
326:	static resource_size_t gen3_stolen_base(int, int, int, resource_size_t);
374:	static resource_size_t gen3_stolen_size(int, int, int);
403:	static resource_size_t gen6_stolen_size(int, int, int);
414:	static resource_size_t gen8_stolen_size(int, int, int);
446:	static resource_size_t gen9_stolen_size(int, int, int);
298:	static resource_size_t i830_stolen_base(int, int, int, resource_size_t);
353:	static resource_size_t i830_stolen_size(int, int, int);
304:	static resource_size_t i845_stolen_base(int, int, int, resource_size_t);
257:	static resource_size_t i845_tseg_size(void);
310:	static resource_size_t i85x_stolen_base(int, int, int, resource_size_t);
316:	static resource_size_t i865_stolen_base(int, int, int, resource_size_t);
581:	static void intel_graphics_quirks(int, int, int);
211:	static void intel_remapping_check(int, int, int);
80:	static void nvidia_bugs(int, int, int);
73:	static int nvidia_hpet_check(struct acpi_table_header *);
57:	static void via_bugs(int, int, int);

File arch/x86/kernel/early_printk.c:
330:	static void early_console_register(struct console *, int);
133:	static void early_serial_hw_init(unsigned int);
151:	static void early_serial_init(char *);
113:	static int early_serial_putc(unsigned char);
123:	static void early_serial_write(struct console *, const char *, unsigned int);
32:	static void early_vga_write(struct console *, const char *, unsigned int);
100:	static unsigned int io_serial_in(unsigned long, int);
105:	static void io_serial_out(unsigned long, int, int);
205:	static unsigned int mem32_serial_in(unsigned long, int);
198:	static void mem32_serial_out(unsigned long, int, int);
345:	static int setup_early_printk(char *);

File arch/x86/kernel/ebda.c:
56:	void reserve_bios_regions(void);

File arch/x86/kernel/espfix_64.c:
139:	void init_espfix_ap(int);
122:	void init_espfix_bsp(void);

File arch/x86/kernel/fpu/bugs.c:
25:	void fpu__init_check_bugs(void);

File arch/x86/kernel/fpu/core.c:
171:	void fpstate_init(union fpregs_state *);
383:	void fpu__clear(struct fpu *);
189:	int fpu__copy(struct fpu *, struct fpu *);
339:	void fpu__drop(struct fpu *);
405:	int fpu__exception_code(struct fpu *, int);
226:	void fpu__initialize(struct fpu *);
256:	void fpu__prepare_read(struct fpu *);
285:	void fpu__prepare_write(struct fpu *);
316:	void fpu__restore(struct fpu *);
144:	void fpu__save(struct fpu *);
88:	bool irq_fpu_usable(void);
125:	void kernel_fpu_begin(void);
132:	void kernel_fpu_end(void);

File arch/x86/kernel/fpu/init.c:
230:	u64 fpu__get_supported_xfeatures_mask(void);
46:	void fpu__init_cpu(void);
286:	void fpu__init_system(struct cpuinfo_x86 *);
16:	static void fpu__init_cpu_generic(void);

File arch/x86/kernel/fpu/regset.c:
236:	void convert_from_fxsr(struct user_i387_ia32_struct *, struct task_struct *);
272:	void convert_to_fxsr(struct task_struct *, const struct user_i387_ia32_struct *);
371:	int dump_fpu(struct pt_regs *, struct user_i387_struct *);
300:	int fpregs_get(struct task_struct *, const struct user_regset *, unsigned int, unsigned int, void *, void *);
329:	int fpregs_set(struct task_struct *, const struct user_regset *, unsigned int, unsigned int, const void *, const void *);
16:	int regset_fpregs_active(struct task_struct *, const struct user_regset *);
33:	int xfpregs_get(struct task_struct *, const struct user_regset *, unsigned int, unsigned int, void *, void *);
49:	int xfpregs_set(struct task_struct *, const struct user_regset *, unsigned int, unsigned int, const void *, const void *);
80:	int xstateregs_get(struct task_struct *, const struct user_regset *, unsigned int, unsigned int, void *, void *);
117:	int xstateregs_set(struct task_struct *, const struct user_regset *, unsigned int, unsigned int, const void *, const void *);

File arch/x86/kernel/fpu/signal.c:
157:	int copy_fpstate_to_sigframe(void *, void *, int);
400:	unsigned long fpu__alloc_mathframe(unsigned long, int, unsigned long *, unsigned long *);
422:	void fpu__init_prepare_fx_sw_frame(void);
386:	int fpu__restore_sig(void *, int);
267:	static int __fpu__restore_sig(void *, void *, int);
57:	static int save_fsave_header(struct task_struct *, void *);

File arch/x86/kernel/fpu/xstate.c:
846:	void *__raw_xsave_addr(struct xregs_state *, int);
948:	int arch_set_user_pkey_access(struct task_struct *, int, unsigned long);
1178:	int copy_kernel_to_xstate(struct xregs_state *, const void *);
1231:	int copy_user_to_xstate(struct xregs_state *, const void *);
1021:	int copy_xstate_to_kernel(void *, struct xregs_state *, unsigned int, unsigned int);
1105:	int copy_xstate_to_user(void *, struct xregs_state *, unsigned int, unsigned int);
83:	int cpu_has_xfeatures(u64, const char **);
152:	void fpstate_sanitize_xstate(struct fpu *);
220:	void fpu__init_cpu_xstate(void);
750:	void fpu__init_system_xstate(void);
830:	void fpu__resume_cpu(void);
73:	void fpu__xstate_clear_all_cpu_caps(void);
875:	void *get_xsave_addr(struct xregs_state *, int);
925:	const void *get_xsave_field_ptr(int);
507:	int using_compacted_format(void);
513:	int validate_xstate_header(const struct xstate_header *);
1085:	static int __copy_xstate_to_user(void *, const void *, unsigned int, unsigned int, unsigned int);
536:	static void __xstate_dump_leaves(void);
612:	static void do_extra_xstate_size_checks(void);
293:	static void print_xstate_feature(u64);
349:	static void setup_xstate_comp(void);
330:	static int xfeature_is_aligned(int);
116:	static int xfeature_is_supervisor(int);
489:	static int xfeature_size(int);

File arch/x86/kernel/ftrace.c:
968:	void arch_ftrace_trampoline_free(struct ftrace_ops *);
956:	void *arch_ftrace_trampoline_func(struct ftrace_ops *, struct dyn_ftrace *);
677:	void arch_ftrace_update_code(int);
860:	void arch_ftrace_update_trampoline(struct ftrace_ops *);
45:	int ftrace_arch_code_modify_post_process(void);
37:	int ftrace_arch_code_modify_prepare(void);
1007:	int ftrace_disable_ftrace_graph_caller(void);
687:	int ftrace_dyn_arch_init(void);
1000:	int ftrace_enable_ftrace_graph_caller(void);
297:	int ftrace_int3_handler(struct pt_regs *);
172:	int ftrace_make_call(struct dyn_ftrace *, unsigned long);
145:	int ftrace_make_nop(struct module *, struct dyn_ftrace *, unsigned long);
229:	int ftrace_modify_call(struct dyn_ftrace *, unsigned long, unsigned long);
578:	void ftrace_replace_code(int);
261:	int ftrace_update_ftrace_func(ftrace_func_t);
1020:	void prepare_ftrace_return(unsigned long, unsigned long *, unsigned long);
338:	static int add_break(unsigned long, const char *);
903:	static void *addr_from_call(void *);
555:	static void do_sync_core(void *);
111:	static int ftrace_modify_code_direct(unsigned long, const unsigned char *, const unsigned char *);
328:	static int ftrace_write(unsigned long, const char *, int);
560:	static void run_sync(void);
240:	static int update_ftrace_func(unsigned long, void *);

File arch/x86/kernel/head64.c:
300:	int __early_make_pgtable(unsigned long, pmdval_t);
113:	unsigned long __startup_64(unsigned long, struct boot_params *);
282:	unsigned long __startup_secondary_64(void);
370:	int early_make_pgtable(unsigned long);
425:	void x86_64_start_kernel(char *);
474:	void x86_64_start_reservations(char *);
397:	static void copy_bootdata(char *);
292:	static void reset_early_page_tables(void);

File arch/x86/kernel/hpet.c:
1068:	void hpet_disable(void);
902:	int hpet_enable(void);
1224:	int hpet_mask_rtc_irq_bit(unsigned long);
455:	void hpet_msi_mask(struct irq_data *);
472:	void hpet_msi_read(struct hpet_dev *, struct msi_msg *);
444:	void hpet_msi_unmask(struct irq_data *);
466:	void hpet_msi_write(struct hpet_dev *, struct msi_msg *);
63:	unsigned int hpet_readl(unsigned int);
1141:	int hpet_register_irq_handler(rtc_irq_handler);
1290:	int hpet_rtc_dropped_irq(void);
1328:	irqreturn_t hpet_rtc_interrupt(int, void *);
1174:	int hpet_rtc_timer_init(void);
1256:	int hpet_set_alarm_time(unsigned char, unsigned char, unsigned char);
1270:	int hpet_set_periodic_freq(unsigned long);
1237:	int hpet_set_rtc_irq_bit(unsigned long);
1158:	void hpet_unregister_irq_handler(rtc_irq_handler);
134:	int is_hpet_enabled(void);
140:	static void _hpet_print_config(const char *, int);
114:	static int disable_hpet(char *);
723:	static int hpet_cpuhp_dead(unsigned int);
710:	static int hpet_cpuhp_online(unsigned int);
520:	static irqreturn_t hpet_interrupt_handler(int, void *);
1019:	static int hpet_late_init(void);
413:	static int hpet_legacy_next_event(unsigned long, struct clock_event_device *);
408:	static int hpet_legacy_resume(struct clock_event_device *);
398:	static int hpet_legacy_set_oneshot(struct clock_event_device *);
403:	static int hpet_legacy_set_periodic(struct clock_event_device *);
393:	static int hpet_legacy_shutdown(struct clock_event_device *);
592:	static void hpet_msi_capability_lookup(unsigned int);
513:	static int hpet_msi_next_event(unsigned long, struct clock_event_device *);
500:	static int hpet_msi_resume(struct clock_event_device *);
486:	static int hpet_msi_set_oneshot(struct clock_event_device *);
493:	static int hpet_msi_set_periodic(struct clock_event_device *);
479:	static int hpet_msi_shutdown(struct clock_event_device *);
185:	static void hpet_reserve_platform_timers(unsigned int);
253:	static void hpet_restart_counter(void);
265:	static void hpet_resume_counter(struct clocksource *);
296:	static int hpet_set_periodic(int, struct clock_event_device *, struct clock_event_device *);
95:	static int hpet_setup(char *);
695:	static void hpet_work(struct work_struct *);
791:	static u64 read_hpet(struct clocksource *);

File arch/x86/kernel/hw_breakpoint.c:
381:	void aout_dump_debugregs(struct user *);
190:	int arch_bp_generic_fields(int, int, int *, int *);
226:	int arch_check_bp_in_kernelspace(struct arch_hw_breakpoint *);
106:	int arch_install_hw_breakpoint(struct perf_event *);
146:	void arch_uninstall_hw_breakpoint(struct perf_event *);
87:	int decode_dr7(unsigned long, int, unsigned int *, unsigned int *);
78:	unsigned long encode_dr7(int, unsigned int, unsigned int);
412:	void flush_ptrace_hw_breakpoint(struct task_struct *);
329:	int hw_breakpoint_arch_parse(struct perf_event *, const struct perf_event_attr *, struct arch_hw_breakpoint *);
540:	int hw_breakpoint_exceptions_notify(struct notifier_block *, unsigned long, void *);
549:	void hw_breakpoint_pmu_read(struct perf_event *);
426:	void hw_breakpoint_restore(void);

File arch/x86/kernel/i8237.c:
52:	static int i8237A_init_ops(void);
26:	static void i8237A_resume(void);

File arch/x86/kernel/i8253.c:
40:	bool pit_timer_init(void);

File arch/x86/kernel/i8259.c:
72:	static void disable_8259A_irq(struct irq_data *);
91:	static void enable_8259A_irq(struct irq_data *);
426:	static int i8259A_init_ops(void);
96:	static int i8259A_irq_pending(unsigned int);
249:	static void i8259A_resume(void);
261:	static void i8259A_shutdown(void);
255:	static int i8259A_suspend(void);
327:	static void init_8259A(int);
387:	static void legacy_pic_int_noop(int);
388:	static int legacy_pic_irq_pending_noop(unsigned int);
385:	static void legacy_pic_noop(void);
392:	static int legacy_pic_probe(void);
386:	static void legacy_pic_uint_noop(unsigned int);
112:	static void make_8259A_irq(unsigned int);
277:	static void mask_8259A(void);
58:	static void mask_8259A_irq(unsigned int);
150:	static void mask_and_ack_8259A(struct irq_data *);
301:	static int probe_8259A(void);
289:	static void unmask_8259A(void);
77:	static void unmask_8259A_irq(unsigned int);

File arch/x86/kernel/idt.c:
364:	void alloc_intr_gate(unsigned int, const void *);
350:	void idt_invalidate(void *);
309:	void idt_setup_apic_and_irq_gates(void);
298:	void idt_setup_debugidt_traps(void);
333:	void idt_setup_early_handler(void);
281:	void idt_setup_early_pf(void);
255:	void idt_setup_early_traps(void);
290:	void idt_setup_ist_traps(void);
265:	void idt_setup_traps(void);
357:	void update_intr_gate(unsigned int, const void *);
220:	static void idt_setup_from_table(gate_desc *, const struct idt_data *, int, bool);
232:	static void set_intr_gate(unsigned int, const void *);

File arch/x86/kernel/io_delay.c:
106:	void io_delay_init(void);
23:	void native_io_delay(void);
48:	static int dmi_io_delay_0xed_port(const struct dmi_system_id *);
112:	static int io_delay_param(char *);

File arch/x86/kernel/ioport.c:
99:	long __ia32_sys_ioperm(const struct pt_regs *);
114:	long __ia32_sys_iopl(const struct pt_regs *);
99:	long __x64_sys_ioperm(const struct pt_regs *);
114:	long __x64_sys_iopl(const struct pt_regs *);
26:	long ksys_ioperm(unsigned long, unsigned long, int);

File arch/x86/kernel/irq.c:
37:	void ack_bad_irq(unsigned int);
220:	u64 arch_irq_stat(void);
190:	u64 arch_irq_stat_cpu(unsigned int);
58:	int arch_show_interrupts(struct seq_file *, int);
232:	unsigned int do_IRQ(struct pt_regs *);
342:	void fixup_irqs(void);
289:	void kvm_set_posted_intr_wakeup_handler(void (*)(void));
301:	void smp_kvm_posted_intr_ipi(struct pt_regs *);
328:	void smp_kvm_posted_intr_nested_ipi(struct pt_regs *);
314:	void smp_kvm_posted_intr_wakeup_ipi(struct pt_regs *);
270:	void smp_x86_platform_ipi(struct pt_regs *);
286:	static void dummy_handler(void);

File arch/x86/kernel/irq_64.c:
80:	bool handle_irq(struct irq_desc *, struct pt_regs *);

File arch/x86/kernel/irq_work.c:
26:	void arch_irq_work_raise(void);
16:	void smp_irq_work_interrupt(struct pt_regs *);

File arch/x86/kernel/irqinit.c:
79:	void init_IRQ(void);
60:	void init_ISA_irqs(void);
97:	void native_init_IRQ(void);

File arch/x86/kernel/itmt.c:
177:	int arch_asym_cpu_priority(int);
152:	void sched_clear_itmt_support(void);
196:	void sched_set_itmt_core_prio(int, int);
115:	int sched_set_itmt_support(void);
45:	static int sched_itmt_update_handler(struct ctl_table *, int, void *, size_t *, loff_t *);

File arch/x86/kernel/jump_label.c:
107:	void arch_jump_label_transform(struct jump_entry *, enum jump_label_type);
121:	void arch_jump_label_transform_static(struct jump_entry *, enum jump_label_type);
38:	static void __jump_label_transform(enum jump_label_type, void *(*)(void *, const void *, size_t), int, struct jump_entry *, struct jump_entry *);
27:	static void bug_at(unsigned char *, int);

File arch/x86/kernel/kdebugfs.c:
188:	static int arch_kdebugfs_init(void);
30:	static ssize_t setup_data_read(struct file *, char *, size_t, loff_t *);

File arch/x86/kernel/kexec-bzimage64.c:
522:	static int bzImage64_cleanup(void *);
330:	static void *bzImage64_load(struct kimage *, char *, unsigned long, char *, unsigned long, char *, unsigned long);
272:	static int bzImage64_probe(const char *, unsigned long);
536:	static int bzImage64_verify_sig(const char *, unsigned long);

File arch/x86/kernel/kgdb.c:
115:	char *dbg_get_reg(int, void *, struct pt_regs *);
100:	int dbg_set_reg(int, void *, struct pt_regs *);
703:	void kgdb_arch_exit(void);
461:	int kgdb_arch_handle_exception(int, int, int, char *, char *, struct pt_regs *);
618:	int kgdb_arch_init(void);
658:	void kgdb_arch_late(void);
739:	unsigned long kgdb_arch_pc(int, struct pt_regs *);
783:	int kgdb_arch_remove_breakpoint(struct kgdb_bkpt *);
751:	int kgdb_arch_set_breakpoint(struct kgdb_bkpt *);
746:	void kgdb_arch_set_pc(struct pt_regs *, unsigned long);
577:	int kgdb_ll_trap(int, const char *, struct pt_regs *, long, int, int);
439:	void kgdb_roundup_cpus(unsigned long);
730:	int kgdb_skipexception(int, struct pt_regs *);
159:	void sleeping_thread_to_gdb_regs(unsigned long *, struct task_struct *);
548:	static int __kgdb_notify(struct die_args *, unsigned long);
272:	static int hw_break_release_slot(int);
206:	static void kgdb_correct_hw_break(void);
398:	static void kgdb_disable_hw_debug(struct pt_regs *);
647:	static void kgdb_hw_overflow_handler(struct perf_event *, struct perf_sample_data *, struct pt_regs *);
517:	static int kgdb_nmi_handler(unsigned int, struct pt_regs *);
596:	static int kgdb_notify(struct notifier_block *, unsigned long, void *);
312:	static void kgdb_remove_all_hw_break(void);
293:	static int kgdb_remove_hw_break(unsigned long, int, enum kgdb_bptype);
338:	static int kgdb_set_hw_break(unsigned long, int, enum kgdb_bptype);

File arch/x86/kernel/kprobes/core.c:
358:	int __copy_instruction(u8 *, u8 *, u8 *, struct insn *);
436:	void *alloc_insn_page(void);
523:	void arch_arm_kprobe(struct kprobe *);
528:	void arch_disarm_kprobe(struct kprobe *);
1146:	int arch_init_kprobes(void);
1140:	int arch_populate_kprobe_blacklist(void);
500:	int arch_prepare_kprobe(struct kprobe *);
590:	void arch_prepare_kretprobe(struct kretprobe_instance *, struct pt_regs *);
533:	void arch_remove_kprobe(struct kprobe *);
1151:	int arch_trampoline_kprobe(struct kprobe *);
1124:	bool arch_within_kprobe_blacklist(unsigned long);
170:	int can_boost(struct insn *, void *);
460:	void free_insn_page(void *);
993:	int kprobe_debug_handler(struct pt_regs *);
1101:	int kprobe_exceptions_notify(struct notifier_block *, unsigned long, void *);
1028:	int kprobe_fault_handler(struct pt_regs *, int);
679:	int kprobe_int3_handler(struct pt_regs *);
282:	unsigned long recover_probed_instruction(kprobe_opcode_t *, unsigned long);
140:	void synthesize_relcall(void *, void *, void *);
133:	void synthesize_reljump(void *, void *, void *);
471:	static int arch_copy_kprobe(struct kprobe *);
294:	static int can_probe(unsigned long);
645:	static int reenter_kprobe(struct kprobe *, struct pt_regs *, struct kprobe_ctlblk *);
926:	static void resume_execution(struct kprobe *, struct pt_regs *, struct kprobe_ctlblk *);
602:	static void setup_singlestep(struct kprobe *, struct pt_regs *, struct kprobe_ctlblk *, int);
149:	static kprobe_opcode_t *skip_prefixes(kprobe_opcode_t *);
778:	static void *trampoline_handler(struct pt_regs *);

File arch/x86/kernel/kprobes/ftrace.c:
71:	int arch_prepare_kprobe_ftrace(struct kprobe *);
29:	void kprobe_ftrace_handler(unsigned long, unsigned long, struct ftrace_ops *, struct pt_regs *);

File arch/x86/kernel/kprobes/opt.c:
47:	unsigned long __recover_optprobed_insn(kprobe_opcode_t *, unsigned long);
324:	int arch_check_optimized_kprobe(struct optimized_kprobe *);
436:	void arch_optimize_kprobes(struct list_head *);
367:	int arch_prepare_optimized_kprobe(struct optimized_kprobe *, struct kprobe *);
357:	void arch_remove_optimized_kprobe(struct optimized_kprobe *);
462:	void arch_unoptimize_kprobe(struct optimized_kprobe *);
477:	void arch_unoptimize_kprobes(struct list_head *, struct list_head *);
339:	int arch_within_optimized_kprobe(struct optimized_kprobe *, unsigned long);
488:	int setup_detour_execution(struct kprobe *, struct pt_regs *, int);
267:	static int can_optimize(unsigned long);
191:	static int copy_optimized_instructions(u8 *, u8 *, u8 *);
220:	static int insn_jump_into_range(struct insn *, unsigned long, int);
161:	static void optimized_callback(struct optimized_kprobe *, struct pt_regs *);

File arch/x86/kernel/ksysfs.c:
31:	static ssize_t boot_params_data_read(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
311:	static int boot_params_ksysfs_init(void);
71:	static int get_setup_data_paddr(int, u64 *);
139:	static ssize_t setup_data_data_read(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
116:	static ssize_t type_show(struct kobject *, struct kobj_attribute *, char *);
23:	static ssize_t version_show(struct kobject *, struct kobj_attribute *, char *);

File arch/x86/kernel/kvm.c:
923:	void arch_haltpoll_disable(unsigned int);
910:	void arch_haltpoll_enable(unsigned int);
258:	void do_async_page_fault(struct pt_regs *, unsigned long);
697:	unsigned int kvm_arch_para_features(void);
702:	unsigned int kvm_arch_para_hints(void);
115:	void kvm_async_pf_task_wait(u32, int);
203:	void kvm_async_pf_task_wake(u32);
412:	void kvm_disable_steal_time(void);
691:	bool kvm_para_available(void);
243:	u32 kvm_read_and_reset_pf_reason(void);
842:	void kvm_spinlock_init(void);
670:	static uint32_t __kvm_cpuid_base(void);
450:	static void __send_ipi_mask(const struct cpumask *, int);
736:	static int activate_jump_labels(void);
185:	static void apf_task_wake_all(void);
176:	static void apf_task_wake_one(struct kvm_task_sleep_node *);
589:	static void kvm_apf_trap_init(void);
713:	static void kvm_apic_init(void);
580:	static int kvm_cpu_down_prepare(unsigned int);
572:	static int kvm_cpu_online(unsigned int);
708:	static uint32_t kvm_detect(void);
900:	static void kvm_disable_host_haltpoll(void *);
905:	static void kvm_enable_host_haltpoll(void *);
596:	static void kvm_flush_tlb_others(const struct cpumask *, const struct flush_tlb_info *);
308:	static void kvm_guest_apic_eoi_write(u32, u32);
322:	static void kvm_guest_cpu_init(void);
622:	static void kvm_guest_init(void);
721:	static void kvm_init_platform(void);
76:	static void kvm_io_delay(void);
769:	static void kvm_kick_cpu(int);
358:	static void kvm_pv_disable_apf(void);
370:	static void kvm_pv_guest_cpu_reboot(void *);
383:	static int kvm_pv_reboot_notify(struct notifier_block *, unsigned long, void *);
526:	static void kvm_send_ipi_all(int);
521:	static void kvm_send_ipi_allbutself(int);
504:	static void kvm_send_ipi_mask(const struct cpumask *, int);
509:	static void kvm_send_ipi_mask_allbutself(const struct cpumask *, int);
748:	static int kvm_setup_pv_tlb_flush(void);
550:	static void kvm_smp_prepare_boot_cpu(void);
543:	static void kvm_smp_prepare_cpus(unsigned int);
395:	static u64 kvm_steal_clock(int);
780:	static void kvm_wait(u8 *, u8);
52:	static int parse_no_kvmapf(char *);
61:	static int parse_no_stealacc(char *);

File arch/x86/kernel/kvmclock.c:
159:	bool kvm_check_and_clear_guest_paused(void);
321:	void kvmclock_init(void);
108:	static u64 kvm_clock_get_cycles(struct clocksource *);
222:	static void kvm_crash_shutdown(struct pt_regs *);
141:	static unsigned long kvm_get_tsc_khz(void);
85:	static void kvm_get_wallclock(struct timespec64 *);
184:	static void kvm_register_clock(char *);
201:	static void kvm_restore_sched_clock_state(void);
197:	static void kvm_save_sched_clock_state(void);
113:	static u64 kvm_sched_clock_read(void);
93:	static int kvm_set_wallclock(const struct timespec64 *);
207:	static void kvm_setup_secondary_clock(void);
276:	static int kvm_setup_vsyscall_timeinfo(void);
230:	static void kvm_shutdown(void);
297:	static int kvmclock_setup_percpu(unsigned int);
45:	static int parse_no_kvmclock(char *);
52:	static int parse_no_kvmclock_vsyscall(char *);

File arch/x86/kernel/ldt.c:
554:	long __ia32_sys_modify_ldt(const struct pt_regs *);
554:	long __x64_sys_modify_ldt(const struct pt_regs *);
400:	void destroy_context_ldt(struct mm_struct *);
406:	void ldt_arch_exit_mmap(struct mm_struct *);
360:	int ldt_dup_context(struct mm_struct *, struct mm_struct *);
65:	static struct ldt_struct *alloc_ldt_struct(unsigned int);
52:	static void flush_ldt(void *);
308:	static void free_ldt_pgtables(struct mm_struct *);
343:	static void free_ldt_struct(struct ldt_struct *);
205:	static int map_ldt_struct(struct mm_struct *, struct ldt_struct *, int);
411:	static int read_ldt(void *, unsigned long);
465:	static int write_ldt(void *, unsigned long, int);

File arch/x86/kernel/livepatch.c:
290:	void arch_klp_code_modify_post_process(void);
284:	void arch_klp_code_modify_prepare(void);
256:	void arch_klp_free_func(struct klp_object *, struct klp_func *);
251:	int arch_klp_init_func(struct klp_object *, struct klp_func *);
28:	void arch_klp_init_object_loaded(struct klp_patch *, struct klp_object *);
310:	int arch_klp_patch_func(struct klp_func *);
344:	void arch_klp_unpatch_func(struct klp_func *);
236:	int klp_check_calltrace(struct klp_patch *, int);

File arch/x86/kernel/machine_kexec_64.c:
440:	void arch_crash_save_vmcoreinfo(void);
483:	int arch_kexec_apply_relocations_add(struct purgatory_info *, Elf64_Shdr *, const Elf64_Shdr *, const Elf64_Shdr *);
459:	void *arch_kexec_kernel_image_load(struct kimage *);
646:	int arch_kexec_post_alloc_pages(void *, unsigned int, gfp_t);
656:	void arch_kexec_pre_free_pages(void *, unsigned int);
636:	void arch_kexec_protect_crashkres(void);
641:	void arch_kexec_unprotect_crashkres(void);
365:	void machine_kexec(struct kimage *);
356:	void machine_kexec_cleanup(struct kimage *);
335:	int machine_kexec_prepare(struct kimage *);
176:	static void *alloc_pgt_page(void *);
126:	static int init_transition_pgtable(struct kimage *, pgd_t *);
622:	static void kexec_mark_crashkres(bool);
602:	static int kexec_mark_range(unsigned long, unsigned long, bool);
43:	static int mem_region_callback(struct resource *, void *);

File arch/x86/kernel/mmconf-fam10h_64.c:
235:	void check_enable_amd_mmconf_dmi(void);
170:	void fam10h_check_enable_mmcfg(void);
35:	static int cmp_range(const void *, const void *);
53:	static void get_fam10h_pci_mmconf_base(void);
217:	static int set_check_enable_amd_mmconf(const struct dmi_system_id *);

File arch/x86/kernel/module.c:
141:	int apply_relocate_add(Elf64_Shdr *, const char *, unsigned int, unsigned int, struct module *);
80:	void *module_alloc(unsigned long);
277:	void module_arch_cleanup(struct module *);
226:	int module_finalize(const Elf64_Ehdr *, const Elf64_Shdr *, struct module *);

File arch/x86/kernel/mpparse.c:
620:	void default_find_smp_config(void);
504:	void default_get_smp_config(unsigned int);
49:	int default_mpc_apic_id(struct mpc_cpu *);
76:	void default_mpc_oem_bus_info(struct mpc_bus *, char *);
201:	void default_smp_read_mpc_oem(struct mpc_table *);
849:	void e820__memblock_alloc_reserved_mpc_new(void);
83:	static void MP_bus_info(struct mpc_bus *);
116:	static void MP_ioapic_info(struct mpc_ioapic *);
141:	static void MP_lintsrc_info(struct mpc_lintsrc *);
54:	static void MP_processor_info(struct mpc_cpu *);
277:	static void construct_default_ioirq_mptable(int);
439:	static unsigned long get_mpc_size(unsigned long);
39:	static int mpf_checksum(unsigned char *, int);
835:	static int parse_alloc_mptable_opt(char *);
127:	static void print_mp_irq_info(struct mpc_intsrc *);
152:	static int smp_check_mpc(struct mpc_table *, char *, char *);
193:	static void smp_dump_mptable(struct mpc_table *, unsigned char *);
576:	static int smp_scan_config(unsigned long, unsigned long);
855:	static int update_mp_table(void);
820:	static int update_mptable_setup(char *);

File arch/x86/kernel/msr.c:
184:	static int msr_device_create(unsigned int);
193:	static int msr_device_destroy(unsigned int);
199:	static char *msr_devnode(struct device *, umode_t *);
234:	static void msr_exit(void);
204:	static int msr_init(void);
105:	static long msr_ioctl(struct file *, unsigned int, unsigned long);
153:	static int msr_open(struct inode *, struct file *);
49:	static ssize_t msr_read(struct file *, char *, size_t, loff_t *);
77:	static ssize_t msr_write(struct file *, const char *, size_t, loff_t *);

File arch/x86/kernel/nmi.c:
157:	int __register_nmi_handler(unsigned int, struct nmiaction *);
494:	void do_nmi(struct pt_regs *, long);
554:	void local_touch_nmi(void);
548:	void restart_nmi(void);
543:	void stop_nmi(void);
190:	void unregister_nmi_handler(unsigned int, const char *);
310:	static void default_do_nmi(struct pt_regs *);
238:	static void io_check_error(unsigned char, struct pt_regs *);
119:	static int nmi_handle(unsigned int, struct pt_regs *);
105:	static void nmi_max_handler(struct irq_work *);
97:	static int nmi_warning_debugfs(void);
217:	static void pci_serr_error(unsigned char, struct pt_regs *);
86:	static int setup_unknown_nmi_panic(char *);
278:	static void unknown_nmi_error(unsigned char, struct pt_regs *);

File arch/x86/kernel/paravirt-spinlocks.c:
12:	void __native_queued_spin_unlock(struct qspinlock *);
24:	bool __native_vcpu_is_preempted(long);
18:	bool pv_is_native_spin_unlock(void);
30:	bool pv_is_native_vcpu_is_preempted(void);

File arch/x86/kernel/paravirt.c:
60:	u32 _paravirt_ident_32(u32);
65:	u64 _paravirt_ident_64(u64);
70:	void default_banner(void);
127:	void native_pv_lock_init(void);
241:	int paravirt_disable_iospace(void);
295:	void paravirt_end_context_switch(struct task_struct *);
262:	void paravirt_enter_lazy_mmu(void);
272:	void paravirt_flush_lazy_mmu(void);
305:	enum paravirt_lazy_mode paravirt_get_lazy_mode(void);
267:	void paravirt_leave_lazy_mmu(void);
84:	unsigned int paravirt_patch_call(unsigned long, unsigned int, u16, u16, const void *, void *);
152:	unsigned int paravirt_patch_default(u8, u16, void *, unsigned long, unsigned int);
183:	unsigned int paravirt_patch_insns(void *, unsigned int, const char *, const char *);
106:	unsigned int paravirt_patch_jmp(unsigned long, unsigned int, const void *, void *);
284:	void paravirt_start_context_switch(struct task_struct *);
137:	static void *get_call_destination(u8);
255:	static void leave_lazy(enum paravirt_lazy_mode);
196:	static void native_flush_tlb(void);
205:	static void native_flush_tlb_global(void);
210:	static void native_flush_tlb_one_user(unsigned long);
218:	static u64 native_steal_clock(int);

File arch/x86/kernel/paravirt_patch_64.c:
41:	unsigned int native_patch(u8, u16, void *, unsigned long, unsigned int);
26:	unsigned int paravirt_patch_ident_32(void *, unsigned int);
32:	unsigned int paravirt_patch_ident_64(void *, unsigned int);

File arch/x86/kernel/pci-dma.c:
80:	bool arch_dma_alloc_attrs(struct device **);
62:	void pci_iommu_alloc(void);
96:	static int iommu_setup(char *);
162:	static int pci_iommu_init(void);
187:	static void via_no_dac(struct pci_dev *);
181:	static int via_no_dac_cb(struct pci_dev *, void *);

File arch/x86/kernel/pci-iommu_table.c:
50:	void check_iommu_entries(struct iommu_table_entry *, struct iommu_table_entry *);
28:	void sort_iommu_table(struct iommu_table_entry *, struct iommu_table_entry *);
11:	static struct iommu_table_entry *find_dependents_of(struct iommu_table_entry *, struct iommu_table_entry *, struct iommu_table_entry *);

File arch/x86/kernel/pci-swiotlb.c:
42:	int pci_swiotlb_detect_4gb(void);
26:	int pci_swiotlb_detect_override(void);
63:	void pci_swiotlb_init(void);
71:	void pci_swiotlb_late_init(void);

File arch/x86/kernel/pcspeaker.c:
6:	static int add_pcspkr(void);

File arch/x86/kernel/perf_regs.c:
132:	void perf_get_regs_user(struct perf_regs *, struct pt_regs *, struct pt_regs *);
124:	u64 perf_reg_abi(struct task_struct *);
116:	int perf_reg_validate(u64);
60:	u64 perf_reg_value(struct pt_regs *, int);

File arch/x86/kernel/platform-quirks.c:
8:	void x86_early_init_platform_quirks(void);
36:	bool x86_pnpbios_disabled(void);

File arch/x86/kernel/pmem.c:
10:	static int found(struct resource *, void *);
15:	static int register_e820_pmem(void);

File arch/x86/kernel/probe_roms.c:
171:	size_t pci_biosrom_size(struct pci_dev *);
154:	void *pci_map_biosrom(struct pci_dev *);
165:	void pci_unmap_biosrom(void *);
198:	void probe_roms(void);
114:	static struct resource *find_oprom(struct pci_dev *);
81:	static bool match_id(struct pci_dev *, unsigned short, unsigned short);
189:	static int romchecksum(const unsigned char *, unsigned long);
181:	static int romsignature(const unsigned char *);

File arch/x86/kernel/process.c:
475:	void __switch_to_xtra(struct task_struct *, struct task_struct *);
703:	void amd_e400_c1e_apic_setup(void);
770:	unsigned long arch_align_stack(unsigned long);
546:	void arch_cpu_idle(void);
538:	void arch_cpu_idle_dead(void);
532:	void arch_cpu_idle_enter(void);
94:	int arch_dup_task_struct(struct task_struct *, struct task_struct *);
713:	void arch_post_acpi_subsys_init(void);
777:	unsigned long arch_randomize_brk(struct mm_struct *);
250:	void arch_setup_new_exec(void);
554:	void default_idle(void);
142:	void disable_TSC(void);
844:	long do_arch_prctl_common(struct task_struct *, int, unsigned long);
107:	void exit_thread(struct task_struct *);
132:	void flush_thread(void);
166:	int get_tsc_mode(unsigned long);
788:	unsigned long get_wchan(struct task_struct *);
684:	void select_idle_routine(const struct cpuinfo_x86 *);
178:	int set_tsc_mode(unsigned int);
457:	void speculation_ctrl_update(unsigned long);
468:	void speculation_ctrl_update_current(void);
296:	void speculative_store_bypass_ht_init(void);
576:	void stop_this_cpu(void *);
566:	bool xen_set_default_idle(void);
611:	static void amd_e400_idle(void);
216:	static void enable_cpuid(void);
736:	static int idle_setup(char *);
662:	static void mwait_idle(void);
440:	static unsigned long speculation_ctrl_update_tif(struct task_struct *);

File arch/x86/kernel/process_64.c:
725:	unsigned long KSTK_ESP(struct task_struct *);
719:	long __ia32_compat_sys_arch_prctl(const struct pt_regs *);
707:	long __ia32_sys_arch_prctl(const struct pt_regs *);
67:	void __show_regs(struct pt_regs *, enum show_regs_mode);
428:	struct task_struct *__switch_to(struct task_struct *, struct task_struct *);
707:	long __x64_sys_arch_prctl(const struct pt_regs *);
408:	void compat_start_thread(struct pt_regs *, u32, u32);
291:	int copy_thread_tls(unsigned long, unsigned long, unsigned long, struct task_struct *, unsigned long);
631:	long do_arch_prctl_64(struct task_struct *, int, unsigned long);
145:	void release_thread(struct task_struct *);
225:	void save_fsgs_for_kvm(void);
548:	void set_personality_64bit(void);
606:	void set_personality_ia32(bool);
400:	void start_thread(struct pt_regs *, unsigned long, unsigned long);
374:	static void start_thread_common(struct pt_regs *, unsigned long, unsigned long, unsigned int, unsigned int, unsigned int);

File arch/x86/kernel/ptrace.c:
811:	long arch_ptrace(struct task_struct *, long, unsigned long, unsigned long);
1281:	long compat_arch_ptrace(struct task_struct *, compat_long_t, compat_ulong_t, compat_ulong_t);
799:	void ptrace_disable(struct task_struct *);
121:	const char *regs_query_register_name(unsigned int);
105:	int regs_query_register_offset(const char *);
1436:	void send_sigtrap(struct task_struct *, struct pt_regs *, int, int);
1403:	const struct user_regset_view *task_user_regset_view(struct task_struct *);
1392:	void update_regset_xstate_info(unsigned int, u64);
1429:	void user_single_step_siginfo(struct task_struct *, struct pt_regs *, struct siginfo *);
1070:	static int genregs32_get(struct task_struct *, const struct user_regset *, unsigned int, unsigned int, void *, void *);
1097:	static int genregs32_set(struct task_struct *, const struct user_regset *, unsigned int, unsigned int, const void *, const void *);
500:	static int genregs_get(struct task_struct *, const struct user_regset *, unsigned int, unsigned int, void *, void *);
525:	static int genregs_set(struct task_struct *, const struct user_regset *, unsigned int, unsigned int, const void *, const void *);
467:	static unsigned long getreg(struct task_struct *, unsigned long);
1019:	static int getreg32(struct task_struct *, unsigned int, u32 *);
775:	static int ioperm_active(struct task_struct *, const struct user_regset *);
781:	static int ioperm_get(struct task_struct *, const struct user_regset *, unsigned int, unsigned int, void *, void *);
626:	static int ptrace_modify_breakpoint(struct perf_event *, int, int, int);
609:	static struct perf_event *ptrace_register_breakpoint(struct task_struct *, int, int, unsigned long, bool);
712:	static int ptrace_set_breakpoint_addr(struct task_struct *, int, unsigned long);
751:	static int ptrace_set_debugreg(struct task_struct *, int, unsigned long);
553:	static void ptrace_triggered(struct perf_event *, struct perf_sample_data *, struct pt_regs *);
424:	static int putreg(struct task_struct *, unsigned long, unsigned long);
946:	static int putreg32(struct task_struct *, unsigned int, u32);
405:	static int set_flags(struct task_struct *, unsigned long);
298:	static int set_segment_reg(struct task_struct *, unsigned long, u16);
347:	static unsigned long task_seg_base(struct task_struct *, unsigned short);

File arch/x86/kernel/pvclock.c:
78:	u64 pvclock_clocksource_read(struct pvclock_vcpu_time_info *);
163:	struct pvclock_vsyscall_time_info *pvclock_get_pvti_cpu0_va(void);
65:	u8 pvclock_read_flags(struct pvclock_vcpu_time_info *);
124:	void pvclock_read_wallclock(struct pvclock_wall_clock *, struct pvclock_vcpu_time_info *, struct timespec64 *);
60:	void pvclock_resume(void);
33:	void pvclock_set_flags(u8);
157:	void pvclock_set_pvti_cpu0_va(struct pvclock_vsyscall_time_info *);
50:	void pvclock_touch_watchdogs(void);
38:	unsigned long pvclock_tsc_khz(struct pvclock_vcpu_time_info *);

File arch/x86/kernel/quirks.c:
672:	void early_platform_quirks(void);
479:	void force_hpet_resume(void);
606:	static void amd_disable_seq_and_redirect_scrub(struct pci_dev *);
378:	static void ati_force_enable_hpet(struct pci_dev *);
506:	static void e6xx_force_enable_hpet(struct pci_dev *);
527:	static void force_disable_hpet_msi(struct pci_dev *);
96:	static void ich_force_enable_hpet(struct pci_dev *);
431:	static void nvidia_force_enable_hpet(struct pci_dev *);
208:	static void old_ich_force_enable_hpet(struct pci_dev *);
261:	static void old_ich_force_enable_hpet_user(struct pci_dev *);
539:	static void quirk_amd_nb_node(struct pci_dev *);
635:	static void quirk_intel_brickland_xeon_ras_cap(struct pci_dev *);
13:	static void quirk_intel_irqbalance(struct pci_dev *);
646:	static void quirk_intel_purley_xeon_ras_cap(struct pci_dev *);
300:	static void vt8237_force_enable_hpet(struct pci_dev *);

File arch/x86/kernel/reboot.c:
562:	void mach_reboot_fixups(void);
788:	void machine_crash_shutdown(struct pt_regs *);
772:	void machine_emergency_restart(void);
782:	void machine_halt(void);
762:	void machine_power_off(void);
97:	void machine_real_restart(unsigned int);
777:	void machine_restart(char *);
767:	void machine_shutdown(void);
675:	void native_machine_shutdown(void);
890:	void nmi_panic_self_stop(struct pt_regs *);
843:	void nmi_shootdown_cpus(nmi_shootdown_cb);
883:	void run_crash_ipi_callback(struct pt_regs *);
805:	static int crash_nmi_callback(unsigned int, struct pt_regs *);
585:	static void native_machine_emergency_restart(void);
730:	static void native_machine_halt(void);
740:	static void native_machine_power_off(void);
721:	static void native_machine_restart(char *);
485:	static int reboot_init(void);
60:	static int set_acpi_reboot(const struct dmi_system_id *);
74:	static int set_bios_reboot(const struct dmi_system_id *);
88:	static int set_efi_reboot(const struct dmi_system_id *);
158:	static int set_kbd_reboot(const struct dmi_system_id *);
148:	static int set_pci_reboot(const struct dmi_system_id *);
521:	static void vmxoff_nmi(int, struct pt_regs *);

File arch/x86/kernel/resource.c:
39:	void arch_remove_reservations(struct resource *);

File arch/x86/kernel/rtc.c:
63:	void mach_get_cmos_time(struct timespec64 *);
42:	int mach_set_rtc_mmss(const struct timespec64 *);
154:	void read_persistent_clock64(struct timespec64 *);
126:	unsigned char rtc_cmos_read(unsigned char);
139:	void rtc_cmos_write(unsigned char, unsigned char);
148:	int update_persistent_clock64(struct timespec64);
180:	static int add_rtc_cmos(void);

File arch/x86/kernel/setup.c:
252:	void *extend_brk(size_t, size_t);
567:	void reserve_standard_io_resources(void);
769:	void setup_arch(char **);
132:	static void __brk_reservation_fn_dmi_alloc__(void);
741:	static int dump_kernel_offset(struct notifier_block *, unsigned long, void *);
710:	static int parse_reservelow(char *);
1250:	static int register_kernel_offset_dumper(void);

File arch/x86/kernel/setup_percpu.c:
166:	void setup_per_cpu_areas(void);
139:	static int pcpu_cpu_distance(unsigned int, unsigned int);
129:	static void *pcpu_fc_alloc(unsigned int, size_t, size_t);
134:	static void pcpu_fc_free(void *, size_t);
151:	static void pcpup_populate_pte(unsigned long);

File arch/x86/kernel/signal.c:
642:	long __x64_sys_rt_sigreturn(const struct pt_regs *);
817:	void do_signal(struct pt_regs *);
159:	int setup_sigcontext(struct sigcontext_64 *, void *, struct pt_regs *, unsigned long);
852:	void signal_fault(struct pt_regs *, void *, char *);

File arch/x86/kernel/signal_compat.c:
164:	void sigaction_compat_abi(struct k_sigaction *, struct k_sigaction *);

File arch/x86/kernel/smp.c:
139:	void native_send_call_func_ipi(const struct cpumask *);
134:	void native_send_call_func_single_ipi(int);
289:	void smp_call_function_interrupt(struct pt_regs *);
299:	void smp_call_function_single_interrupt(struct pt_regs *);
176:	void smp_reboot_interrupt(void);
268:	void smp_reschedule_interrupt(struct pt_regs *);
125:	static void native_smp_send_reschedule(int);
190:	static void native_stop_other_cpus(int);
309:	static int nonmi_ipi_setup(char *);
160:	static int smp_stop_nmi_callback(unsigned int, struct pt_regs *);

File arch/x86/kernel/smpboot.c:
658:	void __inquire_remote_apic(int);
1196:	void arch_disable_smp_support(void);
1366:	void arch_enable_nonboot_cpus_begin(void);
1371:	void arch_enable_nonboot_cpus_end(void);
111:	int arch_update_cpu_topology(void);
1388:	void calculate_max_logical_packages(void);
1587:	int common_cpu_die(unsigned int);
989:	void common_cpu_up(unsigned int, struct task_struct *);
634:	const struct cpumask *cpu_coregroup_mask(int);
1559:	void cpu_disable_common(void);
1706:	void hlt_play_dead(void);
1605:	void native_cpu_die(unsigned int);
1573:	int native_cpu_disable(void);
1120:	int native_cpu_up(unsigned int, struct task_struct *);
1721:	void native_play_dead(void);
1401:	void native_smp_cpus_done(unsigned int);
1379:	void native_smp_prepare_boot_cpu(void);
1300:	void native_smp_prepare_cpus(unsigned int);
1610:	void play_dead_common(void);
1441:	void prefill_possible_map(void);
564:	void set_cpu_sibling_map(int);
378:	void smp_store_boot_cpu_info(void);
394:	void smp_store_cpu_info(int);
279:	bool topology_is_primary_thread(unsigned int);
315:	int topology_phys_to_logical_die(unsigned int, unsigned int);
297:	int topology_phys_to_logical_pkg(unsigned int);
287:	bool topology_smt_supported(void);
359:	int topology_update_die_map(unsigned int, unsigned int);
336:	int topology_update_package_map(unsigned int, unsigned int);
741:	int wakeup_secondary_cpu_via_nmi(int, unsigned long);
1416:	static int _setup_possible_cpus(char *);
710:	static int cpu_init_udelay(char *);
1206:	static void disable_smp(void);
1011:	static int do_boot_cpu(int, int, struct task_struct *, int *);
213:	static void start_secondary(void *);
419:	static bool topology_sane(const char *, struct cpuinfo_x86 *, struct cpuinfo_x86 *);
925:	static int wakeup_cpu0_nmi(unsigned int, struct pt_regs *);
523:	static int x86_core_flags(void);
529:	static int x86_smt_flags(void);

File arch/x86/kernel/stacktrace.c:
57:	void save_stack_trace(struct stack_trace *);
64:	void save_stack_trace_regs(struct pt_regs *, struct stack_trace *);
69:	void save_stack_trace_tsk(struct task_struct *, struct stack_trace *);
148:	int save_stack_trace_tsk_reliable(struct task_struct *, struct stack_trace *);
219:	void save_stack_trace_user(struct stack_trace *);
33:	static void __save_stack_trace(struct stack_trace *, struct task_struct *, struct pt_regs *, bool);
15:	static int save_stack_address(struct stack_trace *, unsigned long, bool);

File arch/x86/kernel/step.c:
12:	unsigned long convert_ip_to_linear(struct task_struct *, struct pt_regs *);
167:	void set_task_blockstep(struct task_struct *, bool);
223:	void user_disable_single_step(struct task_struct *);
218:	void user_enable_block_step(struct task_struct *);
213:	void user_enable_single_step(struct task_struct *);
198:	static void enable_step(struct task_struct *, bool);

File arch/x86/kernel/sys_x86_64.c:
91:	long __ia32_sys_mmap(const struct pt_regs *);
91:	long __x64_sys_mmap(const struct pt_regs *);
57:	unsigned long align_vdso_addr(unsigned long);
132:	unsigned long arch_get_unmapped_area(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);
174:	unsigned long arch_get_unmapped_area_topdown(struct file *, const unsigned long, const unsigned long, const unsigned long, const unsigned long);
64:	static int control_va_addr_alignment(char *);
30:	static unsigned long get_align_mask(void);

File arch/x86/kernel/sysfb.c:
41:	static int sysfb_init(void);

File arch/x86/kernel/sysfb_efi.c:
71:	void efifb_setup_from_dmi(struct screen_info *, const char *);
271:	void sysfb_apply_efi_quirks(void);
95:	static int efifb_set_system(const struct dmi_system_id *);

File arch/x86/kernel/tboot.c:
523:	int tboot_force_iommu(void);
479:	struct acpi_table_header *tboot_get_dmar_table(struct acpi_table_header *);
62:	void tboot_probe(void);
231:	void tboot_shutdown(u32);
341:	static int tboot_dying_cpu(unsigned int);
313:	static int tboot_extended_sleep(u8, u32, u32);
418:	static int tboot_late_init(void);
363:	static ssize_t tboot_log_read(struct file *, char *, size_t, loff_t *);
286:	static int tboot_sleep(u8, u32, u32);

File arch/x86/kernel/time.c:
82:	void hpet_time_init(void);
31:	unsigned long profile_pc(struct pt_regs *);
115:	void time_init(void);
59:	static irqreturn_t timer_interrupt(int, void *);
92:	static void x86_late_time_init(void);

File arch/x86/kernel/tls.c:
243:	long __ia32_sys_get_thread_area(const struct pt_regs *);
191:	long __ia32_sys_set_thread_area(const struct pt_regs *);
243:	long __x64_sys_get_thread_area(const struct pt_regs *);
191:	long __x64_sys_set_thread_area(const struct pt_regs *);
220:	int do_get_thread_area(struct task_struct *, int, struct user_desc *);
114:	int do_set_thread_area(struct task_struct *, int, struct user_desc *, int);
248:	int regset_tls_active(struct task_struct *, const struct user_regset *);
258:	int regset_tls_get(struct task_struct *, const struct user_regset *, unsigned int, unsigned int, void *, void *);
292:	int regset_tls_set(struct task_struct *, const struct user_regset *, unsigned int, unsigned int, const void *, const void *);
201:	static void fill_user_desc(struct user_desc *, int, const struct desc_struct *);
84:	static void set_tls_desc(struct task_struct *, int, const struct user_desc *, int);
32:	static bool tls_desc_okay(const struct user_desc *);

File arch/x86/kernel/topology.c:
107:	int arch_register_cpu(int);
148:	void arch_unregister_cpu(int);
161:	static int topology_init(void);

File arch/x86/kernel/trace_clock.c:
14:	u64 trace_clock_x86_tsc(void);

File arch/x86/kernel/tracepoint.c:
16:	int trace_pagefault_reg(void);
22:	void trace_pagefault_unreg(void);
31:	int trace_resched_ipi_reg(void);
37:	void trace_resched_ipi_unreg(void);

File arch/x86/kernel/traps.c:
321:	void do_alignment_check(struct pt_regs *, long);
455:	void do_bounds(struct pt_regs *, long);
883:	void do_coprocessor_error(struct pt_regs *, long);
317:	void do_coprocessor_segment_overrun(struct pt_regs *, long);
730:	void do_debug(struct pt_regs *, long);
903:	void do_device_not_available(struct pt_regs *, long);
314:	void do_divide_error(struct pt_regs *, long);
340:	void do_double_fault(struct pt_regs *, long);
534:	void do_general_protection(struct pt_regs *, long);
581:	void do_int3(struct pt_regs *, long);
318:	void do_invalid_TSS(struct pt_regs *, long);
316:	void do_invalid_op(struct pt_regs *, long);
315:	void do_overflow(struct pt_regs *, long);
319:	void do_segment_not_present(struct pt_regs *, long);
890:	void do_simd_coprocessor_error(struct pt_regs *, long);
897:	void do_spurious_interrupt_bug(struct pt_regs *, long);
320:	void do_stack_segment(struct pt_regs *, long);
658:	struct bad_iret_stack *fixup_bad_iret(struct bad_iret_stack *);
173:	int fixup_bug(struct pt_regs *, int);
324:	void handle_stack_overflow(const char *, struct pt_regs *, unsigned long);
160:	int is_valid_bugaddr(unsigned long);
136:	void ist_begin_non_atomic(struct pt_regs *);
155:	void ist_end_non_atomic(void);
95:	void ist_enter(struct pt_regs *);
115:	void ist_exit(struct pt_regs *);
643:	struct pt_regs *sync_regs(struct pt_regs *);
958:	void trap_init(void);
285:	static void do_error_trap(struct pt_regs *, long, char *, unsigned long, int);
252:	static void do_trap(int, int, char *, struct pt_regs *, long, siginfo_t *);
839:	static void math_error(struct pt_regs *, int, int);

File arch/x86/kernel/tsc.c:
1500:	unsigned long calibrate_delay_is_known(void);
259:	int check_tsc_unstable(void);
1235:	struct system_counterval_t convert_art_ns_to_tsc(u64);
1197:	struct system_counterval_t convert_art_to_tsc(u64);
61:	void cyc2ns_read_begin(struct cyc2ns_data *);
78:	void cyc2ns_read_end(void);
1127:	void mark_tsc_unstable(char *);
840:	unsigned long native_calibrate_cpu_early(void);
610:	unsigned long native_calibrate_tsc(void);
210:	u64 native_sched_clock(void);
235:	u64 native_sched_clock_from_tsc(u64);
266:	int notsc_setup(char *);
868:	void recalibrate_cpu_khz(void);
243:	unsigned long long sched_clock(void);
1433:	void tsc_early_init(void);
1447:	void tsc_init(void);
908:	void tsc_restore_sched_clock_state(void);
892:	void tsc_save_sched_clock_state(void);
1166:	int unsynchronized_tsc(void);
248:	bool using_native_sched_clock(void);
122:	static void __set_cyc2ns_scale(unsigned long, int, unsigned long long);
989:	static int cpufreq_register_tsc_scaling(void);
1378:	static bool determine_cpu_tsc_frequencies(bool);
1342:	static int init_tsc_clocksource(void);
858:	static unsigned long native_calibrate_cpu(void);
688:	static unsigned long pit_hpet_ptimer_calibrate_cpu(void);
1064:	static u64 read_tsc(struct clocksource *);
160:	static void set_cyc2ns_scale(unsigned long, int, unsigned long long);
954:	static int time_cpufreq_notifier(struct notifier_block *, unsigned long, void *);
1069:	static void tsc_cs_mark_unstable(struct clocksource *);
1081:	static void tsc_cs_tick_stable(struct clocksource *);
1425:	static void tsc_enable_sched_clock(void);
306:	static u64 tsc_read_refs(u64 *, int);
1269:	static void tsc_refine_calibration_work(struct work_struct *);
1043:	static void tsc_resume(struct clocksource *);
287:	static int tsc_setup(char *);

File arch/x86/kernel/tsc_msr.c:
77:	unsigned long cpu_khz_from_msr(void);

File arch/x86/kernel/tsc_sync.c:
310:	void check_tsc_sync_source(int);
400:	void check_tsc_sync_target(void);
40:	void mark_tsc_async_resets(char *);
138:	bool tsc_store_and_check_tsc_adjust(bool);
48:	void tsc_verify_tsc_adjust(bool);
226:	static cycles_t check_tsc_warp(unsigned int);

File arch/x86/kernel/umip.c:
314:	bool fixup_umip_exception(struct pt_regs *);
272:	static void force_sig_info_umip_fault(void *, struct pt_regs *);
116:	static void umip_printk(const struct pt_regs *, const char *, const char *, ...);

File arch/x86/kernel/unwind_orc.c:
565:	void __unwind_start(struct unwind_state *, struct task_struct *, struct pt_regs *, unsigned long *);
297:	unsigned long unwind_get_return_address(struct unwind_state *);
306:	unsigned long *unwind_get_return_address_ptr(struct unwind_state *);
250:	void unwind_init(void);
222:	void unwind_module_init(struct module *, void *, size_t, void *, size_t);
372:	bool unwind_next_frame(struct unwind_state *);
29:	static struct orc_entry *__orc_find(int *, struct orc_entry *, unsigned int, unsigned long);
130:	static struct orc_entry *orc_find(unsigned long);
199:	static int orc_sort_cmp(const void *, const void *);
179:	static void orc_sort_swap(void *, void *, int);
320:	static bool stack_access_ok(struct unwind_state *, unsigned long, size_t);

File arch/x86/kernel/uprobes.c:
1044:	void arch_uprobe_abort_xol(struct arch_uprobe *, struct pt_regs *);
864:	int arch_uprobe_analyze_insn(struct arch_uprobe *, struct mm_struct *, unsigned long);
1011:	int arch_uprobe_exception_notify(struct notifier_block *, unsigned long, void *);
973:	int arch_uprobe_post_xol(struct arch_uprobe *, struct pt_regs *);
926:	int arch_uprobe_pre_xol(struct arch_uprobe *, struct pt_regs *);
1065:	bool arch_uprobe_skip_sstep(struct arch_uprobe *, struct pt_regs *);
958:	bool arch_uprobe_xol_was_trapped(struct task_struct *);
1074:	unsigned long arch_uretprobe_hijack_return_addr(unsigned long, struct pt_regs *);
1100:	bool arch_uretprobe_is_alive(struct return_instance *, enum rp_check, struct pt_regs *);
651:	static bool branch_emulate_op(struct arch_uprobe *, struct pt_regs *);
686:	static int branch_post_xol_op(struct arch_uprobe *, struct pt_regs *);
587:	static void default_abort_op(struct arch_uprobe *, struct pt_regs *);
567:	static int default_post_xol_op(struct arch_uprobe *, struct pt_regs *);
533:	static int default_pre_xol_op(struct arch_uprobe *, struct pt_regs *);
539:	static int emulate_push_stack(struct pt_regs *, unsigned long);
676:	static bool push_emulate_op(struct arch_uprobe *, struct pt_regs *);

File arch/x86/kernel/vsmp_64.c:
214:	void vsmp_init(void);
56:	void vsmp_irq_disable(void);
64:	void vsmp_irq_enable(void);
46:	void vsmp_restore_fl(unsigned long);
36:	unsigned long vsmp_save_fl(void);
203:	static int apicid_phys_pkg_id(int, int);
208:	static void vsmp_apic_post_init(void);
72:	static unsigned int vsmp_patch(u8, u16, void *, unsigned long, unsigned int);

File arch/x86/kernel/x86_init.c:
152:	void arch_restore_msi_irqs(struct pci_dev *);
137:	int arch_setup_msi_irqs(struct pci_dev *, int, int);
147:	void arch_teardown_msi_irq(unsigned int);
142:	void arch_teardown_msi_irqs(struct pci_dev *);
28:	void x86_init_noop(void);
29:	void x86_init_uint_noop(unsigned int);
32:	static bool bool_x86_init_noop(void);
30:	static int iommu_init_noop(void);
34:	static u64 u64_x86_init_noop(void);
33:	static void x86_op_int_noop(int);

File arch/x86/lib/cache-smp.c:
16:	int wbinvd_on_all_cpus(void);
10:	void wbinvd_on_cpu(int);
5:	static void __wbinvd(void *);

File arch/x86/lib/cmdline.c:
210:	int cmdline_find_option(const char *, const char *, char *, int);
205:	int cmdline_find_option_bool(const char *, const char *);

File arch/x86/lib/cpu.c:
5:	unsigned int x86_family(unsigned int);
18:	unsigned int x86_model(unsigned int);
33:	unsigned int x86_stepping(unsigned int);

File arch/x86/lib/csum-partial_64.c:
134:	__wsum csum_partial(const void *, int, __wsum);
145:	__sum16 ip_compute_csum(const void *, int);
35:	static unsigned int do_csum(const unsigned char *, unsigned int);

File arch/x86/lib/csum-wrappers_64.c:
137:	__sum16 csum_ipv6_magic(const struct in6_addr *, const struct in6_addr *, __u32, __u8, __wsum);
24:	__wsum csum_partial_copy_from_user(const void *, void *, int, __wsum, int *);
131:	__wsum csum_partial_copy_nocheck(const void *, void *, int, __wsum);
85:	__wsum csum_partial_copy_to_user(const void *, void *, int, __wsum, int *);

File arch/x86/lib/delay.c:
165:	void __const_udelay(unsigned long);
159:	void __delay(unsigned long);
185:	void __ndelay(unsigned long);
179:	void __udelay(unsigned long);
150:	int read_current_timer(unsigned long *);
145:	void use_mwaitx_delay(void);
139:	void use_tsc_delay(void);
31:	static void delay_loop(unsigned long);
93:	static void delay_mwaitx(unsigned long);
52:	static void delay_tsc(unsigned long);

File arch/x86/lib/inat.c:
79:	insn_attr_t inat_get_avx_attribute(insn_byte_t, insn_byte_t, insn_byte_t);
40:	insn_attr_t inat_get_escape_attribute(insn_byte_t, int, insn_attr_t);
59:	insn_attr_t inat_get_group_attribute(insn_byte_t, int, insn_attr_t);
32:	int inat_get_last_prefix_id(insn_byte_t);
27:	insn_attr_t inat_get_opcode_attribute(insn_byte_t);

File arch/x86/lib/insn-eval.c:
1354:	void *insn_get_addr_ref(struct insn *, struct pt_regs *);
746:	int insn_get_code_seg_params(struct pt_regs *);
805:	int insn_get_modrm_rm_off(struct insn *, struct pt_regs *);
631:	unsigned long insn_get_seg_base(struct pt_regs *, int);
571:	static bool get_desc(struct desc_struct *, unsigned short);
929:	static int get_eff_addr_modrm(struct insn *, struct pt_regs *, int *, long *);
881:	static int get_eff_addr_reg(struct insn *, struct pt_regs *, int *, long *);
1064:	static int get_eff_addr_sib(struct insn *, struct pt_regs *, int *, long *);
394:	static int get_reg_offset(enum reg_type, struct pt_regs *, struct insn *, struct insn *, struct insn *, struct insn *);
831:	static int get_seg_base_limit(struct insn *, struct pt_regs *, int, unsigned long *, unsigned long *);
318:	static short get_segment_selector(int, struct pt_regs *, struct pt_regs *);
37:	static bool is_string_insn(struct insn *);
156:	static int resolve_default_seg(struct insn *, struct pt_regs *, int);

File arch/x86/lib/insn.c:
357:	void insn_get_displacement(struct insn *);
528:	void insn_get_immediate(struct insn *);
598:	void insn_get_length(struct insn *);
266:	void insn_get_modrm(struct insn *);
213:	void insn_get_opcode(struct insn *);
82:	void insn_get_prefixes(struct insn *);
326:	void insn_get_sib(struct insn *);
53:	void insn_init(struct insn *, const void *, int, int);
304:	int insn_rip_relative(struct insn *);

File arch/x86/lib/kaslr.c:
49:	unsigned long kaslr_get_random_long(const char *);

File arch/x86/lib/misc.c:
7:	int num_digits(int);

File arch/x86/lib/msr-smp.c:
36:	int rdmsr_on_cpu(unsigned int, u32, u32 *, u32 *);
127:	void rdmsr_on_cpus(const struct cpumask *, u32, struct msr *);
169:	int rdmsr_safe_on_cpu(unsigned int, u32, u32 *, u32 *);
256:	int rdmsr_safe_regs_on_cpu(unsigned int, u32 *);
52:	int rdmsrl_on_cpu(unsigned int, u32, u64 *);
226:	int rdmsrl_safe_on_cpu(unsigned int, u32, u64 *);
67:	int wrmsr_on_cpu(unsigned int, u32, u32, u32);
141:	void wrmsr_on_cpus(const struct cpumask *, u32, struct msr *);
194:	int wrmsr_safe_on_cpu(unsigned int, u32, u32, u32);
269:	int wrmsr_safe_regs_on_cpu(unsigned int, u32 *);
83:	int wrmsrl_on_cpu(unsigned int, u32, u64);
210:	int wrmsrl_safe_on_cpu(unsigned int, u32, u64);
8:	static void __rdmsr_on_cpu(void *);
154:	static void __rdmsr_safe_on_cpu(void *);
242:	static void __rdmsr_safe_regs_on_cpu(void *);
99:	static void __rwmsr_on_cpus(const struct cpumask *, u32, struct msr *, void (*)(void *));
22:	static void __wrmsr_on_cpu(void *);
162:	static void __wrmsr_safe_on_cpu(void *);
249:	static void __wrmsr_safe_regs_on_cpu(void *);

File arch/x86/lib/msr.c:
131:	void do_trace_rdpmc(unsigned int, u64, int);
124:	void do_trace_read_msr(unsigned int, u64, int);
117:	void do_trace_write_msr(unsigned int, u64, int);
111:	int msr_clear_bit(u32, u8);
39:	int msr_read(u32, struct msr *);
98:	int msr_set_bit(u32, u8);
57:	int msr_write(u32, struct msr *);
9:	struct msr *msrs_alloc(void);
23:	void msrs_free(struct msr *);

File arch/x86/lib/usercopy.c:
17:	unsigned long copy_from_user_nmi(void *, const void *, unsigned long);

File arch/x86/lib/usercopy_64.c:
16:	unsigned long __clear_user(void *, unsigned long);
106:	long __copy_user_flushcache(void *, const void *, unsigned int);
100:	void arch_wb_cache_pmem(void *, size_t);
49:	unsigned long clear_user(void *, unsigned long);
63:	unsigned long mcsafe_handle_tail(char *, char *, unsigned int);
136:	void memcpy_flushcache(void *, const void *, size_t);
201:	void memcpy_page_flushcache(char *, struct page *, size_t, size_t);

File arch/x86/mm/../include/asm/trace/./exceptions.h:
14:	static void __bpf_trace_x86_exceptions(void *, unsigned long, struct pt_regs *, unsigned long);
14:	static void perf_trace_x86_exceptions(void *, unsigned long, struct pt_regs *, unsigned long);
14:	static int trace_event_define_fields_x86_exceptions(struct trace_event_call *);
14:	static void trace_event_raw_event_x86_exceptions(void *, unsigned long, struct pt_regs *, unsigned long);
14:	static enum print_line_t trace_raw_output_x86_exceptions(struct trace_iterator *, int, struct trace_event *);

File arch/x86/mm/amdtopology.c:
56:	int amd_numa_init(void);

File arch/x86/mm/cpu_entry_area.c:
165:	int arch_get_kallsym(unsigned int, unsigned long *, char *, char *);
30:	void cea_set_pte(void *, phys_addr_t, pgprot_t);
21:	struct cpu_entry_area *get_cpu_entry_area(int);
203:	void setup_cpu_entry_areas(void);
50:	static void cea_map_percpu_pages(void *, void *, int, pgprot_t);

File arch/x86/mm/extable.c:
211:	void early_fixup_exception(struct pt_regs *, int);
158:	bool ex_handler_clear_fs(const struct exception_table_entry *, struct pt_regs *, int);
24:	bool ex_handler_default(const struct exception_table_entry *, struct pt_regs *, int);
119:	bool ex_handler_ext(const struct exception_table_entry *, struct pt_regs *, int);
32:	bool ex_handler_fault(const struct exception_table_entry *, struct pt_regs *, int);
98:	bool ex_handler_fprestore(const struct exception_table_entry *, struct pt_regs *, int);
129:	bool ex_handler_rdmsr_unsafe(const struct exception_table_entry *, struct pt_regs *, int);
45:	bool ex_handler_refcount(const struct exception_table_entry *, struct pt_regs *, int);
111:	bool ex_handler_uaccess(const struct exception_table_entry *, struct pt_regs *, int);
144:	bool ex_handler_wrmsr_unsafe(const struct exception_table_entry *, struct pt_regs *, int);
168:	bool ex_has_fault_handler(unsigned long);
181:	int fixup_exception(struct pt_regs *, int);

File arch/x86/mm/fault.c:
1476:	void do_page_fault(struct pt_regs *, unsigned long);
415:	void vmalloc_sync_mappings(void);
424:	void vmalloc_sync_unmappings(void);
929:	static void __bad_area(struct pt_regs *, unsigned long, unsigned long, struct vm_area_struct *, int);
861:	static void __bad_area_nosemaphore(struct pt_regs *, unsigned long, unsigned long, u32 *, int);
1228:	static void __do_page_fault(struct pt_regs *, unsigned long, unsigned long);
949:	static void bad_area(struct pt_regs *, unsigned long, unsigned long);
972:	static void bad_area_access_error(struct pt_regs *, unsigned long, unsigned long, struct vm_area_struct *);
922:	static void bad_area_nosemaphore(struct pt_regs *, unsigned long, unsigned long, u32 *);
530:	static void dump_pagetable(unsigned long);
207:	static void force_sig_info_fault(int, int, unsigned long, struct task_struct *, u32 *, int);
123:	static int is_prefetch(struct pt_regs *, unsigned long, unsigned long);
1019:	static void mm_fault_error(struct pt_regs *, unsigned long, unsigned long, u32 *, vm_fault_t);
721:	static void no_context(struct pt_regs *, unsigned long, unsigned long, int, int);
695:	static void pgtable_bad(struct pt_regs *, unsigned long, unsigned long);
1091:	static int spurious_fault(unsigned long, unsigned long);
1052:	static int spurious_fault_check(unsigned long, pte_t *);
437:	static int vmalloc_fault(unsigned long);

File arch/x86/mm/hugetlbpage.c:
144:	unsigned long hugetlb_get_unmapped_area(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);
67:	int pmd_huge(pmd_t);
73:	int pud_huge(pud_t);
207:	static int gigantic_pages_init(void);
189:	static int setup_hugepagesz(char *);

File arch/x86/mm/ident_map.c:
89:	int kernel_ident_mapping_init(struct x86_mapping_info *, pgd_t *, unsigned long, unsigned long);
61:	static int ident_p4d_init(struct x86_mapping_info *, p4d_t *, unsigned long, unsigned long);
7:	static void ident_pmd_init(pmd_t *, unsigned long, unsigned long, struct x86_mapping_info *, struct x86_mapping_info *);
21:	static int ident_pud_init(struct x86_mapping_info *, pud_t *, unsigned long, unsigned long);

File arch/x86/mm/init.c:
90:	void *alloc_low_pages(unsigned int);
717:	int devmem_is_allowed(unsigned long);
150:	void early_alloc_pgt_buf(void);
747:	void free_init_pages(char *, unsigned long, unsigned long);
826:	void free_initmem(void);
836:	void free_initrd_mem(unsigned long, unsigned long);
796:	void free_kernel_image_pages(void *, void *);
648:	void init_mem_mapping(void);
468:	unsigned long init_memory_mapping(unsigned long, unsigned long);
935:	unsigned long max_swapfile_size(void);
824:	void mem_encrypt_free_decrypted_mem(void);
859:	void memblock_find_dma_reserve(void);
451:	bool pfn_range_is_mapped(unsigned long, unsigned long);
925:	void update_cache_mode_entry(unsigned int, enum page_cache_mode);
898:	void zone_sizes_init(void);
149:	static void __brk_reservation_fn_early_pgt_alloc__(void);
280:	static void adjust_range_page_size_mask(struct map_range *, int);
503:	static unsigned long init_range_memory_mapping(unsigned long, unsigned long);
614:	static void memory_map_bottom_up(unsigned long, unsigned long);
164:	static int parse_direct_gbpages_off(char *);
164:	static int parse_direct_gbpages_on(char *);
260:	static int save_mr(struct map_range *, int, unsigned long, unsigned long, unsigned long);

File arch/x86/mm/init_64.c:
780:	int add_pages(int, unsigned long, unsigned long, struct vmem_altmap *, bool);
795:	int arch_add_memory(int, u64, u64, struct vmem_altmap *, bool);
1144:	void arch_remove_memory(int, u64, u64, struct vmem_altmap *);
389:	void cleanup_highmap(void);
371:	void init_extra_mapping_uc(unsigned long, unsigned long);
366:	void init_extra_mapping_wb(unsigned long, unsigned long);
1275:	int kern_addr_valid(unsigned long);
691:	unsigned long kernel_physical_mapping_init(unsigned long, unsigned long, unsigned long);
1231:	void mark_rodata_ro(void);
1167:	void mem_init(void);
1367:	unsigned long memory_block_size_bytes(void);
743:	void paging_init(void);
306:	pmd_t *populate_extra_pmd(unsigned long);
318:	pte_t *populate_extra_pte(unsigned long);
1467:	void register_page_bootmem_memmap(unsigned long, struct page *, unsigned long);
1214:	void set_kernel_text_ro(void);
1195:	void set_kernel_text_rw(void);
1328:	int set_memory_block_size_order(unsigned int);
288:	void set_pte_vaddr(unsigned long, pte_t);
273:	void set_pte_vaddr_p4d(p4d_t *, unsigned long, pte_t);
281:	void set_pte_vaddr_pud(pud_t *, unsigned long, pte_t);
181:	void sync_global_pgds(unsigned long, unsigned long);
1129:	void vmemmap_free(unsigned long, unsigned long, struct vmem_altmap *);
1448:	int vmemmap_populate(unsigned long, unsigned long, int, struct vmem_altmap *);
1534:	void vmemmap_populate_print_last(void);
329:	static void __init_extra_mapping(unsigned long, unsigned long, enum page_cache_mode);
259:	static void __set_pte_vaddr(pud_t *, unsigned long, pte_t);
236:	static pmd_t *fill_pmd(pud_t *, unsigned long);
248:	static pte_t *fill_pte(pmd_t *, unsigned long);
224:	static pud_t *fill_pud(p4d_t *, unsigned long);
808:	static void free_pagetable(struct page *, int);
86:	static int nonx32_setup(char *);
637:	static unsigned long phys_p4d_init(p4d_t *, unsigned long, unsigned long, unsigned long);
471:	static unsigned long phys_pmd_init(pmd_t *, unsigned long, unsigned long, unsigned long, pgprot_t);
417:	static unsigned long phys_pte_init(pte_t *, unsigned long, unsigned long, pgprot_t);
554:	static unsigned long phys_pud_init(pud_t *, unsigned long, unsigned long, unsigned long);
1107:	static void remove_pagetable(unsigned long, unsigned long, bool, struct vmem_altmap *);
1019:	static void remove_pud_table(pud_t *, unsigned long, unsigned long, struct vmem_altmap *, bool);
193:	static void *spp_getpage(void);

File arch/x86/mm/ioremap.c:
814:	void __early_set_fixmap(enum fixed_addresses, phys_addr_t, pgprot_t);
651:	bool arch_memremap_can_ram_remap(resource_size_t, unsigned long, unsigned long);
435:	bool arch_vmap_p4d_supported(pgprot_t);
449:	bool arch_vmap_pmd_supported(pgprot_t);
440:	bool arch_vmap_pud_supported(pgprot_t);
775:	void early_ioremap_init(void);
730:	void *early_memremap_decrypted(resource_size_t, unsigned long);
740:	void *early_memremap_decrypted_wp(resource_size_t, unsigned long);
709:	void *early_memremap_encrypted(resource_size_t, unsigned long);
719:	void *early_memremap_encrypted_wp(resource_size_t, unsigned long);
678:	pgprot_t early_memremap_pgprot_adjust(resource_size_t, unsigned long, pgprot_t);
365:	void *ioremap_cache(resource_size_t, unsigned long);
39:	int ioremap_change_attr(unsigned long, unsigned long, enum page_cache_mode);
281:	void *ioremap_nocache(resource_size_t, unsigned long);
372:	void *ioremap_prot(resource_size_t, unsigned long, unsigned long);
322:	void *ioremap_uc(resource_size_t, unsigned long);
341:	void *ioremap_wc(resource_size_t, unsigned long);
358:	void *ioremap_wt(resource_size_t, unsigned long);
387:	void iounmap(volatile void *);
770:	bool is_early_ioremap_ptep(pte_t *);
702:	bool phys_mem_access_encrypted(unsigned long, unsigned long);
475:	void unxlate_dev_mem_ptr(phys_addr_t, void *);
459:	void *xlate_dev_mem_ptr(phys_addr_t);
133:	static void *__ioremap_caller(resource_size_t, unsigned long, enum page_cache_mode, void *);
89:	static int __ioremap_res_check(struct resource *, void *);
753:	static pmd_t *early_ioremap_pmd(unsigned long);
544:	static bool memremap_is_efi_data(resource_size_t, unsigned long);
491:	static bool memremap_should_map_decrypted(resource_size_t, unsigned long);

File arch/x86/mm/kaslr.c:
216:	void init_trampoline(void);
73:	void kernel_randomize_memory(void);

File arch/x86/mm/mem_encrypt.c:
316:	int early_set_memory_decrypted(unsigned long, unsigned long);
321:	int early_set_memory_encrypted(unsigned long, unsigned long);
351:	void mem_encrypt_free_decrypted_mem(void);
375:	void mem_encrypt_init(void);
344:	bool sev_active(void);
338:	bool sme_active(void);
113:	void sme_early_decrypt(resource_size_t, unsigned long);
108:	void sme_early_encrypt(resource_size_t, unsigned long);
179:	void sme_early_init(void);
159:	void sme_map_bootdata(char *);
139:	void sme_unmap_bootdata(char *);
198:	static void __set_clr_pte_enc(pte_t *, int, bool);
58:	static void __sme_early_enc_dec(resource_size_t, unsigned long, bool);
118:	static void __sme_early_map_unmap_mem(void *, unsigned long, bool);
252:	static int early_set_memory_enc_dec(unsigned long, unsigned long, bool);

File arch/x86/mm/mem_encrypt_identity.c:
471:	void sme_enable(struct boot_params *);
269:	void sme_encrypt_kernel(struct boot_params *);
193:	static void __sme_map_range(struct sme_populate_pgd_data *, pmdval_t, pteval_t);
79:	static void sme_clear_pgd(struct sme_populate_pgd_data *);
232:	static unsigned long sme_pgtable_calc(unsigned long);
147:	static void sme_populate_pgd(struct sme_populate_pgd_data *);
94:	static pud_t *sme_prepare_pgd(struct sme_populate_pgd_data *);

File arch/x86/mm/mmap.c:
88:	unsigned long arch_mmap_rnd(void);
140:	void arch_pick_mmap_layout(struct mm_struct *, struct rlimit *);
177:	const char *arch_vma_name(struct vm_area_struct *);
164:	unsigned long get_mmap_base(int);
222:	bool mmap_address_hint_valid(unsigned long, unsigned long);
251:	bool pfn_modify_allowed(unsigned long, pgprot_t);
42:	unsigned long task_size_32bit(void);
47:	unsigned long task_size_64bit(int);
237:	int valid_mmap_phys_addr_range(unsigned long, size_t);
231:	int valid_phys_addr_range(phys_addr_t, size_t);
93:	static unsigned long mmap_base(unsigned long, unsigned long, struct rlimit *);

File arch/x86/mm/numa.c:
428:	int __node_distance(int, int);
754:	void init_cpu_to_node(void);
889:	int memory_add_physaddr_to_nid(u64);
182:	int numa_add_memblk(int, u64, u64);
234:	int numa_cleanup_meminfo(struct numa_meminfo *);
102:	void numa_clear_node(int);
62:	int numa_cpu_node(int);
164:	void numa_remove_memblk_from(int, struct numa_meminfo *);
337:	void numa_reset_distance(void);
406:	void numa_set_distance(int, int, int);
80:	void numa_set_node(int, int);
114:	void setup_node_to_cpumask_map(void);
709:	void x86_numa_init(void);
188:	static void alloc_node_data(int);
689:	static int dummy_numa_init(void);
348:	static int numa_alloc_distance(void);
471:	static void numa_clear_kernel_node_hotplug(void);
623:	static int numa_init(int (*)(void));
320:	static void numa_nodemask_from_meminfo(nodemask_t *, const struct numa_meminfo *);
37:	static int numa_setup(char *);

File arch/x86/mm/numa_64.c:
10:	void initmem_init(void);

File arch/x86/mm/numa_emulation.c:
532:	void numa_add_cpu(int);
17:	void numa_emu_cmdline(char *);
371:	void numa_emulation(struct numa_meminfo *, int);
550:	void numa_remove_cpu(int);
328:	int setup_emu2phys_nid(int *);
46:	static int emu_setup_memblk(int, int, u64, struct numa_meminfo *, struct numa_meminfo *);
32:	static u64 mem_hole_size(u64, u64);
83:	static int split_nodes_interleave(u64, int, u64, struct numa_meminfo *, struct numa_meminfo *);
216:	static int split_nodes_size_interleave_uniform(u64, u64, u64, int, struct numa_memblk *, int, struct numa_meminfo *, struct numa_meminfo *);

File arch/x86/mm/pageattr.c:
1578:	int _set_memory_uc(unsigned long, int);
1731:	int _set_memory_wb(unsigned long, int);
1673:	int _set_memory_wc(unsigned long, int);
1708:	int _set_memory_wt(unsigned long, int);
171:	void arch_invalidate_pmem(void *, size_t);
78:	void arch_report_meminfo(struct seq_file *);
153:	void clflush_cache_range(void *, unsigned int);
2118:	int kernel_map_pages_in_pgd(pgd_t *, u64, unsigned long, unsigned int, unsigned long);
422:	pte_t *lookup_address(unsigned long, unsigned int *);
373:	pte_t *lookup_address_in_pgd(pgd_t *, unsigned long, unsigned int *);
442:	pmd_t *lookup_pmd_address(unsigned long);
1811:	int set_memory_4k(unsigned long, int);
1655:	int set_memory_array_uc(unsigned long *, int);
1751:	int set_memory_array_wb(unsigned long *, int);
1661:	int set_memory_array_wc(unsigned long *, int);
1667:	int set_memory_array_wt(unsigned long *, int);
1887:	int set_memory_decrypted(unsigned long, int);
1881:	int set_memory_encrypted(unsigned long, int);
1823:	int set_memory_global(unsigned long, int);
1817:	int set_memory_nonglobal(unsigned long, int);
1797:	int set_memory_np(unsigned long, int);
1802:	int set_memory_np_noalias(unsigned long, int);
1778:	int set_memory_nx(unsigned long, int);
1787:	int set_memory_ro(unsigned long, int);
1792:	int set_memory_rw(unsigned long, int);
1591:	int set_memory_uc(unsigned long, int);
1738:	int set_memory_wb(unsigned long, int);
1691:	int set_memory_wc(unsigned long, int);
1714:	int set_memory_wt(unsigned long, int);
1769:	int set_memory_x(unsigned long, int);
1947:	int set_pages_array_uc(struct page **, int);
1973:	int set_pages_array_wb(struct page **, int);
1953:	int set_pages_array_wc(struct page **, int);
1959:	int set_pages_array_wt(struct page **, int);
2006:	int set_pages_nx(struct page *, int);
2014:	int set_pages_ro(struct page *, int);
2021:	int set_pages_rw(struct page *, int);
1893:	int set_pages_uc(struct page *, int);
1965:	int set_pages_wb(struct page *, int);
1998:	int set_pages_x(struct page *, int);
474:	phys_addr_t slow_virt_to_phys(void *);
61:	void update_page_count(int, unsigned long);
1217:	static int __change_page_attr(struct cpa_data *, int);
1378:	static int __change_page_attr_set_clr(struct cpa_data *, int);
177:	static void __cpa_flush_all(void *);
198:	static void __cpa_flush_range(void *);
1172:	static int __cpa_process_fault(struct cpa_data *, unsigned long, int);
1829:	static int __set_memory_enc_dec(unsigned long, int, bool);
833:	static void __unmap_pmd_range(pud_t *, unsigned long, unsigned long, pmd_t *);
428:	static pte_t *_lookup_address_cpa(unsigned long, unsigned int *, struct cpa_data *);
1616:	static int _set_memory_array(unsigned long *, int, enum page_cache_mode);
1901:	static int _set_pages_array(struct page **, int, enum page_cache_mode);
938:	static int alloc_pmd_page(pud_t *);
928:	static int alloc_pte_page(pmd_t *);
1446:	static int change_page_attr_set_clr(unsigned long *, int, pgprot_t, pgprot_t, int, int, struct page **);
191:	static void cpa_flush_all(unsigned long);
208:	static void cpa_flush_range(unsigned long, int, int);
1123:	static int populate_pgd(struct cpa_data *, unsigned long);
967:	static long populate_pmd(struct cpa_data *, unsigned long, unsigned long, unsigned int, pud_t *, pgprot_t);
948:	static void populate_pte(unsigned long, unsigned long, unsigned int, pmd_t *, pgprot_t, struct cpa_data *);
803:	static bool try_to_free_pmd_page(pmd_t *);
841:	static void unmap_pmd_range(pud_t *, unsigned long, unsigned long);
815:	static bool unmap_pte_range(pmd_t *, unsigned long, unsigned long);

File arch/x86/mm/pat.c:
782:	void arch_io_free_memtype_wc(resource_size_t, resource_size_t);
774:	int arch_io_reserve_memtype_wc(resource_size_t, resource_size_t);
625:	int free_memtype(u64, u64);
246:	void init_cache_modes(void);
769:	void io_free_memtype(resource_size_t, resource_size_t);
734:	int io_reserve_memtype(resource_size_t, resource_size_t, enum page_cache_mode *);
844:	int kernel_map_sync_memtype(u64, unsigned long, enum page_cache_mode);
45:	void pat_disable(const char *);
66:	bool pat_enabled(void);
302:	void pat_init(void);
714:	bool pat_pfn_immune_to_uc_mtrr(unsigned long);
1085:	pgprot_t pgprot_writecombine(pgprot_t);
1092:	pgprot_t pgprot_writethrough(pgprot_t);
788:	pgprot_t phys_mem_access_prot(struct file *, unsigned long, unsigned long, pgprot_t);
824:	int phys_mem_access_prot_allowed(struct file *, unsigned long, unsigned long, pgprot_t *);
544:	int reserve_memtype(u64, u64, enum page_cache_mode, enum page_cache_mode *);
964:	int track_pfn_copy(struct vm_area_struct *);
1033:	void track_pfn_insert(struct vm_area_struct *, pgprot_t *, pfn_t);
993:	int track_pfn_remap(struct vm_area_struct *, pgprot_t *, unsigned long, unsigned long, unsigned long);
1051:	void untrack_pfn(struct vm_area_struct *, unsigned long, unsigned long);
1080:	void untrack_pfn_moved(struct vm_area_struct *);
193:	static void __init_cache_modes(u64);
678:	static enum page_cache_mode lookup_memtype(u64);
1101:	static struct memtype *memtype_get_idx(loff_t);
1132:	static void *memtype_seq_next(struct seq_file *, void *, loff_t *);
1161:	static int memtype_seq_open(struct inode *, struct file *);
1144:	static int memtype_seq_show(struct seq_file *, void *);
1122:	static void *memtype_seq_start(struct seq_file *, loff_t *);
1139:	static void memtype_seq_stop(struct seq_file *, void *);
59:	static int nopat(char *);
412:	static int pagerange_is_ram_callback(unsigned long, unsigned long, void *);
74:	static int pat_debug_setup(char *);
1173:	static int pat_memtype_list_init(void);
423:	static int pat_pagerange_is_ram(resource_size_t, resource_size_t);
878:	static int reserve_pfn_range(u64, unsigned long, pgprot_t *, int);

File arch/x86/mm/pat_rbtree.c:
201:	int rbt_memtype_check_insert(struct memtype *, enum page_cache_mode *);
262:	int rbt_memtype_copy_nth_element(struct memtype *, loff_t);
219:	struct memtype *rbt_memtype_erase(u64, u64);
256:	struct memtype *rbt_memtype_lookup(u64);
72:	static void memtype_rb_augment_cb_rotate(struct rb_node *, struct rb_node *);
179:	static void memtype_rb_insert(struct memtype *, struct rb_root *);
106:	static struct memtype *memtype_rb_match(u64, u64, int, struct rb_root *);

File arch/x86/mm/pgtable.c:
93:	void ___p4d_free_tlb(struct mmu_gather *, p4d_t *);
70:	void ___pmd_free_tlb(struct mmu_gather *, pmd_t *);
62:	void ___pte_free_tlb(struct mmu_gather *, struct page *);
86:	void ___pud_free_tlb(struct mmu_gather *, pud_t *);
642:	void __native_set_fixmap(enum fixed_addresses, pte_t);
663:	void native_set_fixmap(unsigned int, phys_addr_t, pgprot_t);
689:	int p4d_clear_huge(p4d_t *);
800:	int p4d_free_pud_page(p4d_t *, unsigned long);
679:	int p4d_set_huge(p4d_t *, phys_addr_t, pgprot_t);
434:	pgd_t *pgd_alloc(struct mm_struct *);
481:	void pgd_free(struct mm_struct *, pgd_t *);
127:	struct mm_struct *pgd_page_get_mm(struct page *);
787:	int pmd_clear_huge(pmd_t *);
862:	int pmd_free_pte_page(pmd_t *, unsigned long);
742:	int pmd_set_huge(pmd_t *, phys_addr_t, pgprot_t);
608:	int pmdp_clear_flush_young(struct vm_area_struct *, unsigned long, pmd_t *);
509:	int pmdp_set_access_flags(struct vm_area_struct *, unsigned long, pmd_t *, pmd_t, int);
564:	int pmdp_test_and_clear_young(struct vm_area_struct *, unsigned long, pmd_t *);
31:	pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);
26:	pte_t *pte_alloc_one_kernel(struct mm_struct *, unsigned long);
588:	int ptep_clear_flush_young(struct vm_area_struct *, unsigned long, pte_t *);
496:	int ptep_set_access_flags(struct vm_area_struct *, unsigned long, pte_t *, pte_t, int);
551:	int ptep_test_and_clear_young(struct vm_area_struct *, unsigned long, pte_t *);
772:	int pud_clear_huge(pud_t *);
816:	int pud_free_pmd_page(pud_t *, unsigned long);
713:	int pud_set_huge(pud_t *, phys_addr_t, pgprot_t);
530:	int pudp_set_access_flags(struct vm_area_struct *, unsigned long, pud_t *, pud_t, int);
575:	int pudp_test_and_clear_young(struct vm_area_struct *, unsigned long, pud_t *);
630:	void reserve_top_address(unsigned long);
222:	static void free_pmds(struct mm_struct *, pmd_t **, int);
234:	static int preallocate_pmds(struct mm_struct *, pmd_t **, int);
45:	static int setup_userpte(char *);

File arch/x86/mm/physaddr.c:
46:	bool __virt_addr_valid(unsigned long);

File arch/x86/mm/pkeys.c:
89:	int __arch_override_mprotect_pkey(struct vm_area_struct *, int, int);
22:	int __execute_only_pkey(struct mm_struct *);
146:	void copy_init_pkru_to_fpregs(void);
207:	static int create_init_pkru_value(void);
163:	static ssize_t init_pkru_read_file(struct file *, char *, size_t, loff_t *);
173:	static ssize_t init_pkru_write_file(struct file *, const char *, size_t, loff_t *);
215:	static int setup_init_pkru(char *);

File arch/x86/mm/pti.c:
133:	pgd_t __pti_set_user_pgtbl(pgd_t *, pgd_t);
87:	void pti_check_boottime_disable(void);
646:	void pti_finalize(void);
600:	void pti_init(void);
578:	void pti_set_kernel_image_nonglobal(void);
426:	static void pti_clone_p4d(unsigned long);
312:	static void pti_clone_pgtable(unsigned long, unsigned long, enum pti_clone_level);
69:	static void pti_print_if_insecure(const char *);
180:	static p4d_t *pti_user_pagetable_walk_p4d(unsigned long);
208:	static pmd_t *pti_user_pagetable_walk_pmd(unsigned long);

File arch/x86/mm/setup_nx.c:
34:	void x86_configure_nx(void);
42:	void x86_report_nx(void);
20:	static int noexec_setup(char *);

File arch/x86/mm/srat.c:
67:	void acpi_numa_processor_affinity_init(struct acpi_srat_cpu_affinity *);
28:	void acpi_numa_x2apic_affinity_init(struct acpi_srat_x2apic_cpu_affinity *);
106:	int x86_acpi_numa_init(void);

File arch/x86/mm/tlb.c:
768:	void arch_tlbbatch_flush(struct arch_tlbflush_unmap_batch *);
433:	void enter_lazy_tlb(struct mm_struct *, struct task_struct *);
737:	void flush_tlb_all(void);
753:	void flush_tlb_kernel_range(unsigned long, unsigned long);
692:	void flush_tlb_mm_range(struct mm_struct *, unsigned long, unsigned long, unsigned long);
467:	void initialize_tlbstate_and_flush(void);
129:	void leave_mm(int);
641:	void native_flush_tlb_others(const struct cpumask *, const struct flush_tlb_info *);
151:	void switch_mm(struct mm_struct *, struct mm_struct *, struct task_struct *);
272:	void switch_mm_irqs_off(struct mm_struct *, struct mm_struct *, struct task_struct *);
831:	static int create_tlb_single_page_flush_ceiling(void);
731:	static void do_flush_tlb_all(void *);
743:	static void do_kernel_range_flush(void *);
506:	static void flush_tlb_func_common(const struct flush_tlb_info *, enum tlb_flush_reason, bool);
628:	static void flush_tlb_func_remote(void *);
110:	static void load_new_mm_cr3(pgd_t *, u16, bool);
793:	static ssize_t tlbflush_read_file(struct file *, char *, size_t, loff_t *);
803:	static ssize_t tlbflush_write_file(struct file *, const char *, size_t, loff_t *);

File arch/x86/net/bpf_jit_comp.c:
1047:	struct bpf_prog *bpf_int_jit_compile(struct bpf_prog *);
384:	static int do_jit(struct bpf_prog *, int *, u8 *, int, struct jit_context *);
301:	static void emit_mov_imm32(u8 **, bool, u32, const u32);
366:	static void emit_mov_reg(u8 **, bool, u32, u32);
179:	static void jit_fill_hole(void *, unsigned int);

File arch/x86/pci/acpi.c:
141:	void pci_acpi_crs_quirks(void);
400:	int pci_acpi_init(void);
326:	struct pci_bus *pci_acpi_scan_root(struct acpi_pci_root *);
385:	int pcibios_root_bridge_prepare(struct pci_host_bridge *);
263:	static int pci_acpi_root_init_info(struct acpi_pci_root_info *);
294:	static int pci_acpi_root_prepare_resources(struct acpi_pci_root_info *);
268:	static void pci_acpi_root_release_info(struct acpi_pci_root_info *);
37:	static int set_ignore_seg(const struct dmi_system_id *);
31:	static int set_nouse_crs(const struct dmi_system_id *);
25:	static int set_use_crs(const struct dmi_system_id *);

File arch/x86/pci/amd_bus.c:
332:	static int amd_bus_cpu_online(unsigned int);
392:	static int amd_postcore_init(void);
60:	static int early_root_info_init(void);
42:	static struct pci_root_info *find_pci_root_info(int, int);

File arch/x86/pci/bus_numa.c:
70:	struct pci_root_info *alloc_pci_root_info(int, int, int, int);
95:	void update_res(struct pci_root_info *, resource_size_t, resource_size_t, unsigned long, int);
21:	int x86_pci_root_bus_node(int);
31:	void x86_pci_root_bus_resources(int, struct list_head *);

File arch/x86/pci/common.c:
631:	void add_dma_domain(struct dma_domain *);
639:	void del_dma_domain(struct dma_domain *);
451:	void dmi_check_pciprobe(void);
120:	void dmi_check_skip_isa_align(void);
731:	int pci_ext_cfg_avail(void);
171:	void pcibios_add_bus(struct pci_bus *);
670:	int pcibios_add_device(struct pci_dev *);
622:	unsigned int pcibios_assign_all_busses(void);
716:	void pcibios_disable_device(struct pci_dev *);
704:	int pcibios_enable_device(struct pci_dev *, int);
162:	void pcibios_fixup_bus(struct pci_bus *);
499:	int pcibios_init(void);
723:	void pcibios_release_device(struct pci_dev *);
176:	void pcibios_remove_bus(struct pci_bus *);
456:	void pcibios_scan_root(int);
479:	void pcibios_set_cache_line_size(void);
514:	char *pcibios_setup(char *);
38:	int raw_pci_read(unsigned int, unsigned int, unsigned int, int, int, u32 *);
48:	int raw_pci_write(unsigned int, unsigned int, unsigned int, int, int, u32);
81:	static int can_skip_ioresource_align(const struct dmi_system_id *);
206:	static int find_sort_method(const struct dmi_system_id *);
58:	static int pci_read(struct pci_bus *, unsigned int, int, int, u32 *);
64:	static int pci_write(struct pci_bus *, unsigned int, int, int, u32);
195:	static void read_dmi_type_b1(const struct dmi_header *, void *);
186:	static int set_bf_sort(const struct dmi_system_id *);
225:	static int set_scan_all(const struct dmi_system_id *);

File arch/x86/pci/direct.c:
263:	void pci_direct_init(int);
283:	int pci_direct_probe(void);
21:	static int pci_conf1_read(unsigned int, unsigned int, unsigned int, int, int, u32 *);
52:	static int pci_conf1_write(unsigned int, unsigned int, unsigned int, int, int, u32);
95:	static int pci_conf2_read(unsigned int, unsigned int, unsigned int, int, int, u32 *);
137:	static int pci_conf2_write(unsigned int, unsigned int, unsigned int, int, int, u32);
195:	static int pci_sanity_check(const struct pci_raw_ops *);

File arch/x86/pci/early.c:
54:	int early_pci_allowed(void);
11:	u32 read_pci_config(u8, u8, u8, u8);
27:	u16 read_pci_config_16(u8, u8, u8, u8);
19:	u8 read_pci_config_byte(u8, u8, u8, u8);
35:	void write_pci_config(u8, u8, u8, u8, u32);
48:	void write_pci_config_16(u8, u8, u8, u8, u16);
42:	void write_pci_config_byte(u8, u8, u8, u8, u8);

File arch/x86/pci/fixup.c:
688:	static void pci_amd_enable_64bit_bar(struct pci_dev *);
474:	static void pci_early_fixup_cyrix_5530(struct pci_dev *);
583:	static void pci_fixup_amd_ehci_pme(struct pci_dev *);
595:	static void pci_fixup_amd_fch_xhci_pme(struct pci_dev *);
38:	static void pci_fixup_i450gx(struct pci_dev *);
13:	static void pci_fixup_i450nx(struct pci_dev *);
66:	static void pci_fixup_latency(struct pci_dev *);
381:	static void pci_fixup_msi_k8t_onboard_sound(struct pci_dev *);
174:	static void pci_fixup_nforce2(struct pci_dev *);
78:	static void pci_fixup_piix4_acpi(struct pci_dev *);
154:	static void pci_fixup_transparent_bridge(struct pci_dev *);
52:	static void pci_fixup_umc_ide(struct pci_dev *);
107:	static void pci_fixup_via_northbridge_bug(struct pci_dev *);
311:	static void pci_fixup_video(struct pci_dev *);
567:	static void pci_invalid_bar(struct pci_dev *);
453:	static void pci_post_fixup_toshiba_ohci1394(struct pci_dev *);
442:	static void pci_pre_fixup_toshiba_ohci1394(struct pci_dev *);
491:	static void pci_siemens_interrupt_controller(struct pci_dev *);
241:	static void pcie_rootport_aspm_quirk(struct pci_dev *);
615:	static void quirk_apple_mbp_poweroff(struct pci_dev *);
649:	static void quirk_intel_th_dnv(struct pci_dev *);
640:	static void quirk_no_aersid(struct pci_dev *);
205:	static int quirk_pcie_aspm_read(struct pci_bus *, unsigned int, int, int, u32 *);
215:	static int quirk_pcie_aspm_write(struct pci_bus *, unsigned int, int, int, u32);
502:	static void sb600_disable_hpet_bar(struct pci_dev *);
527:	static void sb600_hpet_quirk(struct pci_dev *);
547:	static void twinhead_reserve_killing_zone(struct pci_dev *);

File arch/x86/pci/i386.c:
155:	resource_size_t pcibios_align_resource(void *, const struct resource *, resource_size_t, resource_size_t);
388:	void pcibios_resource_survey(void);
375:	void pcibios_resource_survey_bus(struct pci_bus *);
99:	resource_size_t pcibios_retrieve_fw_addr(struct pci_dev *, int);
233:	static void pcibios_allocate_bus_resources(struct pci_bus *);
307:	static void pcibios_allocate_resources(struct pci_bus *, int);
341:	static void pcibios_allocate_rom_resources(struct pci_bus *);
355:	static int pcibios_assign_resources(void);
58:	static struct pcibios_fwaddrmap *pcibios_fwaddrmap_lookup(struct pci_dev *);

File arch/x86/pci/init.c:
9:	static int pci_arch_init(void);

File arch/x86/pci/irq.c:
153:	void elcr_set_level_irq(unsigned int);
1268:	bool mp_should_keep_irq(struct device *);
1026:	void pcibios_fixup_irqs(void);
1120:	void pcibios_irq_init(void);
1187:	void pcibios_penalize_isa_irq(int, int);
745:	static int ali_router_probe(struct irq_router *, struct pci_dev *, u16);
758:	static int amd_router_probe(struct irq_router *, struct pci_dev *, u16);
709:	static int cyrix_router_probe(struct irq_router *, struct pci_dev *, u16);
1087:	static int fix_acer_tm360_irqrouting(const struct dmi_system_id *);
1073:	static int fix_broken_hp_bios_irq9(const struct dmi_system_id *);
539:	static int intel_router_probe(struct irq_router *, struct pci_dev *, u16);
733:	static int ite_router_probe(struct irq_router *, struct pci_dev *, u16);
721:	static int opti_router_probe(struct irq_router *, struct pci_dev *, u16);
881:	static int pcibios_lookup_irq(struct pci_dev *, int);
778:	static int pico_router_probe(struct irq_router *, struct pci_dev *, u16);
201:	static int pirq_ali_get(struct pci_dev *, struct pci_dev *, int);
209:	static int pirq_ali_set(struct pci_dev *, struct pci_dev *, int, int);
486:	static int pirq_amd756_get(struct pci_dev *, struct pci_dev *, int);
498:	static int pirq_amd756_set(struct pci_dev *, struct pci_dev *, int, int);
65:	static struct irq_routing_table *pirq_check_routing_table(u8 *);
320:	static int pirq_cyrix_get(struct pci_dev *, struct pci_dev *, int);
325:	static int pirq_cyrix_set(struct pci_dev *, struct pci_dev *, int, int);
1280:	static void pirq_disable_irq(struct pci_dev *);
1197:	static int pirq_enable_irq(struct pci_dev *);
867:	static struct irq_info *pirq_get_info(struct pci_dev *, struct pci_dev *);
283:	static int pirq_ite_get(struct pci_dev *, struct pci_dev *, int);
291:	static int pirq_ite_set(struct pci_dev *, struct pci_dev *, int, int);
304:	static int pirq_opti_get(struct pci_dev *, struct pci_dev *, int);
309:	static int pirq_opti_set(struct pci_dev *, struct pci_dev *, int, int);
119:	static void pirq_peer_trick(void);
511:	static int pirq_pico_get(struct pci_dev *, struct pci_dev *, int);
517:	static int pirq_pico_set(struct pci_dev *, struct pci_dev *, int, int);
226:	static int pirq_piix_get(struct pci_dev *, struct pci_dev *, int);
234:	static int pirq_piix_set(struct pci_dev *, struct pci_dev *, int, int);
464:	static int pirq_serverworks_get(struct pci_dev *, struct pci_dev *, int);
470:	static int pirq_serverworks_set(struct pci_dev *, struct pci_dev *, int, int);
396:	static int pirq_sis_get(struct pci_dev *, struct pci_dev *, int);
408:	static int pirq_sis_set(struct pci_dev *, struct pci_dev *, int, int);
261:	static int pirq_via586_get(struct pci_dev *, struct pci_dev *, int);
269:	static int pirq_via586_set(struct pci_dev *, struct pci_dev *, int, int);
245:	static int pirq_via_get(struct pci_dev *, struct pci_dev *, int);
250:	static int pirq_via_set(struct pci_dev *, struct pci_dev *, int, int);
432:	static int pirq_vlsi_get(struct pci_dev *, struct pci_dev *, int);
442:	static int pirq_vlsi_set(struct pci_dev *, struct pci_dev *, int, int);
176:	static unsigned int read_config_nybble(struct pci_dev *, unsigned int, unsigned int);
684:	static int serverworks_router_probe(struct irq_router *, struct pci_dev *, u16);
698:	static int sis_router_probe(struct irq_router *, struct pci_dev *, u16);
616:	static int via_router_probe(struct irq_router *, struct pci_dev *, u16);
671:	static int vlsi_router_probe(struct irq_router *, struct pci_dev *, u16);
185:	static void write_config_nybble(struct pci_dev *, unsigned int, unsigned int, unsigned int);

File arch/x86/pci/legacy.c:
26:	int pci_legacy_init(void);
36:	void pcibios_scan_specific_bus(int);
57:	static int pci_subsys_init(void);

File arch/x86/pci/mmconfig-shared.c:
661:	void pci_mmcfg_early_init(void);
674:	void pci_mmcfg_late_init(void);
97:	struct pci_mmcfg_region *pci_mmconfig_add(int, int, int, u64);
794:	int pci_mmconfig_delete(u16, u8, u8);
720:	int pci_mmconfig_insert(struct device *, u16, u8, u8, phys_addr_t);
117:	struct pci_mmcfg_region *pci_mmconfig_lookup(int, int);
635:	static void __pci_mmcfg_init(int);
377:	static acpi_status check_mcfg_resource(struct acpi_resource *, void *);
413:	static acpi_status find_mboard_resource(acpi_handle, u32, void *, void **);
43:	static void free_all_mmcfg(void);
427:	static bool is_acpi_reserved(u64, u64, unsigned int);
446:	static bool is_mmconf_reserved(check_reserved_t, struct pci_mmcfg_region *, struct device *, int);
52:	static void list_add_sorted(struct pci_mmcfg_region *);
188:	static const char *pci_mmcfg_amd_fam10h(void);
499:	static bool pci_mmcfg_check_reserved(struct device *, struct pci_mmcfg_region *, int);
129:	static const char *pci_mmcfg_e7520(void);
613:	static int pci_mmcfg_for_each_region(int (*)(__u64, __u64, void *), void *);
144:	static const char *pci_mmcfg_intel_945(void);
690:	static int pci_mmcfg_late_insert_resources(void);
239:	static const char *pci_mmcfg_nvidia_mcp55(void);
68:	static struct pci_mmcfg_region *pci_mmconfig_alloc(int, int, int, u64);
565:	static int pci_parse_mcfg(struct acpi_table_header *);

File arch/x86/pci/mmconfig_64.c:
129:	void pci_mmcfg_arch_free(void);
114:	int pci_mmcfg_arch_init(void);
137:	int pci_mmcfg_arch_map(struct pci_mmcfg_region *);
148:	void pci_mmcfg_arch_unmap(struct pci_mmcfg_region *);
28:	static int pci_mmcfg_read(unsigned int, unsigned int, unsigned int, int, int, u32 *);
62:	static int pci_mmcfg_write(unsigned int, unsigned int, unsigned int, int, int, u32);

File arch/x86/pci/xen.c:
446:	int pci_xen_hvm_init(void);
400:	int pci_xen_init(void);
425:	void xen_msi_init(void);
108:	static int acpi_register_gsi_xen_hvm(struct device *, u32, int, int);
227:	static int xen_hvm_setup_msi_irqs(struct pci_dev *, int, int);
30:	static int xen_pcifront_enable_irq(struct pci_dev *);
162:	static int xen_setup_msi_irqs(struct pci_dev *, int, int);
393:	static void xen_teardown_msi_irq(unsigned int);
379:	static void xen_teardown_msi_irqs(struct pci_dev *);

File arch/x86/platform/efi/early_printk.c:
47:	static void *early_efi_map(unsigned long, unsigned long);
27:	static int early_efi_map_fb(void);
79:	static void early_efi_scroll_up(void);
199:	static int early_efi_setup(struct console *, char *);
59:	static void early_efi_unmap(void *, unsigned long);
127:	static void early_efi_write(struct console *, const char *, unsigned int);

File arch/x86/platform/efi/efi.c:
1022:	void efi_enter_virtual_mode(void);
104:	void efi_find_mirror(void);
480:	void efi_init(void);
176:	int efi_memblock_x86_reserve_range(void);
577:	void efi_memory_uc(u64, unsigned long);
281:	void efi_print_memmap(void);
549:	void efi_set_executable(efi_memory_desc_t *, bool);
587:	void old_map_region(efi_memory_desc_t *);
564:	void runtime_code_page_mkexec(void);
1035:	static int arch_parse_efi_cmdline(char *);
255:	static void efi_clean_memmap(void);
644:	static void get_systab_virt_addr(efi_memory_desc_t *);
71:	static int setup_add_efi_memmap(char *);

File arch/x86/platform/efi/efi_64.c:
207:	int efi_alloc_page_tables(void);
150:	void efi_call_phys_epilog(pgd_t *);
75:	pgd_t *efi_call_phys_prolog(void);
613:	void efi_dump_pagetable(void);
494:	void *efi_ioremap(unsigned long, unsigned long, u32, u64);
432:	void efi_map_region(efi_memory_desc_t *);
488:	void efi_map_region_fixed(efi_memory_desc_t *);
558:	void efi_runtime_update_mappings(void);
342:	int efi_setup_page_tables(unsigned long, unsigned int);
630:	void efi_switch_mm(struct mm_struct *);
247:	void efi_sync_low_kernel_mappings(void);
998:	void efi_thunk_runtime_setup(void);
677:	efi_status_t efi_thunk_set_virtual_address_map(void *, unsigned long, unsigned long, u32, efi_memory_desc_t *);
514:	void parse_efi_setup(u64, u32);
414:	static void __map_region(efi_memory_desc_t *, u64);
60:	static void early_code_mapping_set_exec(int);
888:	static efi_status_t efi_thunk_get_next_high_mono_count(u32 *);
865:	static efi_status_t efi_thunk_get_next_variable(unsigned long *, efi_char16_t *, efi_guid_t *);
703:	static efi_status_t efi_thunk_get_time(efi_time_t *, efi_time_cap_t *);
792:	static efi_status_t efi_thunk_get_variable(efi_char16_t *, efi_guid_t *, u32 *, unsigned long *, void *);
743:	static efi_status_t efi_thunk_get_wakeup_time(efi_bool_t *, efi_bool_t *, efi_time_t *);
986:	static efi_status_t efi_thunk_query_capsule_caps(efi_capsule_header_t **, unsigned long, u64 *, int *);
933:	static efi_status_t efi_thunk_query_variable_info(u32, u64 *, u64 *, u64 *);
959:	static efi_status_t efi_thunk_query_variable_info_nonblocking(u32, u64 *, u64 *, u64 *);
905:	static void efi_thunk_reset_system(int, efi_status_t, unsigned long, efi_char16_t *);
723:	static efi_status_t efi_thunk_set_time(efi_time_t *);
817:	static efi_status_t efi_thunk_set_variable(efi_char16_t *, efi_guid_t *, u32, unsigned long, void *);
840:	static efi_status_t efi_thunk_set_variable_nonblocking(efi_char16_t *, efi_guid_t *, u32, unsigned long, void *);
767:	static efi_status_t efi_thunk_set_wakeup_time(efi_bool_t, efi_time_t *);
921:	static efi_status_t efi_thunk_update_capsule(efi_capsule_header_t **, unsigned long, unsigned long);
519:	static int efi_update_mappings(efi_memory_desc_t *, unsigned long);
542:	static int efi_update_mem_attr(struct mm_struct *, efi_memory_desc_t *);

File arch/x86/platform/efi/quirks.c:
523:	void efi_apply_memmap_quirks(void);
243:	void efi_arch_mem_reserve(phys_addr_t, u64);
106:	void efi_delete_dummy_variable(void);
370:	void efi_free_boot_services(void);
557:	bool efi_poweroff_required(void);
149:	efi_status_t efi_query_variable_store(u32, unsigned long, bool);
548:	bool efi_reboot_required(void);
316:	void efi_reserve_boot_services(void);
466:	int efi_reuse_config(u64, int);
96:	static int setup_storage_paranoia(char *);

File arch/x86/platform/intel/iosf_mbi.c:
251:	void iosf_mbi_assert_punit_acquired(void);
188:	bool iosf_mbi_available(void);
244:	int iosf_mbi_call_pmic_bus_access_notifier_chain(unsigned long, void *);
149:	int iosf_mbi_modify(u8, u8, u32, u32, u32);
195:	void iosf_mbi_punit_acquire(void);
201:	void iosf_mbi_punit_release(void);
103:	int iosf_mbi_read(u8, u8, u32, u32 *);
207:	int iosf_mbi_register_pmic_bus_access_notifier(struct notifier_block *);
231:	int iosf_mbi_unregister_pmic_bus_access_notifier(struct notifier_block *);
221:	int iosf_mbi_unregister_pmic_bus_access_notifier_unlocked(struct notifier_block *);
126:	int iosf_mbi_write(u8, u8, u32, u32);
377:	static void iosf_mbi_exit(void);
370:	static int iosf_mbi_init(void);
45:	static int iosf_mbi_pci_read_mdr(u32, u32, u32 *);
74:	static int iosf_mbi_pci_write_mdr(u32, u32, u32);
340:	static int iosf_mbi_probe(struct pci_dev *, const struct pci_device_id *);

File arch/x86/platform/sfi/sfi.c:
104:	int sfi_platform_init(void);
52:	static int sfi_parse_cpus(struct sfi_table_header *);
75:	static int sfi_parse_ioapic(struct sfi_table_header *);

File arch/x86/platform/uv/bios_uv.c:
56:	s64 uv_bios_call(enum uv_bios_cmd, u64, u64, u64, u64, u64);
70:	s64 uv_bios_call_irqsave(enum uv_bios_cmd, u64, u64, u64, u64, u64);
88:	s64 uv_bios_call_reentrant(enum uv_bios_cmd, u64, u64, u64, u64, u64);
169:	s64 uv_bios_change_memprotect(u64, u64, enum uv_memprotect);
184:	s64 uv_bios_freq_base(u64, u64 *);
113:	s64 uv_bios_get_sn_info(int, int *, long *, long *, long *, long *);
211:	void uv_bios_init(void);
141:	int uv_bios_mq_watchlist_alloc(unsigned long, unsigned int, unsigned long *);
161:	int uv_bios_mq_watchlist_free(int, int);
177:	s64 uv_bios_reserved_page_pa(u64, u64 *, u64 *, u64 *);
203:	int uv_bios_set_legacy_vga_target(bool, int, int);
32:	static s64 __uv_bios_call(enum uv_bios_cmd, u64, u64, u64, u64, u64);

File arch/x86/platform/uv/tlb_uv.c:
1278:	void uv_bau_message_interrupt(struct pt_regs *);
1105:	const struct cpumask *uv_flush_tlb_others(const struct cpumask *, const struct flush_tlb_info *);
285:	static void bau_process_message(struct msg_desc *, struct bau_control *, int);
780:	static void disable_for_period(struct bau_control *, struct ptc_stats *);
373:	static void do_reset(void *);
1664:	static int ptc_proc_open(struct inode *, struct file *);
1497:	static ssize_t ptc_proc_write(struct file *, const char *, size_t, loff_t *);
1382:	static void *ptc_seq_next(struct seq_file *, void *, loff_t *);
1399:	static int ptc_seq_show(struct seq_file *, void *);
1375:	static void *ptc_seq_start(struct seq_file *, loff_t *);
1390:	static void ptc_seq_stop(struct seq_file *, void *);
674:	static u64 read_status(u64, int, int);
422:	static void reset_with_ipi(struct pnmask *, struct bau_control *);
159:	static void set_bau_off(void);
109:	static int setup_bau(char *);
1669:	static int tunables_open(struct inode *, struct file *);
1469:	static ssize_t tunables_read(struct file *, char *, size_t, loff_t *);
1618:	static ssize_t tunables_write(struct file *, const char *, size_t, loff_t *);
530:	static int uv1_wait_completion(struct bau_desc *, struct bau_control *, long);
603:	static int uv2_3_wait_completion(struct bau_desc *, struct bau_control *, long);
684:	static int uv4_wait_completion(struct bau_desc *, struct bau_control *, long);
2202:	static int uv_bau_init(void);
1689:	static int uv_ptc_init(void);

File arch/x86/platform/uv/uv_irq.c:
184:	int uv_setup_irq(char *, int, int, unsigned long, int);
212:	void uv_teardown_irq(unsigned int);
125:	static int uv_domain_activate(struct irq_domain *, struct irq_data *, bool);
75:	static int uv_domain_alloc(struct irq_domain *, unsigned int, unsigned int, void *);
136:	static void uv_domain_deactivate(struct irq_domain *, struct irq_data *);
109:	static void uv_domain_free(struct irq_domain *, unsigned int, unsigned int);
48:	static void uv_noop(struct irq_data *);
27:	static void uv_program_mmr(struct irq_cfg *, struct uv_irq_2_mmr_pnode *, struct uv_irq_2_mmr_pnode *);
51:	static int uv_set_irq_affinity(struct irq_data *, const struct cpumask *, bool);

File arch/x86/platform/uv/uv_nmi.c:
1003:	void uv_nmi_init(void);
1042:	void uv_nmi_setup(void);
1051:	void uv_nmi_setup_hubless(void);
192:	static int param_get_action(char *, const struct kernel_param *);
109:	static int param_get_local64(char *, const struct kernel_param *);
197:	static int param_set_action(const char *, const struct kernel_param *);
114:	static int param_set_local64(const char *, const struct kernel_param *);
908:	static int uv_handle_nmi(unsigned int, struct pt_regs *);
977:	static int uv_handle_nmi_ping(unsigned int, struct pt_regs *);
283:	static void uv_init_hubless_pch_io(int, int, int);
694:	static void uv_nmi_dump_state_cpu(int, struct pt_regs *);
1016:	static void uv_nmi_setup_common(bool);
734:	static void uv_nmi_sync_exit(int);
587:	static int uv_nmi_wait_cpus(int);
994:	static void uv_register_nmi_notifier(void);
467:	static int uv_set_in_nmi(int, struct uv_hub_nmi_s *);

File arch/x86/platform/uv/uv_sysfs.c:
34:	static ssize_t coherence_id_show(struct kobject *, struct kobj_attribute *, char *);
28:	static ssize_t partition_id_show(struct kobject *, struct kobj_attribute *, char *);
47:	static int sgi_uv_sysfs_init(void);

File arch/x86/platform/uv/uv_time.c:
347:	static int uv_enable_evt_rtc(char *);
299:	static u64 uv_read_rtc(struct clocksource *);
146:	static void uv_rtc_deallocate_timers(void);
194:	static void uv_rtc_find_next_timer(struct uv_rtc_timer_head *, int);
333:	static void uv_rtc_interrupt(void);
314:	static int uv_rtc_next_event(unsigned long, struct clock_event_device *);
355:	static void uv_rtc_register_clockevents(struct work_struct *);
364:	static int uv_rtc_setup_clock(void);
325:	static int uv_rtc_shutdown(struct clock_event_device *);
260:	static int uv_rtc_unset_timer(int, int);
111:	static int uv_setup_intr(int, u64);

File arch/x86/power/cpu.c:
290:	int hibernate_resume_nonboot_cpu_disable(void);
274:	void restore_processor_state(void);
136:	void save_processor_state(void);
336:	static int bsp_pm_callback(struct notifier_block *, unsigned long, void *);
389:	static int bsp_pm_check_init(void);
402:	static int msr_build_context(const u32 *, const int);
449:	static int msr_initialize_bdw(const struct dmi_system_id *);
470:	static int msr_save_cpuid_features(const struct x86_cpu_id *);
517:	static int pm_check_save_msr(void);
283:	static void resume_play_dead(void);

File arch/x86/power/hibernate_64.c:
346:	int arch_hibernation_header_restore(void *);
308:	int arch_hibernation_header_save(void *, unsigned int);
367:	int arch_resume_nosmt(void);
209:	int pfn_is_nosave(unsigned long);
188:	int swsusp_arch_resume(void);
109:	static void *alloc_pgt_page(void *);
235:	static int get_e820_md5(struct e820_table *, void *);
149:	static int relocate_restore_code(void);

File arch/x86/realmode/init.c:
25:	void reserve_real_mode(void);
18:	void set_real_mode_mem(phys_addr_t, size_t);
150:	static int init_real_mode(void);

File arch/x86/video/fbdev.c:
14:	int fb_is_primary_device(struct fb_info *);

File arch/x86/xen/efi.c:
175:	void xen_efi_init(void);

File arch/x86/xen/enlighten.c:
355:	void xen_arch_register_cpu(int);
361:	void xen_arch_unregister_cpu(int);
101:	int xen_cpuhp_setup(int (*)(unsigned int), int (*)(unsigned int));
271:	void xen_emergency_restart(void);
309:	int xen_panic_handler_init(void);
315:	void xen_pin_vcpu(int);
257:	void xen_reboot(int);
185:	void xen_vcpu_info_reset(int);
144:	void xen_vcpu_restore(void);
196:	int xen_vcpu_setup(int);
297:	static int parse_xen_legacy_crash(char *);
95:	static int xen_cpu_up_online(unsigned int);
277:	static int xen_panic_event(struct notifier_block *, unsigned long, void *);

File arch/x86/xen/enlighten_hvm.c:
28:	void xen_hvm_init_shared_info(void);
219:	bool xen_hvm_need_lapic(void);
166:	static int xen_cpu_dead_hvm(unsigned int);
134:	static int xen_cpu_up_prepare_hvm(unsigned int);
127:	static void xen_hvm_crash_shutdown(struct pt_regs *);
176:	static void xen_hvm_guest_init(void);
241:	static void xen_hvm_guest_late_init(void);
64:	static void xen_hvm_init_mem_mapping(void);
120:	static void xen_hvm_shutdown(void);
212:	static int xen_parse_nopv(char *);
233:	static uint32_t xen_platform_hvm(void);

File arch/x86/xen/grant-table.c:
138:	int arch_gnttab_init(unsigned long, unsigned long);
54:	int arch_gnttab_map_shared(unsigned long *, unsigned long, unsigned long, void **);
76:	int arch_gnttab_map_status(uint64_t *, unsigned long, unsigned long, grant_status_t **);
98:	void arch_gnttab_unmap(void *, unsigned long);
117:	static int arch_gnttab_valloc(struct gnttab_vm_area *, unsigned int);

File arch/x86/xen/irq.c:
22:	void xen_force_evtchn_callback(void);
129:	void xen_init_irq_ops(void);
67:	void xen_irq_disable(void);
78:	void xen_irq_enable(void);
45:	void xen_restore_fl(unsigned long);
27:	unsigned long xen_save_fl(void);
110:	static void xen_halt(void);
103:	static void xen_safe_halt(void);

File arch/x86/xen/mmu.c:
22:	xmaddr_t arbitrary_virt_to_machine(void *);
15:	unsigned long arbitrary_virt_to_mfn(void *);
191:	int xen_remap_domain_gfn_array(struct vm_area_struct *, unsigned long, xen_pfn_t *, int, int *, pgprot_t, unsigned int, struct page **);
177:	int xen_remap_domain_gfn_range(struct vm_area_struct *, unsigned long, xen_pfn_t, int, pgprot_t, unsigned int, struct page **);
211:	int xen_remap_domain_mfn_array(struct vm_area_struct *, unsigned long, xen_pfn_t *, int, int *, pgprot_t, unsigned int, struct page **);
226:	int xen_unmap_domain_gfn_range(struct vm_area_struct *, int, struct page **);
98:	static int do_remap_pfn(struct vm_area_struct *, unsigned long, xen_pfn_t *, int, int *, pgprot_t, unsigned int, bool, struct page **);
73:	static int remap_area_pfn_pte_fn(pte_t *, pgtable_t, unsigned long, void *);
45:	static void xen_flush_tlb_all(void);

File arch/x86/xen/mmu_hvm.c:
73:	void xen_hvm_init_mmu_ops(void);
47:	static void xen_hvm_exit_mmap(struct mm_struct *);
21:	static int xen_oldmem_pfn_is_ram(unsigned long);

File arch/x86/xen/multicalls.c:
133:	struct multicall_space __xen_mc_entry(size_t);
194:	void xen_mc_callback(void (*)(void *), void *);
164:	struct multicall_space xen_mc_extend_args(unsigned long, size_t);
56:	void xen_mc_flush(void);

File arch/x86/xen/pci-swiotlb-xen.c:
27:	int pci_xen_swiotlb_detect(void);
57:	void pci_xen_swiotlb_init(void);
70:	int pci_xen_swiotlb_init_late(void);

File arch/x86/xen/platform-pci-unplug.c:
129:	bool xen_has_pv_and_legacy_disk_devices(void);
71:	bool xen_has_pv_devices(void);
117:	bool xen_has_pv_disk_devices(void);
145:	void xen_unplug_emulated_devices(void);
189:	static int parse_xen_emul_unplug(char *);

File arch/x86/xen/smp.c:
227:	void xen_send_IPI_all(int);
261:	void xen_send_IPI_allbutself(int);
218:	void xen_send_IPI_mask(const struct cpumask *, int);
243:	void xen_send_IPI_mask_allbutself(const struct cpumask *, int);
235:	void xen_send_IPI_self(int);
119:	void xen_smp_cpus_done(unsigned int);
33:	void xen_smp_intr_free(unsigned int);
62:	int xen_smp_intr_init(unsigned int);
165:	void xen_smp_send_call_function_ipi(const struct cpumask *);
180:	void xen_smp_send_call_function_single_ipi(int);
151:	void xen_smp_send_reschedule(int);
156:	static void __xen_send_IPI_mask(const struct cpumask *, int);
266:	static irqreturn_t xen_call_function_interrupt(int, void *);
25:	static irqreturn_t xen_reschedule_interrupt(int, void *);

File arch/x86/xen/smp_hvm.c:
64:	void xen_hvm_smp_init(void);
49:	static void xen_hvm_cpu_die(unsigned int);
10:	static void xen_hvm_smp_prepare_boot_cpu(void);
30:	static void xen_hvm_smp_prepare_cpus(unsigned int);

File arch/x86/xen/spinlock.c:
71:	void xen_init_lock_cpu(int);
123:	void xen_init_spinlocks(void);
102:	void xen_uninit_lock_cpu(int);
65:	static irqreturn_t dummy_handler(int, void *);
144:	static int xen_parse_nopvspin(char *);
28:	static void xen_qlock_kick(int);
42:	static void xen_qlock_wait(u8 *, u8);

File arch/x86/xen/suspend.c:
31:	void xen_arch_post_suspend(int);
23:	void xen_arch_pre_suspend(void);
66:	void xen_arch_resume(void);
76:	void xen_arch_suspend(void);
41:	static void xen_vcpu_notify_restore(void *);
53:	static void xen_vcpu_notify_suspend(void *);

File arch/x86/xen/suspend_hvm.c:
10:	void xen_hvm_post_suspend(int);

File arch/x86/xen/time.c:
548:	void xen_hvm_init_time_ops(void);
519:	void xen_init_time_ops(void);
402:	void xen_restore_time_memory_area(void);
382:	void xen_save_time_memory_area(void);
355:	void xen_setup_cpu_clockevents(void);
328:	void xen_setup_timer(int);
317:	void xen_teardown_timer(int);
360:	void xen_timer_resume(void);
57:	static u64 xen_clocksource_get_cycles(struct clocksource *);
78:	static void xen_get_wallclock(struct timespec64 *);
536:	static void xen_hvm_setup_cpu_clockevents(void);
62:	static u64 xen_sched_clock(void);
83:	static int xen_set_wallclock(const struct timespec64 *);
473:	static void xen_time_init(void);
303:	static irqreturn_t xen_timer_interrupt(int, void *);
200:	static int xen_timerop_set_next_event(unsigned long, struct clock_event_device *);
192:	static int xen_timerop_shutdown(struct clock_event_device *);
37:	static unsigned long xen_tsc_khz(void);
256:	static int xen_vcpuop_set_next_event(unsigned long, struct clock_event_device *);
245:	static int xen_vcpuop_set_oneshot(struct clock_event_device *);
232:	static int xen_vcpuop_shutdown(struct clock_event_device *);

File block/badblocks.c:
441:	void ack_all_badblocks(struct badblocks *);
61:	int badblocks_check(struct badblocks *, sector_t, int, sector_t *, int *);
339:	int badblocks_clear(struct badblocks *, sector_t, int);
601:	void badblocks_exit(struct badblocks *);
583:	int badblocks_init(struct badblocks *, int);
171:	int badblocks_set(struct badblocks *, sector_t, int, int);
475:	ssize_t badblocks_show(struct badblocks *, char *, int);
525:	ssize_t badblocks_store(struct badblocks *, const char *, size_t, int);
589:	int devm_init_badblocks(struct device *, struct badblocks *);

File block/bfq-cgroup.c:
555:	void bfq_bfqq_move(struct bfq_data *, struct bfq_queue *, struct bfq_group *);
672:	void bfq_bic_update_cgroup(struct bfq_io_cq *, struct bio *);
1082:	struct bfq_group *bfq_create_group_hierarchy(struct bfq_data *, int);
882:	void bfq_end_wr_async(struct bfq_data *);
510:	struct bfq_group *bfq_find_set_group(struct bfq_data *, struct blkcg *);
346:	void bfq_init_entity(struct bfq_entity *, struct bfq_group *);
276:	void bfqg_and_blkg_put(struct bfq_group *);
194:	void bfqg_stats_update_completion(struct bfq_group *, u64, u64, unsigned int);
196:	void bfqg_stats_update_dequeue(struct bfq_group *);
190:	void bfqg_stats_update_io_add(struct bfq_group *, struct bfq_queue *, unsigned int);
192:	void bfqg_stats_update_io_remove(struct bfq_group *, unsigned int);
217:	struct blkcg_gq *bfqg_to_blkg(struct bfq_group *);
241:	struct bfq_group *bfqq_group(struct bfq_queue *);
414:	static struct blkcg_policy_data *bfq_cpd_alloc(gfp_t);
432:	static void bfq_cpd_free(struct blkcg_policy_data *);
424:	static void bfq_cpd_init(struct blkcg_policy_data *);
960:	static ssize_t bfq_io_set_weight(struct kernfs_open_file *, char *, size_t, loff_t);
908:	static int bfq_io_set_weight_legacy(struct cgroup_subsys_state *, struct cftype *, u64);
894:	static int bfq_io_show_weight(struct seq_file *, void *);
437:	static struct blkg_policy_data *bfq_pd_alloc(gfp_t, int);
474:	static void bfq_pd_free(struct blkg_policy_data *);
455:	static void bfq_pd_init(struct blkg_policy_data *);
817:	static void bfq_pd_offline(struct blkg_policy_data *);
763:	static void bfq_reparent_leaf_entity(struct bfq_data *, struct bfq_entity *, int);

File block/bfq-iosched.c:
760:	void __bfq_weights_tree_remove(struct bfq_data *, struct bfq_queue *, struct rb_root *);
165:	int bfq_bfqq_IO_bound(const struct bfq_queue *);
159:	int bfq_bfqq_busy(const struct bfq_queue *);
167:	int bfq_bfqq_coop(const struct bfq_queue *);
3271:	void bfq_bfqq_expire(struct bfq_data *, struct bfq_queue *, bool, enum bfqq_expiration);
162:	int bfq_bfqq_fifo_expire(const struct bfq_queue *);
163:	int bfq_bfqq_has_short_ttime(const struct bfq_queue *);
166:	int bfq_bfqq_in_large_burst(const struct bfq_queue *);
158:	int bfq_bfqq_just_created(const struct bfq_queue *);
161:	int bfq_bfqq_non_blocking_wait_rq(const struct bfq_queue *);
169:	int bfq_bfqq_softrt_update(const struct bfq_queue *);
168:	int bfq_bfqq_split_coop(const struct bfq_queue *);
164:	int bfq_bfqq_sync(const struct bfq_queue *);
160:	int bfq_bfqq_wait_request(const struct bfq_queue *);
165:	void bfq_clear_bfqq_IO_bound(struct bfq_queue *);
159:	void bfq_clear_bfqq_busy(struct bfq_queue *);
167:	void bfq_clear_bfqq_coop(struct bfq_queue *);
162:	void bfq_clear_bfqq_fifo_expire(struct bfq_queue *);
163:	void bfq_clear_bfqq_has_short_ttime(struct bfq_queue *);
166:	void bfq_clear_bfqq_in_large_burst(struct bfq_queue *);
158:	void bfq_clear_bfqq_just_created(struct bfq_queue *);
161:	void bfq_clear_bfqq_non_blocking_wait_rq(struct bfq_queue *);
169:	void bfq_clear_bfqq_softrt_update(struct bfq_queue *);
168:	void bfq_clear_bfqq_split_coop(struct bfq_queue *);
164:	void bfq_clear_bfqq_sync(struct bfq_queue *);
160:	void bfq_clear_bfqq_wait_request(struct bfq_queue *);
2006:	void bfq_end_wr_async_queues(struct bfq_data *, struct bfq_group *);
165:	void bfq_mark_bfqq_IO_bound(struct bfq_queue *);
159:	void bfq_mark_bfqq_busy(struct bfq_queue *);
167:	void bfq_mark_bfqq_coop(struct bfq_queue *);
162:	void bfq_mark_bfqq_fifo_expire(struct bfq_queue *);
163:	void bfq_mark_bfqq_has_short_ttime(struct bfq_queue *);
166:	void bfq_mark_bfqq_in_large_burst(struct bfq_queue *);
158:	void bfq_mark_bfqq_just_created(struct bfq_queue *);
161:	void bfq_mark_bfqq_non_blocking_wait_rq(struct bfq_queue *);
169:	void bfq_mark_bfqq_softrt_update(struct bfq_queue *);
168:	void bfq_mark_bfqq_split_coop(struct bfq_queue *);
164:	void bfq_mark_bfqq_sync(struct bfq_queue *);
160:	void bfq_mark_bfqq_wait_request(struct bfq_queue *);
594:	void bfq_pos_tree_add_move(struct bfq_data *, struct bfq_queue *);
5306:	void bfq_put_async_queues(struct bfq_data *, struct bfq_group *);
4170:	void bfq_put_queue(struct bfq_queue *);
417:	void bfq_schedule_dispatch(struct bfq_data *);
689:	void bfq_weights_tree_add(struct bfq_data *, struct bfq_queue *, struct rb_root *);
783:	void bfq_weights_tree_remove(struct bfq_data *, struct bfq_queue *);
369:	void bic_set_bfqq(struct bfq_io_cq *, struct bfq_queue *, bool);
374:	struct bfq_data *bic_to_bfqd(struct bfq_io_cq *);
364:	struct bfq_queue *bic_to_bfqq(struct bfq_io_cq *, bool);
2837:	static bool __bfq_bfqq_expire(struct bfq_data *, struct bfq_queue *);
5284:	static void __bfq_put_async_bfqq(struct bfq_data *, struct bfq_queue **);
2391:	static bool bfq_allow_bio_merge(struct request_queue *, struct request *, struct bio *);
5602:	static ssize_t bfq_back_seek_max_show(struct elevator_queue *, char *);
5649:	static ssize_t bfq_back_seek_max_store(struct elevator_queue *, const char *, size_t);
5603:	static ssize_t bfq_back_seek_penalty_show(struct elevator_queue *, char *);
5650:	static ssize_t bfq_back_seek_penalty_store(struct elevator_queue *, const char *, size_t);
3443:	static bool bfq_better_to_idle(struct bfq_queue *);
2286:	static void bfq_bfqq_save_state(struct bfq_queue *);
3228:	static unsigned long bfq_bfqq_softrt_next_start(struct bfq_queue *, struct bfq_data *);
1850:	static bool bfq_bio_merge(struct blk_mq_hw_ctx *, struct bio *);
435:	static struct request *bfq_choose_req(struct request *, struct request *, sector_t, struct bfq_data *, struct bfq_data *);
5364:	static void bfq_depth_updated(struct blk_mq_hw_ctx *);
4138:	static struct request *bfq_dispatch_request(struct blk_mq_hw_ctx *);
5863:	static void bfq_exit(void);
4274:	static void bfq_exit_icq(struct io_cq *);
4255:	static void bfq_exit_icq_bfqq(struct bfq_io_cq *, bool);
5380:	static void bfq_exit_queue(struct elevator_queue *);
5601:	static ssize_t bfq_fifo_expire_async_show(struct elevator_queue *, char *);
5647:	static ssize_t bfq_fifo_expire_async_store(struct elevator_queue *, const char *, size_t);
5600:	static ssize_t bfq_fifo_expire_sync_show(struct elevator_queue *, char *);
5645:	static ssize_t bfq_fifo_expire_sync_store(struct elevator_queue *, const char *, size_t);
4950:	static void bfq_finish_requeue_request(struct request *);
5024:	static struct bfq_queue *bfq_get_bfqq_handle_split(struct bfq_data *, struct bfq_io_cq *, struct bio *, bool, bool, bool *);
4451:	static struct bfq_queue *bfq_get_queue(struct bfq_data *, struct bio *, bool, struct bfq_io_cq *);
3987:	static bool bfq_has_work(struct blk_mq_hw_ctx *);
5264:	static enum hrtimer_restart bfq_idle_slice_timer(struct hrtimer *);
5818:	static int bfq_init(void);
4367:	static void bfq_init_bfqq(struct bfq_data *, struct bfq_queue *, struct bfq_io_cq *, pid_t, int);
5374:	static int bfq_init_hctx(struct blk_mq_hw_ctx *, unsigned int);
5429:	static int bfq_init_queue(struct request_queue *, struct elevator_type *);
5126:	static struct bfq_queue *bfq_init_rq(struct request *);
4786:	static void bfq_insert_requests(struct blk_mq_hw_ctx *, struct list_head *, bool);
531:	static void bfq_limit_depth(unsigned int, struct blk_mq_alloc_data *);
5608:	static ssize_t bfq_low_latency_show(struct elevator_queue *, char *);
5749:	static ssize_t bfq_low_latency_store(struct elevator_queue *, const char *, size_t);
5605:	static ssize_t bfq_max_budget_show(struct elevator_queue *, char *);
5676:	static ssize_t bfq_max_budget_store(struct elevator_queue *, const char *, size_t);
2179:	static bool bfq_may_be_close_cooperator(struct bfq_queue *, struct bfq_queue *);
3406:	static bool bfq_may_expire_for_budg_timeout(struct bfq_queue *);
2328:	static void bfq_merge_bfqqs(struct bfq_queue *, struct bfq_queue *, struct bfq_io_cq *, struct bfq_data *, struct bfq_data *);
5093:	static void bfq_prepare_request(struct request *, struct bio *);
1791:	static void bfq_remove_request(struct request_queue *, struct request *);
1882:	static int bfq_request_merge(struct request_queue *, struct request **, struct bio *);
1899:	static void bfq_request_merged(struct request_queue *, struct request *, enum elv_merge);
1951:	static void bfq_requests_merged(struct request_queue *, struct request *, struct request *);
2594:	static void bfq_reset_rate_computation(struct bfq_data *, struct request *);
547:	static struct bfq_queue *bfq_rq_pos_tree_lookup(struct rb_root *, sector_t, struct rb_node **, struct rb_node ***, struct bfq_data *);
4287:	static void bfq_set_next_ioprio_data(struct bfq_queue *, struct bfq_io_cq *);
2229:	static struct bfq_queue *bfq_setup_cooperator(struct bfq_data *, struct bfq_queue *, void *, bool);
2112:	static struct bfq_queue *bfq_setup_merge(struct bfq_queue *, struct bfq_queue *);
5604:	static ssize_t bfq_slice_idle_show(struct elevator_queue *, char *);
5652:	static ssize_t bfq_slice_idle_store(struct elevator_queue *, const char *, size_t);
5619:	static ssize_t bfq_slice_idle_us_show(struct elevator_queue *, char *);
5672:	static ssize_t bfq_slice_idle_us_store(struct elevator_queue *, const char *, size_t);
5607:	static ssize_t bfq_strict_guarantees_show(struct elevator_queue *, char *);
5727:	static ssize_t bfq_strict_guarantees_store(struct elevator_queue *, const char *, size_t);
5606:	static ssize_t bfq_timeout_sync_show(struct elevator_queue *, char *);
5704:	static ssize_t bfq_timeout_sync_store(struct elevator_queue *, const char *, size_t);
2612:	static void bfq_update_rate_reset(struct bfq_data *, struct request *);
902:	static void bfq_updated_next_req(struct bfq_data *, struct bfq_queue *);

File block/bfq-wf2q.c:
1604:	bool __bfq_bfqd_reset_in_service(struct bfq_data *);
1167:	bool __bfq_deactivate_entity(struct bfq_entity *, bool);
724:	struct bfq_service_tree *__bfq_entity_update_weight_prio(struct bfq_service_tree *, struct bfq_entity *, bool);
1652:	void bfq_activate_bfqq(struct bfq_data *, struct bfq_queue *);
1698:	void bfq_add_bfqq_busy(struct bfq_data *, struct bfq_queue *);
878:	void bfq_bfqq_charge_time(struct bfq_data *, struct bfq_queue *, unsigned long);
828:	void bfq_bfqq_served(struct bfq_queue *, int);
151:	struct bfq_group *bfq_bfqq_to_bfqg(struct bfq_queue *);
1644:	void bfq_deactivate_bfqq(struct bfq_data *, struct bfq_queue *, bool, bool);
1675:	void bfq_del_bfqq_busy(struct bfq_data *, struct bfq_queue *, bool);
321:	struct bfq_entity *bfq_entity_of(struct rb_node *);
697:	struct bfq_service_tree *bfq_entity_service_tree(struct bfq_entity *);
265:	struct bfq_queue *bfq_entity_to_bfqq(struct bfq_entity *);
1511:	struct bfq_queue *bfq_get_next_queue(struct bfq_data *);
515:	unsigned short bfq_ioprio_to_weight(int);
665:	void bfq_put_idle_entity(struct bfq_service_tree *, struct bfq_entity *);
1661:	void bfq_requeue_bfqq(struct bfq_data *, struct bfq_queue *, bool);
1501:	bool next_queue_may_preempt(struct bfq_data *);
1040:	static void __bfq_requeue_entity(struct bfq_entity *);
1140:	static void bfq_activate_requeue_entity(struct bfq_entity *, bool, bool, bool);
580:	static void bfq_active_extract(struct bfq_service_tree *, struct bfq_entity *);
294:	static void bfq_calc_finish(struct bfq_entity *, unsigned long);
39:	static unsigned int bfq_class_idx(struct bfq_entity *);
1217:	static void bfq_deactivate_entity(struct bfq_entity *, bool, bool);
648:	static void bfq_forget_entity(struct bfq_service_tree *, struct bfq_entity *, bool);
679:	static void bfq_forget_idle(struct bfq_service_tree *);
347:	static void bfq_idle_extract(struct bfq_service_tree *, struct bfq_entity *);
377:	static void bfq_insert(struct rb_root *, struct bfq_entity *);
447:	static void bfq_update_active_tree(struct rb_node *);
896:	static void bfq_update_fin_time_enqueue(struct bfq_entity *, struct bfq_service_tree *, bool);
77:	static bool bfq_update_next_in_service(struct bfq_sched_data *, struct bfq_entity *, bool);

File block/bio-integrity.c:
371:	bool __bio_integrity_endio(struct bio *);
41:	void __bio_integrity_free(struct bio_set *, struct bio_integrity_payload *);
140:	int bio_integrity_add_page(struct bio *, struct page *, unsigned int, unsigned int);
396:	void bio_integrity_advance(struct bio *, unsigned int);
63:	struct bio_integrity_payload *bio_integrity_alloc(struct bio *, gfp_t, unsigned int);
430:	int bio_integrity_clone(struct bio *, struct bio *, gfp_t);
477:	void bio_integrity_init(void);
219:	bool bio_integrity_prep(struct bio *);
413:	void bio_integrity_trim(struct bio *);
452:	int bioset_integrity_create(struct bio_set *, int);
470:	void bioset_integrity_free(struct bio_set *);
36:	void blk_flush_integrity(void);
117:	static void bio_integrity_free(struct bio *);
173:	static blk_status_t bio_integrity_process(struct bio *, struct bvec_iter *, integrity_processing_fn *);
336:	static void bio_integrity_verify_fn(struct work_struct *);

File block/bio.c:
792:	void __bio_add_page(struct bio *, struct page *, unsigned int, unsigned int);
594:	void __bio_clone_fast(struct bio *, struct bio *);
763:	bool __bio_try_merge_page(struct bio *, struct page *, unsigned int, unsigned int);
819:	int bio_add_page(struct bio *, struct page *, unsigned int, unsigned int);
665:	int bio_add_pc_page(struct request_queue *, struct bio *, struct page *, unsigned int, unsigned int);
948:	void bio_advance(struct bio *, unsigned int);
438:	struct bio *bio_alloc_bioset(gfp_t, unsigned int, struct bio_set *);
2018:	int bio_associate_blkcg(struct bio *, struct cgroup_subsys_state *);
1991:	int bio_associate_blkcg_from_page(struct bio *, struct page *);
2037:	int bio_associate_blkg(struct bio *, struct blkcg_gq *);
339:	void bio_chain(struct bio *, struct bio *);
1648:	void bio_check_pages_dirty(struct bio *);
2072:	void bio_clone_blkcg_association(struct bio *, struct bio *);
625:	struct bio *bio_clone_fast(struct bio *, gfp_t, struct bio_set *);
996:	void bio_copy_data(struct bio *, struct bio *);
957:	void bio_copy_data_iter(struct bio *, struct bvec_iter *, struct bio *, struct bvec_iter *);
1503:	struct bio *bio_copy_kern(struct request_queue *, void *, unsigned int, gfp_t, int);
1178:	struct bio *bio_copy_user_iov(struct request_queue *, struct rq_map_data *, struct iov_iter *, gfp_t);
2051:	void bio_disassociate_task(struct bio *);
1763:	void bio_endio(struct bio *);
1127:	void bio_free_pages(struct bio *);
279:	void bio_init(struct bio *, struct bio_vec *, unsigned short);
891:	int bio_iov_iter_get_pages(struct bio *, struct iov_iter *);
1015:	void bio_list_copy_data(struct bio *, struct bio *);
1431:	struct bio *bio_map_kern(struct request_queue *, void *, unsigned int, gfp_t);
1295:	struct bio *bio_map_user_iov(struct request_queue *, struct iov_iter *, gfp_t);
574:	int bio_phys_segments(struct request_queue *, struct bio *);
558:	void bio_put(struct bio *);
301:	void bio_reset(struct bio *);
1589:	void bio_set_pages_dirty(struct bio *);
1815:	struct bio *bio_split(struct bio *, int, gfp_t, struct bio_set *);
1848:	void bio_trim(struct bio *, int, int);
1144:	int bio_uncopy_user(struct bio *);
245:	void bio_uninit(struct bio *);
1410:	void bio_unmap_user(struct bio *);
1887:	void bioset_exit(struct bio_set *);
1924:	int bioset_init(struct bio_set *, unsigned int, unsigned int, int);
1966:	int bioset_init_from_src(struct bio_set *, struct bio_set *);
1874:	int biovec_init_pool(mempool_t *, int);
181:	struct bio_vec *bvec_alloc(gfp_t, int, unsigned long *, mempool_t *);
164:	void bvec_free(mempool_t *, struct bio_vec *, unsigned int);
159:	unsigned int bvec_nr_vecs(unsigned short);
1701:	void generic_end_io_acct(struct request_queue *, int, struct hd_struct *, unsigned long);
1686:	void generic_start_io_acct(struct request_queue *, int, unsigned long, struct hd_struct *);
923:	int submit_bio_wait(struct bio *);
1671:	void update_io_ticks(int, struct hd_struct *, unsigned long);
535:	void zero_fill_bio_iter(struct bio *, struct bvec_iter);
349:	static void bio_alloc_rescue(struct work_struct *);
323:	static void bio_chain_endio(struct bio *);
1472:	static void bio_copy_kern_endio(struct bio *);
1478:	static void bio_copy_kern_endio_read(struct bio *);
1630:	static void bio_dirty_fn(struct work_struct *);
251:	static void bio_free(struct bio *);
1416:	static void bio_map_kern_endio(struct bio *);
2099:	static int init_bio(void);
366:	static void punt_bios_to_rescuer(struct bio_set *);
907:	static void submit_bio_wait_endio(struct bio *);

File block/blk-cgroup.c:
425:	struct request_list *__blk_queue_next_rl(struct request_list *, struct request_queue *);
569:	u64 __blkg_prfill_rwstat(struct seq_file *, struct blkg_policy_data *, const struct blkg_rwstat *);
549:	u64 __blkg_prfill_u64(struct seq_file *, struct blkg_policy_data *, u64);
406:	void __blkg_release_rcu(struct callback_head *);
1444:	int blkcg_activate_policy(struct request_queue *, const struct blkcg_policy *);
1867:	void blkcg_add_delay(struct blkcg_gq *, u64, u64);
1513:	void blkcg_deactivate_policy(struct request_queue *, const struct blkcg_policy *);
1143:	void blkcg_destroy_blkgs(struct blkcg *);
1317:	void blkcg_drain_queue(struct request_queue *);
1345:	void blkcg_exit_queue(struct request_queue *);
1261:	int blkcg_init_queue(struct request_queue *);
1784:	void blkcg_maybe_throttle_current(void);
1559:	int blkcg_policy_register(struct blkcg_policy *);
1637:	void blkcg_policy_unregister(struct blkcg_policy *);
518:	void blkcg_print_blkgs(struct seq_file *, struct blkcg *, u64 (*)(struct seq_file *, struct blkg_policy_data *, int), const struct blkcg_policy *, int, bool);
1842:	void blkcg_schedule_throttle(struct request_queue *, bool);
973:	void blkg_conf_finish(struct blkg_conf_ctx *);
831:	int blkg_conf_prep(struct blkcg *, const struct blkcg_policy *, char *, struct blkg_conf_ctx *);
488:	const char *blkg_dev_name(struct blkcg_gq *);
275:	struct blkcg_gq *blkg_lookup_create(struct blkcg *, struct request_queue *);
146:	struct blkcg_gq *blkg_lookup_slowpath(struct blkcg *, struct request_queue *, bool);
620:	u64 blkg_prfill_rwstat(struct seq_file *, struct blkg_policy_data *, int);
606:	u64 blkg_prfill_stat(struct seq_file *, struct blkg_policy_data *, int);
645:	int blkg_print_stat_bytes(struct seq_file *, void *);
685:	int blkg_print_stat_bytes_recursive(struct seq_file *, void *);
662:	int blkg_print_stat_ios(struct seq_file *, void *);
700:	int blkg_print_stat_ios_recursive(struct seq_file *, void *);
765:	struct blkg_rwstat blkg_rwstat_recursive_sum(struct blkcg_gq *, struct blkcg_policy *, int);
723:	u64 blkg_stat_recursive_sum(struct blkcg_gq *, struct blkcg_policy *, int);
1380:	static void blkcg_bind(struct cgroup_subsys_state *);
1360:	static int blkcg_can_attach(struct cgroup_taskset *);
1184:	static struct cgroup_subsys_state *blkcg_css_alloc(struct cgroup_subsys_state *);
1165:	static void blkcg_css_free(struct cgroup_subsys_state *);
1121:	static void blkcg_css_offline(struct cgroup_subsys_state *);
1400:	static void blkcg_exit(struct task_struct *);
56:	static bool blkcg_policy_enabled(struct request_queue *, const struct blkcg_policy *);
982:	static int blkcg_print_stat(struct seq_file *, void *);
456:	static int blkcg_reset_stats(struct cgroup_subsys_state *, struct cftype *, u64);
1677:	static void blkcg_scale_delay(struct blkcg_gq *, u64);
95:	static struct blkcg_gq *blkg_alloc(struct blkcg *, struct request_queue *, gfp_t);
174:	static struct blkcg_gq *blkg_create(struct blkcg *, struct request_queue *, struct blkcg_gq *);
313:	static void blkg_destroy(struct blkcg_gq *);
365:	static void blkg_destroy_all(struct request_queue *);
68:	static void blkg_free(struct blkcg_gq *);
799:	static struct blkcg_gq *blkg_lookup_check(struct blkcg *, const struct blkcg_policy *, struct request_queue *);
629:	static u64 blkg_prfill_rwstat_field(struct seq_file *, struct blkg_policy_data *, int);
671:	static u64 blkg_prfill_rwstat_field_recursive(struct seq_file *, struct blkg_policy_data *, int);

File block/blk-core.c:
3370:	bool __blk_end_request(struct request *, blk_status_t, unsigned int);
3388:	void __blk_end_request_all(struct request *, blk_status_t);
3417:	bool __blk_end_request_cur(struct request *, blk_status_t);
1763:	void __blk_put_request(struct request_queue *, struct request *);
186:	void __blk_rq_init(struct request_queue *, struct request *);
481:	void __blk_run_queue(struct request_queue *);
453:	void __blk_run_queue_uncond(struct request_queue *);
1822:	bool bio_attempt_back_merge(struct request_queue *, struct request *, struct bio *);
1866:	bool bio_attempt_discard_merge(struct request_queue *, struct request *, struct bio *);
1843:	bool bio_attempt_front_merge(struct request_queue *, struct request *, struct bio *);
2745:	void blk_account_io_completion(struct request *, unsigned int);
2759:	void blk_account_io_done(struct request *, u64);
2809:	void blk_account_io_start(struct request *, bool);
924:	struct request_queue *blk_alloc_queue(gfp_t);
1018:	struct request_queue *blk_alloc_queue_node(gfp_t, int, spinlock_t *);
1911:	bool blk_attempt_plug_merge(struct request_queue *, struct bio *, unsigned int *, struct request **);
3680:	struct blk_plug_cb *blk_check_plugged(blk_plug_cb_fn, void *, int);
753:	void blk_cleanup_queue(struct request_queue *);
431:	void blk_clear_pm_only(struct request_queue *);
320:	void blk_delay_queue(struct request_queue *, unsigned long);
3963:	int blk_dev_init(void);
625:	void blk_drain_queue(struct request_queue *);
286:	void blk_dump_rq_flags(struct request *, char *);
3328:	bool blk_end_request(struct request *, blk_status_t, unsigned int);
3344:	void blk_end_request_all(struct request *, blk_status_t);
718:	void blk_exit_queue(struct request_queue *);
915:	void blk_exit_rl(struct request_queue *, struct request_list *);
3035:	struct request *blk_fetch_request(struct request_queue *);
3768:	void blk_finish_plug(struct blk_plug *);
3212:	void blk_finish_request(struct request *, blk_status_t);
3705:	void blk_flush_plug_list(struct blk_plug *, bool);
1222:	bool blk_get_queue(struct request_queue *);
1641:	struct request *blk_get_request(struct request_queue *, unsigned int, blk_mq_req_flags_t);
1184:	int blk_init_allocated_queue(struct request_queue *);
1156:	struct request_queue *blk_init_queue(request_fn_proc *, spinlock_t *);
1163:	struct request_queue *blk_init_queue_node(request_fn_proc *, spinlock_t *, int);
1991:	void blk_init_request_from_bio(struct request *, struct bio *);
882:	int blk_init_rl(struct request_list *, struct request_queue *, gfp_t);
2654:	blk_status_t blk_insert_cloned_request(struct request_queue *, struct request *);
3476:	int blk_lld_busy(struct request_queue *);
2888:	struct request *blk_peek_request(struct request_queue *);
1967:	unsigned int blk_plug_queued_count(struct request_queue *);
3800:	void blk_pm_runtime_init(struct request_queue *, struct device *);
2583:	bool blk_poll(struct request_queue *, blk_qc_t);
3920:	void blk_post_runtime_resume(struct request_queue *, int);
3868:	void blk_post_runtime_suspend(struct request_queue *, int);
3895:	void blk_pre_runtime_resume(struct request_queue *);
3836:	int blk_pre_runtime_suspend(struct request_queue *);
536:	void blk_put_queue(struct request_queue *);
1806:	void blk_put_request(struct request *);
676:	void blk_queue_bypass_end(struct request_queue *);
642:	void blk_queue_bypass_start(struct request_queue *);
171:	void blk_queue_congestion_threshold(struct request_queue *);
935:	int blk_queue_enter(struct request_queue *, blk_mq_req_flags_t);
981:	void blk_queue_exit(struct request_queue *);
94:	void blk_queue_flag_clear(unsigned int, struct request_queue *);
79:	void blk_queue_flag_set(unsigned int, struct request_queue *);
133:	bool blk_queue_flag_test_and_clear(unsigned int, struct request_queue *);
112:	bool blk_queue_flag_test_and_set(unsigned int, struct request_queue *);
1673:	void blk_requeue_request(struct request_queue *, struct request *);
3423:	void blk_rq_bio_prep(struct request_queue *, struct request *, struct bio *);
2717:	unsigned int blk_rq_err_bytes(const struct request *);
203:	void blk_rq_init(struct request_queue *, struct request *);
3541:	int blk_rq_prep_clone(struct request *, struct request *, struct bio_set *, gfp_t, int (*)(struct bio *, struct bio *, void *), void *);
3492:	void blk_rq_unprep_clone(struct request *);
524:	void blk_run_queue(struct request_queue *);
506:	void blk_run_queue_async(struct request_queue *);
425:	void blk_set_pm_only(struct request_queue *);
686:	void blk_set_queue_dying(struct request_queue *);
3952:	void blk_set_runtime_active(struct request_queue *);
3612:	void blk_start_plug(struct blk_plug *);
359:	void blk_start_queue(struct request_queue *);
340:	void blk_start_queue_async(struct request_queue *);
3002:	void blk_start_request(struct request *);
247:	int blk_status_to_errno(blk_status_t);
3053:	void blk_steal_bios(struct bio_list *, struct request *);
383:	void blk_stop_queue(struct request_queue *);
411:	void blk_sync_queue(struct request_queue *);
3202:	void blk_unprep_request(struct request *);
1313:	int blk_update_nr_requests(struct request_queue *, unsigned int);
3096:	bool blk_update_request(struct request *, blk_status_t, unsigned int);
2515:	blk_qc_t direct_make_request(struct bio *);
234:	blk_status_t errno_to_blk_status(int);
2389:	blk_qc_t generic_make_request(struct bio *);
3591:	int kblockd_mod_delayed_work_on(int, struct delayed_work *, unsigned long);
3579:	int kblockd_schedule_work(struct work_struct *);
3585:	int kblockd_schedule_work_on(int, struct work_struct *);
1725:	void part_round_stats(struct request_queue *, int, struct hd_struct *);
2548:	blk_qc_t submit_bio(struct bio *);
551:	static void __blk_drain_queue(struct request_queue *, bool);
3300:	static bool __blk_end_bidi_request(struct request *, blk_status_t, unsigned int, unsigned int);
1278:	static void __freed_request(struct request_list *, int);
847:	static void *alloc_request_simple(gfp_t, void *);
859:	static void *alloc_request_size(gfp_t, void *);
300:	static void blk_delay_work(struct work_struct *);
3267:	static bool blk_end_bidi_request(struct request *, blk_status_t, unsigned int, unsigned int);
2003:	static blk_qc_t blk_queue_bio(struct request_queue *, struct bio *);
986:	static void blk_queue_usage_counter_release(struct percpu_ref *);
994:	static void blk_rq_timed_out_timer(struct timer_list *);
1001:	static void blk_timeout_work_empty(struct work_struct *);
3174:	static bool blk_update_bidi_request(struct request *, blk_status_t, unsigned int, unsigned int);
854:	static void free_request_simple(void *, void *);
873:	static void free_request_size(void *, void *);
1297:	static void freed_request(struct request_list *, bool, req_flags_t);
2259:	static bool generic_make_request_checks(struct bio *);
1555:	static struct request *get_request(struct request_queue *, unsigned int, struct bio *, blk_mq_req_flags_t, gfp_t);
2130:	static void handle_bad_sector(struct bio *, sector_t);
1269:	static void ioc_set_batching(struct request_queue *, struct io_context *);
3633:	static int plug_rq_cmp(void *, struct list_head *, struct list_head *);
3648:	static void queue_unplugged(struct request_queue *, unsigned int, bool);
2197:	static int should_fail_bio(struct bio *);

File block/blk-exec.c:
94:	void blk_execute_rq(struct request_queue *, struct gendisk *, struct request *, int);
47:	void blk_execute_rq_nowait(struct request_queue *, struct gendisk *, struct request *, int, rq_end_io_fn *);
19:	static void blk_end_sync_rq(struct request *, blk_status_t);

File block/blk-flush.c:
600:	struct blk_flush_queue *blk_alloc_flush_queue(struct request_queue *, int, int, gfp_t);
630:	void blk_free_flush_queue(struct blk_flush_queue *);
471:	void blk_insert_flush(struct request *);
558:	int blkdev_issue_flush(struct block_device *, gfp_t, sector_t *);
300:	bool is_flush_rq(struct request *);
165:	static bool blk_flush_complete_seq(struct request *, struct blk_flush_queue *, unsigned int, blk_status_t);
135:	static bool blk_flush_queue_rq(struct request *, bool);
393:	static void flush_data_end_io(struct request *, blk_status_t);
221:	static void flush_end_io(struct request *, blk_status_t);
436:	static void mq_flush_data_end_io(struct request *, blk_status_t);

File block/blk-integrity.c:
446:	void blk_integrity_add(struct gendisk *);
143:	int blk_integrity_compare(struct gendisk *, struct gendisk *);
455:	void blk_integrity_del(struct gendisk *);
210:	bool blk_integrity_merge_bio(struct request_queue *, struct request *, struct bio *);
186:	bool blk_integrity_merge_rq(struct request_queue *, struct request *, struct request *);
409:	void blk_integrity_register(struct gendisk *, struct blk_integrity *);
432:	void blk_integrity_unregister(struct gendisk *);
41:	int blk_rq_count_integrity_sg(struct request_queue *, struct bio *);
86:	int blk_rq_map_integrity_sg(struct request_queue *, struct bio *, struct scatterlist *);
387:	static blk_status_t blk_integrity_nop_fn(struct blk_integrity_iter *);
245:	static ssize_t integrity_attr_show(struct kobject *, struct attribute *, char *);
256:	static ssize_t integrity_attr_store(struct kobject *, struct attribute *, const char *, size_t);
329:	static ssize_t integrity_device_show(struct blk_integrity *, char *);
272:	static ssize_t integrity_format_show(struct blk_integrity *, char *);
324:	static ssize_t integrity_generate_show(struct blk_integrity *, char *);
310:	static ssize_t integrity_generate_store(struct blk_integrity *, const char *, size_t);
285:	static ssize_t integrity_interval_show(struct blk_integrity *, char *);
280:	static ssize_t integrity_tag_size_show(struct blk_integrity *, char *);
305:	static ssize_t integrity_verify_show(struct blk_integrity *, char *);
291:	static ssize_t integrity_verify_store(struct blk_integrity *, const char *, size_t);

File block/blk-ioc.c:
268:	int create_task_io_context(struct task_struct *, gfp_t, int);
217:	void exit_io_context(struct task_struct *);
26:	void get_io_context(struct io_context *);
321:	struct io_context *get_task_io_context(struct task_struct *, gfp_t, int);
257:	void ioc_clear_queue(struct request_queue *);
391:	struct io_cq *ioc_create_icq(struct io_context *, struct request_queue *, gfp_t);
351:	struct io_cq *ioc_lookup_icq(struct io_context *, struct request_queue *);
139:	void put_io_context(struct io_context *);
175:	void put_io_context_active(struct io_context *);
437:	static int blk_ioc_init(void);
33:	static void icq_free_icq_rcu(struct callback_head *);
63:	static void ioc_destroy_icq(struct io_cq *);
44:	static void ioc_exit_icq(struct io_cq *);
98:	static void ioc_release_fn(struct work_struct *);

File block/blk-lib.c:
26:	int __blkdev_issue_discard(struct block_device *, sector_t, sector_t, gfp_t, int, struct bio **);
334:	int __blkdev_issue_zeroout(struct block_device *, sector_t, sector_t, gfp_t, struct bio **, unsigned int);
107:	int blkdev_issue_discard(struct block_device *, sector_t, sector_t, gfp_t, unsigned long);
202:	int blkdev_issue_write_same(struct block_device *, sector_t, sector_t, gfp_t, struct page *);
368:	int blkdev_issue_zeroout(struct block_device *, sector_t, sector_t, gfp_t, unsigned int);
222:	static int __blkdev_issue_write_zeroes(struct block_device *, sector_t, sector_t, gfp_t, struct bio **, unsigned int);
278:	static int __blkdev_issue_zero_pages(struct block_device *, sector_t, sector_t, gfp_t, struct bio **);
13:	static struct bio *next_bio(struct bio *, unsigned int, gfp_t);

File block/blk-map.c:
18:	int blk_rq_append_bio(struct request *, struct bio **);
215:	int blk_rq_map_kern(struct request_queue *, struct request *, void *, unsigned int, gfp_t);
155:	int blk_rq_map_user(struct request_queue *, struct request *, struct rq_map_data *, void *, unsigned long, gfp_t);
114:	int blk_rq_map_user_iov(struct request_queue *, struct request *, struct rq_map_data *, const struct iov_iter *, gfp_t);
179:	int blk_rq_unmap_user(struct bio *);
44:	static int __blk_rq_unmap_user(struct bio *);

File block/blk-merge.c:
805:	struct request *attempt_back_merge(struct request_queue *, struct request *);
815:	struct request *attempt_front_merge(struct request_queue *, struct request *);
830:	bool blk_attempt_req_merge(struct request_queue *, struct request *, struct request *);
184:	void blk_queue_split(struct request_queue *, struct bio **);
307:	void blk_recalc_rq_segments(struct request *);
316:	void blk_recount_segments(struct request_queue *, struct bio *);
437:	int blk_rq_map_sg(struct request_queue *, struct request *, struct scatterlist *);
842:	bool blk_rq_merge_ok(struct request *, struct bio *);
642:	void blk_rq_set_mixed_merge(struct request *);
880:	enum elv_merge blk_try_merge(struct request *, struct bio *);
694:	enum elv_merge blk_try_req_merge(struct request *, struct request *);
517:	int ll_back_merge_fn(struct request_queue *, struct request *, struct bio *);
538:	int ll_front_merge_fn(struct request_queue *, struct request *, struct bio *);
232:	static unsigned int __blk_recalc_rq_segments(struct request_queue *, struct bio *, bool);
708:	static struct request *attempt_merge(struct request_queue *, struct request *, struct request *);

File block/blk-mq-cpumap.c:
65:	int blk_mq_hw_queue_to_node(unsigned int *, unsigned int);
33:	int blk_mq_map_queues(struct blk_mq_tag_set *);

File block/blk-mq-debugfs.c:
358:	int __blk_mq_debugfs_rq_show(struct seq_file *, struct request *);
830:	int blk_mq_debugfs_register(struct request_queue *);
895:	int blk_mq_debugfs_register_hctx(struct request_queue *, struct blk_mq_hw_ctx *);
933:	int blk_mq_debugfs_register_hctxs(struct request_queue *);
955:	int blk_mq_debugfs_register_sched(struct request_queue *);
986:	int blk_mq_debugfs_register_sched_hctx(struct request_queue *, struct blk_mq_hw_ctx *);
384:	int blk_mq_debugfs_rq_show(struct seq_file *, void *);
871:	void blk_mq_debugfs_unregister(struct request_queue *);
926:	void blk_mq_debugfs_unregister_hctx(struct blk_mq_hw_ctx *);
946:	void blk_mq_debugfs_unregister_hctxs(struct request_queue *);
980:	void blk_mq_debugfs_unregister_sched(struct request_queue *);
1009:	void blk_mq_debugfs_unregister_sched_hctx(struct blk_mq_hw_ctx *);
85:	static int blk_flags_show(struct seq_file *, const unsigned long, const char * const *, int);
747:	static int blk_mq_debugfs_open(struct inode *, struct file *);
769:	static int blk_mq_debugfs_release(struct inode *, struct file *);
722:	static int blk_mq_debugfs_show(struct seq_file *, void *);
459:	static void blk_mq_debugfs_tags_show(struct seq_file *, struct blk_mq_tags *);
730:	static ssize_t blk_mq_debugfs_write(struct file *, const char *, size_t, loff_t *);
705:	static int ctx_completed_show(void *, struct seq_file *);
713:	static ssize_t ctx_completed_write(void *, const char *, size_t, loff_t *);
671:	static int ctx_dispatched_show(void *, struct seq_file *);
679:	static ssize_t ctx_dispatched_write(void *, const char *, size_t, loff_t *);
688:	static int ctx_merged_show(void *, struct seq_file *);
696:	static ssize_t ctx_merged_write(void *, const char *, size_t, loff_t *);
650:	static void *ctx_rq_list_next(struct seq_file *, void *, loff_t *);
641:	static void *ctx_rq_list_start(struct seq_file *, loff_t *);
657:	static void ctx_rq_list_stop(struct seq_file *, void *);
814:	static bool debugfs_create_files(struct dentry *, void *, const struct blk_mq_debugfs_attr *);
625:	static int hctx_active_show(void *, struct seq_file *);
440:	static int hctx_busy_show(void *, struct seq_file *);
451:	static int hctx_ctx_map_show(void *, struct seq_file *);
633:	static int hctx_dispatch_busy_show(void *, struct seq_file *);
399:	static void *hctx_dispatch_next(struct seq_file *, void *, loff_t *);
390:	static void *hctx_dispatch_start(struct seq_file *, loff_t *);
406:	static void hctx_dispatch_stop(struct seq_file *, void *);
563:	static int hctx_dispatched_show(void *, struct seq_file *);
580:	static ssize_t hctx_dispatched_write(void *, const char *, size_t, loff_t *);
261:	static int hctx_flags_show(void *, struct seq_file *);
544:	static int hctx_io_poll_show(void *, struct seq_file *);
554:	static ssize_t hctx_io_poll_write(void *, const char *, size_t, loff_t *);
591:	static int hctx_queued_show(void *, struct seq_file *);
599:	static ssize_t hctx_queued_write(void *, const char *, size_t, loff_t *);
608:	static int hctx_run_show(void *, struct seq_file *);
616:	static ssize_t hctx_run_write(void *, const char *, size_t, loff_t *);
527:	static int hctx_sched_tags_bitmap_show(void *, struct seq_file *);
510:	static int hctx_sched_tags_show(void *, struct seq_file *);
430:	static void hctx_show_busy_rq(struct request *, void *, bool);
234:	static int hctx_state_show(void *, struct seq_file *);
493:	static int hctx_tags_bitmap_show(void *, struct seq_file *);
476:	static int hctx_tags_show(void *, struct seq_file *);
27:	static void print_stat(struct seq_file *, struct blk_rq_stat *);
105:	static int queue_pm_only_show(void *, struct seq_file *);
37:	static int queue_poll_stat_show(void *, struct seq_file *);
63:	static void *queue_requeue_list_next(struct seq_file *, void *, loff_t *);
54:	static void *queue_requeue_list_start(struct seq_file *, loff_t *);
70:	static void queue_requeue_list_stop(struct seq_file *, void *);
146:	static int queue_state_show(void *, struct seq_file *);
156:	static ssize_t queue_state_write(void *, const char *, size_t, loff_t *);
193:	static int queue_write_hint_show(void *, struct seq_file *);
204:	static ssize_t queue_write_hint_store(void *, const char *, size_t, loff_t *);

File block/blk-mq-debugfs.h:
86:	static int queue_zone_wlock_show(void *, struct seq_file *);

File block/blk-mq-pci.c:
34:	int blk_mq_pci_map_queues(struct blk_mq_tag_set *, struct pci_dev *, int);

File block/blk-mq-rdma.c:
32:	int blk_mq_rdma_map_queues(struct blk_mq_tag_set *, struct ib_device *, int);

File block/blk-mq-sched.c:
339:	bool __blk_mq_sched_bio_merge(struct request_queue *, struct bio *);
283:	bool blk_mq_bio_list_merge(struct request_queue *, struct list_head *, struct bio *);
590:	void blk_mq_exit_sched(struct request_queue *, struct elevator_queue *);
536:	int blk_mq_init_sched(struct request_queue *, struct elevator_type *);
34:	void blk_mq_sched_assign_ioc(struct request *, struct bio *);
190:	void blk_mq_sched_dispatch_requests(struct blk_mq_hw_ctx *);
19:	void blk_mq_sched_free_hctx_data(struct request_queue *, void (*)(struct blk_mq_hw_ctx *));
400:	void blk_mq_sched_insert_request(struct request *, bool, bool, bool);
459:	void blk_mq_sched_insert_requests(struct request_queue *, struct blk_mq_ctx *, struct list_head *, bool);
57:	void blk_mq_sched_mark_restart_hctx(struct blk_mq_hw_ctx *);
370:	void blk_mq_sched_request_inserted(struct request *);
66:	void blk_mq_sched_restart(struct blk_mq_hw_ctx *);
363:	bool blk_mq_sched_try_insert_merge(struct request_queue *, struct request *, struct list_head *);
247:	bool blk_mq_sched_try_merge(struct request_queue *, struct bio *, struct request **);
146:	static void blk_mq_do_dispatch_ctx(struct blk_mq_hw_ctx *);
91:	static void blk_mq_do_dispatch_sched(struct blk_mq_hw_ctx *);
526:	static void blk_mq_sched_tags_teardown(struct request_queue *);

File block/blk-mq-sysfs.c:
325:	int __blk_mq_register_dev(struct device *, struct request_queue *);
293:	void blk_mq_hctx_kobj_init(struct blk_mq_hw_ctx *);
360:	int blk_mq_register_dev(struct device *, struct request_queue *);
298:	void blk_mq_sysfs_deinit(struct request_queue *);
310:	void blk_mq_sysfs_init(struct request_queue *);
388:	int blk_mq_sysfs_register(struct request_queue *);
372:	void blk_mq_sysfs_unregister(struct request_queue *);
276:	void blk_mq_unregister_dev(struct device *, struct request_queue *);
25:	static void blk_mq_ctx_sysfs_release(struct kobject *);
166:	static ssize_t blk_mq_hw_sysfs_cpus_show(struct blk_mq_hw_ctx *, char *);
160:	static ssize_t blk_mq_hw_sysfs_nr_reserved_tags_show(struct blk_mq_hw_ctx *, char *);
154:	static ssize_t blk_mq_hw_sysfs_nr_tags_show(struct blk_mq_hw_ctx *, char *);
33:	static void blk_mq_hw_sysfs_release(struct kobject *);
107:	static ssize_t blk_mq_hw_sysfs_show(struct kobject *, struct attribute *, char *);
130:	static ssize_t blk_mq_hw_sysfs_store(struct kobject *, struct attribute *, const char *, size_t);
254:	static int blk_mq_register_hctx(struct blk_mq_hw_ctx *);
17:	static void blk_mq_sysfs_release(struct kobject *);
61:	static ssize_t blk_mq_sysfs_show(struct kobject *, struct attribute *, char *);
84:	static ssize_t blk_mq_sysfs_store(struct kobject *, struct attribute *, const char *, size_t);
240:	static void blk_mq_unregister_hctx(struct blk_mq_hw_ctx *);

File block/blk-mq-tag.c:
31:	bool __blk_mq_tag_busy(struct blk_mq_hw_ctx *);
54:	void __blk_mq_tag_idle(struct blk_mq_hw_ctx *);
453:	void blk_mq_free_tags(struct blk_mq_tags *);
109:	unsigned int blk_mq_get_tag(struct blk_mq_alloc_data *);
17:	bool blk_mq_has_free_tags(struct blk_mq_tags *);
429:	struct blk_mq_tags *blk_mq_init_tags(unsigned int, unsigned int, int, int);
201:	void blk_mq_put_tag(struct blk_mq_hw_ctx *, struct blk_mq_tags *, struct blk_mq_ctx *, unsigned int);
371:	void blk_mq_queue_tag_busy_iter(struct request_queue *, busy_iter_fn *, void *);
460:	int blk_mq_tag_update_depth(struct blk_mq_hw_ctx *, struct blk_mq_tags **, unsigned int, bool);
43:	void blk_mq_tag_wakeup_all(struct blk_mq_tags *, bool);
329:	void blk_mq_tagset_busy_iter(struct blk_mq_tag_set *, busy_tag_iter_fn *, void *);
357:	void blk_mq_tagset_wait_completed_request(struct blk_mq_tag_set *);
525:	u32 blk_mq_unique_tag(struct request *);
97:	static int __blk_mq_get_tag(struct blk_mq_alloc_data *, struct sbitmap_queue *);
222:	static struct request *blk_mq_find_and_get_req(struct blk_mq_tags *, unsigned int);
341:	static void blk_mq_tagset_count_completed_rqs(struct request *, void *, bool);
236:	static bool bt_iter(struct sbitmap *, unsigned int, void *);
282:	static bool bt_tags_iter(struct sbitmap *, unsigned int, void *);

File block/blk-mq-virtio.c:
32:	int blk_mq_virtio_map_queues(struct blk_mq_tag_set *, struct virtio_device *, int);

File block/blk-mq.c:
577:	void __blk_mq_end_request(struct request *, blk_status_t);
1675:	void __blk_mq_insert_request(struct blk_mq_hw_ctx *, struct request *, bool);
172:	void blk_freeze_queue(struct request_queue *);
137:	void blk_freeze_queue_start(struct request_queue *);
817:	void blk_mq_add_to_requeue_list(struct request *, bool, bool);
456:	struct request *blk_mq_alloc_request(struct request_queue *, unsigned int, blk_mq_req_flags_t);
482:	struct request *blk_mq_alloc_request_hctx(struct request_queue *, unsigned int, blk_mq_req_flags_t, unsigned int);
2136:	struct blk_mq_tags *blk_mq_alloc_rq_map(struct blk_mq_tag_set *, unsigned int, unsigned int, unsigned int);
2188:	int blk_mq_alloc_rqs(struct blk_mq_tag_set *, struct blk_mq_tags *, unsigned int, unsigned int);
3029:	int blk_mq_alloc_tag_set(struct blk_mq_tag_set *);
328:	bool blk_mq_can_queue(struct blk_mq_hw_ctx *);
698:	void blk_mq_complete_request(struct request *);
849:	void blk_mq_delay_kick_requeue_list(struct request_queue *, unsigned long);
1483:	void blk_mq_delay_run_hw_queue(struct blk_mq_hw_ctx *, unsigned long);
1536:	void blk_mq_delay_run_hw_queues(struct request_queue *, unsigned long);
1028:	struct request *blk_mq_dequeue_from_ctx(struct blk_mq_hw_ctx *, struct blk_mq_ctx *);
1214:	bool blk_mq_dispatch_rq_list(struct request_queue *, struct list_head *, bool);
599:	void blk_mq_end_request(struct request *, blk_status_t);
2937:	void blk_mq_exit_queue(struct request_queue *);
993:	void blk_mq_flush_busy_ctxs(struct blk_mq_hw_ctx *, struct list_head *);
1738:	void blk_mq_flush_plug_list(struct blk_plug *, bool);
624:	void blk_mq_force_complete_rq(struct request *);
543:	void blk_mq_free_request(struct request *);
2126:	void blk_mq_free_rq_map(struct blk_mq_tags *);
2094:	void blk_mq_free_rqs(struct blk_mq_tag_set *, struct blk_mq_tags *, unsigned int);
3103:	void blk_mq_free_tag_set(struct blk_mq_tag_set *);
187:	void blk_mq_freeze_queue(struct request_queue *);
153:	void blk_mq_freeze_queue_wait(struct request_queue *);
159:	int blk_mq_freeze_queue_wait_timeout(struct request_queue *, unsigned long);
1051:	bool blk_mq_get_driver_tag(struct request *);
109:	void blk_mq_in_flight(struct request_queue *, struct hd_struct *, unsigned int *);
128:	void blk_mq_in_flight_rw(struct request_queue *, struct hd_struct *, unsigned int *);
2848:	struct request_queue *blk_mq_init_allocated_queue(struct blk_mq_tag_set *, struct request_queue *);
2739:	struct request_queue *blk_mq_init_queue(struct blk_mq_tag_set *);
1707:	void blk_mq_insert_requests(struct blk_mq_hw_ctx *, struct blk_mq_ctx *, struct list_head *);
843:	void blk_mq_kick_requeue_list(struct request_queue *);
903:	void blk_mq_put_rq_ref(struct request *);
1557:	bool blk_mq_queue_stopped(struct request_queue *);
257:	void blk_mq_quiesce_queue(struct request_queue *);
263:	void blk_mq_quiesce_queue_internal(struct request_queue *);
224:	void blk_mq_quiesce_queue_nowait(struct request_queue *);
286:	bool blk_mq_quiesce_queue_without_rcu(struct request_queue *);
2714:	void blk_mq_release(struct request_queue *);
1690:	void blk_mq_request_bypass_insert(struct request *, bool, bool);
712:	int blk_mq_request_completed(struct request *);
1904:	blk_status_t blk_mq_request_issue_directly(struct request *);
706:	int blk_mq_request_started(struct request *);
768:	void blk_mq_requeue_request(struct request *, bool);
1489:	bool blk_mq_run_hw_queue(struct blk_mq_hw_ctx *, bool);
1517:	void blk_mq_run_hw_queues(struct request_queue *, bool);
1606:	void blk_mq_start_hw_queue(struct blk_mq_hw_ctx *);
1614:	void blk_mq_start_hw_queues(struct request_queue *);
718:	void blk_mq_start_request(struct request *);
1624:	void blk_mq_start_stopped_hw_queue(struct blk_mq_hw_ctx *, bool);
1634:	void blk_mq_start_stopped_hw_queues(struct request_queue *, bool);
1579:	void blk_mq_stop_hw_queue(struct blk_mq_hw_ctx *);
1596:	void blk_mq_stop_hw_queues(struct request_queue *);
857:	struct request *blk_mq_tag_to_rq(struct blk_mq_tags *, unsigned int);
1919:	void blk_mq_try_issue_list_directly(struct blk_mq_hw_ctx *, struct list_head *);
197:	void blk_mq_unfreeze_queue(struct request_queue *);
307:	void blk_mq_unquiesce_queue(struct request_queue *);
313:	void blk_mq_unquiesce_queue_internal(struct request_queue *);
3298:	void blk_mq_update_nr_hw_queues(struct blk_mq_tag_set *, int);
3118:	int blk_mq_update_nr_requests(struct request_queue *, unsigned int);
318:	void blk_mq_wake_waiters(struct request_queue *);
2504:	static bool __blk_mq_alloc_rq_map(struct blk_mq_tag_set *, int);
607:	static void __blk_mq_complete_request_remote(void *);
1462:	static void __blk_mq_delay_run_hw_queue(struct blk_mq_hw_ctx *, bool, unsigned long);
528:	static void __blk_mq_free_request(struct request *);
230:	static void __blk_mq_quiesce_queue(struct request_queue *, unsigned int);
751:	static void __blk_mq_requeue_request(struct request *);
1365:	static void __blk_mq_run_hw_queue(struct blk_mq_hw_ctx *);
1843:	static blk_status_t __blk_mq_try_issue_directly(struct blk_mq_hw_ctx *, struct request *, blk_qc_t *, bool);
1787:	static void blk_mq_bio_to_request(struct request *, struct bio *);
911:	static void blk_mq_check_expired(struct blk_mq_hw_ctx *, struct request *, void *, bool);
92:	static void blk_mq_check_inflight(struct blk_mq_hw_ctx *, struct request *, void *, bool);
118:	static void blk_mq_check_inflight_rw(struct blk_mq_hw_ctx *, struct request *, void *, bool);
1080:	static int blk_mq_dispatch_wake(wait_queue_entry_t *, unsigned int, int, void *);
2333:	static void blk_mq_exit_hctx(struct request_queue *, struct blk_mq_tag_set *, struct blk_mq_hw_ctx *, unsigned int);
2523:	static void blk_mq_free_map_and_requests(struct blk_mq_tag_set *, unsigned int);
396:	static struct request *blk_mq_get_request(struct request_queue *, struct bio *, unsigned int, struct blk_mq_alloc_data *);
74:	static void blk_mq_hctx_mark_pending(struct blk_mq_hw_ctx *, struct blk_mq_ctx *);
2270:	static int blk_mq_hctx_notify_dead(unsigned int, struct hlist_node *);
3501:	static int blk_mq_init(void);
1941:	static blk_qc_t blk_mq_make_request(struct request_queue *, struct bio *);
2533:	static void blk_mq_map_swqueue(struct request_queue *);
3475:	static bool blk_mq_poll(struct request_queue *, blk_qc_t);
44:	static int blk_mq_poll_stats_bkt(const struct request *);
3329:	static void blk_mq_poll_stats_fn(struct blk_stat_callback *);
2789:	static void blk_mq_realloc_hw_ctxs(struct blk_mq_tag_set *, struct request_queue *);
780:	static void blk_mq_requeue_work(struct work_struct *);
1644:	static void blk_mq_run_work_fn(struct work_struct *);
927:	static void blk_mq_timeout_work(struct work_struct *);
1885:	static void blk_mq_try_issue_directly(struct blk_mq_hw_ctx *, struct request *, blk_qc_t *);
1172:	static void blk_mq_update_dispatch_busy(struct blk_mq_hw_ctx *, bool);
2999:	static int blk_mq_update_queue_map(struct blk_mq_tag_set *);
2627:	static void blk_mq_update_tag_set_depth(struct blk_mq_tag_set *, bool);
1009:	static bool dispatch_rq_from_ctx(struct sbitmap *, unsigned int, void *);
976:	static bool flush_busy_ctx(struct sbitmap *, unsigned int, void *);
1728:	static int plug_ctx_cmp(void *, struct list_head *, struct list_head *);
2612:	static void queue_set_hctx_shared(struct request_queue *, bool);

File block/blk-rq-qos.c:
110:	bool rq_depth_calc_max_depth(struct rq_depth *);
177:	bool rq_depth_scale_down(struct rq_depth *, bool);
158:	bool rq_depth_scale_up(struct rq_depth *);
30:	void rq_qos_cleanup(struct request_queue *, struct bio *);
40:	void rq_qos_done(struct request_queue *, struct request *);
97:	void rq_qos_done_bio(struct request_queue *, struct bio *);
197:	void rq_qos_exit(struct request_queue *);
50:	void rq_qos_issue(struct request_queue *, struct request *);
60:	void rq_qos_requeue(struct request_queue *, struct request *);
70:	void rq_qos_throttle(struct request_queue *, struct bio *, spinlock_t *);
87:	void rq_qos_track(struct request_queue *, struct request *, struct bio *);
25:	bool rq_wait_inc_below(struct rq_wait *, unsigned int);

File block/blk-settings.c:
703:	int bdev_stack_limits(struct queue_limits *, struct block_device *, sector_t);
446:	void blk_limits_io_min(struct queue_limits *, unsigned int);
491:	void blk_limits_io_opt(struct queue_limits *, unsigned int);
427:	void blk_queue_alignment_offset(struct request_queue *, unsigned int);
190:	void blk_queue_bounce_limit(struct request_queue *, u64);
269:	void blk_queue_chunk_sectors(struct request_queue *, unsigned int);
852:	void blk_queue_dma_alignment(struct request_queue *, int);
798:	int blk_queue_dma_drain(struct request_queue *, dma_drain_needed_fn *, void *, unsigned int);
754:	void blk_queue_dma_pad(struct request_queue *, unsigned int);
881:	void blk_queue_flush_queueable(struct request_queue *, bool);
472:	void blk_queue_io_min(struct request_queue *, unsigned int);
510:	void blk_queue_io_opt(struct request_queue *, unsigned int);
76:	void blk_queue_lld_busy(struct request_queue *, lld_busy_fn *);
382:	void blk_queue_logical_block_size(struct request_queue *, unsigned short);
163:	void blk_queue_make_request(struct request_queue *, make_request_fn *);
281:	void blk_queue_max_discard_sectors(struct request_queue *, unsigned int);
344:	void blk_queue_max_discard_segments(struct request_queue *, unsigned short);
237:	void blk_queue_max_hw_sectors(struct request_queue *, unsigned int);
360:	void blk_queue_max_segment_size(struct request_queue *, unsigned int);
323:	void blk_queue_max_segments(struct request_queue *, unsigned short);
294:	void blk_queue_max_write_same_sectors(struct request_queue *, unsigned int);
307:	void blk_queue_max_write_zeroes_sectors(struct request_queue *, unsigned int);
404:	void blk_queue_physical_block_size(struct request_queue *, unsigned int);
34:	void blk_queue_prep_rq(struct request_queue *, prep_rq_fn *);
69:	void blk_queue_rq_timed_out(struct request_queue *, rq_timed_out_fn *);
63:	void blk_queue_rq_timeout(struct request_queue *, unsigned int);
819:	void blk_queue_segment_boundary(struct request_queue *, unsigned long);
57:	void blk_queue_softirq_done(struct request_queue *, softirq_done_fn *);
529:	void blk_queue_stack_limits(struct request_queue *, struct request_queue *);
51:	void blk_queue_unprep_rq(struct request_queue *, unprep_rq_fn *);
872:	void blk_queue_update_dma_alignment(struct request_queue *, int);
770:	void blk_queue_update_dma_pad(struct request_queue *, unsigned int);
836:	void blk_queue_virt_boundary(struct request_queue *, unsigned long);
911:	void blk_queue_write_cache(struct request_queue *, bool, bool);
89:	void blk_set_default_limits(struct queue_limits *);
896:	void blk_set_queue_depth(struct request_queue *, unsigned int);
125:	void blk_set_stacking_limits(struct queue_limits *);
556:	int blk_stack_limits(struct queue_limits *, struct queue_limits *, sector_t);
724:	void disk_stack_limits(struct gendisk *, struct block_device *, sector_t);
928:	static int blk_settings_init(void);

File block/blk-softirq.c:
98:	void __blk_complete_request(struct request *);
159:	void blk_complete_request(struct request *);
23:	static void blk_done_softirq(struct softirq_action *);
83:	static int blk_softirq_cpu_dead(unsigned int);
168:	static int blk_softirq_init(void);
42:	static void trigger_softirq(void *);

File block/blk-stat.c:
194:	struct blk_queue_stats *blk_alloc_queue_stats(void);
209:	void blk_free_queue_stats(struct blk_queue_stats *);
42:	void blk_rq_stat_add(struct blk_rq_stat *, u64);
20:	void blk_rq_stat_init(struct blk_rq_stat *);
28:	void blk_rq_stat_sum(struct blk_rq_stat *, struct blk_rq_stat *);
50:	void blk_stat_add(struct request *, u64);
135:	void blk_stat_add_callback(struct request_queue *, struct blk_stat_callback *);
101:	struct blk_stat_callback *blk_stat_alloc_callback(void (*)(struct blk_stat_callback *), int (*)(const struct request *), unsigned int, void *);
186:	void blk_stat_enable_accounting(struct request_queue *);
179:	void blk_stat_free_callback(struct blk_stat_callback *);
156:	void blk_stat_remove_callback(struct request_queue *, struct blk_stat_callback *);
169:	static void blk_stat_free_callback_rcu(struct callback_head *);
78:	static void blk_stat_timer_fn(struct timer_list *);

File block/blk-sysfs.c:
891:	int blk_register_queue(struct gendisk *);
971:	void blk_unregister_queue(struct gendisk *);
815:	static void __blk_release_queue(struct work_struct *);
791:	static void blk_free_queue_rcu(struct callback_head *);
867:	static void blk_release_queue(struct kobject *);
750:	static ssize_t queue_attr_show(struct kobject *, struct attribute *, char *);
770:	static ssize_t queue_attr_store(struct kobject *, struct attribute *, const char *, size_t);
156:	static ssize_t queue_chunk_sectors_show(struct request_queue *, char *);
515:	static ssize_t queue_dax_show(struct request_queue *, char *);
171:	static ssize_t queue_discard_granularity_show(struct request_queue *, char *);
176:	static ssize_t queue_discard_max_hw_show(struct request_queue *, char *);
183:	static ssize_t queue_discard_max_show(struct request_queue *, char *);
189:	static ssize_t queue_discard_max_store(struct request_queue *, const char *, size_t);
212:	static ssize_t queue_discard_zeroes_data_show(struct request_queue *, char *);
510:	static ssize_t queue_fua_show(struct request_queue *, char *);
161:	static ssize_t queue_io_min_show(struct request_queue *, char *);
166:	static ssize_t queue_io_opt_show(struct request_queue *, char *);
146:	static ssize_t queue_logical_block_size_show(struct request_queue *, char *);
127:	static ssize_t queue_max_discard_segments_show(struct request_queue *, char *);
254:	static ssize_t queue_max_hw_sectors_show(struct request_queue *, char *);
133:	static ssize_t queue_max_integrity_segments_show(struct request_queue *, char *);
115:	static ssize_t queue_max_sectors_show(struct request_queue *, char *);
230:	static ssize_t queue_max_sectors_store(struct request_queue *, const char *, size_t);
138:	static ssize_t queue_max_segment_size_show(struct request_queue *, char *);
122:	static ssize_t queue_max_segments_show(struct request_queue *, char *);
304:	static ssize_t queue_nomerges_show(struct request_queue *, char *);
310:	static ssize_t queue_nomerges_store(struct request_queue *, const char *, size_t);
151:	static ssize_t queue_physical_block_size_show(struct request_queue *, char *);
366:	static ssize_t queue_poll_delay_show(struct request_queue *, char *);
378:	static ssize_t queue_poll_delay_store(struct request_queue *, const char *, size_t);
398:	static ssize_t queue_poll_show(struct request_queue *, char *);
403:	static ssize_t queue_poll_store(struct request_queue *, const char *, size_t);
93:	static ssize_t queue_ra_show(struct request_queue *, char *);
102:	static ssize_t queue_ra_store(struct request_queue *, const char *, size_t);
61:	static ssize_t queue_requests_show(struct request_queue *, char *);
67:	static ssize_t queue_requests_store(struct request_queue *, const char *, size_t);
331:	static ssize_t queue_rq_affinity_show(struct request_queue *, char *);
340:	static ssize_t queue_rq_affinity_store(struct request_queue *, const char *, size_t);
289:	static ssize_t queue_show_iostats(struct request_queue *, char *);
287:	static ssize_t queue_show_nonrot(struct request_queue *, char *);
288:	static ssize_t queue_show_random(struct request_queue *, char *);
289:	static ssize_t queue_store_iostats(struct request_queue *, const char *, size_t);
287:	static ssize_t queue_store_nonrot(struct request_queue *, const char *, size_t);
288:	static ssize_t queue_store_random(struct request_queue *, const char *, size_t);
424:	static ssize_t queue_wb_lat_show(struct request_queue *, char *);
432:	static ssize_t queue_wb_lat_store(struct request_queue *, const char *, size_t);
480:	static ssize_t queue_wc_show(struct request_queue *, char *);
488:	static ssize_t queue_wc_store(struct request_queue *, const char *, size_t);
217:	static ssize_t queue_write_same_max_show(struct request_queue *, char *);
223:	static ssize_t queue_write_zeroes_max_show(struct request_queue *, char *);
292:	static ssize_t queue_zoned_show(struct request_queue *, char *);

File block/blk-tag.c:
62:	void __blk_queue_free_tags(struct request_queue *);
37:	void blk_free_tags(struct blk_queue_tag *);
148:	struct blk_queue_tag *blk_init_tags(int, int);
262:	void blk_queue_end_tag(struct request_queue *, struct request *);
24:	struct request *blk_queue_find_tag(struct request_queue *, int);
83:	void blk_queue_free_tags(struct request_queue *);
164:	int blk_queue_init_tags(struct request_queue *, int, struct blk_queue_tag *, int);
203:	int blk_queue_resize_tags(struct request_queue *, int);
309:	int blk_queue_start_tag(struct request_queue *, struct request *);
122:	static struct blk_queue_tag *__blk_queue_init_tags(struct request_queue *, int, int);
90:	static int init_tag_map(struct request_queue *, struct blk_queue_tag *, int);

File block/blk-throttle.c:
2179:	bool blk_throtl_bio(struct request_queue *, struct blkcg_gq *, struct bio *);
2401:	void blk_throtl_drain(struct request_queue *);
2480:	void blk_throtl_exit(struct request_queue *);
2437:	int blk_throtl_init(struct request_queue *);
2491:	void blk_throtl_register_queue(struct request_queue *);
707:	static void __throtl_dequeue_tg(struct throtl_grp *);
1320:	static void blk_throtl_dispatch_work_fn(struct work_struct *);
267:	static struct throtl_data *sq_to_td(struct throtl_service_queue *);
295:	static uint64_t tg_bps_limit(struct throtl_grp *, int);
1383:	static void tg_conf_updated(struct throtl_grp *, bool);
1131:	static void tg_dispatch_one_bio(struct throtl_grp *, bool);
2378:	static void tg_drain_bios(struct throtl_service_queue *);
325:	static unsigned int tg_iops_limit(struct throtl_grp *, int);
1803:	static unsigned long tg_last_low_overflow_time(struct throtl_grp *);
984:	static bool tg_may_dispatch(struct throtl_grp *, struct bio *, unsigned long *);
1347:	static u64 tg_prfill_conf_u64(struct seq_file *, struct blkg_policy_data *, int);
1358:	static u64 tg_prfill_conf_uint(struct seq_file *, struct blkg_policy_data *, int);
1562:	static u64 tg_prfill_limit(struct seq_file *, struct blkg_policy_data *, int);
1369:	static int tg_print_conf_u64(struct seq_file *, void *);
1376:	static int tg_print_conf_uint(struct seq_file *, void *);
1625:	static int tg_print_limit(struct seq_file *, void *);
1464:	static ssize_t tg_set_conf(struct kernfs_open_file *, char *, size_t, bool, loff_t);
1502:	static ssize_t tg_set_conf_u64(struct kernfs_open_file *, char *, size_t, loff_t);
1508:	static ssize_t tg_set_conf_uint(struct kernfs_open_file *, char *, size_t, loff_t);
1632:	static ssize_t tg_set_limit(struct kernfs_open_file *, char *, size_t, loff_t);
1095:	static void tg_update_disptime(struct throtl_grp *);
550:	static void tg_update_has_rules(struct throtl_grp *);
1071:	static void throtl_add_bio_tg(struct bio *, struct throtl_qnode *, struct throtl_grp *);
1895:	static bool throtl_can_upgrade(struct throtl_data *, struct throtl_grp *);
1041:	static void throtl_charge_bio(struct throtl_grp *, struct bio *);
701:	static void throtl_enqueue_tg(struct throtl_grp *);
2546:	static int throtl_init(void);
484:	static struct blkg_policy_data *throtl_pd_alloc(gfp_t, int);
616:	static void throtl_pd_free(struct blkg_policy_data *);
519:	static void throtl_pd_init(struct blkg_policy_data *);
601:	static void throtl_pd_offline(struct blkg_policy_data *);
563:	static void throtl_pd_online(struct blkg_policy_data *);
423:	static struct bio *throtl_peek_queued(struct list_head *);
1252:	static void throtl_pending_timer_fn(struct timer_list *);
450:	static struct bio *throtl_pop_queued(struct list_head *, struct throtl_grp **);
409:	static void throtl_qnode_add_bio(struct bio *, struct throtl_qnode *, struct list_head *);
625:	static struct throtl_grp *throtl_rb_first(struct throtl_service_queue *);
757:	static bool throtl_schedule_next_dispatch(struct throtl_service_queue *, bool);
1206:	static int throtl_select_dispatch(struct throtl_service_queue *);
1830:	static bool throtl_tg_is_idle(struct throtl_grp *);
1944:	static void throtl_upgrade_state(struct throtl_data *);

File block/blk-timeout.c:
154:	void blk_abort_request(struct request *);
192:	void blk_add_timer(struct request *);
76:	void blk_delete_timer(struct request *);
173:	unsigned long blk_rq_timeout(unsigned long);
126:	void blk_timeout_work(struct work_struct *);
81:	static void blk_rq_timed_out(struct request *);

File block/blk-wbt.c:
733:	u64 wbt_default_latency_nsec(struct request_queue *);
771:	void wbt_disable_default(struct request_queue *);
712:	void wbt_enable_default(struct request_queue *);
432:	u64 wbt_get_min_lat(struct request_queue *);
796:	int wbt_init(struct request_queue *);
662:	void wbt_issue(struct rq_qos *, struct request *);
682:	void wbt_requeue(struct rq_qos *, struct request *);
440:	void wbt_set_min_lat(struct request_queue *, u64);
693:	void wbt_set_queue_depth(struct request_queue *, unsigned int);
702:	void wbt_set_write_cache(struct request_queue *, bool);
424:	void wbt_update_limits(struct request_queue *);
172:	static void __wbt_done(struct rq_qos *, enum wbt_flags);
411:	static void __wbt_update_limits(struct rq_wb *);
606:	static enum wbt_flags bio_to_wbt_flags(struct rq_wb *, struct bio *);
299:	static void calc_wb_limits(struct rq_wb *);
331:	static void rwb_arm_timer(struct rq_wb *);
290:	static void rwb_trace_step(struct rq_wb *, const char *);
118:	static void rwb_wake_all(struct rq_wb *);
322:	static void scale_down(struct rq_wb *, bool);
312:	static void scale_up(struct rq_wb *);
355:	static void wb_timer_fn(struct blk_stat_callback *);
86:	static void wb_timestamp(struct rq_wb *, unsigned long *);
625:	static void wbt_cleanup(struct rq_qos *, struct bio *);
745:	static int wbt_data_dir(const struct request *);
188:	static void wbt_done(struct rq_qos *, struct request *);
758:	static void wbt_exit(struct rq_qos *);
130:	static void wbt_rqw_done(struct rq_wb *, struct rq_wait *, enum wbt_flags);
656:	static void wbt_track(struct rq_qos *, struct request *, struct bio *);
638:	static void wbt_wait(struct rq_qos *, struct bio *, spinlock_t *);
506:	static int wbt_wake_function(struct wait_queue_entry *, unsigned int, int, void *);

File block/bounce.c:
354:	void blk_queue_bounce(struct request_queue *, struct bio **);
106:	int init_emergency_isa_pool(void);
162:	static void bounce_end_io(struct bio *, mempool_t *);
207:	static void bounce_end_io_read(struct bio *);
212:	static void bounce_end_io_read_isa(struct bio *);
186:	static void bounce_end_io_write(struct bio *);
191:	static void bounce_end_io_write_isa(struct bio *);
132:	static void copy_to_high_bio_irq(struct bio *, struct bio *);
95:	static void *mempool_alloc_pages_isa(gfp_t, void *);

File block/bsg-lib.c:
155:	void bsg_job_done(struct bsg_job *, int, unsigned int);
141:	int bsg_job_get(struct bsg_job *);
135:	void bsg_job_put(struct bsg_job *);
306:	struct request_queue *bsg_setup_queue(struct device *, const char *, bsg_job_fn *, int);
292:	static void bsg_exit_rq(struct request_queue *, struct request *);
270:	static int bsg_init_rq(struct request_queue *, struct request *, gfp_t);
281:	static void bsg_initialize_rq(struct request *);
175:	static int bsg_map_buffer(struct bsg_buffer *, struct request *);
235:	static void bsg_request_fn(struct request_queue *);
168:	static void bsg_softirq_done(struct request *);
122:	static void bsg_teardown_job(struct kref *);
34:	static int bsg_transport_check_proto(struct sg_io_v4 *);
55:	static int bsg_transport_complete_rq(struct request *, struct sg_io_v4 *);
44:	static int bsg_transport_fill_hdr(struct request *, struct sg_io_v4 *, fmode_t);
104:	static void bsg_transport_free_rq(struct request *);

File block/bsg.c:
463:	int bsg_register_queue(struct request_queue *, struct device *, const char *, const struct bsg_ops *);
520:	int bsg_scsi_register_queue(struct request_queue *, struct device *);
446:	void bsg_unregister_queue(struct request_queue *);
533:	static char *bsg_devnode(struct device *, umode_t *);
538:	static int bsg_init(void);
366:	static long bsg_ioctl(struct file *, unsigned int, unsigned long);
345:	static int bsg_open(struct inode *, struct file *);
358:	static int bsg_release(struct inode *, struct file *);
64:	static int bsg_scsi_check_proto(struct sg_io_v4 *);
91:	static int bsg_scsi_complete_rq(struct request *, struct sg_io_v4 *);
72:	static int bsg_scsi_fill_hdr(struct request *, struct sg_io_v4 *, fmode_t);
129:	static void bsg_scsi_free_rq(struct request *);

File block/cfq-iosched.c:
2617:	static void __cfq_set_active_queue(struct cfq_data *, struct cfq_queue *);
1820:	static int __cfq_set_weight(struct cgroup_subsys_state *, u64, bool, bool, bool);
2647:	static void __cfq_slice_expired(struct cfq_data *, struct cfq_queue *, bool);
3866:	static void __cfq_update_io_thinktime(struct cfq_ttime *, u64);
1760:	static ssize_t __cfqg_set_weight_device(struct kernfs_open_file *, char *, size_t, bool, bool, loff_t);
2476:	static void cfq_activate_request(struct request_queue *, struct request *);
2420:	static void cfq_add_rq_rb(struct request *);
2579:	static int cfq_allow_bio_merge(struct request_queue *, struct request *, struct bio *);
2605:	static int cfq_allow_rq_merge(struct request_queue *, struct request *, struct request *);
4709:	static ssize_t cfq_back_seek_max_show(struct elevator_queue *, char *);
4757:	static ssize_t cfq_back_seek_max_store(struct elevator_queue *, const char *, size_t);
4710:	static ssize_t cfq_back_seek_penalty_show(struct elevator_queue *, char *);
4758:	static ssize_t cfq_back_seek_penalty_store(struct elevator_queue *, const char *, size_t);
2540:	static void cfq_bio_merged(struct request_queue *, struct request *, struct bio *);
1088:	static struct request *cfq_choose_req(struct request *, struct request *, sector_t, struct cfq_data *, struct cfq_data *);
2823:	static struct cfq_queue *cfq_close_cooperator(struct cfq_data *, struct cfq_queue *);
4216:	static void cfq_completed_request(struct request_queue *, struct request *);
1574:	static struct blkcg_policy_data *cfq_cpd_alloc(gfp_t);
1602:	static void cfq_cpd_bind(struct blkcg_policy_data *);
1597:	static void cfq_cpd_free(struct blkcg_policy_data *);
1584:	static void cfq_cpd_init(struct blkcg_policy_data *);
2487:	static void cfq_deactivate_request(struct request_queue *, struct request *);
2372:	static void cfq_del_cfqq_rr(struct cfq_data *, struct cfq_queue *);
2988:	static void cfq_dispatch_insert(struct request_queue *, struct request *);
3529:	static int cfq_dispatch_requests(struct request_queue *, int);
4896:	static void cfq_exit(void);
3622:	static void cfq_exit_cfqq(struct cfq_data *, struct cfq_queue *);
3641:	static void cfq_exit_icq(struct io_cq *);
4543:	static void cfq_exit_queue(struct elevator_queue *);
4708:	static ssize_t cfq_fifo_expire_async_show(struct elevator_queue *, char *);
4755:	static ssize_t cfq_fifo_expire_async_store(struct elevator_queue *, const char *, size_t);
4707:	static ssize_t cfq_fifo_expire_sync_show(struct elevator_queue *, char *);
4753:	static ssize_t cfq_fifo_expire_sync_store(struct elevator_queue *, const char *, size_t);
1201:	static struct request *cfq_find_next_rq(struct cfq_data *, struct cfq_queue *, struct request *);
3811:	static struct cfq_queue *cfq_get_queue(struct cfq_data *, bool, struct cfq_io_cq *, struct bio *);
4712:	static ssize_t cfq_group_idle_show(struct elevator_queue *, char *);
4761:	static ssize_t cfq_group_idle_store(struct elevator_queue *, const char *, size_t);
4729:	static ssize_t cfq_group_idle_us_show(struct elevator_queue *, char *);
4785:	static ssize_t cfq_group_idle_us_store(struct elevator_queue *, const char *, size_t);
1293:	static void cfq_group_service_tree_add(struct cfq_rb_root *, struct cfq_group *);
1378:	static void cfq_group_service_tree_del(struct cfq_rb_root *, struct cfq_group *);
4482:	static enum hrtimer_restart cfq_idle_slice_timer(struct hrtimer *);
4864:	static int cfq_init(void);
3634:	static void cfq_init_icq(struct io_cq *);
3657:	static void cfq_init_prio_data(struct cfq_queue *, struct cfq_io_cq *);
4567:	static int cfq_init_queue(struct request_queue *, struct elevator_type *);
4125:	static void cfq_insert_request(struct request_queue *, struct request *);
4468:	static void cfq_kick_queue(struct work_struct *);
4716:	static ssize_t cfq_low_latency_show(struct elevator_queue *, char *);
4766:	static ssize_t cfq_low_latency_store(struct elevator_queue *, const char *, size_t);
4330:	static int cfq_may_queue(struct request_queue *, unsigned int);
2515:	static enum elv_merge cfq_merge(struct request_queue *, struct request **, struct bio *);
2530:	static void cfq_merged_request(struct request_queue *, struct request *, enum elv_merge);
2547:	static void cfq_merged_requests(struct request_queue *, struct request *, struct request *);
1615:	static struct blkg_policy_data *cfq_pd_alloc(gfp_t, int);
1665:	static void cfq_pd_free(struct blkg_policy_data *);
1632:	static void cfq_pd_init(struct blkg_policy_data *);
1641:	static void cfq_pd_offline(struct blkg_policy_data *);
1673:	static void cfq_pd_reset_stats(struct blkg_policy_data *);
1747:	static int cfq_print_leaf_weight(struct seq_file *, void *);
1734:	static int cfq_print_weight(struct seq_file *, void *);
2142:	static int cfq_print_weight_on_dfl(struct seq_file *, void *);
2313:	static void cfq_prio_tree_add(struct cfq_data *, struct cfq_queue *);
3601:	static void cfq_put_cooperator(struct cfq_queue *);
3575:	static void cfq_put_queue(struct cfq_queue *);
4361:	static void cfq_put_request(struct request *);
4706:	static ssize_t cfq_quantum_show(struct elevator_queue *, char *);
4752:	static ssize_t cfq_quantum_store(struct elevator_queue *, const char *, size_t);
1186:	static void cfq_rb_erase(struct rb_node *, struct cfq_rb_root *);
4667:	static void cfq_registered_queue(struct request_queue *);
2497:	static void cfq_remove_request(struct request *);
2202:	static void cfq_service_tree_add(struct cfq_data *, struct cfq_queue *, bool);
1875:	static int cfq_set_leaf_weight(struct cgroup_subsys_state *, struct cftype *, u64);
4416:	static int cfq_set_request(struct request_queue *, struct request *, struct bio *, gfp_t);
1869:	static int cfq_set_weight(struct cgroup_subsys_state *, struct cftype *, u64);
2153:	static ssize_t cfq_set_weight_on_dfl(struct kernfs_open_file *, char *, size_t, loff_t);
2875:	static bool cfq_should_idle(struct cfq_data *, struct cfq_queue *);
4715:	static ssize_t cfq_slice_async_rq_show(struct elevator_queue *, char *);
4764:	static ssize_t cfq_slice_async_rq_store(struct elevator_queue *, const char *, size_t);
4714:	static ssize_t cfq_slice_async_show(struct elevator_queue *, char *);
4763:	static ssize_t cfq_slice_async_store(struct elevator_queue *, const char *, size_t);
4731:	static ssize_t cfq_slice_async_us_show(struct elevator_queue *, char *);
4787:	static ssize_t cfq_slice_async_us_store(struct elevator_queue *, const char *, size_t);
4711:	static ssize_t cfq_slice_idle_show(struct elevator_queue *, char *);
4760:	static ssize_t cfq_slice_idle_store(struct elevator_queue *, const char *, size_t);
4728:	static ssize_t cfq_slice_idle_us_show(struct elevator_queue *, char *);
4784:	static ssize_t cfq_slice_idle_us_store(struct elevator_queue *, const char *, size_t);
4713:	static ssize_t cfq_slice_sync_show(struct elevator_queue *, char *);
4762:	static ssize_t cfq_slice_sync_store(struct elevator_queue *, const char *, size_t);
4730:	static ssize_t cfq_slice_sync_us_show(struct elevator_queue *, char *);
4786:	static ssize_t cfq_slice_sync_us_store(struct elevator_queue *, const char *, size_t);
4717:	static ssize_t cfq_target_latency_show(struct elevator_queue *, char *);
4767:	static ssize_t cfq_target_latency_store(struct elevator_queue *, const char *, size_t);
4732:	static ssize_t cfq_target_latency_us_show(struct elevator_queue *, char *);
4788:	static ssize_t cfq_target_latency_us_store(struct elevator_queue *, const char *, size_t);
1716:	static u64 cfqg_prfill_leaf_weight_device(struct seq_file *, struct blkg_policy_data *, int);
1903:	static u64 cfqg_prfill_rwstat_recursive(struct seq_file *, struct blkg_policy_data *, int);
1927:	static u64 cfqg_prfill_sectors(struct seq_file *, struct blkg_policy_data *, int);
1942:	static u64 cfqg_prfill_sectors_recursive(struct seq_file *, struct blkg_policy_data *, int);
1895:	static u64 cfqg_prfill_stat_recursive(struct seq_file *, struct blkg_policy_data *, int);
1698:	static u64 cfqg_prfill_weight_device(struct seq_file *, struct blkg_policy_data *, int);
1726:	static int cfqg_print_leaf_weight_device(struct seq_file *, void *);
1888:	static int cfqg_print_rwstat(struct seq_file *, void *);
1919:	static int cfqg_print_rwstat_recursive(struct seq_file *, void *);
1881:	static int cfqg_print_stat(struct seq_file *, void *);
1911:	static int cfqg_print_stat_recursive(struct seq_file *, void *);
1935:	static int cfqg_print_stat_sectors(struct seq_file *, void *);
1953:	static int cfqg_print_stat_sectors_recursive(struct seq_file *, void *);
1708:	static int cfqg_print_weight_device(struct seq_file *, void *);
1814:	static ssize_t cfqg_set_leaf_weight_device(struct kernfs_open_file *, char *, size_t, loff_t);
1808:	static ssize_t cfqg_set_weight_device(struct kernfs_open_file *, char *, size_t, loff_t);
1531:	static void cfqg_stats_exit(struct cfqg_stats *);
720:	static void cfqg_stats_reset(struct cfqg_stats *);
3040:	static int cfqq_process_refs(struct cfq_queue *, struct cfq_queue *, struct cfq_queue *);

File block/compat_ioctl.c:
316:	long compat_blkdev_ioctl(struct file *, unsigned int, unsigned long);

File block/deadline-iosched.c:
96:	static void deadline_add_request(struct request_queue *, struct request *);
407:	static void deadline_completed_request(struct request_queue *, struct request *);
310:	static int deadline_dispatch_requests(struct request_queue *, int);
550:	static void deadline_exit(void);
412:	static void deadline_exit_queue(struct elevator_queue *);
488:	static ssize_t deadline_fifo_batch_show(struct elevator_queue *, char *);
511:	static ssize_t deadline_fifo_batch_store(struct elevator_queue *, const char *, size_t);
248:	static struct request *deadline_fifo_request(struct deadline_data *, int);
487:	static ssize_t deadline_front_merges_show(struct elevator_queue *, char *);
510:	static ssize_t deadline_front_merges_store(struct elevator_queue *, const char *, size_t);
545:	static int deadline_init(void);
425:	static int deadline_init_queue(struct request_queue *, struct elevator_type *);
128:	static enum elv_merge deadline_merge(struct request_queue *, struct request **, struct bio *);
153:	static void deadline_merged_request(struct request_queue *, struct request *, enum elv_merge);
168:	static void deadline_merged_requests(struct request_queue *, struct request *, struct request *);
484:	static ssize_t deadline_read_expire_show(struct elevator_queue *, char *);
507:	static ssize_t deadline_read_expire_store(struct elevator_queue *, const char *, size_t);
485:	static ssize_t deadline_write_expire_show(struct elevator_queue *, char *);
508:	static ssize_t deadline_write_expire_store(struct elevator_queue *, const char *, size_t);
486:	static ssize_t deadline_writes_starved_show(struct elevator_queue *, char *);
509:	static ssize_t deadline_writes_starved_store(struct elevator_queue *, const char *, size_t);

File block/elevator.c:
624:	void __elv_add_request(struct request_queue *, struct request *, int);
174:	struct elevator_queue *elevator_alloc(struct request_queue *, struct elevator_type *);
243:	void elevator_exit(struct request_queue *, struct elevator_queue *);
207:	int elevator_init(struct request_queue *);
981:	int elevator_init_mq(struct request_queue *);
941:	int elevator_switch_mq(struct request_queue *, struct elevator_type *);
709:	void elv_add_request(struct request_queue *, struct request *, int);
475:	bool elv_attempt_insert_merge(struct request_queue *, struct request *, struct list_head *);
74:	bool elv_bio_merge_ok(struct request *, struct bio *);
553:	void elv_bio_merged(struct request_queue *, struct request *, struct bio *);
779:	void elv_completed_request(struct request_queue *, struct request *);
405:	void elv_dispatch_add_tail(struct request_queue *, struct request *);
363:	void elv_dispatch_sort(struct request_queue *, struct request *);
605:	void elv_drain_elevator(struct request_queue *);
731:	struct request *elv_former_request(struct request_queue *, struct request *);
1137:	ssize_t elv_iosched_show(struct request_queue *, char *);
1122:	ssize_t elv_iosched_store(struct request_queue *, const char *, size_t);
719:	struct request *elv_latter_request(struct request_queue *, struct request *);
766:	int elv_may_queue(struct request_queue *, unsigned int);
420:	enum elv_merge elv_merge(struct request_queue *, struct request **, struct bio *);
529:	void elv_merge_requests(struct request_queue *, struct request *, struct request *);
513:	void elv_merged_request(struct request_queue *, struct request *, enum elv_merge);
755:	void elv_put_request(struct request_queue *, struct request *);
309:	void elv_rb_add(struct rb_root *, struct request *);
330:	void elv_rb_del(struct rb_root *, struct request *);
338:	struct request *elv_rb_find(struct rb_root *, sector_t);
1174:	struct request *elv_rb_former_request(struct request_queue *, struct request *);
1186:	struct request *elv_rb_latter_request(struct request_queue *, struct request *);
882:	int elv_register(struct elevator_type *);
844:	int elv_register_queue(struct request_queue *);
586:	void elv_requeue_request(struct request_queue *, struct request *);
268:	void elv_rqhash_add(struct request_queue *, struct request *);
261:	void elv_rqhash_del(struct request *, struct request_queue *);
284:	struct request *elv_rqhash_find(struct request_queue *, sector_t);
278:	void elv_rqhash_reposition(struct request_queue *, struct request *);
742:	int elv_set_request(struct request_queue *, struct request *, struct bio *, gfp_t);
922:	void elv_unregister(struct elevator_type *);
869:	void elv_unregister_queue(struct request_queue *);
153:	void load_default_elevator_module(void);
99:	static struct elevator_type *elevator_find(const char *, bool);
116:	static struct elevator_type *elevator_get(struct request_queue *, const char *, bool);
86:	static bool elevator_match(const struct elevator_type *, const char *);
193:	static void elevator_release(struct kobject *);
140:	static int elevator_setup(char *);
1012:	static int elevator_switch(struct request_queue *, struct elevator_type *);
800:	static ssize_t elv_attr_show(struct kobject *, struct attribute *, char *);
817:	static ssize_t elv_attr_store(struct kobject *, struct attribute *, const char *, size_t);

File block/genhd.c:
1447:	struct gendisk *__alloc_disk_node(int, int);
97:	struct hd_struct *__disk_get_part(struct gendisk *, int);
1600:	int bdev_read_only(struct block_device *);
907:	struct block_device *bdget_disk(struct gendisk *, int);
481:	int blk_alloc_devt(struct hd_struct *, dev_t *);
573:	void blk_delete_region(dev_t, unsigned long, struct kobject *(*)(dev_t, int *, void *));
516:	void blk_free_devt(dev_t);
531:	void blk_invalidate_devt(dev_t);
1412:	dev_t blk_lookup_devt(const char *, int);
557:	void blk_register_region(dev_t, unsigned long, struct module *, struct kobject *(*)(dev_t, int *, void *), int (*)(dev_t, void *), void *);
566:	void blk_unregister_region(dev_t, unsigned long);
315:	void blkdev_show(struct seq_file *, off_t);
754:	void del_gendisk(struct gendisk *);
742:	void device_add_disk(struct device *, struct gendisk *);
748:	void device_add_disk_no_queue_reg(struct device *, struct gendisk *);
1690:	void disk_block_events(struct gendisk *);
1794:	unsigned int disk_clear_events(struct gendisk *, unsigned int);
1267:	int disk_expand_part_tbl(struct gendisk *, int);
1768:	void disk_flush_events(struct gendisk *, unsigned int);
120:	struct hd_struct *disk_get_part(struct gendisk *, int);
269:	struct hd_struct *disk_map_sector_rcu(struct gendisk *, sector_t);
241:	void disk_part_iter_exit(struct disk_part_iter *);
145:	void disk_part_iter_init(struct disk_part_iter *, struct gendisk *, unsigned int);
178:	struct hd_struct *disk_part_iter_next(struct disk_part_iter *);
1750:	void disk_unblock_events(struct gendisk *);
1509:	struct kobject *get_disk_and_module(struct gendisk *);
852:	struct gendisk *get_gendisk(dev_t, int *);
1568:	int get_user_ro(struct gendisk *, unsigned int);
1609:	int invalidate_partition(struct gendisk *, int);
58:	void part_dec_in_flight(struct request_queue *, struct hd_struct *, int);
68:	void part_in_flight(struct request_queue *, struct hd_struct *, unsigned int *);
85:	void part_in_flight_rw(struct request_queue *, struct hd_struct *, unsigned int *);
48:	void part_inc_in_flight(struct request_queue *, struct hd_struct *, int);
926:	void printk_all_partitions(void);
1529:	void put_disk(struct gendisk *);
1540:	void put_disk_and_module(struct gendisk *);
347:	int register_blkdev(unsigned int, const char *);
1561:	void set_device_ro(struct block_device *, int);
1581:	void set_disk_ro(struct gendisk *, int);
411:	void unregister_blkdev(unsigned int, const char *);
684:	static void __device_add_disk(struct device *, struct gendisk *, bool);
1898:	static ssize_t __disk_events_show(unsigned int, char *);
1715:	static void __disk_unblock_events(struct gendisk *, bool);
1067:	static struct kobject *base_probe(dev_t, int *, void *);
1323:	static char *block_devnode(struct device *, umode_t *, kuid_t *, kgid_t *);
1146:	static ssize_t disk_alignment_offset_show(struct device *, struct device_attribute *, char *);
820:	static ssize_t disk_badblocks_show(struct device *, struct device_attribute *, char *);
832:	static ssize_t disk_badblocks_store(struct device *, struct device_attribute *, const char *, size_t);
1138:	static ssize_t disk_capability_show(struct device *, struct device_attribute *, char *);
1850:	static void disk_check_events(struct disk_events *, unsigned int *);
1155:	static ssize_t disk_discard_alignment_show(struct device *, struct device_attribute *, char *);
1923:	static ssize_t disk_events_async_show(struct device *, struct device_attribute *, char *);
1657:	static unsigned long disk_events_poll_jiffies(struct gendisk *, struct gendisk *, struct gendisk *);
1931:	static ssize_t disk_events_poll_msecs_show(struct device *, struct device_attribute *, char *);
1940:	static ssize_t disk_events_poll_msecs_store(struct device *, struct device_attribute *, const char *, size_t);
1979:	static int disk_events_set_dfl_poll_msecs(const char *, const struct kernel_param *);
1915:	static ssize_t disk_events_show(struct device *, struct device_attribute *, char *);
1842:	static void disk_events_workfn(struct work_struct *);
1104:	static ssize_t disk_ext_range_show(struct device *, struct device_attribute *, char *);
1121:	static ssize_t disk_hidden_show(struct device *, struct device_attribute *, char *);
1096:	static ssize_t disk_range_show(struct device *, struct device_attribute *, char *);
1305:	static void disk_release(struct device *);
1112:	static ssize_t disk_removable_show(struct device *, struct device_attribute *, char *);
1130:	static ssize_t disk_ro_show(struct device *, struct device_attribute *, char *);
998:	static void *disk_seqf_next(struct seq_file *, void *, loff_t *);
977:	static void *disk_seqf_start(struct seq_file *, loff_t *);
1010:	static void disk_seqf_stop(struct seq_file *, void *);
1207:	static umode_t disk_visible(struct kobject *, struct attribute *, int);
1348:	static int diskstats_show(struct seq_file *, void *);
588:	static int exact_lock(dev_t, void *);
581:	static struct kobject *exact_match(dev_t, int *, void *);
1075:	static int genhd_device_init(void);
1403:	static int proc_genhd_init(void);
1032:	static int show_partition(struct seq_file *, void *);
1022:	static void *show_partition_start(struct seq_file *, loff_t *);

File block/ioctl.c:
318:	int __blkdev_driver_ioctl(struct block_device *, fmode_t, unsigned int, unsigned long);
171:	int __blkdev_reread_part(struct block_device *);
537:	int blkdev_ioctl(struct block_device *, fmode_t, unsigned int, unsigned long);
205:	int blkdev_reread_part(struct block_device *);
217:	static int blk_ioctl_discard(struct block_device *, fmode_t, unsigned long, unsigned long);
389:	static int blkdev_pr_preempt(struct block_device *, struct pr_preempt *, bool);
13:	static int blkpg_ioctl(struct block_device *, struct blkpg_ioctl_arg *);

File block/ioprio.c:
185:	long __ia32_sys_ioprio_get(const struct pt_regs *);
93:	long __ia32_sys_ioprio_set(const struct pt_regs *);
185:	long __x64_sys_ioprio_get(const struct pt_regs *);
93:	long __x64_sys_ioprio_set(const struct pt_regs *);
175:	int ioprio_best(unsigned short, unsigned short);
64:	int ioprio_check_cap(int);
35:	int set_task_ioprio(struct task_struct *, int);
159:	static int get_task_ioprio(struct task_struct *);

File block/kyber-iosched.c:
601:	static bool flush_busy_kcq(struct sbitmap *, unsigned int, void *);
170:	static void kyber_adjust_rw_depth(struct kyber_queue_data *, unsigned int, int, int);
886:	static int kyber_async_depth_show(void *, struct seq_file *);
917:	static int kyber_batching_show(void *, struct seq_file *);
506:	static bool kyber_bio_merge(struct blk_mq_hw_ctx *, struct bio *);
291:	static int kyber_bucket_fn(const struct request *);
558:	static void kyber_completed_request(struct request *);
895:	static int kyber_cur_domain_show(void *, struct seq_file *);
394:	static void kyber_depth_updated(struct blk_mq_hw_ctx *);
687:	static struct request *kyber_dispatch_cur_domain(struct kyber_queue_data *, struct kyber_hctx_data *, struct blk_mq_hw_ctx *);
730:	static struct request *kyber_dispatch_request(struct blk_mq_hw_ctx *);
629:	static int kyber_domain_wake(wait_queue_entry_t *, unsigned int, int, void *);
983:	static void kyber_exit(void);
458:	static void kyber_exit_hctx(struct blk_mq_hw_ctx *, unsigned int);
371:	static void kyber_exit_sched(struct elevator_queue *);
551:	static void kyber_finish_request(struct request *);
639:	static int kyber_get_domain_token(struct kyber_queue_data *, struct kyber_hctx_data *, struct blk_mq_hw_ctx *);
776:	static bool kyber_has_work(struct blk_mq_hw_ctx *);
978:	static int kyber_init(void);
405:	static int kyber_init_hctx(struct blk_mq_hw_ctx *, unsigned int);
348:	static int kyber_init_sched(struct request_queue *, struct elevator_type *);
528:	static void kyber_insert_requests(struct blk_mq_hw_ctx *, struct list_head *, bool);
493:	static void kyber_limit_depth(unsigned int, struct blk_mq_alloc_data *);
883:	static void *kyber_other_rqs_next(struct seq_file *, void *, loff_t *);
883:	static void *kyber_other_rqs_start(struct seq_file *, loff_t *);
883:	static int kyber_other_tokens_show(void *, struct seq_file *);
883:	static int kyber_other_waiting_show(void *, struct seq_file *);
523:	static void kyber_prepare_request(struct request *, struct bio *);
814:	static ssize_t kyber_read_lat_show(struct elevator_queue *, char *);
814:	static ssize_t kyber_read_lat_store(struct elevator_queue *, const char *, size_t);
881:	static void *kyber_read_rqs_next(struct seq_file *, void *, loff_t *);
881:	static void *kyber_read_rqs_start(struct seq_file *, loff_t *);
881:	static void kyber_read_rqs_stop(struct seq_file *, void *);
881:	static int kyber_read_tokens_show(void *, struct seq_file *);
881:	static int kyber_read_waiting_show(void *, struct seq_file *);
125:	static unsigned int kyber_sched_domain(unsigned int);
268:	static void kyber_stat_timer_fn(struct blk_stat_callback *);
882:	static void *kyber_sync_write_rqs_next(struct seq_file *, void *, loff_t *);
882:	static void *kyber_sync_write_rqs_start(struct seq_file *, loff_t *);
882:	static int kyber_sync_write_tokens_show(void *, struct seq_file *);
882:	static int kyber_sync_write_waiting_show(void *, struct seq_file *);
815:	static ssize_t kyber_write_lat_show(struct elevator_queue *, char *);
815:	static ssize_t kyber_write_lat_store(struct elevator_queue *, const char *, size_t);

File block/mq-deadline.c:
461:	static bool dd_bio_merge(struct blk_mq_hw_ctx *, struct bio *);
380:	static struct request *dd_dispatch_request(struct blk_mq_hw_ctx *);
392:	static void dd_exit_queue(struct elevator_queue *);
563:	static void dd_finish_request(struct request *);
583:	static bool dd_has_work(struct blk_mq_hw_ctx *);
405:	static int dd_init_queue(struct request_queue *, struct elevator_type *);
524:	static void dd_insert_requests(struct blk_mq_hw_ctx *, struct list_head *, bool);
139:	static void dd_merged_requests(struct request_queue *, struct request *, struct request *);
545:	static void dd_prepare_request(struct request *, struct bio *);
438:	static int dd_request_merge(struct request_queue *, struct request **, struct bio *);
125:	static void dd_request_merged(struct request_queue *, struct request *, enum elv_merge);
713:	static int deadline_batching_show(void *, struct seq_file *);
741:	static void *deadline_dispatch_next(struct seq_file *, void *, loff_t *);
731:	static void *deadline_dispatch_start(struct seq_file *, loff_t *);
812:	static void deadline_exit(void);
622:	static ssize_t deadline_fifo_batch_show(struct elevator_queue *, char *);
645:	static ssize_t deadline_fifo_batch_store(struct elevator_queue *, const char *, size_t);
200:	static struct request *deadline_fifo_request(struct deadline_data *, int);
621:	static ssize_t deadline_front_merges_show(struct elevator_queue *, char *);
644:	static ssize_t deadline_front_merges_store(struct elevator_queue *, const char *, size_t);
807:	static int deadline_init(void);
236:	static struct request *deadline_next_request(struct deadline_data *, int);
618:	static ssize_t deadline_read_expire_show(struct elevator_queue *, char *);
641:	static ssize_t deadline_read_expire_store(struct elevator_queue *, const char *, size_t);
709:	static void *deadline_read_fifo_next(struct seq_file *, void *, loff_t *);
709:	static void *deadline_read_fifo_start(struct seq_file *, loff_t *);
709:	static void deadline_read_fifo_stop(struct seq_file *, void *);
709:	static int deadline_read_next_rq_show(void *, struct seq_file *);
108:	static void deadline_remove_request(struct request_queue *, struct request *);
722:	static int deadline_starved_show(void *, struct seq_file *);
619:	static ssize_t deadline_write_expire_show(struct elevator_queue *, char *);
642:	static ssize_t deadline_write_expire_store(struct elevator_queue *, const char *, size_t);
710:	static void *deadline_write_fifo_next(struct seq_file *, void *, loff_t *);
710:	static void *deadline_write_fifo_start(struct seq_file *, loff_t *);
710:	static int deadline_write_next_rq_show(void *, struct seq_file *);
620:	static ssize_t deadline_writes_starved_show(struct elevator_queue *, char *);
643:	static ssize_t deadline_writes_starved_store(struct elevator_queue *, const char *, size_t);

File block/noop-iosched.c:
35:	static void noop_add_request(struct request_queue *, struct request *);
21:	static int noop_dispatch(struct request_queue *, int);
113:	static void noop_exit(void);
86:	static void noop_exit_queue(struct elevator_queue *);
43:	static struct request *noop_former_request(struct request_queue *, struct request *);
108:	static int noop_init(void);
62:	static int noop_init_queue(struct request_queue *, struct elevator_type *);
53:	static struct request *noop_latter_request(struct request_queue *, struct request *);
15:	static void noop_merged_requests(struct request_queue *, struct request *, struct request *);

File block/partition-generic.c:
65:	const char *__bdevname(dev_t, char *);
259:	void __delete_partition(struct percpu_ref *);
316:	struct hd_struct *add_partition(struct gendisk *, int, sector_t, sector_t, int, struct partition_meta_info *);
47:	const char *bdevname(struct block_device *, char *);
54:	const char *bio_devname(struct bio *, char *);
276:	void delete_partition(struct gendisk *, int);
35:	char *disk_name(struct gendisk *, int, char *);
653:	int invalidate_partitions(struct gendisk *, struct block_device *);
149:	ssize_t part_inflight_show(struct device *, struct device_attribute *, char *);
90:	ssize_t part_size_show(struct device *, struct device_attribute *, char *);
118:	ssize_t part_stat_show(struct device *, struct device_attribute *, char *);
673:	unsigned char *read_dev_sector(struct block_device *, sector_t, Sector *);
523:	int rescan_partitions(struct gendisk *, struct block_device *);
248:	static void delete_partition_work_fn(struct work_struct *);
437:	static bool disk_unlock_native_capacity(struct gendisk *);
453:	static int drop_partitions(struct gendisk *, struct block_device *, struct block_device *);
104:	static ssize_t part_alignment_offset_show(struct device *, struct device_attribute *, char *);
111:	static ssize_t part_discard_alignment_show(struct device *, struct device_attribute *, char *);
74:	static ssize_t part_partition_show(struct device *, struct device_attribute *, char *);
223:	static void part_release(struct device *);
97:	static ssize_t part_ro_show(struct device *, struct device_attribute *, char *);
82:	static ssize_t part_start_show(struct device *, struct device_attribute *, char *);
231:	static int part_uevent(struct device *, struct kobj_uevent_env *);
305:	static ssize_t whole_disk_show(struct device *, struct device_attribute *, char *);

File block/partitions/amiga.c:
29:	int amiga_partition(struct parsed_partitions *);

File block/partitions/check.c:
143:	struct parsed_partitions *check_partition(struct gendisk *, struct block_device *);
136:	void free_partitions(struct parsed_partitions *);

File block/partitions/check.h:
42:	static void put_partition(struct parsed_partitions *, int, sector_t, sector_t);

File block/partitions/efi.c:
717:	int efi_partition(struct parsed_partitions *);
497:	static void compare_gpts(gpt_header *, gpt_header *, u64);
113:	static int force_gpt_fn(char *);
351:	static int is_gpt_valid(struct parsed_partitions *, u64, gpt_header **, gpt_entry **);
251:	static size_t read_lba(struct parsed_partitions *, u64, u8 *, size_t);

File block/partitions/karma.c:
14:	int karma_partition(struct parsed_partitions *);

File block/partitions/mac.c:
31:	int mac_partition(struct parsed_partitions *);

File block/partitions/msdos.c:
452:	int msdos_partition(struct parsed_partitions *);
273:	static void parse_bsd(struct parsed_partitions *, sector_t, sector_t, int, char *, int);
327:	static void parse_freebsd(struct parsed_partitions *, sector_t, sector_t, int);
400:	static void parse_minix(struct parsed_partitions *, sector_t, sector_t, int);
335:	static void parse_netbsd(struct parsed_partitions *, sector_t, sector_t, int);
343:	static void parse_openbsd(struct parsed_partitions *, sector_t, sector_t, int);
216:	static void parse_solaris_x86(struct parsed_partitions *, sector_t, sector_t, int);
356:	static void parse_unixware(struct parsed_partitions *, sector_t, sector_t, int);

File block/partitions/osf.c:
16:	int osf_partition(struct parsed_partitions *);

File block/partitions/sgi.c:
31:	int sgi_partition(struct parsed_partitions *);

File block/partitions/sun.c:
14:	int sun_partition(struct parsed_partitions *);

File block/scsi_ioctl.c:
210:	int blk_verify_command(unsigned char *, fmode_t);
701:	int scsi_cmd_blk_ioctl(struct block_device *, fmode_t, unsigned int, void *);
559:	int scsi_cmd_ioctl(struct request_queue *, struct gendisk *, fmode_t, unsigned int, void *);
720:	void scsi_req_init(struct scsi_request *);
689:	int scsi_verify_blk_ioctl(struct block_device *, unsigned int);
418:	int sg_scsi_ioctl(struct request_queue *, struct gendisk *, fmode_t, struct scsi_ioctl_command *);
533:	static int __blk_send_generic(struct request_queue *, struct gendisk *, int, int);
729:	static int blk_scsi_ioctl_init(void);
292:	static int sg_io(struct request_queue *, struct gendisk *, struct sg_io_hdr *, fmode_t);

File block/t10-pi.c:
259:	void t10_pi_complete(struct request *, u8, unsigned int);
201:	void t10_pi_prepare(struct request *, u8);
31:	static __be16 t10_pi_crc_fn(void *, unsigned int);
46:	static blk_status_t t10_pi_generate(struct blk_integrity_iter *, csum_fn *, unsigned int);
36:	static __be16 t10_pi_ip_fn(void *, unsigned int);
120:	static blk_status_t t10_pi_type1_generate_crc(struct blk_integrity_iter *);
125:	static blk_status_t t10_pi_type1_generate_ip(struct blk_integrity_iter *);
130:	static blk_status_t t10_pi_type1_verify_crc(struct blk_integrity_iter *);
135:	static blk_status_t t10_pi_type1_verify_ip(struct blk_integrity_iter *);
140:	static blk_status_t t10_pi_type3_generate_crc(struct blk_integrity_iter *);
145:	static blk_status_t t10_pi_type3_generate_ip(struct blk_integrity_iter *);
150:	static blk_status_t t10_pi_type3_verify_crc(struct blk_integrity_iter *);
155:	static blk_status_t t10_pi_type3_verify_ip(struct blk_integrity_iter *);
70:	static blk_status_t t10_pi_verify(struct blk_integrity_iter *, csum_fn *, unsigned int);

File certs/blacklist.c:
113:	int is_hash_blacklisted(const u8 *, size_t, const char *);
87:	int mark_hash_blacklisted(const char *);
69:	static void blacklist_describe(const struct key *, struct seq_file *);
65:	static void blacklist_free_preparse(struct key_preparsed_payload *);
145:	static int blacklist_init(void);
58:	static int blacklist_preparse(struct key_preparsed_payload *);
30:	static int blacklist_vet_description(const char *);

File certs/system_keyring.c:
37:	int restrict_link_by_builtin_trusted(struct key *, const struct key_type *, const union key_payload *, struct key *);
205:	int verify_pkcs7_signature(const void *, size_t, const void *, size_t, struct key *, enum key_being_used_for, int (*)(void *, const void *, size_t, size_t), void *);
138:	static int load_system_certificate_list(void);
96:	static int system_trusted_keyring_init(void);

File crypto/ablkcipher.c:
45:	void __ablkcipher_walk_complete(struct ablkcipher_walk *);
100:	int ablkcipher_walk_done(struct ablkcipher_request *, struct ablkcipher_walk *, int);
292:	int ablkcipher_walk_phys(struct ablkcipher_request *, struct ablkcipher_walk *);
218:	static int ablkcipher_walk_next(struct ablkcipher_request *, struct ablkcipher_walk *);
339:	static unsigned int crypto_ablkcipher_ctxsize(struct crypto_alg *, u32, u32);
364:	static int crypto_ablkcipher_report(struct sk_buff *, struct crypto_alg *);
395:	static void crypto_ablkcipher_show(struct seq_file *, struct crypto_alg *);
439:	static int crypto_givcipher_report(struct sk_buff *, struct crypto_alg *);
470:	static void crypto_givcipher_show(struct seq_file *, struct crypto_alg *);
345:	static int crypto_init_ablkcipher_ops(struct crypto_tfm *, u32, u32);
419:	static int crypto_init_givcipher_ops(struct crypto_tfm *, u32, u32);
322:	static int setkey(struct crypto_ablkcipher *, const u8 *, unsigned int);

File crypto/acompress.c:
121:	struct acomp_req *acomp_request_alloc(struct crypto_acomp *);
134:	void acomp_request_free(struct acomp_req *);
114:	struct crypto_acomp *crypto_alloc_acomp(const char *, u32, u32);
151:	int crypto_register_acomp(struct acomp_alg *);
169:	int crypto_register_acomps(struct acomp_alg *, int);
163:	int crypto_unregister_acomp(struct acomp_alg *);
189:	void crypto_unregister_acomps(struct acomp_alg *, int);
61:	static void crypto_acomp_exit_tfm(struct crypto_tfm *);
91:	static unsigned int crypto_acomp_extsize(struct crypto_alg *);
69:	static int crypto_acomp_init_tfm(struct crypto_tfm *);
32:	static int crypto_acomp_report(struct sk_buff *, struct crypto_alg *);
56:	static void crypto_acomp_show(struct seq_file *, struct crypto_alg *);

File crypto/aead.c:
334:	void aead_exit_geniv(struct crypto_aead *);
203:	struct aead_instance *aead_geniv_alloc(struct crypto_template *, struct rtattr **, u32, u32);
283:	void aead_geniv_free(struct aead_instance *);
290:	int aead_init_geniv(struct crypto_aead *);
423:	int aead_register_instance(struct crypto_template *, struct aead_instance *);
74:	int crypto_aead_setauthsize(struct crypto_aead *, unsigned int);
53:	int crypto_aead_setkey(struct crypto_aead *, const u8 *, unsigned int);
351:	struct crypto_aead *crypto_alloc_aead(const char *, u32, u32);
343:	int crypto_grab_aead(struct crypto_aead_spawn *, const char *, u32, u32);
375:	int crypto_register_aead(struct aead_alg *);
394:	int crypto_register_aeads(struct aead_alg *, int);
388:	void crypto_unregister_aead(struct aead_alg *);
414:	void crypto_unregister_aeads(struct aead_alg *, int);
195:	static int aead_geniv_setauthsize(struct crypto_aead *, unsigned int);
187:	static int aead_geniv_setkey(struct crypto_aead *, const u8 *, unsigned int);
92:	static void crypto_aead_exit_tfm(struct crypto_tfm *);
161:	static void crypto_aead_free_instance(struct crypto_instance *);
100:	static int crypto_aead_init_tfm(struct crypto_tfm *);
119:	static int crypto_aead_report(struct sk_buff *, struct crypto_alg *);
148:	static void crypto_aead_show(struct seq_file *, struct crypto_alg *);

File crypto/aes_generic.c:
1217:	int crypto_aes_expand_key(struct crypto_aes_ctx *, const u8 *, unsigned int);
1287:	int crypto_aes_set_key(struct crypto_tfm *, const u8 *, unsigned int);
1404:	static void aes_decrypt(struct crypto_tfm *, u8 *, const u8 *);
1334:	static void aes_encrypt(struct crypto_tfm *, u8 *, const u8 *);
1467:	static void aes_fini(void);
1462:	static int aes_init(void);

File crypto/af_alg.c:
274:	int af_alg_accept(struct sock *, struct socket *, bool);
1096:	struct af_alg_async_req *af_alg_alloc_areq(struct sock *, unsigned int);
493:	int af_alg_alloc_tsgl(struct sock *);
1048:	void af_alg_async_cb(struct crypto_async_request *, int);
446:	int af_alg_cmsg_send(struct msghdr *, struct af_alg_control *);
535:	unsigned int af_alg_count_tsgl(struct sock *, size_t, size_t);
792:	void af_alg_data_wakeup(struct sock *);
659:	void af_alg_free_areq_sgls(struct af_alg_async_req *);
1030:	void af_alg_free_resources(struct af_alg_async_req *);
437:	void af_alg_free_sg(struct af_alg_sgl *);
1127:	int af_alg_get_rsgl(struct sock *, struct msghdr *, int, struct af_alg_async_req *, size_t, size_t *);
430:	void af_alg_link_sg(struct af_alg_sgl *, struct af_alg_sgl *);
399:	int af_alg_make_sg(struct af_alg_sgl *, struct iov_iter *, int);
1068:	__poll_t af_alg_poll(struct file *, struct socket *, poll_table *);
591:	void af_alg_pull_tsgl(struct sock *, size_t, struct scatterlist *, size_t);
63:	int af_alg_register_type(const struct af_alg_type *);
123:	int af_alg_release(struct socket *);
133:	void af_alg_release_parent(struct sock *);
828:	int af_alg_sendmsg(struct socket *, struct msghdr *, size_t, unsigned int);
974:	ssize_t af_alg_sendpage(struct socket *, struct page *, int, size_t, int);
93:	int af_alg_unregister_type(const struct af_alg_type *);
754:	int af_alg_wait_for_data(struct sock *, unsigned int);
697:	int af_alg_wait_for_wmem(struct sock *, unsigned int);
729:	void af_alg_wmem_wakeup(struct sock *);
1200:	static void af_alg_exit(void);
1181:	static int af_alg_init(void);
331:	static int alg_accept(struct socket *, struct socket *, int, bool);
153:	static int alg_bind(struct socket *, struct sockaddr *, int);
366:	static int alg_create(struct net *, struct socket *, int, int);
44:	static const struct af_alg_type *alg_get_type(const char *);
233:	static int alg_setsockopt(struct socket *, int, int, char *, unsigned int);
359:	static void alg_sock_destruct(struct sock *);

File crypto/ahash.c:
652:	struct hash_alg_common *ahash_attr_alg(struct rtattr *, u32, u32);
636:	void ahash_free_instance(struct crypto_instance *);
623:	int ahash_register_instance(struct crypto_template *, struct ahash_instance *);
388:	int crypto_ahash_digest(struct ahash_request *);
376:	int crypto_ahash_final(struct ahash_request *);
382:	int crypto_ahash_finup(struct ahash_request *);
208:	int crypto_ahash_setkey(struct crypto_ahash *, const u8 *, unsigned int);
152:	int crypto_ahash_walk_first(struct ahash_request *, struct crypto_hash_walk *);
546:	struct crypto_ahash *crypto_alloc_ahash(const char *, u32, u32);
553:	int crypto_has_ahash(const char *, u32, u32);
661:	bool crypto_hash_alg_has_setkey(struct hash_alg_common *);
86:	int crypto_hash_walk_done(struct crypto_hash_walk *, int);
134:	int crypto_hash_walk_first(struct ahash_request *, struct crypto_hash_walk *);
643:	int crypto_init_ahash_spawn(struct crypto_ahash_spawn *, struct hash_alg_common *, struct crypto_instance *);
575:	int crypto_register_ahash(struct ahash_alg *);
594:	int crypto_register_ahashes(struct ahash_alg *, int);
588:	int crypto_unregister_ahash(struct ahash_alg *);
614:	void crypto_unregister_ahashes(struct ahash_alg *, int);
445:	static int ahash_def_finup(struct ahash_request *);
427:	static void ahash_def_finup_done1(struct crypto_async_request *, int);
399:	static void ahash_def_finup_done2(struct crypto_async_request *, int);
411:	static int ahash_def_finup_finish1(struct ahash_request *, int);
193:	static int ahash_nosetkey(struct crypto_ahash *, const u8 *, unsigned int);
321:	static void ahash_op_unaligned_done(struct crypto_async_request *, int);
292:	static void ahash_restore_req(struct ahash_request *, int);
235:	static int ahash_save_req(struct ahash_request *, crypto_completion_t);
487:	static unsigned int crypto_ahash_extsize(struct crypto_alg *);
461:	static int crypto_ahash_init_tfm(struct crypto_tfm *);
364:	static int crypto_ahash_op(struct ahash_request *, int (*)(struct ahash_request *));
496:	static int crypto_ahash_report(struct sk_buff *, struct crypto_alg *);
522:	static void crypto_ahash_show(struct seq_file *, struct crypto_alg *);
69:	static int hash_walk_new_entry(struct crypto_hash_walk *);
45:	static int hash_walk_next(struct crypto_hash_walk *);

File crypto/akcipher.c:
140:	int akcipher_register_instance(struct crypto_template *, struct akcipher_instance *);
109:	struct crypto_akcipher *crypto_alloc_akcipher(const char *, u32, u32);
101:	int crypto_grab_akcipher(struct crypto_akcipher_spawn *, const char *, u32, u32);
125:	int crypto_register_akcipher(struct akcipher_alg *);
134:	void crypto_unregister_akcipher(struct akcipher_alg *);
58:	static void crypto_akcipher_exit_tfm(struct crypto_tfm *);
80:	static void crypto_akcipher_free_instance(struct crypto_instance *);
66:	static int crypto_akcipher_init_tfm(struct crypto_tfm *);
29:	static int crypto_akcipher_report(struct sk_buff *, struct crypto_alg *);
53:	static void crypto_akcipher_show(struct seq_file *, struct crypto_alg *);

File crypto/algapi.c:
1016:	void __crypto_xor(u8 *, const u8 *, const u8 *, unsigned int);
1069:	unsigned int crypto_alg_extsize(struct crypto_alg *);
266:	void crypto_alg_tested(const char *, int);
892:	struct crypto_instance *crypto_alloc_instance(const char *, struct crypto_alg *);
866:	void *crypto_alloc_instance2(const char *, struct crypto_alg *, unsigned int);
819:	struct crypto_alg *crypto_attr_alg2(struct rtattr *, const struct crypto_type *, u32, u32);
801:	const char *crypto_attr_alg_name(struct rtattr *);
833:	int crypto_attr_u32(struct rtattr *, u32 *);
786:	int crypto_check_attr_type(struct rtattr **, u32);
953:	struct crypto_async_request *crypto_dequeue_request(struct crypto_queue *);
677:	void crypto_drop_spawn(struct crypto_spawn *);
930:	int crypto_enqueue_request(struct crypto_queue *, struct crypto_async_request *);
768:	struct crypto_attr_type *crypto_get_attr_type(struct rtattr **);
661:	int crypto_grab_spawn(struct crypto_spawn *, const char *, u32, u32);
998:	void crypto_inc(u8 *, unsigned int);
921:	void crypto_init_queue(struct crypto_queue *, unsigned int);
624:	int crypto_init_spawn(struct crypto_spawn *, struct crypto_alg *, struct crypto_instance *, u32);
644:	int crypto_init_spawn2(struct crypto_spawn *, struct crypto_alg *, struct crypto_instance *, const struct crypto_type *);
851:	int crypto_inst_setname(struct crypto_instance *, const char *, struct crypto_alg *);
563:	struct crypto_template *crypto_lookup_template(const char *);
375:	int crypto_register_alg(struct crypto_alg *);
431:	int crypto_register_algs(struct crypto_alg *, int);
570:	int crypto_register_instance(struct crypto_template *, struct crypto_instance *);
756:	int crypto_register_notifier(struct notifier_block *);
466:	int crypto_register_template(struct crypto_template *);
488:	int crypto_register_templates(struct crypto_template *, int);
345:	void crypto_remove_final(struct list_head *);
143:	void crypto_remove_spawns(struct crypto_alg *, struct list_head *, struct crypto_alg *);
709:	struct crypto_tfm *crypto_spawn_tfm(struct crypto_spawn *, u32, u32);
735:	void *crypto_spawn_tfm2(struct crypto_spawn *);
972:	int crypto_tfm_in_queue(struct crypto_queue *, struct crypto_tfm *);
1076:	int crypto_type_has_alg(const char *, const struct crypto_type *, u32, u32);
410:	int crypto_unregister_alg(struct crypto_alg *);
451:	int crypto_unregister_algs(struct crypto_alg *, int);
607:	int crypto_unregister_instance(struct crypto_instance *);
762:	int crypto_unregister_notifier(struct notifier_block *);
506:	void crypto_unregister_template(struct crypto_template *);
535:	void crypto_unregister_templates(struct crypto_template *, int);
544:	static struct crypto_template *__crypto_lookup_template(const char *);
204:	static struct crypto_larval *__crypto_register_alg(struct crypto_alg *);
1097:	static void crypto_algapi_exit(void);
1091:	static int crypto_algapi_init(void);
53:	static int crypto_check_alg(struct crypto_alg *);
90:	static void crypto_destroy_instance(struct crypto_alg *);
80:	static void crypto_free_instance(struct crypto_instance *);
121:	static void crypto_remove_instance(struct crypto_instance *, struct list_head *);
688:	static struct crypto_alg *crypto_spawn_alg(struct crypto_spawn *);
357:	static void crypto_wait_for_test(struct crypto_larval *);

File crypto/algboss.c:
291:	static void cryptomgr_exit(void);
286:	static int cryptomgr_init(void);
269:	static int cryptomgr_notify(struct notifier_block *, unsigned long, void *);
62:	static int cryptomgr_probe(void *);
210:	static int cryptomgr_test(void *);

File crypto/algif_aead.c:
583:	static int aead_accept_parent(void *, struct sock *);
545:	static int aead_accept_parent_nokey(void *, struct sock *);
477:	static void *aead_bind(const char *, u32, u32);
381:	static int aead_check_key(struct socket *);
326:	static int aead_recvmsg(struct socket *, struct msghdr *, size_t, int);
443:	static int aead_recvmsg_nokey(struct socket *, struct msghdr *, size_t, int);
506:	static void aead_release(void *);
65:	static int aead_sendmsg(struct socket *, struct msghdr *, size_t);
419:	static int aead_sendmsg_nokey(struct socket *, struct msghdr *, size_t);
431:	static ssize_t aead_sendpage_nokey(struct socket *, struct page *, int, size_t, int);
515:	static int aead_setauthsize(void *, unsigned int);
522:	static int aead_setkey(void *, const u8 *, unsigned int);
529:	static void aead_sock_destruct(struct sock *);
611:	static void algif_aead_exit(void);
606:	static int algif_aead_init(void);
78:	static int crypto_aead_copy_sgl(struct crypto_skcipher *, struct scatterlist *, struct scatterlist *, unsigned int);

File crypto/algif_hash.c:
485:	static void algif_hash_exit(void);
480:	static int algif_hash_init(void);
235:	static int hash_accept(struct socket *, struct socket *, int, bool);
373:	static int hash_accept_nokey(struct socket *, struct socket *, int, bool);
458:	static int hash_accept_parent(void *, struct sock *);
431:	static int hash_accept_parent_nokey(void *, struct sock *);
37:	static int hash_alloc_result(struct sock *, struct hash_ctx *);
406:	static void *hash_bind(const char *, u32, u32);
299:	static int hash_check_key(struct socket *);
188:	static int hash_recvmsg(struct socket *, struct msghdr *, size_t, int);
361:	static int hash_recvmsg_nokey(struct socket *, struct msghdr *, size_t, int);
411:	static void hash_release(void *);
68:	static int hash_sendmsg(struct socket *, struct msghdr *, size_t);
337:	static int hash_sendmsg_nokey(struct socket *, struct msghdr *, size_t);
136:	static ssize_t hash_sendpage(struct socket *, struct page *, int, size_t, int);
349:	static ssize_t hash_sendpage_nokey(struct socket *, struct page *, int, size_t, int);
416:	static int hash_setkey(void *, const u8 *, unsigned int);
421:	static void hash_sock_destruct(struct sock *);

File crypto/algif_rng.c:
135:	static int rng_accept_parent(void *, struct sock *);
116:	static void *rng_bind(const char *, u32, u32);
184:	static void rng_exit(void);
179:	static int rng_init(void);
58:	static int rng_recvmsg(struct socket *, struct msghdr *, size_t, int);
121:	static void rng_release(void *);
160:	static int rng_setkey(void *, const u8 *, unsigned int);
126:	static void rng_sock_destruct(struct sock *);

File crypto/algif_skcipher.c:
400:	static void algif_skcipher_exit(void);
395:	static int algif_skcipher_init(void);
373:	static int skcipher_accept_parent(void *, struct sock *);
337:	static int skcipher_accept_parent_nokey(void *, struct sock *);
308:	static void *skcipher_bind(const char *, u32, u32);
212:	static int skcipher_check_key(struct socket *);
157:	static int skcipher_recvmsg(struct socket *, struct msghdr *, size_t, int);
274:	static int skcipher_recvmsg_nokey(struct socket *, struct msghdr *, size_t, int);
313:	static void skcipher_release(void *);
41:	static int skcipher_sendmsg(struct socket *, struct msghdr *, size_t);
250:	static int skcipher_sendmsg_nokey(struct socket *, struct msghdr *, size_t);
262:	static ssize_t skcipher_sendpage_nokey(struct socket *, struct page *, int, size_t, int);
318:	static int skcipher_setkey(void *, const u8 *, unsigned int);
323:	static void skcipher_sock_destruct(struct sock *);

File crypto/api.c:
360:	struct crypto_tfm *__crypto_alloc_tfm(struct crypto_alg *, u32, u32);
264:	struct crypto_alg *crypto_alg_mod_lookup(const char *, u32, u32);
418:	struct crypto_tfm *crypto_alloc_base(const char *, u32, u32);
528:	void *crypto_alloc_tfm(const char *, const struct crypto_type *, u32, u32);
452:	void *crypto_create_tfm(struct crypto_alg *, const struct crypto_type *);
571:	void crypto_destroy_tfm(void *, struct crypto_tfm *);
493:	struct crypto_alg *crypto_find_alg(const char *, const struct crypto_type *, u32, u32);
588:	int crypto_has_alg(const char *, u32, u32);
110:	struct crypto_larval *crypto_larval_alloc(const char *, u32, u32);
159:	void crypto_larval_kill(struct crypto_alg *);
40:	struct crypto_alg *crypto_mod_get(struct crypto_alg *);
46:	void crypto_mod_put(struct crypto_alg *);
250:	int crypto_probing_notify(unsigned long, void *);
602:	void crypto_req_done(struct crypto_async_request *, int);
352:	void crypto_shoot_alg(struct crypto_alg *);
60:	static struct crypto_alg *__crypto_alg_lookup(const char *, u32, u32);
196:	static struct crypto_alg *crypto_alg_lookup(const char *, u32, u32);
100:	static void crypto_larval_destroy(struct crypto_alg *);
171:	static struct crypto_alg *crypto_larval_wait(struct crypto_alg *);

File crypto/asymmetric_keys/asymmetric_type.c:
211:	int __asymmetric_key_hex_to_key_id(const char *, struct asymmetric_key_id *, size_t);
138:	struct asymmetric_key_id *asymmetric_key_generate_id(const void *, size_t, const void *, size_t);
223:	struct asymmetric_key_id *asymmetric_key_hex_to_key_id(const char *);
176:	bool asymmetric_key_id_partial(const struct asymmetric_key_id *, const struct asymmetric_key_id *);
160:	bool asymmetric_key_id_same(const struct asymmetric_key_id *, const struct asymmetric_key_id *);
49:	struct key *find_asymmetric_key(struct key *, const struct asymmetric_key_id *, const struct asymmetric_key_id *, bool);
558:	int register_asymmetric_key_parser(struct asymmetric_key_parser *);
589:	void unregister_asymmetric_key_parser(struct asymmetric_key_parser *);
607:	static void asymmetric_key_cleanup(void);
250:	static bool asymmetric_key_cmp(const struct key *, const struct key_match_data *);
263:	static bool asymmetric_key_cmp_partial(const struct key *, const struct key_match_data *);
333:	static void asymmetric_key_describe(const struct key *, struct seq_file *);
437:	static void asymmetric_key_destroy(struct key *);
404:	static void asymmetric_key_free_kids(struct asymmetric_key_ids *);
418:	static void asymmetric_key_free_preparse(struct key_preparsed_payload *);
602:	static int asymmetric_key_init(void);
325:	static void asymmetric_key_match_free(struct key_match_data *);
286:	static int asymmetric_key_match_preparse(struct key_match_data *);
372:	static int asymmetric_key_preparse(struct key_preparsed_payload *);
477:	static struct key_restriction *asymmetric_lookup_restriction(const char *);

File crypto/asymmetric_keys/mscode_parser.c:
40:	int mscode_note_content_type(void *, size_t, unsigned char, const void *, size_t);
120:	int mscode_note_digest(void *, size_t, unsigned char, const void *, size_t);
72:	int mscode_note_digest_algo(void *, size_t, unsigned char, const void *, size_t);
24:	int mscode_parse(void *, const void *, size_t, size_t);

File crypto/asymmetric_keys/pkcs7_parser.c:
285:	int pkcs7_check_content_type(void *, size_t, unsigned char, const void *, size_t);
379:	int pkcs7_extract_cert(void *, size_t, unsigned char, const void *, size_t);
61:	void pkcs7_free_message(struct pkcs7_message *);
189:	int pkcs7_get_content_data(const struct pkcs7_message *, const void **, size_t *, size_t *);
208:	int pkcs7_note_OID(void *, size_t, unsigned char, const void *, size_t);
419:	int pkcs7_note_certificate_list(void *, size_t, unsigned char, const void *, size_t);
437:	int pkcs7_note_content(void *, size_t, unsigned char, const void *, size_t);
457:	int pkcs7_note_data(void *, size_t, unsigned char, const void *, size_t);
644:	int pkcs7_note_signed_info(void *, size_t, unsigned char, const void *, size_t);
302:	int pkcs7_note_signeddata_version(void *, size_t, unsigned char, const void *, size_t);
336:	int pkcs7_note_signerinfo_version(void *, size_t, unsigned char, const void *, size_t);
119:	struct pkcs7_message *pkcs7_parse_message(const void *, size_t);
474:	int pkcs7_sig_note_authenticated_attr(void *, size_t, unsigned char, const void *, size_t);
227:	int pkcs7_sig_note_digest_algo(void *, size_t, unsigned char, const void *, size_t);
598:	int pkcs7_sig_note_issuer(void *, size_t, unsigned char, const void *, size_t);
265:	int pkcs7_sig_note_pkey_algo(void *, size_t, unsigned char, const void *, size_t);
585:	int pkcs7_sig_note_serial(void *, size_t, unsigned char, const void *, size_t);
557:	int pkcs7_sig_note_set_of_authattrs(void *, size_t, unsigned char, const void *, size_t);
627:	int pkcs7_sig_note_signature(void *, size_t, unsigned char, const void *, size_t);
611:	int pkcs7_sig_note_skid(void *, size_t, unsigned char, const void *, size_t);

File crypto/asymmetric_keys/pkcs7_trust.c:
162:	int pkcs7_validate_trust(struct pkcs7_message *, struct key *);

File crypto/asymmetric_keys/pkcs7_verify.c:
459:	int pkcs7_supply_detached_data(struct pkcs7_message *, const void *, size_t);
376:	int pkcs7_verify(struct pkcs7_message *, enum key_being_used_for);

File crypto/asymmetric_keys/public_key.c:
44:	void public_key_free(struct public_key *);
65:	int public_key_verify_signature(const struct public_key *, const struct public_key_signature *);
32:	static void public_key_describe(const struct key *, struct seq_file *);
56:	static void public_key_destroy(void *, void *);
154:	static int public_key_verify_signature_2(const struct key *, const struct public_key_signature *);

File crypto/asymmetric_keys/restrict.c:
234:	int restrict_link_by_key_or_keyring(struct key *, const struct key_type *, const union key_payload *, struct key *);
261:	int restrict_link_by_key_or_keyring_chain(struct key *, const struct key_type *, const union key_payload *, struct key *);
74:	int restrict_link_by_signature(struct key *, const struct key_type *, const union key_payload *, struct key *);
28:	static int ca_keys_setup(char *);
122:	static int key_or_keyring_common(struct key *, const struct key_type *, const union key_payload *, struct key *, bool);
115:	static bool match_either_id(const struct asymmetric_key_ids *, const struct asymmetric_key_id *);

File crypto/asymmetric_keys/signature.c:
25:	void public_key_signature_free(struct public_key_signature *);
46:	int verify_signature(const struct key *, const struct public_key_signature *);

File crypto/asymmetric_keys/verify_pefile.c:
419:	int verify_pefile_signature(const void *, unsigned int, struct key *, enum key_being_used_for);

File crypto/asymmetric_keys/x509_cert_parser.c:
587:	int x509_akid_note_kid(void *, size_t, unsigned char, const void *, size_t);
610:	int x509_akid_note_name(void *, size_t, unsigned char, const void *, size_t);
626:	int x509_akid_note_serial(void *, size_t, unsigned char, const void *, size_t);
64:	struct x509_certificate *x509_cert_parse(const void *, size_t);
491:	int x509_decode_time(time64_t *, size_t, unsigned char, const unsigned char *, size_t);
409:	int x509_extract_key_data(void *, size_t, unsigned char, const void *, size_t);
282:	int x509_extract_name_segment(void *, size_t, unsigned char, const void *, size_t);
47:	void x509_free_certificate(struct x509_certificate *);
149:	int x509_note_OID(void *, size_t, unsigned char, const void *, size_t);
386:	int x509_note_issuer(void *, size_t, unsigned char, const void *, size_t);
576:	int x509_note_not_after(void *, size_t, unsigned char, const void *, size_t);
568:	int x509_note_not_before(void *, size_t, unsigned char, const void *, size_t);
186:	int x509_note_pkey_algo(void *, size_t, unsigned char, const void *, size_t);
269:	int x509_note_serial(void *, size_t, unsigned char, const void *, size_t);
238:	int x509_note_signature(void *, size_t, unsigned char, const void *, size_t);
396:	int x509_note_subject(void *, size_t, unsigned char, const void *, size_t);
169:	int x509_note_tbs_certificate(void *, size_t, unsigned char, const void *, size_t);
434:	int x509_process_extension(void *, size_t, unsigned char, const void *, size_t);
311:	static int x509_fabricate_name(struct x509_parse_context *, char **, size_t, unsigned char, size_t);

File crypto/asymmetric_keys/x509_public_key.c:
106:	int x509_check_for_self_signed(struct x509_certificate *);
27:	int x509_get_sig_params(struct x509_certificate *);
265:	static void x509_key_exit(void);
260:	static int x509_key_init(void);
161:	static int x509_key_preparse(struct key_preparsed_payload *);

File crypto/blkcipher.c:
359:	int blkcipher_aead_walk_virt_block(struct blkcipher_desc *, struct blkcipher_walk *, struct crypto_aead *, unsigned int);
100:	int blkcipher_walk_done(struct blkcipher_desc *, struct blkcipher_walk *, int);
309:	int blkcipher_walk_phys(struct blkcipher_desc *, struct blkcipher_walk *);
297:	int blkcipher_walk_virt(struct blkcipher_desc *, struct blkcipher_walk *);
346:	int blkcipher_walk_virt_block(struct blkcipher_desc *, struct blkcipher_walk *, unsigned int);
431:	static int async_decrypt(struct ablkcipher_request *);
417:	static int async_encrypt(struct ablkcipher_request *);
411:	static int async_setkey(struct crypto_ablkcipher *, const u8 *, unsigned int);
321:	static int blkcipher_walk_first(struct blkcipher_desc *, struct blkcipher_walk *);
221:	static int blkcipher_walk_next(struct blkcipher_desc *, struct blkcipher_walk *);
444:	static unsigned int crypto_blkcipher_ctxsize(struct crypto_alg *, u32, u32);
506:	static int crypto_blkcipher_report(struct sk_buff *, struct crypto_alg *);
537:	static void crypto_blkcipher_show(struct seq_file *, struct crypto_alg *);
492:	static int crypto_init_blkcipher_ops(struct crypto_tfm *, u32, u32);
395:	static int setkey(struct crypto_tfm *, const u8 *, unsigned int);

File crypto/cbc.c:
109:	static int crypto_cbc_create(struct crypto_template *, struct rtattr **);
64:	static int crypto_cbc_decrypt(struct skcipher_request *);
51:	static int crypto_cbc_encrypt(struct skcipher_request *);
43:	static void crypto_cbc_encrypt_one(struct crypto_skcipher *, const u8 *, u8 *);
96:	static void crypto_cbc_exit_tfm(struct crypto_skcipher *);
103:	static void crypto_cbc_free(struct skcipher_instance *);
81:	static int crypto_cbc_init_tfm(struct crypto_skcipher *);
201:	static void crypto_cbc_module_exit(void);
196:	static int crypto_cbc_module_init(void);
27:	static int crypto_cbc_setkey(struct crypto_skcipher *, const u8 *, unsigned int);

File crypto/cfb.c:
255:	static int crypto_cfb_create(struct crypto_template *, struct rtattr **);
205:	static int crypto_cfb_decrypt(struct skcipher_request *);
113:	static int crypto_cfb_encrypt(struct skcipher_request *);
242:	static void crypto_cfb_exit_tfm(struct crypto_skcipher *);
53:	static void crypto_cfb_final(struct skcipher_walk *, struct crypto_skcipher *);
249:	static void crypto_cfb_free(struct skcipher_instance *);
227:	static int crypto_cfb_init_tfm(struct crypto_skcipher *);
350:	static void crypto_cfb_module_exit(void);
345:	static int crypto_cfb_module_init(void);
189:	static int crypto_cfb_setkey(struct crypto_skcipher *, const u8 *, unsigned int);

File crypto/cipher.c:
107:	int crypto_init_cipher_ops(struct crypto_tfm *);
64:	static void cipher_crypt_unaligned(void (*)(struct crypto_tfm *, u8 *, const u8 *), struct crypto_tfm *, u8 *, const u8 *);
93:	static void cipher_decrypt_unaligned(struct crypto_tfm *, u8 *, const u8 *);
79:	static void cipher_encrypt_unaligned(struct crypto_tfm *, u8 *, const u8 *);
47:	static int setkey(struct crypto_tfm *, const u8 *, unsigned int);

File crypto/compress.c:
36:	int crypto_init_compress_ops(struct crypto_tfm *);
20:	static int crypto_compress(struct crypto_tfm *, const u8 *, unsigned int, u8 *, unsigned int *);
28:	static int crypto_decompress(struct crypto_tfm *, const u8 *, unsigned int, u8 *, unsigned int *);

File crypto/crc32c_generic.c:
121:	static int chksum_digest(struct shash_desc *, const u8 *, unsigned int, u8 *);
99:	static int chksum_final(struct shash_desc *, u8 *);
113:	static int chksum_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
62:	static int chksum_init(struct shash_desc *);
77:	static int chksum_setkey(struct crypto_shash *, const u8 *, unsigned int);
90:	static int chksum_update(struct shash_desc *, const u8 *, unsigned int);
129:	static int crc32c_cra_init(struct crypto_tfm *);
163:	static void crc32c_mod_fini(void);
158:	static int crc32c_mod_init(void);

File crypto/crct10dif_common.c:
70:	__u16 crc_t10dif_generic(__u16, const unsigned char *, size_t);

File crypto/crct10dif_generic.c:
82:	static int chksum_digest(struct shash_desc *, const u8 *, unsigned int, u8 *);
60:	static int chksum_final(struct shash_desc *, u8 *);
74:	static int chksum_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
42:	static int chksum_init(struct shash_desc *);
51:	static int chksum_update(struct shash_desc *, const u8 *, unsigned int);
110:	static void crct10dif_mod_fini(void);
105:	static int crct10dif_mod_init(void);

File crypto/cryptd.c:
1192:	struct crypto_blkcipher *cryptd_ablkcipher_child(struct cryptd_ablkcipher *);
1199:	bool cryptd_ablkcipher_queued(struct cryptd_ablkcipher *);
1350:	struct crypto_aead *cryptd_aead_child(struct cryptd_aead *);
1358:	bool cryptd_aead_queued(struct cryptd_aead *);
1293:	struct crypto_shash *cryptd_ahash_child(struct cryptd_ahash *);
1308:	bool cryptd_ahash_queued(struct cryptd_ahash *);
1164:	struct cryptd_ablkcipher *cryptd_alloc_ablkcipher(const char *, u32, u32);
1325:	struct cryptd_aead *cryptd_alloc_aead(const char *, u32, u32);
1268:	struct cryptd_ahash *cryptd_alloc_ahash(const char *, u32, u32);
1216:	struct cryptd_skcipher *cryptd_alloc_skcipher(const char *, u32, u32);
1207:	void cryptd_free_ablkcipher(struct cryptd_ablkcipher *);
1366:	void cryptd_free_aead(struct cryptd_aead *);
1316:	void cryptd_free_ahash(struct cryptd_ahash *);
1259:	void cryptd_free_skcipher(struct cryptd_skcipher *);
1301:	struct shash_desc *cryptd_shash_desc(struct ahash_request *);
1243:	struct crypto_skcipher *cryptd_skcipher_child(struct cryptd_skcipher *);
1251:	bool cryptd_skcipher_queued(struct cryptd_skcipher *);
951:	static void cryptd_aead_crypt(struct aead_request *, struct crypto_aead *, int, int (*)(struct aead_request *));
994:	static void cryptd_aead_decrypt(struct crypto_async_request *, int);
1021:	static int cryptd_aead_decrypt_enqueue(struct aead_request *);
984:	static void cryptd_aead_encrypt(struct crypto_async_request *, int);
1016:	static int cryptd_aead_encrypt_enqueue(struct aead_request *);
1045:	static void cryptd_aead_exit_tfm(struct crypto_aead *);
1026:	static int cryptd_aead_init_tfm(struct crypto_aead *);
942:	static int cryptd_aead_setauthsize(struct crypto_aead *, unsigned int);
933:	static int cryptd_aead_setkey(struct crypto_aead *, const u8 *, unsigned int);
235:	static void cryptd_blkcipher_crypt(struct ablkcipher_request *, struct crypto_blkcipher *, int, int (*)(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int));
284:	static void cryptd_blkcipher_decrypt(struct crypto_async_request *, int);
312:	static int cryptd_blkcipher_decrypt_enqueue(struct ablkcipher_request *);
275:	static void cryptd_blkcipher_encrypt(struct crypto_async_request *, int);
307:	static int cryptd_blkcipher_encrypt_enqueue(struct ablkcipher_request *);
335:	static void cryptd_blkcipher_exit_tfm(struct crypto_tfm *);
317:	static int cryptd_blkcipher_init_tfm(struct crypto_tfm *);
219:	static int cryptd_blkcipher_setkey(struct crypto_ablkcipher *, const u8 *, unsigned int);
1112:	static int cryptd_create(struct crypto_template *, struct rtattr **);
137:	static int cryptd_enqueue_request(struct cryptd_queue *, struct crypto_async_request *);
1390:	static void cryptd_exit(void);
125:	static void cryptd_fini_queue(struct cryptd_queue *);
1136:	static void cryptd_free(struct crypto_instance *);
715:	static void cryptd_hash_complete(struct ahash_request *, int);
822:	static void cryptd_hash_digest(struct crypto_async_request *, int);
844:	static int cryptd_hash_digest_enqueue(struct ahash_request *);
678:	static void cryptd_hash_exit_tfm(struct crypto_tfm *);
849:	static int cryptd_hash_export(struct ahash_request *, void *);
780:	static void cryptd_hash_final(struct crypto_async_request *, int);
796:	static int cryptd_hash_final_enqueue(struct ahash_request *);
801:	static void cryptd_hash_finup(struct crypto_async_request *, int);
817:	static int cryptd_hash_finup_enqueue(struct ahash_request *);
856:	static int cryptd_hash_import(struct ahash_request *, const void *);
730:	static void cryptd_hash_init(struct crypto_async_request *, int);
752:	static int cryptd_hash_init_enqueue(struct ahash_request *);
659:	static int cryptd_hash_init_tfm(struct crypto_tfm *);
685:	static int cryptd_hash_setkey(struct crypto_ahash *, const u8 *, unsigned int);
757:	static void cryptd_hash_update(struct crypto_async_request *, int);
775:	static int cryptd_hash_update_enqueue(struct ahash_request *);
1375:	static int cryptd_init(void);
342:	static int cryptd_init_instance(struct crypto_instance *, struct crypto_alg *);
169:	static void cryptd_queue_worker(struct work_struct *);
464:	static void cryptd_skcipher_complete(struct skcipher_request *, int);
507:	static void cryptd_skcipher_decrypt(struct crypto_async_request *, int);
554:	static int cryptd_skcipher_decrypt_enqueue(struct skcipher_request *);
479:	static void cryptd_skcipher_encrypt(struct crypto_async_request *, int);
549:	static int cryptd_skcipher_encrypt_enqueue(struct skcipher_request *);
577:	static void cryptd_skcipher_exit_tfm(struct crypto_skcipher *);
584:	static void cryptd_skcipher_free(struct skcipher_instance *);
559:	static int cryptd_skcipher_init_tfm(struct crypto_skcipher *);
448:	static int cryptd_skcipher_setkey(struct crypto_skcipher *, const u8 *, unsigned int);

File crypto/crypto_null.c:
155:	struct crypto_skcipher *crypto_get_default_null_skcipher(void);
180:	void crypto_put_default_null_skcipher(void);
211:	static void crypto_null_mod_fini(void);
191:	static int crypto_null_mod_init(void);
32:	static int null_compress(struct crypto_tfm *, const u8 *, unsigned int, u8 *, unsigned int *);
72:	static void null_crypt(struct crypto_tfm *, u8 *, const u8 *);
58:	static int null_digest(struct shash_desc *, const u8 *, unsigned int, u8 *);
53:	static int null_final(struct shash_desc *, u8 *);
42:	static int null_init(struct shash_desc *);
47:	static int null_update(struct shash_desc *, const u8 *, unsigned int);
77:	static int skcipher_null_crypt(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int);

File crypto/crypto_wq.c:
31:	static void crypto_wq_exit(void);
22:	static int crypto_wq_init(void);

File crypto/ctr.c:
180:	static struct crypto_instance *crypto_ctr_alloc(struct rtattr **);
126:	static int crypto_ctr_crypt(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int);
173:	static void crypto_ctr_exit_tfm(struct crypto_tfm *);
247:	static void crypto_ctr_free(struct crypto_instance *);
157:	static int crypto_ctr_init_tfm(struct crypto_tfm *);
475:	static void crypto_ctr_module_exit(void);
455:	static int crypto_ctr_module_init(void);
38:	static int crypto_ctr_setkey(struct crypto_tfm *, const u8 *, unsigned int);
353:	static int crypto_rfc3686_create(struct crypto_template *, struct rtattr **);
286:	static int crypto_rfc3686_crypt(struct skcipher_request *);
338:	static void crypto_rfc3686_exit_tfm(struct crypto_skcipher *);
345:	static void crypto_rfc3686_free(struct skcipher_instance *);
314:	static int crypto_rfc3686_init_tfm(struct crypto_skcipher *);
260:	static int crypto_rfc3686_setkey(struct crypto_skcipher *, const u8 *, unsigned int);

File crypto/deflate.c:
224:	static int __deflate_decompress(const u8 *, unsigned int, u8 *, unsigned int *, void *);
161:	static void __deflate_exit(void *);
144:	static void *deflate_alloc_ctx(struct crypto_scomp *);
46:	static int deflate_comp_init(struct deflate_ctx *, int);
209:	static int deflate_compress(struct crypto_tfm *, const u8 *, unsigned int, u8 *, unsigned int *);
75:	static int deflate_decomp_init(struct deflate_ctx *, int);
265:	static int deflate_decompress(struct crypto_tfm *, const u8 *, unsigned int, u8 *, unsigned int *);
173:	static void deflate_exit(struct crypto_tfm *);
167:	static void deflate_free_ctx(struct crypto_scomp *, void *);
154:	static int deflate_init(struct crypto_tfm *);
331:	static void deflate_mod_fini(void);
314:	static int deflate_mod_init(void);
217:	static int deflate_scompress(struct crypto_scomp *, const u8 *, unsigned int, u8 *, unsigned int *, void *);
273:	static int deflate_sdecompress(struct crypto_scomp *, const u8 *, unsigned int, u8 *, unsigned int *, void *);
126:	static void *gen_deflate_alloc_ctx(int, struct crypto_scomp *);
149:	static void *zlib_deflate_alloc_ctx(struct crypto_scomp *);

File crypto/drbg.c:
1001:	static void drbg_async_seed(struct work_struct *);
345:	static int drbg_ctr_df(struct drbg_state *, unsigned char *, size_t, struct list_head *);
542:	static int drbg_ctr_generate(struct drbg_state *, unsigned char *, unsigned int, struct list_head *);
479:	static int drbg_ctr_update(struct drbg_state *, struct list_head *, int);
2037:	static void drbg_exit(void);
1967:	static void drbg_fill_array(struct rng_alg *, const struct drbg_core *, int);
1596:	static int drbg_fini_hash_kernel(struct drbg_state *);
1629:	static int drbg_fini_sym_kernel(struct drbg_state *);
1243:	static int drbg_generate(struct drbg_state *, unsigned char *, unsigned int, struct drbg_string *);
769:	static int drbg_hash_df(struct drbg_state *, unsigned char *, size_t, struct list_head *);
924:	static int drbg_hash_generate(struct drbg_state *, unsigned char *, unsigned int, struct list_head *);
883:	static int drbg_hash_hashgen(struct drbg_state *, unsigned char *, unsigned int);
851:	static int drbg_hash_process_addtl(struct drbg_state *, struct list_head *);
808:	static int drbg_hash_update(struct drbg_state *, struct list_head *, int);
654:	static int drbg_hmac_generate(struct drbg_state *, unsigned char *, unsigned int, struct list_head *);
602:	static int drbg_hmac_update(struct drbg_state *, struct list_head *, int);
2004:	static int drbg_init(void);
1570:	static int drbg_init_hash_kernel(struct drbg_state *);
1651:	static int drbg_init_sym_kernel(struct drbg_state *);
1828:	static void drbg_kcapi_cleanup(struct crypto_tfm *);
1615:	static int drbg_kcapi_hash(unsigned char *, const struct list_head *, struct drbg_state *);
1607:	static void drbg_kcapi_hmacsetkey(struct drbg_state *, const unsigned char *);
1819:	static int drbg_kcapi_init(struct crypto_tfm *);
1842:	static int drbg_kcapi_random(struct crypto_rng *, const u8 *, unsigned int, u8 *, unsigned int);
1862:	static int drbg_kcapi_seed(struct crypto_rng *, const u8 *, unsigned int);
1550:	static void drbg_kcapi_set_entropy(struct crypto_rng *, const u8 *, unsigned int);
1719:	static int drbg_kcapi_sym(struct drbg_state *, unsigned char *, const struct drbg_string *, const struct drbg_string *);
1731:	static int drbg_kcapi_sym_ctr(struct drbg_state *, u8 *, u32, u8 *, u32);
1391:	static void drbg_schedule_async_seed(struct random_ready_callback *);
1049:	static int drbg_seed(struct drbg_state *, struct drbg_string *, bool);
1527:	static int drbg_uninstantiate(struct drbg_state *);

File crypto/ecb.c:
118:	static struct crypto_instance *crypto_ecb_alloc(struct rtattr **);
41:	static int crypto_ecb_crypt(struct blkcipher_desc *, struct blkcipher_walk *, struct crypto_cipher *, void (*)(struct crypto_tfm *, u8 *, const u8 *));
83:	static int crypto_ecb_decrypt(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int);
69:	static int crypto_ecb_encrypt(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int);
112:	static void crypto_ecb_exit_tfm(struct crypto_tfm *);
160:	static void crypto_ecb_free(struct crypto_instance *);
97:	static int crypto_ecb_init_tfm(struct crypto_tfm *);
178:	static void crypto_ecb_module_exit(void);
173:	static int crypto_ecb_module_init(void);
25:	static int crypto_ecb_setkey(struct crypto_tfm *, const u8 *, unsigned int);

File crypto/fips.c:
24:	static int fips_enable(char *);
72:	static void fips_exit(void);
66:	static int fips_init(void);

File crypto/gcm.c:
730:	static int crypto_gcm_base_create(struct crypto_template *, struct rtattr **);
708:	static int crypto_gcm_create(struct crypto_template *, struct rtattr **);
598:	static int crypto_gcm_create_common(struct crypto_template *, struct rtattr **, const char *, const char *);
523:	static int crypto_gcm_decrypt(struct aead_request *);
473:	static int crypto_gcm_encrypt(struct aead_request *);
581:	static void crypto_gcm_exit_tfm(struct crypto_aead *);
589:	static void crypto_gcm_free(struct aead_instance *);
174:	static void crypto_gcm_init_common(struct aead_request *);
543:	static int crypto_gcm_init_tfm(struct crypto_aead *);
1267:	static void crypto_gcm_module_exit(void);
1228:	static int crypto_gcm_module_init(void);
155:	static int crypto_gcm_setauthsize(struct crypto_aead *, unsigned int);
96:	static int crypto_gcm_setkey(struct crypto_aead *, const u8 *, unsigned int);
487:	static int crypto_gcm_verify(struct aead_request *);
892:	static int crypto_rfc4106_create(struct crypto_template *, struct rtattr **);
793:	static struct aead_request *crypto_rfc4106_crypt(struct aead_request *);
844:	static int crypto_rfc4106_decrypt(struct aead_request *);
834:	static int crypto_rfc4106_encrypt(struct aead_request *);
879:	static void crypto_rfc4106_exit_tfm(struct crypto_aead *);
886:	static void crypto_rfc4106_free(struct aead_instance *);
854:	static int crypto_rfc4106_init_tfm(struct crypto_aead *);
776:	static int crypto_rfc4106_setauthsize(struct crypto_aead *, unsigned int);
753:	static int crypto_rfc4106_setkey(struct crypto_aead *, const u8 *, unsigned int);
1132:	static int crypto_rfc4543_create(struct crypto_template *, struct rtattr **);
1020:	static int crypto_rfc4543_crypt(struct aead_request *, bool);
1072:	static int crypto_rfc4543_decrypt(struct aead_request *);
1067:	static int crypto_rfc4543_encrypt(struct aead_request *);
1115:	static void crypto_rfc4543_exit_tfm(struct crypto_aead *);
1077:	static int crypto_rfc4543_init_tfm(struct crypto_aead *);
1009:	static int crypto_rfc4543_setauthsize(struct crypto_aead *, unsigned int);
986:	static int crypto_rfc4543_setkey(struct crypto_aead *, const u8 *, unsigned int);
512:	static int gcm_dec_hash_continue(struct aead_request *, u32);
502:	static void gcm_decrypt_done(struct crypto_async_request *, int);
433:	static int gcm_enc_copy_hash(struct aead_request *, u32);
446:	static int gcm_encrypt_continue(struct aead_request *, u32);
458:	static void gcm_encrypt_done(struct crypto_async_request *, int);
420:	static int gcm_hash(struct aead_request *, u32);
367:	static int gcm_hash_assoc_continue(struct aead_request *, u32);
380:	static void gcm_hash_assoc_done(struct crypto_async_request *, int);
338:	static int gcm_hash_assoc_remain_continue(struct aead_request *, u32);
351:	static void gcm_hash_assoc_remain_done(struct crypto_async_request *, int);
308:	static int gcm_hash_crypt_continue(struct aead_request *, u32);
323:	static void gcm_hash_crypt_done(struct crypto_async_request *, int);
286:	static int gcm_hash_crypt_remain_continue(struct aead_request *, u32);
292:	static void gcm_hash_crypt_remain_done(struct crypto_async_request *, int);
395:	static int gcm_hash_init_continue(struct aead_request *, u32);
405:	static void gcm_hash_init_done(struct crypto_async_request *, int);
271:	static void gcm_hash_len_done(struct crypto_async_request *, int);

File crypto/gf128mul.c:
400:	void gf128mul_4k_bbe(be128 *, const struct gf128mul_4k *);
385:	void gf128mul_4k_lle(be128 *, const struct gf128mul_4k *);
312:	void gf128mul_64k_bbe(be128 *, const struct gf128mul_64k *);
208:	void gf128mul_bbe(be128 *, const be128 *);
302:	void gf128mul_free_64k(struct gf128mul_64k *);
363:	struct gf128mul_4k *gf128mul_init_4k_bbe(const be128 *);
341:	struct gf128mul_4k *gf128mul_init_4k_lle(const be128 *);
260:	struct gf128mul_64k *gf128mul_init_64k_bbe(const be128 *);
170:	void gf128mul_lle(be128 *, const be128 *);
159:	void gf128mul_x8_ble(le128 *, const le128 *);

File crypto/ghash-generic.c:
123:	static void ghash_exit_tfm(struct crypto_tfm *);
111:	static int ghash_final(struct shash_desc *, u8 *);
24:	static int ghash_init(struct shash_desc *);
153:	static void ghash_mod_exit(void);
148:	static int ghash_mod_init(void);
33:	static int ghash_setkey(struct crypto_shash *, const u8 *, unsigned int);
58:	static int ghash_update(struct shash_desc *, const u8 *, unsigned int);

File crypto/hmac.c:
182:	static int hmac_create(struct crypto_template *, struct rtattr **);
176:	static void hmac_exit_tfm(struct crypto_tfm *);
90:	static int hmac_export(struct shash_desc *, void *);
125:	static int hmac_final(struct shash_desc *, u8 *);
140:	static int hmac_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
99:	static int hmac_import(struct shash_desc *, const void *);
110:	static int hmac_init(struct shash_desc *);
157:	static int hmac_init_tfm(struct crypto_tfm *);
266:	static void hmac_module_exit(void);
261:	static int hmac_module_init(void);
45:	static int hmac_setkey(struct crypto_shash *, const u8 *, unsigned int);
115:	static int hmac_update(struct shash_desc *, const u8 *, unsigned int);

File crypto/internal.h:
108:	static void crypto_alg_put(struct crypto_alg *);

File crypto/jitterentropy-kcapi.c:
74:	int jent_fips_enabled(void);
98:	void jent_get_nstime(__u64 *);
84:	void jent_memcpy(void *, const void *, unsigned int);
79:	void jent_panic(char *);
59:	__u64 jent_rol64(__u64, unsigned int);
64:	void *jent_zalloc(unsigned int);
69:	void jent_zfree(void *);
137:	static void jent_kcapi_cleanup(struct crypto_tfm *);
124:	static int jent_kcapi_init(struct crypto_tfm *);
148:	static int jent_kcapi_random(struct crypto_rng *, const u8 *, unsigned int, u8 *, unsigned int);
162:	static int jent_kcapi_reset(struct crypto_rng *, const u8 *, unsigned int);
196:	static void jent_mod_exit(void);
184:	static int jent_mod_init(void);

File crypto/jitterentropy.c:
614:	struct rand_data *jent_entropy_collector_alloc(unsigned int, unsigned int);
654:	void jent_entropy_collector_free(struct rand_data *);
662:	int jent_entropy_init(void);
584:	int jent_read_entropy(struct rand_data *, unsigned char *, unsigned int);
545:	static void jent_fips_test(struct rand_data *);
202:	static __u64 jent_fold_time(struct rand_data *, __u64, __u64 *, __u64);
475:	static void jent_gen_entropy(struct rand_data *);
133:	static __u64 jent_loop_shuffle(struct rand_data *, unsigned int, unsigned int);
346:	static __u64 jent_measure_jitter(struct rand_data *);
259:	static unsigned int jent_memaccess(struct rand_data *, __u64);
421:	static void jent_stir_pool(struct rand_data *);
319:	static void jent_stuck(struct rand_data *, __u64);
389:	static __u64 jent_unbiased_bit(struct rand_data *);

File crypto/kpp.c:
93:	struct crypto_kpp *crypto_alloc_kpp(const char *, u32, u32);
108:	int crypto_register_kpp(struct kpp_alg *);
117:	void crypto_unregister_kpp(struct kpp_alg *);
58:	static void crypto_kpp_exit_tfm(struct crypto_tfm *);
66:	static int crypto_kpp_init_tfm(struct crypto_tfm *);
29:	static int crypto_kpp_report(struct sk_buff *, struct crypto_alg *);
53:	static void crypto_kpp_show(struct seq_file *, struct crypto_alg *);

File crypto/lzo.c:
31:	static void *lzo_alloc_ctx(struct crypto_scomp *);
80:	static int lzo_compress(struct crypto_tfm *, const u8 *, unsigned int, u8 *, unsigned int *);
110:	static int lzo_decompress(struct crypto_tfm *, const u8 *, unsigned int, u8 *, unsigned int *);
58:	static void lzo_exit(struct crypto_tfm *);
53:	static void lzo_free_ctx(struct crypto_scomp *, void *);
42:	static int lzo_init(struct crypto_tfm *);
164:	static void lzo_mod_fini(void);
147:	static int lzo_mod_init(void);
88:	static int lzo_scompress(struct crypto_scomp *, const u8 *, unsigned int, u8 *, unsigned int *, void *);
116:	static int lzo_sdecompress(struct crypto_scomp *, const u8 *, unsigned int, u8 *, unsigned int *, void *);

File crypto/md5.c:
205:	static int md5_export(struct shash_desc *, void *);
177:	static int md5_final(struct shash_desc *, u8 *);
213:	static int md5_import(struct shash_desc *, const void *);
132:	static int md5_init(struct shash_desc *);
242:	static void md5_mod_fini(void);
237:	static int md5_mod_init(void);
43:	static void md5_transform(__u32 *, const __u32 *);
145:	static int md5_update(struct shash_desc *, const u8 *, unsigned int);

File crypto/memneq.c:
156:	unsigned long __crypto_memneq(const void *, const void *, size_t);

File crypto/proc.c:
102:	void crypto_exit_proc(void);
97:	void crypto_init_proc(void);
31:	static void *c_next(struct seq_file *, void *, loff_t *);
41:	static int c_show(struct seq_file *, void *);
25:	static void *c_start(struct seq_file *, loff_t *);
36:	static void c_stop(struct seq_file *, void *);

File crypto/rng.c:
116:	struct crypto_rng *crypto_alloc_rng(const char *, u32, u32);
162:	int crypto_del_default_rng(void);
122:	int crypto_get_default_rng(void);
153:	void crypto_put_default_rng(void);
183:	int crypto_register_rng(struct rng_alg *);
204:	int crypto_register_rngs(struct rng_alg *, int);
36:	int crypto_rng_reset(struct crypto_rng *, const u8 *, unsigned int);
198:	void crypto_unregister_rng(struct rng_alg *);
224:	void crypto_unregister_rngs(struct rng_alg *, int);
59:	static int crypto_rng_init_tfm(struct crypto_tfm *);
72:	static int crypto_rng_report(struct sk_buff *, struct crypto_alg *);
97:	static void crypto_rng_show(struct seq_file *, struct crypto_alg *);

File crypto/rsa-pkcs1pad.c:
586:	static int pkcs1pad_create(struct crypto_template *, struct rtattr **);
348:	static int pkcs1pad_decrypt(struct akcipher_request *);
279:	static int pkcs1pad_decrypt_complete(struct akcipher_request *, int);
333:	static void pkcs1pad_decrypt_complete_cb(struct crypto_async_request *, int);
231:	static int pkcs1pad_encrypt(struct akcipher_request *);
176:	static int pkcs1pad_encrypt_sign_complete(struct akcipher_request *, int);
215:	static void pkcs1pad_encrypt_sign_complete_cb(struct crypto_async_request *, int);
570:	static void pkcs1pad_exit_tfm(struct crypto_akcipher *);
577:	static void pkcs1pad_free(struct akcipher_instance *);
151:	static unsigned int pkcs1pad_get_max_size(struct crypto_akcipher *);
555:	static int pkcs1pad_init_tfm(struct crypto_akcipher *);
130:	static int pkcs1pad_set_priv_key(struct crypto_akcipher *, const void *, unsigned int);
109:	static int pkcs1pad_set_pub_key(struct crypto_akcipher *, const void *, unsigned int);
164:	static void pkcs1pad_sg_set_buf(struct scatterlist *, void *, size_t, struct scatterlist *);
381:	static int pkcs1pad_sign(struct akcipher_request *);
522:	static int pkcs1pad_verify(struct akcipher_request *);
436:	static int pkcs1pad_verify_complete(struct akcipher_request *, int);
499:	static void pkcs1pad_verify_complete_cb(struct crypto_async_request *, int);

File crypto/rsa.c:
43:	static int _rsa_dec(MPI, MPI, const struct rsa_mpi_key *, const struct rsa_mpi_key *);
125:	static int rsa_dec(struct akcipher_request *);
86:	static int rsa_enc(struct akcipher_request *);
388:	static void rsa_exit(void);
346:	static void rsa_exit_tfm(struct crypto_akcipher *);
242:	static void rsa_free_mpi_key(struct rsa_mpi_key *);
371:	static int rsa_init(void);
339:	static unsigned int rsa_max_size(struct crypto_akcipher *);
301:	static int rsa_set_priv_key(struct crypto_akcipher *, const void *, unsigned int);
267:	static int rsa_set_pub_key(struct crypto_akcipher *, const void *, unsigned int);
163:	static int rsa_sign(struct akcipher_request *);
202:	static int rsa_verify(struct akcipher_request *);

File crypto/rsa_helper.c:
66:	int rsa_get_d(void *, size_t, unsigned char, const void *, size_t);
111:	int rsa_get_dp(void *, size_t, unsigned char, const void *, size_t);
126:	int rsa_get_dq(void *, size_t, unsigned char, const void *, size_t);
51:	int rsa_get_e(void *, size_t, unsigned char, const void *, size_t);
21:	int rsa_get_n(void *, size_t, unsigned char, const void *, size_t);
81:	int rsa_get_p(void *, size_t, unsigned char, const void *, size_t);
96:	int rsa_get_q(void *, size_t, unsigned char, const void *, size_t);
141:	int rsa_get_qinv(void *, size_t, unsigned char, const void *, size_t);
186:	int rsa_parse_priv_key(struct rsa_key *, const void *, unsigned int);
167:	int rsa_parse_pub_key(struct rsa_key *, const void *, unsigned int);

File crypto/scatterwalk.c:
31:	void scatterwalk_copychunks(void *, struct scatter_walk *, size_t, int);
77:	struct scatterlist *scatterwalk_ffwd(struct scatterlist *, struct scatterlist *, unsigned int);
60:	void scatterwalk_map_and_copy(void *, struct scatterlist *, unsigned int, unsigned int, int);

File crypto/scompress.c:
236:	struct acomp_req *crypto_acomp_scomp_alloc_ctx(struct acomp_req *);
255:	void crypto_acomp_scomp_free_ctx(struct acomp_req *);
209:	int crypto_init_scomp_ops_async(struct crypto_tfm *);
280:	int crypto_register_scomp(struct scomp_alg *);
298:	int crypto_register_scomps(struct scomp_alg *, int);
292:	int crypto_unregister_scomp(struct scomp_alg *);
318:	void crypto_unregister_scomps(struct scomp_alg *, int);
198:	static void crypto_exit_scomp_ops_async(struct crypto_tfm *);
81:	static void **crypto_scomp_alloc_scratches(void);
68:	static void crypto_scomp_free_scratches(void **);
132:	static int crypto_scomp_init_tfm(struct crypto_tfm *);
39:	static int crypto_scomp_report(struct sk_buff *, struct crypto_alg *);
63:	static void crypto_scomp_show(struct seq_file *, struct crypto_alg *);
143:	static int scomp_acomp_comp_decomp(struct acomp_req *, int);
188:	static int scomp_acomp_compress(struct acomp_req *);
193:	static int scomp_acomp_decompress(struct acomp_req *);

File crypto/seqiv.c:
117:	static int seqiv_aead_decrypt(struct aead_request *);
55:	static int seqiv_aead_encrypt(struct aead_request *);
46:	static void seqiv_aead_encrypt_complete(struct crypto_async_request *, int);
28:	static void seqiv_aead_encrypt_complete2(struct aead_request *, int);
179:	static int seqiv_create(struct crypto_template *, struct rtattr **);
193:	static void seqiv_free(struct crypto_instance *);
210:	static void seqiv_module_exit(void);
205:	static int seqiv_module_init(void);

File crypto/sha1_generic.c:
61:	int crypto_sha1_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
48:	int crypto_sha1_update(struct shash_desc *, const u8 *, unsigned int);
55:	static int sha1_final(struct shash_desc *, u8 *);
36:	static void sha1_generic_block_fn(struct sha1_state *, const u8 *, int);
90:	static void sha1_generic_mod_fini(void);
85:	static int sha1_generic_mod_init(void);

File crypto/sha256_generic.c:
256:	int crypto_sha256_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
243:	int crypto_sha256_update(struct shash_desc *, const u8 *, unsigned int);
250:	static int sha256_final(struct shash_desc *, u8 *);
234:	static void sha256_generic_block_fn(struct sha256_state *, const u8 *, int);
299:	static void sha256_generic_mod_fini(void);
294:	static int sha256_generic_mod_init(void);
71:	static void sha256_transform(u32 *, const u8 *);

File crypto/shash.c:
458:	struct crypto_shash *crypto_alloc_shash(const char *, u32, u32);
355:	int crypto_init_shash_ops_async(struct crypto_tfm *);
568:	int crypto_init_shash_spawn(struct crypto_shash_spawn *, struct shash_alg *, struct crypto_instance *);
493:	int crypto_register_shash(struct shash_alg *);
512:	int crypto_register_shashes(struct shash_alg *, int);
193:	int crypto_shash_digest(struct shash_desc *, const u8 *, unsigned int, u8 *);
152:	int crypto_shash_final(struct shash_desc *, u8 *);
172:	int crypto_shash_finup(struct shash_desc *, const u8 *, unsigned int, u8 *);
63:	int crypto_shash_setkey(struct crypto_shash *, const u8 *, unsigned int);
116:	int crypto_shash_update(struct shash_desc *, const u8 *, unsigned int);
506:	int crypto_unregister_shash(struct shash_alg *);
532:	int crypto_unregister_shashes(struct shash_alg *, int);
296:	int shash_ahash_digest(struct ahash_request *, struct shash_desc *);
264:	int shash_ahash_finup(struct ahash_request *, struct shash_desc *);
241:	int shash_ahash_update(struct ahash_request *, struct shash_desc *);
577:	struct shash_alg *shash_attr_alg(struct rtattr *, u32, u32);
561:	void shash_free_instance(struct crypto_instance *);
28:	int shash_no_setkey(struct crypto_shash *, const u8 *, unsigned int);
548:	int shash_register_instance(struct crypto_template *, struct shash_instance *);
348:	static void crypto_exit_shash_ops_async(struct crypto_tfm *);
396:	static int crypto_shash_init_tfm(struct crypto_tfm *);
409:	static int crypto_shash_report(struct sk_buff *, struct crypto_alg *);
436:	static void crypto_shash_show(struct seq_file *, struct crypto_alg *);
321:	static int shash_async_digest(struct ahash_request *);
332:	static int shash_async_export(struct ahash_request *, void *);
259:	static int shash_async_final(struct ahash_request *);
285:	static int shash_async_finup(struct ahash_request *);
337:	static int shash_async_import(struct ahash_request *, const void *);
230:	static int shash_async_init(struct ahash_request *);
222:	static int shash_async_setkey(struct crypto_ahash *, const u8 *, unsigned int);
254:	static int shash_async_update(struct ahash_request *);
210:	static int shash_default_export(struct shash_desc *, void *);
216:	static int shash_default_import(struct shash_desc *, const void *);
186:	static int shash_digest_unaligned(struct shash_desc *, const u8 *, unsigned int, u8 *);
165:	static int shash_finup_unaligned(struct shash_desc *, const u8 *, unsigned int, u8 *);
465:	static int shash_prepare_alg(struct shash_alg *);

File crypto/simd.c:
225:	int simd_register_skciphers_compat(struct skcipher_alg *, int, struct simd_skcipher_alg **);
205:	struct simd_skcipher_alg *simd_skcipher_create(const char *, const char *);
136:	struct simd_skcipher_alg *simd_skcipher_create_compat(const char *, const char *, const char *);
218:	void simd_skcipher_free(struct simd_skcipher_alg *);
259:	void simd_unregister_skciphers(struct skcipher_alg *, int, struct simd_skcipher_alg **);
80:	static int simd_skcipher_decrypt(struct skcipher_request *);
59:	static int simd_skcipher_encrypt(struct skcipher_request *);
101:	static void simd_skcipher_exit(struct crypto_skcipher *);
108:	static int simd_skcipher_init(struct crypto_skcipher *);
43:	static int simd_skcipher_setkey(struct crypto_skcipher *, const u8 *, unsigned int);

File crypto/skcipher.c:
963:	struct crypto_skcipher *crypto_alloc_skcipher(const char *, u32, u32);
955:	int crypto_grab_skcipher(struct crypto_skcipher_spawn *, const char *, u32, u32);
970:	int crypto_has_skcipher2(const char *, u32, u32);
997:	int crypto_register_skcipher(struct skcipher_alg *);
1016:	int crypto_register_skciphers(struct skcipher_alg *, int);
1010:	void crypto_unregister_skcipher(struct skcipher_alg *);
1036:	void crypto_unregister_skciphers(struct skcipher_alg *, int);
1045:	int skcipher_register_instance(struct crypto_template *, struct skcipher_instance *);
555:	int skcipher_walk_aead(struct skcipher_walk *, struct aead_request *, bool);
573:	int skcipher_walk_aead_decrypt(struct skcipher_walk *, struct aead_request *, bool);
502:	int skcipher_walk_async(struct skcipher_walk *, struct skcipher_request *);
496:	void skcipher_walk_atomise(struct skcipher_walk *);
186:	void skcipher_walk_complete(struct skcipher_walk *, int);
109:	int skcipher_walk_done(struct skcipher_walk *, int);
481:	int skcipher_walk_virt(struct skcipher_walk *, struct skcipher_request *, bool);
759:	static void crypto_exit_skcipher_ops_ablkcipher(struct crypto_tfm *);
660:	static void crypto_exit_skcipher_ops_blkcipher(struct crypto_tfm *);
848:	static void crypto_skcipher_exit_tfm(struct crypto_tfm *);
584:	static unsigned int crypto_skcipher_extsize(struct crypto_alg *);
885:	static void crypto_skcipher_free_instance(struct crypto_instance *);
856:	static int crypto_skcipher_init_tfm(struct crypto_tfm *);
912:	static int crypto_skcipher_report(struct sk_buff *, struct crypto_alg *);
895:	static void crypto_skcipher_show(struct seq_file *, struct crypto_alg *);
750:	static int skcipher_decrypt_ablkcipher(struct skcipher_request *);
651:	static int skcipher_decrypt_blkcipher(struct skcipher_request *);
741:	static int skcipher_encrypt_ablkcipher(struct skcipher_request *);
642:	static int skcipher_encrypt_blkcipher(struct skcipher_request *);
822:	static int skcipher_setkey(struct crypto_skcipher *, const u8 *, unsigned int);
701:	static int skcipher_setkey_ablkcipher(struct crypto_skcipher *, const u8 *, unsigned int);
602:	static int skcipher_setkey_blkcipher(struct crypto_skcipher *, const u8 *, unsigned int);
513:	static int skcipher_walk_aead_common(struct skcipher_walk *, struct aead_request *, bool);
436:	static int skcipher_walk_first(struct skcipher_walk *);
348:	static int skcipher_walk_next(struct skcipher_walk *);
453:	static int skcipher_walk_skcipher(struct skcipher_walk *, struct skcipher_request *);

File crypto/testmgr.c:
3671:	int alg_test(const char *, const char *, u32, u32);
1827:	static int __alg_test_hash(const struct hash_testvec *, unsigned int, const char *, u32, u32);
604:	static int __test_aead(struct crypto_aead *, int, const struct aead_testvec *, unsigned int, const bool, const int);
268:	static int __test_hash(struct crypto_ahash *, const struct hash_testvec *, unsigned int, enum hash_test, const int);
1099:	static int __test_skcipher(struct crypto_skcipher *, int, const struct cipher_testvec *, unsigned int, const bool, const int);
3646:	static int alg_find_test(const char *);
1716:	static int alg_test_aead(const struct alg_test_desc *, const char *, u32, u32);
2382:	static int alg_test_akcipher(const struct alg_test_desc *, const char *, u32, u32);
1789:	static int alg_test_comp(const struct alg_test_desc *, const char *, u32, u32);
1941:	static int alg_test_cprng(const struct alg_test_desc *, const char *, u32, u32);
1888:	static int alg_test_crc32c(const struct alg_test_desc *, const char *, u32, u32);
2030:	static int alg_test_drbg(const struct alg_test_desc *, const char *, u32, u32);
1850:	static int alg_test_hash(const struct alg_test_desc *, const char *, u32, u32);
2216:	static int alg_test_kpp(const struct alg_test_desc *, const char *, u32, u32);
2402:	static int alg_test_null(const struct alg_test_desc *, const char *, u32, u32);
1767:	static int alg_test_skcipher(const struct alg_test_desc *, const char *, u32, u32);
2055:	static int do_test_kpp(struct crypto_kpp *, const struct kpp_testvec *, const char *);
1962:	static int drbg_cavs_test(const struct drbg_testvec *, int, const char *, u32, u32);
1485:	static int test_acomp(struct crypto_acomp *, const struct comp_testvec *, const struct comp_testvec *, int, int);
984:	static int test_aead(struct crypto_aead *, int, const struct aead_testvec *, unsigned int);
2236:	static int test_akcipher_one(struct crypto_akcipher *, const struct akcipher_testvec *);
1017:	static int test_cipher(struct crypto_cipher *, int, const struct cipher_testvec *, unsigned int);
576:	static int test_hash(struct crypto_ahash *, const struct hash_testvec *, unsigned int, enum hash_test);
1345:	static int test_skcipher(struct crypto_skcipher *, int, const struct cipher_testvec *, unsigned int);
151:	static int testmgr_alloc_buf(char **);

File crypto/zstd.c:
158:	static int __zstd_compress(const u8 *, unsigned int, u8 *, unsigned int *, void *);
114:	static void *zstd_alloc_ctx(struct crypto_scomp *);
40:	static int zstd_comp_init(struct zstd_ctx *, struct zstd_ctx *);
172:	static int zstd_compress(struct crypto_tfm *, const u8 *, unsigned int, u8 *, unsigned int *);
64:	static int zstd_decomp_init(struct zstd_ctx *, struct zstd_ctx *);
200:	static int zstd_decompress(struct crypto_tfm *, const u8 *, unsigned int, u8 *, unsigned int *);
151:	static void zstd_exit(struct crypto_tfm *);
145:	static void zstd_free_ctx(struct crypto_scomp *, void *);
132:	static int zstd_init(struct crypto_tfm *);
254:	static void zstd_mod_fini(void);
239:	static int zstd_mod_init(void);
180:	static int zstd_scompress(struct crypto_scomp *, const u8 *, unsigned int, u8 *, unsigned int *, void *);
208:	static int zstd_sdecompress(struct crypto_scomp *, const u8 *, unsigned int, u8 *, unsigned int *, void *);

File drivers/acpi/ac.c:
303:	static int ac_do_not_check_pmic_quirk(const struct dmi_system_id *);
337:	static int acpi_ac_add(struct acpi_device *);
277:	static int acpi_ac_battery_notify(struct notifier_block *, unsigned long, void *);
480:	static void acpi_ac_exit(void);
118:	static int acpi_ac_get_state(struct acpi_ac *);
442:	static int acpi_ac_init(void);
241:	static void acpi_ac_notify(struct acpi_device *, u32);
420:	static int acpi_ac_remove(struct acpi_device *);
397:	static int acpi_ac_resume(struct device *);
140:	static int get_ac_property(struct power_supply *, enum power_supply_property, union power_supply_propval *);
297:	static int thinkpad_e530_quirk(const struct dmi_system_id *);

File drivers/acpi/acpi_adxl.c:
103:	int adxl_decode(u64, u64 *);
86:	const char * const *adxl_get_component_names(void);
39:	static union acpi_object *adxl_dsm(int, union acpi_object *);
138:	static int adxl_init(void);

File drivers/acpi/acpi_apd.c:
259:	void acpi_apd_init(void);
192:	static int acpi_apd_create_device(struct acpi_device *, const struct acpi_device_id *);
59:	static int acpi_apd_setup(struct apd_private_data *);
77:	static int misc_check_res(struct acpi_resource *, void *);
84:	static int st_misc_setup(struct apd_private_data *);

File drivers/acpi/acpi_cmos_rtc.c:
87:	void acpi_cmos_rtc_init(void);
31:	static acpi_status acpi_cmos_rtc_space_handler(u32, acpi_physical_address, u32, u64 *, void *, void *);
57:	static int acpi_install_cmos_rtc_space_handler(struct acpi_device *, const struct acpi_device_id *);
74:	static void acpi_remove_cmos_rtc_space_handler(struct acpi_device *);

File drivers/acpi/acpi_lpat.c:
151:	void acpi_lpat_free_conversion_table(struct acpi_lpat_conversion_table *);
97:	struct acpi_lpat_conversion_table *acpi_lpat_get_conversion_table(acpi_handle);
31:	int acpi_lpat_raw_to_temp(struct acpi_lpat_conversion_table *, int);
65:	int acpi_lpat_temp_to_raw(struct acpi_lpat_conversion_table *, int);

File drivers/acpi/acpi_lpit.c:
156:	void acpi_init_lpit(void);
94:	int lpit_read_residency_count_address(u64 *);
79:	static ssize_t low_power_idle_cpu_residency_us_show(struct device *, struct device_attribute *, char *);
64:	static ssize_t low_power_idle_system_residency_us_show(struct device *, struct device_attribute *, char *);
32:	static int lpit_read_residency_counter_us(u64 *, bool);
105:	static void lpit_update_residency(struct lpit_residency_info *, struct acpi_lpit_native *);

File drivers/acpi/acpi_lpss.c:
1227:	void acpi_lpss_init(void);
862:	static int acpi_lpss_activate(struct device *);
1202:	static void acpi_lpss_bind(struct device *);
603:	static int acpi_lpss_create_device(struct acpi_device *, const struct acpi_device_id *);
533:	static bool acpi_lpss_dep(struct acpi_device *, acpi_handle);
885:	static void acpi_lpss_dismiss(struct device *);
1032:	static int acpi_lpss_do_suspend_late(struct device *);
517:	static struct device *acpi_lpss_find_device(const char *, const char *);
1147:	static int acpi_lpss_platform_notify(struct notifier_block *, unsigned long, void *);
1007:	static int acpi_lpss_resume(struct device *);
1074:	static int acpi_lpss_resume_early(struct device *);
1084:	static int acpi_lpss_resume_noirq(struct device *);
1108:	static int acpi_lpss_runtime_resume(struct device *);
1101:	static int acpi_lpss_runtime_suspend(struct device *);
770:	static void acpi_lpss_set_ltr(struct device *, s32);
985:	static int acpi_lpss_suspend(struct device *, bool);
1043:	static int acpi_lpss_suspend_late(struct device *);
1053:	static int acpi_lpss_suspend_noirq(struct device *);
1215:	static void acpi_lpss_unbind(struct device *);
213:	static void bsw_pwm_setup(struct lpss_private_data *);
181:	static void byt_i2c_setup(struct lpss_private_data *);
167:	static void byt_pwm_setup(struct lpss_private_data *);
480:	static bool hid_uid_match(const char *, const char *, const char *, const char *);
377:	static int is_memory(struct acpi_resource *, void *);
146:	static void lpss_deassert_reset(struct lpss_private_data *);
739:	static ssize_t lpss_ltr_mode_show(struct device *, struct device_attribute *, char *);
724:	static ssize_t lpss_ltr_show(struct device *, struct device_attribute *, char *);
696:	static int lpss_reg_read(struct device *, unsigned int, u32 *);
128:	static void lpss_uart_setup(struct lpss_private_data *);
505:	static int match_hid_uid(struct device *, void *);

File drivers/acpi/acpi_memhotplug.c:
362:	void acpi_memory_hotplug_init(void);
178:	static int acpi_bind_memblk(struct memory_block *, void *);
301:	static int acpi_memory_device_add(struct acpi_device *, const struct acpi_device_id *);
291:	static void acpi_memory_device_free(struct acpi_memory_device *);
348:	static void acpi_memory_device_remove(struct acpi_device *);
83:	static acpi_status acpi_memory_get_resource(struct acpi_resource *, void *);
191:	static int acpi_unbind_memblk(struct memory_block *, void *);
197:	static void acpi_unbind_memory_blocks(struct acpi_memory_info *);
372:	static int disable_acpi_memory_hotplug(char *);

File drivers/acpi/acpi_platform.c:
64:	struct platform_device *acpi_create_platform_device(struct acpi_device *, struct property_entry *);

File drivers/acpi/acpi_pnp.c:
382:	bool acpi_is_pnp_device(struct acpi_device *);
388:	void acpi_pnp_init(void);
354:	static int acpi_pnp_attach(struct acpi_device *, const struct acpi_device_id *);
339:	static bool acpi_pnp_match(const char *, const struct acpi_device_id **);

File drivers/acpi/acpi_processor.c:
690:	bool acpi_duplicate_processor_id(int);
533:	void acpi_early_processor_osc(void);
168:	int acpi_map_cpu(acpi_handle, phys_cpuid_t, u32, int *);
716:	bool acpi_processor_claim_cst_control(void);
750:	int acpi_processor_evaluate_cst(acpi_handle, u32, struct acpi_processor_power *);
705:	void acpi_processor_init(void);
174:	int acpi_unmap_cpu(int);
184:	void arch_unregister_cpu(int);
497:	static acpi_status acpi_hwp_native_thermal_lvt_osc(acpi_handle, u32, void *, void **);
371:	static int acpi_processor_add(struct acpi_device *, const struct acpi_device_id *);
570:	static int acpi_processor_container_attach(struct acpi_device *, const struct acpi_device_id *);
637:	static acpi_status acpi_processor_ids_walk(acpi_handle, u32, void *, void **);
451:	static void acpi_processor_remove(struct acpi_device *);

File drivers/acpi/acpi_watchdog.c:
88:	bool acpi_has_watchdog(void);
94:	void acpi_watchdog_init(void);
61:	static const struct acpi_table_wdat *acpi_watchdog_get_wdat(void);

File drivers/acpi/acpica/dsargs.c:
191:	acpi_status acpi_ds_get_bank_field_arguments(union acpi_operand_object *);
242:	acpi_status acpi_ds_get_buffer_arguments(union acpi_operand_object *);
146:	acpi_status acpi_ds_get_buffer_field_arguments(union acpi_operand_object *);
286:	acpi_status acpi_ds_get_package_arguments(union acpi_operand_object *);
332:	acpi_status acpi_ds_get_region_arguments(union acpi_operand_object *);
43:	static acpi_status acpi_ds_execute_arguments(struct acpi_namespace_node *, struct acpi_namespace_node *, u32, u8 *);

File drivers/acpi/acpica/dscontrol.c:
35:	acpi_status acpi_ds_exec_begin_control_op(struct acpi_walk_state *, union acpi_parse_object *);
134:	acpi_status acpi_ds_exec_end_control_op(struct acpi_walk_state *, union acpi_parse_object *);

File drivers/acpi/acpica/dsdebug.c:
198:	void acpi_ds_dump_method_stack(acpi_status, struct acpi_walk_state *, union acpi_parse_object *);

File drivers/acpi/acpica/dsfield.c:
662:	acpi_status acpi_ds_create_bank_field(union acpi_parse_object *, struct acpi_namespace_node *, struct acpi_walk_state *);
120:	acpi_status acpi_ds_create_buffer_field(union acpi_parse_object *, struct acpi_walk_state *);
474:	acpi_status acpi_ds_create_field(union acpi_parse_object *, struct acpi_namespace_node *, struct acpi_walk_state *);
755:	acpi_status acpi_ds_create_index_field(union acpi_parse_object *, struct acpi_namespace_node *, struct acpi_walk_state *);
540:	acpi_status acpi_ds_init_field_objects(union acpi_parse_object *, struct acpi_walk_state *);
258:	static acpi_status acpi_ds_get_field_names(struct acpi_create_field_info *, struct acpi_walk_state *, union acpi_parse_object *);

File drivers/acpi/acpica/dsinit.c:
157:	acpi_status acpi_ds_initialize_objects(u32, struct acpi_namespace_node *);
46:	static acpi_status acpi_ds_init_one_object(acpi_handle, u32, void *, void **);

File drivers/acpi/acpica/dsmethod.c:
55:	acpi_status acpi_ds_auto_serialize_method(struct acpi_namespace_node *, union acpi_operand_object *);
292:	acpi_status acpi_ds_begin_method_execution(struct acpi_namespace_node *, union acpi_operand_object *, struct acpi_walk_state *);
456:	acpi_status acpi_ds_call_control_method(struct acpi_thread_state *, struct acpi_walk_state *, union acpi_parse_object *);
178:	acpi_status acpi_ds_method_error(acpi_status, struct acpi_walk_state *);
589:	acpi_status acpi_ds_restart_control_method(struct acpi_walk_state *, union acpi_operand_object *);
679:	void acpi_ds_terminate_control_method(union acpi_operand_object *, struct acpi_walk_state *);
122:	static acpi_status acpi_ds_detect_named_opcodes(struct acpi_walk_state *, union acpi_parse_object **);

File drivers/acpi/acpica/dsmthdat.c:
102:	void acpi_ds_method_data_delete_all(struct acpi_walk_state *);
213:	acpi_status acpi_ds_method_data_get_node(u8, u32, struct acpi_walk_state *, struct acpi_namespace_node **);
333:	acpi_status acpi_ds_method_data_get_value(u8, u32, struct acpi_walk_state *, union acpi_operand_object **);
55:	void acpi_ds_method_data_init(struct acpi_walk_state *);
158:	acpi_status acpi_ds_method_data_init_args(union acpi_operand_object **, u32, struct acpi_walk_state *);
498:	acpi_status acpi_ds_store_object_to_local(u8, u32, union acpi_operand_object *, struct acpi_walk_state *);

File drivers/acpi/acpica/dsobject.c:
152:	acpi_status acpi_ds_build_internal_buffer_obj(struct acpi_walk_state *, union acpi_parse_object *, u32, union acpi_operand_object **);
37:	acpi_status acpi_ds_build_internal_object(struct acpi_walk_state *, union acpi_parse_object *, union acpi_operand_object **);
254:	acpi_status acpi_ds_create_node(struct acpi_walk_state *, struct acpi_namespace_node *, union acpi_parse_object *);
322:	acpi_status acpi_ds_init_object_from_op(struct acpi_walk_state *, union acpi_parse_object *, u16, union acpi_operand_object **);

File drivers/acpi/acpica/dsopcode.c:
670:	acpi_status acpi_ds_eval_bank_field_operands(struct acpi_walk_state *, union acpi_parse_object *);
265:	acpi_status acpi_ds_eval_buffer_field_operands(struct acpi_walk_state *, union acpi_parse_object *);
558:	acpi_status acpi_ds_eval_data_object_operands(struct acpi_walk_state *, union acpi_parse_object *, union acpi_operand_object *);
350:	acpi_status acpi_ds_eval_region_operands(struct acpi_walk_state *, union acpi_parse_object *);
446:	acpi_status acpi_ds_eval_table_region_operands(struct acpi_walk_state *, union acpi_parse_object *);
44:	acpi_status acpi_ds_initialize_region(acpi_handle);
75:	static acpi_status acpi_ds_init_buffer_field(u16, union acpi_operand_object *, union acpi_operand_object *, union acpi_operand_object *, union acpi_operand_object *, union acpi_operand_object *);

File drivers/acpi/acpica/dspkginit.c:
55:	acpi_status acpi_ds_build_internal_package_obj(struct acpi_walk_state *, union acpi_parse_object *, u32, union acpi_operand_object **);
298:	acpi_status acpi_ds_init_package_element(u8, union acpi_operand_object *, union acpi_generic_state *, void *);

File drivers/acpi/acpica/dsutils.c:
34:	void acpi_ds_clear_implicit_return(struct acpi_walk_state *);
384:	void acpi_ds_clear_operands(struct acpi_walk_state *);
424:	acpi_status acpi_ds_create_operand(struct acpi_walk_state *, union acpi_parse_object *, u32);
665:	acpi_status acpi_ds_create_operands(struct acpi_walk_state *, union acpi_parse_object *);
303:	void acpi_ds_delete_result_if_not_used(union acpi_parse_object *, union acpi_operand_object *, struct acpi_walk_state *);
80:	u8 acpi_ds_do_implicit_return(union acpi_operand_object *, struct acpi_walk_state *, u8);
754:	acpi_status acpi_ds_evaluate_name_path(struct acpi_walk_state *);
134:	u8 acpi_ds_is_result_used(union acpi_parse_object *, struct acpi_walk_state *);
348:	acpi_status acpi_ds_resolve_operands(struct acpi_walk_state *);

File drivers/acpi/acpica/dswexec.c:
180:	acpi_status acpi_ds_exec_begin_op(struct acpi_walk_state *, union acpi_parse_object **);
324:	acpi_status acpi_ds_exec_end_op(struct acpi_walk_state *);
55:	acpi_status acpi_ds_get_predicate_value(struct acpi_walk_state *, union acpi_operand_object *);

File drivers/acpi/acpica/dswload.c:
38:	acpi_status acpi_ds_init_callbacks(struct acpi_walk_state *, u32);
106:	acpi_status acpi_ds_load1_begin_op(struct acpi_walk_state *, union acpi_parse_object **);
399:	acpi_status acpi_ds_load1_end_op(struct acpi_walk_state *);

File drivers/acpi/acpica/dswload2.c:
35:	acpi_status acpi_ds_load2_begin_op(struct acpi_walk_state *, union acpi_parse_object **);
358:	acpi_status acpi_ds_load2_end_op(struct acpi_walk_state *);

File drivers/acpi/acpica/dswscope.c:
29:	void acpi_ds_scope_stack_clear(struct acpi_walk_state *);
144:	acpi_status acpi_ds_scope_stack_pop(struct acpi_walk_state *);
67:	acpi_status acpi_ds_scope_stack_push(struct acpi_namespace_node *, acpi_object_type, struct acpi_walk_state *);

File drivers/acpi/acpica/dswstate.c:
506:	struct acpi_walk_state *acpi_ds_create_walk_state(acpi_owner_id, union acpi_parse_object *, union acpi_operand_object *, struct acpi_thread_state *);
670:	void acpi_ds_delete_walk_state(struct acpi_walk_state *);
412:	struct acpi_walk_state *acpi_ds_get_current_walk_state(struct acpi_thread_state *);
565:	acpi_status acpi_ds_init_aml_walk(struct acpi_walk_state *, union acpi_parse_object *, struct acpi_namespace_node *, u8 *, u32, struct acpi_evaluate_info *, u8);
323:	acpi_status acpi_ds_obj_stack_pop(u32, struct acpi_walk_state *);
368:	void acpi_ds_obj_stack_pop_and_delete(u32, struct acpi_walk_state *);
276:	acpi_status acpi_ds_obj_stack_push(void *, struct acpi_walk_state *);
466:	struct acpi_walk_state *acpi_ds_pop_walk_state(struct acpi_thread_state *);
441:	void acpi_ds_push_walk_state(struct acpi_walk_state *, struct acpi_thread_state *);
38:	acpi_status acpi_ds_result_pop(union acpi_operand_object **, struct acpi_walk_state *);
112:	acpi_status acpi_ds_result_push(union acpi_operand_object *, struct acpi_walk_state *);

File drivers/acpi/acpica/evevent.c:
167:	u32 acpi_ev_fixed_event_detect(void);
34:	acpi_status acpi_ev_initialize_events(void);
80:	acpi_status acpi_ev_install_xrupt_handlers(void);

File drivers/acpi/acpica/evglock.c:
170:	acpi_status acpi_ev_acquire_global_lock(u16);
33:	acpi_status acpi_ev_init_global_lock_handler(void);
266:	acpi_status acpi_ev_release_global_lock(void);
87:	acpi_status acpi_ev_remove_global_lock_handler(void);
115:	static u32 acpi_ev_global_lock_handler(void *);

File drivers/acpi/acpica/evgpe.c:
159:	acpi_status acpi_ev_add_gpe_reference(struct acpi_gpe_event_info *, u8);
626:	u32 acpi_ev_detect_gpe(struct acpi_namespace_node *, struct acpi_gpe_event_info *, u32);
78:	acpi_status acpi_ev_enable_gpe(struct acpi_gpe_event_info *);
578:	acpi_status acpi_ev_finish_gpe(struct acpi_gpe_event_info *);
291:	struct acpi_gpe_event_info *acpi_ev_get_gpe_event_info(acpi_handle, u32);
347:	u32 acpi_ev_gpe_detect(struct acpi_gpe_xrupt_info *);
748:	u32 acpi_ev_gpe_dispatch(struct acpi_namespace_node *, struct acpi_gpe_event_info *, u32);
251:	struct acpi_gpe_event_info *acpi_ev_low_get_gpe_info(u32, struct acpi_gpe_block_info *);
104:	acpi_status acpi_ev_mask_gpe(struct acpi_gpe_event_info *, u8);
206:	acpi_status acpi_ev_remove_gpe_reference(struct acpi_gpe_event_info *);
37:	acpi_status acpi_ev_update_gpe_enable_mask(struct acpi_gpe_event_info *);
552:	static void acpi_ev_asynch_enable_gpe(void *);
455:	static void acpi_ev_asynch_execute_gpe_method(void *);

File drivers/acpi/acpica/evgpeblk.c:
299:	acpi_status acpi_ev_create_gpe_block(struct acpi_namespace_node *, u64, u8, u32, u16, u32, struct acpi_gpe_block_info **);
97:	acpi_status acpi_ev_delete_gpe_block(struct acpi_gpe_block_info *);
404:	acpi_status acpi_ev_initialize_gpe_block(struct acpi_gpe_xrupt_info *, struct acpi_gpe_block_info *, void *);

File drivers/acpi/acpica/evgpeinit.c:
46:	acpi_status acpi_ev_gpe_initialize(void);
284:	acpi_status acpi_ev_match_gpe_method(acpi_handle, u32, void *, void **);
195:	void acpi_ev_update_gpes(acpi_owner_id);

File drivers/acpi/acpica/evgpeutil.c:
270:	acpi_status acpi_ev_delete_gpe_handlers(struct acpi_gpe_xrupt_info *, struct acpi_gpe_block_info *, void *);
210:	acpi_status acpi_ev_delete_gpe_xrupt(struct acpi_gpe_xrupt_info *);
89:	acpi_status acpi_ev_get_gpe_device(struct acpi_gpe_xrupt_info *, struct acpi_gpe_block_info *, void *);
131:	acpi_status acpi_ev_get_gpe_xrupt_block(u32, struct acpi_gpe_xrupt_info **);
31:	acpi_status acpi_ev_walk_gpe_list(acpi_gpe_callback, void *);

File drivers/acpi/acpica/evhandler.c:
286:	union acpi_operand_object *acpi_ev_find_region_handler(acpi_adr_space_type, union acpi_operand_object *);
118:	u8 acpi_ev_has_default_handler(struct acpi_namespace_node *, acpi_adr_space_type);
45:	acpi_status acpi_ev_install_region_handlers(void);
328:	acpi_status acpi_ev_install_space_handler(struct acpi_namespace_node *, acpi_adr_space_type, acpi_adr_space_handler, acpi_adr_space_setup, void *);
165:	static acpi_status acpi_ev_install_handler(acpi_handle, u32, void *, void **);

File drivers/acpi/acpica/evmisc.c:
35:	u8 acpi_ev_is_notify_object(struct acpi_namespace_node *);
68:	acpi_status acpi_ev_queue_notify_request(struct acpi_namespace_node *, u32);
206:	void acpi_ev_terminate(void);
161:	static void acpi_ev_notify_dispatch(void *);

File drivers/acpi/acpica/evregion.c:
102:	acpi_status acpi_ev_address_space_dispatch(union acpi_operand_object *, union acpi_operand_object *, u32, u32, u32, u64 *);
473:	acpi_status acpi_ev_attach_region(union acpi_operand_object *, union acpi_operand_object *, u8);
306:	void acpi_ev_detach_region(union acpi_operand_object *, u8);
517:	acpi_status acpi_ev_execute_reg_method(union acpi_operand_object *, u32);
649:	void acpi_ev_execute_reg_methods(struct acpi_namespace_node *, acpi_adr_space_type, u32);
43:	acpi_status acpi_ev_initialize_op_regions(void);
712:	static acpi_status acpi_ev_reg_run(acpi_handle, u32, void *, void **);

File drivers/acpi/acpica/evrgnini.c:
399:	acpi_status acpi_ev_cmos_region_setup(acpi_handle, u32, void *, void **);
475:	acpi_status acpi_ev_initialize_region(union acpi_operand_object *);
96:	acpi_status acpi_ev_io_space_region_setup(acpi_handle, u32, void *, void **);
312:	u8 acpi_ev_is_pci_root_bridge(struct acpi_namespace_node *);
129:	acpi_status acpi_ev_pci_config_region_setup(acpi_handle, u32, void *, void **);
34:	acpi_status acpi_ev_system_memory_region_setup(acpi_handle, u32, void *, void **);

File drivers/acpi/acpica/evsci.c:
120:	u32 acpi_ev_gpe_xrupt_handler(void *);
150:	u32 acpi_ev_install_sci_handler(void);
182:	acpi_status acpi_ev_remove_all_sci_handlers(void);
31:	u32 acpi_ev_sci_dispatch(void);
76:	static u32 acpi_ev_sci_xrupt_handler(void *);

File drivers/acpi/acpica/evxface.c:
1026:	acpi_status acpi_acquire_global_lock(u16, u32 *);
584:	acpi_status acpi_install_fixed_event_handler(u32, acpi_event_handler, void *);
534:	acpi_status acpi_install_global_event_handler(acpi_gbl_event_handler, void *);
840:	acpi_status acpi_install_gpe_handler(acpi_handle, u32, u32, acpi_gpe_handler, void *);
874:	acpi_status acpi_install_gpe_raw_handler(acpi_handle, u32, u32, acpi_gpe_handler, void *);
57:	acpi_status acpi_install_notify_handler(acpi_handle, u32, acpi_notify_handler, void *);
389:	acpi_status acpi_install_sci_handler(acpi_sci_handler, void *);
1066:	acpi_status acpi_release_global_lock(u32);
653:	acpi_status acpi_remove_fixed_event_handler(u32, acpi_event_handler);
905:	acpi_status acpi_remove_gpe_handler(acpi_handle, u32, acpi_gpe_handler);
211:	acpi_status acpi_remove_notify_handler(acpi_handle, u32, acpi_notify_handler);
463:	acpi_status acpi_remove_sci_handler(acpi_sci_handler);
716:	static acpi_status acpi_ev_install_gpe_handler(acpi_handle, u32, u32, u8, acpi_gpe_handler, void *);

File drivers/acpi/acpica/evxfevnt.c:
265:	acpi_status acpi_clear_event(u32);
96:	acpi_status acpi_disable(void);
205:	acpi_status acpi_disable_event(u32, u32);
31:	acpi_status acpi_enable(void);
142:	acpi_status acpi_enable_event(u32, u32);
309:	acpi_status acpi_get_event_status(u32, acpi_event_status *);

File drivers/acpi/acpica/evxfgpe.c:
568:	acpi_status acpi_clear_gpe(acpi_handle, u32);
717:	acpi_status acpi_disable_all_gpes(void);
148:	acpi_status acpi_disable_gpe(acpi_handle, u32);
653:	void acpi_dispatch_gpe(acpi_handle, u32);
748:	acpi_status acpi_enable_all_runtime_gpes(void);
779:	acpi_status acpi_enable_all_wakeup_gpes(void);
92:	acpi_status acpi_enable_gpe(acpi_handle, u32);
678:	acpi_status acpi_finish_gpe(acpi_handle, u32);
978:	acpi_status acpi_get_gpe_device(u32, acpi_handle *);
610:	acpi_status acpi_get_gpe_status(acpi_handle, u32, acpi_event_status *);
814:	acpi_status acpi_install_gpe_block(acpi_handle, struct acpi_generic_address *, u32, u32);
306:	acpi_status acpi_mark_gpe_for_wake(acpi_handle, u32);
259:	acpi_status acpi_mask_gpe(acpi_handle, u32, u8);
913:	acpi_status acpi_remove_gpe_block(acpi_handle);
199:	acpi_status acpi_set_gpe(acpi_handle, u32, u8);
492:	acpi_status acpi_set_gpe_wake_mask(acpi_handle, u32, u8);
352:	acpi_status acpi_setup_gpe_for_wake(acpi_handle, acpi_handle, u32);
43:	acpi_status acpi_update_all_gpes(void);

File drivers/acpi/acpica/evxfregn.c:
43:	acpi_status acpi_install_address_space_handler(acpi_handle, acpi_adr_space_type, acpi_adr_space_handler, acpi_adr_space_setup, void *);
106:	acpi_status acpi_remove_address_space_handler(acpi_handle, acpi_adr_space_type, acpi_adr_space_handler);

File drivers/acpi/acpica/exconcat.c:
338:	acpi_status acpi_ex_concat_template(union acpi_operand_object *, union acpi_operand_object *, union acpi_operand_object **, struct acpi_walk_state *);
47:	acpi_status acpi_ex_do_concatenate(union acpi_operand_object *, union acpi_operand_object *, union acpi_operand_object **, struct acpi_walk_state *);
301:	static acpi_status acpi_ex_convert_to_object_type_string(union acpi_operand_object **, union acpi_operand_object *);

File drivers/acpi/acpica/exconfig.c:
269:	acpi_status acpi_ex_load_op(union acpi_operand_object *, union acpi_operand_object *, struct acpi_walk_state *);
82:	acpi_status acpi_ex_load_table_op(struct acpi_walk_state *, union acpi_operand_object **);
477:	acpi_status acpi_ex_unload_table(union acpi_operand_object *);
46:	static acpi_status acpi_ex_add_table(u32, union acpi_operand_object **);
222:	static acpi_status acpi_ex_region_read(union acpi_operand_object *, u32, u8 *);

File drivers/acpi/acpica/exconvrt.c:
174:	acpi_status acpi_ex_convert_to_buffer(union acpi_operand_object *, union acpi_operand_object **);
38:	acpi_status acpi_ex_convert_to_integer(union acpi_operand_object *, union acpi_operand_object **, u32);
372:	acpi_status acpi_ex_convert_to_string(union acpi_operand_object *, union acpi_operand_object **, u32);
548:	acpi_status acpi_ex_convert_to_target_type(acpi_object_type, union acpi_operand_object *, union acpi_operand_object **, struct acpi_walk_state *);
260:	static u32 acpi_ex_convert_to_ascii(u64, u16, u8 *, u8);

File drivers/acpi/acpica/excreate.c:
30:	acpi_status acpi_ex_create_alias(struct acpi_walk_state *);
105:	acpi_status acpi_ex_create_event(struct acpi_walk_state *);
410:	acpi_status acpi_ex_create_method(u8 *, u32, struct acpi_walk_state *);
157:	acpi_status acpi_ex_create_mutex(struct acpi_walk_state *);
362:	acpi_status acpi_ex_create_power_resource(struct acpi_walk_state *);
315:	acpi_status acpi_ex_create_processor(struct acpi_walk_state *);
214:	acpi_status acpi_ex_create_region(u8 *, u32, u8, struct acpi_walk_state *);

File drivers/acpi/acpica/exdebug.c:
40:	void acpi_ex_do_debug_object(union acpi_operand_object *, u32, u32);

File drivers/acpi/acpica/exfield.c:
95:	acpi_status acpi_ex_read_data_from_field(struct acpi_walk_state *, union acpi_operand_object *, union acpi_operand_object **);
302:	acpi_status acpi_ex_write_data_to_field(union acpi_operand_object *, union acpi_operand_object *, union acpi_operand_object **);
39:	static u32 acpi_ex_get_serial_access_length(u32, u32);

File drivers/acpi/acpica/exfldio.c:
198:	acpi_status acpi_ex_access_region(union acpi_operand_object *, u32, u64 *, u32);
648:	acpi_status acpi_ex_extract_from_field(union acpi_operand_object *, void *, u32);
806:	acpi_status acpi_ex_insert_into_field(union acpi_operand_object *, void *, u32);
544:	acpi_status acpi_ex_write_with_update_rule(union acpi_operand_object *, u64, u64, u32);
338:	static acpi_status acpi_ex_field_datum_io(union acpi_operand_object *, u32, u64 *, u32);
290:	static u8 acpi_ex_register_overflow(u64, union acpi_operand_object *);

File drivers/acpi/acpica/exmisc.c:
209:	acpi_status acpi_ex_do_logical_numeric_op(u16, u64, u64, u8 *);
273:	acpi_status acpi_ex_do_logical_op(u16, union acpi_operand_object *, union acpi_operand_object *, u8 *);
122:	u64 acpi_ex_do_math_op(u16, u64, u64);
33:	acpi_status acpi_ex_get_object_reference(union acpi_operand_object *, union acpi_operand_object **, struct acpi_walk_state *);

File drivers/acpi/acpica/exmutex.c:
191:	acpi_status acpi_ex_acquire_mutex(union acpi_operand_object *, union acpi_operand_object *, struct acpi_walk_state *);
126:	acpi_status acpi_ex_acquire_mutex_object(u16, union acpi_operand_object *, u64);
461:	void acpi_ex_release_all_mutexes(struct acpi_thread_state *);
339:	acpi_status acpi_ex_release_mutex(union acpi_operand_object *, struct acpi_walk_state *);
283:	acpi_status acpi_ex_release_mutex_object(union acpi_operand_object *);
35:	void acpi_ex_unlink_mutex(union acpi_operand_object *);

File drivers/acpi/acpica/exnames.c:
207:	acpi_status acpi_ex_get_name_string(acpi_object_type, u8 *, char **, u32 *);
39:	static char *acpi_ex_allocate_name_string(u32, u32);
123:	static acpi_status acpi_ex_name_segment(u8 **, char *);

File drivers/acpi/acpica/exoparg1.c:
53:	acpi_status acpi_ex_opcode_0A_0T_1R(struct acpi_walk_state *);
113:	acpi_status acpi_ex_opcode_1A_0T_0R(struct acpi_walk_state *);
557:	acpi_status acpi_ex_opcode_1A_0T_1R(struct acpi_walk_state *);
179:	acpi_status acpi_ex_opcode_1A_1T_0R(struct acpi_walk_state *);
221:	acpi_status acpi_ex_opcode_1A_1T_1R(struct acpi_walk_state *);

File drivers/acpi/acpica/exoparg2.c:
55:	acpi_status acpi_ex_opcode_2A_0T_0R(struct acpi_walk_state *);
465:	acpi_status acpi_ex_opcode_2A_0T_1R(struct acpi_walk_state *);
221:	acpi_status acpi_ex_opcode_2A_1T_1R(struct acpi_walk_state *);
122:	acpi_status acpi_ex_opcode_2A_2T_1R(struct acpi_walk_state *);

File drivers/acpi/acpica/exoparg3.c:
51:	acpi_status acpi_ex_opcode_3A_0T_0R(struct acpi_walk_state *);
125:	acpi_status acpi_ex_opcode_3A_1T_1R(struct acpi_walk_state *);

File drivers/acpi/acpica/exoparg6.c:
176:	acpi_status acpi_ex_opcode_6A_0T_1R(struct acpi_walk_state *);
63:	static u8 acpi_ex_do_match(u32, union acpi_operand_object *, union acpi_operand_object *);

File drivers/acpi/acpica/exprep.c:
293:	acpi_status acpi_ex_prep_common_field_object(union acpi_operand_object *, u8, u8, u32, u32);
378:	acpi_status acpi_ex_prep_field_value(struct acpi_create_field_info *);

File drivers/acpi/acpica/exregion.c:
410:	acpi_status acpi_ex_cmos_space_handler(u32, acpi_physical_address, u32, u64 *, void *, void *);
474:	acpi_status acpi_ex_data_table_space_handler(u32, acpi_physical_address, u32, u64 *, void *, void *);
333:	acpi_status acpi_ex_pci_config_space_handler(u32, acpi_physical_address, u32, u64 *, void *, void *);
274:	acpi_status acpi_ex_system_io_space_handler(u32, acpi_physical_address, u32, u64 *, void *, void *);
35:	acpi_status acpi_ex_system_memory_space_handler(u32, acpi_physical_address, u32, u64 *, void *, void *);

File drivers/acpi/acpica/exresnte.c:
45:	acpi_status acpi_ex_resolve_node_to_value(struct acpi_namespace_node **, struct acpi_walk_state *);

File drivers/acpi/acpica/exresolv.c:
302:	acpi_status acpi_ex_resolve_multiple(struct acpi_walk_state *, union acpi_operand_object *, acpi_object_type *, union acpi_operand_object **);
41:	acpi_status acpi_ex_resolve_to_value(union acpi_operand_object **, struct acpi_walk_state *);

File drivers/acpi/acpica/exresop.c:
99:	acpi_status acpi_ex_resolve_operands(u16, union acpi_operand_object **, struct acpi_walk_state *);
40:	static acpi_status acpi_ex_check_object_type(acpi_object_type, acpi_object_type, void *);

File drivers/acpi/acpica/exstore.c:
52:	acpi_status acpi_ex_store(union acpi_operand_object *, union acpi_operand_object *, struct acpi_walk_state *);
361:	acpi_status acpi_ex_store_object_to_node(union acpi_operand_object *, struct acpi_namespace_node *, struct acpi_walk_state *, u8);
560:	static acpi_status acpi_ex_store_direct_to_node(union acpi_operand_object *, struct acpi_namespace_node *, struct acpi_walk_state *);

File drivers/acpi/acpica/exstoren.c:
34:	acpi_status acpi_ex_resolve_object(union acpi_operand_object **, acpi_object_type, struct acpi_walk_state *);
157:	acpi_status acpi_ex_store_object_to_object(union acpi_operand_object *, union acpi_operand_object *, union acpi_operand_object **, struct acpi_walk_state *);

File drivers/acpi/acpica/exstorob.c:
30:	acpi_status acpi_ex_store_buffer_to_buffer(union acpi_operand_object *, union acpi_operand_object *);
127:	acpi_status acpi_ex_store_string_to_string(union acpi_operand_object *, union acpi_operand_object *);

File drivers/acpi/acpica/exsystem.c:
159:	acpi_status acpi_ex_system_do_sleep(u64);
123:	acpi_status acpi_ex_system_do_stall(u32);
255:	acpi_status acpi_ex_system_reset_event(union acpi_operand_object *);
196:	acpi_status acpi_ex_system_signal_event(union acpi_operand_object *);
226:	acpi_status acpi_ex_system_wait_event(union acpi_operand_object *, union acpi_operand_object *);
76:	acpi_status acpi_ex_system_wait_mutex(void *, u16);
31:	acpi_status acpi_ex_system_wait_semaphore(void *, u16);

File drivers/acpi/acpica/extrace.c:
166:	void acpi_ex_start_trace_method(struct acpi_namespace_node *, union acpi_operand_object *, struct acpi_walk_state *);
279:	void acpi_ex_start_trace_opcode(union acpi_parse_object *, struct acpi_walk_state *);
223:	void acpi_ex_stop_trace_method(struct acpi_namespace_node *, union acpi_operand_object *, struct acpi_walk_state *);
131:	void acpi_ex_trace_point(acpi_trace_event_type, u8, u8 *, char *);

File drivers/acpi/acpica/exutils.c:
168:	void acpi_ex_acquire_global_lock(u32);
290:	void acpi_ex_eisa_id_to_string(char *, u64);
52:	void acpi_ex_enter_interpreter(void);
94:	void acpi_ex_exit_interpreter(void);
339:	void acpi_ex_integer_to_string(char *, u64);
372:	void acpi_ex_pci_cls_to_string(char *, u8 *);
207:	void acpi_ex_release_global_lock(u32);
126:	u8 acpi_ex_truncate_for32bit_table(union acpi_operand_object *);
400:	u8 acpi_is_valid_space_id(u8);

File drivers/acpi/acpica/hwacpi.c:
114:	u32 acpi_hw_get_mode(void);
28:	acpi_status acpi_hw_set_mode(u32);

File drivers/acpi/acpica/hwesleep.c:
30:	void acpi_hw_execute_sleep_method(char *, u32);
68:	acpi_status acpi_hw_extended_sleep(u8);
183:	acpi_status acpi_hw_extended_wake(u8);
148:	acpi_status acpi_hw_extended_wake_prep(u8);

File drivers/acpi/acpica/hwgpe.c:
140:	acpi_status acpi_hw_clear_gpe(struct acpi_gpe_event_info *);
332:	acpi_status acpi_hw_clear_gpe_block(struct acpi_gpe_xrupt_info *, struct acpi_gpe_block_info *, void *);
459:	acpi_status acpi_hw_disable_all_gpes(void);
295:	acpi_status acpi_hw_disable_gpe_block(struct acpi_gpe_xrupt_info *, struct acpi_gpe_block_info *, void *);
481:	acpi_status acpi_hw_enable_all_runtime_gpes(void);
503:	acpi_status acpi_hw_enable_all_wakeup_gpes(void);
370:	acpi_status acpi_hw_enable_runtime_gpe_block(struct acpi_gpe_xrupt_info *, struct acpi_gpe_block_info *, void *);
40:	u32 acpi_hw_get_gpe_register_bit(struct acpi_gpe_event_info *);
180:	acpi_status acpi_hw_get_gpe_status(struct acpi_gpe_event_info *, acpi_event_status *);
64:	acpi_status acpi_hw_low_set_gpe(struct acpi_gpe_event_info *, u32);
418:	static acpi_status acpi_hw_enable_wakeup_gpe_block(struct acpi_gpe_xrupt_info *, struct acpi_gpe_block_info *, void *);

File drivers/acpi/acpica/hwpci.c:
86:	acpi_status acpi_hw_derive_pci_id(struct acpi_pci_id *, acpi_handle, acpi_handle);
262:	static void acpi_hw_delete_pci_list(struct acpi_pci_device *);

File drivers/acpi/acpica/hwregs.c:
382:	acpi_status acpi_hw_clear_acpi_status(void);
426:	struct acpi_bit_register_info *acpi_hw_get_bit_register_info(u32);
195:	acpi_status acpi_hw_read(u64 *, struct acpi_generic_address *);
488:	acpi_status acpi_hw_register_read(u32, u32 *);
591:	acpi_status acpi_hw_register_write(u32, u32);
122:	acpi_status acpi_hw_validate_register(struct acpi_generic_address *, u8, u64 *);
290:	acpi_status acpi_hw_write(u64, struct acpi_generic_address *);
456:	acpi_status acpi_hw_write_pm1_control(u32, u32);
50:	static u8 acpi_hw_get_access_bit_width(u64, struct acpi_generic_address *, u8);
714:	static acpi_status acpi_hw_read_multiple(u32 *, struct acpi_generic_address *, struct acpi_generic_address *);
770:	static acpi_status acpi_hw_write_multiple(u32, struct acpi_generic_address *, struct acpi_generic_address *);

File drivers/acpi/acpica/hwsleep.c:
30:	acpi_status acpi_hw_legacy_sleep(u8);
247:	acpi_status acpi_hw_legacy_wake(u8);
180:	acpi_status acpi_hw_legacy_wake_prep(u8);

File drivers/acpi/acpica/hwvalid.c:
186:	acpi_status acpi_hw_read_port(acpi_io_address, u32 *, u32);
250:	acpi_status acpi_hw_write_port(acpi_io_address, u32, u32);
90:	static acpi_status acpi_hw_validate_io_request(acpi_io_address, u32);

File drivers/acpi/acpica/hwxface.c:
335:	acpi_status acpi_get_sleep_type_data(u8, u8 *, u8 *);
92:	acpi_status acpi_read(u64 *, struct acpi_generic_address *);
153:	acpi_status acpi_read_bit_register(u32, u32 *);
32:	acpi_status acpi_reset(void);
116:	acpi_status acpi_write(u64, struct acpi_generic_address *);
214:	acpi_status acpi_write_bit_register(u32, u32);

File drivers/acpi/acpica/hwxfsleep.c:
352:	acpi_status acpi_enter_sleep_state(u8);
275:	acpi_status acpi_enter_sleep_state_prep(u8);
157:	acpi_status acpi_enter_sleep_state_s4bios(void);
410:	acpi_status acpi_leave_sleep_state(u8);
385:	acpi_status acpi_leave_sleep_state_prep(u8);
128:	acpi_status acpi_set_firmware_waking_vector(acpi_physical_address, acpi_physical_address);
225:	static acpi_status acpi_hw_sleep_dispatch(u8, u32);

File drivers/acpi/acpica/nsaccess.c:
249:	acpi_status acpi_ns_lookup(union acpi_generic_state *, char *, acpi_object_type, acpi_interpreter_mode, u32, struct acpi_walk_state *, struct acpi_namespace_node **);
34:	acpi_status acpi_ns_root_initialize(void);

File drivers/acpi/acpica/nsalloc.c:
26:	struct acpi_namespace_node *acpi_ns_create_node(u32);
267:	void acpi_ns_delete_children(struct acpi_namespace_node *);
406:	void acpi_ns_delete_namespace_by_owner(acpi_owner_id);
318:	void acpi_ns_delete_namespace_subtree(struct acpi_namespace_node *);
70:	void acpi_ns_delete_node(struct acpi_namespace_node *);
191:	void acpi_ns_install_node(struct acpi_walk_state *, struct acpi_namespace_node *, struct acpi_namespace_node *, acpi_object_type);
132:	void acpi_ns_remove_node(struct acpi_namespace_node *);

File drivers/acpi/acpica/nsarguments.c:
92:	void acpi_ns_check_acpi_compliance(char *, struct acpi_namespace_node *, const union acpi_predefined_info *);
185:	void acpi_ns_check_argument_count(char *, struct acpi_namespace_node *, u32, const union acpi_predefined_info *);
30:	void acpi_ns_check_argument_types(struct acpi_evaluate_info *);

File drivers/acpi/acpica/nsconvert.c:
182:	acpi_status acpi_ns_convert_to_buffer(union acpi_operand_object *, union acpi_operand_object **);
34:	acpi_status acpi_ns_convert_to_integer(union acpi_operand_object *, union acpi_operand_object **);
432:	acpi_status acpi_ns_convert_to_reference(struct acpi_namespace_node *, union acpi_operand_object *, union acpi_operand_object **);
353:	acpi_status acpi_ns_convert_to_resource(struct acpi_namespace_node *, union acpi_operand_object *, union acpi_operand_object **);
99:	acpi_status acpi_ns_convert_to_string(union acpi_operand_object *, union acpi_operand_object **);
286:	acpi_status acpi_ns_convert_to_unicode(struct acpi_namespace_node *, union acpi_operand_object *, union acpi_operand_object **);

File drivers/acpi/acpica/nseval.c:
48:	acpi_status acpi_ns_evaluate(struct acpi_evaluate_info *);
326:	void acpi_ns_exec_module_code_list(void);

File drivers/acpi/acpica/nsinit.c:
260:	acpi_status acpi_ns_init_one_package(acpi_handle, u32, void *, void **);
105:	acpi_status acpi_ns_initialize_devices(u32);
46:	acpi_status acpi_ns_initialize_objects(void);
461:	static acpi_status acpi_ns_find_ini_methods(acpi_handle, u32, void *, void **);
526:	static acpi_status acpi_ns_init_one_device(acpi_handle, u32, void *, void **);
316:	static acpi_status acpi_ns_init_one_object(acpi_handle, u32, void *, void **);

File drivers/acpi/acpica/nsload.c:
42:	acpi_status acpi_ns_load_table(u32, struct acpi_namespace_node *);

File drivers/acpi/acpica/nsnames.c:
197:	u32 acpi_ns_build_normalized_path(struct acpi_namespace_node *, char *, u32, u8);
342:	char *acpi_ns_build_prefixed_pathname(union acpi_generic_state *, const char *);
34:	char *acpi_ns_get_external_pathname(struct acpi_namespace_node *);
293:	char *acpi_ns_get_normalized_pathname(struct acpi_namespace_node *, u8);
56:	acpi_size acpi_ns_get_pathname_length(struct acpi_namespace_node *);
88:	acpi_status acpi_ns_handle_to_name(acpi_handle, struct acpi_buffer *);
135:	acpi_status acpi_ns_handle_to_pathname(acpi_handle, struct acpi_buffer *, u8);

File drivers/acpi/acpica/nsobject.c:
313:	acpi_status acpi_ns_attach_data(struct acpi_namespace_node *, acpi_object_handler, void *);
37:	acpi_status acpi_ns_attach_object(struct acpi_namespace_node *, union acpi_operand_object *, acpi_object_type);
370:	acpi_status acpi_ns_detach_data(struct acpi_namespace_node *, acpi_object_handler);
168:	void acpi_ns_detach_object(struct acpi_namespace_node *);
415:	acpi_status acpi_ns_get_attached_data(struct acpi_namespace_node *, acpi_object_handler, void **);
246:	union acpi_operand_object *acpi_ns_get_attached_object(struct acpi_namespace_node *);
281:	union acpi_operand_object *acpi_ns_get_secondary_object(union acpi_operand_object *);

File drivers/acpi/acpica/nsparse.c:
44:	acpi_status acpi_ns_execute_table(u32, struct acpi_namespace_node *);
136:	acpi_status acpi_ns_one_complete_parse(u32, u32, struct acpi_namespace_node *);
238:	acpi_status acpi_ns_parse_table(u32, struct acpi_namespace_node *);

File drivers/acpi/acpica/nspredef.c:
189:	acpi_status acpi_ns_check_object_type(struct acpi_evaluate_info *, union acpi_operand_object **, u32, u32);
65:	acpi_status acpi_ns_check_return_value(struct acpi_namespace_node *, struct acpi_evaluate_info *, u32, acpi_status, union acpi_operand_object **);

File drivers/acpi/acpica/nsprepkg.c:
51:	acpi_status acpi_ns_check_package(struct acpi_evaluate_info *, union acpi_operand_object **);
701:	static acpi_status acpi_ns_check_package_elements(struct acpi_evaluate_info *, union acpi_operand_object **, u8, u32, u8, u32, u32);
386:	static acpi_status acpi_ns_check_package_list(struct acpi_evaluate_info *, const union acpi_predefined_info *, union acpi_operand_object **, u32);

File drivers/acpi/acpica/nsrepair.c:
438:	void acpi_ns_remove_null_elements(struct acpi_evaluate_info *, u8, union acpi_operand_object *);
358:	acpi_status acpi_ns_repair_null_element(struct acpi_evaluate_info *, u32, u32, union acpi_operand_object **);
120:	acpi_status acpi_ns_simple_repair(struct acpi_evaluate_info *, u32, u32, union acpi_operand_object **);
531:	acpi_status acpi_ns_wrap_with_package(struct acpi_evaluate_info *, union acpi_operand_object *, union acpi_operand_object **);

File drivers/acpi/acpica/nsrepair2.c:
150:	acpi_status acpi_ns_complex_repairs(struct acpi_evaluate_info *, struct acpi_namespace_node *, acpi_status, union acpi_operand_object **);
759:	static acpi_status acpi_ns_check_sorted_list(struct acpi_evaluate_info *, union acpi_operand_object *, u32, u32, u32, u8, char *);
217:	static acpi_status acpi_ns_repair_ALR(struct acpi_evaluate_info *, union acpi_operand_object **);
337:	static acpi_status acpi_ns_repair_CID(struct acpi_evaluate_info *, union acpi_operand_object **);
405:	static acpi_status acpi_ns_repair_CST(struct acpi_evaluate_info *, union acpi_operand_object **);
248:	static acpi_status acpi_ns_repair_FDE(struct acpi_evaluate_info *, union acpi_operand_object **);
490:	static acpi_status acpi_ns_repair_HID(struct acpi_evaluate_info *, union acpi_operand_object **);
573:	static acpi_status acpi_ns_repair_PRT(struct acpi_evaluate_info *, union acpi_operand_object **);
642:	static acpi_status acpi_ns_repair_PSS(struct acpi_evaluate_info *, union acpi_operand_object **);
710:	static acpi_status acpi_ns_repair_TSS(struct acpi_evaluate_info *, union acpi_operand_object **);

File drivers/acpi/acpica/nssearch.c:
251:	acpi_status acpi_ns_search_and_enter(u32, struct acpi_walk_state *, struct acpi_namespace_node *, acpi_interpreter_mode, acpi_object_type, u32, struct acpi_namespace_node **);
59:	acpi_status acpi_ns_search_one_scope(u32, struct acpi_namespace_node *, acpi_object_type, struct acpi_namespace_node **);

File drivers/acpi/acpica/nsutils.c:
200:	acpi_status acpi_ns_build_internal_name(struct acpi_namestring_info *);
367:	acpi_status acpi_ns_externalize_name(u32, const char *, u32 *, char **);
129:	void acpi_ns_get_internal_name_length(struct acpi_namestring_info *);
725:	acpi_status acpi_ns_get_node(struct acpi_namespace_node *, const char *, u32, struct acpi_namespace_node **);
647:	acpi_status acpi_ns_get_node_unlocked(struct acpi_namespace_node *, struct acpi_namespace_node **, u32, const char *);
75:	acpi_object_type acpi_ns_get_type(struct acpi_namespace_node *);
312:	acpi_status acpi_ns_internalize_name(const char *, char **);
100:	u32 acpi_ns_local(acpi_object_type);
609:	u32 acpi_ns_opens_scope(acpi_object_type);
37:	void acpi_ns_print_node_pathname(struct acpi_namespace_node *, const char *);
560:	void acpi_ns_terminate(void);
528:	struct acpi_namespace_node *acpi_ns_validate_handle(acpi_handle);

File drivers/acpi/acpica/nswalk.c:
34:	struct acpi_namespace_node *acpi_ns_get_next_node(struct acpi_namespace_node *, struct acpi_namespace_node *);
72:	struct acpi_namespace_node *acpi_ns_get_next_node_typed(acpi_object_type, struct acpi_namespace_node *, struct acpi_namespace_node *);
150:	acpi_status acpi_ns_walk_namespace(acpi_object_type, acpi_handle, u32, u32, acpi_walk_callback, acpi_walk_callback, void *, void **);

File drivers/acpi/acpica/nsxfeval.c:
830:	acpi_status acpi_attach_data(acpi_handle, acpi_object_handler, void *);
877:	acpi_status acpi_detach_data(acpi_handle, acpi_object_handler);
163:	acpi_status acpi_evaluate_object(acpi_handle, acpi_string, struct acpi_object_list *, struct acpi_buffer *);
44:	acpi_status acpi_evaluate_object_typed(acpi_handle, acpi_string, struct acpi_object_list *, struct acpi_buffer *, acpi_object_type);
977:	acpi_status acpi_get_data(acpi_handle, acpi_object_handler, void **);
926:	acpi_status acpi_get_data_full(acpi_handle, acpi_object_handler, void **, void (*)(void *));
771:	acpi_status acpi_get_devices(const char *, acpi_walk_callback, void *, void **);
554:	acpi_status acpi_walk_namespace(acpi_object_type, acpi_handle, u32, acpi_walk_callback, acpi_walk_callback, void *, void **);
635:	static acpi_status acpi_ns_get_device_callback(acpi_handle, u32, void *, void **);

File drivers/acpi/acpica/nsxfname.c:
46:	acpi_status acpi_get_handle(acpi_handle, acpi_string, acpi_handle *);
124:	acpi_status acpi_get_name(acpi_handle, u32, struct acpi_buffer *);
226:	acpi_status acpi_get_object_info(acpi_handle, struct acpi_device_info **);
475:	acpi_status acpi_install_method(u8 *);
182:	static char *acpi_ns_copy_device_id(struct acpi_pnp_device_id *, struct acpi_pnp_device_id *, char *);

File drivers/acpi/acpica/nsxfobj.c:
148:	acpi_status acpi_get_next_object(acpi_object_type, acpi_handle, acpi_handle, acpi_handle *);
82:	acpi_status acpi_get_parent(acpi_handle, acpi_handle *);
30:	acpi_status acpi_get_type(acpi_handle, acpi_object_type *);

File drivers/acpi/acpica/psargs.c:
703:	acpi_status acpi_ps_get_next_arg(struct acpi_walk_state *, struct acpi_parse_state *, u32, union acpi_parse_object **);
197:	acpi_status acpi_ps_get_next_namepath(struct acpi_walk_state *, struct acpi_parse_state *, union acpi_parse_object *, u8);
123:	char *acpi_ps_get_next_namestring(struct acpi_parse_state *);
94:	u8 *acpi_ps_get_next_package_end(struct acpi_parse_state *);
362:	void acpi_ps_get_next_simple_arg(struct acpi_parse_state *, u32, union acpi_parse_object *);
43:	static u32 acpi_ps_get_next_package_length(struct acpi_parse_state *);

File drivers/acpi/acpica/psloop.c:
414:	acpi_status acpi_ps_parse_loop(struct acpi_walk_state *);

File drivers/acpi/acpica/psobject.c:
154:	acpi_status acpi_ps_build_named_op(struct acpi_walk_state *, u8 *, union acpi_parse_object *, union acpi_parse_object **);
640:	acpi_status acpi_ps_complete_final_op(struct acpi_walk_state *, union acpi_parse_object *, acpi_status);
437:	acpi_status acpi_ps_complete_op(struct acpi_walk_state *, union acpi_parse_object **, acpi_status);
298:	acpi_status acpi_ps_create_op(struct acpi_walk_state *, u8 *, union acpi_parse_object **);

File drivers/acpi/acpica/psopinfo.c:
157:	u8 acpi_ps_get_argument_count(u32);
35:	const struct acpi_opcode_info *acpi_ps_get_opcode_info(u16);
127:	const char *acpi_ps_get_opcode_name(u16);

File drivers/acpi/acpica/psparse.c:
100:	acpi_status acpi_ps_complete_this_op(struct acpi_walk_state *, union acpi_parse_object *);
41:	u32 acpi_ps_get_opcode_size(u32);
297:	acpi_status acpi_ps_next_parse_state(struct acpi_walk_state *, union acpi_parse_object *, acpi_status);
408:	acpi_status acpi_ps_parse_aml(struct acpi_walk_state *);
67:	u16 acpi_ps_peek_opcode(struct acpi_parse_state *);

File drivers/acpi/acpica/psscope.c:
213:	void acpi_ps_cleanup_scope(struct acpi_parse_state *);
28:	union acpi_parse_object *acpi_ps_get_parent_scope(struct acpi_parse_state *);
49:	u8 acpi_ps_has_completed_scope(struct acpi_parse_state *);
71:	acpi_status acpi_ps_init_scope(struct acpi_parse_state *, union acpi_parse_object *);
165:	void acpi_ps_pop_scope(struct acpi_parse_state *, union acpi_parse_object **, u32 *, u32 *);
111:	acpi_status acpi_ps_push_scope(struct acpi_parse_state *, union acpi_parse_object *, u32, u32);

File drivers/acpi/acpica/pstree.c:
94:	void acpi_ps_append_arg(union acpi_parse_object *, union acpi_parse_object *);
37:	union acpi_parse_object *acpi_ps_get_arg(union acpi_parse_object *, u32);
169:	union acpi_parse_object *acpi_ps_get_depth_next(union acpi_parse_object *, union acpi_parse_object *);

File drivers/acpi/acpica/psutils.c:
85:	union acpi_parse_object *acpi_ps_alloc_op(u16, u8 *);
30:	union acpi_parse_object *acpi_ps_create_scope_op(u8 *);
151:	void acpi_ps_free_op(union acpi_parse_object *);
187:	u32 acpi_ps_get_name(union acpi_parse_object *);
56:	void acpi_ps_init_op(union acpi_parse_object *, u16);
179:	u8 acpi_ps_is_leading_char(u32);
204:	void acpi_ps_set_name(union acpi_parse_object *, u32);

File drivers/acpi/acpica/pswalk.c:
29:	void acpi_ps_delete_parse_tree(union acpi_parse_object *);

File drivers/acpi/acpica/psxface.c:
42:	acpi_status acpi_debug_trace(const char *, u32, u32, u32);
84:	acpi_status acpi_ps_execute_method(struct acpi_evaluate_info *);
236:	acpi_status acpi_ps_execute_table(struct acpi_evaluate_info *);
318:	static void acpi_ps_update_parameter_list(struct acpi_evaluate_info *, u16);

File drivers/acpi/acpica/rsaddr.c:
272:	u8 acpi_rs_get_address_common(struct acpi_resource *, union aml_resource *);
322:	void acpi_rs_set_address_common(union aml_resource *, struct acpi_resource *);

File drivers/acpi/acpica/rscalc.c:
154:	acpi_status acpi_rs_get_aml_length(struct acpi_resource *, acpi_size, acpi_size *);
441:	acpi_status acpi_rs_get_list_length(u8 *, u32, acpi_size *);
715:	acpi_status acpi_rs_get_pci_routing_table_length(union acpi_operand_object *, acpi_size *);

File drivers/acpi/acpica/rscreate.c:
30:	acpi_status acpi_buffer_to_resource(u8 *, u16, struct acpi_resource **);
401:	acpi_status acpi_rs_create_aml_resources(struct acpi_buffer *, struct acpi_buffer *);
179:	acpi_status acpi_rs_create_pci_routing_table(union acpi_operand_object *, struct acpi_buffer *);
103:	acpi_status acpi_rs_create_resource_list(union acpi_operand_object *, struct acpi_buffer *);

File drivers/acpi/acpica/rslist.c:
30:	acpi_status acpi_rs_convert_aml_to_resources(u8 *, u32, u32, u8, void **);
123:	acpi_status acpi_rs_convert_resources_to_aml(struct acpi_resource *, acpi_size, u8 *);

File drivers/acpi/acpica/rsmisc.c:
35:	acpi_status acpi_rs_convert_aml_to_resource(struct acpi_resource *, union aml_resource *, struct acpi_rsconvert_info *);
434:	acpi_status acpi_rs_convert_resource_to_aml(struct acpi_resource *, union aml_resource *, struct acpi_rsconvert_info *);

File drivers/acpi/acpica/rsutils.c:
28:	u8 acpi_rs_decode_bitmask(u16, u8 *);
62:	u16 acpi_rs_encode_bitmask(u8 *, u8);
585:	acpi_status acpi_rs_get_aei_method_data(struct acpi_namespace_node *, struct acpi_buffer *);
483:	acpi_status acpi_rs_get_crs_method_data(struct acpi_namespace_node *, struct acpi_buffer *);
637:	acpi_status acpi_rs_get_method_data(acpi_handle, const char *, struct acpi_buffer *);
534:	acpi_status acpi_rs_get_prs_method_data(struct acpi_namespace_node *, struct acpi_buffer *);
433:	acpi_status acpi_rs_get_prt_method_data(struct acpi_namespace_node *, struct acpi_buffer *);
284:	acpi_rs_length acpi_rs_get_resource_source(acpi_rs_length, acpi_rs_length, struct acpi_resource_source *, union aml_resource *, char *);
96:	void acpi_rs_move_data(void *, void *, u16, u8);
217:	void acpi_rs_set_resource_header(u8, acpi_rsdesc_size, union aml_resource *);
167:	void acpi_rs_set_resource_length(acpi_rsdesc_size, union aml_resource *);
373:	acpi_rsdesc_size acpi_rs_set_resource_source(union aml_resource *, acpi_rs_length, struct acpi_resource_source *);
691:	acpi_status acpi_rs_set_srs_method_data(struct acpi_namespace_node *, struct acpi_buffer *);

File drivers/acpi/acpica/rsxface.c:
167:	acpi_status acpi_get_current_resources(acpi_handle, struct acpi_buffer *);
294:	acpi_status acpi_get_event_resources(acpi_handle, struct acpi_buffer *);
122:	acpi_status acpi_get_irq_routing_table(acpi_handle, struct acpi_buffer *);
209:	acpi_status acpi_get_possible_resources(acpi_handle, struct acpi_buffer *);
398:	acpi_status acpi_get_vendor_resource(acpi_handle, char *, struct acpi_vendor_uuid *, struct acpi_buffer *);
332:	acpi_status acpi_resource_to_address64(struct acpi_resource *, struct acpi_resource_address64 *);
248:	acpi_status acpi_set_current_resources(acpi_handle, struct acpi_buffer *);
506:	acpi_status acpi_walk_resource_buffer(struct acpi_buffer *, acpi_walk_resource_callback, void *);
594:	acpi_status acpi_walk_resources(acpi_handle, char *, acpi_walk_resource_callback, void *);
442:	static acpi_status acpi_rs_match_vendor_resource(struct acpi_resource *, void *);
57:	static acpi_status acpi_rs_validate_parameters(acpi_handle, struct acpi_buffer *, struct acpi_namespace_node **);

File drivers/acpi/acpica/tbdata.c:
119:	acpi_status acpi_tb_acquire_table(struct acpi_table_desc *, struct acpi_table_header **, u32 *, u8 *);
210:	acpi_status acpi_tb_acquire_temp_table(struct acpi_table_desc *, acpi_physical_address, u8);
769:	acpi_status acpi_tb_allocate_owner_id(u32);
716:	acpi_status acpi_tb_delete_namespace_by_owner(u32);
631:	acpi_status acpi_tb_get_next_table_descriptor(u32 *, struct acpi_table_desc **);
830:	acpi_status acpi_tb_get_owner_id(u32, acpi_owner_id *);
86:	void acpi_tb_init_table_descriptor(struct acpi_table_desc *, acpi_physical_address, u8, struct acpi_table_header *);
980:	acpi_status acpi_tb_install_and_load_table(acpi_physical_address, u8, u8, u32 *);
325:	void acpi_tb_invalidate_table(struct acpi_table_desc *);
857:	u8 acpi_tb_is_table_loaded(u32);
916:	acpi_status acpi_tb_load_table(u32, struct acpi_namespace_node *);
1064:	void acpi_tb_notify_table(u32, void *);
799:	acpi_status acpi_tb_release_owner_id(u32);
174:	void acpi_tb_release_table(struct acpi_table_header *, u32, u8);
268:	void acpi_tb_release_temp_table(struct acpi_table_desc *);
557:	acpi_status acpi_tb_resize_root_table_list(void);
885:	void acpi_tb_set_table_loaded_flag(u32, u8);
672:	void acpi_tb_terminate(void);
1017:	acpi_status acpi_tb_unload_table(u32);
292:	acpi_status acpi_tb_validate_table(struct acpi_table_desc *);
356:	acpi_status acpi_tb_validate_temp_table(struct acpi_table_desc *);
467:	acpi_status acpi_tb_verify_temp_table(struct acpi_table_desc *, char *, u32 *);

File drivers/acpi/acpica/tbfadt.c:
354:	void acpi_tb_create_local_fadt(struct acpi_table_header *, u32);
276:	void acpi_tb_parse_fadt(void);

File drivers/acpi/acpica/tbfind.c:
34:	acpi_status acpi_tb_find_table(char *, char *, char *, u32 *);

File drivers/acpi/acpica/tbinstal.c:
97:	acpi_status acpi_tb_install_standard_table(acpi_physical_address, u8, u8, u8, u32 *);
34:	void acpi_tb_install_table_with_override(struct acpi_table_desc *, u8, u32 *);
197:	void acpi_tb_override_table(struct acpi_table_desc *);
277:	void acpi_tb_uninstall_table(struct acpi_table_desc *);

File drivers/acpi/acpica/tbprint.c:
200:	u8 acpi_tb_checksum(u8 *, u32);
92:	void acpi_tb_print_table_header(acpi_physical_address, struct acpi_table_header *);
152:	acpi_status acpi_tb_verify_checksum(struct acpi_table_header *, u32);
38:	static void acpi_tb_fix_string(char *, acpi_size);

File drivers/acpi/acpica/tbutils.c:
80:	void acpi_tb_check_dsdt_header(void);
120:	struct acpi_table_header *acpi_tb_copy_dsdt(u32);
368:	acpi_status acpi_tb_get_table(struct acpi_table_desc *, struct acpi_table_header **);
35:	acpi_status acpi_tb_initialize_facs(void);
222:	acpi_status acpi_tb_parse_root_table(acpi_physical_address);
418:	void acpi_tb_put_table(struct acpi_table_desc *);

File drivers/acpi/acpica/tbxface.c:
32:	acpi_status acpi_allocate_root_table(u32);
297:	acpi_status acpi_get_table(char *, u32, struct acpi_table_header **);
405:	acpi_status acpi_get_table_by_index(u32, struct acpi_table_header **);
216:	acpi_status acpi_get_table_header(char *, u32, struct acpi_table_header *);
68:	acpi_status acpi_initialize_tables(struct acpi_table_desc *, u32, u8);
457:	acpi_status acpi_install_table_handler(acpi_table_handler, void *);
359:	void acpi_put_table(struct acpi_table_header *);
133:	acpi_status acpi_reallocate_root_table(void);
503:	acpi_status acpi_remove_table_handler(acpi_table_handler);

File drivers/acpi/acpica/tbxfload.c:
248:	acpi_status acpi_install_table(acpi_physical_address, u8);
286:	acpi_status acpi_load_table(struct acpi_table_header *);
32:	acpi_status acpi_load_tables(void);
107:	acpi_status acpi_tb_load_namespace(void);
325:	acpi_status acpi_unload_parent_table(acpi_handle);

File drivers/acpi/acpica/tbxfroot.c:
112:	acpi_status acpi_find_root_pointer(acpi_physical_address *);
28:	u32 acpi_tb_get_rsdp_length(struct acpi_table_rsdp *);
228:	u8 *acpi_tb_scan_memory_for_rsdp(u8 *, u32);
59:	acpi_status acpi_tb_validate_rsdp(struct acpi_table_rsdp *);

File drivers/acpi/acpica/utaddress.c:
41:	acpi_status acpi_ut_add_address_range(acpi_adr_space_type, acpi_physical_address, u32, struct acpi_namespace_node *);
161:	u32 acpi_ut_check_address_range(acpi_adr_space_type, acpi_physical_address, u32, u8);
237:	void acpi_ut_delete_address_lists(void);
95:	void acpi_ut_remove_address_range(acpi_adr_space_type, struct acpi_namespace_node *);

File drivers/acpi/acpica/utalloc.c:
62:	acpi_status acpi_ut_create_caches(void);
183:	acpi_status acpi_ut_delete_caches(void);
291:	acpi_status acpi_ut_initialize_buffer(struct acpi_buffer *, acpi_size);
250:	acpi_status acpi_ut_validate_buffer(struct acpi_buffer *);

File drivers/acpi/acpica/utascii.c:
92:	void acpi_ut_check_and_repair_ascii(u8 *, char *, u32);
60:	u8 acpi_ut_valid_name_char(char, u32);
27:	u8 acpi_ut_valid_nameseg(char *);

File drivers/acpi/acpica/utbuffer.c:
164:	void acpi_ut_debug_dump_buffer(u8 *, u32, u32, u32);
34:	void acpi_ut_dump_buffer(u8 *, u32, u32, u32);

File drivers/acpi/acpica/utcopy.c:
603:	acpi_status acpi_ut_copy_eobject_to_iobject(union acpi_object *, union acpi_operand_object **);
359:	acpi_status acpi_ut_copy_iobject_to_eobject(union acpi_operand_object *, struct acpi_buffer *);
944:	acpi_status acpi_ut_copy_iobject_to_iobject(union acpi_operand_object *, union acpi_operand_object **, struct acpi_walk_state *);
212:	static acpi_status acpi_ut_copy_ielement_to_eelement(u8, union acpi_operand_object *, union acpi_generic_state *, void *);
791:	static acpi_status acpi_ut_copy_ielement_to_ielement(u8, union acpi_operand_object *, union acpi_generic_state *, void *);
78:	static acpi_status acpi_ut_copy_isimple_to_esimple(union acpi_operand_object *, union acpi_object *, u8 *, acpi_size *);
640:	static acpi_status acpi_ut_copy_simple_object(union acpi_operand_object *, union acpi_operand_object *);

File drivers/acpi/acpica/utdecode.c:
304:	const char *acpi_ut_get_descriptor_name(void *);
122:	const char *acpi_ut_get_event_name(u32);
387:	const char *acpi_ut_get_mutex_name(u32);
238:	const char *acpi_ut_get_node_name(void *);
201:	const char *acpi_ut_get_object_type_name(union acpi_operand_object *);
342:	const char *acpi_ut_get_reference_name(union acpi_operand_object *);
84:	const char *acpi_ut_get_region_name(u8);
191:	const char *acpi_ut_get_type_name(acpi_object_type);
567:	u8 acpi_ut_valid_object_type(acpi_object_type);

File drivers/acpi/acpica/utdelete.c:
667:	void acpi_ut_add_reference(union acpi_operand_object *);
321:	void acpi_ut_delete_internal_object_list(union acpi_operand_object **);
700:	void acpi_ut_remove_reference(union acpi_operand_object *);
469:	acpi_status acpi_ut_update_object_reference(union acpi_operand_object *, u16);
353:	static void acpi_ut_update_ref_count(union acpi_operand_object *, u32);

File drivers/acpi/acpica/uterror.c:
299:	void acpi_ut_method_error(const char *, u32, const char *, struct acpi_namespace_node *, const char *, acpi_status);
124:	void acpi_ut_predefined_bios_error(const char *, u32, char *, u8, const char *, ...);
82:	void acpi_ut_predefined_info(const char *, u32, char *, u8, const char *, ...);
39:	void acpi_ut_predefined_warning(const char *, u32, char *, u8, const char *, ...);
168:	void acpi_ut_prefixed_namespace_error(const char *, u32, union acpi_generic_state *, const char *, acpi_status);

File drivers/acpi/acpica/uteval.c:
173:	acpi_status acpi_ut_evaluate_numeric_object(const char *, struct acpi_namespace_node *, u64 *);
37:	acpi_status acpi_ut_evaluate_object(struct acpi_namespace_node *, const char *, u32, union acpi_operand_object **);
216:	acpi_status acpi_ut_execute_STA(struct acpi_namespace_node *, u32 *);
272:	acpi_status acpi_ut_execute_power_methods(struct acpi_namespace_node *, const char **, u8, u8 *);

File drivers/acpi/acpica/utexcep.c:
30:	const char *acpi_format_exception(acpi_status);
65:	const struct acpi_exception_info *acpi_ut_validate_exception(acpi_status);

File drivers/acpi/acpica/uthex.c:
88:	u8 acpi_ut_ascii_char_to_hex(int);
58:	acpi_status acpi_ut_ascii_to_hex_byte(char *, u8 *);
36:	char acpi_ut_hex_to_ascii_char(u64, u32);

File drivers/acpi/acpica/utids.c:
196:	acpi_status acpi_ut_execute_CID(struct acpi_namespace_node *, struct acpi_pnp_device_id_list **);
338:	acpi_status acpi_ut_execute_CLS(struct acpi_namespace_node *, struct acpi_pnp_device_id **);
35:	acpi_status acpi_ut_execute_HID(struct acpi_namespace_node *, struct acpi_pnp_device_id **);
113:	acpi_status acpi_ut_execute_UID(struct acpi_namespace_node *, struct acpi_pnp_device_id **);

File drivers/acpi/acpica/utinit.c:
85:	acpi_status acpi_ut_init_globals(void);
245:	void acpi_ut_subsystem_shutdown(void);

File drivers/acpi/acpica/utlock.c:
71:	acpi_status acpi_ut_acquire_read_lock(struct acpi_rw_lock *);
129:	acpi_status acpi_ut_acquire_write_lock(struct acpi_rw_lock *);
28:	acpi_status acpi_ut_create_rw_lock(struct acpi_rw_lock *);
42:	void acpi_ut_delete_rw_lock(struct acpi_rw_lock *);
93:	acpi_status acpi_ut_release_read_lock(struct acpi_rw_lock *);
137:	void acpi_ut_release_write_lock(struct acpi_rw_lock *);

File drivers/acpi/acpica/utmath.c:
470:	acpi_status acpi_ut_divide(u64, u64, u64 *, u64 *);
444:	acpi_status acpi_ut_short_divide(u64, u32, u64 *, u32 *);
165:	acpi_status acpi_ut_short_multiply(u64, u32, u64 *);
189:	acpi_status acpi_ut_short_shift_left(u64, u32, u64 *);
213:	acpi_status acpi_ut_short_shift_right(u64, u32, u64 *);

File drivers/acpi/acpica/utmisc.c:
157:	acpi_status acpi_ut_create_update_state_and_push(union acpi_operand_object *, u16, union acpi_generic_state **);
85:	u32 acpi_ut_dword_byte_swap(u32);
26:	u8 acpi_ut_is_pci_root_bridge(char *);
123:	void acpi_ut_set_integer_width(u8);
196:	acpi_status acpi_ut_walk_package_tree(union acpi_operand_object *, void *, acpi_pkg_callback, void *);

File drivers/acpi/acpica/utmutex.c:
187:	acpi_status acpi_ut_acquire_mutex(acpi_mutex_handle);
32:	acpi_status acpi_ut_mutex_initialize(void);
95:	void acpi_ut_mutex_terminate(void);
273:	acpi_status acpi_ut_release_mutex(acpi_mutex_handle);

File drivers/acpi/acpica/utnonansi.c:
90:	int acpi_ut_stricmp(char *, char *);
29:	void acpi_ut_strlwr(char *);
58:	void acpi_ut_strupr(char *);

File drivers/acpi/acpica/utobject.c:
352:	void *acpi_ut_allocate_object_desc_dbg(const char *, u32, u32);
201:	union acpi_operand_object *acpi_ut_create_buffer_object(acpi_size);
172:	union acpi_operand_object *acpi_ut_create_integer_object(u64);
53:	union acpi_operand_object *acpi_ut_create_internal_object_dbg(const char *, u32, u32, acpi_object_type);
130:	union acpi_operand_object *acpi_ut_create_package_object(u32);
256:	union acpi_operand_object *acpi_ut_create_string_object(acpi_size);
389:	void acpi_ut_delete_object_desc(union acpi_operand_object *);
664:	acpi_status acpi_ut_get_object_size(union acpi_operand_object *, acpi_size *);
305:	u8 acpi_ut_valid_internal_object(void *);
555:	static acpi_status acpi_ut_get_element_length(u8, union acpi_operand_object *, union acpi_generic_state *, void *);
424:	static acpi_status acpi_ut_get_simple_object_size(union acpi_operand_object *, acpi_size *);

File drivers/acpi/acpica/utosi.c:
339:	struct acpi_interface_info *acpi_ut_get_interface(acpi_string);
104:	acpi_status acpi_ut_initialize_interfaces(void);
192:	acpi_status acpi_ut_install_interface(acpi_string);
142:	acpi_status acpi_ut_interface_terminate(void);
380:	acpi_status acpi_ut_osi_implementation(struct acpi_walk_state *);
233:	acpi_status acpi_ut_remove_interface(acpi_string);
298:	acpi_status acpi_ut_update_interfaces(u8);

File drivers/acpi/acpica/utownerid.c:
28:	acpi_status acpi_ut_allocate_owner_id(acpi_owner_id *);
140:	void acpi_ut_release_owner_id(acpi_owner_id *);

File drivers/acpi/acpica/utpredef.c:
110:	void acpi_ut_get_expected_return_types(char *, u32);
43:	const union acpi_predefined_info *acpi_ut_get_next_predefined_method(const union acpi_predefined_info *);
73:	const union acpi_predefined_info *acpi_ut_match_predefined_method(char *);

File drivers/acpi/acpica/utresrc.c:
517:	u32 acpi_ut_get_descriptor_length(void *);
544:	acpi_status acpi_ut_get_resource_end_tag(union acpi_operand_object *, u8 **);
490:	u8 acpi_ut_get_resource_header_length(void *);
452:	u16 acpi_ut_get_resource_length(void *);
418:	u8 acpi_ut_get_resource_type(void *);
262:	acpi_status acpi_ut_validate_resource(struct acpi_walk_state *, void *, u8 *);
137:	acpi_status acpi_ut_walk_aml_resources(struct acpi_walk_state *, u8 *, acpi_size, acpi_walk_aml_callback, void **);

File drivers/acpi/acpica/utstate.c:
230:	union acpi_generic_state *acpi_ut_create_control_state(void);
84:	union acpi_generic_state *acpi_ut_create_generic_state(void);
191:	union acpi_generic_state *acpi_ut_create_pkg_state(void *, void *, u32);
113:	struct acpi_thread_state *acpi_ut_create_thread_state(void);
156:	union acpi_generic_state *acpi_ut_create_update_state(union acpi_operand_object *, u16);
264:	void acpi_ut_delete_generic_state(union acpi_generic_state *);
51:	union acpi_generic_state *acpi_ut_pop_generic_state(union acpi_generic_state **);
27:	void acpi_ut_push_generic_state(union acpi_generic_state **, union acpi_generic_state *);

File drivers/acpi/acpica/utstring.c:
29:	void acpi_ut_print_string(char *, u16);
132:	void acpi_ut_repair_name(char *);

File drivers/acpi/acpica/utstrsuppt.c:
89:	acpi_status acpi_ut_convert_decimal_string(char *, u64 *);
138:	acpi_status acpi_ut_convert_hex_string(char *, u64 *);
40:	acpi_status acpi_ut_convert_octal_string(char *, u64 *);
232:	u8 acpi_ut_detect_hex_prefix(char **);
277:	u8 acpi_ut_detect_octal_prefix(char **);
256:	void acpi_ut_remove_hex_prefix(char **);
185:	char acpi_ut_remove_leading_zeros(char **);
210:	char acpi_ut_remove_whitespace(char **);
316:	static acpi_status acpi_ut_insert_digit(u64 *, u32, int);

File drivers/acpi/acpica/utstrtoul64.c:
287:	u64 acpi_ut_explicit_strtoul64(char *);
206:	u64 acpi_ut_implicit_strtoul64(char *);
80:	acpi_status acpi_ut_strtoul64(char *, u64 *);

File drivers/acpi/acpica/utxface.c:
414:	u32 acpi_check_address_range(acpi_adr_space_type, acpi_physical_address, acpi_size, u8);
451:	acpi_status acpi_decode_pld_buffer(u8 *, acpi_size, struct acpi_pld_info **);
258:	acpi_status acpi_install_interface(acpi_string);
348:	acpi_status acpi_install_interface_handler(acpi_interface_handler);
233:	acpi_status acpi_purge_cached_objects(void);
311:	acpi_status acpi_remove_interface(acpi_string);
30:	acpi_status acpi_terminate(void);
382:	acpi_status acpi_update_interfaces(u8);

File drivers/acpi/acpica/utxferror.c:
170:	void acpi_bios_error(const char *, u32, const char *, ...);
203:	void acpi_bios_warning(const char *, u32, const char *, ...);
35:	void acpi_error(const char *, u32, const char *, ...);
68:	void acpi_exception(const char *, u32, acpi_status, const char *, ...);
138:	void acpi_info(const char *, ...);
109:	void acpi_warning(const char *, u32, const char *, ...);

File drivers/acpi/acpica/utxfinit.c:
110:	acpi_status acpi_enable_subsystem(u32);
208:	acpi_status acpi_initialize_objects(u32);
38:	acpi_status acpi_initialize_subsystem(void);

File drivers/acpi/acpica/utxfmutex.c:
100:	acpi_status acpi_acquire_mutex(acpi_handle, acpi_string, u16);
136:	acpi_status acpi_release_mutex(acpi_handle, acpi_string);
38:	static acpi_status acpi_ut_get_mutex_object(acpi_handle, acpi_string, union acpi_operand_object **);

File drivers/acpi/apei/apei-base.c:
65:	int __apei_exec_read_register(struct acpi_whea_header *, u64 *);
156:	int __apei_exec_run(struct apei_exec_context *, u8, bool);
107:	int __apei_exec_write_register(struct acpi_whea_header *, u64);
747:	int apei_exec_collect_resources(struct apei_exec_context *, struct apei_resources *);
52:	void apei_exec_ctx_init(struct apei_exec_context *, struct apei_exec_ins_type *, u32, struct acpi_whea_header *, u32);
145:	int apei_exec_noop(struct apei_exec_context *, struct acpi_whea_header *);
281:	int apei_exec_post_unmap_gars(struct apei_exec_context *);
251:	int apei_exec_pre_map_gars(struct apei_exec_context *);
78:	int apei_exec_read_register(struct apei_exec_context *, struct acpi_whea_header *);
93:	int apei_exec_read_register_value(struct apei_exec_context *, struct acpi_whea_header *);
126:	int apei_exec_write_register(struct apei_exec_context *, struct acpi_whea_header *);
133:	int apei_exec_write_register_value(struct apei_exec_context *, struct acpi_whea_header *);
755:	struct dentry *apei_get_debugfs_dir(void);
634:	int apei_map_generic_address(struct acpi_generic_address *);
779:	int apei_osc_setup(void);
648:	int apei_read(u64 *, struct acpi_generic_address *);
420:	int apei_resources_add(struct apei_resources *, unsigned long, unsigned long, bool);
391:	void apei_resources_fini(struct apei_resources *);
563:	void apei_resources_release(struct apei_resources *);
472:	int apei_resources_request(struct apei_resources *, const char *);
436:	int apei_resources_sub(struct apei_resources *, struct apei_resources *);
682:	int apei_write(u64, struct acpi_generic_address *);
766:	int arch_apei_enable_cmcff(struct acpi_hest_header *, void *);
773:	void arch_apei_report_mem_error(int, struct cper_sec_mem_err *);
579:	static int apei_check_gar(struct acpi_generic_address *, u64 *, u32 *);
206:	static int apei_exec_for_each_entry(struct apei_exec_context *, apei_exec_entry_func_t, void *, int *);
448:	static int apei_get_res_callback(__u64, __u64, void *);
303:	static int apei_res_add(struct list_head *, unsigned long, unsigned long);
381:	static void apei_res_clean(struct list_head *);
341:	static int apei_res_sub(struct list_head *, struct list_head *);
713:	static int collect_res_callback(struct apei_exec_context *, struct acpi_whea_header *, void *);
268:	static int post_unmap_gar_callback(struct apei_exec_context *, struct acpi_whea_header *, void *);
235:	static int pre_map_gar_callback(struct apei_exec_context *, struct acpi_whea_header *, void *);

File drivers/acpi/apei/bert.c:
95:	static int bert_init(void);
78:	static int setup_bert_disable(char *);

File drivers/acpi/apei/erst.c:
867:	int erst_clear(u64);
416:	ssize_t erst_get_record_count(void);
462:	int erst_get_record_id_begin(int *);
612:	void erst_get_record_id_end(void);
548:	int erst_get_record_id_next(int *, u64 *);
851:	ssize_t erst_read(u64, struct cper_record_header *, size_t);
775:	int erst_write(const struct cper_record_header *);
593:	static void __erst_record_id_cache_compact(void);
1099:	static int erst_clearer(struct pstore_record *);
973:	static int erst_close_pstore(struct pstore_info *);
138:	static int erst_exec_add(struct apei_exec_context *, struct acpi_whea_header *);
152:	static int erst_exec_add_value(struct apei_exec_context *, struct acpi_whea_header *);
244:	static int erst_exec_goto(struct apei_exec_context *, struct acpi_whea_header *);
120:	static int erst_exec_load_var1(struct apei_exec_context *, struct acpi_whea_header *);
126:	static int erst_exec_load_var2(struct apei_exec_context *, struct acpi_whea_header *);
263:	static int erst_exec_move_data(struct apei_exec_context *, struct acpi_whea_header *);
257:	static int erst_exec_set_dst_address_base(struct apei_exec_context *, struct acpi_whea_header *);
251:	static int erst_exec_set_src_address_base(struct apei_exec_context *, struct acpi_whea_header *);
226:	static int erst_exec_skip_next_instruction_if_true(struct apei_exec_context *, struct acpi_whea_header *);
180:	static int erst_exec_stall(struct apei_exec_context *, struct acpi_whea_header *);
197:	static int erst_exec_stall_while_true(struct apei_exec_context *, struct acpi_whea_header *);
132:	static int erst_exec_store_var1(struct apei_exec_context *, struct acpi_whea_header *);
145:	static int erst_exec_subtract(struct apei_exec_context *, struct acpi_whea_header *);
166:	static int erst_exec_subtract_value(struct apei_exec_context *, struct acpi_whea_header *);
382:	static int erst_get_erange(struct erst_erange *);
1104:	static int erst_init(void);
961:	static int erst_open_pstore(struct pstore_info *);
980:	static ssize_t erst_reader(struct pstore_record *);
108:	static int erst_timedout(u64 *, u64);
1051:	static int erst_writer(struct pstore_record *);
751:	static void pr_unimpl_nvram(void);
899:	static int setup_erst_disable(char *);

File drivers/acpi/apei/ghes.c:
530:	void ghes_arm_process_error(struct ghes *, struct cper_sec_proc_arm *, int);
481:	int ghes_register_vendor_record_notifier(struct notifier_block *);
487:	void ghes_unregister_vendor_record_notifier(struct notifier_block *);
777:	static void __ghes_panic(struct ghes *);
593:	static void __ghes_print_estatus(const char *, const struct acpi_hest_generic *, const struct acpi_hest_generic_status *);
823:	static void ghes_add_timer(struct ghes *);
393:	static void ghes_clear_estatus(struct ghes *);
308:	static void ghes_copy_tofrom_phys(void *, u64, u32, int);
536:	static void ghes_do_proc(struct ghes *, const struct acpi_hest_generic_status *);
716:	static void ghes_estatus_cache_add(struct acpi_hest_generic *, struct acpi_hest_generic_status *);
698:	static void ghes_estatus_cache_free(struct ghes_estatus_cache *);
708:	static void ghes_estatus_cache_rcu_free(struct callback_head *);
639:	static int ghes_estatus_cached(struct acpi_hest_generic_status *);
205:	static int ghes_estatus_pool_expand(unsigned long);
191:	static void ghes_estatus_pool_free_chunk(struct gen_pool *, struct gen_pool_chunk *, void *);
283:	static void ghes_fini(struct ghes *);
1295:	static int ghes_init(void);
847:	static irqreturn_t ghes_irq_func(int, void *);
859:	static int ghes_notify_hed(struct notifier_block *, unsigned long, void *);
1021:	static int ghes_notify_nmi(unsigned int, struct pt_regs *);
838:	static void ghes_poll_func(struct timer_list *);
615:	static int ghes_print_estatus(const struct acpi_hest_generic *, const struct acpi_hest_generic_status *, const char *);
1119:	static int ghes_probe(struct platform_device *);
789:	static int ghes_proc(struct ghes *);
939:	static void ghes_proc_in_irq(struct irq_work *);
345:	static int ghes_read_estatus(struct ghes *, int);
1237:	static int ghes_remove(struct platform_device *);
493:	static void ghes_vendor_record_work_func(struct work_struct *);

File drivers/acpi/apei/hest.c:
223:	void acpi_hest_init(void);
84:	int apei_hest_parse(apei_hest_func_t, void *);
125:	static int hest_parse_cmc(struct acpi_hest_header *, void *);
151:	static int hest_parse_ghes(struct acpi_hest_header *, void *);
141:	static int hest_parse_ghes_count(struct acpi_hest_header *, void *);
215:	static int setup_hest_disable(char *);

File drivers/acpi/battery.c:
710:	void battery_hook_register(struct acpi_battery_hook *);
704:	void battery_hook_unregister(struct acpi_battery_hook *);
686:	static void __battery_hook_unregister(struct acpi_battery_hook *, int);
1385:	static int acpi_battery_add(struct acpi_device *);
646:	static ssize_t acpi_battery_alarm_show(struct device *, struct device_attribute *, char *);
654:	static ssize_t acpi_battery_alarm_store(struct device *, struct device_attribute *, const char *, size_t);
1533:	static void acpi_battery_exit(void);
518:	static int acpi_battery_get_info(struct acpi_battery *);
226:	static int acpi_battery_get_property(struct power_supply *, enum power_supply_property, union power_supply_propval *);
557:	static int acpi_battery_get_state(struct acpi_battery *);
1524:	static int acpi_battery_init(void);
633:	static int acpi_battery_init_alarm(struct acpi_battery *);
1494:	static void acpi_battery_init_async(void *, async_cookie_t);
1227:	static void acpi_battery_notify(struct acpi_device *, u32);
983:	static void acpi_battery_refresh(struct acpi_battery *);
1439:	static int acpi_battery_remove(struct acpi_device *);
1460:	static int acpi_battery_resume(struct device *);
613:	static int acpi_battery_set_alarm(struct acpi_battery *);
937:	static int acpi_battery_update(struct acpi_battery *, bool);
1303:	static int battery_ac_is_broken_quirk(const struct dmi_system_id *);
1289:	static int battery_bix_broken_package_quirk(const struct dmi_system_id *);
1310:	static int battery_do_not_check_pmic_quirk(const struct dmi_system_id *);
792:	static void battery_hook_exit(void);
1296:	static int battery_notification_delay_quirk(const struct dmi_system_id *);
1255:	static int battery_notify(struct notifier_block *, unsigned long, void *);
435:	static int extract_package(struct acpi_battery *, union acpi_object *, const struct acpi_offsets *, int);
857:	static void find_battery(const struct dmi_header *, void *);
807:	static int sysfs_add_battery(struct acpi_battery *);
843:	static void sysfs_remove_battery(struct acpi_battery *);

File drivers/acpi/bgrt.c:
84:	int acpi_parse_bgrt(struct acpi_table_header *);
90:	static int bgrt_init(void);
56:	static ssize_t image_read(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
28:	static ssize_t show_status(struct device *, struct device_attribute *, char *);
35:	static ssize_t show_type(struct device *, struct device_attribute *, char *);
21:	static ssize_t show_version(struct device *, struct device_attribute *, char *);
42:	static ssize_t show_xoffset(struct device *, struct device_attribute *, char *);
49:	static ssize_t show_yoffset(struct device *, struct device_attribute *, char *);

File drivers/acpi/blacklist.c:
58:	int acpi_blacklisted(void);
87:	static int dmi_enable_rev_override(const struct dmi_system_id *);

File drivers/acpi/bus.c:
150:	int acpi_bus_attach_private_data(acpi_handle, void *);
182:	void acpi_bus_detach_private_data(acpi_handle);
165:	int acpi_bus_get_private_data(acpi_handle, void **);
109:	int acpi_bus_get_status(struct acpi_device *);
91:	acpi_status acpi_bus_get_status_handle(acpi_handle, unsigned long long *);
143:	void acpi_bus_private_data_handler(acpi_handle, void *);
847:	int acpi_bus_register_driver(struct acpi_driver *);
870:	void acpi_bus_unregister_driver(struct acpi_driver *);
614:	struct acpi_device *acpi_companion_match(const struct device *);
802:	const void *acpi_device_get_match_data(const struct device *);
587:	bool acpi_device_is_first_physical_node(struct acpi_device *, const struct device *);
821:	bool acpi_driver_match_device(struct device *, const struct device_driver *);
1017:	void acpi_early_init(void);
548:	struct device *acpi_get_first_physical_node(struct acpi_device *);
792:	const struct acpi_device_id *acpi_match_device(const struct acpi_device_id *, const struct device *);
814:	int acpi_match_device_ids(struct acpi_device *, const struct acpi_device_id *);
202:	acpi_status acpi_run_osc(acpi_handle, struct acpi_osc_context *);
708:	void acpi_set_modalias(struct acpi_device *, const char *, char *, size_t);
1090:	void acpi_subsystem_init(void);
739:	static bool __acpi_match_device(struct acpi_device *, const struct acpi_device_id *, const struct of_device_id *, const struct acpi_device_id **, const struct of_device_id **);
881:	static int acpi_bus_match(struct device *, struct device_driver *);
355:	static void acpi_bus_notify(acpi_handle, u32, void *);
1112:	static acpi_status acpi_bus_table_handler(u32, void *, void *);
444:	static u32 acpi_device_fixed_event(void *);
429:	static void acpi_device_notify(acpi_handle, u32, void *);
436:	static void acpi_device_notify_fixed(void *);
895:	static int acpi_device_probe(struct device *);
934:	static int acpi_device_remove(struct device *);
890:	static int acpi_device_uevent(struct device *, struct kobj_uevent_env *);
1225:	static int acpi_init(void);
638:	static bool acpi_of_match_device(struct acpi_device *, const struct of_device_id *, const struct of_device_id **);
188:	static void acpi_print_osc_error(acpi_handle, struct acpi_osc_context *, char *);
513:	static void acpi_sb_notify(acpi_handle, u32, void *);
493:	static void sb_notify_work(struct work_struct *);
61:	static int set_copy_dsdt(const struct dmi_system_id *);

File drivers/acpi/button.c:
358:	int acpi_lid_notifier_register(struct notifier_block *);
364:	int acpi_lid_notifier_unregister(struct notifier_block *);
370:	int acpi_lid_open(void);
491:	static int acpi_button_add(struct acpi_device *);
663:	static void acpi_button_driver_exit(void);
663:	static int acpi_button_driver_init(void);
409:	static void acpi_button_notify(struct acpi_device *, u32);
592:	static int acpi_button_remove(struct acpi_device *);
335:	static int acpi_button_remove_fs(struct acpi_device *);
464:	static int acpi_button_resume(struct device *);
264:	static int acpi_button_state_seq_show(struct seq_file *, void *);
455:	static int acpi_button_suspend(struct device *);
394:	static void acpi_lid_initialize_state(struct acpi_device *);
479:	static int acpi_lid_input_open(struct input_dev *);
170:	static int acpi_lid_notify_state(struct acpi_device *, int);
379:	static int acpi_lid_update_state(struct acpi_device *, bool);
621:	static int param_get_lid_init_state(char *, const struct kernel_param *);
602:	static int param_set_lid_init_state(const char *, const struct kernel_param *);

File drivers/acpi/container.c:
116:	void acpi_container_init(void);
42:	static int acpi_container_offline(struct container_dev *);
55:	static void acpi_container_release(struct device *);
60:	static int container_device_attach(struct acpi_device *, const struct acpi_device_id *);
89:	static void container_device_detach(struct acpi_device *);
98:	static void container_device_online(struct acpi_device *);

File drivers/acpi/cppc_acpi.c:
978:	void acpi_cppc_processor_exit(struct acpi_processor *);
797:	int acpi_cppc_processor_probe(struct acpi_processor *);
577:	int acpi_get_psd_map(struct cppc_cpudata **);
685:	bool cpc_ffh_supported(void);
1022:	int cpc_read_ffh(int, struct cpc_reg *, u64 *);
1037:	int cpc_write_ffh(int, struct cpc_reg *, u64);
1140:	int cppc_get_desired_perf(int, u64 *);
1182:	int cppc_get_perf_caps(int, struct cppc_perf_caps *);
1272:	int cppc_get_perf_ctrs(int, struct cppc_perf_fb_ctrs *);
1477:	unsigned int cppc_get_transition_latency(int);
1352:	int cppc_set_perf(int, struct cppc_perf_ctrls *);
700:	int pcc_data_alloc(int);
354:	static int acpi_get_psd(struct cpc_desc *, acpi_handle);
536:	static acpi_status acpi_parse_cpc(acpi_handle, u32, void *, void **);
192:	static int check_pcc_chan(int, bool);
1048:	static int cpc_read(int, struct cpc_register_resource *, u64 *);
339:	static void cppc_chan_tx_done(struct mbox_client *, void *, int);
227:	static int send_pcc_cmd(int, u16);
158:	static ssize_t show_feedback_ctrs(struct kobject *, struct kobj_attribute *, char *);
148:	static ssize_t show_highest_perf(struct kobject *, struct kobj_attribute *, char *);
152:	static ssize_t show_lowest_freq(struct kobject *, struct kobj_attribute *, char *);
151:	static ssize_t show_lowest_nonlinear_perf(struct kobject *, struct kobj_attribute *, char *);
149:	static ssize_t show_lowest_perf(struct kobject *, struct kobj_attribute *, char *);
153:	static ssize_t show_nominal_freq(struct kobject *, struct kobj_attribute *, char *);
150:	static ssize_t show_nominal_perf(struct kobject *, struct kobj_attribute *, char *);
155:	static ssize_t show_reference_perf(struct kobject *, struct kobj_attribute *, char *);
156:	static ssize_t show_wraparound_time(struct kobject *, struct kobj_attribute *, char *);

File drivers/acpi/debugfs.c:
18:	void acpi_debugfs_init(void);

File drivers/acpi/device_pm.c:
484:	acpi_status acpi_add_pm_notifier(struct acpi_device *, struct device *, void (*)(struct acpi_device_wakeup_context *));
545:	bool acpi_bus_can_wakeup(acpi_handle);
301:	int acpi_bus_init_power(struct acpi_device *);
423:	bool acpi_bus_power_manageable(acpi_handle);
288:	int acpi_bus_set_power(acpi_handle, int);
413:	int acpi_bus_update_power(acpi_handle, int *);
1301:	int acpi_dev_pm_attach(struct device *, bool);
948:	int acpi_dev_resume(struct device *);
916:	int acpi_dev_suspend(struct device *, bool);
359:	int acpi_device_fix_up_power(struct acpi_device *);
78:	int acpi_device_get_power(struct acpi_device *, int *);
163:	int acpi_device_set_power(struct acpi_device *, int);
372:	int acpi_device_update_power(struct acpi_device *, int *);
555:	bool acpi_pm_device_can_wakeup(struct device *);
689:	int acpi_pm_device_sleep_state(struct device *, int *, int);
872:	int acpi_pm_set_bridge_wakeup(struct device *, bool);
861:	int acpi_pm_set_device_wakeup(struct device *, bool);
437:	void acpi_pm_wakeup_event(struct device *);
38:	const char *acpi_power_state_string(int);
518:	acpi_status acpi_remove_pm_notifier(struct acpi_device *);
1039:	void acpi_subsys_complete(struct device *);
1161:	int acpi_subsys_freeze(struct device *);
1181:	int acpi_subsys_freeze_late(struct device *);
1195:	int acpi_subsys_freeze_noirq(struct device *);
1017:	int acpi_subsys_prepare(struct device *);
1150:	int acpi_subsys_resume_early(struct device *);
1125:	int acpi_subsys_resume_noirq(struct device *);
983:	int acpi_subsys_runtime_resume(struct device *);
969:	int acpi_subsys_runtime_suspend(struct device *);
1061:	int acpi_subsys_suspend(struct device *);
1078:	int acpi_subsys_suspend_late(struct device *);
1094:	int acpi_subsys_suspend_noirq(struct device *);
1209:	int acpi_subsys_thaw_noirq(struct device *);
749:	static int __acpi_device_wakeup_enable(struct acpi_device *, u32, int);
827:	static int __acpi_pm_set_device_wakeup(struct device *, bool, int);
991:	static bool acpi_dev_needs_resume(struct device *, struct acpi_device *);
1263:	static void acpi_dev_pm_detach(struct device *, bool);
142:	static int acpi_dev_pm_explicit_set(struct acpi_device *, int);
583:	static int acpi_dev_pm_get_state(struct device *, struct acpi_device *, u32, int *, int *);
884:	static int acpi_dev_pm_low_power(struct device *, struct acpi_device *, u32);
809:	static void acpi_device_wakeup_disable(struct acpi_device *);
443:	static void acpi_pm_notify_handler(acpi_handle, u32, void *);
737:	static void acpi_pm_notify_work_func(struct acpi_device_wakeup_context *);

File drivers/acpi/device_sysfs.c:
248:	int __acpi_device_uevent_modalias(struct acpi_device *, struct kobj_uevent_env *);
337:	int acpi_device_modalias(struct device *, char *, int);
611:	void acpi_device_remove_files(struct acpi_device *);
519:	int acpi_device_setup_files(struct acpi_device *);
292:	int acpi_device_uevent_modalias(struct device *, struct kobj_uevent_env *);
298:	static int __acpi_device_modalias(struct acpi_device *, char *, int);
68:	static ssize_t acpi_data_node_attr_show(struct kobject *, struct attribute *, char *);
81:	static void acpi_data_node_release(struct kobject *);
426:	static ssize_t acpi_device_adr_show(struct device *, struct device_attribute *, char *);
409:	static ssize_t acpi_device_hid_show(struct device *, struct device_attribute *, char *);
487:	static ssize_t acpi_device_hrv_show(struct device *, struct device_attribute *, char *);
344:	static ssize_t acpi_device_modalias_show(struct device *, struct device_attribute *, char *);
436:	static ssize_t acpi_device_path_show(struct device *, struct device_attribute *, char *);
472:	static ssize_t acpi_device_sun_show(struct device *, struct device_attribute *, char *);
417:	static ssize_t acpi_device_uid_show(struct device *, struct device_attribute *, char *);
377:	static ssize_t acpi_eject_store(struct device *, struct device_attribute *, const char *, size_t);
93:	static void acpi_expose_nondev_subnodes(struct kobject *, struct acpi_device_data *);
115:	static void acpi_hide_nondev_subnodes(struct acpi_device_data *);
29:	static ssize_t acpi_object_path(acpi_handle, char *);
200:	static int create_of_modalias(char *, int, struct acpi_device *, struct acpi_device *);
142:	static int create_pnp_modalias(struct acpi_device *, char *, int);
53:	static ssize_t data_node_show_path(struct acpi_data_node *, char *);
446:	static ssize_t description_show(struct device *, struct device_attribute *, char *);
366:	static ssize_t power_state_show(struct device *, struct device_attribute *, char *);
350:	static ssize_t real_power_state_show(struct device *, struct device_attribute *, char *);
501:	static ssize_t status_show(struct device *, struct device_attribute *, char *);

File drivers/acpi/dock.c:
599:	void acpi_dock_add(struct acpi_device *);
435:	int dock_notify(struct acpi_device *, u32);
197:	int is_dock_device(struct acpi_device *);
176:	void register_dock_dependent_device(struct acpi_device *, acpi_handle);
86:	static int add_dock_dependent_device(struct dock_station *, struct acpi_device *);
294:	static void dock_event(struct dock_station *, u32, int);
102:	static void dock_hotplug_event(u32, enum dock_callback_type, struct dock_dependent_device *);
222:	static int dock_present(struct dock_station *);
327:	static void handle_dock(int, struct dock_station *);
400:	static int handle_eject_request(struct dock_station *, u32);
561:	static ssize_t show_dock_type(struct device *, struct device_attribute *, char *);
547:	static ssize_t show_dock_uid(struct device *, struct device_attribute *, char *);
501:	static ssize_t show_docked(struct device *, struct device_attribute *, char *);
515:	static ssize_t show_flags(struct device *, struct device_attribute *, char *);
527:	static ssize_t write_undock(struct device *, struct device_attribute *, const char *, size_t);

File drivers/acpi/dptf/int340x_thermal.c:
50:	void acpi_int340x_thermal_init(void);
33:	static int int340x_thermal_handler_attach(struct acpi_device *, const struct acpi_device_id *);

File drivers/acpi/ec.c:
1113:	int acpi_ec_add_query_handler(struct acpi_ec *, u8, acpi_handle, acpi_ec_query_func, void *);
1039:	void acpi_ec_block_transactions(void);
1074:	void acpi_ec_dispatch_gpe(void);
1750:	int acpi_ec_dsdt_probe(void);
1920:	int acpi_ec_ecdt_probe(void);
570:	void acpi_ec_flush_work(void);
2122:	int acpi_ec_init(void);
1062:	void acpi_ec_mark_gpe_for_wake(void);
1153:	void acpi_ec_remove_query_handler(struct acpi_ec *, u8);
1068:	void acpi_ec_set_gpe_wake_mask(u8);
1052:	void acpi_ec_unblock_transactions(void);
957:	acpi_handle ec_get_handle(void);
910:	int ec_read(u8, u8 *);
941:	int ec_transaction(u8, const u8 *, unsigned int, u8 *, unsigned int);
928:	int ec_write(u8, u8);
549:	static void __acpi_ec_flush_event(struct acpi_ec *);
1559:	static int acpi_config_boot_ec(struct acpi_ec *, acpi_handle, bool, bool);
1631:	static int acpi_ec_add(struct acpi_device *);
1368:	static struct acpi_ec *acpi_ec_alloc(void);
478:	static void acpi_ec_complete_query(struct acpi_ec *);
415:	static void acpi_ec_complete_request(struct acpi_ec *);
1175:	static void acpi_ec_delete_query(struct acpi_ec_query *);
523:	static void acpi_ec_enable_event(struct acpi_ec *);
1017:	static void acpi_ec_enter_noirq(struct acpi_ec *);
1266:	static void acpi_ec_event_handler(struct work_struct *);
1184:	static void acpi_ec_event_processor(struct work_struct *);
1359:	static void acpi_ec_free(struct acpi_ec *);
1298:	static u32 acpi_ec_gpe_handler(acpi_handle, u32, void *);
1028:	static void acpi_ec_leave_noirq(struct acpi_ec *);
428:	static void acpi_ec_mask_gpe(struct acpi_ec *);
1198:	static int acpi_ec_query(struct acpi_ec *, u8 *);
1100:	static void acpi_ec_query_handler_release(struct kref *);
1386:	static acpi_status acpi_ec_register_query_methods(acpi_handle, u32, void *, void **);
1698:	static int acpi_ec_remove(struct acpi_device *);
1135:	static void acpi_ec_remove_query_handlers(struct acpi_ec *, bool, u8);
2013:	static int acpi_ec_resume(struct device *);
1999:	static int acpi_ec_resume_noirq(struct device *);
1539:	static int acpi_ec_setup(struct acpi_ec *, bool);
1315:	static acpi_status acpi_ec_space_handler(u32, acpi_physical_address, u32, u64 *, void *, void *);
965:	static void acpi_ec_start(struct acpi_ec *, bool);
993:	static void acpi_ec_stop(struct acpi_ec *, bool);
407:	static void acpi_ec_submit_request(struct acpi_ec *);
1971:	static int acpi_ec_suspend(struct device *);
1981:	static int acpi_ec_suspend_noirq(struct device *);
839:	static int acpi_ec_transaction(struct acpi_ec *, struct transaction *);
437:	static void acpi_ec_unmask_gpe(struct acpi_ec *);
648:	static void advance_transaction(struct acpi_ec *);
1857:	static int ec_clear_on_resume(const struct dmi_system_id *);
1870:	static int ec_correct_ecdt(const struct dmi_system_id *);
746:	static int ec_guard(struct acpi_ec *);
1882:	static int ec_honor_ecdt_gpe(const struct dmi_system_id *);
1446:	static int ec_install_handlers(struct acpi_ec *, bool);
1403:	static acpi_status ec_parse_device(acpi_handle, u32, void *, void **);
1717:	static acpi_status ec_parse_io_ports(struct acpi_resource *, void *);
1505:	static void ec_remove_handlers(struct acpi_ec *);
620:	static int ec_transaction_completed(struct acpi_ec *);
2047:	static int param_get_event_clearing(char *, const struct kernel_param *);
2028:	static int param_set_event_clearing(const char *, const struct kernel_param *);

File drivers/acpi/event.c:
95:	int acpi_bus_generate_netlink_event(const char *, const char *, u8, int);
28:	int acpi_notifier_call_chain(struct acpi_device *, u32, u32);
41:	int register_acpi_notifier(struct notifier_block *);
47:	int unregister_acpi_notifier(struct notifier_block *);
169:	static int acpi_event_init(void);

File drivers/acpi/fan.c:
427:	static void acpi_fan_driver_exit(void);
427:	static int acpi_fan_driver_init(void);
329:	static int acpi_fan_probe(struct platform_device *);
388:	static int acpi_fan_remove(struct platform_device *);
411:	static int acpi_fan_resume(struct device *);
274:	static int acpi_fan_speed_cmp(const void *, const void *);
400:	static int acpi_fan_suspend(struct device *);
173:	static int fan_get_cur_state(struct thermal_cooling_device *, unsigned long *);
94:	static int fan_get_max_state(struct thermal_cooling_device *, unsigned long *);
213:	static int fan_set_cur_state(struct thermal_cooling_device *, unsigned long);

File drivers/acpi/glue.c:
175:	int acpi_bind_one(struct device *, struct acpi_device *);
115:	struct acpi_device *acpi_find_child_device(struct acpi_device *, u64, bool);
266:	int acpi_unbind_one(struct device *);
364:	void init_acpi_device_notify(void);
40:	int register_acpi_bus_type(struct acpi_bus_type *);
55:	int unregister_acpi_bus_type(struct acpi_bus_type *);
71:	static struct acpi_bus_type *acpi_get_bus_type(struct device *);
166:	static void acpi_physnode_link_name(char *, unsigned int);
299:	static int acpi_platform_notify(struct device *);
346:	static int acpi_platform_notify_remove(struct device *);
89:	static int find_child_checks(struct acpi_device *, bool);

File drivers/acpi/hed.c:
36:	int register_acpi_hed_notifier(struct notifier_block *);
42:	void unregister_acpi_hed_notifier(struct notifier_block *);
58:	static int acpi_hed_add(struct acpi_device *);
83:	static void acpi_hed_driver_exit(void);
83:	static int acpi_hed_driver_init(void);
53:	static void acpi_hed_notify(struct acpi_device *, u32);
67:	static int acpi_hed_remove(struct acpi_device *);

File drivers/acpi/hmat/hmat.c:
66:	static struct memory_target *find_mem_target(unsigned int);
618:	static int hmat_init(void);
151:	static u32 hmat_normalize(u16, u64, u8);
405:	static int hmat_parse_subtable(union acpi_subtable_headers *, const unsigned long);
186:	static void hmat_update_target_access(struct memory_target *, u8, u32);
505:	static int initiator_cmp(void *, struct list_head *, struct list_head *);
425:	static int srat_parse_mem_affinity(union acpi_subtable_headers *, const unsigned long);

File drivers/acpi/ioapic.c:
204:	int acpi_ioapic_add(acpi_handle);
232:	int acpi_ioapic_remove(struct acpi_pci_root *);
215:	void pci_ioapic_remove(struct acpi_pci_root *);
99:	static acpi_status handle_ioapic_add(acpi_handle, u32, void *, void **);
43:	static acpi_status setup_res(struct acpi_resource *, void *);

File drivers/acpi/numa.c:
496:	int acpi_get_node(acpi_handle);
69:	int acpi_map_pxm_to_node(int);
105:	int acpi_map_pxm_to_online_node(int);
436:	int acpi_numa_init(void);
262:	int acpi_numa_memory_affinity_init(struct acpi_srat_mem_affinity *);
235:	void acpi_numa_slit_init(struct acpi_table_slit *);
337:	void acpi_numa_x2apic_affinity_init(struct acpi_srat_x2apic_cpu_affinity *);
218:	void bad_srat(void);
54:	int node_to_pxm(int);
47:	int pxm_to_node(int);
224:	int srat_disabled(void);
379:	static int acpi_parse_gicc_affinity(union acpi_subtable_headers *, const unsigned long);
399:	static int acpi_parse_memory_affinity(union acpi_subtable_headers *, const unsigned long);
361:	static int acpi_parse_processor_affinity(union acpi_subtable_headers *, const unsigned long);
323:	static int acpi_parse_slit(struct acpi_table_header *);
416:	static int acpi_parse_srat(struct acpi_table_header *);
343:	static int acpi_parse_x2apic_affinity(union acpi_subtable_headers *, const unsigned long);
132:	static void acpi_table_print_srat_entry(struct acpi_subtable_header *);

File drivers/acpi/nvs.c:
51:	int acpi_nvs_for_each_region(int (*)(__u64, __u64, void *), void *);
37:	int acpi_nvs_register(__u64, __u64);
153:	int suspend_nvs_alloc(void);
129:	void suspend_nvs_free(void);
202:	void suspend_nvs_restore(void);
170:	int suspend_nvs_save(void);

File drivers/acpi/osi.c:
513:	int acpi_osi_init(void);
272:	bool acpi_osi_is_win8(void);
99:	void acpi_osi_setup(char *);
506:	int early_acpi_osi_init(void);
79:	static u32 acpi_osi_handler(acpi_string, u32);
161:	static void acpi_osi_setup_darwin(bool);
207:	static void acpi_osi_setup_linux(bool);
300:	static int dmi_disable_osi_vista(const struct dmi_system_id *);
310:	static int dmi_disable_osi_win7(const struct dmi_system_id *);
318:	static int dmi_disable_osi_win8(const struct dmi_system_id *);
293:	static int dmi_enable_osi_linux(const struct dmi_system_id *);
255:	static int osi_setup(char *);

File drivers/acpi/osl.c:
1491:	int acpi_check_region(resource_size_t, resource_size_t, const char *);
1452:	int acpi_check_resource_conflict(const struct resource *);
1158:	acpi_status acpi_hotplug_schedule(struct acpi_device *, u32);
1598:	unsigned long acpi_os_acquire_lock(spinlock_t *);
1632:	acpi_status acpi_os_create_cache(char *, u16, u16, struct kmem_cache **);
1192:	acpi_status acpi_os_create_semaphore(u32, u32, acpi_handle *);
1672:	acpi_status acpi_os_delete_cache(struct kmem_cache *);
1587:	void acpi_os_delete_lock(spinlock_t *);
1217:	acpi_status acpi_os_delete_semaphore(acpi_handle);
1824:	acpi_status acpi_os_enter_sleep(u8, u32, u32);
1054:	acpi_status acpi_os_execute(acpi_execute_type, acpi_osd_exec_callback, void *);
244:	void *acpi_os_get_iomem(acpi_physical_address, unsigned int);
1302:	acpi_status acpi_os_get_line(char *, u32, u32 *);
192:	acpi_physical_address acpi_os_get_root_pointer(void);
634:	u64 acpi_os_get_timer(void);
1720:	acpi_status acpi_os_initialize(void);
1741:	acpi_status acpi_os_initialize1(void);
556:	acpi_status acpi_os_install_interrupt_handler(u32, acpi_osd_handler, void *);
439:	int acpi_os_map_generic_address(struct acpi_generic_address *);
319:	void *acpi_os_map_iomem(acpi_physical_address, acpi_size);
371:	void *acpi_os_map_memory(acpi_physical_address, acpi_size);
519:	acpi_status acpi_os_predefined_override(const struct acpi_predefined_names *, acpi_string *);
1811:	acpi_status acpi_os_prepare_extended_sleep(u8, u32, u32);
1774:	acpi_status acpi_os_prepare_sleep(u8, u32, u32);
149:	void acpi_os_printf(const char *, ...);
1653:	acpi_status acpi_os_purge_cache(struct kmem_cache *);
680:	int acpi_os_read_iomem(void *, u64 *, u32);
704:	acpi_status acpi_os_read_memory(acpi_physical_address, u64 *, u32);
779:	acpi_status acpi_os_read_pci_configuration(struct acpi_pci_id *, u32, u64 *, u32);
640:	acpi_status acpi_os_read_port(acpi_io_address, u32 *, u32);
1609:	void acpi_os_release_lock(spinlock_t *, unsigned long);
1692:	acpi_status acpi_os_release_object(struct kmem_cache *, void *);
591:	acpi_status acpi_os_remove_interrupt_handler(acpi_osd_handler, u32);
1818:	void acpi_os_set_prepare_extended_sleep(int (*)(u8, u32, u32));
1789:	void acpi_os_set_prepare_sleep(int (*)(u8, u32, u32));
1348:	acpi_status acpi_os_signal(u32, void *);
1281:	acpi_status acpi_os_signal_semaphore(acpi_handle, u32);
607:	void acpi_os_sleep(u64);
612:	void acpi_os_stall(u32);
1753:	acpi_status acpi_os_terminate(void);
460:	void acpi_os_unmap_generic_address(struct acpi_generic_address *);
408:	void acpi_os_unmap_iomem(void *, acpi_size);
433:	void acpi_os_unmap_memory(void *, acpi_size);
158:	void acpi_os_vprintf(const char *, struct __va_list_tag *);
1328:	acpi_status acpi_os_wait_command_ready(void);
1130:	void acpi_os_wait_events_complete(void);
1236:	acpi_status acpi_os_wait_semaphore(acpi_handle, u32, u16);
737:	acpi_status acpi_os_write_memory(acpi_physical_address, u64, u32);
811:	acpi_status acpi_os_write_pci_configuration(struct acpi_pci_id *, u32, u64, u32);
663:	acpi_status acpi_os_write_port(acpi_io_address, u32, u32);
1186:	bool acpi_queue_hotplug_work(struct work_struct *);
1564:	acpi_status acpi_release_memory(acpi_handle, struct resource *, u32);
1578:	int acpi_resources_are_enforced(void);
504:	int acpi_rev_override_setup(char *);
1505:	static acpi_status acpi_deactivate_mem_region(acpi_handle, u32, void *, void **);
1709:	static int acpi_disable_return_repair(char *);
1433:	static int acpi_enforce_resources_setup(char *);
1149:	static void acpi_hotplug_work_fn(struct work_struct *);
540:	static irqreturn_t acpi_irq(int, void *);
1401:	static int acpi_no_auto_serialize_setup(char *);
1699:	static int acpi_no_static_ssdt_setup(char *);
378:	static unsigned long acpi_os_drop_map_ref(struct acpi_ioremap *);
837:	static void acpi_os_execute_deferred(struct work_struct *);
387:	static void acpi_os_map_cleanup(struct acpi_ioremap *);
1371:	static int acpi_os_name_setup(char *);
98:	static void acpi_request_region(struct acpi_generic_address *, unsigned int, char *);
115:	static int acpi_reserve_resources(void);
185:	static int setup_acpi_rsdp(char *);

File drivers/acpi/pci_irq.c:
502:	void acpi_pci_irq_disable(struct pci_dev *);
408:	int acpi_pci_irq_enable(struct pci_dev *);
219:	static int acpi_pci_irq_find_prt_entry(struct pci_dev *, int, struct acpi_prt_entry **);
311:	static struct acpi_prt_entry *acpi_pci_irq_lookup(struct pci_dev *, int);

File drivers/acpi/pci_link.c:
509:	int acpi_irq_penalty_init(void);
871:	bool acpi_isa_irq_available(int);
629:	int acpi_pci_link_allocate_irq(acpi_handle, int, int *, int *, char **);
684:	int acpi_pci_link_free_irq(acpi_handle);
932:	void acpi_pci_link_init(void);
864:	void acpi_penalize_isa_irq(int, int);
877:	void acpi_penalize_sci_irq(int, int, int);
920:	static int acpi_irq_balance_set(char *);
496:	static int acpi_irq_get_penalty(int);
893:	static int acpi_irq_isa(char *);
912:	static int acpi_irq_nobalance_set(char *);
905:	static int acpi_irq_pci(char *);
826:	static int acpi_irq_penalty_update(char *, int);
735:	static int acpi_pci_link_add(struct acpi_device *, const struct acpi_device_id *);
187:	static acpi_status acpi_pci_link_check_current(struct acpi_resource *, void *);
99:	static acpi_status acpi_pci_link_check_possible(struct acpi_resource *, void *);
244:	static int acpi_pci_link_get_current(struct acpi_pci_link *, struct acpi_pci_link *);
810:	static void acpi_pci_link_remove(struct acpi_device *);
292:	static int acpi_pci_link_set(struct acpi_pci_link *, int);
801:	static void irqrouter_resume(void);

File drivers/acpi/pci_root.c:
279:	struct pci_dev *acpi_get_pci_dev(acpi_handle);
84:	int acpi_is_root_bridge(acpi_handle);
247:	struct acpi_pci_root *acpi_pci_find_root(acpi_handle);
369:	acpi_status acpi_pci_osc_control_set(acpi_handle, u32 *, u32);
773:	int acpi_pci_probe_root_resources(struct acpi_pci_root_info *);
877:	struct pci_bus *acpi_pci_root_create(struct acpi_pci_root *, struct acpi_pci_root_ops *, struct acpi_pci_root_info *, void *);
947:	void acpi_pci_root_init(void);
842:	static void __acpi_pci_root_release_info(struct acpi_pci_root_info *);
527:	static int acpi_pci_root_add(struct acpi_device *, const struct acpi_device_id *);
861:	static void acpi_pci_root_release_info(struct pci_host_bridge *);
652:	static void acpi_pci_root_remove(struct acpi_device *);
49:	static int acpi_pci_root_scan_dependent(struct acpi_device *);
679:	static void acpi_pci_root_validate_resources(struct device *, struct list_head *, unsigned long);
189:	static acpi_status acpi_pci_run_osc(acpi_handle, const u32 *, u32 *);
159:	static void decode_osc_bits(char *, u32, struct pci_osc_bit_struct *, int, struct acpi_pci_root *);
102:	static acpi_status get_root_bridge_busnr_callback(struct acpi_resource *, void *);

File drivers/acpi/pci_slot.c:
141:	void acpi_pci_slot_enumerate(struct pci_bus *);
195:	void acpi_pci_slot_init(void);
153:	void acpi_pci_slot_remove(struct pci_bus *);
169:	static int do_sta_before_sun(const struct dmi_system_id *);
95:	static acpi_status register_slot(acpi_handle, u32, void *, void **);

File drivers/acpi/pmic/intel_pmic.c:
256:	int intel_pmic_install_opregion_handler(struct device *, acpi_handle, struct regmap *, struct intel_pmic_opregion_data *);
55:	static acpi_status intel_pmic_power_handler(u32, acpi_physical_address, u32, u64 *, void *, void *);
214:	static acpi_status intel_pmic_regs_handler(u32, acpi_physical_address, u32, u64 *, void *, void *);
174:	static acpi_status intel_pmic_thermal_handler(u32, acpi_physical_address, u32, u64 *, void *, void *);
86:	static int pmic_read_temp(struct intel_pmic_opregion *, int, u64 *);

File drivers/acpi/power.c:
804:	int acpi_add_power_resource(acpi_handle);
528:	int acpi_device_sleep_wake(struct acpi_device *, int, int, int);
630:	int acpi_disable_wakeup_device_power(struct acpi_device *);
578:	int acpi_enable_wakeup_device_power(struct acpi_device *, int);
151:	int acpi_extract_power_resources(union acpi_object *, unsigned int, struct list_head *);
459:	void acpi_power_add_remove_device(struct acpi_device *, bool);
680:	int acpi_power_get_inferred_state(struct acpi_device *, int *);
714:	int acpi_power_on_resources(struct acpi_device *, int);
124:	void acpi_power_resources_list_free(struct list_head *);
722:	int acpi_power_transition(struct acpi_device *, int);
476:	int acpi_power_wakeup_list_init(struct list_head *, int *);
864:	void acpi_resume_power_resources(void);
893:	void acpi_turn_off_unused_power_resources(void);
420:	static void acpi_power_expose_list(struct acpi_device *, struct list_head *, const struct attribute_group *);
189:	static int acpi_power_get_state(acpi_handle, int *);
401:	static void acpi_power_hide_list(struct acpi_device *, struct list_head *, const struct attribute_group *);
770:	static ssize_t acpi_power_in_use_show(struct device *, struct device_attribute *, char *);
325:	static int acpi_power_off(struct acpi_power_resource *);
302:	static int acpi_power_off_unlocked(struct acpi_power_resource *);
278:	static int acpi_power_on(struct acpi_power_resource *);
354:	static int acpi_power_on_list(struct list_head *);
262:	static int acpi_power_on_unlocked(struct acpi_power_resource *);
780:	static void acpi_power_sysfs_remove(struct acpi_device *);
755:	static void acpi_release_power_resource(struct device *);

File drivers/acpi/proc.c:
148:	void acpi_sleep_proc_init(void);
133:	static int acpi_system_wakeup_device_open_fs(struct inode *, struct file *);
23:	static int acpi_system_wakeup_device_seq_show(struct seq_file *, void *);
95:	static ssize_t acpi_system_write_wakeup_device(struct file *, const char *, size_t, loff_t *);

File drivers/acpi/processor_core.c:
258:	int acpi_get_cpuid(acpi_handle, int, u32);
363:	int acpi_get_ioapic_id(acpi_handle, u32, u64 *);
200:	phys_cpuid_t acpi_get_phys_id(acpi_handle, int, u32);
268:	phys_cpuid_t acpi_id_to_phys_cpuid(u32);
212:	int acpi_map_cpuid(phys_cpuid_t, u32);
149:	phys_cpuid_t acpi_map_madt_entry(u32);
21:	static struct acpi_table_madt *get_madt_table(void);
113:	static phys_cpuid_t map_madt_entry(struct acpi_table_madt *, int, u32);

File drivers/acpi/processor_driver.c:
226:	static int __acpi_processor_start(struct acpi_device *);
335:	static void acpi_processor_driver_exit(void);
306:	static int acpi_processor_driver_init(void);
69:	static void acpi_processor_notify(acpi_handle, u32, void *);
262:	static int acpi_processor_start(struct device *);
277:	static int acpi_processor_stop(struct device *);
142:	static int acpi_soft_cpu_dead(unsigned int);
113:	static int acpi_soft_cpu_online(unsigned int);

File drivers/acpi/processor_idle.c:
1130:	int acpi_processor_ffh_lpi_enter(struct acpi_lpi_state *);
1125:	int acpi_processor_ffh_lpi_probe(unsigned int);
1247:	int acpi_processor_hotplug(struct acpi_processor *);
1379:	int acpi_processor_power_exit(struct acpi_processor *);
1329:	int acpi_processor_power_init(struct acpi_processor *);
1271:	int acpi_processor_power_state_has_changed(struct acpi_processor *);
161:	static void __lapic_timer_propagate_broadcast(void *);
410:	static int acpi_cst_latency_cmp(const void *, const void *);
422:	static void acpi_cst_latency_swap(void *, void *, int);
557:	static void acpi_idle_do_entry(struct acpi_processor_cx *);
660:	static int acpi_idle_enter(struct cpuidle_device *, struct cpuidle_driver *, int);
616:	static void acpi_idle_enter_bm(struct acpi_processor *, struct acpi_processor_cx *, bool);
700:	static void acpi_idle_enter_s2idle(struct cpuidle_device *, struct cpuidle_driver *, int);
1143:	static int acpi_idle_lpi_enter(struct cpuidle_device *, struct cpuidle_driver *, int);
579:	static int acpi_idle_play_dead(struct cpuidle_device *, int);
863:	static int acpi_processor_evaluate_lpi(acpi_handle, struct acpi_lpi_states_array *, struct acpi_lpi_states_array *);
1066:	static int acpi_processor_get_lpi_info(struct acpi_processor *);
1236:	static int acpi_processor_get_power_info(struct acpi_processor *);
1223:	static int acpi_processor_setup_cpuidle_dev(struct acpi_processor *, struct cpuidle_device *);
1196:	static int acpi_processor_setup_cpuidle_states(struct acpi_processor *);
122:	static void acpi_safe_halt(void);
1021:	static int flatten_lpi_states(struct acpi_processor *, struct acpi_lpi_states_array *, struct acpi_lpi_states_array *);
87:	static int set_max_cstate(const struct dmi_system_id *);

File drivers/acpi/processor_pdc.c:
196:	void acpi_early_processor_set_pdc(void);
141:	void acpi_processor_set_pdc(acpi_handle);
160:	static acpi_status early_init_pdc(acpi_handle, u32, void *, void **);
169:	static int set_no_mwait(const struct dmi_system_id *);

File drivers/acpi/processor_perflib.c:
187:	int acpi_processor_get_bios_limit(int, unsigned int *);
423:	int acpi_processor_get_performance_info(struct acpi_processor *);
537:	int acpi_processor_get_psd(acpi_handle, struct acpi_psd_package *);
488:	int acpi_processor_notify_smm(struct module *);
210:	void acpi_processor_ppc_exit(void);
158:	void acpi_processor_ppc_has_changed(struct acpi_processor *, int);
200:	void acpi_processor_ppc_init(void);
600:	int acpi_processor_preregister_performance(struct acpi_processor_performance *);
466:	int acpi_processor_pstate_control(void);
753:	int acpi_processor_register_performance(struct acpi_processor_performance *, unsigned int);
790:	void acpi_processor_unregister_performance(unsigned int);
112:	static int acpi_processor_get_platform_limit(struct acpi_processor *);
71:	static int acpi_processor_ppc_notifier(struct notifier_block *, unsigned long, void *);
151:	static void acpi_processor_ppc_ost(acpi_handle, int);

File drivers/acpi/processor_thermal.c:
154:	void acpi_thermal_cpufreq_exit(void);
144:	void acpi_thermal_cpufreq_init(void);
183:	static int acpi_processor_max_state(struct acpi_processor *);
82:	static int acpi_thermal_cpufreq_notifier(struct notifier_block *, unsigned long, void *);
74:	static int cpu_has_cpufreq(unsigned int);
122:	static int cpufreq_set_cur_state(unsigned int, int);
63:	static int phys_package_first_cpu(int);
216:	static int processor_get_cur_state(struct thermal_cooling_device *, unsigned long *);
198:	static int processor_get_max_state(struct thermal_cooling_device *, unsigned long *);
236:	static int processor_set_cur_state(struct thermal_cooling_device *, unsigned long);

File drivers/acpi/processor_throttling.c:
1196:	int acpi_processor_get_throttling_info(struct acpi_processor *);
377:	void acpi_processor_reevaluate_tstate(struct acpi_processor *, bool);
1190:	int acpi_processor_set_throttling(struct acpi_processor *, int, bool);
211:	void acpi_processor_throttling_init(void);
312:	int acpi_processor_tstate_has_changed(struct acpi_processor *);
906:	static long __acpi_processor_get_throttling(void *);
1087:	static int __acpi_processor_set_throttling(struct acpi_processor *, int, bool, bool);
288:	static int acpi_processor_get_platform_limit(struct acpi_processor *);
920:	static int acpi_processor_get_throttling(struct acpi_processor *);
667:	static int acpi_processor_get_throttling_fadt(struct acpi_processor *);
873:	static int acpi_processor_get_throttling_ptc(struct acpi_processor *);
974:	static int acpi_processor_set_throttling_fadt(struct acpi_processor *, int, bool);
1047:	static int acpi_processor_set_throttling_ptc(struct acpi_processor *, int, bool);
1078:	static long acpi_processor_throttling_fn(void *);
913:	static int call_on_cpu(int, long (*)(void *), void *, bool);

File drivers/acpi/property.c:
597:	int __acpi_node_get_property_reference(const struct fwnode_handle *, const char *, size_t, size_t, struct fwnode_reference_args *);
468:	int acpi_dev_get_property(const struct acpi_device *, const char *, acpi_object_type, const union acpi_object **);
931:	int acpi_dev_prop_read(const struct acpi_device *, const char *, enum dev_prop_type, void *, size_t);
777:	int acpi_dev_prop_read_single(struct acpi_device *, const char *, enum dev_prop_type, void *);
399:	void acpi_free_properties(struct acpi_device *);
962:	struct fwnode_handle *acpi_get_next_subnode(const struct fwnode_handle *, struct fwnode_handle *);
332:	void acpi_init_properties(struct acpi_device *);
1040:	struct fwnode_handle *acpi_node_get_parent(const struct fwnode_handle *);
494:	int acpi_node_prop_get(const struct fwnode_handle *, const char *, void **);
949:	int acpi_node_prop_read(const struct fwnode_handle *, const char *, enum dev_prop_type, void *, size_t);
1329:	bool is_acpi_data_node(const struct fwnode_handle *);
1322:	bool is_acpi_device_node(const struct fwnode_handle *);
426:	static int acpi_data_get_property(const struct acpi_device_data *, const char *, acpi_object_type, const union acpi_object **);
867:	static int acpi_data_prop_read(const struct acpi_device_data *, const char *, enum dev_prop_type, void *, size_t);
716:	static int acpi_data_prop_read_single(const struct acpi_device_data *, const char *, enum dev_prop_type, void *);
383:	static void acpi_destroy_nondev_subnodes(struct list_head *);
476:	static const struct acpi_device_data *acpi_device_data_of_node(const struct fwnode_handle *);
183:	static bool acpi_enumerate_nondev_subnodes(acpi_handle, struct acpi_device_data *, struct fwnode_handle *, const union acpi_object *, const union acpi_object *);
291:	static bool acpi_extract_properties(struct acpi_device_data *, const union acpi_object *, const union acpi_object *);
1290:	static const void *acpi_fwnode_device_get_match_data(const struct fwnode_handle *, const struct device *);
1207:	static bool acpi_fwnode_device_is_available(const struct fwnode_handle *);
546:	static struct fwnode_handle *acpi_fwnode_get_named_child_node(const struct fwnode_handle *, const char *);
1269:	static struct fwnode_handle *acpi_fwnode_get_parent(struct fwnode_handle *);
1259:	static int acpi_fwnode_get_reference_args(const struct fwnode_handle *, const char *, const char *, unsigned int, unsigned int, struct fwnode_reference_args *);
1274:	static int acpi_fwnode_graph_parse_endpoint(const struct fwnode_handle *, struct fwnode_endpoint *);
1215:	static bool acpi_fwnode_property_present(const struct fwnode_handle *, const char *);
1222:	static int acpi_fwnode_property_read_int_array(const struct fwnode_handle *, const char *, unsigned int, void *, size_t);
1250:	static int acpi_fwnode_property_read_string_array(const struct fwnode_handle *, const char *, const char **, size_t);
1146:	static struct fwnode_handle *acpi_graph_get_child_prop_value(const struct fwnode_handle *, const char *, unsigned int);
1089:	static struct fwnode_handle *acpi_graph_get_next_endpoint(const struct fwnode_handle *, struct fwnode_handle *);
1174:	static struct fwnode_handle *acpi_graph_get_remote_endpoint(const struct fwnode_handle *);
95:	static bool acpi_nondev_subnode_data_ok(acpi_handle, const union acpi_object *, struct list_head *, struct fwnode_handle *);
43:	static bool acpi_nondev_subnode_extract(const union acpi_object *, acpi_handle, struct list_head *, struct fwnode_handle *, const union acpi_object *);
1064:	static bool is_acpi_graph_node(struct fwnode_handle *, const char *);

File drivers/acpi/reboot.c:
7:	void acpi_reboot(void);

File drivers/acpi/resource.c:
683:	int acpi_dev_filter_resource_type(struct acpi_resource *, unsigned long);
507:	void acpi_dev_free_resource_list(struct list_head *);
667:	int acpi_dev_get_dma_resources(struct acpi_device *, struct list_head *);
370:	unsigned int acpi_dev_get_irq_type(int, int);
630:	int acpi_dev_get_resources(struct acpi_device *, struct list_head *, int (*)(struct acpi_resource *, void *), void *);
347:	unsigned long acpi_dev_irq_flags(u8, u8, u8);
296:	bool acpi_dev_resource_address_space(struct acpi_resource *, struct resource_win *);
325:	bool acpi_dev_resource_ext_address_space(struct acpi_resource *, struct resource_win *);
460:	bool acpi_dev_resource_interrupt(struct acpi_resource *, int, struct resource *);
186:	bool acpi_dev_resource_io(struct acpi_resource *, struct resource *);
113:	bool acpi_dev_resource_memory(struct acpi_resource *, struct resource *);
778:	struct acpi_device *acpi_resource_consumer(struct resource *);
577:	static int __acpi_dev_get_resources(struct acpi_device *, struct list_head *, int (*)(struct acpi_resource *, void *), void *, char *);
213:	static bool acpi_decode_space(struct resource_win *, struct acpi_resource_address *, struct acpi_address64_attribute *);
398:	static void acpi_dev_get_irqresource(struct resource *, u32, u8, u8, u8, bool);
147:	static void acpi_dev_ioresource_flags(struct resource *, u64, u8, u8);
79:	static void acpi_dev_memresource_flags(struct resource *, u64, u8);
521:	static acpi_status acpi_dev_new_resource_entry(struct resource_win *, struct res_proc_context *);
538:	static acpi_status acpi_dev_process_resource(struct acpi_resource *, void *);
59:	static bool acpi_dev_resource_len_valid(u64, u64, u64, bool);
752:	static acpi_status acpi_res_consumer_cb(acpi_handle, u32, void *, void **);
639:	static int is_memory(struct acpi_resource *, void *);

File drivers/acpi/scan.c:
2272:	int __acpi_probe_device_table(struct acpi_probe_entry *, int);
1066:	bool acpi_ata_match(acpi_handle);
1080:	bool acpi_bay_match(acpi_handle);
613:	struct acpi_device *acpi_bus_get_acpi_device(acpi_handle);
601:	int acpi_bus_get_device(acpi_handle, struct acpi_device **);
759:	acpi_status acpi_bus_get_ejd(acpi_handle, acpi_handle *);
621:	void acpi_bus_put_acpi_device(struct acpi_device *);
2118:	int acpi_bus_register_early_device(int);
2069:	int acpi_bus_scan(acpi_handle);
2091:	void acpi_bus_trim(struct acpi_device *);
626:	int acpi_device_add(struct acpi_device *, void (*)(struct device *));
1620:	void acpi_device_add_finalize(struct acpi_device *);
1176:	const char *acpi_device_hid(struct acpi_device *);
389:	void acpi_device_hotplug(struct acpi_device *, u32);
1094:	bool acpi_device_is_battery(struct acpi_device *);
1749:	bool acpi_device_is_present(const struct acpi_device *);
1469:	int acpi_dma_configure(struct device *, enum dev_dma_attr);
1491:	void acpi_dma_deconfigure(struct device *);
1399:	int acpi_dma_get_range(struct device *, u64 *, u64 *, u64 *);
1349:	bool acpi_dma_supported(struct acpi_device *);
1118:	bool acpi_dock_match(acpi_handle);
1332:	void acpi_free_pnp_ids(struct acpi_device_pnp *);
1374:	enum dev_dma_attr acpi_get_dma_attr(struct acpi_device *);
1595:	void acpi_init_device_object(struct acpi_device *, acpi_handle, int, unsigned long long);
80:	void acpi_initialize_hp_context(struct acpi_device *, struct acpi_hotplug_context *, int (*)(struct acpi_device *, u32), void (*)(struct acpi_device *, u32));
1148:	long acpi_is_video_device(acpi_handle);
70:	void acpi_lock_hp_context(void);
2339:	int acpi_reconfig_notifier_register(struct notifier_block *);
2345:	int acpi_reconfig_notifier_unregister(struct notifier_block *);
93:	int acpi_scan_add_handler(struct acpi_scan_handler *);
102:	int acpi_scan_add_handler_with_hotplug(struct acpi_scan_handler *, const char *);
1786:	void acpi_scan_hotplug_enabled(struct acpi_hotplug_profile *, bool);
2188:	int acpi_scan_init(void);
115:	bool acpi_scan_is_offline(struct acpi_device *, bool);
58:	void acpi_scan_lock_acquire(void);
64:	void acpi_scan_lock_release(void);
2318:	void acpi_scan_table_handler(u32, void *, void *);
75:	void acpi_unlock_hp_context(void);
2032:	void acpi_walk_dep_device_list(acpi_handle);
1188:	static void acpi_add_id(struct acpi_device_pnp *, const char *);
1626:	static int acpi_add_single_object(struct acpi_device **, acpi_handle, int, unsigned long long);
1124:	static acpi_status acpi_backlight_cap_match(acpi_handle, u32, void *, void **);
1974:	static void acpi_bus_attach(struct acpi_device *);
1872:	static acpi_status acpi_bus_check_add(acpi_handle, u32, void *, void **);
140:	static acpi_status acpi_bus_offline(acpi_handle, u32, void *, void **);
185:	static acpi_status acpi_bus_online(acpi_handle, u32, void *, void **);
1705:	static int acpi_bus_type_and_status(acpi_handle, int *, unsigned long long *);
1530:	static int acpi_check_serial_bus_slave(struct acpi_resource *, void *);
1907:	static void acpi_default_enumeration(struct acpi_device *);
474:	static void acpi_device_del(struct acpi_device *);
511:	static void acpi_device_del_work_fn(struct work_struct *);
1817:	static void acpi_device_dep_initialize(struct acpi_device *);
464:	static void acpi_device_release(struct device *);
1927:	static int acpi_generic_device_attach(struct acpi_device *, const struct acpi_device_id *);
581:	static int acpi_get_device_data(acpi_handle, struct acpi_device **, void (*)(void *));
1670:	static acpi_status acpi_get_resource_memory(struct acpi_resource *, void *);
2262:	static int acpi_match_madt(union acpi_subtable_headers *, const unsigned long);
342:	static int acpi_scan_bus_check(struct acpi_device *);
299:	static int acpi_scan_device_not_present(struct acpi_device *);
554:	static void acpi_scan_drop_device(acpi_handle, void *);
1774:	static struct acpi_scan_handler *acpi_scan_match_handler(const char *, const struct acpi_device_id **);
2303:	static void acpi_table_events_fn(struct work_struct *);
607:	static void get_acpi_device(void *);

File drivers/acpi/sleep.c:
1129:	void acpi_no_s4_hw_signature(void);
113:	void acpi_nvs_nosave(void);
128:	void acpi_nvs_nosave_s3(void);
146:	void acpi_old_suspend_ordering(void);
1081:	bool acpi_s2idle_wakeup(void);
1277:	int acpi_sleep_init(void);
393:	void acpi_sleep_no_blacklist(void);
1086:	bool acpi_sleep_no_ec_events(void);
96:	u32 acpi_target_system_state(void);
1134:	static int acpi_hibernation_begin(void);
1202:	static int acpi_hibernation_begin_old(void);
1145:	static int acpi_hibernation_enter(void);
1159:	static void acpi_hibernation_leave(void);
525:	static void acpi_pm_end(void);
471:	static void acpi_pm_finish(void);
412:	static int acpi_pm_freeze(void);
423:	static int acpi_pm_pre_suspend(void);
448:	static int acpi_pm_prepare(void);
1178:	static void acpi_pm_thaw(void);
1269:	static void acpi_power_off(void);
1261:	static void acpi_power_off_prepare(void);
1100:	static void acpi_restore_bm_rld(void);
961:	static int acpi_s2idle_begin(void);
1044:	static void acpi_s2idle_end(void);
968:	static int acpi_s2idle_prepare(void);
1027:	static void acpi_s2idle_restore(void);
1013:	static void acpi_s2idle_sync(void);
988:	static void acpi_s2idle_wake(void);
1094:	static int acpi_save_bm_rld(void);
63:	static int acpi_sleep_prepare(u32);
895:	static void acpi_sleep_run_lps0_dsm(unsigned int);
82:	static bool acpi_sleep_state_supported(u8);
36:	static void acpi_sleep_tts_switch(u32);
554:	static int acpi_suspend_begin(suspend_state_t);
681:	static int acpi_suspend_begin_old(suspend_state_t);
582:	static int acpi_suspend_enter(suspend_state_t);
650:	static int acpi_suspend_state_valid(suspend_state_t);
457:	static int find_powerf_dev(struct device *, void *);
165:	static int init_no_lps0(const struct dmi_system_id *);
157:	static int init_nvs_nosave(const struct dmi_system_id *);
133:	static int init_nvs_save_s3(const struct dmi_system_id *);
151:	static int init_old_suspend_ordering(const struct dmi_system_id *);
755:	static void lpi_device_get_constraints(void);
909:	static int lps0_device_attach(struct acpi_device *, const struct acpi_device_id *);
50:	static int tts_notify_reboot(struct notifier_block *, unsigned long, void *);

File drivers/acpi/spcr.c:
91:	int acpi_parse_spcr(bool, bool);

File drivers/acpi/sysfs.c:
834:	void acpi_gpe_apply_masked_gpes(void);
849:	void acpi_irq_stats_init(void);
983:	void acpi_sysfs_add_hotplug_profile(struct acpi_hotplug_profile *, const char *);
1033:	int acpi_sysfs_init(void);
403:	acpi_status acpi_sysfs_table_handler(u32, void *, void *);
456:	static int acpi_bert_data_init(void *, struct acpi_data_attr *);
436:	static ssize_t acpi_data_show(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
637:	static void acpi_global_event_handler(u32, acpi_handle, u32, void *);
822:	static int acpi_gpe_set_masked_gpes(char *);
938:	static ssize_t acpi_show_profile(struct device *, struct device_attribute *, char *);
362:	static int acpi_table_attr_init(struct kobject *, struct acpi_table_attr *, struct acpi_table_header *);
341:	static ssize_t acpi_table_show(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
730:	static ssize_t counter_set(struct kobject *, struct kobj_attribute *, const char *, size_t);
673:	static ssize_t counter_show(struct kobject *, struct kobj_attribute *, char *);
587:	static void delete_gpe_attr_array(void);
1005:	static ssize_t force_remove_show(struct kobject *, struct kobj_attribute *, char *);
1011:	static ssize_t force_remove_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
651:	static int get_status(u32, acpi_event_status *, acpi_handle *);
947:	static ssize_t hotplug_enabled_show(struct kobject *, struct kobj_attribute *, char *);
955:	static ssize_t hotplug_enabled_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
928:	static void interrupt_stats_exit(void);
300:	static int param_get_acpica_version(char *, const struct kernel_param *);

File drivers/acpi/tables.c:
807:	int acpi_locate_initial_tables(void);
764:	acpi_status acpi_os_physical_table_override(struct acpi_table_header *, acpi_physical_address *, u32 *);
778:	acpi_status acpi_os_table_override(struct acpi_table_header *, struct acpi_table_header **);
826:	void acpi_reserve_initial_tables(void);
851:	int acpi_table_init(void);
845:	void acpi_table_init_complete(void);
441:	int acpi_table_parse(char *, acpi_tbl_table_handler);
407:	int acpi_table_parse_entries(char *, unsigned long, int, acpi_tbl_entry_handler, unsigned int);
375:	int acpi_table_parse_entries_array(char *, unsigned long, struct acpi_subtable_proc *, int, unsigned int);
423:	int acpi_table_parse_madt(enum acpi_madt_type, acpi_tbl_entry_handler, unsigned int);
69:	void acpi_table_print_madt_entry(struct acpi_subtable_header *);
531:	void acpi_table_upgrade(void);
888:	static int acpi_force_32bit_fadt_addr(char *);
879:	static int acpi_force_table_verification_setup(char *);
864:	static int acpi_parse_apic_instance(char *);

File drivers/acpi/thermal.c:
1077:	static int acpi_thermal_add(struct acpi_device *);
859:	static int acpi_thermal_bind_cooling_device(struct thermal_zone_device *, struct thermal_cooling_device *);
516:	static void acpi_thermal_check(void *);
1070:	static void acpi_thermal_check_fn(struct work_struct *);
768:	static int acpi_thermal_cooling_device_cb(struct thermal_zone_device *, struct thermal_cooling_device *, bool);
1277:	static void acpi_thermal_exit(void);
197:	static int acpi_thermal_get_temperature(struct acpi_thermal *);
1252:	static int acpi_thermal_init(void);
954:	static void acpi_thermal_notify(struct acpi_device *, u32);
1118:	static int acpi_thermal_remove(struct acpi_device *);
1141:	static int acpi_thermal_resume(struct device *);
1134:	static int acpi_thermal_suspend(struct device *);
281:	static int acpi_thermal_trips_update(struct acpi_thermal *, int);
866:	static int acpi_thermal_unbind_cooling_device(struct thermal_zone_device *, struct thermal_cooling_device *);
1177:	static int thermal_act(const struct dmi_system_id *);
688:	static int thermal_get_crit_temp(struct thermal_zone_device *, int *);
546:	static int thermal_get_mode(struct thermal_zone_device *, enum thermal_device_mode *);
529:	static int thermal_get_temp(struct thermal_zone_device *, int *);
702:	static int thermal_get_trend(struct thermal_zone_device *, int, enum thermal_trend *);
635:	static int thermal_get_trip_temp(struct thermal_zone_device *, int, int *);
590:	static int thermal_get_trip_type(struct thermal_zone_device *, int, enum thermal_trip_type *);
1186:	static int thermal_nocrt(const struct dmi_system_id *);
746:	static int thermal_notify(struct thermal_zone_device *, int, enum thermal_trip_type);
1202:	static int thermal_psv(const struct dmi_system_id *);
560:	static int thermal_set_mode(struct thermal_zone_device *, enum thermal_device_mode);
1193:	static int thermal_tzp(const struct dmi_system_id *);

File drivers/acpi/utils.c:
524:	void __acpi_handle_debug(struct _ddebug *, acpi_handle, const char *, ...);
678:	bool acpi_check_dsm(acpi_handle, const guid_t *, u64, u64);
723:	bool acpi_dev_found(const char *);
820:	const char *acpi_dev_get_first_match_name(const char *, const char *, s64);
793:	bool acpi_dev_present(const char *, const char *, s64);
629:	union acpi_object *acpi_evaluate_dsm(acpi_handle, const guid_t *, u64, u64, union acpi_object *);
577:	acpi_status acpi_evaluate_ej0(acpi_handle);
283:	acpi_status acpi_evaluate_integer(acpi_handle, acpi_string, struct acpi_object_list *, unsigned long long *);
597:	acpi_status acpi_evaluate_lck(acpi_handle, int);
445:	acpi_status acpi_evaluate_ost(acpi_handle, u32, u32, struct acpi_buffer *);
317:	acpi_status acpi_evaluate_reference(acpi_handle, acpi_string, struct acpi_object_list *, struct acpi_handle_list *);
559:	acpi_status acpi_execute_simple_method(acpi_handle, char *, u64);
55:	acpi_status acpi_extract_package(union acpi_object *, struct acpi_buffer *, struct acpi_buffer *);
401:	acpi_status acpi_get_physical_device_location(acpi_handle, struct acpi_pld_info **);
496:	void acpi_handle_printk(const char *, acpi_handle, const char *, ...);
551:	bool acpi_has_method(acpi_handle, char *);
856:	int acpi_match_platform_list(const struct acpi_platform_list *);
841:	static int acpi_backlight(char *);
747:	static int acpi_dev_match_cb(struct device *, void *);
474:	static char *acpi_handle_path(acpi_handle);

File drivers/acpi/wakeup.c:
58:	void acpi_disable_wakeup_devices(u8);
31:	void acpi_enable_wakeup_devices(u8);
80:	int acpi_wakeup_device_init(void);

File drivers/acpi/x86/apple.c:
30:	void acpi_extract_apple_properties(struct acpi_device *);

File drivers/acpi/x86/utils.c:
110:	bool acpi_device_always_present(struct acpi_device *);

File drivers/base/attribute_container.c:
314:	int attribute_container_add_attrs(struct device *);
349:	int attribute_container_add_class_device(struct device *);
365:	int attribute_container_add_class_device_adapter(struct attribute_container *, struct device *, struct device *);
141:	void attribute_container_add_device(struct device *, int (*)(struct attribute_container *, struct device *, struct device *));
407:	void attribute_container_class_device_del(struct device *);
54:	struct attribute_container *attribute_container_classdev_to_container(struct device *);
250:	void attribute_container_device_trigger(struct device *, int (*)(struct attribute_container *, struct device *, struct device *));
423:	struct device *attribute_container_find_class_device(struct attribute_container *, struct device *);
73:	int attribute_container_register(struct attribute_container *);
379:	void attribute_container_remove_attrs(struct device *);
206:	void attribute_container_remove_device(struct device *, void (*)(struct attribute_container *, struct device *, struct device *));
291:	void attribute_container_trigger(struct device *, int (*)(struct attribute_container *, struct device *));
93:	int attribute_container_unregister(struct attribute_container *);
112:	static void attribute_container_release(struct device *);
31:	static void internal_container_klist_get(struct klist_node *);
38:	static void internal_container_klist_put(struct klist_node *);

File drivers/base/bus.c:
468:	int bus_add_device(struct device *);
629:	int bus_add_driver(struct device_driver *);
130:	int bus_create_file(struct bus_type *, struct bus_attribute *);
325:	struct device *bus_find_device(struct bus_type *, struct device *, void *, int (*)(struct device *, void *));
362:	struct device *bus_find_device_by_name(struct bus_type *, struct device *, const char *);
291:	int bus_for_each_dev(struct bus_type *, struct device *, void *, int (*)(struct device *, void *));
441:	int bus_for_each_drv(struct bus_type *, struct device_driver *, void *, int (*)(struct device_driver *, void *));
953:	struct klist *bus_get_device_klist(struct bus_type *);
947:	struct kset *bus_get_kset(struct bus_type *);
505:	void bus_probe_device(struct device *);
836:	int bus_register(struct bus_type *);
935:	int bus_register_notifier(struct bus_type *, struct notifier_block *);
533:	void bus_remove_device(struct device *);
709:	void bus_remove_driver(struct device_driver *);
142:	void bus_remove_file(struct bus_type *, struct bus_attribute *);
750:	int bus_rescan_devices(struct bus_type *);
986:	void bus_sort_breadthfirst(struct bus_type *, int (*)(const struct device *, const struct device *));
921:	void bus_unregister(struct bus_type *);
941:	int bus_unregister_notifier(struct bus_type *, struct notifier_block *);
1222:	int buses_init(void);
765:	int device_reprobe(struct device *);
1068:	void subsys_dev_iter_exit(struct subsys_dev_iter *);
1021:	void subsys_dev_iter_init(struct subsys_dev_iter *, struct bus_type *, struct device *, const struct device_type *);
1045:	struct device *subsys_dev_iter_next(struct subsys_dev_iter *);
379:	struct device *subsys_find_device_by_id(struct bus_type *, unsigned int, struct device *);
1074:	int subsys_interface_register(struct subsys_interface *);
1101:	void subsys_interface_unregister(struct subsys_interface *);
1191:	int subsys_system_register(struct bus_type *, const struct attribute_group **);
1209:	int subsys_virtual_register(struct bus_type *, const struct attribute_group **);
204:	static ssize_t bind_store(struct device_driver *, const char *, size_t);
101:	static ssize_t bus_attr_show(struct kobject *, struct attribute *, char *);
113:	static ssize_t bus_attr_store(struct kobject *, struct attribute *, const char *, size_t);
151:	static void bus_release(struct kobject *);
727:	static int bus_rescan_devices_helper(struct device *, void *);
165:	static int bus_uevent_filter(struct kset *, struct kobject *);
818:	static ssize_t bus_uevent_store(struct bus_type *, const char *, size_t);
614:	static void driver_attach_async(void *, async_cookie_t);
85:	static void driver_release(struct kobject *);
56:	static ssize_t drv_attr_show(struct kobject *, struct attribute *, char *);
68:	static ssize_t drv_attr_store(struct kobject *, struct attribute *, const char *, size_t);
802:	static void klist_devices_get(struct klist_node *);
810:	static void klist_devices_put(struct klist_node *);
345:	static int match_name(struct device *, void *);
229:	static ssize_t show_drivers_autoprobe(struct bus_type *, char *);
234:	static ssize_t store_drivers_autoprobe(struct bus_type *, const char *, size_t);
244:	static ssize_t store_drivers_probe(struct bus_type *, const char *, size_t);
1131:	static int subsys_register(struct bus_type *, const struct attribute_group **, struct kobject *);
1126:	static void system_root_device_release(struct device *);
604:	static ssize_t uevent_store(struct device_driver *, const char *, size_t);
181:	static ssize_t unbind_store(struct device_driver *, const char *, size_t);

File drivers/base/cacheinfo.c:
577:	const struct attribute_group *cache_get_priv_group(struct cacheinfo *);
211:	int cache_setup_acpi(unsigned int);
223:	struct cacheinfo *cacheinfo_shared_cpu_map_search(void *);
29:	struct cpu_cacheinfo *get_cpu_cacheinfo(unsigned int);
340:	int init_cache_level(unsigned int);
458:	static ssize_t allocation_policy_show(struct device *, struct device_attribute *, char *);
518:	static umode_t cache_default_attrs_is_visible(struct kobject *, struct attribute *, int);
676:	static int cacheinfo_cpu_online(unsigned int);
688:	static int cacheinfo_cpu_pre_down(unsigned int);
697:	static int cacheinfo_sysfs_init(void);
408:	static ssize_t coherency_line_size_show(struct device *, struct device_attribute *, char *);
598:	static void cpu_cache_sysfs_exit(unsigned int);
329:	static void free_cache_attributes(unsigned int);
406:	static ssize_t id_show(struct device *, struct device_attribute *, char *);
407:	static ssize_t level_show(struct device *, struct device_attribute *, char *);
409:	static ssize_t number_of_sets_show(struct device *, struct device_attribute *, char *);
410:	static ssize_t physical_line_partition_show(struct device *, struct device_attribute *, char *);
435:	static ssize_t shared_cpu_list_show(struct device *, struct device_attribute *, char *);
429:	static ssize_t shared_cpu_map_show(struct device *, struct device_attribute *, char *);
413:	static ssize_t size_show(struct device *, struct device_attribute *, char *);
441:	static ssize_t type_show(struct device *, struct device_attribute *, char *);
411:	static ssize_t ways_of_associativity_show(struct device *, struct device_attribute *, char *);
474:	static ssize_t write_policy_show(struct device *, struct device_attribute *, char *);

File drivers/base/class.c:
219:	struct class *__class_create(struct module *, const char *, struct lock_class_key *);
146:	int __class_register(struct class *, struct lock_class_key *);
524:	int class_compat_create_link(struct class_compat *, struct device *, struct device *);
490:	struct class_compat *class_compat_register(const char *);
557:	void class_compat_remove_link(struct class_compat *, struct device *, struct device *);
510:	void class_compat_unregister(struct class_compat *);
87:	int class_create_file_ns(struct class *, const struct class_attribute *, const void *);
254:	void class_destroy(struct class *);
321:	void class_dev_iter_exit(struct class_dev_iter *);
274:	void class_dev_iter_init(struct class_dev_iter *, struct class *, struct device *, const struct device_type *);
298:	struct device *class_dev_iter_next(struct class_dev_iter *);
392:	struct device *class_find_device(struct class *, struct device *, const void *, int (*)(struct device *, const void *));
345:	int class_for_each_device(struct class *, struct device *, void *, int (*)(struct device *, void *));
420:	int class_interface_register(struct class_interface *);
446:	void class_interface_unregister(struct class_interface *);
100:	void class_remove_file_ns(struct class *, const struct class_attribute *, const void *);
192:	void class_unregister(struct class *);
566:	int classes_init(void);
468:	ssize_t show_class_attr_string(struct class *, struct class_attribute *, char *);
24:	static ssize_t class_attr_show(struct kobject *, struct attribute *, char *);
36:	static ssize_t class_attr_store(struct kobject *, struct attribute *, const char *, size_t);
64:	static const struct kobj_ns_type_operations *class_child_ns_type(struct kobject *);
199:	static void class_create_release(struct class *);
48:	static void class_release(struct kobject *);
120:	static void klist_class_dev_get(struct klist_node *);
127:	static void klist_class_dev_put(struct klist_node *);

File drivers/base/component.c:
550:	int component_add(struct device *, const struct component_ops *);
516:	int component_bind_all(struct device *, void *);
581:	void component_del(struct device *, const struct component_ops *);
380:	int component_master_add_with_match(struct device *, const struct component_master_ops *, struct component_match *);
416:	void component_master_del(struct device *, const struct component_master_ops *);
319:	void component_match_add_release(struct device *, struct component_match **, void (*)(struct device *, void *), int (*)(struct device *, void *), void *);
443:	void component_unbind_all(struct device *, void *);
100:	static int component_debug_init(void);
88:	static int component_devices_open(struct inode *, struct file *);
62:	static int component_devices_show(struct seq_file *, void *);
291:	static int component_match_realloc(struct component_match *, size_t, struct device *);
431:	static void component_unbind(struct component *, void *, struct master *);
286:	static void devm_component_match_release(struct device *, void *);
361:	static void free_master(struct master *);
262:	static void take_down_master(struct master *);
213:	static int try_to_bring_up_master(struct master *, struct component *);

File drivers/base/container.c:
34:	void container_dev_init(void);
20:	static int container_offline(struct device *);
15:	static int trivial_online(struct device *);

File drivers/base/core.c:
2693:	struct device *__root_device_register(const char *, struct module *);
3328:	void _dev_alert(const struct device *, const char *, ...);
3329:	void _dev_crit(const struct device *, const char *, ...);
3327:	void _dev_emerg(const struct device *, const char *, ...);
3330:	void _dev_err(const struct device *, const char *, ...);
3333:	void _dev_info(const struct device *, const char *, ...);
3332:	void _dev_notice(const struct device *, const char *, ...);
3331:	void _dev_warn(const struct device *, const char *, ...);
925:	const char *dev_driver_string(const struct device *);
3293:	void dev_printk(const char *, const struct device *, const char *, ...);
3268:	int dev_printk_emit(int, const struct device *, const char *, ...);
1974:	int dev_set_name(struct device *, const char *, ...);
3256:	int dev_vprintk_emit(int, const struct device *, const char *, struct __va_list_tag *);
2068:	int device_add(struct device *);
1299:	int device_add_groups(struct device *, const struct attribute_group **);
2857:	struct device *device_create(struct class *, struct device *, dev_t, void *, const char *, ...);
1614:	int device_create_bin_file(struct device *, const struct bin_attribute *);
1560:	int device_create_file(struct device *, const struct device_attribute *);
2824:	struct device *device_create_vargs(struct class *, struct device *, dev_t, void *, const char *, struct __va_list_tag *);
2897:	struct device *device_create_with_groups(struct class *, struct device *, dev_t, void *, const struct attribute_group **, const char *, ...);
2302:	void device_del(struct device *);
2929:	void device_destroy(struct class *, dev_t);
2531:	struct device *device_find_child(struct device *, void *, int (*)(struct device *, void *));
2466:	int device_for_each_child(struct device *, void *, int (*)(struct device *, void *));
2496:	int device_for_each_child_reverse(struct device *, void *, int (*)(struct device *, void *));
2422:	const char *device_get_devnode(struct device *, umode_t *, kuid_t *, kgid_t *, const char **);
1673:	void device_initialize(struct device *);
290:	struct device_link *device_link_add(struct device *, struct device *, u32);
500:	void device_link_del(struct device_link *);
518:	void device_link_remove(void *, struct device *);
768:	bool device_links_busy(struct device *);
565:	int device_links_check_suppliers(struct device *);
600:	void device_links_driver_bound(struct device *);
724:	void device_links_driver_cleanup(struct device *);
687:	void device_links_no_driver(struct device *);
62:	int device_links_read_lock(void);
67:	void device_links_read_unlock(int);
808:	void device_links_unbind_consumers(struct device *);
3039:	int device_move(struct device *, struct device *, enum dpm_order);
2597:	int device_offline(struct device *);
2635:	int device_online(struct device *);
216:	void device_pm_move_to_tail(struct device *);
2238:	int device_register(struct device *);
1629:	void device_remove_bin_file(struct device *, const struct bin_attribute *);
1584:	void device_remove_file(struct device *, const struct device_attribute *);
1599:	bool device_remove_file_self(struct device *, const struct device_attribute *);
1305:	void device_remove_groups(struct device *, const struct attribute_group **);
2980:	int device_rename(struct device *, const char *);
3404:	void device_set_of_node_from_dev(struct device *, const struct device *);
1038:	ssize_t device_show_bool(struct device *, struct device_attribute *, char *);
1016:	ssize_t device_show_int(struct device *, struct device_attribute *, char *);
992:	ssize_t device_show_ulong(struct device *, struct device_attribute *, char *);
3125:	void device_shutdown(void);
1026:	ssize_t device_store_bool(struct device *, struct device_attribute *, const char *, size_t);
1001:	ssize_t device_store_int(struct device *, struct device_attribute *, const char *, size_t);
977:	ssize_t device_store_ulong(struct device *, struct device_attribute *, const char *, size_t);
2375:	void device_unregister(struct device *);
2549:	int devices_init(void);
1545:	void devices_kset_move_last(struct device *);
1350:	int devm_device_add_group(struct device *, const struct attribute_group *);
1402:	int devm_device_add_groups(struct device *, const struct attribute_group **);
1380:	void devm_device_remove_group(struct device *, const struct attribute_group *);
1433:	void devm_device_remove_groups(struct device *, const struct attribute_group **);
2253:	struct device *get_device(struct device *);
2271:	bool kill_device(struct device *);
884:	void lock_device_hotplug(void);
894:	int lock_device_hotplug_sysfs(void);
2263:	void put_device(struct device *);
2740:	void root_device_unregister(struct device *);
3350:	void set_primary_fwnode(struct device *, struct fwnode_handle *);
3385:	void set_secondary_fwnode(struct device *, struct fwnode_handle *);
889:	void unlock_device_hotplug(void);
1694:	struct kobject *virtual_device_parent(struct device *);
3283:	static void __dev_printk(const char *, const struct device *, struct va_format *);
452:	static void __device_link_del(struct kref *);
447:	static void __device_link_free_srcu(struct callback_head *);
659:	static void __device_links_no_driver(struct device *);
2914:	static int __match_devt(struct device *, const void *);
1719:	static const struct kobj_ns_type_operations *class_dir_child_ns_type(struct kobject *);
1712:	static void class_dir_release(struct kobject *);
1835:	static void cleanup_glue_dir(struct kobject *, struct device *);
942:	static ssize_t dev_attr_show(struct kobject *, struct attribute *, char *);
958:	static ssize_t dev_attr_store(struct kobject *, struct attribute *, const char *, size_t);
1499:	static ssize_t dev_show(struct device *, struct device_attribute *, char *);
1136:	static int dev_uevent(struct kset *, struct kobject *, struct kobj_uevent_env *);
1111:	static int dev_uevent_filter(struct kset *, struct kobject *);
1125:	static const char *dev_uevent_name(struct kset *, struct kobject *);
2575:	static int device_check_offline(struct device *, void *);
2759:	static struct device *device_create_groups_vargs(struct class *, struct device *, dev_t, void *, const struct attribute_group **, const char *, struct __va_list_tag *);
2752:	static void device_create_release(struct device *);
1095:	static void device_get_ownership(struct kobject *, kuid_t *, kgid_t *);
114:	static int device_is_dependent(struct device *, void *);
142:	static void device_link_init_status(struct device *, struct device *, struct device_link *);
483:	static void device_link_put_kref(struct device_link *);
1084:	static const void *device_namespace(struct kobject *);
1055:	static void device_release(struct kobject *);
1484:	static void device_remove_attrs(struct device *);
1951:	static void device_remove_class_symlinks(struct device *);
186:	static int device_reorder_to_tail(struct device *, void *);
1317:	static int devm_attr_group_match(struct device *, void *, void *);
1322:	static void devm_attr_group_remove(struct device *, void *);
1331:	static void devm_attr_groups_remove(struct device *, void *);
1756:	static struct kobject *get_device_parent(struct device *, struct device *, struct device *);
1637:	static void klist_children_get(struct klist_node *);
1645:	static void klist_children_put(struct klist_node *);
1268:	static ssize_t online_show(struct device *, struct device_attribute *, char *);
1279:	static ssize_t online_store(struct device *, struct device_attribute *, const char *, size_t);
2666:	static void root_device_release(struct device *);
1209:	static ssize_t uevent_show(struct device *, struct device_attribute *, char *);
1252:	static ssize_t uevent_store(struct device *, struct device_attribute *, const char *, size_t);

File drivers/base/cpu.c:
613:	void cpu_dev_init(void);
447:	struct device *cpu_device_create(struct device *, void *, const struct attribute_group **, const char *, ...);
494:	bool cpu_is_hotpluggable(unsigned int);
519:	ssize_t cpu_show_meltdown(struct device *, struct device_attribute *, char *);
398:	struct device *get_cpu_device(unsigned int);
366:	int register_cpu(struct cpu *, int);
75:	void unregister_cpu(struct cpu *);
304:	static void cpu_device_release(struct device *);
28:	static int cpu_subsys_match(struct device *, struct device_driver *);
70:	static int cpu_subsys_offline(struct device *);
47:	static int cpu_subsys_online(struct device *);
346:	static int cpu_uevent(struct device *, struct kobj_uevent_env *);
407:	static void device_create_release(struct device *);
324:	static ssize_t print_cpu_modalias(struct device *, struct device_attribute *, char *);
272:	static ssize_t print_cpus_isolated(struct device *, struct device_attribute *, char *);
231:	static ssize_t print_cpus_kernel_max(struct device *, struct device_attribute *, char *);
292:	static ssize_t print_cpus_nohz_full(struct device *, struct device_attribute *, char *);
242:	static ssize_t print_cpus_offline(struct device *, struct device_attribute *, char *);
209:	static ssize_t show_cpus_attr(struct device *, struct device_attribute *, char *);
142:	static ssize_t show_crash_notes(struct device *, struct device_attribute *, char *);
164:	static ssize_t show_crash_notes_size(struct device *, struct device_attribute *, char *);

File drivers/base/dd.c:
857:	int device_attach(struct device *);
422:	int device_bind_driver(struct device *);
186:	void device_block_probing(void);
908:	int device_driver_attach(struct device_driver *, struct device *);
1078:	void device_driver_detach(struct device *);
863:	void device_initial_probe(struct device *);
318:	bool device_is_bound(struct device *);
1060:	void device_release_driver(struct device *);
1037:	void device_release_driver_internal(struct device *, struct device_driver *, struct device *);
199:	void device_unblock_probing(void);
673:	bool driver_allows_async_probing(struct device_driver *);
967:	int driver_attach(struct device_driver *);
119:	void driver_deferred_probe_add(struct device *);
242:	int driver_deferred_probe_check_state(struct device *);
129:	void driver_deferred_probe_del(struct device *);
1087:	void driver_detach(struct device_driver *);
645:	int driver_probe_device(struct device_driver *, struct device *);
608:	int driver_probe_done(void);
621:	void wait_for_device_probe(void);
789:	static int __device_attach(struct device *, bool);
753:	static void __device_attach_async_helper(void *, async_cookie_t);
723:	static int __device_attach_driver(struct device_driver *, void *);
877:	static void __device_driver_lock(struct device *, struct device *);
893:	static void __device_driver_unlock(struct device *, struct device *);
926:	static int __driver_attach(struct device *, void *);
353:	static ssize_t coredump_store(struct device *, struct device_attribute *, const char *, size_t);
221:	static int deferred_devs_open(struct inode *, struct file *);
208:	static int deferred_devs_show(struct seq_file *, void *);
303:	static void deferred_probe_exit(void);
277:	static int deferred_probe_initcall(void);
224:	static int deferred_probe_timeout_setup(char *);
255:	static void deferred_probe_timeout_work_func(struct work_struct *);
70:	static void deferred_probe_work_func(struct work_struct *);
323:	static void driver_bound(struct device *);
158:	static void driver_deferred_probe_trigger(void);
364:	static int driver_sysfs_add(struct device *);
396:	static void driver_sysfs_remove(struct device *);
448:	static int really_probe(struct device *, struct device_driver *);

File drivers/base/devcon.c:
118:	void device_connection_add(struct device_connection *);
108:	struct device *device_connection_find(struct device *, const char *);
25:	void *device_connection_find_match(struct device *, const char *, void *, void *(*)(struct device_connection *, int, void *));
130:	void device_connection_remove(struct device_connection *);
79:	static void *generic_match(struct device_connection *, int, void *);

File drivers/base/devcoredump.c:
261:	void dev_coredumpm(struct device *, struct module *, void *, size_t, gfp_t, ssize_t (*)(char *, loff_t, size_t, void *, size_t), void (*)(void *));
338:	void dev_coredumpsg(struct device *, struct scatterlist *, size_t, gfp_t);
194:	void dev_coredumpv(struct device *, void *, size_t, gfp_t);
74:	static ssize_t devcd_data_read(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
84:	static ssize_t devcd_data_write(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
64:	static void devcd_del(struct work_struct *);
45:	static void devcd_dev_release(struct device *);
115:	static int devcd_free(struct device *, void *);
216:	static void devcd_free_sgtable(void *);
179:	static void devcd_freev(void *);
201:	static int devcd_match_failing(struct device *, const void *);
231:	static ssize_t devcd_read_from_sgtable(char *, loff_t, size_t, void *, size_t);
164:	static ssize_t devcd_readv(char *, loff_t, size_t, void *, size_t);
352:	static void devcoredump_exit(void);
346:	static int devcoredump_init(void);
123:	static ssize_t disabled_show(struct class *, struct class_attribute *, char *);
129:	static ssize_t disabled_store(struct class *, struct class_attribute *, const char *, size_t);

File drivers/base/devres.c:
1027:	void *__devm_alloc_percpu(struct device *, size_t, size_t);
721:	int devm_add_action(struct device *, void (*)(void *), void *);
991:	void devm_free_pages(struct device *, unsigned long);
1058:	void devm_free_percpu(struct device *, void *);
957:	unsigned long devm_get_free_pages(struct device *, gfp_t, unsigned int);
874:	char *devm_kasprintf(struct device *, gfp_t, const char *, ...);
894:	void devm_kfree(struct device *, void *);
786:	void *devm_kmalloc(struct device *, size_t, gfp_t);
912:	void *devm_kmemdup(struct device *, const void *, size_t, gfp_t);
815:	char *devm_kstrdup(struct device *, const char *, gfp_t);
842:	char *devm_kvasprintf(struct device *, gfp_t, const char *, struct __va_list_tag *);
747:	void devm_remove_action(struct device *, void (*)(void *), void *);
227:	void devres_add(struct device *, void *);
147:	void *devres_alloc_node(dr_release_t, size_t, gfp_t, int);
601:	void devres_close_group(struct device *, void *);
374:	int devres_destroy(struct device *, dr_release_t, dr_match_t, void *);
270:	void *devres_find(struct device *, dr_release_t, dr_match_t, void *);
174:	void devres_for_each_res(struct device *, dr_release_t, dr_match_t, void *, void (*)(struct device *, void *, void *), void *);
207:	void devres_free(void *);
300:	void *devres_get(struct device *, void *, dr_match_t, void *);
544:	void *devres_open_group(struct device *, void *, gfp_t);
404:	int devres_release(struct device *, dr_release_t, dr_match_t, void *);
519:	int devres_release_all(struct device *);
660:	int devres_release_group(struct device *, void *);
336:	void *devres_remove(struct device *, dr_release_t, dr_match_t, void *);
627:	void devres_remove_group(struct device *, void *);
112:	static void add_dr(struct device *, struct devres_node *);
696:	static int devm_action_match(struct device *, void *, void *);
705:	static void devm_action_release(struct device *, void *);
768:	static int devm_kmalloc_match(struct device *, void *, void *);
929:	static int devm_pages_match(struct device *, void *, void *);
937:	static void devm_pages_release(struct device *, void *);
1008:	static int devm_percpu_match(struct device *, void *, void *);
1000:	static void devm_percpu_release(struct device *, void *);
71:	static void group_open_release(struct device *, void *);
488:	static int release_nodes(struct device *, struct list_head *, struct list_head *, unsigned long);

File drivers/base/devtmpfs.c:
83:	int devtmpfs_create_node(struct device *);
122:	int devtmpfs_delete_node(struct device *);
421:	int devtmpfs_init(void);
349:	int devtmpfs_mount(const char *);
58:	static struct dentry *dev_mount(struct file_system_type *, int, const char *, void *);
379:	static int devtmpfsd(void *);
196:	static int handle_create(const char *, umode_t, kuid_t, kgid_t, struct device *);
299:	static int handle_remove(const char *, struct device *);
51:	static int mount_param(char *);

File drivers/base/driver.c:
126:	int driver_add_groups(struct device_driver *, const struct attribute_group **);
100:	int driver_create_file(struct device_driver *, const struct driver_attribute *);
213:	struct device_driver *driver_find(const char *, struct bus_type *);
75:	struct device *driver_find_device(struct device_driver *, struct device *, void *, int (*)(struct device *, void *));
41:	int driver_for_each_device(struct device_driver *, struct device *, void *, int (*)(struct device *, void *));
146:	int driver_register(struct device_driver *);
118:	void driver_remove_file(struct device_driver *, const struct driver_attribute *);
132:	void driver_remove_groups(struct device_driver *, const struct attribute_group **);
190:	void driver_unregister(struct device_driver *);

File drivers/base/firmware.c:
20:	int firmware_init(void);

File drivers/base/firmware_loader/fallback.c:
687:	int firmware_fallback_sysfs(struct firmware *, const char *, struct device *, enum fw_opt, int);
40:	void fw_fallback_set_cache_timeout(void);
47:	void fw_fallback_set_default_timeout(void);
107:	void kill_pending_fw_fallback_reqs(bool);
198:	int register_sysfs_loader(void);
203:	void unregister_sysfs_loader(void);
85:	static void __fw_load_abort(struct fw_priv *);
356:	static ssize_t firmware_data_read(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
440:	static ssize_t firmware_data_write(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
208:	static ssize_t firmware_loading_show(struct device *, struct device_attribute *, char *);
249:	static ssize_t firmware_loading_store(struct device *, struct device_attribute *, const char *, size_t);
333:	static void firmware_rw(struct fw_priv *, char *, loff_t, size_t, bool);
324:	static void firmware_rw_data(struct fw_priv *, char *, loff_t, size_t, bool);
179:	static int firmware_uevent(struct device *, struct kobj_uevent_env *);
160:	static void fw_dev_release(struct device *);
121:	static ssize_t timeout_show(struct class *, struct class_attribute *, char *);
140:	static ssize_t timeout_store(struct class *, struct class_attribute *, const char *, size_t);

File drivers/base/firmware_loader/main.c:
451:	int assign_fw(struct firmware *, struct device *, enum fw_opt);
707:	int firmware_request_cache(struct device *, const char *);
656:	int firmware_request_nowarn(const struct firmware **, const char *, struct device *);
755:	void release_firmware(const struct firmware *);
629:	int request_firmware(const struct firmware **, const char *, struct device *);
681:	int request_firmware_direct(const struct firmware **, const char *, struct device *);
735:	int request_firmware_into_buf(const struct firmware **, const char *, struct device *, void *, size_t);
817:	int request_firmware_nowait(struct module *, bool, const char *, struct device *, gfp_t, void *, void (*)(const struct firmware *, void *));
991:	static void __async_dev_cache_fw_image(void *, async_cookie_t);
241:	static void __free_fw_priv(struct kref *);
952:	static int __fw_entry_found(const char *);
197:	static struct fw_priv *__lookup_fw_priv(const char *);
567:	static int _request_firmware(const struct firmware **, const char *, struct device *, void *, size_t, enum fw_opt);
934:	static struct fw_cache_entry *alloc_fw_cache_entry(const char *);
1029:	static void dev_cache_fw_image(struct device *, void *);
1009:	static void dev_create_fw_entry(struct device *, void *, void *);
1125:	static void device_uncache_fw_images_work(struct work_struct *);
1022:	static int devm_name_match(struct device *, void *, void *);
1271:	static void firmware_class_exit(void);
1249:	static int firmware_class_init(void);
269:	static void free_fw_priv(struct fw_priv *);
417:	static int fw_add_devm_name(struct device *, const char *);
386:	static int fw_devm_match(struct device *, void *, void *);
376:	static void fw_name_devm_release(struct device *, void *);
1143:	static int fw_pm_notify(struct notifier_block *, unsigned long, void *);
361:	static void fw_set_page_data(struct fw_priv *, struct firmware *);
1233:	static int fw_shutdown_notify(struct notifier_block *, unsigned long, void *);
1177:	static int fw_suspend(void);
776:	static void request_firmware_work_func(struct work_struct *);

File drivers/base/hypervisor.c:
18:	int hypervisor_init(void);

File drivers/base/init.c:
20:	void driver_init(void);

File drivers/base/map.c:
95:	void kobj_delete(struct kobj_map *, dev_t, unsigned long, kobj_probe_t *);
123:	struct kobject *kobj_lookup(struct kobj_map *, dev_t, int *);
32:	int kobj_map(struct kobj_map *, dev_t, unsigned long, struct module *, kobj_probe_t *, int (*)(dev_t, void *), void *);
163:	struct kobj_map *kobj_map_init(kobj_probe_t *, struct mutex *);
68:	void kobj_unmap(struct kobj_map *, dev_t, unsigned long);

File drivers/base/memory.c:
591:	int arch_get_memory_phys_device(unsigned long);
741:	int create_memory_block_devices(unsigned long, unsigned long);
630:	struct memory_block *find_memory_block(struct mem_section *);
614:	struct memory_block *find_memory_block_hinted(struct mem_section *, struct memory_block *);
892:	int for_each_memory_block(void *, walk_memory_blocks_func_t);
802:	bool is_memblock_offlined(struct memory_block *);
92:	unsigned long memory_block_size_bytes(void);
834:	int memory_dev_init(void);
190:	int memory_isolate_notify(unsigned long, void *);
185:	int memory_notify(unsigned long, void *);
73:	int register_memory_isolate_notifier(struct notifier_block *);
59:	int register_memory_notifier(struct notifier_block *);
778:	void remove_memory_block_devices(unsigned long, unsigned long);
79:	void unregister_memory_isolate_notifier(struct notifier_block *);
65:	void unregister_memory_notifier(struct notifier_block *);
872:	static int for_each_memory_block_cb(struct device *, void *);
98:	static unsigned long get_memory_block_size(void);
676:	static int init_memory_block(struct memory_block **, int, unsigned long);
239:	static int memory_block_action(unsigned long, unsigned long, int);
85:	static void memory_block_release(struct device *);
311:	static int memory_subsys_offline(struct device *);
287:	static int memory_subsys_online(struct device *);
392:	static void print_allowed_zone(char *, int, unsigned long, unsigned long, int, struct zone *);
457:	static ssize_t print_block_size(struct device *, struct device_attribute *, char *);
470:	static ssize_t show_auto_online_blocks(struct device *, struct device_attribute *, char *);
131:	static ssize_t show_mem_removable(struct device *, struct device_attribute *, char *);
118:	static ssize_t show_mem_start_phys_index(struct device *, struct device_attribute *, char *);
155:	static ssize_t show_mem_state(struct device *, struct device_attribute *, char *);
384:	static ssize_t show_phys_device(struct device *, struct device_attribute *, char *);
405:	static ssize_t show_valid_zones(struct device *, struct device_attribute *, char *);
480:	static ssize_t store_auto_online_blocks(struct device *, struct device_attribute *, const char *, size_t);
567:	static ssize_t store_hard_offline_page(struct device *, struct device_attribute *, const char *, size_t);
326:	static ssize_t store_mem_state(struct device *, struct device_attribute *, const char *, size_t);
545:	static ssize_t store_soft_offline_page(struct device *, struct device_attribute *, const char *, size_t);
726:	static void unregister_memory(struct memory_block *);

File drivers/base/module.c:
33:	void module_add_driver(struct module *, struct device_driver *);
72:	void module_remove_driver(struct device_driver *);

File drivers/base/node.c:
920:	int __register_one_node(int);
839:	int link_mem_sections(int, unsigned long, unsigned long, enum meminit_context);
285:	void node_add_cache(unsigned int, struct node_cache_attrs *);
183:	void node_set_perf_attrs(unsigned int, struct node_hmem_attrs *, unsigned int);
648:	int register_cpu_under_node(unsigned int, unsigned int);
571:	void register_hugetlbfs_with_node(node_registration_func_t, node_registration_func_t);
775:	int register_mem_block_under_node_early(struct memory_block *, void *);
684:	int register_memory_node_under_compute_node(unsigned int, unsigned int, unsigned int);
721:	int unregister_cpu_under_node(unsigned int, unsigned int);
828:	void unregister_memory_block_under_nodes(struct memory_block *);
635:	void unregister_node(struct node *);
945:	void unregister_one_node(int);
752:	static int do_register_memory_block_under_node(int, struct memory_block *);
741:	static int get_nid_for_pfn(unsigned long);
233:	static ssize_t indexing_show(struct device *, struct device_attribute *, char *);
232:	static ssize_t line_size_show(struct device *, struct device_attribute *, char *);
114:	static void node_access_release(struct device *);
583:	static void node_device_release(struct device *);
857:	static void node_hugetlb_work(struct work_struct *);
119:	static struct node_access_nodes *node_init_node_access(struct node *, unsigned int);
878:	static int node_memory_callback(struct notifier_block *, unsigned long, void *);
54:	static ssize_t node_read_cpulist(struct device *, struct device_attribute *, char *);
30:	static ssize_t node_read_cpumap(struct device *, bool, char *);
49:	static ssize_t node_read_cpumask(struct device *, struct device_attribute *, char *);
510:	static ssize_t node_read_distance(struct device *, struct device_attribute *, char *);
358:	static ssize_t node_read_meminfo(struct device *, struct device_attribute *, char *);
457:	static ssize_t node_read_numastat(struct device *, struct device_attribute *, char *);
476:	static ssize_t node_read_vmstat(struct device *, struct device_attribute *, char *);
164:	static ssize_t read_bandwidth_show(struct device *, struct device_attribute *, char *);
165:	static ssize_t read_latency_show(struct device *, struct device_attribute *, char *);
816:	static int register_mem_block_under_node_hotplug(struct memory_block *, void *);
1023:	static int register_node_type(void);
974:	static ssize_t show_node_state(struct device *, struct device_attribute *, char *);
231:	static ssize_t size_show(struct device *, struct device_attribute *, char *);
166:	static ssize_t write_bandwidth_show(struct device *, struct device_attribute *, char *);
167:	static ssize_t write_latency_show(struct device *, struct device_attribute *, char *);
234:	static ssize_t write_policy_show(struct device *, struct device_attribute *, char *);

File drivers/base/pinctrl.c:
21:	int pinctrl_bind_pins(struct device *);

File drivers/base/platform-msi.c:
324:	struct irq_domain *platform_msi_create_device_domain(struct device *, unsigned int, irq_write_msi_msg_t, const struct irq_domain_ops *, void *);
177:	struct irq_domain *platform_msi_create_irq_domain(struct fwnode_handle *, struct msi_domain_info *, struct irq_domain *);
394:	int platform_msi_domain_alloc(struct irq_domain *, unsigned int, unsigned int);
251:	int platform_msi_domain_alloc_irqs(struct device *, unsigned int, irq_write_msi_msg_t);
365:	void platform_msi_domain_free(struct irq_domain *, unsigned int, unsigned int);
284:	void platform_msi_domain_free_irqs(struct device *);
306:	void *platform_msi_get_host_data(struct irq_domain *);
122:	static int platform_msi_alloc_descs_with_irq(struct device *, int, int, struct platform_msi_priv_data *);
196:	static struct platform_msi_priv_data *platform_msi_alloc_priv_data(struct device *, unsigned int, irq_write_msi_msg_t);
109:	static void platform_msi_free_descs(struct device *, int, int);
79:	static void platform_msi_write_msg(struct irq_data *, struct msi_msg *);

File drivers/base/platform.c:
740:	struct platform_device *__platform_create_bundle(struct platform_driver *, int (*)(struct platform_device *), struct resource *, unsigned int, const void *, size_t, struct module *);
673:	int __platform_driver_probe(struct platform_driver *, int (*)(struct platform_device *), struct module *);
630:	int __platform_driver_register(struct platform_driver *, struct module *);
795:	int __platform_register_drivers(struct platform_driver * const *, unsigned int, struct module *);
58:	void arch_setup_pdev_archdata(struct platform_device *);
1190:	u64 dma_get_required_mask(struct device *);
1278:	void early_platform_add_devices(struct platform_device **, int);
1484:	void early_platform_cleanup(void);
1459:	int early_platform_driver_probe(char *, int, int);
1221:	int early_platform_driver_register(struct early_platform_driver *, char *);
1304:	void early_platform_driver_register_all(char *);
208:	int platform_add_devices(struct platform_device **, int);
1171:	int platform_bus_init(void);
361:	int platform_device_add(struct platform_device *);
321:	int platform_device_add_data(struct platform_device *, const void *, size_t);
347:	int platform_device_add_properties(struct platform_device *, const struct property_entry *);
293:	int platform_device_add_resources(struct platform_device *, const struct resource *, unsigned int);
265:	struct platform_device *platform_device_alloc(const char *, int);
449:	void platform_device_del(struct platform_device *);
237:	void platform_device_put(struct platform_device *);
475:	int platform_device_register(struct platform_device *);
506:	struct platform_device *platform_device_register_full(const struct platform_device_info *);
491:	void platform_device_unregister(struct platform_device *);
1139:	int platform_dma_configure(struct device *);
647:	void platform_driver_unregister(struct platform_driver *);
88:	int platform_get_irq(struct platform_device *, unsigned int);
186:	int platform_get_irq_byname(struct platform_device *, const char *);
68:	struct resource *platform_get_resource(struct platform_device *, unsigned int, unsigned int);
162:	struct resource *platform_get_resource_byname(struct platform_device *, unsigned int, const char *);
142:	int platform_irq_count(struct platform_device *);
1065:	int platform_pm_freeze(struct device *);
1101:	int platform_pm_poweroff(struct device *);
1119:	int platform_pm_restore(struct device *);
1043:	int platform_pm_resume(struct device *);
1025:	int platform_pm_suspend(struct device *);
1083:	int platform_pm_thaw(struct device *);
833:	void platform_unregister_drivers(struct platform_driver * const *, unsigned int);
903:	static ssize_t driver_override_show(struct device *, struct device_attribute *, char *);
869:	static ssize_t driver_override_store(struct device *, struct device_attribute *, const char *, size_t);
849:	static ssize_t modalias_show(struct device *, struct device_attribute *, char *);
244:	static void platform_device_release(struct device *);
569:	static int platform_drv_probe(struct device *);
598:	static int platform_drv_probe_fail(struct device *);
603:	static int platform_drv_remove(struct device *);
616:	static void platform_drv_shutdown(struct device *);
970:	static int platform_match(struct device *, struct device_driver *);
924:	static int platform_uevent(struct device *, struct kobj_uevent_env *);

File drivers/base/power/clock_ops.c:
153:	int of_pm_clk_add_clk(struct device *, const char *);
185:	int of_pm_clk_add_clks(struct device *);
120:	int pm_clk_add(struct device *, const char *);
136:	int pm_clk_add_clk(struct device *, struct clk *);
636:	void pm_clk_add_notifier(struct bus_type *, struct pm_clk_notifier_block *);
348:	int pm_clk_create(struct device *);
362:	void pm_clk_destroy(struct device *);
333:	void pm_clk_init(struct device *);
262:	void pm_clk_remove(struct device *, const char *);
300:	void pm_clk_remove_clk(struct device *, struct clk *);
424:	int pm_clk_resume(struct device *);
527:	int pm_clk_runtime_resume(struct device *);
504:	int pm_clk_runtime_suspend(struct device *);
393:	int pm_clk_suspend(struct device *);
75:	static int __pm_clk_add(struct device *, const char *, struct clk *);
235:	static void __pm_clk_remove(struct pm_clock_entry *);
462:	static int pm_clk_notify(struct notifier_block *, unsigned long, void *);

File drivers/base/power/common.c:
104:	int dev_pm_domain_attach(struct device *, bool);
145:	struct device *dev_pm_domain_attach_by_id(struct device *, unsigned int);
162:	struct device *dev_pm_domain_attach_by_name(struct device *, const char *);
185:	void dev_pm_domain_detach(struct device *, bool);
202:	void dev_pm_domain_set(struct device *, struct dev_pm_domain *);
27:	int dev_pm_get_subsys_data(struct device *);
63:	void dev_pm_put_subsys_data(struct device *);

File drivers/base/power/domain.c:
257:	int dev_pm_genpd_set_performance_state(struct device *, unsigned int);
1423:	int pm_genpd_add_device(struct generic_pm_domain *, struct device *);
1553:	int pm_genpd_add_subdomain(struct generic_pm_domain *, struct generic_pm_domain *);
1646:	int pm_genpd_init(struct generic_pm_domain *, struct dev_power_governor *, bool);
1757:	int pm_genpd_remove(struct generic_pm_domain *);
1482:	int pm_genpd_remove_device(struct device *);
1571:	int pm_genpd_remove_subdomain(struct generic_pm_domain *, struct generic_pm_domain *);
1297:	void pm_genpd_syscore_poweroff(struct device *);
1303:	void pm_genpd_syscore_poweron(struct device *);
646:	static int __genpd_runtime_resume(struct device *);
370:	static int _genpd_power_off(struct generic_pm_domain *, bool);
331:	static int _genpd_power_on(struct generic_pm_domain *, bool);
2861:	static int genpd_active_time_open(struct inode *, struct file *);
2764:	static int genpd_active_time_show(struct seq_file *, void *);
1252:	static void genpd_complete(struct device *);
2924:	static void genpd_debug_exit(void);
2883:	static int genpd_debug_init(void);
564:	static int genpd_dev_pm_qos_notifier(struct notifier_block *, unsigned long, void *);
2863:	static int genpd_devices_open(struct inode *, struct file *);
2812:	static int genpd_devices_show(struct seq_file *, void *);
1037:	static int genpd_finish_suspend(struct device *, bool);
1367:	static void genpd_free_dev_data(struct device *, struct generic_pm_domain_data *);
1134:	static int genpd_freeze_noirq(struct device *);
2860:	static int genpd_idle_states_open(struct inode *, struct file *);
2735:	static int genpd_idle_states_show(struct seq_file *, void *);
61:	static int genpd_lock_interruptible_mtx(struct generic_pm_domain *);
97:	static int genpd_lock_interruptible_spin(struct generic_pm_domain *);
50:	static void genpd_lock_mtx(struct generic_pm_domain *);
55:	static void genpd_lock_nested_mtx(struct generic_pm_domain *, int);
87:	static void genpd_lock_nested_spin(struct generic_pm_domain *, int);
78:	static void genpd_lock_spin(struct generic_pm_domain *);
2864:	static int genpd_perf_state_open(struct inode *, struct file *);
2838:	static int genpd_perf_state_show(struct seq_file *, void *);
423:	static int genpd_power_off(struct generic_pm_domain *, bool, unsigned int);
832:	static int genpd_power_off_unused(void);
608:	static void genpd_power_off_work_fn(struct work_struct *);
514:	static int genpd_power_on(struct generic_pm_domain *, unsigned int);
1192:	static int genpd_poweroff_noirq(struct device *);
989:	static int genpd_prepare(struct device *);
1206:	static int genpd_restore_noirq(struct device *);
1096:	static int genpd_resume_noirq(struct device *);
748:	static int genpd_runtime_resume(struct device *);
673:	static int genpd_runtime_suspend(struct device *);
198:	static bool genpd_sd_counter_dec(struct generic_pm_domain *);
2858:	static int genpd_status_open(struct inode *, struct file *);
2691:	static int genpd_status_show(struct seq_file *, void *);
2859:	static int genpd_sub_domains_open(struct inode *, struct file *);
2718:	static int genpd_sub_domains_show(struct seq_file *, void *);
2857:	static int genpd_summary_open(struct inode *, struct file *);
2668:	static int genpd_summary_show(struct seq_file *, void *);
1083:	static int genpd_suspend_noirq(struct device *);
885:	static void genpd_sync_power_off(struct generic_pm_domain *, bool, unsigned int);
927:	static void genpd_sync_power_on(struct generic_pm_domain *, bool, unsigned int);
1280:	static void genpd_syscore_switch(struct device *, bool);
1163:	static int genpd_thaw_noirq(struct device *);
2862:	static int genpd_total_idle_time_open(struct inode *, struct file *);
2784:	static int genpd_total_idle_time_show(struct seq_file *, void *);
66:	static void genpd_unlock_mtx(struct generic_pm_domain *);
107:	static void genpd_unlock_spin(struct generic_pm_domain *);
215:	static void genpd_update_accounting(struct generic_pm_domain *);
822:	static int pd_ignore_unused_setup(char *);

File drivers/base/power/domain_governor.c:
243:	static bool always_on_power_down_ok(struct dev_pm_domain *);
209:	static bool default_power_down_ok(struct dev_pm_domain *);
49:	static bool default_suspend_ok(struct device *);
14:	static int dev_update_qos_constraint(struct device *, void *);

File drivers/base/power/generic_ops.c:
293:	void pm_generic_complete(struct device *);
135:	int pm_generic_freeze(struct device *);
123:	int pm_generic_freeze_late(struct device *);
111:	int pm_generic_freeze_noirq(struct device *);
171:	int pm_generic_poweroff(struct device *);
159:	int pm_generic_poweroff_late(struct device *);
147:	int pm_generic_poweroff_noirq(struct device *);
60:	int pm_generic_prepare(struct device *);
279:	int pm_generic_restore(struct device *);
267:	int pm_generic_restore_early(struct device *);
255:	int pm_generic_restore_noirq(struct device *);
243:	int pm_generic_resume(struct device *);
231:	int pm_generic_resume_early(struct device *);
219:	int pm_generic_resume_noirq(struct device *);
41:	int pm_generic_runtime_resume(struct device *);
22:	int pm_generic_runtime_suspend(struct device *);
99:	int pm_generic_suspend(struct device *);
87:	int pm_generic_suspend_late(struct device *);
75:	int pm_generic_suspend_noirq(struct device *);
207:	int pm_generic_thaw(struct device *);
195:	int pm_generic_thaw_early(struct device *);
183:	int pm_generic_thaw_noirq(struct device *);

File drivers/base/power/main.c:
2058:	void __suspend_report_result(const char *, void *, int);
564:	bool dev_pm_may_skip_resume(struct device *);
533:	void dev_pm_skip_next_resume_phases(struct device *);
2128:	bool dev_pm_smart_suspend_and_suspended(struct device *);
124:	void device_pm_add(struct device *);
2114:	void device_pm_check_callbacks(struct device *);
107:	void device_pm_lock(void);
175:	void device_pm_move_after(struct device *, struct device *);
161:	void device_pm_move_before(struct device *, struct device *);
188:	void device_pm_move_last(struct device *);
142:	void device_pm_remove(struct device *);
92:	void device_pm_sleep_init(struct device *);
115:	void device_pm_unlock(void);
2070:	int device_pm_wait_for_dev(struct device *, struct device *);
1135:	void dpm_complete(pm_message_t);
2085:	void dpm_for_each_dev(void *, void (*)(struct device *, void *));
1375:	void dpm_noirq_begin(void);
760:	void dpm_noirq_end(void);
711:	void dpm_noirq_resume_devices(pm_message_t);
1382:	int dpm_noirq_suspend_devices(pm_message_t);
1982:	int dpm_prepare(pm_message_t);
1034:	void dpm_resume(pm_message_t);
868:	void dpm_resume_early(pm_message_t);
1174:	void dpm_resume_end(pm_message_t);
774:	void dpm_resume_noirq(pm_message_t);
920:	void dpm_resume_start(pm_message_t);
1855:	int dpm_suspend(pm_message_t);
1634:	int dpm_suspend_end(pm_message_t);
1583:	int dpm_suspend_late(pm_message_t);
1435:	int dpm_suspend_noirq(pm_message_t);
2044:	int dpm_suspend_start(pm_message_t);
1704:	static int __device_suspend(struct device *, pm_message_t, bool);
1499:	static int __device_suspend_late(struct device *, pm_message_t, bool);
1285:	static int __device_suspend_noirq(struct device *, pm_message_t, bool);
1016:	static void async_resume(void *, async_cookie_t);
852:	static void async_resume_early(void *, async_cookie_t);
699:	static void async_resume_noirq(void *, async_cookie_t);
1824:	static void async_suspend(void *, async_cookie_t);
1553:	static void async_suspend_late(void *, async_cookie_t);
1349:	static void async_suspend_noirq(void *, async_cookie_t);
933:	static int device_resume(struct device *, pm_message_t, bool);
817:	static int device_resume_early(struct device *, pm_message_t, bool);
615:	static int device_resume_noirq(struct device *, pm_message_t, bool);
1447:	static void dpm_propagate_wakeup_to_parent(struct device *);
437:	static int dpm_run_callback(pm_callback_t, struct device *, pm_message_t, const char *);
417:	static void dpm_show_time(ktime_t, pm_message_t, int, const char *);
780:	static pm_callback_t dpm_subsys_resume_early_cb(struct device *, pm_message_t, const char **);
569:	static pm_callback_t dpm_subsys_resume_noirq_cb(struct device *, pm_message_t, const char **);
1462:	static pm_callback_t dpm_subsys_suspend_late_cb(struct device *, pm_message_t, const char **);
227:	static void dpm_wait(struct device *, bool);
236:	static int dpm_wait_fn(struct device *, void *);
297:	static void dpm_wait_for_subordinate(struct device *, bool);
247:	static void dpm_wait_for_suppliers(struct device *, bool);
195:	static ktime_t initcall_debug_start(struct device *, void *);
403:	static void pm_dev_dbg(struct device *, pm_message_t, const char *);
410:	static void pm_dev_err(struct device *, pm_message_t, const char *, int);
342:	static pm_callback_t pm_late_early_op(const struct dev_pm_ops *, pm_message_t);
377:	static pm_callback_t pm_noirq_op(const struct dev_pm_ops *, pm_message_t);
308:	static pm_callback_t pm_op(const struct dev_pm_ops *, pm_message_t);
2099:	static bool pm_ops_is_empty(const struct dev_pm_ops *);
64:	static const char *pm_verb(int);

File drivers/base/power/qos.c:
56:	enum pm_qos_flags_status __dev_pm_qos_flags(struct device *, s32);
102:	s32 __dev_pm_qos_read_value(struct device *);
535:	int dev_pm_qos_add_ancestor_request(struct device *, struct dev_pm_qos_request *, enum dev_pm_qos_req_type, s32);
481:	int dev_pm_qos_add_notifier(struct device *, struct notifier_block *);
339:	int dev_pm_qos_add_request(struct device *, struct dev_pm_qos_request *, enum dev_pm_qos_req_type, s32);
224:	void dev_pm_qos_constraints_destroy(struct device *);
678:	int dev_pm_qos_expose_flags(struct device *, s32);
602:	int dev_pm_qos_expose_latency_limit(struct device *, s32);
855:	int dev_pm_qos_expose_latency_tolerance(struct device *);
83:	enum pm_qos_flags_status dev_pm_qos_flags(struct device *, s32);
790:	s32 dev_pm_qos_get_user_latency_tolerance(struct device *);
737:	void dev_pm_qos_hide_flags(struct device *);
659:	void dev_pm_qos_hide_latency_limit(struct device *);
874:	void dev_pm_qos_hide_latency_tolerance(struct device *);
113:	s32 dev_pm_qos_read_value(struct device *);
511:	int dev_pm_qos_remove_notifier(struct device *, struct notifier_block *);
457:	int dev_pm_qos_remove_request(struct dev_pm_qos_request *);
759:	int dev_pm_qos_update_flags(struct device *, s32, bool);
410:	int dev_pm_qos_update_request(struct dev_pm_qos_request *, s32);
808:	int dev_pm_qos_update_user_latency_tolerance(struct device *, s32);
290:	static int __dev_pm_qos_add_request(struct device *, struct dev_pm_qos_request *, enum dev_pm_qos_req_type, s32);
727:	static void __dev_pm_qos_hide_flags(struct device *);
649:	static void __dev_pm_qos_hide_latency_limit(struct device *);
421:	static int __dev_pm_qos_remove_request(struct dev_pm_qos_request *);
356:	static int __dev_pm_qos_update_request(struct dev_pm_qos_request *, s32);
134:	static int apply_constraint(struct dev_pm_qos_request *, enum pm_qos_req_action, s32);
174:	static int dev_pm_qos_constraints_allocate(struct device *);

File drivers/base/power/runtime.c:
1243:	void __pm_runtime_disable(struct device *, bool);
963:	int __pm_runtime_idle(struct device *, int);
1026:	int __pm_runtime_resume(struct device *, int);
1086:	int __pm_runtime_set_status(struct device *, unsigned int);
995:	int __pm_runtime_suspend(struct device *, int);
1454:	void __pm_runtime_use_autosuspend(struct device *, bool);
1333:	void pm_runtime_allow(struct device *);
127:	unsigned long pm_runtime_autosuspend_expiration(struct device *);
1207:	int pm_runtime_barrier(struct device *);
1543:	void pm_runtime_clean_up_links(struct device *);
1616:	void pm_runtime_drop_link(struct device *);
1282:	void pm_runtime_enable(struct device *);
1312:	void pm_runtime_forbid(struct device *);
1694:	int pm_runtime_force_resume(struct device *);
1648:	int pm_runtime_force_suspend(struct device *);
1055:	int pm_runtime_get_if_in_use(struct device *);
1565:	void pm_runtime_get_suppliers(struct device *);
1471:	void pm_runtime_init(struct device *);
1377:	void pm_runtime_irq_safe(struct device *);
1609:	void pm_runtime_new_link(struct device *);
1356:	void pm_runtime_no_callbacks(struct device *);
1586:	void pm_runtime_put_suppliers(struct device *);
1501:	void pm_runtime_reinit(struct device *);
1520:	void pm_runtime_remove(struct device *);
1433:	void pm_runtime_set_autosuspend_delay(struct device *, int);
195:	void pm_runtime_set_memalloc_noio(struct device *, bool);
920:	int pm_schedule_suspend(struct device *, unsigned int);
65:	void update_pm_runtime_accounting(struct device *);
1156:	static void __pm_runtime_barrier(struct device *);
304:	static int __rpm_callback(int (*)(struct device *), struct device *);
21:	static pm_callback_t __rpm_get_callback(struct device *, size_t);
162:	static int dev_memalloc_noio(struct device *, void *);
855:	static void pm_runtime_work(struct work_struct *);
896:	static void pm_suspend_timer_fn(struct timer_list *);
440:	static int rpm_callback(int (*)(struct device *), struct device *);
236:	static int rpm_check_suspend_allowed(struct device *);
375:	static int rpm_idle(struct device *, int);
673:	static int rpm_resume(struct device *, int);
491:	static int rpm_suspend(struct device *, int);
1398:	static void update_autosuspend(struct device *, int, int);

File drivers/base/power/sysfs.c:
647:	int dpm_sysfs_add(struct device *);
728:	void dpm_sysfs_remove(struct device *);
702:	int pm_qos_sysfs_add_flags(struct device *);
712:	int pm_qos_sysfs_add_latency_tolerance(struct device *);
692:	int pm_qos_sysfs_add_resume_latency(struct device *);
707:	void pm_qos_sysfs_remove_flags(struct device *);
718:	void pm_qos_sysfs_remove_latency_tolerance(struct device *);
697:	void pm_qos_sysfs_remove_resume_latency(struct device *);
723:	void rpm_sysfs_remove(struct device *);
682:	int wakeup_sysfs_add(struct device *);
687:	void wakeup_sysfs_remove(struct device *);
183:	static ssize_t autosuspend_delay_ms_show(struct device *, struct device_attribute *, char *);
191:	static ssize_t autosuspend_delay_ms_store(struct device *, struct device_attribute *, const char *, size_t);
101:	static ssize_t control_show(struct device *, struct device_attribute *, char *);
108:	static ssize_t control_store(struct device *, struct device_attribute *, const char *, size_t);
254:	static ssize_t pm_qos_latency_tolerance_us_show(struct device *, struct device_attribute *, char *);
268:	static ssize_t pm_qos_latency_tolerance_us_store(struct device *, struct device_attribute *, const char *, size_t);
293:	static ssize_t pm_qos_no_power_off_show(struct device *, struct device_attribute *, char *);
301:	static ssize_t pm_qos_no_power_off_store(struct device *, struct device_attribute *, const char *, size_t);
210:	static ssize_t pm_qos_resume_latency_us_show(struct device *, struct device_attribute *, char *);
224:	static ssize_t pm_qos_resume_latency_us_store(struct device *, struct device_attribute *, const char *, size_t);
124:	static ssize_t runtime_active_time_show(struct device *, struct device_attribute *, char *);
151:	static ssize_t runtime_status_show(struct device *, struct device_attribute *, char *);
137:	static ssize_t runtime_suspended_time_show(struct device *, struct device_attribute *, char *);
383:	static ssize_t wakeup_abort_count_show(struct device *, struct device_attribute *, char *);
365:	static ssize_t wakeup_active_count_show(struct device *, struct device_attribute *, char *);
419:	static ssize_t wakeup_active_show(char *, struct device_attribute *, struct device *);
348:	static ssize_t wakeup_count_show(struct device *, struct device_attribute *, char *);
401:	static ssize_t wakeup_expire_count_show(struct device *, struct device_attribute *, char *);
471:	static ssize_t wakeup_last_time_ms_show(struct device *, struct device_attribute *, char *);
454:	static ssize_t wakeup_max_time_ms_show(struct device *, struct device_attribute *, char *);
323:	static ssize_t wakeup_show(struct device *, struct device_attribute *, char *);
331:	static ssize_t wakeup_store(struct device *, struct device_attribute *, const char *, size_t);
436:	static ssize_t wakeup_total_time_ms_show(struct device *, struct device_attribute *, char *);

File drivers/base/power/wakeirq.c:
327:	void dev_pm_arm_wake_irq(struct wake_irq *);
98:	void dev_pm_clear_wake_irq(struct device *);
258:	void dev_pm_disable_wake_irq(struct device *);
309:	void dev_pm_disable_wake_irq_check(struct device *);
348:	void dev_pm_disarm_wake_irq(struct wake_irq *);
241:	void dev_pm_enable_wake_irq(struct device *);
281:	void dev_pm_enable_wake_irq_check(struct device *, bool);
176:	int dev_pm_set_dedicated_wake_irq(struct device *, int);
64:	int dev_pm_set_wake_irq(struct device *, int);
32:	static int dev_pm_attach_wake_irq(struct device *, struct wake_irq *, int);
138:	static irqreturn_t handle_threaded_wake_irq(int, void *);

File drivers/base/power/wakeup.c:
690:	void __pm_relax(struct wakeup_source *);
573:	void __pm_stay_awake(struct wakeup_source *);
450:	int device_init_wakeup(struct device *, bool);
420:	void device_set_wakeup_capable(struct device *, bool);
473:	int device_set_wakeup_enable(struct device *, bool);
344:	void device_wakeup_arm_wake_irqs(void);
307:	void device_wakeup_attach_irq(struct device *, struct wake_irq *);
330:	void device_wakeup_detach_irq(struct device *);
395:	int device_wakeup_disable(struct device *);
360:	void device_wakeup_disarm_wake_irqs(void);
273:	int device_wakeup_enable(struct device *);
908:	bool pm_get_wakeup_count(unsigned int *, bool);
812:	void pm_print_active_wakeup_sources(void);
710:	void pm_relax(struct device *);
942:	bool pm_save_wakeup_count(unsigned int);
601:	void pm_stay_awake(struct device *);
876:	void pm_system_cancel_wakeup(void);
888:	void pm_system_irq_wakeup(unsigned int);
869:	void pm_system_wakeup(void);
881:	void pm_wakeup_clear(bool);
799:	void pm_wakeup_dev_event(struct device *, unsigned int, bool);
846:	bool pm_wakeup_pending(void);
760:	void pm_wakeup_ws_event(struct wakeup_source *, unsigned int, bool);
175:	void wakeup_source_add(struct wakeup_source *);
96:	struct wakeup_source *wakeup_source_create(const char *);
159:	void wakeup_source_destroy(struct wakeup_source *);
116:	void wakeup_source_drop(struct wakeup_source *);
83:	void wakeup_source_prepare(struct wakeup_source *, const char *);
221:	struct wakeup_source *wakeup_source_register(const char *);
196:	void wakeup_source_remove(struct wakeup_source *);
237:	void wakeup_source_unregister(struct wakeup_source *);
731:	static void pm_wakeup_timer_fn(struct timer_list *);
633:	static void wakeup_source_deactivate(struct wakeup_source *);
553:	static void wakeup_source_report_event(struct wakeup_source *, bool);
1116:	static int wakeup_sources_debugfs_init(void);
1103:	static int wakeup_sources_stats_open(struct inode *, struct file *);
1059:	static void *wakeup_sources_stats_seq_next(struct seq_file *, void *, loff_t *);
1087:	static int wakeup_sources_stats_seq_show(struct seq_file *, void *);
1037:	static void *wakeup_sources_stats_seq_start(struct seq_file *, loff_t *);
1075:	static void wakeup_sources_stats_seq_stop(struct seq_file *, void *);

File drivers/base/property.c:
251:	struct fwnode_handle *dev_fwnode(struct device *);
991:	int device_add_properties(struct device *, const struct property_entry *);
1185:	bool device_dma_supported(struct device *);
1173:	unsigned int device_get_child_node_count(struct device *);
1198:	enum dev_dma_attr device_get_dma_attr(struct device *);
1312:	void *device_get_mac_address(struct device *, char *, int);
1481:	const void *device_get_match_data(struct device *);
1123:	struct fwnode_handle *device_get_named_child_node(struct device *, const char *);
1090:	struct fwnode_handle *device_get_next_child_node(struct device *, struct fwnode_handle *);
1250:	int device_get_phy_mode(struct device *);
497:	int device_property_match_string(struct device *, const char *, const char *);
310:	bool device_property_present(struct device *, const char *);
475:	int device_property_read_string(struct device *, const char *, const char **);
453:	int device_property_read_string_array(struct device *, const char *, const char **, size_t);
378:	int device_property_read_u16_array(struct device *, const char *, u16 *, size_t);
403:	int device_property_read_u32_array(struct device *, const char *, u32 *, size_t);
428:	int device_property_read_u64_array(struct device *, const char *, u64 *, size_t);
353:	int device_property_read_u8_array(struct device *, const char *, u8 *, size_t);
956:	void device_remove_properties(struct device *);
1163:	bool fwnode_device_is_available(const struct fwnode_handle *);
1290:	void *fwnode_get_mac_address(struct fwnode_handle *, char *, int);
1111:	struct fwnode_handle *fwnode_get_named_child_node(const struct fwnode_handle *, const char *);
1066:	struct fwnode_handle *fwnode_get_next_available_child_node(const struct fwnode_handle *, struct fwnode_handle *);
1052:	struct fwnode_handle *fwnode_get_next_child_node(const struct fwnode_handle *, struct fwnode_handle *);
1023:	struct fwnode_handle *fwnode_get_next_parent(struct fwnode_handle *);
1040:	struct fwnode_handle *fwnode_get_parent(const struct fwnode_handle *);
1222:	int fwnode_get_phy_mode(struct fwnode_handle *);
1352:	struct fwnode_handle *fwnode_graph_get_next_endpoint(const struct fwnode_handle *, struct fwnode_handle *);
1366:	struct fwnode_handle *fwnode_graph_get_port_parent(const struct fwnode_handle *);
1419:	struct fwnode_handle *fwnode_graph_get_remote_endpoint(const struct fwnode_handle *);
1435:	struct fwnode_handle *fwnode_graph_get_remote_node(const struct fwnode_handle *, u32, u32);
1406:	struct fwnode_handle *fwnode_graph_get_remote_port(const struct fwnode_handle *);
1386:	struct fwnode_handle *fwnode_graph_get_remote_port_parent(const struct fwnode_handle *);
1472:	int fwnode_graph_parse_endpoint(const struct fwnode_handle *, struct fwnode_endpoint *);
1136:	struct fwnode_handle *fwnode_handle_get(struct fwnode_handle *);
1153:	void fwnode_handle_put(struct fwnode_handle *);
1326:	int fwnode_irq_get(struct fwnode_handle *, unsigned int);
752:	int fwnode_property_get_reference_args(const struct fwnode_handle *, const char *, const char *, unsigned int, unsigned int, struct fwnode_reference_args *);
700:	int fwnode_property_match_string(const struct fwnode_handle *, const char *, const char *);
321:	bool fwnode_property_present(const struct fwnode_handle *, const char *);
676:	int fwnode_property_read_string(const struct fwnode_handle *, const char *, const char **);
644:	int fwnode_property_read_string_array(const struct fwnode_handle *, const char *, const char **, size_t);
566:	int fwnode_property_read_u16_array(const struct fwnode_handle *, const char *, u16 *, size_t);
592:	int fwnode_property_read_u32_array(const struct fwnode_handle *, const char *, u32 *, size_t);
618:	int fwnode_property_read_u64_array(const struct fwnode_handle *, const char *, u64 *, size_t);
540:	int fwnode_property_read_u8_array(const struct fwnode_handle *, const char *, u8 *, size_t);
859:	struct property_entry *property_entries_dup(const struct property_entry *);
892:	void property_entries_free(const struct property_entry *);
1256:	static void *fwnode_get_mac_addr(struct fwnode_handle *, const char *, char *, int);
504:	static int fwnode_property_read_int_array(const struct fwnode_handle *, const char *, unsigned int, void *, size_t);
762:	static void property_entry_free_data(const struct property_entry *);
59:	static const void *property_get_pointer(const struct property_entry *);
258:	static bool pset_fwnode_property_present(const struct fwnode_handle *, const char *);
289:	static int pset_fwnode_property_read_string_array(const struct fwnode_handle *, const char *, const char **, size_t);
264:	static int pset_fwnode_read_int_array(const struct fwnode_handle *, const char *, unsigned int, void *, size_t);
125:	static const void *pset_prop_find(const struct property_set *, const char *, size_t);
45:	static const struct property_entry *pset_prop_get(const struct property_set *, const char *);

File drivers/base/regmap/./trace.h:
118:	static void __bpf_trace_regcache_sync(void *, struct regmap *, const char *, const char *);
178:	static void __bpf_trace_regmap_async(void *, struct regmap *);
67:	static void __bpf_trace_regmap_block(void *, struct regmap *, unsigned int, int);
142:	static void __bpf_trace_regmap_bool(void *, struct regmap *, bool);
16:	static void __bpf_trace_regmap_reg(void *, struct regmap *, unsigned int, unsigned int);
226:	static void perf_trace_regcache_drop_region(void *, struct regmap *, unsigned int, unsigned int);
118:	static void perf_trace_regcache_sync(void *, struct regmap *, const char *, const char *);
178:	static void perf_trace_regmap_async(void *, struct regmap *);
67:	static void perf_trace_regmap_block(void *, struct regmap *, unsigned int, int);
142:	static void perf_trace_regmap_bool(void *, struct regmap *, bool);
16:	static void perf_trace_regmap_reg(void *, struct regmap *, unsigned int, unsigned int);
226:	static int trace_event_define_fields_regcache_drop_region(struct trace_event_call *);
118:	static int trace_event_define_fields_regcache_sync(struct trace_event_call *);
178:	static int trace_event_define_fields_regmap_async(struct trace_event_call *);
67:	static int trace_event_define_fields_regmap_block(struct trace_event_call *);
142:	static int trace_event_define_fields_regmap_bool(struct trace_event_call *);
16:	static int trace_event_define_fields_regmap_reg(struct trace_event_call *);
226:	static void trace_event_raw_event_regcache_drop_region(void *, struct regmap *, unsigned int, unsigned int);
118:	static void trace_event_raw_event_regcache_sync(void *, struct regmap *, const char *, const char *);
178:	static void trace_event_raw_event_regmap_async(void *, struct regmap *);
67:	static void trace_event_raw_event_regmap_block(void *, struct regmap *, unsigned int, int);
142:	static void trace_event_raw_event_regmap_bool(void *, struct regmap *, bool);
16:	static void trace_event_raw_event_regmap_reg(void *, struct regmap *, unsigned int, unsigned int);
226:	static enum print_line_t trace_raw_output_regcache_drop_region(struct trace_iterator *, int, struct trace_event *);
118:	static enum print_line_t trace_raw_output_regcache_sync(struct trace_iterator *, int, struct trace_event *);
178:	static enum print_line_t trace_raw_output_regmap_async(struct trace_iterator *, int, struct trace_event *);
67:	static enum print_line_t trace_raw_output_regmap_block(struct trace_iterator *, int, struct trace_event *);
142:	static enum print_line_t trace_raw_output_regmap_bool(struct trace_iterator *, int, struct trace_event *);
16:	static enum print_line_t trace_raw_output_regmap_reg(struct trace_iterator *, int, struct trace_event *);

File drivers/base/regmap/regcache-flat.c:
50:	static int regcache_flat_exit(struct regmap *);
25:	static int regcache_flat_init(struct regmap *);
58:	static int regcache_flat_read(struct regmap *, unsigned int, unsigned int *);
69:	static int regcache_flat_write(struct regmap *, unsigned int, unsigned int);

File drivers/base/regmap/regcache-rbtree.c:
192:	static void rbtree_debugfs_init(struct regmap *);
180:	static int rbtree_open(struct inode *, struct file *);
136:	static int rbtree_show(struct seq_file *, void *);
520:	static int regcache_rbtree_drop(struct regmap *, unsigned int, unsigned int);
227:	static int regcache_rbtree_exit(struct regmap *);
198:	static int regcache_rbtree_init(struct regmap *);
66:	static struct regcache_rbtree_node *regcache_rbtree_lookup(struct regmap *, unsigned int);
256:	static int regcache_rbtree_read(struct regmap *, unsigned int, unsigned int *);
58:	static void regcache_rbtree_set_register(struct regmap *, struct regcache_rbtree_node *, unsigned int, unsigned int);
479:	static int regcache_rbtree_sync(struct regmap *, unsigned int, unsigned int);
383:	static int regcache_rbtree_write(struct regmap *, unsigned int, unsigned int);

File drivers/base/regmap/regcache.c:
542:	void regcache_cache_bypass(struct regmap *, bool);
499:	void regcache_cache_only(struct regmap *, bool);
467:	int regcache_drop_region(struct regmap *, unsigned int, unsigned int);
210:	void regcache_exit(struct regmap *);
598:	unsigned int regcache_get_val(struct regmap *, const void *, unsigned int);
119:	int regcache_init(struct regmap *, const struct regmap_config *);
647:	int regcache_lookup_reg(struct regmap *, unsigned int);
522:	void regcache_mark_dirty(struct regmap *);
237:	int regcache_read(struct regmap *, unsigned int, unsigned int *);
552:	bool regcache_set_val(struct regmap *, void *, unsigned int, unsigned int);
343:	int regcache_sync(struct regmap *);
778:	int regcache_sync_block(struct regmap *, void *, unsigned long *, unsigned int, unsigned int, unsigned int);
412:	int regcache_sync_region(struct regmap *, unsigned int, unsigned int);
268:	int regcache_write(struct regmap *, unsigned int, unsigned int);
639:	static int regcache_default_cmp(const void *, const void *);
298:	static int regcache_default_sync(struct regmap *, unsigned int, unsigned int);
282:	static bool regcache_reg_needs_sync(struct regmap *, unsigned int, unsigned int);
708:	static int regcache_sync_block_raw_flush(struct regmap *, const void **, unsigned int, unsigned int);

File drivers/base/regmap/regmap-debugfs.c:
643:	void regmap_debugfs_exit(struct regmap *);
531:	void regmap_debugfs_init(struct regmap *, const char *);
666:	void regmap_debugfs_initcall(void);
438:	static int access_open(struct inode *, struct file *);
415:	static int regmap_access_show(struct seq_file *, void *);
495:	static ssize_t regmap_cache_bypass_write_file(struct file *, const char *, size_t, loff_t *);
450:	static ssize_t regmap_cache_only_write_file(struct file *, const char *, size_t, loff_t *);
72:	static void regmap_debugfs_free_dump_cache(struct regmap *);
100:	static unsigned int regmap_debugfs_get_dump_start(struct regmap *, loff_t, loff_t *, unsigned int);
268:	static ssize_t regmap_map_read_file(struct file *, char *, size_t, loff_t *);
39:	static ssize_t regmap_name_read_file(struct file *, char *, size_t, loff_t *);
328:	static ssize_t regmap_range_read_file(struct file *, char *, size_t, loff_t *);
198:	static ssize_t regmap_read_debugfs(struct regmap *, unsigned int, unsigned int, char *, size_t, loff_t *);
344:	static ssize_t regmap_reg_ranges_read_file(struct file *, char *, size_t, loff_t *);

File drivers/base/regmap/regmap-i2c.c:
296:	struct regmap *__devm_regmap_init_i2c(struct i2c_client *, const struct regmap_config *, struct lock_class_key *, const char *);
281:	struct regmap *__regmap_init_i2c(struct i2c_client *, const struct regmap_config *, struct lock_class_key *, const char *);
253:	static const struct regmap_bus *regmap_get_i2c_bus(struct i2c_client *, const struct regmap_config *);
142:	static int regmap_i2c_gather_write(void *, const void *, size_t, const void *, size_t);
176:	static int regmap_i2c_read(void *, const void *, size_t, void *, size_t);
226:	static int regmap_i2c_smbus_i2c_read(void *, const void *, size_t, void *, size_t);
212:	static int regmap_i2c_smbus_i2c_write(void *, const void *, size_t);
127:	static int regmap_i2c_write(void *, const void *, size_t);
19:	static int regmap_smbus_byte_reg_read(void *, unsigned int, unsigned int *);
38:	static int regmap_smbus_byte_reg_write(void *, unsigned int, unsigned int);
91:	static int regmap_smbus_word_read_swapped(void *, unsigned int, unsigned int *);
55:	static int regmap_smbus_word_reg_read(void *, unsigned int, unsigned int *);
74:	static int regmap_smbus_word_reg_write(void *, unsigned int, unsigned int);
110:	static int regmap_smbus_word_write_swapped(void *, unsigned int, unsigned int);

File drivers/base/regmap/regmap-spi.c:
126:	struct regmap *__devm_regmap_init_spi(struct spi_device *, const struct regmap_config *, struct lock_class_key *, const char *);
116:	struct regmap *__regmap_init_spi(struct spi_device *, const struct regmap_config *, struct lock_class_key *, const char *);
84:	static struct regmap_async *regmap_spi_async_alloc(void);
57:	static int regmap_spi_async_write(void *, const void *, size_t, const void *, size_t, struct regmap_async *);
25:	static void regmap_spi_complete(void *);
40:	static int regmap_spi_gather_write(void *, const void *, size_t, const void *, size_t);
95:	static int regmap_spi_read(void *, const void *, size_t, void *, size_t);
32:	static int regmap_spi_write(void *, const void *, size_t);

File drivers/base/regmap/regmap.c:
1160:	struct regmap *__devm_regmap_init(struct device *, const struct regmap_bus *, void *, const struct regmap_config *, struct lock_class_key *, const char *);
665:	struct regmap *__regmap_init(struct device *, const struct regmap_bus *, void *, const struct regmap_config *, struct lock_class_key *, const char *);
1828:	int _regmap_raw_write(struct regmap *, unsigned int, const void *, size_t);
1741:	int _regmap_write(struct regmap *, unsigned int, unsigned int);
1370:	struct regmap *dev_get_regmap(struct device *, const char *);
1208:	struct regmap_field *devm_regmap_field_alloc(struct device *, struct regmap *, struct reg_field);
1234:	void devm_regmap_field_free(struct device *, struct regmap_field *);
2895:	int regmap_async_complete(struct regmap *);
2854:	void regmap_async_complete_cb(struct regmap_async *, int);
575:	int regmap_attach_dev(struct device *, struct regmap *, const struct regmap_config *);
2714:	int regmap_bulk_read(struct regmap *, unsigned int, void *, size_t);
1976:	int regmap_bulk_write(struct regmap *, unsigned int, const void *, size_t);
97:	bool regmap_cached(struct regmap *, unsigned int);
1655:	bool regmap_can_raw_write(struct regmap *);
67:	bool regmap_check_range_table(struct regmap *, unsigned int, const struct regmap_access_table *);
1318:	void regmap_exit(struct regmap *);
1251:	struct regmap_field *regmap_field_alloc(struct regmap *, struct reg_field);
1271:	void regmap_field_free(struct regmap_field *);
2654:	int regmap_field_read(struct regmap_field *, unsigned int *);
1919:	int regmap_field_update_bits_base(struct regmap_field *, unsigned int, unsigned int, bool *, bool, bool);
2680:	int regmap_fields_read(struct regmap_field *, unsigned int, unsigned int *);
1946:	int regmap_fields_update_bits_base(struct regmap_field *, unsigned int, unsigned int, unsigned int, bool *, bool, bool);
1388:	struct device *regmap_get_device(struct regmap *);
3003:	int regmap_get_max_register(struct regmap *);
1667:	size_t regmap_get_raw_read_max(struct regmap *);
1678:	size_t regmap_get_raw_write_max(struct regmap *);
3017:	int regmap_get_reg_stride(struct regmap *);
2986:	int regmap_get_val_bytes(struct regmap *);
621:	enum regmap_endian regmap_get_val_endian(struct device *, const struct regmap_bus *, const struct regmap_config *);
2275:	int regmap_multi_reg_write(struct regmap *, const struct reg_sequence *, int);
2308:	int regmap_multi_reg_write_bypassed(struct regmap *, const struct reg_sequence *, int);
2603:	int regmap_noinc_read(struct regmap *, unsigned int, void *, size_t);
3023:	int regmap_parse_val(struct regmap *, const void *, unsigned int *);
157:	bool regmap_precious(struct regmap *, unsigned int);
2507:	int regmap_raw_read(struct regmap *, unsigned int, void *, size_t);
1882:	int regmap_raw_write(struct regmap *, unsigned int, const void *, size_t);
2352:	int regmap_raw_write_async(struct regmap *, unsigned int, const void *, size_t);
2479:	int regmap_read(struct regmap *, unsigned int, unsigned int *);
120:	bool regmap_readable(struct regmap *, unsigned int);
171:	bool regmap_readable_noinc(struct regmap *, unsigned int);
53:	bool regmap_reg_in_ranges(unsigned int, const struct regmap_range *, unsigned int);
2936:	int regmap_register_patch(struct regmap *, const struct reg_sequence *, int);
1291:	int regmap_reinit_cache(struct regmap *, const struct regmap_config *);
2834:	int regmap_update_bits_base(struct regmap *, unsigned int, unsigned int, unsigned int, bool *, bool, bool);
140:	bool regmap_volatile(struct regmap *, unsigned int);
1780:	int regmap_write(struct regmap *, unsigned int, unsigned int);
1807:	int regmap_write_async(struct regmap *, unsigned int, unsigned int);
83:	bool regmap_writeable(struct regmap *, unsigned int);
1684:	static int _regmap_bus_formatted_write(void *, unsigned int, unsigned int);
1720:	static int _regmap_bus_raw_write(void *, unsigned int, unsigned int);
2417:	static int _regmap_bus_read(void *, unsigned int, unsigned int *);
2409:	static int _regmap_bus_reg_read(void *, unsigned int, unsigned int *);
1712:	static int _regmap_bus_reg_write(void *, unsigned int, unsigned int);
2181:	static int _regmap_multi_reg_write(struct regmap *, const struct reg_sequence *, size_t);
2047:	static int _regmap_raw_multi_reg_write(struct regmap *, const struct reg_sequence *, size_t);
2376:	static int _regmap_raw_read(struct regmap *, unsigned int, void *, unsigned int);
1457:	static int _regmap_raw_write_impl(struct regmap *, unsigned int, const void *, size_t);
2435:	static int _regmap_read(struct regmap *, unsigned int, unsigned int *);
1394:	static int _regmap_select_page(struct regmap *, unsigned int *, struct regmap_range_node *, unsigned int);
2780:	static int _regmap_update_bits(struct regmap *, unsigned int, unsigned int, unsigned int, bool *, bool);
1343:	static int dev_get_regmap_match(struct device *, void *, void *);
505:	static void dev_get_regmap_release(struct device *, void *);
1155:	static void devm_regmap_release(struct device *, void *);
216:	static void regmap_format_10_14_write(struct regmap *, unsigned int, unsigned int);
233:	static void regmap_format_16_be(void *, unsigned int, unsigned int);
240:	static void regmap_format_16_le(void *, unsigned int, unsigned int);
253:	static void regmap_format_24(void *, unsigned int, unsigned int);
194:	static void regmap_format_2_6_write(struct regmap *, unsigned int, unsigned int);
264:	static void regmap_format_32_be(void *, unsigned int, unsigned int);
271:	static void regmap_format_32_le(void *, unsigned int, unsigned int);
202:	static void regmap_format_4_12_write(struct regmap *, unsigned int, unsigned int);
285:	static void regmap_format_64_be(void *, unsigned int, unsigned int);
292:	static void regmap_format_64_le(void *, unsigned int, unsigned int);
209:	static void regmap_format_7_9_write(struct regmap *, unsigned int, unsigned int);
226:	static void regmap_format_8(void *, unsigned int, unsigned int);
3035:	static int regmap_initcall(void);
428:	static void regmap_lock_hwlock(void *);
435:	static void regmap_lock_hwlock_irq(void *);
442:	static void regmap_lock_hwlock_irqsave(void *);
476:	static void regmap_lock_mutex(void *);
488:	static void regmap_lock_spinlock(void *);
317:	static unsigned int regmap_parse_16_be(const void *);
331:	static void regmap_parse_16_be_inplace(void *);
324:	static unsigned int regmap_parse_16_le(const void *);
350:	static unsigned int regmap_parse_24(const void *);
360:	static unsigned int regmap_parse_32_be(const void *);
374:	static void regmap_parse_32_be_inplace(void *);
367:	static unsigned int regmap_parse_32_le(const void *);
394:	static unsigned int regmap_parse_64_be(const void *);
408:	static void regmap_parse_64_be_inplace(void *);
401:	static unsigned int regmap_parse_64_le(const void *);
310:	static unsigned int regmap_parse_8(const void *);
306:	static void regmap_parse_inplace_noop(void *);
559:	static void regmap_range_exit(struct regmap *);
1442:	static void regmap_set_work_buf_flag_mask(int, unsigned long, struct regmap *);
450:	static void regmap_unlock_hwlock(void *);
457:	static void regmap_unlock_hwlock_irq(void *);
464:	static void regmap_unlock_hwlock_irqrestore(void *);
482:	static void regmap_unlock_mutex(void *);
498:	static void regmap_unlock_spinlock(void *);
182:	static bool regmap_volatile_range(struct regmap *, unsigned int, size_t);

File drivers/base/syscore.c:
21:	void register_syscore_ops(struct syscore_ops *);
92:	void syscore_resume(void);
116:	void syscore_shutdown(void);
47:	int syscore_suspend(void);
33:	void unregister_syscore_ops(struct syscore_ops *);

File drivers/base/topology.c:
49:	static ssize_t core_id_show(struct device *, struct device_attribute *, char *);
56:	static ssize_t core_siblings_list_show(struct device *, struct device_attribute *, char *);
56:	static ssize_t core_siblings_show(struct device *, struct device_attribute *, char *);
46:	static ssize_t die_id_show(struct device *, struct device_attribute *, char *);
43:	static ssize_t physical_package_id_show(struct device *, struct device_attribute *, char *);
52:	static ssize_t thread_siblings_list_show(struct device *, struct device_attribute *, char *);
52:	static ssize_t thread_siblings_show(struct device *, struct device_attribute *, char *);
103:	static int topology_add_dev(unsigned int);
110:	static int topology_remove_dev(unsigned int);
118:	static int topology_sysfs_init(void);

File drivers/base/transport_class.c:
87:	int anon_transport_class_register(struct anon_transport_class *);
109:	void anon_transport_class_unregister(struct anon_transport_class *);
176:	void transport_add_device(struct device *);
47:	int transport_class_register(struct transport_class *);
61:	void transport_class_unregister(struct transport_class *);
207:	void transport_configure_device(struct device *);
275:	void transport_destroy_device(struct device *);
246:	void transport_remove_device(struct device *);
144:	void transport_setup_device(struct device *);
67:	static int anon_transport_dummy_function(struct transport_container *, struct device *, struct device *);
150:	static int transport_add_class_device(struct attribute_container *, struct device *, struct device *);
182:	static int transport_configure(struct attribute_container *, struct device *, struct device *);
252:	static void transport_destroy_classdev(struct attribute_container *, struct device *, struct device *);
213:	static int transport_remove_classdev(struct attribute_container *, struct device *, struct device *);
116:	static int transport_setup_classdev(struct attribute_container *, struct device *, struct device *);

File drivers/char/hpet.c:
838:	int hpet_alloc(struct hpet_data *);
1019:	static int hpet_acpi_add(struct acpi_device *);
693:	static long hpet_compat_ioctl(struct file *, unsigned int, unsigned long);
406:	static int hpet_fasync(int, struct file *, int);
1058:	static int hpet_init(void);
142:	static irqreturn_t hpet_interrupt(int, void *);
668:	static long hpet_ioctl(struct file *, unsigned int, unsigned long);
577:	static int hpet_ioctl_common(struct hpet_dev *, unsigned int, unsigned long, struct hpet_info *);
382:	static int hpet_mmap(struct file *, struct vm_area_struct *);
374:	static int hpet_mmap_enable(char *);
260:	static int hpet_open(struct inode *, struct file *);
345:	static __poll_t hpet_poll(struct file *, poll_table *);
299:	static ssize_t hpet_read(struct file *, char *, size_t, loff_t *);
418:	static int hpet_release(struct inode *, struct file *);
965:	static acpi_status hpet_resources(struct acpi_resource *, void *);

File drivers/char/hw_random/core.c:
558:	int devm_hwrng_register(struct device *, struct hwrng *);
579:	void devm_hwrng_unregister(struct device *, struct hwrng *);
457:	int hwrng_register(struct hwrng *);
517:	void hwrng_unregister(struct hwrng *);
64:	static void add_early_randomness(struct hwrng *);
548:	static int devm_hwrng_match(struct device *, void *, void *);
543:	static void devm_hwrng_release(struct device *, void *);
102:	static void drop_current_rng(void);
295:	static int enable_best_rng(void);
114:	static struct hwrng *get_current_rng(void);
363:	static ssize_t hwrng_attr_available_show(struct device *, struct device_attribute *, char *);
346:	static ssize_t hwrng_attr_current_show(struct device *, struct device_attribute *, char *);
318:	static ssize_t hwrng_attr_current_store(struct device *, struct device_attribute *, const char *, size_t);
384:	static ssize_t hwrng_attr_selected_show(struct device *, struct device_attribute *, char *);
420:	static int hwrng_fillfn(void *);
609:	static void hwrng_modexit(void);
585:	static int hwrng_modinit(void);
129:	static void put_rng(struct hwrng *);
172:	static int rng_dev_open(struct inode *, struct file *);
201:	static ssize_t rng_dev_read(struct file *, char *, size_t, loff_t *);
86:	static int set_current_rng(struct hwrng *);
410:	static void unregister_miscdev(void);

File drivers/char/hw_random/virtio-rng.c:
100:	static int probe_common(struct virtio_device *);
42:	static void random_recv_done(struct virtqueue *);
142:	static void remove_common(struct virtio_device *);
92:	static void virtio_cleanup(struct hwrng *);
66:	static int virtio_read(struct hwrng *, void *, size_t, bool);
228:	static void virtio_rng_driver_exit(void);
228:	static int virtio_rng_driver_init(void);
179:	static int virtrng_freeze(struct virtio_device *);
158:	static int virtrng_probe(struct virtio_device *);
163:	static void virtrng_remove(struct virtio_device *);
185:	static int virtrng_restore(struct virtio_device *);
168:	static void virtrng_scan(struct virtio_device *);

File drivers/char/ipmi/ipmi_dmi.c:
171:	int ipmi_dmi_get_slave_addr(enum si_type, u32, unsigned long);
32:	static void dmi_add_platform_ipmi(unsigned long, u32, u8, int, int, int);
286:	static int scan_for_dmi_ipmi(void);

File drivers/char/mem.c:
271:	int phys_mem_access_prot_allowed(struct file *, unsigned long, unsigned long, pgprot_t *);
939:	static int chr_dev_init(void);
736:	static unsigned long get_unmapped_area_zero(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);
930:	static char *mem_devnode(struct device *, umode_t *);
782:	static loff_t memory_lseek(struct file *, loff_t, int);
903:	static int memory_open(struct inode *, struct file *);
369:	static int mmap_mem(struct file *, struct vm_area_struct *);
725:	static int mmap_zero(struct file *, struct vm_area_struct *);
769:	static loff_t null_lseek(struct file *, loff_t, int);
808:	static int open_port(struct inode *, struct file *);
693:	static int pipe_to_null(struct pipe_inode_info *, struct pipe_buffer *, struct splice_desc *);
681:	static ssize_t read_iter_null(struct kiocb *, struct iov_iter *);
705:	static ssize_t read_iter_zero(struct kiocb *, struct iov_iter *);
111:	static ssize_t read_mem(struct file *, char *, size_t, loff_t *);
669:	static ssize_t read_null(struct file *, char *, size_t, loff_t *);
627:	static ssize_t read_port(struct file *, char *, size_t, loff_t *);
699:	static ssize_t splice_write_null(struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int);
758:	static ssize_t write_full(struct file *, const char *, size_t, loff_t *);
686:	static ssize_t write_iter_null(struct kiocb *, struct iov_iter *);
198:	static ssize_t write_mem(struct file *, const char *, size_t, loff_t *);
675:	static ssize_t write_null(struct file *, const char *, size_t, loff_t *);
645:	static ssize_t write_port(struct file *, const char *, size_t, loff_t *);

File drivers/char/misc.c:
238:	void misc_deregister(struct miscdevice *);
173:	int misc_register(struct miscdevice *);
256:	static char *misc_devnode(struct device *, umode_t *);
267:	static int misc_init(void);
100:	static int misc_open(struct inode *, struct file *);
73:	static void *misc_seq_next(struct seq_file *, void *, loff_t *);
83:	static int misc_seq_show(struct seq_file *, void *);
67:	static void *misc_seq_start(struct seq_file *, loff_t *);
78:	static void misc_seq_stop(struct seq_file *, void *);

File drivers/char/nvram.c:
177:	int __nvram_check_checksum(void);
142:	unsigned char __nvram_read_byte(int);
161:	void __nvram_write_byte(unsigned char, int);
183:	int nvram_check_checksum(void);
148:	unsigned char nvram_read_byte(int);
167:	void nvram_write_byte(unsigned char, int);
445:	static void nvram_cleanup_module(void);
417:	static int nvram_init(void);
289:	static long nvram_ioctl(struct file *, unsigned int, unsigned long);
215:	static loff_t nvram_llseek(struct file *, loff_t, int);
330:	static int nvram_open(struct inode *, struct file *);
377:	static int nvram_proc_read(struct seq_file *, void *);
221:	static ssize_t nvram_read(struct file *, char *, size_t, loff_t *);
352:	static int nvram_release(struct inode *, struct file *);
250:	static ssize_t nvram_write(struct file *, const char *, size_t, loff_t *);
460:	static int pc_check_checksum(void);
473:	static void pc_set_checksum(void);

File drivers/char/random.c:
2055:	long __ia32_sys_getrandom(const struct pt_regs *);
2055:	long __x64_sys_getrandom(const struct pt_regs *);
1109:	void add_device_randomness(const void *, unsigned int);
1308:	void add_disk_randomness(struct gendisk *);
2350:	void add_hwgenerator_randomness(const char *, size_t, size_t);
1186:	void add_input_randomness(unsigned int, unsigned int, unsigned int);
1240:	void add_interrupt_randomness(int, int);
1708:	int add_random_ready_callback(struct random_ready_callback *);
1742:	void del_random_ready_callback(struct random_ready_callback *);
1658:	void get_random_bytes(void *, int);
1770:	int get_random_bytes_arch(void *, int);
2268:	u32 get_random_u32(void);
2244:	u64 get_random_u64(void);
1843:	void rand_initialize_disk(struct gendisk *);
2328:	unsigned long randomize_page(unsigned long, unsigned long);
1694:	bool rng_is_initialized(void);
1677:	int wait_for_random_bytes(void);
567:	static void __mix_pool_bytes(struct entropy_store *, const void *, int);
1018:	static void _crng_backtrack_protect(struct crng_state *, __u8 *, int);
983:	static void _extract_crng(struct crng_state *, __u8 *);
1486:	static ssize_t _extract_entropy(struct entropy_store *, void *, size_t, int);
1637:	static void _get_random_bytes(void *, int);
520:	static void _mix_pool_bytes(struct entropy_store *, const void *, int);
1860:	static ssize_t _random_read(int, char *, size_t);
1605:	static void _warn_unseeded_randomness(const char *, void *, void **);
1341:	static void _xfer_secondary_pool(struct entropy_store *, size_t);
1380:	static size_t account(struct entropy_store *, size_t, int, int);
1137:	static void add_timer_randomness(struct timer_rand_state *, unsigned int);
644:	static void credit_entropy_bits(struct entropy_store *, int);
1038:	static void crng_backtrack_protect(__u8 *, int);
861:	static int crng_fast_load(const char *, size_t);
795:	static void crng_initialize(struct crng_state *);
932:	static void crng_reseed(struct crng_state *, struct entropy_store *);
825:	static void do_numa_crng_init(struct work_struct *);
1432:	static void extract_buf(struct entropy_store *, __u8 *);
1001:	static void extract_crng(__u8 *);
1525:	static ssize_t extract_entropy(struct entropy_store *, void *, size_t, int, int);
1801:	static void init_std_data(struct entropy_store *);
2293:	static void invalidate_batched_entropy(void);
574:	static void mix_pool_bytes(struct entropy_store *, const void *, int);
789:	static int parse_trust_cpu(char *);
2134:	static int proc_do_entropy(struct ctl_table *, int, void *, size_t *, loff_t *);
2104:	static int proc_do_uuid(struct ctl_table *, int, void *, size_t *, loff_t *);
1366:	static void push_to_pool(struct work_struct *);
1828:	static int rand_initialize(void);
2033:	static int random_fasync(int, struct file *, int);
1976:	static long random_ioctl(struct file *, unsigned int, unsigned long);
1920:	static __poll_t random_poll(struct file *, poll_table *);
1891:	static ssize_t random_read(struct file *, char *, size_t, loff_t *);
1964:	static ssize_t random_write(struct file *, const char *, size_t, loff_t *);
1897:	static ssize_t urandom_read(struct file *, char *, size_t, loff_t *);
1935:	static int write_pool(const char *, size_t, struct entropy_store *);
1331:	static void xfer_secondary_pool(struct entropy_store *, size_t);

File drivers/char/raw.c:
187:	static int bind_get(int, dev_t *);
127:	static int bind_set(int, u64, u64);
249:	static long raw_ctl_compat_ioctl(struct file *, unsigned int, unsigned long);
208:	static long raw_ctl_ioctl(struct file *, unsigned int, unsigned long);
308:	static char *raw_devnode(struct device *, umode_t *);
359:	static void raw_exit(void);
313:	static int raw_init(void);
121:	static long raw_ioctl(struct file *, unsigned int, unsigned long);
54:	static int raw_open(struct inode *, struct file *);
101:	static int raw_release(struct inode *, struct file *);

File drivers/char/tpm/eventlog/acpi.c:
50:	int tpm_read_log_acpi(struct tpm_chip *);

File drivers/char/tpm/eventlog/common.c:
108:	void tpm_bios_log_setup(struct tpm_chip *);
171:	void tpm_bios_log_teardown(struct tpm_chip *);
30:	static int tpm_bios_measurements_open(struct inode *, struct file *);
60:	static int tpm_bios_measurements_release(struct inode *, struct file *);

File drivers/char/tpm/eventlog/efi.c:
21:	int tpm_read_log_efi(struct tpm_chip *);

File drivers/char/tpm/eventlog/tpm1.c:
265:	static int tpm1_ascii_bios_measurements_show(struct seq_file *, void *);
236:	static int tpm1_binary_bios_measurements_show(struct seq_file *, void *);
122:	static void *tpm1_bios_measurements_next(struct seq_file *, void *, loff_t *);
75:	static void *tpm1_bios_measurements_start(struct seq_file *, loff_t *);
153:	static void tpm1_bios_measurements_stop(struct seq_file *, void *);

File drivers/char/tpm/eventlog/tpm2.c:
40:	static size_t calc_tpm2_event_size(struct tcg_pcr_event2 *, struct tcg_pcr_event *);
178:	static int tpm2_binary_bios_measurements_show(struct seq_file *, void *);
135:	static void *tpm2_bios_measurements_next(struct seq_file *, void *, loff_t *);
91:	static void *tpm2_bios_measurements_start(struct seq_file *, loff_t *);
174:	static void tpm2_bios_measurements_stop(struct seq_file *, void *);

File drivers/char/tpm/tpm-chip.c:
209:	struct tpm_chip *tpm_chip_alloc(struct device *, const struct tpm_class_ops *);
444:	int tpm_chip_register(struct tpm_chip *);
502:	void tpm_chip_unregister(struct tpm_chip *);
86:	struct tpm_chip *tpm_default_chip(void);
125:	struct tpm_chip *tpm_find_get_ops(struct tpm_chip *);
76:	void tpm_put_ops(struct tpm_chip *);
51:	int tpm_try_get_ops(struct tpm_chip *);
300:	struct tpm_chip *tpmm_chip_alloc(struct device *, const struct tpm_class_ops *);
186:	static int tpm_class_shutdown(struct device *);
371:	static void tpm_del_legacy_sysfs(struct tpm_chip *);
152:	static void tpm_dev_release(struct device *);
166:	static void tpm_devs_release(struct device *);
414:	static int tpm_hwrng_read(struct hwrng *, void *, size_t, bool);

File drivers/char/tpm/tpm-dev-common.c:
45:	void tpm_common_open(struct file *, struct tpm_chip *, struct file_priv *);
56:	ssize_t tpm_common_read(struct file *, char *, size_t, loff_t *);
143:	void tpm_common_release(struct file *, struct file_priv *);
81:	ssize_t tpm_common_write(struct file *, const char *, size_t, loff_t *, struct tpm_space *);
35:	static void timeout_work(struct work_struct *);
25:	static void user_reader_timeout(struct timer_list *);

File drivers/char/tpm/tpm-dev.c:
23:	static int tpm_open(struct inode *, struct file *);
60:	static int tpm_release(struct inode *, struct file *);
51:	static ssize_t tpm_write(struct file *, const char *, size_t, loff_t *);

File drivers/char/tpm/tpm-interface.c:
1154:	int tpm1_auto_startup(struct tpm_chip *);
308:	unsigned long tpm_calc_ordinal_duration(struct tpm_chip *, u32);
1091:	int tpm_do_selftest(struct tpm_chip *);
1296:	int tpm_get_random(struct tpm_chip *, u8 *, size_t);
777:	int tpm_get_timeouts(struct tpm_chip *);
743:	ssize_t tpm_getcap(struct tpm_chip *, u32, cap_t *, const char *, size_t);
970:	int tpm_is_tpm2(struct tpm_chip *);
1050:	int tpm_pcr_extend(struct tpm_chip *, int, const u8 *);
994:	int tpm_pcr_read(struct tpm_chip *, int, u8 *);
944:	int tpm_pcr_read_dev(struct tpm_chip *, int, u8 *);
1270:	int tpm_pm_resume(struct device *);
1210:	int tpm_pm_suspend(struct device *);
1364:	int tpm_seal_trusted(struct tpm_chip *, struct trusted_key_payload *, struct trusted_key_options *);
1182:	int tpm_send(struct tpm_chip *, void *, size_t);
703:	int tpm_startup(struct tpm_chip *);
596:	ssize_t tpm_transmit(struct tpm_chip *, struct tpm_space *, u8 *, size_t, unsigned int);
662:	ssize_t tpm_transmit_cmd(struct tpm_chip *, struct tpm_space *, void *, size_t, size_t, unsigned int, const char *);
1391:	int tpm_unseal_trusted(struct tpm_chip *, struct trusted_key_payload *, struct trusted_key_options *);
1019:	static int tpm1_pcr_extend(struct tpm_chip *, int, const u8 *, char *);
924:	static int tpm_continue_selftest(struct tpm_chip *);
1437:	static void tpm_exit(void);
1409:	static int tpm_init(void);

File drivers/char/tpm/tpm-sysfs.c:
337:	void tpm_sysfs_add_device(struct tpm_chip *);
156:	static ssize_t active_show(struct device *, struct device_attribute *, char *);
273:	static ssize_t cancel_store(struct device *, struct device_attribute *, const char *, size_t);
222:	static ssize_t caps_show(struct device *, struct device_attribute *, char *);
287:	static ssize_t durations_show(struct device *, struct device_attribute *, char *);
134:	static ssize_t enabled_show(struct device *, struct device_attribute *, char *);
178:	static ssize_t owned_show(struct device *, struct device_attribute *, char *);
99:	static ssize_t pcrs_show(struct device *, struct device_attribute *, char *);
37:	static ssize_t pubek_show(struct device *, struct device_attribute *, char *);
200:	static ssize_t temp_deactivated_show(struct device *, struct device_attribute *, char *);
304:	static ssize_t timeouts_show(struct device *, struct device_attribute *, char *);

File drivers/char/tpm/tpm2-cmd.c:
997:	int tpm2_auto_startup(struct tpm_chip *);
759:	unsigned long tpm2_calc_ordinal_duration(struct tpm_chip *, u32);
1031:	int tpm2_find_cc(struct tpm_chip *, u32);
360:	void tpm2_flush_context_cmd(struct tpm_chip *, u32, unsigned int);
300:	int tpm2_get_random(struct tpm_chip *, u8 *, size_t);
703:	ssize_t tpm2_get_tpm_pt(struct tpm_chip *, u32, u32 *, const char *);
236:	int tpm2_pcr_extend(struct tpm_chip *, int, u32, struct tpm2_digest *);
186:	int tpm2_pcr_read(struct tpm_chip *, int, u8 *);
827:	int tpm2_probe(struct tpm_chip *);
420:	int tpm2_seal_trusted(struct tpm_chip *, struct trusted_key_payload *, struct trusted_key_options *);
737:	void tpm2_shutdown(struct tpm_chip *, u16);
663:	int tpm2_unseal_trusted(struct tpm_chip *, struct trusted_key_payload *, struct trusted_key_options *);
392:	static void tpm2_buf_append_auth(struct tpm_buf *, u32, u8, const u8 *, u16, u16, const u8 *);
790:	static int tpm2_do_selftest(struct tpm_chip *);

File drivers/char/tpm/tpm2-space.c:
496:	int tpm2_commit_space(struct tpm_chip *, struct tpm_space *, u32, u8 *, size_t *);
64:	void tpm2_del_space(struct tpm_chip *, struct tpm_space *);
46:	int tpm2_init_space(struct tpm_space *, unsigned int);
270:	int tpm2_prepare_space(struct tpm_chip *, struct tpm_space *, u32, u8 *);
168:	static void tpm2_flush_space(struct tpm_chip *);
73:	static int tpm2_load_context(struct tpm_chip *, u8 *, unsigned int *, u32 *);
125:	static int tpm2_save_context(struct tpm_chip *, u32, u8 *, unsigned int, unsigned int *);

File drivers/char/tpm/tpm_crb.c:
193:	static int __crb_cmd_ready(struct device *, struct crb_priv *, struct crb_priv *);
150:	static int __crb_go_idle(struct device *, struct crb_priv *, struct crb_priv *);
246:	static int __crb_relinquish_locality(struct device *, int, struct crb_priv *);
220:	static int __crb_request_locality(struct device *, int, struct crb_priv *);
606:	static int crb_acpi_add(struct acpi_device *);
695:	static void crb_acpi_driver_exit(void);
695:	static int crb_acpi_driver_init(void);
663:	static int crb_acpi_remove(struct acpi_device *);
404:	static void crb_cancel(struct tpm_chip *);
439:	static int crb_check_resource(struct acpi_resource *, void *);
212:	static int crb_cmd_ready(struct tpm_chip *);
317:	static int crb_do_acpi_start(struct tpm_chip *);
478:	static u64 crb_fixup_cmd_size(struct device *, struct resource *, u64, u64);
170:	static int crb_go_idle(struct tpm_chip *);
494:	static int crb_map_io(struct acpi_device *, struct crb_priv *, struct acpi_table_tpm2 *);
454:	static void *crb_map_res(struct device *, struct resource *, u64, u32, struct crb_priv *);
285:	static int crb_recv(struct tpm_chip *, u8 *, size_t);
266:	static int crb_relinquish_locality(struct tpm_chip *, int);
416:	static bool crb_req_canceled(struct tpm_chip *, u8);
239:	static int crb_request_locality(struct tpm_chip *, int);
362:	static int crb_send(struct tpm_chip *, u8 *, size_t);
273:	static u8 crb_status(struct tpm_chip *);
115:	static bool crb_wait_for_reg_32(u32 *, u32, u32, unsigned long);

File drivers/char/tpm/tpm_ppi.c:
333:	void tpm_add_ppi(struct tpm_chip *);
250:	static ssize_t show_ppi_operations(acpi_handle, char *, u32, u32);
57:	static ssize_t tpm_show_ppi_request(struct device *, struct device_attribute *, char *);
189:	static ssize_t tpm_show_ppi_response(struct device *, struct device_attribute *, char *);
291:	static ssize_t tpm_show_ppi_tcg_operations(struct device *, struct device_attribute *, char *);
143:	static ssize_t tpm_show_ppi_transition_action(struct device *, struct device_attribute *, char *);
49:	static ssize_t tpm_show_ppi_version(struct device *, struct device_attribute *, char *);
301:	static ssize_t tpm_show_ppi_vs_operations(struct device *, struct device_attribute *, char *);
90:	static ssize_t tpm_store_ppi_request(struct device *, struct device_attribute *, const char *, size_t);

File drivers/char/tpm/tpm_tis.c:
104:	static int check_acpi_tpm2(struct device *);
391:	static void cleanup_tis(void);
361:	static int init_tis(void);
158:	static int tpm_tcg_read16(struct tpm_tis_data *, u32, u16 *);
167:	static int tpm_tcg_read32(struct tpm_tis_data *, u32, u32 *);
136:	static int tpm_tcg_read_bytes(struct tpm_tis_data *, u32, u16, u8 *);
176:	static int tpm_tcg_write32(struct tpm_tis_data *, u32, u32);
147:	static int tpm_tcg_write_bytes(struct tpm_tis_data *, u32, u16, const u8 *);
193:	static int tpm_tis_init(struct device *, struct tpm_info *);
281:	static int tpm_tis_plat_probe(struct platform_device *);
305:	static int tpm_tis_plat_remove(struct platform_device *);
223:	static int tpm_tis_pnp_init(struct pnp_dev *, const struct pnp_device_id *);
256:	static void tpm_tis_pnp_remove(struct pnp_dev *);

File drivers/char/tpm/tpm_tis_core.c:
861:	int tpm_tis_core_init(struct device *, struct tpm_tis_data *, int, const struct tpm_tis_phy_ops *, acpi_handle);
772:	void tpm_tis_remove(struct tpm_chip *);
1054:	int tpm_tis_resume(struct device *);
122:	static bool check_locality(struct tpm_chip *, int);
434:	static void disable_interrupts(struct tpm_chip *);
257:	static int get_burstcount(struct tpm_chip *);
282:	static int recv_data(struct tpm_chip *, u8 *, size_t);
158:	static int release_locality(struct tpm_chip *, int);
195:	static int request_locality(struct tpm_chip *, int);
630:	static irqreturn_t tis_int_handler(int, void *);
803:	static void tpm_tis_clkrun_enable(struct tpm_chip *, bool);
682:	static int tpm_tis_probe_irq_single(struct tpm_chip *, u32, int, int);
249:	static void tpm_tis_ready(struct tpm_chip *);
311:	static int tpm_tis_recv(struct tpm_chip *, u8 *, size_t);
615:	static bool tpm_tis_req_canceled(struct tpm_chip *, u8);
497:	static int tpm_tis_send(struct tpm_chip *, u8 *, size_t);
366:	static int tpm_tis_send_data(struct tpm_chip *, const u8 *, size_t);
460:	static int tpm_tis_send_main(struct tpm_chip *, const u8 *, size_t);
236:	static u8 tpm_tis_status(struct tpm_chip *);
531:	static bool tpm_tis_update_timeouts(struct tpm_chip *, unsigned long *);
51:	static int wait_for_tpm_stat(struct tpm_chip *, u8, unsigned long, wait_queue_head_t *, bool);
36:	static bool wait_for_tpm_stat_cond(struct tpm_chip *, u8, bool, bool *);

File drivers/char/tpm/tpmrm-dev.c:
14:	static int tpmrm_open(struct inode *, struct file *);
36:	static int tpmrm_release(struct inode *, struct file *);
48:	static ssize_t tpmrm_write(struct file *, const char *, size_t, loff_t *);

File drivers/clk/clk-bulk.c:
122:	void clk_bulk_disable(int, const struct clk_bulk_data *);
138:	int clk_bulk_enable(int, const struct clk_bulk_data *);
32:	int clk_bulk_get(struct device *, int, struct clk_bulk_data *);
87:	int clk_bulk_prepare(int, const struct clk_bulk_data *);
23:	void clk_bulk_put(int, struct clk_bulk_data *);
72:	void clk_bulk_unprepare(int, const struct clk_bulk_data *);

File drivers/clk/clk-composite.c:
214:	struct clk_hw *clk_hw_register_composite(struct device *, const char *, const char * const *, int, struct clk_hw *, const struct clk_ops *, struct clk_hw *, const struct clk_ops *, struct clk_hw *, const struct clk_ops *, unsigned long);
327:	struct clk *clk_register_composite(struct device *, const char *, const char * const *, int, struct clk_hw *, const struct clk_ops *, struct clk_hw *, const struct clk_ops *, struct clk_hw *, const struct clk_ops *, unsigned long);
344:	void clk_unregister_composite(struct clk *);
56:	static int clk_composite_determine_rate(struct clk_hw *, struct clk_rate_request *);
203:	static void clk_composite_disable(struct clk_hw *);
192:	static int clk_composite_enable(struct clk_hw *);
22:	static u8 clk_composite_get_parent(struct clk_hw *);
181:	static int clk_composite_is_enabled(struct clk_hw *);
44:	static unsigned long clk_composite_recalc_rate(struct clk_hw *, unsigned long);
130:	static long clk_composite_round_rate(struct clk_hw *, unsigned long, unsigned long *);
33:	static int clk_composite_set_parent(struct clk_hw *, u8);
142:	static int clk_composite_set_rate(struct clk_hw *, unsigned long, unsigned long);
154:	static int clk_composite_set_rate_and_parent(struct clk_hw *, unsigned long, unsigned long, u8);

File drivers/clk/clk-devres.c:
49:	int devm_clk_bulk_get(struct device *, int, struct clk_bulk_data *);
17:	struct clk *devm_clk_get(struct device *, const char *);
83:	void devm_clk_put(struct device *, struct clk *);
93:	struct clk *devm_get_clk_from_child(struct device *, struct device_node *, const char *);
42:	static void devm_clk_bulk_release(struct device *, void *);
73:	static int devm_clk_match(struct device *, void *, void *);
12:	static void devm_clk_release(struct device *, void *);

File drivers/clk/clk-divider.c:
544:	struct clk_hw *clk_hw_register_divider(struct device *, const char *, const char *, unsigned long, void *, u8, u8, u8, spinlock_t *);
598:	struct clk_hw *clk_hw_register_divider_table(struct device *, const char *, const char *, unsigned long, void *, u8, u8, u8, const struct clk_div_table *, spinlock_t *);
629:	void clk_hw_unregister_divider(struct clk_hw *);
517:	struct clk *clk_register_divider(struct device *, const char *, const char *, unsigned long, void *, u8, u8, u8, spinlock_t *);
568:	struct clk *clk_register_divider_table(struct device *, const char *, const char *, unsigned long, void *, u8, u8, u8, const struct clk_div_table *, spinlock_t *);
609:	void clk_unregister_divider(struct clk *);
388:	int divider_get_val(unsigned long, unsigned long, const struct clk_div_table *, u8, unsigned long);
116:	unsigned long divider_recalc_rate(struct clk_hw *, unsigned long, unsigned int, const struct clk_div_table *, unsigned long, unsigned long);
345:	long divider_ro_round_rate_parent(struct clk_hw *, struct clk_hw *, unsigned long, unsigned long *, const struct clk_div_table *, u8, unsigned long, unsigned int);
332:	long divider_round_rate_parent(struct clk_hw *, struct clk_hw *, unsigned long, unsigned long *, const struct clk_div_table *, u8, unsigned long);
77:	static unsigned int _get_div(const struct clk_div_table *, unsigned int, unsigned long, u8);
54:	static unsigned int _get_maxdiv(const struct clk_div_table *, u8, unsigned long);
262:	static int _next_div(const struct clk_div_table *, int, unsigned long);
453:	static struct clk_hw *_register_divider(struct device *, const char *, const char *, unsigned long, void *, u8, u8, u8, const struct clk_div_table *, spinlock_t *);
275:	static int clk_divider_bestdiv(struct clk_hw *, struct clk_hw *, unsigned long, unsigned long *, const struct clk_div_table *, u8, unsigned long);
135:	static unsigned long clk_divider_recalc_rate(struct clk_hw *, unsigned long);
367:	static long clk_divider_round_rate(struct clk_hw *, unsigned long, unsigned long *);
405:	static int clk_divider_set_rate(struct clk_hw *, unsigned long, unsigned long);

File drivers/clk/clk-fixed-factor.c:
72:	struct clk_hw *clk_hw_register_fixed_factor(struct device *, const char *, const char *, unsigned long, unsigned int, unsigned int);
134:	void clk_hw_unregister_fixed_factor(struct clk_hw *);
107:	struct clk *clk_register_fixed_factor(struct device *, const char *, const char *, unsigned long, unsigned int, unsigned int);
121:	void clk_unregister_fixed_factor(struct clk *);
27:	static unsigned long clk_factor_recalc_rate(struct clk_hw *, unsigned long);
38:	static long clk_factor_round_rate(struct clk_hw *, unsigned long, unsigned long *);
53:	static int clk_factor_set_rate(struct clk_hw *, unsigned long, unsigned long);

File drivers/clk/clk-fixed-rate.c:
118:	struct clk_hw *clk_hw_register_fixed_rate(struct device *, const char *, const char *, unsigned long, unsigned long);
58:	struct clk_hw *clk_hw_register_fixed_rate_with_accuracy(struct device *, const char *, const char *, unsigned long, unsigned long, unsigned long);
149:	void clk_hw_unregister_fixed_rate(struct clk_hw *);
127:	struct clk *clk_register_fixed_rate(struct device *, const char *, const char *, unsigned long, unsigned long);
95:	struct clk *clk_register_fixed_rate_with_accuracy(struct device *, const char *, const char *, unsigned long, unsigned long, unsigned long);
136:	void clk_unregister_fixed_rate(struct clk *);
36:	static unsigned long clk_fixed_rate_recalc_accuracy(struct clk_hw *, unsigned long);
30:	static unsigned long clk_fixed_rate_recalc_rate(struct clk_hw *, unsigned long);

File drivers/clk/clk-fractional-divider.c:
131:	struct clk_hw *clk_hw_register_fractional_divider(struct device *, const char *, const char *, unsigned long, void *, u8, u8, u8, u8, u8, spinlock_t *);
189:	void clk_hw_unregister_fractional_divider(struct clk_hw *);
173:	struct clk *clk_register_fractional_divider(struct device *, const char *, const char *, unsigned long, void *, u8, u8, u8, u8, u8, spinlock_t *);
19:	static unsigned long clk_fd_recalc_rate(struct clk_hw *, unsigned long);
73:	static long clk_fd_round_rate(struct clk_hw *, unsigned long, unsigned long *);
94:	static int clk_fd_set_rate(struct clk_hw *, unsigned long, unsigned long);

File drivers/clk/clk-gate.c:
89:	int clk_gate_is_enabled(struct clk_hw *);
124:	struct clk_hw *clk_hw_register_gate(struct device *, const char *, const char *, unsigned long, void *, u8, u8, spinlock_t *);
201:	void clk_hw_unregister_gate(struct clk_hw *);
170:	struct clk *clk_register_gate(struct device *, const char *, const char *, unsigned long, void *, u8, u8, spinlock_t *);
185:	void clk_unregister_gate(struct clk *);
84:	static void clk_gate_disable(struct clk_hw *);
77:	static int clk_gate_enable(struct clk_hw *);
42:	static void clk_gate_endisable(struct clk_hw *, int);

File drivers/clk/clk-gpio.c:
146:	struct clk_hw *clk_hw_register_gpio_gate(struct device *, const char *, const char *, struct gpio_desc *, unsigned long);
179:	struct clk_hw *clk_hw_register_gpio_mux(struct device *, const char *, const char * const *, u8, struct gpio_desc *, unsigned long);
157:	struct clk *clk_register_gpio_gate(struct device *, const char *, const char *, struct gpio_desc *, unsigned long);
193:	struct clk *clk_register_gpio_mux(struct device *, const char *, const char * const *, u8, struct gpio_desc *, unsigned long);
43:	static void clk_gpio_gate_disable(struct clk_hw *);
34:	static int clk_gpio_gate_enable(struct clk_hw *);
50:	static int clk_gpio_gate_is_enabled(struct clk_hw *);
72:	static u8 clk_gpio_mux_get_parent(struct clk_hw *);
79:	static int clk_gpio_mux_set_parent(struct clk_hw *, u8);
95:	static struct clk_hw *clk_register_gpio(struct device *, const char *, const char * const *, u8, struct gpio_desc *, unsigned long, const struct clk_ops *);
271:	static int gpio_clk_driver_init(void);
207:	static int gpio_clk_driver_probe(struct platform_device *);

File drivers/clk/clk-multiplier.c:
27:	static unsigned long clk_multiplier_recalc_rate(struct clk_hw *, unsigned long);
101:	static long clk_multiplier_round_rate(struct clk_hw *, unsigned long, unsigned long *);
111:	static int clk_multiplier_set_rate(struct clk_hw *, unsigned long, unsigned long);

File drivers/clk/clk-mux.c:
220:	struct clk_hw *clk_hw_register_mux(struct device *, const char *, const char * const *, u8, unsigned long, void *, u8, u8, u8, spinlock_t *);
135:	struct clk_hw *clk_hw_register_mux_table(struct device *, const char *, const char * const *, u8, unsigned long, void *, u8, u32, u8, u32 *, spinlock_t *);
250:	void clk_hw_unregister_mux(struct clk_hw *);
56:	unsigned int clk_mux_index_to_val(u32 *, unsigned int, u8);
29:	int clk_mux_val_to_index(struct clk_hw *, u32 *, unsigned int, unsigned int);
206:	struct clk *clk_register_mux(struct device *, const char *, const char * const *, u8, unsigned long, void *, u8, u8, u8, spinlock_t *);
189:	struct clk *clk_register_mux_table(struct device *, const char *, const char * const *, u8, unsigned long, void *, u8, u32, u8, u32 *, spinlock_t *);
234:	void clk_unregister_mux(struct clk *);
115:	static int clk_mux_determine_rate(struct clk_hw *, struct clk_rate_request *);
74:	static u8 clk_mux_get_parent(struct clk_hw *);
85:	static int clk_mux_set_parent(struct clk_hw *, u8);

File drivers/clk/clk.c:
3110:	struct clk *__clk_create_clk(struct clk_hw *, const char *, const char *);
1170:	int __clk_determine_rate(struct clk_hw *, struct clk_rate_request *);
3136:	void __clk_free_clk(struct clk *);
3502:	int __clk_get(struct clk *);
344:	unsigned int __clk_get_enable_count(struct clk *);
384:	unsigned long __clk_get_flags(struct clk *);
259:	struct clk_hw *__clk_get_hw(struct clk *);
247:	const char *__clk_get_name(const struct clk *);
411:	bool __clk_is_enabled(struct clk *);
493:	struct clk *__clk_lookup(const char *);
529:	int __clk_mux_determine_rate(struct clk_hw *, struct clk_rate_request *);
536:	int __clk_mux_determine_rate_closest(struct clk_hw *, struct clk_rate_request *);
3516:	void __clk_put(struct clk *);
869:	void clk_disable(struct clk *);
939:	int clk_enable(struct clk *);
1325:	long clk_get_accuracy(struct clk *);
2134:	struct clk *clk_get_parent(struct clk *);
2406:	int clk_get_phase(struct clk *);
1407:	unsigned long clk_get_rate(struct clk *);
2572:	int clk_get_scaled_duty_cycle(struct clk *, unsigned int);
2186:	bool clk_has_parent(struct clk *, struct clk *);
390:	unsigned long clk_hw_get_flags(const struct clk_hw *);
253:	const char *clk_hw_get_name(const struct clk_hw *);
265:	unsigned int clk_hw_get_num_parents(const struct clk_hw *);
271:	struct clk_hw *clk_hw_get_parent(const struct clk_hw *);
334:	struct clk_hw *clk_hw_get_parent_by_index(const struct clk_hw *, unsigned int);
370:	unsigned long clk_hw_get_rate(const struct clk_hw *);
406:	bool clk_hw_is_enabled(const struct clk_hw *);
396:	bool clk_hw_is_prepared(const struct clk_hw *);
401:	bool clk_hw_rate_is_protected(const struct clk_hw *);
3260:	int clk_hw_register(struct device *, struct clk_hw *);
2168:	void clk_hw_reparent(struct clk_hw *, struct clk_hw *);
1181:	unsigned long clk_hw_round_rate(struct clk_hw *, unsigned long);
516:	void clk_hw_set_rate_range(struct clk_hw *, unsigned long, unsigned long);
3376:	void clk_hw_unregister(struct clk_hw *);
2592:	bool clk_is_match(const struct clk *, const struct clk *);
429:	int clk_mux_determine_rate_flags(struct clk_hw *, struct clk_rate_request *, unsigned long);
3575:	int clk_notifier_register(struct clk *, struct notifier_block *);
3624:	int clk_notifier_unregister(struct clk *, struct notifier_block *);
812:	int clk_prepare(struct clk *);
665:	int clk_rate_exclusive_get(struct clk *);
599:	void clk_rate_exclusive_put(struct clk *);
3157:	struct clk *clk_register(struct device *, struct clk_hw *);
1206:	long clk_round_rate(struct clk *, unsigned long);
2516:	int clk_set_duty_cycle(struct clk *, unsigned int, unsigned int);
2119:	int clk_set_max_rate(struct clk *, unsigned long);
2103:	int clk_set_min_rate(struct clk *, unsigned long);
2288:	int clk_set_parent(struct clk *, struct clk *);
2357:	int clk_set_phase(struct clk *, int);
1954:	int clk_set_rate(struct clk *, unsigned long);
1997:	int clk_set_rate_exclusive(struct clk *, unsigned long);
2033:	int clk_set_rate_range(struct clk *, unsigned long, unsigned long);
731:	void clk_unprepare(struct clk *);
3322:	void clk_unregister(struct clk *);
3431:	int devm_clk_hw_register(struct device *, struct clk_hw *);
3492:	void devm_clk_hw_unregister(struct device *, struct clk_hw *);
3401:	struct clk *devm_clk_register(struct device *, struct clk_hw *);
3477:	void devm_clk_unregister(struct device *, struct clk *);
2150:	static struct clk_core *__clk_init_parent(struct clk_core *);
277:	static struct clk_core *__clk_lookup_subtree(const char *, struct clk_core *);
1250:	static int __clk_notify(struct clk_core *, unsigned long, unsigned long, unsigned long);
1282:	static void __clk_recalc_accuracies(struct clk_core *);
1358:	static void __clk_recalc_rates(struct clk_core *, unsigned long);
3267:	static void __clk_release(struct kref *);
1516:	static void __clk_set_parent_after(struct clk_core *, struct clk_core *, struct clk_core *);
1470:	static struct clk_core *__clk_set_parent_before(struct clk_core *, struct clk_core *);
1581:	static int __clk_speculate_rates(struct clk_core *, unsigned long);
1635:	static struct clk_core *clk_calc_new_rates(struct clk_core *, unsigned long);
1612:	static void clk_calc_subtree(struct clk_core *, unsigned long, struct clk_core *, u8);
1760:	static void clk_change_rate(struct clk_core *);
1082:	static int clk_core_determine_round_nolock(struct clk_core *, struct clk_rate_request *);
821:	static void clk_core_disable(struct clk_core *);
848:	static void clk_core_disable_lock(struct clk_core *);
963:	static void clk_core_disable_unprepare(struct clk_core *);
878:	static int clk_core_enable(struct clk_core *);
914:	static int clk_core_enable_lock(struct clk_core *);
1302:	static long clk_core_get_accuracy(struct clk_core *);
500:	static void clk_core_get_boundaries(struct clk_core *, unsigned long *, unsigned long *);
320:	static struct clk_core *clk_core_get_parent_by_index(struct clk_core *, u8);
2385:	static int clk_core_get_phase(struct clk_core *);
1384:	static unsigned long clk_core_get_rate(struct clk_core *);
2547:	static int clk_core_get_scaled_duty_cycle(struct clk_core *, unsigned int);
1116:	static void clk_core_init_rate_req(struct clk_core * const, struct clk_rate_request *);
208:	static bool clk_core_is_enabled(struct clk_core *);
189:	static bool clk_core_is_prepared(struct clk_core *);
295:	static struct clk_core *clk_core_lookup(const char *);
740:	static int clk_core_prepare(struct clk_core *);
948:	static int clk_core_prepare_enable(struct clk_core *);
620:	static void clk_core_rate_protect(struct clk_core *);
545:	static void clk_core_rate_unprotect(struct clk_core *);
1142:	static int clk_core_round_rate_nolock(struct clk_core *, struct clk_rate_request *);
2467:	static int clk_core_set_duty_cycle_nolock(struct clk_core *, struct clk_duty *);
2206:	static int clk_core_set_parent_nolock(struct clk_core *, struct clk_core *);
1884:	static int clk_core_set_rate_nolock(struct clk_core *, unsigned long);
679:	static void clk_core_unprepare(struct clk_core *);
2424:	static int clk_core_update_duty_cycle_nolock(struct clk_core *);
1434:	static void clk_core_update_orphan_status(struct clk_core *, bool);
2804:	static void clk_debug_create_one(struct clk_core *, struct dentry *);
2876:	static int clk_debug_init(void);
1053:	static int clk_disable_unused(void);
999:	static void clk_disable_unused_subtree(struct clk_core *);
2735:	static int clk_dump_open(struct inode *, struct file *);
2712:	static int clk_dump_show(struct seq_file *, void *);
2695:	static void clk_dump_subtree(struct seq_file *, struct clk_core *, int);
2802:	static int clk_duty_cycle_open(struct inode *, struct file *);
2793:	static int clk_duty_cycle_show(struct seq_file *, void *);
142:	static unsigned long clk_enable_lock(void);
170:	static void clk_enable_unlock(unsigned long);
2777:	static int clk_flags_open(struct inode *, struct file *);
2758:	static int clk_flags_show(struct seq_file *, void *);
1046:	static int clk_ignore_unused_setup(char *);
3293:	static void clk_nodrv_disable_unprepare(struct clk_hw *);
3288:	static int clk_nodrv_prepare_enable(struct clk_hw *);
3304:	static int clk_nodrv_set_parent(struct clk_hw *, u8);
3298:	static int clk_nodrv_set_rate(struct clk_hw *, unsigned long, unsigned long);
116:	static void clk_prepare_lock(void);
131:	static void clk_prepare_unlock(void);
1722:	static struct clk_core *clk_propagate_rate_change(struct clk_core *, unsigned long);
1334:	static unsigned long clk_recalc(struct clk_core *, unsigned long);
1444:	static void clk_reparent(struct clk_core *, struct clk_core *);
2676:	static int clk_summary_open(struct inode *, struct file *);
2657:	static int clk_summary_show(struct seq_file *, void *);
2643:	static void clk_summary_show_subtree(struct seq_file *, struct clk_core *, int);
969:	static void clk_unprepare_unused_subtree(struct clk_core *);
3460:	static int devm_clk_hw_match(struct device *, void *, void *);
3387:	static void devm_clk_hw_release(struct device *, void *);
3452:	static int devm_clk_match(struct device *, void *, void *);
3382:	static void devm_clk_release(struct device *, void *);
2791:	static int possible_parents_open(struct inode *, struct file *);
2779:	static int possible_parents_show(struct seq_file *, void *);

File drivers/clk/clkdev.c:
361:	int clk_add_alias(const char *, const char *, const char *, struct device *);
194:	struct clk *clk_get(struct device *, const char *);
166:	struct clk *clk_get_sys(const char *, const char *);
454:	int clk_hw_register_clkdev(struct clk_hw *, const char *, const char *);
209:	void clk_put(struct clk *);
418:	int clk_register_clkdev(struct clk *, const char *, const char *);
222:	void clkdev_add(struct clk_lookup *);
230:	void clkdev_add_table(struct clk_lookup *, size_t);
288:	struct clk_lookup *clkdev_alloc(struct clk *, const char *, const char *, ...);
324:	struct clk_lookup *clkdev_create(struct clk *, const char *, const char *, ...);
381:	void clkdev_drop(struct clk_lookup *);
302:	struct clk_lookup *clkdev_hw_alloc(struct clk_hw *, const char *, const char *, ...);
347:	struct clk_lookup *clkdev_hw_create(struct clk_hw *, const char *, const char *, ...);
215:	static void __clkdev_add(struct clk_lookup *);
251:	static struct clk_lookup *vclkdev_alloc(struct clk_hw *, const char *, const char *, struct __va_list_tag *);

File drivers/clk/x86/clk-lpt.c:
47:	int lpt_clk_init(void);
19:	static int lpt_clk_probe(struct platform_device *);

File drivers/clk/x86/clk-pmc-atom.c:
141:	static void plt_clk_disable(struct clk_hw *);
397:	static int plt_clk_driver_init(void);
132:	static int plt_clk_enable(struct clk_hw *);
258:	static void plt_clk_free_parent_names_loop(const char **, unsigned int);
122:	static u8 plt_clk_get_parent(struct clk_hw *);
148:	static int plt_clk_is_enabled(struct clk_hw *);
322:	static int plt_clk_probe(struct platform_device *);
99:	static void plt_clk_reg_update(struct clk_plt *, u32, u32);
377:	static int plt_clk_remove(struct platform_device *);
113:	static int plt_clk_set_parent(struct clk_hw *, u8);
251:	static void plt_clk_unregister_fixed_rate_loop(unsigned int, struct clk_plt_data *);

File drivers/clk/x86/clk-st.c:
77:	static int st_clk_driver_init(void);
32:	static int st_clk_probe(struct platform_device *);
60:	static int st_clk_remove(struct platform_device *);

File drivers/clocksource/acpi_pm.c:
41:	u32 acpi_pm_read_verified(void);
105:	static void acpi_pm_check_blacklist(struct pci_dev *);
121:	static void acpi_pm_check_graylist(struct pci_dev *);
77:	static int acpi_pm_good_setup(char *);
61:	static u64 acpi_pm_read(struct clocksource *);
84:	static u64 acpi_pm_read_slow(struct clocksource *);
176:	static int init_acpi_pm_clocksource(void);
227:	static int parse_pmtmr(char *);

File drivers/clocksource/i8253.c:
181:	void clockevent_i8253_init(bool);
155:	static int pit_next_event(unsigned long, struct clock_event_device *);
129:	static int pit_set_oneshot(struct clock_event_device *);
137:	static int pit_set_periodic(struct clock_event_device *);
111:	static int pit_shutdown(struct clock_event_device *);

File drivers/connector/cn_proc.c:
224:	void proc_comm_connector(struct task_struct *);
249:	void proc_coredump_connector(struct task_struct *);
106:	void proc_exec_connector(struct task_struct *);
282:	void proc_exit_connector(struct task_struct *);
76:	void proc_fork_connector(struct task_struct *);
130:	void proc_id_connector(struct task_struct *, int);
192:	void proc_ptrace_connector(struct task_struct *, int);
168:	void proc_sid_connector(struct task_struct *);
399:	static int cn_proc_init(void);
353:	static void cn_proc_mcast_ctl(struct cn_msg *, struct netlink_skb_parms *);

File drivers/connector/cn_queue.c:
68:	int cn_cb_equal(struct cb_id *, struct cb_id *);
73:	int cn_queue_add_callback(struct cn_queue_dev *, const char *, struct cb_id *, void (*)(struct cn_msg *, struct netlink_skb_parms *));
126:	struct cn_queue_dev *cn_queue_alloc_dev(const char *, struct sock *);
107:	void cn_queue_del_callback(struct cn_queue_dev *, struct cb_id *);
144:	void cn_queue_free_dev(struct cn_queue_dev *);
59:	void cn_queue_release_callback(struct cn_callback_entry *);

File drivers/connector/connector.c:
209:	int cn_add_callback(struct cb_id *, const char *, void (*)(struct cn_msg *, struct netlink_skb_parms *));
235:	void cn_del_callback(struct cb_id *);
134:	int cn_netlink_send(struct cn_msg *, u32, u32, gfp_t);
74:	int cn_netlink_send_mult(struct cn_msg *, u16, u32, u32, gfp_t);
293:	static void cn_fini(void);
268:	static int cn_init(void);
243:	static int cn_proc_show(struct seq_file *, void *);
183:	static void cn_rx_skb(struct sk_buff *);

File drivers/cpufreq/cpufreq.c:
1955:	int __cpufreq_driver_target(struct cpufreq_policy *, unsigned int, unsigned int);
656:	unsigned int arch_freq_get_on_cpu(int);
155:	void arch_set_freq_scale(struct cpumask *, unsigned long, unsigned long);
2439:	int cpufreq_boost_enabled(void);
2376:	int cpufreq_boost_trigger_state(int);
220:	struct cpufreq_policy *cpufreq_cpu_get(unsigned int);
185:	struct cpufreq_policy *cpufreq_cpu_get_raw(unsigned int);
252:	void cpufreq_cpu_put(struct cpufreq_policy *);
1021:	struct cpufreq_governor *cpufreq_default_governor(void);
474:	void cpufreq_disable_fast_switch(struct cpufreq_policy *);
1863:	unsigned int cpufreq_driver_fast_switch(struct cpufreq_policy *, unsigned int);
496:	unsigned int cpufreq_driver_resolve_freq(struct cpufreq_policy *, unsigned int);
1995:	int cpufreq_driver_target(struct cpufreq_policy *, unsigned int, unsigned int);
2424:	int cpufreq_enable_boost_support(void);
450:	void cpufreq_enable_fast_switch(struct cpufreq_policy *);
369:	void cpufreq_freq_transition_begin(struct cpufreq_policy *, struct cpufreq_freqs *);
403:	void cpufreq_freq_transition_end(struct cpufreq_policy *, struct cpufreq_freqs *, int);
193:	unsigned int cpufreq_generic_get(unsigned int);
168:	int cpufreq_generic_init(struct cpufreq_policy *, struct cpufreq_frequency_table *, unsigned int);
1616:	int cpufreq_generic_suspend(struct cpufreq_policy *);
1570:	unsigned int cpufreq_get(unsigned int);
1720:	const char *cpufreq_get_current_driver(void);
1735:	void *cpufreq_get_driver_data(void);
2184:	int cpufreq_get_policy(struct cpufreq_policy *, unsigned int);
518:	unsigned int cpufreq_policy_transition_delay_us(struct cpufreq_policy *);
1489:	unsigned int cpufreq_quick_get(unsigned int);
1521:	unsigned int cpufreq_quick_get_max(unsigned int);
2474:	int cpufreq_register_driver(struct cpufreq_driver *);
2122:	int cpufreq_register_governor(struct cpufreq_governor *);
1761:	int cpufreq_register_notifier(struct notifier_block *, unsigned int);
1680:	void cpufreq_resume(void);
798:	ssize_t cpufreq_show_cpus(const struct cpumask *, char *);
1646:	void cpufreq_suspend(void);
2567:	int cpufreq_unregister_driver(struct cpufreq_driver *);
2145:	void cpufreq_unregister_governor(struct cpufreq_governor *);
1805:	int cpufreq_unregister_notifier(struct notifier_block *, unsigned int);
2307:	void cpufreq_update_policy(unsigned int);
99:	void disable_cpufreq(void);
142:	u64 get_cpu_idle_time(unsigned int, u64 *, int);
111:	struct kobject *get_governor_parent_kobj(struct cpufreq_policy *);
105:	bool have_governor_per_policy(void);
1535:	static unsigned int __cpufreq_get(struct cpufreq_policy *);
968:	static void add_cpu_dev_symlink(struct cpufreq_policy *, unsigned int, struct device *);
1351:	static int cpufreq_add_dev(struct device *, struct subsys_interface *);
2350:	static int cpufreq_boost_set_sw(int);
2596:	static int cpufreq_core_init(void);
2060:	static void cpufreq_exit_governor(struct cpufreq_policy *);
2111:	static void cpufreq_governor_limits(struct cpufreq_policy *);
2016:	static int cpufreq_init_governor(struct cpufreq_policy *);
1026:	static int cpufreq_init_policy(struct cpufreq_policy *);
304:	static void cpufreq_notify_transition(struct cpufreq_policy *, struct cpufreq_freqs *, unsigned int);
1373:	static int cpufreq_offline(unsigned int);
1179:	static int cpufreq_online(unsigned int);
1467:	static void cpufreq_out_of_sync(struct cpufreq_policy *, unsigned int);
589:	static int cpufreq_parse_governor(char *, struct cpufreq_policy *, struct cpufreq_policy *);
1159:	static void cpufreq_policy_free(struct cpufreq_policy *);
1440:	static void cpufreq_remove_dev(struct device *, struct subsys_interface *);
2205:	static int cpufreq_set_policy(struct cpufreq_policy *, struct cpufreq_policy *);
2073:	static int cpufreq_start_governor(struct cpufreq_policy *);
2100:	static void cpufreq_stop_governor(struct cpufreq_policy *);
950:	static void cpufreq_sysfs_release(struct kobject *);
1587:	static unsigned int cpufreq_update_current_freq(struct cpufreq_policy *);
2457:	static int cpuhp_cpufreq_offline(unsigned int);
2450:	static int cpuhp_cpufreq_online(unsigned int);
2406:	static int create_boost_sysfs_file(void);
575:	static struct cpufreq_governor *find_governor(const char *);
1080:	static void handle_update(struct work_struct *);
2418:	static void remove_boost_sysfs_file(void);
982:	static void remove_cpu_dev_symlink(struct device *, struct cpufreq_policy *);
906:	static ssize_t show(struct kobject *, struct attribute *, char *);
827:	static ssize_t show_affected_cpus(struct cpufreq_policy *, char *);
861:	static ssize_t show_bios_limit(struct cpufreq_policy *, char *);
547:	static ssize_t show_boost(struct kobject *, struct kobj_attribute *, char *);
712:	static ssize_t show_cpuinfo_cur_freq(struct cpufreq_policy *, char *);
651:	static ssize_t show_cpuinfo_max_freq(struct cpufreq_policy *, char *);
650:	static ssize_t show_cpuinfo_min_freq(struct cpufreq_policy *, char *);
652:	static ssize_t show_cpuinfo_transition_latency(struct cpufreq_policy *, char *);
819:	static ssize_t show_related_cpus(struct cpufreq_policy *, char *);
776:	static ssize_t show_scaling_available_governors(struct cpufreq_policy *, char *);
661:	static ssize_t show_scaling_cur_freq(struct cpufreq_policy *, char *);
768:	static ssize_t show_scaling_driver(struct cpufreq_policy *, char *);
726:	static ssize_t show_scaling_governor(struct cpufreq_policy *, char *);
654:	static ssize_t show_scaling_max_freq(struct cpufreq_policy *, char *);
653:	static ssize_t show_scaling_min_freq(struct cpufreq_policy *, char *);
850:	static ssize_t show_scaling_setspeed(struct cpufreq_policy *, char *);
922:	static ssize_t store(struct kobject *, struct attribute *, const char *, size_t);
553:	static ssize_t store_boost(struct kobject *, struct kobj_attribute *, const char *, size_t);
741:	static ssize_t store_scaling_governor(struct cpufreq_policy *, const char *, size_t);
707:	static ssize_t store_scaling_max_freq(struct cpufreq_policy *, const char *, size_t);
706:	static ssize_t store_scaling_min_freq(struct cpufreq_policy *, const char *, size_t);
832:	static ssize_t store_scaling_setspeed(struct cpufreq_policy *, const char *, size_t);

File drivers/cpufreq/cpufreq_conservative.c:
335:	static void cpufreq_gov_dbs_exit(void);
330:	static int cpufreq_gov_dbs_init(void);
273:	static struct policy_dbs_info *cs_alloc(void);
61:	static unsigned int cs_dbs_update(struct cpufreq_policy *);
304:	static void cs_exit(struct dbs_data *);
281:	static void cs_free(struct policy_dbs_info *);
286:	static int cs_init(struct dbs_data *);
309:	static void cs_start(struct cpufreq_policy *);
251:	static ssize_t show_down_threshold(struct gov_attr_set *, char *);
252:	static ssize_t show_freq_step(struct gov_attr_set *, char *);
250:	static ssize_t show_ignore_nice_load(struct gov_attr_set *, char *);
248:	static ssize_t show_sampling_down_factor(struct gov_attr_set *, char *);
247:	static ssize_t show_sampling_rate(struct gov_attr_set *, char *);
249:	static ssize_t show_up_threshold(struct gov_attr_set *, char *);
181:	static ssize_t store_down_threshold(struct gov_attr_set *, const char *, size_t);
224:	static ssize_t store_freq_step(struct gov_attr_set *, const char *, size_t);
199:	static ssize_t store_ignore_nice_load(struct gov_attr_set *, const char *, size_t);
150:	static ssize_t store_sampling_down_factor(struct gov_attr_set *, const char *, size_t);
165:	static ssize_t store_up_threshold(struct gov_attr_set *, const char *, size_t);

File drivers/cpufreq/cpufreq_governor.c:
501:	void cpufreq_dbs_governor_exit(struct cpufreq_policy *);
415:	int cpufreq_dbs_governor_init(struct cpufreq_policy *);
579:	void cpufreq_dbs_governor_limits(struct cpufreq_policy *);
529:	int cpufreq_dbs_governor_start(struct cpufreq_policy *);
567:	void cpufreq_dbs_governor_stop(struct cpufreq_policy *);
128:	unsigned int dbs_update(struct cpufreq_policy *);
98:	void gov_update_cpu_data(struct dbs_data *);
47:	ssize_t store_sampling_rate(struct gov_attr_set *, const char *, size_t);
285:	static void dbs_irq_work(struct irq_work *);
293:	static void dbs_update_util_handler(struct update_util_data *, u64, unsigned int);
256:	static void dbs_work_handler(struct work_struct *);
121:	static int enable_powersave_first(char *);
399:	static void free_policy_dbs_info(struct policy_dbs_info *, struct dbs_governor *);

File drivers/cpufreq/cpufreq_governor_attr_set.c:
60:	void gov_attr_set_get(struct gov_attr_set *, struct list_head *);
51:	void gov_attr_set_init(struct gov_attr_set *, struct list_head *);
69:	unsigned int gov_attr_set_put(struct gov_attr_set *, struct list_head *);
24:	static ssize_t governor_show(struct kobject *, struct attribute *, char *);
32:	static ssize_t governor_store(struct kobject *, struct attribute *, const char *, size_t);

File drivers/cpufreq/cpufreq_ondemand.c:
506:	void od_register_powersave_bias_handler(unsigned int (*)(struct cpufreq_policy *, unsigned int, unsigned int), unsigned int);
515:	void od_unregister_powersave_bias_handler(void);
527:	static void cpufreq_gov_dbs_exit(void);
522:	static int cpufreq_gov_dbs_init(void);
64:	static unsigned int generic_powersave_bias_target(struct cpufreq_policy *, unsigned int, unsigned int);
399:	static struct policy_dbs_info *od_alloc(void);
228:	static unsigned int od_dbs_update(struct cpufreq_policy *);
441:	static void od_exit(struct dbs_data *);
407:	static void od_free(struct policy_dbs_info *);
412:	static int od_init(struct dbs_data *);
471:	static void od_set_powersave_bias(unsigned int);
446:	static void od_start(struct cpufreq_policy *);
376:	static ssize_t show_ignore_nice_load(struct gov_attr_set *, char *);
377:	static ssize_t show_io_is_busy(struct gov_attr_set *, char *);
378:	static ssize_t show_powersave_bias(struct gov_attr_set *, char *);
375:	static ssize_t show_sampling_down_factor(struct gov_attr_set *, char *);
373:	static ssize_t show_sampling_rate(struct gov_attr_set *, char *);
374:	static ssize_t show_up_threshold(struct gov_attr_set *, char *);
324:	static ssize_t store_ignore_nice_load(struct gov_attr_set *, const char *, size_t);
261:	static ssize_t store_io_is_busy(struct gov_attr_set *, const char *, size_t);
349:	static ssize_t store_powersave_bias(struct gov_attr_set *, const char *, size_t);
296:	static ssize_t store_sampling_down_factor(struct gov_attr_set *, const char *, size_t);
279:	static ssize_t store_up_threshold(struct gov_attr_set *, const char *, size_t);

File drivers/cpufreq/cpufreq_performance.c:
42:	struct cpufreq_governor *cpufreq_default_governor(void);
36:	static void cpufreq_gov_performance_exit(void);
31:	static int cpufreq_gov_performance_init(void);
19:	static void cpufreq_gov_performance_limits(struct cpufreq_policy *);

File drivers/cpufreq/cpufreq_powersave.c:
36:	static void cpufreq_gov_powersave_exit(void);
31:	static int cpufreq_gov_powersave_init(void);
19:	static void cpufreq_gov_powersave_limits(struct cpufreq_policy *);

File drivers/cpufreq/cpufreq_stats.c:
170:	void cpufreq_stats_create_table(struct cpufreq_policy *);
154:	void cpufreq_stats_free_table(struct cpufreq_policy *);
225:	void cpufreq_stats_record_transition(struct cpufreq_policy *, unsigned int);
30:	static void cpufreq_stats_update(struct cpufreq_stats *);
55:	static ssize_t show_time_in_state(struct cpufreq_policy *, char *);
50:	static ssize_t show_total_trans(struct cpufreq_policy *, char *);
81:	static ssize_t show_trans_table(struct cpufreq_policy *, char *);
73:	static ssize_t store_reset(struct cpufreq_policy *, const char *, size_t);

File drivers/cpufreq/cpufreq_userspace.c:
138:	static void cpufreq_gov_userspace_exit(void);
133:	static int cpufreq_gov_userspace_init(void);
32:	static int cpufreq_set(struct cpufreq_policy *, unsigned int);
68:	static void cpufreq_userspace_policy_exit(struct cpufreq_policy *);
56:	static int cpufreq_userspace_policy_init(struct cpufreq_policy *);
102:	static void cpufreq_userspace_policy_limits(struct cpufreq_policy *);
76:	static int cpufreq_userspace_policy_start(struct cpufreq_policy *);
90:	static void cpufreq_userspace_policy_stop(struct cpufreq_policy *);
51:	static ssize_t show_speed(struct cpufreq_policy *, char *);

File drivers/cpufreq/freq_table.c:
36:	int cpufreq_frequency_table_cpuinfo(struct cpufreq_policy *, struct cpufreq_frequency_table *);
209:	int cpufreq_frequency_table_get_index(struct cpufreq_policy *, unsigned int);
67:	int cpufreq_frequency_table_verify(struct cpufreq_policy *, struct cpufreq_frequency_table *);
107:	int cpufreq_generic_frequency_table_verify(struct cpufreq_policy *);
116:	int cpufreq_table_index_unsorted(struct cpufreq_policy *, unsigned int, unsigned int);
355:	int cpufreq_table_validate_and_sort(struct cpufreq_policy *);
21:	bool policy_has_boost_freq(struct cpufreq_policy *);
271:	static ssize_t scaling_available_frequencies_show(struct cpufreq_policy *, char *);
283:	static ssize_t scaling_boost_frequencies_show(struct cpufreq_policy *, char *);
231:	static ssize_t show_available_freqs(struct cpufreq_policy *, char *, bool);

File drivers/cpufreq/intel_pstate.c:
2106:	static int __intel_pstate_cpu_init(struct cpufreq_policy *);
1266:	static int airmont_get_scaling(void);
1212:	static int atom_get_max_pstate(void);
1204:	static int atom_get_min_pstate(void);
1220:	static int atom_get_turbo_pstate(void);
1228:	static u64 atom_get_val(struct cpudata *, int);
1282:	static void atom_get_vid(struct cpudata *);
2418:	static void copy_cpu_funcs(struct pstate_funcs *);
1347:	static int core_get_max_pstate(void);
1306:	static int core_get_max_pstate_physical(void);
1298:	static int core_get_min_pstate(void);
1395:	static int core_get_scaling(void);
1382:	static int core_get_turbo_pstate(void);
1400:	static u64 core_get_val(struct cpudata *, int);
2281:	static int intel_cpufreq_cpu_init(struct cpufreq_policy *);
2265:	static unsigned int intel_cpufreq_fast_switch(struct cpufreq_policy *, unsigned int);
2081:	static void intel_cpufreq_stop_cpu(struct cpufreq_policy *);
2226:	static int intel_cpufreq_target(struct cpufreq_policy *, unsigned int, unsigned int);
2204:	static void intel_cpufreq_trace(struct cpudata *, unsigned int, int);
2173:	static int intel_cpufreq_verify_policy(struct cpufreq_policy *);
2052:	static void intel_pstate_adjust_policy_max(struct cpudata *, struct cpufreq_policy *, struct cpufreq_policy *);
1928:	static void intel_pstate_clear_update_util_hook(unsigned int);
2097:	static int intel_pstate_cpu_exit(struct cpufreq_policy *);
2146:	static int intel_pstate_cpu_init(struct cpufreq_policy *);
2309:	static void intel_pstate_driver_cleanup(void);
536:	static s16 intel_pstate_get_epp(struct cpudata *, u64);
751:	static void intel_pstate_get_hwp_max(unsigned int, int *, int *);
1173:	static void intel_pstate_hwp_enable(struct cpudata *);
836:	static int intel_pstate_hwp_save_state(struct cpufreq_policy *);
766:	static void intel_pstate_hwp_set(unsigned int);
2570:	static int intel_pstate_init(void);
1866:	static int intel_pstate_init_cpu(unsigned int);
2327:	static int intel_pstate_register_driver(struct cpufreq_driver *);
850:	static int intel_pstate_resume(struct cpufreq_policy *);
560:	static int intel_pstate_set_epb(int, s16);
2008:	static int intel_pstate_set_policy(struct cpufreq_policy *);
1435:	static void intel_pstate_set_pstate(struct cpudata *, int);
2632:	static int intel_pstate_setup(char *);
2086:	static void intel_pstate_stop_cpu(struct cpufreq_policy *);
2346:	static int intel_pstate_unregister_driver(void);
1946:	static void intel_pstate_update_perf_limits(struct cpufreq_policy *, struct cpudata *);
868:	static void intel_pstate_update_policies(void);
1708:	static void intel_pstate_update_pstate(struct cpudata *, int);
1742:	static void intel_pstate_update_util(struct update_util_data *, u64, unsigned int);
1589:	static void intel_pstate_update_util_hwp(struct update_util_data *, u64, unsigned int);
2064:	static int intel_pstate_verify_policy(struct cpufreq_policy *);
334:	static void intel_pstste_sched_itmt_work_fn(struct work_struct *);
1411:	static int knl_get_aperf_mperf_shift(void);
1416:	static int knl_get_turbo_pstate(void);
725:	static ssize_t show_base_frequency(struct cpufreq_policy *, char *);
675:	static ssize_t show_energy_performance_available_preferences(struct cpufreq_policy *, char *);
710:	static ssize_t show_energy_performance_preference(struct cpufreq_policy *, char *);
1090:	static ssize_t show_hwp_dynamic_boost(struct kobject *, struct kobj_attribute *, char *);
1115:	static ssize_t show_max_perf_pct(struct kobject *, struct kobj_attribute *, char *);
1116:	static ssize_t show_min_perf_pct(struct kobject *, struct kobj_attribute *, char *);
959:	static ssize_t show_no_turbo(struct kobject *, struct kobj_attribute *, char *);
938:	static ssize_t show_num_pstates(struct kobject *, struct kobj_attribute *, char *);
887:	static ssize_t show_status(struct kobject *, struct kobj_attribute *, char *);
912:	static ssize_t show_turbo_pct(struct kobject *, struct kobj_attribute *, char *);
1251:	static int silvermont_get_scaling(void);
691:	static ssize_t store_energy_performance_preference(struct cpufreq_policy *, const char *, size_t);
1096:	static ssize_t store_hwp_dynamic_boost(struct kobject *, struct kobj_attribute *, const char *, size_t);
1029:	static ssize_t store_max_perf_pct(struct kobject *, struct kobj_attribute *, const char *, size_t);
1059:	static ssize_t store_min_perf_pct(struct kobject *, struct kobj_attribute *, const char *, size_t);
982:	static ssize_t store_no_turbo(struct kobject *, struct kobj_attribute *, const char *, size_t);
899:	static ssize_t store_status(struct kobject *, struct kobj_attribute *, const char *, size_t);

File drivers/cpuidle/cpuidle-haltpoll.c:
28:	static int default_enter_idle(struct cpuidle_device *, struct cpuidle_driver *, int);
79:	static int haltpoll_cpu_offline(unsigned int);
60:	static int haltpoll_cpu_online(unsigned int);
143:	static void haltpoll_exit(void);
109:	static int haltpoll_init(void);
94:	static void haltpoll_uninit(void);

File drivers/cpuidle/cpuidle.c:
490:	void cpuidle_disable_device(struct cpuidle_device *);
39:	int cpuidle_disabled(void);
436:	int cpuidle_enable_device(struct cpuidle_device *);
300:	int cpuidle_enter(struct cpuidle_driver *, struct cpuidle_device *, int);
175:	int cpuidle_enter_s2idle(struct cpuidle_driver *, struct cpuidle_device *);
198:	int cpuidle_enter_state(struct cpuidle_device *, struct cpuidle_driver *, int);
124:	int cpuidle_find_deepest_state(struct cpuidle_driver *, struct cpuidle_device *);
348:	u64 cpuidle_haltpoll_time(struct cpuidle_driver *, struct cpuidle_device *);
365:	void cpuidle_install_idle_handler(void);
48:	bool cpuidle_not_available(struct cpuidle_driver *, struct cpuidle_device *);
414:	void cpuidle_pause(void);
394:	void cpuidle_pause_and_lock(void);
59:	int cpuidle_play_dead(void);
330:	u64 cpuidle_poll_time(struct cpuidle_driver *, struct cpuidle_device *);
316:	void cpuidle_reflect(struct cpuidle_device *, int);
662:	int cpuidle_register(struct cpuidle_driver *, const struct cpumask * const);
564:	int cpuidle_register_device(struct cpuidle_device *);
422:	void cpuidle_resume(void);
405:	void cpuidle_resume_and_unlock(void);
284:	int cpuidle_select(struct cpuidle_driver *, struct cpuidle_device *, bool *);
377:	void cpuidle_uninstall_idle_handler(void);
637:	void cpuidle_unregister(struct cpuidle_driver *);
610:	void cpuidle_unregister_device(struct cpuidle_device *);
108:	void cpuidle_use_deepest_state(bool);
43:	void disable_cpuidle(void);
511:	static void __cpuidle_unregister_device(struct cpuidle_device *);
734:	static int cpuidle_init(void);
709:	static int cpuidle_latency_notify(struct notifier_block *, unsigned long, void *);

File drivers/cpuidle/driver.c:
357:	struct cpuidle_driver *cpuidle_driver_ref(void);
377:	void cpuidle_driver_unref(void);
340:	struct cpuidle_driver *cpuidle_get_cpu_driver(struct cpuidle_device *);
320:	struct cpuidle_driver *cpuidle_get_driver(void);
274:	int cpuidle_register_driver(struct cpuidle_driver *);
295:	void cpuidle_unregister_driver(struct cpuidle_driver *);
244:	void haltpoll_switch_governor(struct cpuidle_driver *);
142:	static void cpuidle_setup_broadcast_timer(void *);

File drivers/cpuidle/governor.c:
31:	struct cpuidle_governor *cpuidle_find_governor(const char *);
110:	int cpuidle_governor_latency_req(unsigned int);
80:	int cpuidle_register_governor(struct cpuidle_governor *);
47:	int cpuidle_switch_governor(struct cpuidle_governor *);

File drivers/cpuidle/governors/haltpoll.c:
136:	static int haltpoll_enable_device(struct cpuidle_driver *, struct cpuidle_device *);
121:	static void haltpoll_reflect(struct cpuidle_device *, int);
52:	static int haltpoll_select(struct cpuidle_driver *, struct cpuidle_device *, bool *);
155:	static int init_haltpoll(void);

File drivers/cpuidle/governors/menu.c:
613:	static int init_menu(void);
584:	static int menu_enable_device(struct cpuidle_driver *, struct cpuidle_device *);
476:	static void menu_reflect(struct cpuidle_device *, int);
295:	static int menu_select(struct cpuidle_driver *, struct cpuidle_device *, bool *);

File drivers/cpuidle/poll_state.c:
51:	void cpuidle_poll_state_init(struct cpuidle_driver *);
17:	static int poll_idle(struct cpuidle_device *, struct cpuidle_driver *, int);

File drivers/cpuidle/sysfs.c:
651:	int cpuidle_add_device_sysfs(struct cpuidle_device *);
146:	int cpuidle_add_interface(struct device *);
679:	int cpuidle_add_sysfs(struct cpuidle_device *);
669:	void cpuidle_remove_device_sysfs(struct cpuidle_device *);
157:	void cpuidle_remove_interface(struct device *);
721:	void cpuidle_remove_sysfs(struct cpuidle_device *);
189:	static ssize_t cpuidle_show(struct kobject *, struct attribute *, char *);
402:	static ssize_t cpuidle_state_show(struct kobject *, struct attribute *, char *);
416:	static ssize_t cpuidle_state_store(struct kobject *, struct attribute *, const char *, size_t);
435:	static void cpuidle_state_sysfs_release(struct kobject *);
204:	static ssize_t cpuidle_store(struct kobject *, struct attribute *, const char *, size_t);
224:	static void cpuidle_sysfs_release(struct kobject *);
22:	static int cpuidle_sysfs_setup(char *);
29:	static ssize_t show_available_governors(struct device *, struct device_attribute *, char *);
50:	static ssize_t show_current_driver(struct device *, struct device_attribute *, char *);
68:	static ssize_t show_current_governor(struct device *, struct device_attribute *, char *);
295:	static ssize_t show_state_default_status(struct cpuidle_state *, struct cpuidle_state_usage *, char *);
309:	static ssize_t show_state_desc(struct cpuidle_state *, struct cpuidle_state_usage *, char *);
310:	static ssize_t show_state_disable(struct cpuidle_state *, struct cpuidle_state_usage *, char *);
303:	static ssize_t show_state_exit_latency(struct cpuidle_state *, struct cpuidle_state_usage *, char *);
308:	static ssize_t show_state_name(struct cpuidle_state *, struct cpuidle_state_usage *, char *);
305:	static ssize_t show_state_power_usage(struct cpuidle_state *, struct cpuidle_state_usage *, char *);
354:	static ssize_t show_state_s2idle_time(struct cpuidle_state *, struct cpuidle_state_usage *, char *);
353:	static ssize_t show_state_s2idle_usage(struct cpuidle_state *, struct cpuidle_state_usage *, char *);
304:	static ssize_t show_state_target_residency(struct cpuidle_state *, struct cpuidle_state_usage *, char *);
307:	static ssize_t show_state_time(struct cpuidle_state *, struct cpuidle_state_usage *, char *);
306:	static ssize_t show_state_usage(struct cpuidle_state *, struct cpuidle_state_usage *, char *);
84:	static ssize_t store_current_governor(struct device *, struct device_attribute *, const char *, size_t);
311:	static ssize_t store_state_disable(struct cpuidle_state *, struct cpuidle_state_usage *, const char *, size_t);

File drivers/dax/bus.c:
440:	int __dax_driver_register(struct dax_device_driver *, struct module *, const char *);
368:	struct dev_dax *__devm_create_dev_dax(struct dax_region *, int, struct dev_pagemap *, enum dev_dax_subsys);
228:	struct dax_region *alloc_dax_region(struct device *, int, struct resource *, int, unsigned int, unsigned long);
499:	void dax_bus_exit(void);
483:	int dax_bus_init(void);
467:	void dax_driver_unregister(struct dax_device_driver *);
213:	void dax_region_put(struct dax_region *);
336:	void kill_dev_dax(struct dev_dax *);
179:	static ssize_t align_show(struct device *, struct device_attribute *, char *);
140:	static int dax_bus_match(struct device *, struct device_driver *);
22:	static int dax_bus_uevent(struct device *, struct kobj_uevent_env *);
205:	static void dax_region_free(struct kref *);
219:	static void dax_region_unregister(void *);
346:	static void dev_dax_release(struct device *);
309:	static umode_t dev_dax_visible(struct kobject *, struct attribute *, int);
65:	static ssize_t do_id_store(struct device_driver *, const char *, size_t, enum id_action);
159:	static ssize_t id_show(struct device *, struct device_attribute *, char *);
298:	static ssize_t modalias_show(struct device *, struct device_attribute *, char *);
110:	static ssize_t new_id_store(struct device_driver *, const char *, size_t);
168:	static ssize_t region_size_show(struct device *, struct device_attribute *, char *);
117:	static ssize_t remove_id_store(struct device_driver *, const char *, size_t);
272:	static ssize_t size_show(struct device *, struct device_attribute *, char *);
289:	static ssize_t target_node_show(struct device *, struct device_attribute *, char *);
357:	static void unregister_dev_dax(void *);

File drivers/dax/super.c:
86:	bool __bdev_dax_supported(struct block_device *, int);
495:	struct dax_device *alloc_dax(void *, const char *, const struct dax_operations *);
53:	int bdev_dax_pgoff(struct block_device *, sector_t, size_t, unsigned long *);
339:	bool dax_alive(struct dax_device *);
288:	size_t dax_copy_from_iter(struct dax_device *, unsigned long, void *, size_t, struct iov_iter *);
298:	size_t dax_copy_to_iter(struct dax_device *, unsigned long, void *, size_t, struct iov_iter *);
266:	long dax_direct_access(struct dax_device *, unsigned long, long, void **, pfn_t *);
310:	void dax_flush(struct dax_device *, void *, size_t);
541:	struct dax_device *dax_get_by_host(const char *);
590:	void *dax_get_private(struct dax_device *);
584:	struct inode *dax_inode(struct dax_device *);
38:	int dax_read_lock(void);
44:	void dax_read_unlock(int);
324:	void dax_write_cache(struct dax_device *, bool);
333:	bool dax_write_cache_enabled(struct dax_device *);
67:	struct dax_device *fs_dax_get_by_bdev(struct block_device *);
576:	struct dax_device *inode_dax(struct inode *);
357:	void kill_dax(struct dax_device *);
529:	void put_dax(struct dax_device *);
372:	void run_dax(struct dax_device *);
378:	static struct inode *dax_alloc_inode(struct super_block *);
670:	static void dax_core_exit(void);
646:	static int dax_core_init(void);
409:	static void dax_destroy_inode(struct inode *);
639:	static void dax_fs_exit(void);
397:	static void dax_i_callback(struct callback_head *);
425:	static struct dentry *dax_mount(struct file_system_type *, int, const char *, void *);
444:	static int dax_set(struct inode *, void *);
437:	static int dax_test(struct inode *, void *);
227:	static umode_t dax_visible(struct kobject *, struct attribute *, int);
598:	static void init_once(void *);
191:	static ssize_t write_cache_show(struct device *, struct device_attribute *, char *);
206:	static ssize_t write_cache_store(struct device *, struct device_attribute *, const char *, size_t);

File drivers/dma-buf/dma-buf.c:
551:	struct dma_buf_attachment *dma_buf_attach(struct dma_buf *, struct device *);
801:	int dma_buf_begin_cpu_access(struct dma_buf *, enum dma_data_direction);
594:	void dma_buf_detach(struct dma_buf *, struct dma_buf_attachment *);
835:	int dma_buf_end_cpu_access(struct dma_buf *, enum dma_data_direction);
389:	struct dma_buf *dma_buf_export(const struct dma_buf_export_info *);
471:	int dma_buf_fd(struct dma_buf *, int);
496:	struct dma_buf *dma_buf_get(int);
858:	void *dma_buf_kmap(struct dma_buf *, unsigned long);
876:	void dma_buf_kunmap(struct dma_buf *, unsigned long, void *);
624:	struct sg_table *dma_buf_map_attachment(struct dma_buf_attachment *, enum dma_data_direction);
901:	int dma_buf_mmap(struct dma_buf *, struct vm_area_struct *, unsigned long);
524:	void dma_buf_put(struct dma_buf *);
652:	void dma_buf_unmap_attachment(struct dma_buf_attachment *, struct sg_table *, enum dma_data_direction);
951:	void *dma_buf_vmap(struct dma_buf *);
991:	void dma_buf_vunmap(struct dma_buf *, void *);
1098:	static int dma_buf_debug_open(struct inode *, struct file *);
1011:	static int dma_buf_debug_show(struct seq_file *, void *);
1158:	static void dma_buf_deinit(void);
1149:	static int dma_buf_init(void);
279:	static long dma_buf_ioctl(struct file *, unsigned int, unsigned long);
101:	static loff_t dma_buf_llseek(struct file *, loff_t, int);
84:	static int dma_buf_mmap_internal(struct file *, struct vm_area_struct *);
160:	static __poll_t dma_buf_poll(struct file *, poll_table *);
149:	static void dma_buf_poll_cb(struct dma_fence *, struct dma_fence_cb *);
49:	static int dma_buf_release(struct inode *, struct file *);

File drivers/dma-buf/dma-fence-array.c:
130:	struct dma_fence_array *dma_fence_array_create(int, struct dma_fence **, u64, unsigned int, bool);
166:	bool dma_fence_match_context(struct dma_fence *, u64);
42:	static void dma_fence_array_cb_func(struct dma_fence *, struct dma_fence_cb *);
55:	static bool dma_fence_array_enable_signaling(struct dma_fence *);
24:	static const char *dma_fence_array_get_driver_name(struct dma_fence *);
29:	static const char *dma_fence_array_get_timeline_name(struct dma_fence *);
90:	static void dma_fence_array_release(struct dma_fence *);
83:	static bool dma_fence_array_signaled(struct dma_fence *);
34:	static void irq_dma_fence_array_work(struct irq_work *);

File drivers/dma-buf/dma-fence.c:
300:	int dma_fence_add_callback(struct dma_fence *, struct dma_fence_cb *, dma_fence_func_t);
79:	u64 dma_fence_context_alloc(unsigned int);
430:	long dma_fence_default_wait(struct dma_fence *, bool, long);
255:	void dma_fence_enable_sw_signaling(struct dma_fence *);
241:	void dma_fence_free(struct dma_fence *);
354:	int dma_fence_get_status(struct dma_fence *);
617:	void dma_fence_init(struct dma_fence *, const struct dma_fence_ops *, spinlock_t *, u64, unsigned int);
217:	void dma_fence_release(struct kref *);
386:	bool dma_fence_remove_callback(struct dma_fence *, struct dma_fence_cb *);
146:	int dma_fence_signal(struct dma_fence *);
102:	int dma_fence_signal_locked(struct dma_fence *);
533:	long dma_fence_wait_any_timeout(struct dma_fence **, uint32_t, bool, long, uint32_t *);
193:	long dma_fence_wait_timeout(struct dma_fence *, bool, long);
409:	static void dma_fence_default_wait_cb(struct dma_fence *, struct dma_fence_cb *);

File drivers/dma-buf/reservation.c:
248:	void reservation_object_add_excl_fence(struct reservation_object *, struct dma_fence *);
226:	void reservation_object_add_shared_fence(struct reservation_object *, struct dma_fence *);
287:	int reservation_object_copy_fences(struct reservation_object *, struct reservation_object *);
381:	int reservation_object_get_fences_rcu(struct reservation_object *, struct dma_fence **, unsigned int *, struct dma_fence ***);
69:	int reservation_object_reserve_shared(struct reservation_object *);
590:	bool reservation_object_test_signaled_rcu(struct reservation_object *, bool);
486:	long reservation_object_wait_timeout_rcu(struct reservation_object *, bool, bool, unsigned long);

File drivers/dma-buf/seqno-fence.c:
38:	static bool seqno_enable_signaling(struct dma_fence *);
24:	static const char *seqno_fence_get_driver_name(struct dma_fence *);
31:	static const char *seqno_fence_get_timeline_name(struct dma_fence *);
52:	static void seqno_release(struct dma_fence *);
45:	static bool seqno_signaled(struct dma_fence *);
63:	static long seqno_wait(struct dma_fence *, bool, long);

File drivers/dma-buf/sync_file.c:
73:	struct sync_file *sync_file_create(struct dma_fence *);
111:	struct dma_fence *sync_file_get_fence(int);
140:	char *sync_file_get_name(struct sync_file *, char *, int);
198:	static void add_fence(struct dma_fence **, int *, struct dma_fence *);
55:	static void fence_check_cb_func(struct dma_fence *, struct dma_fence_cb *);
31:	static struct sync_file *sync_file_alloc(void);
87:	static struct sync_file *sync_file_fdget(int);
471:	static long sync_file_ioctl(struct file *, unsigned int, unsigned long);
316:	static __poll_t sync_file_poll(struct file *, poll_table *);
304:	static int sync_file_release(struct inode *, struct file *);

File drivers/dma/acpi-dma.c:
203:	int acpi_dma_controller_free(struct device *);
159:	int acpi_dma_controller_register(struct device *, struct dma_chan *(*)(struct acpi_dma_spec *, struct acpi_dma *), void *);
355:	struct dma_chan *acpi_dma_request_slave_chan_by_index(struct device *, size_t);
430:	struct dma_chan *acpi_dma_request_slave_chan_by_name(struct device *, const char *);
461:	struct dma_chan *acpi_dma_simple_xlate(struct acpi_dma_spec *, struct acpi_dma *);
273:	void devm_acpi_dma_controller_free(struct device *);
243:	int devm_acpi_dma_controller_register(struct device *, struct dma_chan *(*)(struct acpi_dma_spec *, struct acpi_dma *), void *);
330:	static int acpi_dma_parse_fixed_dma(struct acpi_resource *, void *);
225:	static void devm_acpi_dma_release(struct device *, void *);

File drivers/dma/dmaengine.c:
645:	struct dma_chan *__dma_request_channel(const dma_cap_mask_t *, dma_filter_fn, void *);
911:	int dma_async_device_register(struct dma_device *);
1113:	void dma_async_device_unregister(struct dma_device *);
1299:	void dma_async_tx_descriptor_init(struct dma_async_tx_descriptor *, struct dma_chan *);
357:	struct dma_chan *dma_find_channel(enum dma_transaction_type);
618:	struct dma_chan *dma_get_any_slave_channel(struct dma_device *);
473:	int dma_get_slave_caps(struct dma_chan *, struct dma_slave_caps *);
587:	struct dma_chan *dma_get_slave_channel(struct dma_chan *);
366:	void dma_issue_pending_all(void);
784:	void dma_release_channel(struct dma_chan *);
698:	struct dma_chan *dma_request_chan(struct device *, const char *);
763:	struct dma_chan *dma_request_chan_by_mask(const dma_cap_mask_t *);
746:	struct dma_chan *dma_request_slave_channel(struct device *, const char *);
1337:	void dma_run_dependencies(struct dma_async_tx_descriptor *);
281:	enum dma_status dma_sync_wait(struct dma_chan *, dma_cookie_t);
1313:	enum dma_status dma_wait_for_async_tx(struct dma_async_tx_descriptor *);
800:	void dmaengine_get(void);
1282:	struct dmaengine_unmap_data *dmaengine_get_unmap_data(struct device *, int, gfp_t);
839:	void dmaengine_put(void);
1233:	void dmaengine_unmap_put(struct dmaengine_unmap_data *);
1149:	int dmaenginem_async_device_register(struct dma_device *);
1187:	static struct dmaengine_unmap_pool *__get_unmap_pool(int);
110:	static ssize_t bytes_transferred_show(struct device *, struct device_attribute *, char *);
158:	static void chan_dev_release(struct device *);
1371:	static int dma_bus_init(void);
218:	static int dma_chan_get(struct dma_chan *);
257:	static void dma_chan_put(struct dma_chan *);
442:	static void dma_channel_rebalance(void);
320:	static int dma_channel_table_init(void);
1208:	static void dmaengine_unmap(struct kref *);
1135:	static void dmam_device_release(struct device *, void *);
546:	static struct dma_chan *find_candidate(struct dma_device *, const dma_cap_mask_t *, dma_filter_fn, void *);
132:	static ssize_t in_use_show(struct device *, struct device_attribute *, char *);
88:	static ssize_t memcpy_count_show(struct device *, struct device_attribute *, char *);

File drivers/dma/dw/core.c:
1418:	int dw_dma_disable(struct dw_dma_chip *);
1427:	int dw_dma_enable(struct dw_dma_chip *);
861:	bool dw_dma_filter(struct dma_chan *, void *);
1190:	int dw_dma_probe(struct dw_dma_chip *);
1394:	int dw_dma_remove(struct dw_dma_chip *);
594:	static irqreturn_t dw_dma_interrupt(int, void *);
1092:	static void dw_dma_off(struct dw_dma *);
566:	static void dw_dma_tasklet(unsigned long);
1116:	static int dwc_alloc_chan_resources(struct dma_chan *);
904:	static void dwc_chan_pause(struct dw_dma_chan *, bool);
876:	static int dwc_config(struct dma_chan *, struct dma_slave_config *);
104:	static struct dw_desc *dwc_desc_get(struct dw_dma_chan *);
123:	static void dwc_desc_put(struct dw_desc *, struct dw_dma_chan *, struct dw_dma_chan *);
336:	static void dwc_descriptor_complete(struct dw_dma_chan *, struct dw_desc *, bool);
275:	static void dwc_dostart(struct dw_dma_chan *, struct dw_desc *);
320:	static void dwc_dostart_first_queued(struct dw_dma_chan *);
1153:	static void dwc_free_chan_resources(struct dma_chan *);
179:	static void dwc_initialize(struct dw_dma_chan *);
1053:	static void dwc_issue_pending(struct dma_chan *);
924:	static int dwc_pause(struct dma_chan *);
640:	static struct dma_async_tx_descriptor *dwc_prep_dma_memcpy(struct dma_chan *, dma_addr_t, dma_addr_t, size_t, unsigned long);
715:	static struct dma_async_tx_descriptor *dwc_prep_slave_sg(struct dma_chan *, struct scatterlist *, unsigned int, enum dma_transfer_direction, unsigned long, void *);
945:	static int dwc_resume(struct dma_chan *);
400:	static void dwc_scan_descriptors(struct dw_dma *, struct dw_dma_chan *);
960:	static int dwc_terminate_all(struct dma_chan *);
1028:	static enum dma_status dwc_tx_status(struct dma_chan *, dma_cookie_t, struct dma_tx_state *);
80:	static dma_cookie_t dwc_tx_submit(struct dma_async_tx_descriptor *);

File drivers/dma/dw/pci.c:
145:	static void dw_pci_driver_exit(void);
145:	static int dw_pci_driver_init(void);
30:	static int dw_pci_probe(struct pci_dev *, const struct pci_device_id *);
76:	static void dw_pci_remove(struct pci_dev *);
96:	static int dw_pci_resume_early(struct device *);
88:	static int dw_pci_suspend_late(struct device *);

File drivers/dma/hsu/hsu.c:
205:	int hsu_dma_do_irq(struct hsu_dma_chip *, unsigned short, u32);
146:	int hsu_dma_get_status(struct hsu_dma_chip *, unsigned short, u32 *);
423:	int hsu_dma_probe(struct hsu_dma_chip *);
489:	int hsu_dma_remove(struct hsu_dma_chip *);
57:	static void hsu_dma_chan_start(struct hsu_dma_chan *);
253:	static void hsu_dma_desc_free(struct virt_dma_desc *);
411:	static void hsu_dma_free_chan_resources(struct dma_chan *);
290:	static void hsu_dma_issue_pending(struct dma_chan *);
360:	static int hsu_dma_pause(struct dma_chan *);
261:	static struct dma_async_tx_descriptor *hsu_dma_prep_slave_sg(struct dma_chan *, struct scatterlist *, unsigned int, enum dma_transfer_direction, unsigned long, void *);
375:	static int hsu_dma_resume(struct dma_chan *);
346:	static int hsu_dma_slave_config(struct dma_chan *, struct dma_slave_config *);
111:	static void hsu_dma_start_transfer(struct hsu_dma_chan *);
416:	static void hsu_dma_synchronize(struct dma_chan *);
390:	static int hsu_dma_terminate_all(struct dma_chan *);
318:	static enum dma_status hsu_dma_tx_status(struct dma_chan *, dma_cookie_t, struct dma_tx_state *);

File drivers/dma/virt-dma.c:
116:	void vchan_dma_desc_free_list(struct virt_dma_chan *, struct list_head *);
69:	struct virt_dma_desc *vchan_find_desc(struct virt_dma_chan *, dma_cookie_t);
132:	void vchan_init(struct virt_dma_chan *, struct dma_device *);
52:	int vchan_tx_desc_free(struct dma_async_tx_descriptor *);
22:	dma_cookie_t vchan_tx_submit(struct dma_async_tx_descriptor *);
86:	static void vchan_complete(unsigned long);

File drivers/edac/edac_device.c:
448:	int edac_device_add_device(struct edac_device_ctl_info *);
50:	struct edac_device_ctl_info *edac_device_alloc_ctl_info(unsigned int, char *, unsigned int, char *, unsigned int, unsigned int, struct edac_dev_sysfs_block_attribute *, unsigned int, int);
440:	int edac_device_alloc_index(void);
504:	struct edac_device_ctl_info *edac_device_del_device(struct device *);
229:	void edac_device_free_ctl_info(struct edac_device_ctl_info *);
558:	void edac_device_handle_ce(struct edac_device_ctl_info *, int, int, const char *);
600:	void edac_device_handle_ue(struct edac_device_ctl_info *, int, int, const char *);
426:	void edac_device_reset_delay_period(struct edac_device_ctl_info *, unsigned long);
319:	static void del_edac_device_from_global_list(struct edac_device_ctl_info *);
343:	static void edac_device_workq_function(struct work_struct *);

File drivers/edac/edac_device_sysfs.c:
801:	int edac_device_create_sysfs(struct edac_device_ctl_info *);
231:	int edac_device_register_sysfs_main_kobj(struct edac_device_ctl_info *);
858:	void edac_device_remove_sysfs(struct edac_device_ctl_info *);
288:	void edac_device_unregister_sysfs_main_kobj(struct edac_device_ctl_info *);
421:	static ssize_t block_ce_count_show(struct kobject *, struct attribute *, char *);
413:	static ssize_t block_ue_count_show(struct kobject *, struct attribute *, char *);
447:	static ssize_t edac_dev_block_show(struct kobject *, struct attribute *, char *);
459:	static ssize_t edac_dev_block_store(struct kobject *, struct attribute *, const char *, size_t);
117:	static ssize_t edac_dev_ctl_info_show(struct kobject *, struct attribute *, char *);
129:	static ssize_t edac_dev_ctl_info_store(struct kobject *, struct attribute *, const char *, size_t);
345:	static ssize_t edac_dev_instance_show(struct kobject *, struct attribute *, char *);
357:	static ssize_t edac_dev_instance_store(struct kobject *, struct attribute *, const char *, size_t);
49:	static ssize_t edac_device_ctl_log_ce_show(struct edac_device_ctl_info *, char *);
55:	static ssize_t edac_device_ctl_log_ce_store(struct edac_device_ctl_info *, const char *, size_t);
32:	static ssize_t edac_device_ctl_log_ue_show(struct edac_device_ctl_info *, char *);
38:	static ssize_t edac_device_ctl_log_ue_store(struct edac_device_ctl_info *, const char *, size_t);
66:	static ssize_t edac_device_ctl_panic_on_ue_show(struct edac_device_ctl_info *, char *);
72:	static ssize_t edac_device_ctl_panic_on_ue_store(struct edac_device_ctl_info *, const char *, size_t);
83:	static ssize_t edac_device_ctl_poll_msec_show(struct edac_device_ctl_info *, char *);
89:	static ssize_t edac_device_ctl_poll_msec_store(struct edac_device_ctl_info *, const char *, size_t);
430:	static void edac_device_ctrl_block_release(struct kobject *);
324:	static void edac_device_ctrl_instance_release(struct kobject *);
201:	static void edac_device_ctrl_master_release(struct kobject *);
577:	static void edac_device_delete_block(struct edac_device_block *, struct edac_device_ctl_info *);
676:	static void edac_device_delete_instance(int, struct edac_device_ctl_info *);
768:	static void edac_device_remove_main_sysfs_attributes(struct edac_device_ctl_info *);
314:	static ssize_t instance_ce_count_show(struct edac_device_instance *, char *);
308:	static ssize_t instance_ue_count_show(struct edac_device_instance *, char *);

File drivers/edac/edac_mc.c:
241:	void *edac_align_ptr(void **, unsigned int, int);
119:	unsigned int edac_dimm_info_location(struct dimm_info *, char *, unsigned int);
702:	const char *edac_get_owner(void);
60:	int edac_get_report_status(void);
522:	bool edac_has_mcs(void);
709:	int edac_mc_add_mc_with_groups(struct mem_ctl_info *, const struct attribute_group **);
308:	struct mem_ctl_info *edac_mc_alloc(unsigned int, unsigned int, struct edac_mc_layer *, unsigned int);
797:	struct mem_ctl_info *edac_mc_del_mc(struct device *);
682:	struct mem_ctl_info *edac_mc_find(int);
866:	int edac_mc_find_csrow_by_page(struct mem_ctl_info *, unsigned long);
505:	void edac_mc_free(struct mem_ctl_info *);
1089:	void edac_mc_handle_error(const enum hw_event_mc_err_type, struct mem_ctl_info *, const u16, const unsigned long, const unsigned long, const unsigned long, const int, const int, const int, const char *, const char *);
604:	void edac_mc_reset_delay_period(unsigned long);
1060:	void edac_raw_mc_handle_error(const enum hw_event_mc_err_type, struct mem_ctl_info *, struct edac_raw_error_desc *);
66:	void edac_set_report_status(int);
561:	struct mem_ctl_info *find_mci_by_dev(struct device *);
278:	static void _edac_mc_free(struct mem_ctl_info *);
669:	static int del_mc_from_global_list(struct mem_ctl_info *);
577:	static void edac_mc_workq_function(struct work_struct *);
90:	static int edac_report_get(char *, const struct kernel_param *);
75:	static int edac_report_set(const char *, const struct kernel_param *);

File drivers/edac/edac_mc_sysfs.c:
920:	int edac_create_sysfs_mci_device(struct mem_ctl_info *, const struct attribute_group **);
37:	int edac_mc_get_log_ce(void);
32:	int edac_mc_get_log_ue(void);
42:	int edac_mc_get_panic_on_ue(void);
48:	unsigned int edac_mc_get_poll_msec(void);
1096:	void edac_mc_sysfs_exit(void);
1067:	int edac_mc_sysfs_init(void);
1017:	void edac_remove_sysfs_mci_device(struct mem_ctl_info *);
1039:	void edac_unregister_sysfs(struct mem_ctl_info *);
239:	static ssize_t channel_ce_count_show(struct device *, struct device_attribute *, char *);
198:	static ssize_t channel_dimm_label_show(struct device *, struct device_attribute *, char *);
214:	static ssize_t channel_dimm_label_store(struct device *, struct device_attribute *, const char *, size_t);
277:	static void csrow_attr_release(struct device *);
152:	static ssize_t csrow_ce_count_show(struct device *, struct device_attribute *, char *);
355:	static umode_t csrow_dev_is_visible(struct kobject *, struct attribute *, int);
180:	static ssize_t csrow_dev_type_show(struct device *, struct device_attribute *, char *);
188:	static ssize_t csrow_edac_mode_show(struct device *, struct device_attribute *, char *);
172:	static ssize_t csrow_mem_type_show(struct device *, struct device_attribute *, char *);
160:	static ssize_t csrow_size_show(struct device *, struct device_attribute *, char *);
144:	static ssize_t csrow_ue_count_show(struct device *, struct device_attribute *, char *);
556:	static ssize_t dimmdev_ce_count_show(struct device *, struct device_attribute *, char *);
539:	static ssize_t dimmdev_dev_type_show(struct device *, struct device_attribute *, char *);
547:	static ssize_t dimmdev_edac_mode_show(struct device *, struct device_attribute *, char *);
488:	static ssize_t dimmdev_label_show(struct device *, struct device_attribute *, char *);
500:	static ssize_t dimmdev_label_store(struct device *, struct device_attribute *, const char *, size_t);
480:	static ssize_t dimmdev_location_show(struct device *, struct device_attribute *, char *);
531:	static ssize_t dimmdev_mem_type_show(struct device *, struct device_attribute *, char *);
523:	static ssize_t dimmdev_size_show(struct device *, struct device_attribute *, char *);
573:	static ssize_t dimmdev_ue_count_show(struct device *, struct device_attribute *, char *);
53:	static int edac_set_poll_msec(const char *, const struct kernel_param *);
873:	static umode_t mci_attr_is_visible(struct kobject *, struct attribute *, int);
760:	static ssize_t mci_ce_count_show(struct device *, struct device_attribute *, char *);
769:	static ssize_t mci_ce_noinfo_show(struct device *, struct device_attribute *, char *);
796:	static ssize_t mci_ctl_name_show(struct device *, struct device_attribute *, char *);
825:	static ssize_t mci_max_location_show(struct device *, struct device_attribute *, char *);
669:	static ssize_t mci_reset_counters_store(struct device *, struct device_attribute *, const char *, size_t);
734:	static ssize_t mci_sdram_scrub_rate_show(struct device *, struct device_attribute *, char *);
710:	static ssize_t mci_sdram_scrub_rate_store(struct device *, struct device_attribute *, const char *, size_t);
787:	static ssize_t mci_seconds_show(struct device *, struct device_attribute *, char *);
805:	static ssize_t mci_size_mb_show(struct device *, struct device_attribute *, char *);
751:	static ssize_t mci_ue_count_show(struct device *, struct device_attribute *, char *);
778:	static ssize_t mci_ue_noinfo_show(struct device *, struct device_attribute *, char *);

File drivers/edac/edac_module.c:
93:	struct bus_type *edac_get_sysfs_subsys(void);
50:	char *edac_op_state_to_string(int);
149:	static void edac_exit(void);
102:	static int edac_init(void);

File drivers/edac/edac_pci.c:
204:	int edac_pci_add_device(struct edac_pci_ctl_info *, int);
31:	struct edac_pci_ctl_info *edac_pci_alloc_ctl_info(unsigned int, const char *);
198:	int edac_pci_alloc_index(void);
302:	struct edac_pci_ctl_info *edac_pci_create_generic_ctl(struct device *, const char *);
249:	struct edac_pci_ctl_info *edac_pci_del_device(struct device *);
61:	void edac_pci_free_ctl_info(struct edac_pci_ctl_info *);
334:	void edac_pci_release_generic_ctl(struct edac_pci_ctl_info *);
150:	static void del_edac_pci_from_global_list(struct edac_pci_ctl_info *);
288:	static void edac_pci_generic_check(struct edac_pci_ctl_info *);
167:	static void edac_pci_workq_function(struct work_struct *);

File drivers/edac/edac_pci_sysfs.c:
672:	void edac_pci_clear_parity_errors(void);
421:	int edac_pci_create_sysfs(struct edac_pci_ctl_info *);
639:	void edac_pci_do_parity_check(void);
33:	int edac_pci_get_check_errors(void);
53:	int edac_pci_get_poll_msec(void);
710:	void edac_pci_handle_npe(struct edac_pci_ctl_info *, const char *);
685:	void edac_pci_handle_pe(struct edac_pci_ctl_info *, const char *);
456:	void edac_pci_remove_sysfs(struct edac_pci_ctl_info *);
509:	static void edac_pci_dev_parity_clear(struct pci_dev *);
529:	static void edac_pci_dev_parity_test(struct pci_dev *);
238:	static ssize_t edac_pci_dev_show(struct kobject *, struct attribute *, char *);
249:	static ssize_t edac_pci_dev_store(struct kobject *, struct attribute *, const char *, size_t);
74:	static void edac_pci_instance_release(struct kobject *);
97:	static ssize_t edac_pci_instance_show(struct kobject *, struct attribute *, char *);
109:	static ssize_t edac_pci_instance_store(struct kobject *, struct attribute *, const char *, size_t);
214:	static ssize_t edac_pci_int_show(void *, char *);
220:	static ssize_t edac_pci_int_store(void *, const char *, size_t);
407:	static void edac_pci_main_kobj_teardown(void);
314:	static void edac_pci_release_main_kobj(struct kobject *);
475:	static u16 get_pci_parity_status(struct pci_dev *, int);
64:	static ssize_t instance_npe_count_show(struct edac_pci_ctl_info *, char *);
59:	static ssize_t instance_pe_count_show(struct edac_pci_ctl_info *, char *);

File drivers/edac/ghes_edac.c:
441:	int ghes_edac_register(struct ghes *, struct device *);
183:	void ghes_edac_report_mem_error(int, struct cper_sec_mem_err *);
533:	void ghes_edac_unregister(struct ghes *);
75:	static void ghes_edac_count_dimms(const struct dmi_header *, void *);
83:	static void ghes_edac_dmidecode(const struct dmi_header *, void *);

File drivers/edac/wq.c:
11:	bool edac_mod_work(struct delayed_work *, unsigned long);
5:	bool edac_queue_work(struct delayed_work *, unsigned long);
17:	bool edac_stop_work(struct delayed_work *);
28:	int edac_workqueue_setup(void);
37:	void edac_workqueue_teardown(void);

File drivers/firewire/init_ohci1394_dma.c:
270:	void init_ohci1394_dma_on_all_controllers(void);
66:	static u8 get_phy_reg(struct ohci *, u8);
84:	static void set_phy_reg(struct ohci *, u8, u8);
301:	static int setup_ohci1394_dma(char *);

File drivers/firmware/dmi-id.c:
150:	static int dmi_dev_uevent(struct device *, struct kobj_uevent_env *);
211:	static int dmi_id_init(void);
73:	static ssize_t get_modalias(char *, size_t);
23:	static ssize_t sys_dmi_field_show(struct device *, struct device_attribute *, char *);
126:	static ssize_t sys_dmi_modalias_show(struct device *, struct device_attribute *, char *);

File drivers/firmware/dmi-sysfs.c:
638:	static void cleanup_entry_list(void);
214:	static ssize_t dmi_entry_attr_show(struct kobject *, struct attribute *, char *);
202:	static ssize_t dmi_entry_attr_show_helper(struct dmi_sysfs_entry *, const struct dmi_header *, void *);
82:	static void dmi_entry_free(struct kobject *);
534:	static ssize_t dmi_entry_raw_read(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
521:	static ssize_t dmi_entry_raw_read_helper(struct dmi_sysfs_entry *, const struct dmi_header *, void *);
429:	static ssize_t dmi_sel_raw_read(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
398:	static ssize_t dmi_sel_raw_read_helper(struct dmi_sysfs_entry *, const struct dmi_header *, void *);
97:	static ssize_t dmi_sysfs_attr_show(struct kobject *, struct attribute *, char *);
484:	static ssize_t dmi_sysfs_entry_handle(struct dmi_sysfs_entry *, char *);
494:	static ssize_t dmi_sysfs_entry_instance(struct dmi_sysfs_entry *, char *);
479:	static ssize_t dmi_sysfs_entry_length(struct dmi_sysfs_entry *, char *);
500:	static ssize_t dmi_sysfs_entry_position(struct dmi_sysfs_entry *, char *);
554:	static void dmi_sysfs_entry_release(struct kobject *);
489:	static ssize_t dmi_sysfs_entry_type(struct dmi_sysfs_entry *, char *);
685:	static void dmi_sysfs_exit(void);
649:	static int dmi_sysfs_init(void);
578:	static void dmi_sysfs_register_handle(const struct dmi_header *, void *);
283:	static ssize_t dmi_sysfs_sel_access_method(struct dmi_sysfs_entry *, const struct dmi_header *, char *);
286:	static ssize_t dmi_sysfs_sel_access_method_address(struct dmi_sysfs_entry *, const struct dmi_header *, char *);
280:	static ssize_t dmi_sysfs_sel_area_length(struct dmi_sysfs_entry *, const struct dmi_header *, char *);
285:	static ssize_t dmi_sysfs_sel_change_token(struct dmi_sysfs_entry *, const struct dmi_header *, char *);
282:	static ssize_t dmi_sysfs_sel_data_start_offset(struct dmi_sysfs_entry *, const struct dmi_header *, char *);
287:	static ssize_t dmi_sysfs_sel_header_format(struct dmi_sysfs_entry *, const struct dmi_header *, char *);
281:	static ssize_t dmi_sysfs_sel_header_start_offset(struct dmi_sysfs_entry *, const struct dmi_header *, char *);
289:	static ssize_t dmi_sysfs_sel_per_log_type_descriptor_length(struct dmi_sysfs_entry *, const struct dmi_header *, char *);
284:	static ssize_t dmi_sysfs_sel_status(struct dmi_sysfs_entry *, const struct dmi_header *, char *);
288:	static ssize_t dmi_sysfs_sel_type_descriptors_supported_count(struct dmi_sysfs_entry *, const struct dmi_header *, char *);
158:	static ssize_t find_dmi_entry(struct dmi_sysfs_entry *, dmi_callback, void *);
125:	static void find_dmi_entry_helper(const struct dmi_header *, void *);
342:	static u8 read_sel_16bit_indexed_io(const struct dmi_system_event_log *, loff_t);
329:	static u8 read_sel_2x8bit_indexed_io(const struct dmi_system_event_log *, loff_t);
317:	static u8 read_sel_8bit_indexed_io(const struct dmi_system_event_log *, loff_t);

File drivers/firmware/dmi_scan.c:
846:	int dmi_check_system(const struct dmi_system_id *);
942:	const struct dmi_device *dmi_find_device(int, const char *, const struct dmi_device *);
876:	const struct dmi_system_id *dmi_first_match(const struct dmi_system_id *);
1040:	int dmi_get_bios_year(void);
979:	bool dmi_get_date(int, int *, int *, int *);
895:	const char *dmi_get_system_info(int);
1087:	bool dmi_match(enum dmi_field, const char *);
1098:	void dmi_memdev_name(u16, const char **, const char **);
1115:	u64 dmi_memdev_size(u16);
419:	void dmi_memdev_walk(void);
905:	int dmi_name_in_serial(const char *);
917:	int dmi_name_in_vendors(const char *);
617:	void dmi_scan_machine(void);
779:	void dmi_set_dump_stack_arch_desc(void);
1061:	int dmi_walk(void (*)(const struct dmi_header *, void *), void *);
379:	static void count_mem_devices(const struct dmi_header *, void *);
436:	static void dmi_decode(const struct dmi_header *, void *);
81:	static void dmi_decode_table(u8 *, void (*)(const struct dmi_header *, void *), void *);
500:	static void dmi_format_ids(size_t, char *);
719:	static int dmi_init(void);
788:	static bool dmi_matches(const struct dmi_system_id *);
531:	static int dmi_present(const u8 *);
322:	static void dmi_save_dev_pciaddr(int, int, int, int, const char *, int);
167:	static void dmi_save_ident(const struct dmi_header *, int, int);
239:	static void dmi_save_one_device(int, const char *);
594:	static int dmi_smbios3_present(const u8 *);
60:	static const char *dmi_string(const struct dmi_header *, u8);
40:	static const char *dmi_string_nosave(const struct dmi_header *, u8);
131:	static int dmi_walk_early(void (*)(const struct dmi_header *, void *));
484:	static int print_filtered(char *, size_t, const char *);
708:	static ssize_t raw_table_read(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
386:	static void save_mem_devices(const struct dmi_header *, void *);

File drivers/firmware/efi/apple-properties.c:
34:	static int dump_properties_enable(char *);
184:	static int map_properties(void);

File drivers/firmware/efi/capsule.c:
52:	bool efi_capsule_pending(int *);
87:	int efi_capsule_supported(efi_guid_t, u32, size_t, int *);
217:	int efi_capsule_update(efi_capsule_header_t *, phys_addr_t *);
288:	static int capsule_reboot_notify(struct notifier_block *, unsigned long, void *);
301:	static int capsule_reboot_register(void);

File drivers/firmware/efi/cper-x86.c:
256:	void cper_print_proc_ia(const char *, const struct cper_sec_proc_ia *);
86:	static enum err_types cper_get_err_type(const guid_t *);

File drivers/firmware/efi/cper.c:
559:	int cper_estatus_check(const struct acpi_hest_generic_status *);
546:	int cper_estatus_check_header(const struct acpi_hest_generic_status *);
523:	void cper_estatus_print(const char *, const struct acpi_hest_generic_status *);
290:	void cper_mem_err_pack(const struct cper_sec_mem_err *, struct cper_mem_err_compact *);
221:	const char *cper_mem_err_type_str(unsigned int);
310:	const char *cper_mem_err_unpack(struct trace_seq *, struct cper_mem_err_compact *);
47:	u64 cper_next_record_id(void);
96:	void cper_print_bits(const char *, unsigned int, const char * const *, unsigned int);
78:	const char *cper_severity_str(unsigned int);
270:	static int cper_dimm_err_location(struct cper_mem_err_compact *, char *);
442:	static void cper_estatus_print_section(const char *, struct acpi_hest_generic_data *, int);
228:	static int cper_mem_err_location(struct cper_mem_err_compact *, char *);
324:	static void cper_print_mem(const char *, const struct cper_sec_mem_err *, int);

File drivers/firmware/efi/dev-path-parser.c:
166:	struct device *efi_get_device_by_path(struct efi_dev_path **, size_t *);
27:	static int match_acpi_dev(struct device *, void *);
72:	static int match_pci_dev(struct device *, void *);

File drivers/firmware/efi/efi-bgrt.c:
30:	void efi_bgrt_init(struct acpi_table_header *);

File drivers/firmware/efi/efi.c:
451:	void efi_arch_mem_reserve(phys_addr_t, u64);
640:	int efi_config_init(efi_config_table_type_t *);
519:	int efi_config_parse_tables(void *, int, int, efi_config_table_type_t *);
969:	bool efi_is_table_address(unsigned long);
833:	char *efi_md_typeattr_format(char *, size_t, const efi_memory_desc_t *);
892:	u64 efi_mem_attributes(unsigned long);
444:	u64 efi_mem_desc_end(efi_memory_desc_t *);
413:	int efi_mem_desc_lookup(u64, efi_memory_desc_t *);
465:	void efi_mem_reserve(phys_addr_t, u64);
1017:	int efi_mem_reserve_persistent(phys_addr_t, u64);
916:	int efi_mem_type(unsigned long);
100:	bool efi_runtime_disabled(void);
933:	int efi_status_to_err(efi_status_t);
176:	static ssize_t config_table_show(struct kobject *, struct kobj_attribute *, char *);
199:	static umode_t efi_attr_is_visible(struct kobject *, struct attribute *, int);
999:	static int efi_mem_reserve_iomem(phys_addr_t, u64);
986:	static int efi_memreserve_map_root(void);
1076:	static int efi_memreserve_root_init(void);
341:	static int efisubsys_init(void);
254:	static int efivar_ssdt_iter(efi_char16_t *, efi_guid_t, unsigned long, void *);
244:	static int efivar_ssdt_setup(char *);
178:	static ssize_t fw_platform_size_show(struct kobject *, struct kobj_attribute *, char *);
174:	static ssize_t fw_vendor_show(struct kobject *, struct kobj_attribute *, char *);
498:	static int match_config_table(efi_guid_t *, unsigned long, efi_config_table_type_t *);
105:	static int parse_efi_cmdline(char *);
1121:	static int register_update_efi_random_seed(void);
175:	static ssize_t runtime_show(struct kobject *, struct kobj_attribute *, char *);
93:	static int setup_noefi(char *);
130:	static ssize_t systab_show(struct kobject *, struct kobj_attribute *, char *);
1087:	static int update_efi_random_seed(struct notifier_block *, unsigned long, void *);

File drivers/firmware/efi/esrt.c:
238:	void efi_esrt_init(void);
134:	static ssize_t capsule_flags_show(struct esre_entry *, char *);
91:	static ssize_t esre_attr_show(struct kobject *, struct attribute *, char *);
148:	static void esre_release(struct kobject *);
222:	static umode_t esrt_attr_is_visible(struct kobject *, struct attribute *, int);
375:	static int esrt_sysfs_init(void);
109:	static ssize_t fw_class_show(struct esre_entry *, char *);
203:	static ssize_t fw_resource_count_max_show(struct kobject *, struct kobj_attribute *, char *);
202:	static ssize_t fw_resource_count_show(struct kobject *, struct kobj_attribute *, char *);
204:	static ssize_t fw_resource_version_show(struct kobject *, struct kobj_attribute *, char *);
131:	static ssize_t fw_type_show(struct esre_entry *, char *);
132:	static ssize_t fw_version_show(struct esre_entry *, char *);
136:	static ssize_t last_attempt_status_show(struct esre_entry *, char *);
135:	static ssize_t last_attempt_version_show(struct esre_entry *, char *);
133:	static ssize_t lowest_supported_fw_version_show(struct esre_entry *, char *);

File drivers/firmware/efi/memattr.c:
130:	int efi_memattr_apply_permissions(struct mm_struct *, efi_memattr_perm_setter);
24:	int efi_memattr_init(void);

File drivers/firmware/efi/memmap.c:
42:	phys_addr_t efi_memmap_alloc(unsigned int);
111:	int efi_memmap_init_early(struct efi_memory_map_data *);
160:	int efi_memmap_init_late(phys_addr_t, unsigned long);
257:	void efi_memmap_insert(struct efi_memory_map *, void *, struct efi_mem_range *);
195:	int efi_memmap_install(phys_addr_t, unsigned int);
217:	int efi_memmap_split_count(efi_memory_desc_t *, struct range *);
119:	void efi_memmap_unmap(void);
69:	static int __efi_memmap_init(struct efi_memory_map_data *, bool);

File drivers/firmware/efi/reboot.c:
49:	bool efi_poweroff_required(void);
13:	void efi_reboot(enum reboot_mode, const char *);
54:	static void efi_power_off(void);
65:	static int efi_shutdown_init(void);

File drivers/firmware/efi/runtime-map.c:
144:	int efi_get_runtime_map_desc_size(void);
139:	int efi_get_runtime_map_size(void);
149:	int efi_runtime_map_copy(void *, size_t);
160:	int efi_runtime_map_init(struct kobject *);
50:	static ssize_t attribute_show(struct efi_runtime_map_entry *, char *);
57:	static ssize_t map_attr_show(struct kobject *, struct attribute *, char *);
88:	static void map_release(struct kobject *);
49:	static ssize_t num_pages_show(struct efi_runtime_map_entry *, char *);
47:	static ssize_t phys_addr_show(struct efi_runtime_map_entry *, char *);
34:	static ssize_t type_show(struct efi_runtime_map_entry *, char *);
48:	static ssize_t virt_addr_show(struct efi_runtime_map_entry *, char *);

File drivers/firmware/efi/runtime-wrappers.c:
131:	void efi_call_virt_check_flags(unsigned long, const char *);
123:	unsigned long efi_call_virt_save_flags(void);
490:	void efi_native_runtime_setup(void);
205:	static void efi_call_rts(struct work_struct *);
429:	static efi_status_t virt_efi_get_next_high_mono_count(u32 *);
344:	static efi_status_t virt_efi_get_next_variable(unsigned long *, efi_char16_t *, efi_guid_t *);
280:	static efi_status_t virt_efi_get_time(efi_time_t *, efi_time_cap_t *);
328:	static efi_status_t virt_efi_get_variable(efi_char16_t *, efi_guid_t *, u32 *, unsigned long *, void *);
302:	static efi_status_t virt_efi_get_wakeup_time(efi_bool_t *, efi_bool_t *, efi_time_t *);
472:	static efi_status_t virt_efi_query_capsule_caps(efi_capsule_header_t **, unsigned long, u64 *, int *);
391:	static efi_status_t virt_efi_query_variable_info(u32, u64 *, u64 *, u64 *);
410:	static efi_status_t virt_efi_query_variable_info_nonblocking(u32, u64 *, u64 *, u64 *);
441:	static void virt_efi_reset_system(int, efi_status_t, unsigned long, efi_char16_t *);
291:	static efi_status_t virt_efi_set_time(efi_time_t *);
358:	static efi_status_t virt_efi_set_variable(efi_char16_t *, efi_guid_t *, u32, unsigned long, void *);
375:	static efi_status_t virt_efi_set_variable_nonblocking(efi_char16_t *, efi_guid_t *, u32, unsigned long, void *);
316:	static efi_status_t virt_efi_set_wakeup_time(efi_bool_t, efi_time_t *);
455:	static efi_status_t virt_efi_update_capsule(efi_capsule_header_t **, unsigned long, unsigned long);

File drivers/firmware/efi/tpm.c:
19:	int efi_tpm_eventlog_init(void);

File drivers/firmware/efi/vars.c:
599:	int __efivar_entry_delete(struct efivar_entry *);
904:	int __efivar_entry_get(struct efivar_entry *, u32 *, unsigned long *, void *);
1098:	int __efivar_entry_iter(int (*)(struct efivar_entry *, void *), struct list_head *, void *, struct efivar_entry **);
539:	int efivar_entry_add(struct efivar_entry *, struct list_head *);
625:	int efivar_entry_delete(struct efivar_entry *);
827:	struct efivar_entry *efivar_entry_find(efi_char16_t *, efi_guid_t, struct list_head *, bool);
927:	int efivar_entry_get(struct efivar_entry *, u32 *, unsigned long *, void *);
1143:	int efivar_entry_iter(int (*)(struct efivar_entry *, void *), struct list_head *, void *);
1059:	int efivar_entry_iter_begin(void);
1070:	void efivar_entry_iter_end(void);
556:	int efivar_entry_remove(struct efivar_entry *);
672:	int efivar_entry_set(struct efivar_entry *, u32, unsigned long, void *, struct list_head *);
971:	int efivar_entry_set_get_size(struct efivar_entry *, u32, unsigned long *, void *, bool *);
761:	int efivar_entry_set_safe(efi_char16_t *, efi_guid_t, u32, bool, unsigned long, void *);
868:	int efivar_entry_size(struct efivar_entry *, unsigned long *);
439:	int efivar_init(int (*)(efi_char16_t *, efi_guid_t, unsigned long, void *), void *, bool, struct list_head *);
1176:	void efivar_run_worker(void);
254:	bool efivar_validate(efi_guid_t, efi_char16_t *, u8 *, unsigned long);
290:	bool efivar_variable_is_removable(efi_guid_t, const char *, size_t);
1164:	struct kobject *efivars_kobject(void);
1191:	int efivars_register(struct efivars *, const struct efivar_operations *, struct kobject *);
1218:	int efivars_unregister(struct efivars *);
578:	static void efivar_entry_list_del_unlock(struct efivar_entry *);
159:	static bool validate_ascii_string(efi_char16_t *, int, u8 *, unsigned long);
86:	static bool validate_boot_order(efi_char16_t *, int, u8 *, unsigned long);
53:	static bool validate_device_path(u8 *, unsigned long, int, efi_char16_t *);
97:	static bool validate_load_option(efi_char16_t *, int, u8 *, unsigned long);
148:	static bool validate_uint16(efi_char16_t *, int, u8 *, unsigned long);

File drivers/firmware/iscsi_ibft_find.c:
95:	unsigned long find_ibft_region(unsigned long *);

File drivers/firmware/memmap.c:
332:	int firmware_map_add_early(u64, u64, const char *);
290:	int firmware_map_add_hotplug(u64, u64, const char *);
353:	int firmware_map_remove(u64, u64, const char *);
184:	static int add_sysfs_fw_map_entry(struct firmware_map_entry *);
383:	static ssize_t end_show(struct firmware_map_entry *, char *);
150:	static int firmware_map_add_entry(u64, u64, const char *, struct firmware_map_entry *);
227:	static struct firmware_map_entry *firmware_map_find_entry_in_list(u64, u64, const char *, struct list_head *);
416:	static int firmware_memmap_init(void);
399:	static ssize_t memmap_attr_show(struct kobject *, struct attribute *, char *);
106:	static void release_firmware_map_entry(struct kobject *);
377:	static ssize_t start_show(struct firmware_map_entry *, char *);
389:	static ssize_t type_show(struct firmware_map_entry *, char *);

File drivers/firmware/qemu_fw_cfg.c:
201:	static void fw_cfg_io_cleanup(void);
562:	static void fw_cfg_kset_unregister_recursive(struct kset *);
131:	static ssize_t fw_cfg_read_blob(u16, void *, loff_t, size_t);
299:	static ssize_t fw_cfg_showrev(struct kobject *, struct attribute *, char *);
432:	static ssize_t fw_cfg_sysfs_attr_show(struct kobject *, struct attribute *, char *);
385:	static void fw_cfg_sysfs_cache_cleanup(void);
928:	static void fw_cfg_sysfs_exit(void);
912:	static int fw_cfg_sysfs_init(void);
675:	static int fw_cfg_sysfs_probe(struct platform_device *);
462:	static ssize_t fw_cfg_sysfs_read_raw(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
446:	static void fw_cfg_sysfs_release_entry(struct kobject *);
735:	static int fw_cfg_sysfs_remove(struct platform_device *);
410:	static ssize_t fw_cfg_sysfs_show_key(struct fw_cfg_sysfs_entry *, char *);
415:	static ssize_t fw_cfg_sysfs_show_name(struct fw_cfg_sysfs_entry *, char *);
405:	static ssize_t fw_cfg_sysfs_show_size(struct fw_cfg_sysfs_entry *, char *);

File drivers/gpio/devres.c:
185:	struct gpio_desc *devm_fwnode_get_index_gpiod_from_child(struct device *, const char *, int, struct fwnode_handle *, enum gpiod_flags, const char *);
441:	void devm_gpio_free(struct device *, unsigned int);
379:	int devm_gpio_request(struct device *, unsigned int, const char *);
408:	int devm_gpio_request_one(struct device *, unsigned int, unsigned long, const char *);
64:	struct gpio_desc *devm_gpiod_get(struct device *, const char *, enum gpiod_flags);
265:	struct gpio_descs *devm_gpiod_get_array(struct device *, const char *, enum gpiod_flags);
302:	struct gpio_descs *devm_gpiod_get_array_optional(struct device *, const char *, enum gpiod_flags);
142:	struct gpio_desc *devm_gpiod_get_from_of_node(struct device *, struct device_node *, const char *, int, enum gpiod_flags, const char *);
101:	struct gpio_desc *devm_gpiod_get_index(struct device *, const char *, unsigned int, enum gpiod_flags);
238:	struct gpio_desc *devm_gpiod_get_index_optional(struct device *, const char *, unsigned int, enum gpiod_flags);
82:	struct gpio_desc *devm_gpiod_get_optional(struct device *, const char *, enum gpiod_flags);
324:	void devm_gpiod_put(struct device *, struct gpio_desc *);
340:	void devm_gpiod_put_array(struct device *, struct gpio_descs *);
357:	static int devm_gpio_match(struct device *, void *, void *);
350:	static void devm_gpio_release(struct device *, void *);
33:	static int devm_gpiod_match(struct device *, void *, void *);
47:	static int devm_gpiod_match_array(struct device *, void *, void *);
26:	static void devm_gpiod_release(struct device *, void *);
40:	static void devm_gpiod_release_array(struct device *, void *);

File drivers/gpio/gpiolib-acpi.c:
1238:	bool acpi_can_fallback_to_crs(struct acpi_device *, const char *);
393:	int acpi_dev_add_driver_gpios(struct acpi_device *, const struct acpi_gpio_mapping *);
810:	int acpi_dev_gpio_irq_get(struct acpi_device *, int);
703:	struct gpio_desc *acpi_find_gpio(struct device *, const char *, unsigned int, enum gpiod_flags *, enum gpio_lookup_flags *);
1183:	int acpi_gpio_count(struct device *, const char *);
146:	bool acpi_gpio_get_irq_resource(struct acpi_resource *, struct acpi_resource_gpio **);
516:	int acpi_gpio_update_gpiod_flags(enum gpiod_flags *, struct acpi_gpio_info *);
1078:	void acpi_gpiochip_add(struct gpio_chip *);
349:	void acpi_gpiochip_free_interrupts(struct gpio_chip *);
1117:	void acpi_gpiochip_remove(struct gpio_chip *);
307:	void acpi_gpiochip_request_interrupts(struct gpio_chip *);
767:	struct gpio_desc *acpi_node_get_gpiod(struct fwnode_handle *, const char *, int, struct acpi_gpio_info *);
409:	int devm_acpi_dev_add_driver_gpios(struct device *, const struct acpi_gpio_mapping *);
429:	void devm_acpi_dev_remove_driver_gpios(struct device *);
1166:	static int acpi_find_gpio_count(struct acpi_resource *, void *);
670:	static struct gpio_desc *acpi_get_gpiod_by_index(struct acpi_device *, const char *, int, struct acpi_gpio_info *);
859:	static acpi_status acpi_gpio_adr_space_handler(u32, acpi_physical_address, u32, u64 *, void *, void *);
141:	static void acpi_gpio_chip_dh(acpi_handle, void *);
1248:	static int acpi_gpio_handle_deferred_request_irqs(void);
123:	static irqreturn_t acpi_gpio_irq_handler(int, void *);
132:	static irqreturn_t acpi_gpio_irq_handler_evt(int, void *);
608:	static int acpi_gpio_property_lookup(struct fwnode_handle *, const char *, int, struct acpi_gpio_lookup *);
583:	static int acpi_gpio_resource_lookup(struct acpi_gpio_lookup *, struct acpi_gpio_info *);
1293:	static int acpi_gpio_setup_params(void);
200:	static acpi_status acpi_gpiochip_alloc_event(struct acpi_resource *, void *);
88:	static int acpi_gpiochip_find(struct gpio_chip *, void *);
163:	static void acpi_gpiochip_request_irq(struct acpi_gpio_event *, struct acpi_gpio_chip *);
544:	static int acpi_populate_gpio_lookup(struct acpi_resource *, void *);
404:	static void devm_acpi_dev_release_driver_gpios(struct device *, void *);

File drivers/gpio/gpiolib-devprop.c:
29:	void devprop_gpiochip_set_names(struct gpio_chip *, const struct fwnode_handle *);

File drivers/gpio/gpiolib-legacy.c:
8:	void gpio_free(unsigned int);
107:	void gpio_free_array(const struct gpio *, size_t);
67:	int gpio_request(unsigned int, const char *);
84:	int gpio_request_array(const struct gpio *, size_t);
20:	int gpio_request_one(unsigned int, unsigned long, const char *);

File drivers/gpio/gpiolib-sysfs.c:
745:	int gpiochip_sysfs_register(struct gpio_device *);
784:	void gpiochip_sysfs_unregister(struct gpio_device *);
571:	int gpiod_export(struct gpio_desc *, bool);
674:	int gpiod_export_link(struct device *, const char *, struct gpio_desc *);
702:	void gpiod_unexport(struct gpio_desc *);
329:	static ssize_t active_low_show(struct device *, struct device_attribute *, char *);
346:	static ssize_t active_low_store(struct device *, struct device_attribute *, const char *, size_t);
412:	static ssize_t base_show(struct device *, struct device_attribute *, char *);
58:	static ssize_t direction_show(struct device *, struct device_attribute *, char *);
77:	static ssize_t direction_store(struct device *, struct device_attribute *, const char *, size_t);
241:	static ssize_t edge_show(struct device *, struct device_attribute *, char *);
262:	static ssize_t edge_store(struct device *, struct device_attribute *, const char *, size_t);
458:	static ssize_t export_store(struct class *, struct class_attribute *, const char *, size_t);
365:	static umode_t gpio_is_visible(struct kobject *, struct attribute *, int);
220:	static void gpio_sysfs_free_irq(struct device *);
154:	static irqreturn_t gpio_sysfs_irq(int, void *);
164:	static int gpio_sysfs_request_irq(struct device *, unsigned char);
808:	static int gpiolib_sysfs_init(void);
421:	static ssize_t label_show(struct device *, struct device_attribute *, char *);
656:	static int match_export(struct device *, const void *);
430:	static ssize_t ngpio_show(struct device *, struct device_attribute *, char *);
505:	static ssize_t unexport_store(struct class *, struct class_attribute *, const char *, size_t);
101:	static ssize_t value_show(struct device *, struct device_attribute *, char *);
123:	static ssize_t value_store(struct device *, struct device_attribute *, const char *, size_t);

File drivers/gpio/gpiolib.c:
160:	int desc_to_gpio(const struct gpio_desc *);
1576:	int devm_gpiochip_add_data(struct device *, struct gpio_chip *, void *);
1607:	void devm_gpiochip_remove(struct device *, struct gpio_chip *);
4115:	struct gpio_desc *fwnode_get_named_gpiod(struct fwnode_handle *, const char *, int, enum gpiod_flags, const char *);
105:	struct gpio_desc *gpio_to_desc(unsigned int);
1270:	int gpiochip_add_data_with_key(struct gpio_chip *, void *, struct lock_class_key *, struct lock_class_key *);
2250:	int gpiochip_add_pin_range(struct gpio_chip *, const char *, unsigned int, unsigned int, unsigned int);
2192:	int gpiochip_add_pingroup_range(struct gpio_chip *, struct pinctrl_dev *, unsigned int, const char *);
1628:	struct gpio_chip *gpiochip_find(void *, int (*)(struct gpio_chip *, void *));
2544:	void gpiochip_free_own_desc(struct gpio_desc *);
2171:	int gpiochip_generic_config(struct gpio_chip *, unsigned int, unsigned long);
2159:	void gpiochip_generic_free(struct gpio_chip *, unsigned int);
2148:	int gpiochip_generic_request(struct gpio_chip *, unsigned int);
1482:	void *gpiochip_get_data(struct gpio_chip *);
139:	struct gpio_desc *gpiochip_get_desc(struct gpio_chip *, u16);
1798:	int gpiochip_irq_map(struct irq_domain *, unsigned int, irq_hw_number_t);
1838:	void gpiochip_irq_unmap(struct irq_domain *, unsigned int);
2051:	int gpiochip_irqchip_add_key(struct gpio_chip *, struct irq_chip *, unsigned int, irq_flow_handler_t, unsigned int, bool, struct lock_class_key *, struct lock_class_key *);
1685:	bool gpiochip_irqchip_irq_valid(const struct gpio_chip *, unsigned int);
2487:	const char *gpiochip_is_requested(struct gpio_chip *, unsigned int);
3430:	bool gpiochip_line_is_irq(struct gpio_chip *, unsigned int);
3439:	bool gpiochip_line_is_open_drain(struct gpio_chip *, unsigned int);
3448:	bool gpiochip_line_is_open_source(struct gpio_chip *, unsigned int);
3457:	bool gpiochip_line_is_persistent(struct gpio_chip *, unsigned int);
405:	bool gpiochip_line_is_valid(const struct gpio_chip *, unsigned int);
3363:	int gpiochip_lock_as_irq(struct gpio_chip *, unsigned int);
1494:	void gpiochip_remove(struct gpio_chip *);
2294:	void gpiochip_remove_pin_ranges(struct gpio_chip *);
2518:	struct gpio_desc *gpiochip_request_own_desc(struct gpio_chip *, u16, const char *);
1757:	void gpiochip_set_chained_irqchip(struct gpio_chip *, struct irq_chip *, unsigned int, irq_flow_handler_t);
1779:	void gpiochip_set_nested_irqchip(struct gpio_chip *, struct irq_chip *, unsigned int);
3414:	void gpiochip_unlock_as_irq(struct gpio_chip *, unsigned int);
3687:	void gpiod_add_hogs(struct gpiod_hog *);
3659:	void gpiod_add_lookup_table(struct gpiod_lookup_table *);
3620:	void gpiod_add_lookup_tables(struct gpiod_lookup_table **, size_t);
3292:	int gpiod_cansleep(const struct gpio_desc *);
3907:	int gpiod_configure_flags(struct gpio_desc *, const char *, unsigned long, enum gpiod_flags);
3843:	int gpiod_count(struct device *, const char *);
2570:	int gpiod_direction_input(struct gpio_desc *);
2674:	int gpiod_direction_output(struct gpio_desc *, int);
2655:	int gpiod_direction_output_raw(struct gpio_desc *, int);
2464:	void gpiod_free(struct gpio_desc *);
3869:	struct gpio_desc *gpiod_get(struct device *, const char *, enum gpiod_flags);
4265:	struct gpio_descs *gpiod_get_array(struct device *, const char *, enum gpiod_flags);
4304:	struct gpio_descs *gpiod_get_array_optional(struct device *, const char *, enum gpiod_flags);
3024:	int gpiod_get_array_value(unsigned int, struct gpio_desc **, int *);
3544:	int gpiod_get_array_value_cansleep(unsigned int, struct gpio_desc **, int *);
2877:	int gpiod_get_array_value_complex(bool, bool, unsigned int, struct gpio_desc **, int *);
211:	int gpiod_get_direction(struct gpio_desc *);
4038:	struct gpio_desc *gpiod_get_from_of_node(struct device_node *, const char *, int, enum gpiod_flags, const char *);
3966:	struct gpio_desc *gpiod_get_index(struct device *, const char *, unsigned int, enum gpiod_flags);
4173:	struct gpio_desc *gpiod_get_index_optional(struct device *, const char *, unsigned int, enum gpiod_flags);
3886:	struct gpio_desc *gpiod_get_optional(struct device *, const char *, enum gpiod_flags);
3002:	int gpiod_get_raw_array_value(unsigned int, struct gpio_desc **, int *);
3521:	int gpiod_get_raw_array_value_cansleep(unsigned int, struct gpio_desc **, int *);
2951:	int gpiod_get_raw_value(const struct gpio_desc *);
3475:	int gpiod_get_raw_value_cansleep(const struct gpio_desc *);
2970:	int gpiod_get_value(const struct gpio_desc *);
3492:	int gpiod_get_value_cansleep(const struct gpio_desc *);
4198:	int gpiod_hog(struct gpio_desc *, const char *, unsigned long, enum gpiod_flags);
2815:	int gpiod_is_active_low(const struct gpio_desc *);
4324:	void gpiod_put(struct gpio_desc *);
4334:	void gpiod_put_array(struct gpio_descs *);
3673:	void gpiod_remove_lookup_table(struct gpiod_lookup_table *);
2408:	int gpiod_request(struct gpio_desc *, const char *);
3277:	void gpiod_set_array_value(unsigned int, struct gpio_desc **, int *);
3643:	void gpiod_set_array_value_cansleep(unsigned int, struct gpio_desc **, int *);
3116:	int gpiod_set_array_value_complex(bool, bool, unsigned int, struct gpio_desc **, int *);
3304:	int gpiod_set_consumer_name(struct gpio_desc *, const char *);
2746:	int gpiod_set_debounce(struct gpio_desc *, unsigned int);
3255:	int gpiod_set_raw_array_value(unsigned int, struct gpio_desc **, int *);
3603:	int gpiod_set_raw_array_value_cansleep(unsigned int, struct gpio_desc **, int *);
3193:	void gpiod_set_raw_value(struct gpio_desc *, int);
3566:	void gpiod_set_raw_value_cansleep(struct gpio_desc *, int);
2773:	int gpiod_set_transitory(struct gpio_desc *, bool);
3234:	void gpiod_set_value(struct gpio_desc *, int);
3584:	void gpiod_set_value_cansleep(struct gpio_desc *, int);
171:	struct gpio_chip *gpiod_to_chip(const struct gpio_desc *);
3327:	int gpiod_to_irq(const struct gpio_desc *);
1548:	static int devm_gpio_chip_match(struct device *, void *, void *);
1541:	static void devm_gpio_chip_release(struct device *, void *);
1138:	static int gpio_chrdev_open(struct inode *, struct file *);
1158:	static int gpio_chrdev_release(struct inode *, struct file *);
1040:	static long gpio_ioctl(struct file *, unsigned int, unsigned long);
1125:	static long gpio_ioctl_compat(struct file *, unsigned int, unsigned long);
3039:	static void gpio_set_open_drain_value_commit(struct gpio_desc *, bool);
3064:	static void gpio_set_open_source_value_commit(struct gpio_desc *, bool);
356:	static unsigned long *gpiochip_allocate_mask(struct gpio_chip *);
4243:	static void gpiochip_free_hogs(struct gpio_chip *, struct gpio_chip *);
1875:	static void gpiochip_irq_relres(struct irq_data *);
1856:	static int gpiochip_irq_reqres(struct irq_data *);
1985:	static void gpiochip_irqchip_remove(struct gpio_chip *);
1222:	static void gpiochip_machine_hog(struct gpiod_hog *, struct gpio_chip *, struct gpio_chip *);
1649:	static int gpiochip_match_name(struct gpio_chip *, void *);
1707:	static void gpiochip_set_cascaded_irqchip(struct gpio_chip *, unsigned int, struct irq_chip *, irq_flow_handler_t);
1190:	static int gpiochip_setup_dev(struct gpio_device *);
1883:	static int gpiochip_to_irq(struct gpio_chip *, unsigned int);
2611:	static int gpiod_direction_output_raw_commit(struct gpio_desc *, int);
3710:	static struct gpiod_lookup_table *gpiod_find_lookup_table(struct device *);
2430:	static bool gpiod_free_commit(struct gpio_desc *);
2314:	static int gpiod_request_commit(struct gpio_desc *, const char *);
3211:	static void gpiod_set_value_nocheck(struct gpio_desc *, int);
1179:	static void gpiodevice_release(struct device *);
4496:	static int gpiolib_debugfs_init(void);
4345:	static int gpiolib_dev_init(void);
4483:	static int gpiolib_open(struct inode *, struct file *);
4419:	static void *gpiolib_seq_next(struct seq_file *, void *, loff_t *);
4442:	static int gpiolib_seq_show(struct seq_file *, void *);
4400:	static void *gpiolib_seq_start(struct seq_file *, loff_t *);
4438:	static void gpiolib_seq_stop(struct seq_file *, void *);
786:	static long lineevent_ioctl(struct file *, unsigned int, unsigned long);
816:	static long lineevent_ioctl_compat(struct file *, unsigned int, unsigned long);
880:	static irqreturn_t lineevent_irq_handler(int, void *);
835:	static irqreturn_t lineevent_irq_thread(int, void *);
713:	static __poll_t lineevent_poll(struct file *, struct poll_table_struct *);
728:	static ssize_t lineevent_read(struct file *, char *, size_t, loff_t *);
773:	static int lineevent_release(struct inode *, struct file *);
524:	static int linehandle_create(struct gpio_device *, void *);
440:	static long linehandle_ioctl(struct file *, unsigned int, unsigned long);
493:	static long linehandle_ioctl_compat(struct file *, unsigned int, unsigned long);
500:	static int linehandle_release(struct inode *, struct file *);
2376:	static int validate_desc(const struct gpio_desc *, const char *);

File drivers/gpu/drm/drm_mipi_dsi.c:
327:	int mipi_dsi_attach(struct mipi_dsi_device *);
444:	int mipi_dsi_create_packet(struct mipi_dsi_packet *, const struct mipi_dsi_msg *);
847:	int mipi_dsi_dcs_enter_sleep_mode(struct mipi_dsi_device *);
866:	int mipi_dsi_dcs_exit_sleep_mode(struct mipi_dsi_device *);
1080:	int mipi_dsi_dcs_get_display_brightness(struct mipi_dsi_device *, u16 *);
823:	int mipi_dsi_dcs_get_pixel_format(struct mipi_dsi_device *, u8 *);
798:	int mipi_dsi_dcs_get_power_mode(struct mipi_dsi_device *, u8 *);
760:	int mipi_dsi_dcs_nop(struct mipi_dsi_device *);
738:	ssize_t mipi_dsi_dcs_read(struct mipi_dsi_device *, u8, void *, size_t);
925:	int mipi_dsi_dcs_set_column_address(struct mipi_dsi_device *, u16, u16);
1057:	int mipi_dsi_dcs_set_display_brightness(struct mipi_dsi_device *, u16);
885:	int mipi_dsi_dcs_set_display_off(struct mipi_dsi_device *);
904:	int mipi_dsi_dcs_set_display_on(struct mipi_dsi_device *);
949:	int mipi_dsi_dcs_set_page_address(struct mipi_dsi_device *, u16, u16);
1014:	int mipi_dsi_dcs_set_pixel_format(struct mipi_dsi_device *, u8);
971:	int mipi_dsi_dcs_set_tear_off(struct mipi_dsi_device *);
991:	int mipi_dsi_dcs_set_tear_on(struct mipi_dsi_device *, enum mipi_dsi_dcs_tear_mode);
1035:	int mipi_dsi_dcs_set_tear_scanline(struct mipi_dsi_device *, u16);
778:	int mipi_dsi_dcs_soft_reset(struct mipi_dsi_device *);
698:	ssize_t mipi_dsi_dcs_write(struct mipi_dsi_device *, u8, const void *, size_t);
655:	ssize_t mipi_dsi_dcs_write_buffer(struct mipi_dsi_device *, const void *, size_t);
342:	int mipi_dsi_detach(struct mipi_dsi_device *);
205:	struct mipi_dsi_device *mipi_dsi_device_register_full(struct mipi_dsi_host *, const struct mipi_dsi_device_info *);
248:	void mipi_dsi_device_unregister(struct mipi_dsi_device *);
1129:	int mipi_dsi_driver_register_full(struct mipi_dsi_driver *, struct module *);
1152:	void mipi_dsi_driver_unregister(struct mipi_dsi_driver *);
611:	ssize_t mipi_dsi_generic_read(struct mipi_dsi_device *, const void *, size_t, void *, size_t);
566:	ssize_t mipi_dsi_generic_write(struct mipi_dsi_device *, const void *, size_t);
285:	int mipi_dsi_host_register(struct mipi_dsi_host *);
313:	void mipi_dsi_host_unregister(struct mipi_dsi_host *);
411:	bool mipi_dsi_packet_format_is_long(u8);
374:	bool mipi_dsi_packet_format_is_short(u8);
538:	int mipi_dsi_set_maximum_return_packet_size(struct mipi_dsi_device *, u16);
495:	int mipi_dsi_shutdown_peripheral(struct mipi_dsi_device *);
515:	int mipi_dsi_turn_on_peripheral(struct mipi_dsi_device *);
109:	struct mipi_dsi_device *of_find_mipi_dsi_device_by_node(struct device_node *);
266:	struct mipi_dsi_host *of_find_mipi_dsi_host_by_node(struct device_node *);
1158:	static int mipi_dsi_bus_init(void);
119:	static void mipi_dsi_dev_release(struct device *);
48:	static int mipi_dsi_device_match(struct device *, struct device_driver *);
353:	static ssize_t mipi_dsi_device_transfer(struct mipi_dsi_msg *, struct mipi_dsi_device *, struct mipi_dsi_device *);
1098:	static int mipi_dsi_drv_probe(struct device *);
1106:	static int mipi_dsi_drv_remove(struct device *);
1114:	static void mipi_dsi_drv_shutdown(struct device *);
304:	static int mipi_dsi_remove_device_fn(struct device *, void *);
63:	static int mipi_dsi_uevent(struct device *, struct kobj_uevent_env *);
96:	static int of_device_match(struct device *, void *);

File drivers/gpu/drm/drm_panel_orientation_quirks.c:
208:	int drm_get_panel_orientation_quirk(int, int);

File drivers/gpu/vga/vga_switcheroo.c:
528:	void vga_switcheroo_client_fb_set(struct pci_dev *, struct fb_info *);
439:	bool vga_switcheroo_client_probe_defer(struct pci_dev *);
1104:	void vga_switcheroo_fini_domain_pm_ops(struct device *);
477:	enum vga_switcheroo_state vga_switcheroo_get_client_state(struct pci_dev *);
286:	enum vga_switcheroo_handler_flags_t vga_switcheroo_handler_flags(void);
1087:	int vga_switcheroo_init_domain_pm_ops(struct device *, struct dev_pm_domain *);
560:	int vga_switcheroo_lock_ddc(struct pci_dev *);
961:	int vga_switcheroo_process_delayed_switch(void);
363:	int vga_switcheroo_register_audio_client(struct pci_dev *, const struct vga_switcheroo_client_ops *, struct pci_dev *);
340:	int vga_switcheroo_register_client(struct pci_dev *, const struct vga_switcheroo_client_ops *, bool);
236:	int vga_switcheroo_register_handler(const struct vga_switcheroo_handler *, enum vga_switcheroo_handler_flags_t);
592:	int vga_switcheroo_unlock_ddc(struct pci_dev *);
499:	void vga_switcheroo_unregister_client(struct pci_dev *);
262:	void vga_switcheroo_unregister_handler(void);
768:	static bool check_can_switch(void);
292:	static int register_client(struct pci_dev *, const struct vga_switcheroo_client_ops *, enum vga_switcheroo_client_id, struct pci_dev *, bool, bool);
697:	static void set_audio_state(enum vga_switcheroo_client_id, enum vga_switcheroo_state);
668:	static int vga_switcheroo_debugfs_open(struct inode *, struct file *);
782:	static ssize_t vga_switcheroo_debugfs_write(struct file *, const char *, size_t, loff_t *);
187:	static void vga_switcheroo_enable(void);
1020:	static void vga_switcheroo_power_switch(struct pci_dev *, enum vga_switcheroo_state);
456:	static enum vga_switcheroo_state vga_switcheroo_pwr_state(struct vga_switcheroo_client *, struct vga_switcheroo_client *, struct vga_switcheroo_client *);
1059:	static int vga_switcheroo_runtime_resume(struct device *);
1039:	static int vga_switcheroo_runtime_suspend(struct device *);
647:	static int vga_switcheroo_show(struct seq_file *, void *);
685:	static int vga_switchoff(struct vga_switcheroo_client *);
673:	static int vga_switchon(struct vga_switcheroo_client *);
708:	static int vga_switchto_stage1(struct vga_switcheroo_client *);
724:	static int vga_switchto_stage2(struct vga_switcheroo_client *);

File drivers/gpu/vga/vgaarb.c:
831:	int vga_client_register(struct pci_dev *, void *, void (*)(void *, bool), unsigned int (*)(void *, bool));
156:	struct pci_dev *vga_default_device(void);
416:	int vga_get(struct pci_dev *, unsigned int, int);
520:	void vga_put(struct pci_dev *, unsigned int);
162:	void vga_set_default_device(struct pci_dev *);
794:	void vga_set_legacy_decoding(struct pci_dev *, unsigned int);
483:	int vga_tryget(struct pci_dev *, unsigned int);
342:	static void __vga_put(struct vga_device *, unsigned int);
765:	static void __vga_set_legacy_decoding(struct pci_dev *, unsigned int, bool);
192:	static struct vga_device *__vga_tryget(struct vga_device *, unsigned int);
1366:	static int pci_notify(struct notifier_block *, unsigned long, void *);
1478:	static int vga_arb_device_init(void);
1269:	static __poll_t vga_arb_fpoll(struct file *, poll_table *);
1277:	static int vga_arb_open(struct inode *, struct file *);
954:	static ssize_t vga_arb_read(struct file *, char *, size_t, loff_t *);
1304:	static int vga_arb_release(struct inode *, struct file *);
1021:	static ssize_t vga_arb_write(struct file *, const char *, size_t, loff_t *);
605:	static bool vga_arbiter_add_pci_device(struct pci_dev *);
1341:	static void vga_arbiter_notify_clients(void);
100:	static int vga_str_to_iostate(char *, int *, int);

File drivers/hid/hid-core.c:
2350:	int __hid_register_driver(struct hid_driver *, struct module *, const char *);
1521:	void __hid_request(struct hid_device *, struct hid_report *, int);
2196:	int hid_add_device(struct hid_device *);
1454:	u8 *hid_alloc_report_buf(struct hid_report *, gfp_t);
2266:	struct hid_device *hid_allocate_device(void);
2382:	int hid_check_keys_pressed(struct hid_device *);
2035:	bool hid_compare_device_paths(struct hid_device *, struct hid_device *, char);
1738:	int hid_connect(struct hid_device *, unsigned int);
2312:	void hid_destroy_device(struct hid_device *);
1832:	void hid_disconnect(struct hid_device *);
1184:	__u32 hid_field_extract(const struct hid_device *, u8 *, unsigned int, unsigned int);
1924:	void hid_hw_close(struct hid_device *);
1896:	int hid_hw_open(struct hid_device *);
1854:	int hid_hw_start(struct hid_device *, unsigned int);
1881:	void hid_hw_stop(struct hid_device *);
1617:	int hid_input_report(struct hid_device *, int, u8 *, u32, int);
1999:	const struct hid_device_id *hid_match_device(struct hid_device *, struct hid_driver *);
1677:	const struct hid_device_id *hid_match_id(const struct hid_device *, const struct hid_device_id *);
1668:	bool hid_match_one_id(const struct hid_device *, const struct hid_device_id *);
1013:	int hid_open_report(struct hid_device *);
1438:	void hid_output_report(struct hid_report *, __u8 *);
923:	int hid_parse_report(struct hid_device *, __u8 *, unsigned int);
60:	struct hid_report *hid_register_report(struct hid_device *, unsigned int, unsigned int, unsigned int);
1552:	int hid_report_raw_event(struct hid_device *, int, u8 *, u32, int);
1473:	int hid_set_field(struct hid_field *, unsigned int, __s32);
1133:	s32 hid_snto32(__u32, unsigned int);
2373:	void hid_unregister_driver(struct hid_driver *);
950:	struct hid_report *hid_validate_values(struct hid_device *, unsigned int, unsigned int, unsigned int, unsigned int);
2345:	static int __bus_removed_driver(struct device_driver *, void *);
2333:	static int __hid_bus_driver_added(struct device_driver *, void *);
2320:	static int __hid_bus_reprobe_drivers(struct device *, void *);
708:	static u8 *fetch_item(__u8 *, __u8 *, struct hid_item *);
257:	static int hid_add_field(struct hid_parser *, unsigned int, unsigned int);
230:	static int hid_add_usage(struct hid_parser *, unsigned int, u8);
2017:	static int hid_bus_match(struct device *, struct device_driver *);
661:	static void hid_close_report(struct hid_device *);
565:	static void hid_concatenate_last_usage_page(struct hid_parser *);
2048:	static int hid_device_probe(struct device *);
694:	static void hid_device_release(struct device *);
2109:	static int hid_device_remove(struct device *);
2428:	static void hid_exit(void);
1500:	static struct hid_report *hid_get_report(struct hid_report_enum *, const u8 *);
2401:	static int hid_init(void);
360:	static int hid_parser_global(struct hid_parser *, struct hid_item *);
466:	static int hid_parser_local(struct hid_parser *, struct hid_item *);
597:	static int hid_parser_main(struct hid_parser *, struct hid_item *);
636:	static int hid_parser_reserved(struct hid_parser *, struct hid_item *);
1314:	static void hid_process_event(struct hid_device *, struct hid_field *, struct hid_usage *, __s32, int);
812:	static int hid_scan_main(struct hid_parser *, struct hid_item *);
2161:	static int hid_uevent(struct device *, struct kobj_uevent_env *);
1230:	static void implement(const struct hid_device *, u8 *, unsigned int, unsigned int, u32);
2137:	static ssize_t modalias_show(struct device *, struct device_attribute *, char *);
1947:	static ssize_t new_id_store(struct device_driver *, const char *, size_t);
1700:	static ssize_t read_report_descriptor(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
1719:	static ssize_t show_country(struct device *, struct device_attribute *, char *);
1123:	static s32 snto32(__u32, unsigned int);

File drivers/hid/hid-debug.c:
663:	void hid_debug_event(struct hid_device *, char *);
1235:	void hid_debug_exit(void);
1230:	void hid_debug_init(void);
1211:	void hid_debug_register(struct hid_device *, const char *);
1221:	void hid_debug_unregister(struct hid_device *);
632:	void hid_dump_device(struct hid_device *, struct seq_file *);
534:	void hid_dump_field(struct hid_field *, int, struct seq_file *);
707:	void hid_dump_input(struct hid_device *, struct hid_usage *, __s32);
677:	void hid_dump_report(struct hid_device *, int, u8 *, int);
485:	char *hid_resolv_usage(unsigned int, struct seq_file *);
1080:	static int hid_debug_events_open(struct inode *, struct file *);
1168:	static __poll_t hid_debug_events_poll(struct file *, poll_table *);
1108:	static ssize_t hid_debug_events_read(struct file *, char *, size_t, loff_t *);
1180:	static int hid_debug_events_release(struct inode *, struct file *);
1075:	static int hid_debug_rdesc_open(struct inode *, struct file *);
1045:	static int hid_debug_rdesc_show(struct seq_file *, void *);

File drivers/hid/hid-generic.c:
29:	static int __check_hid_generic(struct device_driver *, void *);
85:	static void hid_generic_exit(void);
85:	static int hid_generic_init(void);
40:	static bool hid_generic_match(struct hid_device *, bool);
59:	static int hid_generic_probe(struct hid_device *, const struct hid_device_id *);

File drivers/hid/hid-input.c:
211:	__s32 hidinput_calc_abs_res(const struct hid_field *, __u16);
1738:	int hidinput_connect(struct hid_device *, unsigned int);
1409:	unsigned int hidinput_count_leds(struct hid_device *);
1839:	void hidinput_disconnect(struct hid_device *);
1372:	int hidinput_find_field(struct hid_device *, unsigned int, unsigned int, struct hid_field **);
1389:	struct hid_field *hidinput_get_led_field(struct hid_device *);
1228:	void hidinput_hid_event(struct hid_device *, struct hid_field *, struct hid_usage *, __s32);
1360:	void hidinput_report_event(struct hid_device *, struct hid_report *);
1510:	static void hidinput_close(struct input_dev *);
571:	static void hidinput_configure_usage(struct hid_input *, struct hid_field *, struct hid_usage *);
97:	static struct hid_usage *hidinput_find_key(struct hid_device *, hid_usage_cmp_t, unsigned int, unsigned int *);
381:	static int hidinput_get_battery_property(struct power_supply *, enum power_supply_property, union power_supply_propval *);
143:	static int hidinput_getkeycode(struct input_dev *, struct input_keymap_entry *);
1479:	static int hidinput_input_event(struct input_dev *, unsigned int, unsigned int, int);
1431:	static void hidinput_led_worker(struct work_struct *);
126:	static struct hid_usage *hidinput_locate_usage(struct hid_device *, const struct input_keymap_entry *, unsigned int *);
1503:	static int hidinput_open(struct input_dev *);
360:	static int hidinput_query_battery_capacity(struct hid_device *);
164:	static int hidinput_setkeycode(struct input_dev *, const struct input_keymap_entry *, unsigned int *);
443:	static int hidinput_setup_battery(struct hid_device *, unsigned int, struct hid_field *);
88:	static bool match_index(struct hid_usage *, unsigned int, unsigned int);
79:	static bool match_keycode(struct hid_usage *, unsigned int, unsigned int);
73:	static bool match_scancode(struct hid_usage *, unsigned int, unsigned int);

File drivers/hid/hid-magicmouse.c:
594:	static void magicmouse_driver_exit(void);
594:	static int magicmouse_driver_init(void);
182:	static void magicmouse_emit_touch(struct magicmouse_sc *, int, u8 *);
475:	static int magicmouse_input_configured(struct hid_device *, struct hid_input *);
458:	static int magicmouse_input_mapping(struct hid_device *, struct hid_input *, struct hid_field *, struct hid_usage *, unsigned long **, int *);
494:	static int magicmouse_probe(struct hid_device *, const struct hid_device_id *);
281:	static int magicmouse_raw_event(struct hid_device *, struct hid_report *, u8 *, int);
37:	static int param_set_scroll_speed(const char *, const struct kernel_param *);

File drivers/hid/hid-ntrig.c:
1034:	static void ntrig_driver_exit(void);
1034:	static int ntrig_driver_init(void);
570:	static int ntrig_event(struct hid_device *, struct hid_field *, struct hid_usage *, __s32);
862:	static int ntrig_input_configured(struct hid_device *, struct hid_input *);
549:	static int ntrig_input_mapped(struct hid_device *, struct hid_input *, struct hid_field *, struct hid_usage *, unsigned long **, int *);
458:	static int ntrig_input_mapping(struct hid_device *, struct hid_input *, struct hid_field *, struct hid_usage *, unsigned long **, int *);
897:	static int ntrig_probe(struct hid_device *, const struct hid_device_id *);
967:	static void ntrig_remove(struct hid_device *);
301:	static ssize_t set_activate_slack(struct device *, struct device_attribute *, const char *, size_t);
372:	static ssize_t set_activation_height(struct device *, struct device_attribute *, const char *, size_t);
336:	static ssize_t set_activation_width(struct device *, struct device_attribute *, const char *, size_t);
406:	static ssize_t set_deactivate_slack(struct device *, struct device_attribute *, const char *, size_t);
267:	static ssize_t set_min_height(struct device *, struct device_attribute *, const char *, size_t);
232:	static ssize_t set_min_width(struct device *, struct device_attribute *, const char *, size_t);
291:	static ssize_t show_activate_slack(struct device *, struct device_attribute *, char *);
360:	static ssize_t show_activation_height(struct device *, struct device_attribute *, char *);
324:	static ssize_t show_activation_width(struct device *, struct device_attribute *, char *);
396:	static ssize_t show_deactivate_slack(struct device *, struct device_attribute *, char *);
208:	static ssize_t show_log_height(struct device *, struct device_attribute *, char *);
196:	static ssize_t show_log_width(struct device *, struct device_attribute *, char *);
255:	static ssize_t show_min_height(struct device *, struct device_attribute *, char *);
220:	static ssize_t show_min_width(struct device *, struct device_attribute *, char *);
184:	static ssize_t show_phys_height(struct device *, struct device_attribute *, char *);
172:	static ssize_t show_phys_width(struct device *, struct device_attribute *, char *);

File drivers/hid/hid-quirks.c:
959:	bool hid_ignore(struct hid_device *);
1264:	unsigned long hid_lookup_quirk(const struct hid_device *);
1218:	void hid_quirks_exit(__u16);
1179:	int hid_quirks_init(char **, __u16, int);

File drivers/hid/hid-sensor-hub.c:
361:	int hid_sensor_get_usage_index(struct hid_sensor_hub_device *, u32, int, u32);
577:	void sensor_hub_device_close(struct hid_sensor_hub_device *);
556:	int sensor_hub_device_open(struct hid_sensor_hub_device *);
247:	int sensor_hub_get_feature(struct hid_sensor_hub_device *, u32, u32, int, void *);
299:	int sensor_hub_input_attr_get_raw_value(struct hid_sensor_hub_device *, u32, u32, u32, enum sensor_hub_read_flags, bool);
383:	int sensor_hub_input_get_attribute_info(struct hid_sensor_hub_device *, u8, u32, u32, struct hid_sensor_hub_attribute_info *);
141:	int sensor_hub_register_callback(struct hid_sensor_hub_device *, u32, struct hid_sensor_hub_callbacks *);
183:	int sensor_hub_remove_callback(struct hid_sensor_hub_device *, u32);
204:	int sensor_hub_set_feature(struct hid_sensor_hub_device *, u32, u32, int, void *);
782:	static void sensor_hub_driver_exit(void);
782:	static int sensor_hub_driver_init(void);
611:	static int sensor_hub_probe(struct hid_device *, const struct hid_device_id *);
479:	static int sensor_hub_raw_event(struct hid_device *, struct hid_report *, u8 *, int);
740:	static void sensor_hub_remove(struct hid_device *);
589:	static __u8 *sensor_hub_report_fixup(struct hid_device *, __u8 *, unsigned int *);
470:	static int sensor_hub_reset_resume(struct hid_device *);
452:	static int sensor_hub_resume(struct hid_device *);
434:	static int sensor_hub_suspend(struct hid_device *, pm_message_t);

File drivers/hid/hidraw.c:
514:	int hidraw_connect(struct hid_device *);
571:	void hidraw_disconnect(struct hid_device *);
619:	void hidraw_exit(void);
583:	int hidraw_init(void);
485:	int hidraw_report_event(struct hid_device *, u8 *, int);
326:	static void drop_ref(struct hidraw *, int);
319:	static int hidraw_fasync(int, struct file *, int);
370:	static long hidraw_ioctl(struct file *, unsigned int, unsigned long);
269:	static int hidraw_open(struct inode *, struct file *);
257:	static __poll_t hidraw_poll(struct file *, poll_table *);
47:	static ssize_t hidraw_read(struct file *, char *, size_t, loff_t *);
351:	static int hidraw_release(struct inode *, struct file *);
113:	static ssize_t hidraw_send_report(struct file *, const char *, size_t, unsigned char);
168:	static ssize_t hidraw_write(struct file *, const char *, size_t, loff_t *);

File drivers/hid/usbhid/hid-core.c:
1645:	struct usb_interface *usbhid_find_interface(int);
761:	void usbhid_init_reports(struct hid_device *);
1426:	static void hid_cease_io(struct usbhid_device *);
479:	static void hid_ctrl(struct urb *);
1669:	static void hid_exit(void);
963:	static void hid_free_buffers(struct usb_device *, struct hid_device *);
667:	static int hid_get_class_descriptor(struct usb_device *, int, void *, int, unsigned char);
1650:	static int hid_init(void);
146:	static void hid_io_error(struct hid_device *);
274:	static void hid_irq_in(struct urb *);
432:	static void hid_irq_out(struct urb *);
1480:	static int hid_post_reset(struct usb_interface *);
1466:	static int hid_pre_reset(struct usb_interface *);
119:	static void hid_reset(struct work_struct *);
1606:	static int hid_reset_resume(struct usb_interface *);
1434:	static void hid_restart_io(struct hid_device *);
1596:	static int hid_resume(struct usb_interface *);
1526:	static int hid_resume_common(struct hid_device *, bool);
108:	static void hid_retry_timeout(struct timer_list *);
660:	static int hid_set_idle(struct usb_device *, int, int, int);
83:	static int hid_start_in(struct hid_device *);
368:	static int hid_submit_ctrl(struct hid_device *);
338:	static int hid_submit_out(struct hid_device *);
1536:	static int hid_suspend(struct usb_interface *, pm_message_t);
734:	static void usbhid_close(struct hid_device *);
1404:	static void usbhid_disconnect(struct usb_interface *);
1274:	static int usbhid_idle(struct hid_device *, int, int, int);
683:	static int usbhid_open(struct hid_device *);
933:	static int usbhid_output_report(struct hid_device *, __u8 *, size_t);
973:	static int usbhid_parse(struct hid_device *);
1230:	static int usbhid_power(struct hid_device *, int);
1303:	static int usbhid_probe(struct usb_interface *, const struct usb_device_id *);
1260:	static int usbhid_raw_request(struct hid_device *, unsigned char, __u8 *, size_t, unsigned char, int);
1248:	static void usbhid_request(struct hid_device *, struct hid_report *, int);
231:	static int usbhid_restart_ctrl_queue(struct usbhid_device *);
193:	static int usbhid_restart_out_queue(struct usbhid_device *);
1054:	static int usbhid_start(struct hid_device *);
1196:	static void usbhid_stop(struct hid_device *);
635:	static void usbhid_submit_report(struct hid_device *, struct hid_report *, unsigned char);
645:	static int usbhid_wait_io(struct hid_device *);

File drivers/hid/usbhid/hid-pidff.c:
1238:	int hid_pidff_init(struct hid_device *);
731:	static void pidff_autocenter(struct pidff_device *, u16);
545:	static int pidff_erase_effect(struct input_dev *, int);
770:	static int pidff_find_fields(struct pidff_usage *, const u8 *, struct hid_report *, int, int);
824:	static void pidff_find_reports(struct hid_device *, int, struct pidff_device *);
883:	static struct hid_field *pidff_find_special_field(struct hid_report *, int, int);
1075:	static int pidff_init_fields(struct pidff_device *, struct input_dev *);
410:	static int pidff_needs_set_condition(struct ff_effect *, struct ff_effect *);
335:	static int pidff_needs_set_effect(struct ff_effect *, struct ff_effect *);
523:	static int pidff_playback(struct input_dev *, int, int);
463:	static int pidff_request_effect_upload(struct pidff_device *, int);
220:	static void pidff_set(struct pidff_usage *, u16);
760:	static void pidff_set_autocenter(struct input_dev *, u16);
380:	static void pidff_set_condition_report(struct pidff_device *, struct ff_effect *);
309:	static void pidff_set_effect_report(struct pidff_device *, struct ff_effect *);
244:	static void pidff_set_envelope_report(struct pidff_device *, struct ff_envelope *);
722:	static void pidff_set_gain(struct input_dev *, u16);
226:	static void pidff_set_signed(struct pidff_usage *, s16);
564:	static int pidff_upload_effect(struct input_dev *, struct ff_effect *, struct ff_effect *);

File drivers/hid/usbhid/hiddev.c:
907:	int hiddev_connect(struct hid_device *, unsigned int);
959:	void hiddev_disconnect(struct hid_device *);
179:	void hiddev_hid_event(struct hid_device *, struct hid_field *, struct hid_usage *, __s32);
199:	void hiddev_report_event(struct hid_device *, struct hid_report *);
871:	static long hiddev_compat_ioctl(struct file *, unsigned int, unsigned long);
892:	static char *hiddev_devnode(struct device *, umode_t *);
218:	static int hiddev_fasync(int, struct file *, int);
616:	static long hiddev_ioctl(struct file *, unsigned int, unsigned long);
588:	static int hiddev_ioctl_string(void *, unsigned int, struct hiddev *);
453:	static int hiddev_ioctl_usage(unsigned int, void *, struct hiddev *);
69:	static struct hid_report *hiddev_lookup_report(struct hid_device *, struct hiddev_report_info *);
260:	static int hiddev_open(struct inode *, struct file *);
438:	static __poll_t hiddev_poll(struct file *, poll_table *);
345:	static ssize_t hiddev_read(struct file *, char *, size_t, loff_t *);
229:	static int hiddev_release(struct inode *, struct file *);
153:	static void hiddev_send_event(struct hiddev_usage_ref *, struct hid_device *);
337:	static ssize_t hiddev_write(struct file *, const char *, size_t, loff_t *);

File drivers/hwmon/hwmon.c:
766:	struct device *devm_hwmon_device_register_with_groups(struct device *, const char *, void *, const struct attribute_group **);
805:	struct device *devm_hwmon_device_register_with_info(struct device *, const char *, void *, const struct hwmon_chip_info *, const struct attribute_group **);
847:	void devm_hwmon_device_unregister(struct device *);
721:	struct device *hwmon_device_register(struct device *);
669:	struct device *hwmon_device_register_with_groups(struct device *, const char *, void *, const struct attribute_group **);
694:	struct device *hwmon_device_register_with_info(struct device *, const char *, void *, const struct hwmon_chip_info *, const struct attribute_group **);
735:	void hwmon_device_unregister(struct device *);
550:	static struct device *__hwmon_device_register(struct device *, const char *, void *, const struct hwmon_chip_info *, const struct attribute_group **);
835:	static int devm_hwmon_match(struct device *, void *, void *);
748:	static void devm_hwmon_release(struct device *, void *);
176:	static ssize_t hwmon_attr_show(struct device *, struct device_attribute *, char *);
191:	static ssize_t hwmon_attr_show_string(struct device *, struct device_attribute *, char *);
207:	static ssize_t hwmon_attr_store(struct device *, struct device_attribute *, const char *, size_t);
77:	static umode_t hwmon_dev_name_is_visible(struct kobject *, struct attribute *, int);
98:	static void hwmon_dev_release(struct device *);
895:	static void hwmon_exit(void);
881:	static int hwmon_init(void);
66:	static ssize_t name_show(struct device *, struct device_attribute *, char *);

File drivers/hwspinlock/hwspinlock_core.c:
197:	int __hwspin_lock_timeout(struct hwspinlock *, unsigned int, int, unsigned long *);
87:	int __hwspin_trylock(struct hwspinlock *, int, unsigned long *);
249:	void __hwspin_unlock(struct hwspinlock *, int, unsigned long *);
848:	int devm_hwspin_lock_free(struct device *, struct hwspinlock *);
590:	int devm_hwspin_lock_register(struct device *, struct hwspinlock_device *, const struct hwspinlock_ops *, int, int);
874:	struct hwspinlock *devm_hwspin_lock_request(struct device *);
909:	struct hwspinlock *devm_hwspin_lock_request_specific(struct device *, unsigned int);
561:	int devm_hwspin_lock_unregister(struct device *, struct hwspinlock_device *);
776:	int hwspin_lock_free(struct hwspinlock *);
661:	int hwspin_lock_get_id(struct hwspinlock *);
464:	int hwspin_lock_register(struct hwspinlock_device *, struct device *, const struct hwspinlock_ops *, int, int);
685:	struct hwspinlock *hwspin_lock_request(void);
728:	struct hwspinlock *hwspin_lock_request_specific(unsigned int);
512:	int hwspin_lock_unregister(struct hwspinlock_device *);
322:	int of_hwspin_lock_get_id(struct device_node *, int);
384:	int of_hwspin_lock_get_id_byname(struct device_node *, const char *);
624:	static int __hwspin_lock_request(struct hwspinlock *);
537:	static int devm_hwspin_lock_device_match(struct device *, void *, void *);
820:	static int devm_hwspin_lock_match(struct device *, void *, void *);
830:	static void devm_hwspin_lock_release(struct device *, void *);
532:	static void devm_hwspin_lock_unreg(struct device *, void *);
424:	static struct hwspinlock *hwspin_lock_unregister_single(unsigned int);

File drivers/i2c/i2c-boardinfo.c:
61:	int i2c_register_board_info(int, const struct i2c_board_info *, unsigned int);

File drivers/i2c/i2c-core-acpi.c:
290:	u32 i2c_acpi_find_bus_speed(struct device *);
650:	int i2c_acpi_install_space_handler(struct i2c_adapter *);
235:	const struct acpi_device_id *i2c_acpi_match_device(const struct acpi_device_id *, struct i2c_client *);
417:	struct i2c_client *i2c_acpi_new_device(struct device *, int, struct i2c_board_info *);
219:	void i2c_acpi_register_devices(struct i2c_adapter *);
692:	void i2c_acpi_remove_space_handler(struct i2c_adapter *);
191:	static acpi_status i2c_acpi_add_device(acpi_handle, u32, void *, void **);
89:	static int i2c_acpi_do_lookup(struct acpi_device *, struct i2c_acpi_lookup *);
49:	static int i2c_acpi_fill_info(struct acpi_resource *, void *);
343:	static struct i2c_adapter *i2c_acpi_find_adapter_by_handle(acpi_handle);
328:	static int i2c_acpi_find_match_adapter(struct device *, void *);
338:	static int i2c_acpi_find_match_device(struct device *, void *);
118:	static int i2c_acpi_get_info(struct acpi_device *, struct i2c_board_info *, struct i2c_adapter *, acpi_handle *);
257:	static acpi_status i2c_acpi_lookup_speed(acpi_handle, u32, void *, void **);
361:	static int i2c_acpi_notify(void *, unsigned long, struct notifier_block *);
176:	static void i2c_acpi_register_device(struct i2c_adapter *, struct acpi_device *, struct i2c_board_info *);
528:	static acpi_status i2c_acpi_space_handler(u32, acpi_physical_address, u32, u64 *, void *, void *);

File drivers/i2c/i2c-core-base.c:
1916:	int __i2c_transfer(struct i2c_adapter *, struct i2c_msg *, int);
1563:	int devm_i2c_add_adapter(struct device *, struct i2c_adapter *);
959:	unsigned int i2c_adapter_depth(struct i2c_adapter *);
1370:	int i2c_add_adapter(struct i2c_adapter *);
1419:	int i2c_add_numbered_adapter(struct i2c_adapter *);
587:	int i2c_check_7bit_addr_validity_strict(unsigned short);
1759:	void i2c_clients_command(struct i2c_adapter *, unsigned int, void *);
1474:	void i2c_del_adapter(struct i2c_adapter *);
1696:	void i2c_del_driver(struct i2c_driver *);
1631:	int i2c_for_each_dev(void *, int (*)(struct device *, void *));
87:	const char *i2c_freq_mode_string(u32);
207:	int i2c_generic_scl_recovery(struct i2c_adapter *);
2290:	struct i2c_adapter *i2c_get_adapter(int);
2065:	int i2c_get_device_id(const struct i2c_client *, struct i2c_device_identity *);
2331:	u8 *i2c_get_dma_safe_msg_buf(struct i2c_msg *, unsigned int);
1225:	int i2c_handle_smbus_host_notify(struct i2c_adapter *, unsigned short);
108:	const struct i2c_device_id *i2c_match_id(const struct i2c_device_id *, const struct i2c_client *);
757:	struct i2c_client *i2c_new_device(struct i2c_adapter *, const struct i2c_board_info *);
898:	struct i2c_client *i2c_new_dummy(struct i2c_adapter *, u16);
2249:	struct i2c_client *i2c_new_probed_device(struct i2c_adapter *, struct i2c_board_info *, const unsigned short *, int (*)(struct i2c_adapter *, unsigned short));
930:	struct i2c_client *i2c_new_secondary_device(struct i2c_client *, const char *, u16);
1591:	void i2c_parse_fw_timings(struct device *, struct i2c_timings *, bool);
2241:	int i2c_probe_func_quick_read(struct i2c_adapter *, unsigned short);
2310:	void i2c_put_adapter(struct i2c_adapter *);
2355:	void i2c_put_dma_safe_msg_buf(u8 *, struct i2c_msg *, bool);
267:	int i2c_recover_bus(struct i2c_adapter *);
1655:	int i2c_register_driver(struct module *, struct i2c_driver *);
1732:	void i2c_release_client(struct i2c_client *);
1975:	int i2c_transfer(struct i2c_adapter *, struct i2c_msg *, int);
2037:	int i2c_transfer_buffer_flags(const struct i2c_client *, char *, int, u16);
76:	int i2c_transfer_trace_reg(void);
82:	void i2c_transfer_trace_unreg(void);
840:	void i2c_unregister_device(struct i2c_client *);
1718:	struct i2c_client *i2c_use_client(struct i2c_client *);
1121:	struct i2c_adapter *i2c_verify_adapter(struct device *);
543:	struct i2c_client *i2c_verify_client(struct device *);
604:	static int __i2c_check_addr_busy(struct device *, void *);
1158:	static int __process_new_adapter(struct device_driver *, void *);
1643:	static int __process_new_driver(struct device *, void *);
1460:	static int __process_removed_adapter(struct device_driver *, void *);
1684:	static int __process_removed_driver(struct device *, void *);
1445:	static int __unregister_client(struct device *, void *);
1453:	static int __unregister_dummy(struct device *, void *);
1549:	static void devm_i2c_del_adapter(void *);
862:	static int dummy_probe(struct i2c_client *, const struct i2c_device_id *);
868:	static int dummy_remove(struct i2c_client *);
163:	static int get_scl_gpio_value(struct i2c_adapter *);
173:	static int get_sda_gpio_value(struct i2c_adapter *);
953:	static void i2c_adapter_dev_release(struct device *);
664:	static void i2c_adapter_lock_bus(struct i2c_adapter *, unsigned int);
676:	static int i2c_adapter_trylock_bus(struct i2c_adapter *, unsigned int);
688:	static void i2c_adapter_unlock_bus(struct i2c_adapter *, unsigned int);
643:	static int i2c_check_addr_busy(struct i2c_adapter *, int);
630:	static int i2c_check_mux_children(struct device *, void *);
615:	static int i2c_check_mux_parents(struct i2c_adapter *, int);
478:	static void i2c_client_dev_release(struct device *);
1744:	static int i2c_cmd(struct device *, void *);
2107:	static int i2c_default_probe(struct i2c_adapter *, unsigned short);
2197:	static int i2c_detect(struct i2c_adapter *, struct i2c_driver *);
123:	static int i2c_device_match(struct device *, struct device_driver *);
336:	static int i2c_device_probe(struct device *);
437:	static int i2c_device_remove(struct device *);
464:	static void i2c_device_shutdown(struct device *);
146:	static int i2c_device_uevent(struct device *, struct kobj_uevent_env *);
1428:	static void i2c_do_del_adapter(struct i2c_driver *, struct i2c_adapter *);
1814:	static void i2c_exit(void);
1184:	static int i2c_host_notify_irq_map(struct irq_domain *, unsigned int, irq_hw_number_t);
1769:	static int i2c_init(void);
1842:	static int i2c_quirk_error(struct i2c_adapter *, struct i2c_msg *, char *);
1242:	static int i2c_register_adapter(struct i2c_adapter *);
1052:	static ssize_t i2c_sysfs_delete_device(struct device *, struct device_attribute *, const char *, size_t);
984:	static ssize_t i2c_sysfs_new_device(struct device *, struct device_attribute *, const char *, size_t);
168:	static void set_scl_gpio_value(struct i2c_adapter *, int);
178:	static void set_sda_gpio_value(struct i2c_adapter *, int);
492:	static ssize_t show_modalias(struct device *, struct device_attribute *, char *);
484:	static ssize_t show_name(struct device *, struct device_attribute *, char *);

File drivers/i2c/i2c-core-smbus.c:
542:	s32 __i2c_smbus_xfer(struct i2c_adapter *, u16, unsigned short, char, u8, int, union i2c_smbus_data *);
673:	struct i2c_client *i2c_setup_smbus_alert(struct i2c_adapter *, struct i2c_smbus_alert_setup *);
217:	s32 i2c_smbus_read_block_data(const struct i2c_client *, u8, u8 *);
95:	s32 i2c_smbus_read_byte(const struct i2c_client *);
130:	s32 i2c_smbus_read_byte_data(const struct i2c_client *, u8);
260:	s32 i2c_smbus_read_i2c_block_data(const struct i2c_client *, u8, u8, u8 *);
615:	s32 i2c_smbus_read_i2c_block_data_or_emulated(const struct i2c_client *, u8, u8, u8 *);
170:	s32 i2c_smbus_read_word_data(const struct i2c_client *, u8);
244:	s32 i2c_smbus_write_block_data(const struct i2c_client *, u8, u8, const u8 *);
115:	s32 i2c_smbus_write_byte(const struct i2c_client *, u8);
151:	s32 i2c_smbus_write_byte_data(const struct i2c_client *, u8, u8);
280:	s32 i2c_smbus_write_i2c_block_data(const struct i2c_client *, u8, u8, const u8 *);
191:	s32 i2c_smbus_write_word_data(const struct i2c_client *, u8, u16);
527:	s32 i2c_smbus_xfer(struct i2c_adapter *, u16, unsigned short, char, u8, int, union i2c_smbus_data *);
53:	static u8 i2c_smbus_msg_pec(u8, struct i2c_msg *);
295:	static void i2c_smbus_try_get_dmabuf(struct i2c_msg *, u8);
315:	static s32 i2c_smbus_xfer_emulated(struct i2c_adapter *, u16, unsigned short, char, u8, int, union i2c_smbus_data *);

File drivers/idle/intel_idle.c:
947:	static int intel_idle(struct cpuidle_device *, struct cpuidle_driver *, int);
1254:	static bool intel_idle_acpi_cst_extract(void);
1675:	static int intel_idle_cpu_online(unsigned int);
1694:	static int intel_idle_init(void);
988:	static void intel_idle_s2idle(struct cpuidle_device *, struct cpuidle_driver *, int);
1463:	static unsigned long long irtl_2_usec(unsigned long long);

File drivers/input/evdev.c:
153:	static void __evdev_queue_syn_dropped(struct evdev_client *);
737:	static int bits_to_user(unsigned long *, unsigned int, unsigned int, void *, int);
1355:	static void evdev_cleanup(struct evdev *);
1373:	static int evdev_connect(struct input_handler *, struct input_dev *, const struct input_device_id *);
416:	static void evdev_detach_client(struct evdev *, struct evdev_client *);
1439:	static void evdev_disconnect(struct input_handle *);
1064:	static long evdev_do_ioctl(struct file *, unsigned int, void *, int);
336:	static void evdev_event(struct input_handle *, unsigned int, unsigned int, int);
308:	static void evdev_events(struct input_handle *, const struct input_value *, unsigned int);
1473:	static void evdev_exit(void);
344:	static int evdev_fasync(int, struct file *, int);
351:	static int evdev_flush(struct file *, fl_owner_t);
365:	static void evdev_free(struct device *);
837:	static int evdev_handle_get_keycode(struct input_dev *, void *);
860:	static int evdev_handle_get_keycode_v2(struct input_dev *, void *);
921:	static int evdev_handle_get_val(struct evdev_client *, struct input_dev *, unsigned int, unsigned long *, unsigned int, unsigned int, void *, int);
878:	static int evdev_handle_set_keycode(struct input_dev *, void *);
895:	static int evdev_handle_set_keycode_v2(struct input_dev *, void *);
1468:	static int evdev_init(void);
1314:	static long evdev_ioctl(struct file *, unsigned int, unsigned long);
1320:	static long evdev_ioctl_compat(struct file *, unsigned int, unsigned long);
1291:	static long evdev_ioctl_handler(struct file *, unsigned int, void *, int);
502:	static int evdev_open(struct inode *, struct file *);
261:	static void evdev_pass_values(struct evdev_client *, const struct input_value *, unsigned int, ktime_t *);
645:	static __poll_t evdev_poll(struct file *, poll_table *);
593:	static ssize_t evdev_read(struct file *, char *, size_t, loff_t *);
471:	static int evdev_release(struct inode *, struct file *);
537:	static ssize_t evdev_write(struct file *, const char *, size_t, loff_t *);
799:	static int str_to_user(const char *, unsigned int, void *);

File drivers/input/ff-core.c:
317:	int input_ff_create(struct input_dev *, unsigned int);
377:	void input_ff_destroy(struct input_dev *);
223:	int input_ff_erase(struct input_dev *, int, struct file *);
273:	int input_ff_event(struct input_dev *, unsigned int, unsigned int, int);
248:	int input_ff_flush(struct input_dev *, struct file *);
104:	int input_ff_upload(struct input_dev *, struct ff_effect *, struct file *);
184:	static int erase_effect(struct input_dev *, int, struct file *);

File drivers/input/input-compat.c:
17:	int input_event_from_user(const char *, struct input_event *);
41:	int input_event_to_user(char *, const struct input_event *);
65:	int input_ff_effect_from_user(const char *, size_t, struct ff_effect *);

File drivers/input/input-leds.c:
53:	static enum led_brightness input_leds_brightness_get(struct led_classdev *);
61:	static void input_leds_brightness_set(struct led_classdev *, enum led_brightness);
86:	static int input_leds_connect(struct input_handler *, struct input_dev *, const struct input_device_id *);
173:	static void input_leds_disconnect(struct input_handle *);
69:	static void input_leds_event(struct input_handle *, unsigned int, unsigned int, int);
214:	static void input_leds_exit(void);
208:	static int input_leds_init(void);

File drivers/input/input-mt.c:
440:	int input_mt_assign_slots(struct input_dev *, int *, const struct input_mt_pos *, int, int);
113:	void input_mt_destroy_slots(struct input_dev *);
279:	void input_mt_drop_unused(struct input_dev *);
475:	int input_mt_get_slot_by_key(struct input_dev *, int);
41:	int input_mt_init_slots(struct input_dev *, unsigned int, unsigned int);
177:	void input_mt_report_finger_count(struct input_dev *, int);
198:	void input_mt_report_pointer_emulation(struct input_dev *, bool);
137:	bool input_mt_report_slot_state(struct input_dev *, unsigned int, bool);
298:	void input_mt_sync_frame(struct input_dev *);
261:	static void __input_mt_drop_unused(struct input_dev *, struct input_mt *);
318:	static int adjust_dual(int *, int, int *, int, int);
17:	static void copy_abs(struct input_dev *, unsigned int, unsigned int);

File drivers/input/input.c:
1854:	struct input_dev *devm_input_allocate_device(struct device *);
481:	void input_alloc_absinfo(struct input_dev *);
1789:	struct input_dev *input_allocate_device(void);
654:	void input_close_device(struct input_handle *);
2061:	void input_enable_softrepeat(struct input_dev *, int, int);
428:	void input_event(struct input_dev *, unsigned int, unsigned int, int);
630:	int input_flush_device(struct input_handle *, struct file *);
1894:	void input_free_device(struct input_dev *);
2422:	void input_free_minor(unsigned int);
884:	int input_get_keycode(struct input_dev *, struct input_keymap_entry *);
2392:	int input_get_new_minor(int, unsigned int, bool);
528:	int input_grab_device(struct input_handle *);
2283:	int input_handler_for_each_handle(struct input_handler *, void *, int (*)(struct input_handle *, void *));
453:	void input_inject_event(struct input_handle *, unsigned int, unsigned int, int);
950:	bool input_match_device_id(const struct input_dev *, const struct input_device_id *);
594:	int input_open_device(struct input_handle *);
2092:	int input_register_device(struct input_dev *);
2314:	int input_register_handle(struct input_handle *);
2223:	int input_register_handler(struct input_handler *);
577:	void input_release_device(struct input_handle *);
1670:	void input_reset_device(struct input_dev *);
742:	int input_scancode_to_scalar(const struct input_keymap_entry *, unsigned int *);
499:	void input_set_abs_params(struct input_dev *, unsigned int, int, int, int, int);
1916:	void input_set_capability(struct input_dev *, unsigned int, unsigned int);
905:	int input_set_keycode(struct input_dev *, const struct input_keymap_entry *);
2196:	void input_unregister_device(struct input_dev *);
2364:	void input_unregister_handle(struct input_handle *);
2253:	void input_unregister_handler(struct input_handler *);
550:	static void __input_release_device(struct input_handle *);
2021:	static void __input_unregister_device(struct input_dev *);
1819:	static int devm_input_device_match(struct device *, void *, void *);
1826:	static void devm_input_device_release(struct device *, void *);
2043:	static void devm_input_device_unregister(struct device *, void *);
1535:	static int input_add_uevent_bm_var(struct kobj_uevent_env *, const char *, unsigned long *, int);
1001:	static int input_attach_handler(struct input_dev *, struct input_handler *);
1020:	static int input_bits_to_string(char *, int, unsigned long, bool);
786:	static int input_default_getkeycode(struct input_dev *, struct input_keymap_entry *);
814:	static int input_default_setkeycode(struct input_dev *, const struct input_keymap_entry *, unsigned int *);
1720:	static int input_dev_freeze(struct device *);
1737:	static int input_dev_poweroff(struct device *);
1518:	static void input_dev_release(struct device *);
682:	static void input_dev_release_keys(struct input_dev *);
1706:	static int input_dev_resume(struct device *);
1486:	static ssize_t input_dev_show_cap_abs(struct device *, struct device_attribute *, char *);
1483:	static ssize_t input_dev_show_cap_ev(struct device *, struct device_attribute *, char *);
1490:	static ssize_t input_dev_show_cap_ff(struct device *, struct device_attribute *, char *);
1484:	static ssize_t input_dev_show_cap_key(struct device *, struct device_attribute *, char *);
1488:	static ssize_t input_dev_show_cap_led(struct device *, struct device_attribute *, char *);
1487:	static ssize_t input_dev_show_cap_msc(struct device *, struct device_attribute *, char *);
1485:	static ssize_t input_dev_show_cap_rel(struct device *, struct device_attribute *, char *);
1489:	static ssize_t input_dev_show_cap_snd(struct device *, struct device_attribute *, char *);
1491:	static ssize_t input_dev_show_cap_sw(struct device *, struct device_attribute *, char *);
1423:	static ssize_t input_dev_show_id_bustype(struct device *, struct device_attribute *, char *);
1425:	static ssize_t input_dev_show_id_product(struct device *, struct device_attribute *, char *);
1424:	static ssize_t input_dev_show_id_vendor(struct device *, struct device_attribute *, char *);
1426:	static ssize_t input_dev_show_id_version(struct device *, struct device_attribute *, char *);
1373:	static ssize_t input_dev_show_modalias(struct device *, struct device_attribute *, char *);
1321:	static ssize_t input_dev_show_name(struct device *, struct device_attribute *, char *);
1322:	static ssize_t input_dev_show_phys(struct device *, struct device_attribute *, char *);
1389:	static ssize_t input_dev_show_properties(struct device *, struct device_attribute *, char *);
1323:	static ssize_t input_dev_show_uniq(struct device *, struct device_attribute *, char *);
1686:	static int input_dev_suspend(struct device *);
1648:	static void input_dev_toggle(struct input_dev *, bool);
1592:	static int input_dev_uevent(struct device *, struct kobj_uevent_env *);
1103:	static void *input_devices_seq_next(struct seq_file *, void *, loff_t *);
1142:	static int input_devices_seq_show(struct seq_file *, void *);
1084:	static void *input_devices_seq_start(struct seq_file *, loff_t *);
1769:	static char *input_devnode(struct device *, umode_t *);
2456:	static void input_exit(void);
369:	static void input_handle_event(struct input_dev *, unsigned int, unsigned int, int);
1228:	static void *input_handlers_seq_next(struct seq_file *, void *, loff_t *);
1236:	static int input_handlers_seq_show(struct seq_file *, void *);
1208:	static void *input_handlers_seq_start(struct seq_file *, loff_t *);
2428:	static int input_init(void);
131:	static void input_pass_values(struct input_dev *, struct input_value *, unsigned int);
1441:	static int input_print_bitmap(char *, int, unsigned long *, int, int);
1338:	static int input_print_modalias(char *, int, struct input_dev *, int);
1325:	static int input_print_modalias_bits(char *, int, char, unsigned long *, unsigned int, unsigned int);
1194:	static int input_proc_devices_open(struct inode *, struct file *);
1065:	static __poll_t input_proc_devices_poll(struct file *, poll_table *);
1296:	static void input_proc_exit(void);
1258:	static int input_proc_handlers_open(struct inode *, struct file *);
182:	static void input_repeat_key(struct timer_list *);
1116:	static void input_seq_print_bitmap(struct seq_file *, const char *, unsigned long *, int);
1108:	static void input_seq_stop(struct seq_file *, void *);
96:	static unsigned int input_to_handler(struct input_handle *, struct input_value *, unsigned int);

File drivers/input/keyboard/atkbd.c:
687:	static int atkbd_activate(struct atkbd *);
920:	static void atkbd_apply_forced_release_keylist(struct atkbd *, const void *);
1319:	static ssize_t atkbd_attr_set_helper(struct device *, const char *, size_t, ssize_t (*)(struct atkbd *, const char *, size_t));
881:	static void atkbd_cleanup(struct serio *);
1133:	static int atkbd_connect(struct serio *, struct serio_driver *);
1650:	static int atkbd_deactivate_fixup(const struct dmi_system_id *);
894:	static void atkbd_disconnect(struct serio *);
272:	static ssize_t atkbd_do_set_extra(struct device *, struct device_attribute *, const char *, size_t);
273:	static ssize_t atkbd_do_set_force_release(struct device *, struct device_attribute *, const char *, size_t);
274:	static ssize_t atkbd_do_set_scroll(struct device *, struct device_attribute *, const char *, size_t);
275:	static ssize_t atkbd_do_set_set(struct device *, struct device_attribute *, const char *, size_t);
277:	static ssize_t atkbd_do_set_softraw(struct device *, struct device_attribute *, const char *, size_t);
276:	static ssize_t atkbd_do_set_softrepeat(struct device *, struct device_attribute *, const char *, size_t);
289:	static ssize_t atkbd_do_show_err_count(struct device *, struct device_attribute *, char *);
272:	static ssize_t atkbd_do_show_extra(struct device *, struct device_attribute *, char *);
273:	static ssize_t atkbd_do_show_force_release(struct device *, struct device_attribute *, char *);
274:	static ssize_t atkbd_do_show_scroll(struct device *, struct device_attribute *, char *);
275:	static ssize_t atkbd_do_show_set(struct device *, struct device_attribute *, char *);
277:	static ssize_t atkbd_do_show_softraw(struct device *, struct device_attribute *, char *);
276:	static ssize_t atkbd_do_show_softrepeat(struct device *, struct device_attribute *, char *);
639:	static int atkbd_event(struct input_dev *, unsigned int, unsigned int, int);
590:	static void atkbd_event_work(struct work_struct *);
1815:	static void atkbd_exit(void);
1808:	static int atkbd_init(void);
372:	static irqreturn_t atkbd_interrupt(struct serio *, unsigned char, unsigned int);
987:	static unsigned int atkbd_oqo_01plus_scancode_fixup(struct atkbd *, unsigned int);
724:	static int atkbd_probe(struct atkbd *);
1219:	static int atkbd_reconnect(struct serio *);
852:	static int atkbd_reset_state(struct atkbd *);
620:	static void atkbd_schedule_event_work(struct atkbd *, int);
791:	static int atkbd_select_set(struct atkbd *, int, int);
1057:	static void atkbd_set_device_attrs(struct atkbd *);
1344:	static ssize_t atkbd_set_extra(struct atkbd *, const char *, size_t);
1411:	static ssize_t atkbd_set_force_release(struct atkbd *, const char *, size_t);
1004:	static void atkbd_set_keycode_table(struct atkbd *);
559:	static int atkbd_set_leds(struct atkbd *);
535:	static int atkbd_set_repeat_rate(struct atkbd *);
1432:	static ssize_t atkbd_set_scroll(struct atkbd *, const char *, size_t);
1480:	static ssize_t atkbd_set_set(struct atkbd *, const char *, size_t);
1589:	static ssize_t atkbd_set_softraw(struct atkbd *, const char *, size_t);
1535:	static ssize_t atkbd_set_softrepeat(struct atkbd *, const char *, size_t);
1635:	static int atkbd_setup_forced_release(const struct dmi_system_id *);
1643:	static int atkbd_setup_scancode_fixup(const struct dmi_system_id *);

File drivers/input/mouse/alps.c:
3176:	int alps_detect(struct psmouse *, bool);
3041:	int alps_init(struct psmouse *);
1753:	static int __alps_command_mode_write_reg(struct psmouse *, u8);
1746:	static int alps_command_mode_read_reg(struct psmouse *, int);
1689:	static int alps_command_mode_send_nibble(struct psmouse *, int);
1709:	static int alps_command_mode_set_addr(struct psmouse *, int);
1762:	static int alps_command_mode_write_reg(struct psmouse *, int, u8);
626:	static void alps_decode_buttons_v3(struct alps_fields *, unsigned char *);
691:	static int alps_decode_dolphin(struct alps_fields *, unsigned char *, struct psmouse *);
1029:	static int alps_decode_packet_v7(struct alps_fields *, unsigned char *, struct psmouse *);
637:	static int alps_decode_pinnacle(struct alps_fields *, unsigned char *, struct psmouse *);
663:	static int alps_decode_rushmore(struct alps_fields *, unsigned char *, struct psmouse *);
1180:	static int alps_decode_ss4_v2(struct alps_fields *, unsigned char *, struct psmouse *);
2971:	static void alps_disconnect(struct psmouse *);
1809:	static int alps_enter_command_mode(struct psmouse *);
1580:	static void alps_flush_packet(struct timer_list *);
2464:	static int alps_get_otp_values_ss4_v2(struct psmouse *, unsigned char, unsigned char *);
1151:	static enum SS4_PACKET_ID alps_get_pkt_id_ss4_v2(unsigned char *);
2291:	static int alps_get_v3_v7_resolution(struct psmouse *, int);
2650:	static int alps_hw_init_dolphin_v1(struct psmouse *);
2330:	static int alps_hw_init_rushmore_v3(struct psmouse *);
2696:	static int alps_hw_init_ss4_v2(struct psmouse *);
2020:	static int alps_hw_init_v1_v2(struct psmouse *);
2220:	static int alps_hw_init_v3(struct psmouse *);
2391:	static int alps_hw_init_v4(struct psmouse *);
2068:	static int alps_hw_init_v6(struct psmouse *);
2667:	static int alps_hw_init_v7(struct psmouse *);
2885:	static int alps_identify(struct psmouse *, struct alps_data *);
1908:	static int alps_monitor_mode(struct psmouse *, bool);
1839:	static int alps_passthrough_mode_v2(struct psmouse *, bool);
2095:	static int alps_passthrough_mode_v3(struct psmouse *, int, bool);
1990:	static int alps_poll(struct psmouse *);
2136:	static int alps_probe_trackstick_v3_v7(struct psmouse *, int);
395:	static int alps_process_bitmap(struct alps_data *, struct alps_fields *);
1609:	static psmouse_ret_t alps_process_byte(struct psmouse *);
1317:	static void alps_process_packet_ss4_v2(struct psmouse *);
251:	static void alps_process_packet_v1_v2(struct psmouse *);
806:	static void alps_process_packet_v3(struct psmouse *);
892:	static void alps_process_packet_v4(struct psmouse *);
826:	static void alps_process_packet_v6(struct psmouse *);
1141:	static void alps_process_packet_v7(struct psmouse *);
728:	static void alps_process_touchpad_packet_v3_v5(struct psmouse *);
2959:	static int alps_reconnect(struct psmouse *);
1402:	static void alps_register_bare_ps2_mouse(struct work_struct *);
1469:	static void alps_report_bare_ps2_packet(struct psmouse *, unsigned char *, bool);
224:	static void alps_report_buttons(struct input_dev *, struct input_dev *, int, int, int);
513:	static void alps_report_mt_data(int, struct psmouse *, struct psmouse *);
527:	static void alps_report_semi_mt_data(int, struct psmouse *, struct psmouse *);
1770:	static int alps_rpt_cmd(struct psmouse *, int, int, unsigned char *);
2992:	static void alps_set_abs_params_mt_common(struct alps_data *, struct input_dev *);
3005:	static void alps_set_abs_params_semi_mt(struct alps_data *, struct input_dev *);
3029:	static void alps_set_abs_params_ss4_v2(struct alps_data *, struct input_dev *);
2984:	static void alps_set_abs_params_st(struct alps_data *, struct input_dev *);
3016:	static void alps_set_abs_params_v7(struct alps_data *, struct input_dev *);
505:	static void alps_set_slot(struct input_dev *, int, int, int);
2155:	static int alps_setup_trackstick_v3(struct psmouse *, int);
2054:	static int alps_trackstick_enter_extended_mode_v3_v6(struct psmouse *);

File drivers/input/mouse/byd.c:
438:	int byd_detect(struct psmouse *, bool);
467:	int byd_init(struct psmouse *);
255:	static void byd_clear_touch(struct timer_list *);
427:	static void byd_disconnect(struct psmouse *);
276:	static psmouse_ret_t byd_process_byte(struct psmouse *);
401:	static int byd_reconnect(struct psmouse *);
239:	static void byd_report_input(struct psmouse *, struct psmouse *);
342:	static int byd_reset_touchpad(struct psmouse *);

File drivers/input/mouse/cypress_ps2.c:
204:	int cypress_detect(struct psmouse *, bool);
661:	int cypress_init(struct psmouse *);
631:	static void cypress_disconnect(struct psmouse *);
516:	static void cypress_process_packet(struct psmouse *, bool);
603:	static psmouse_ret_t cypress_protocol_handler(struct psmouse *);
63:	static int cypress_ps2_ext_cmd(struct psmouse *, unsigned char, unsigned short);
41:	static int cypress_ps2_sendbyte(struct psmouse *, int);
638:	static int cypress_reconnect(struct psmouse *);
359:	static void cypress_reset(struct psmouse *);
172:	static int cypress_send_ext_cmd(struct psmouse *, unsigned char, unsigned char *);
340:	static int cypress_set_absolute_mode(struct psmouse *);
615:	static void cypress_set_rate(struct psmouse *, unsigned int);

File drivers/input/mouse/elantech.c:
1439:	int elantech_detect(struct psmouse *, bool);
2019:	int elantech_init(struct psmouse *);
1998:	int elantech_init_ps2(struct psmouse *);
1880:	int elantech_init_smbus(struct psmouse *);
1793:	static int elantech_create_smbus(struct psmouse *, struct elantech_device_info *, bool);
1498:	static void elantech_disconnect(struct psmouse *);
540:	static void elantech_input_sync_v4(struct psmouse *);
825:	static psmouse_ret_t elantech_process_byte(struct psmouse *);
71:	static int elantech_ps2_command(struct psmouse *, unsigned char *, int);
1688:	static int elantech_query_info(struct psmouse *, struct elantech_device_info *);
98:	static int elantech_read_reg(struct psmouse *, unsigned char, unsigned char *);
1519:	static int elantech_reconnect(struct psmouse *);
311:	static void elantech_report_semi_mt_data(struct input_dev *, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);
405:	static void elantech_report_trackpoint(struct psmouse *, int);
53:	static int elantech_send_cmd(struct psmouse *, unsigned char, unsigned char *);
915:	static int elantech_set_absolute_mode(struct psmouse *);
1325:	static ssize_t elantech_set_int_attr(struct psmouse *, void *, const char *, size_t);
902:	static void elantech_set_rate_restore_reg_07(struct psmouse *, unsigned int);
1906:	static int elantech_setup_ps2(struct psmouse *, struct elantech_device_info *);
1308:	static ssize_t elantech_show_int_attr(struct psmouse *, void *, char *);
154:	static int elantech_write_reg(struct psmouse *, unsigned char, unsigned char);
38:	static int synaptics_send_cmd(struct psmouse *, unsigned char, unsigned char *);

File drivers/input/mouse/focaltech.c:
39:	int focaltech_detect(struct psmouse *, bool);
410:	int focaltech_init(struct psmouse *);
303:	static void focaltech_disconnect(struct psmouse *);
255:	static psmouse_ret_t focaltech_process_byte(struct psmouse *);
310:	static int focaltech_reconnect(struct psmouse *);
297:	static void focaltech_reset(struct psmouse *);
393:	static void focaltech_set_resolution(struct psmouse *, unsigned int);
269:	static int focaltech_switch_protocol(struct psmouse *);

File drivers/input/mouse/lifebook.c:
256:	int lifebook_detect(struct psmouse *, bool);
314:	int lifebook_init(struct psmouse *);
130:	void lifebook_module_init(void);
202:	static int lifebook_absolute_mode(struct psmouse *);
244:	static void lifebook_disconnect(struct psmouse *);
34:	static int lifebook_limit_serio3(const struct dmi_system_id *);
135:	static psmouse_ret_t lifebook_process_byte(struct psmouse *);
42:	static int lifebook_set_6byte_proto(const struct dmi_system_id *);
231:	static void lifebook_set_resolution(struct psmouse *, unsigned int);

File drivers/input/mouse/logips2pp.c:
360:	int ps2pp_detect(struct psmouse *, bool);
161:	static ssize_t ps2pp_attr_set_smartscroll(struct psmouse *, void *, const char *, size_t);
155:	static ssize_t ps2pp_attr_show_smartscroll(struct psmouse *, void *, char *);
116:	static int ps2pp_cmd(struct psmouse *, u8 *, u8);
204:	static void ps2pp_disconnect(struct psmouse *);
44:	static psmouse_ret_t ps2pp_process_byte(struct psmouse *);
188:	static void ps2pp_set_resolution(struct psmouse *, unsigned int);
139:	static void ps2pp_set_smartscroll(struct psmouse *, bool);

File drivers/input/mouse/psmouse-base.c:
1302:	int psmouse_activate(struct psmouse *);
1822:	ssize_t psmouse_attr_set_helper(struct device *, struct device_attribute *, const char *, size_t);
1808:	ssize_t psmouse_attr_show_helper(struct device *, struct device_attribute *, char *);
1318:	int psmouse_deactivate(struct psmouse *);
517:	bool psmouse_matches_pnp_id(struct psmouse *, const char * const *);
153:	psmouse_ret_t psmouse_process_byte(struct psmouse *);
243:	void psmouse_queue_work(struct psmouse *, struct delayed_work *, unsigned long);
125:	void psmouse_report_standard_buttons(struct input_dev *, u8);
132:	void psmouse_report_standard_motion(struct input_dev *, u8 *);
143:	void psmouse_report_standard_packet(struct input_dev *, u8 *);
437:	int psmouse_reset(struct psmouse *);
455:	void psmouse_set_resolution(struct psmouse *, unsigned int);
265:	void psmouse_set_state(struct psmouse *, enum psmouse_state);
1694:	static int __psmouse_reconnect(struct serio *, bool);
714:	static int cortron_detect(struct psmouse *, bool);
547:	static int genius_detect(struct psmouse *, bool);
612:	static int im_explorer_detect(struct psmouse *, bool);
579:	static int intellimouse_detect(struct psmouse *, bool);
692:	static int ps2bare_detect(struct psmouse *, bool);
965:	static void psmouse_apply_defaults(struct psmouse *);
1900:	static ssize_t psmouse_attr_set_protocol(struct psmouse *, void *, const char *, size_t);
1999:	static ssize_t psmouse_attr_set_rate(struct psmouse *, void *, const char *, size_t);
2012:	static ssize_t psmouse_attr_set_resolution(struct psmouse *, void *, const char *, size_t);
1895:	static ssize_t psmouse_attr_show_protocol(struct psmouse *, void *, char *);
1433:	static void psmouse_cleanup(struct serio *);
1584:	static int psmouse_connect(struct serio *, struct serio_driver *);
1481:	static void psmouse_disconnect(struct serio *);
999:	static bool psmouse_do_detect(int (*)(struct psmouse *, bool), struct psmouse *, bool, bool);
2082:	static void psmouse_exit(void);
1049:	static int psmouse_extensions(struct psmouse *, unsigned int, bool);
1771:	static int psmouse_fast_reconnect(struct serio *);
2043:	static int psmouse_get_maxproto(char *, const struct kernel_param *);
276:	static int psmouse_handle_byte(struct psmouse *);
2050:	static int psmouse_init(void);
1287:	static void psmouse_initialize(struct psmouse *);
342:	static irqreturn_t psmouse_interrupt(struct serio *, u8, unsigned int);
497:	static int psmouse_poll(struct psmouse *);
1251:	static int psmouse_probe(struct psmouse *);
945:	static const struct psmouse_protocol *psmouse_protocol_by_name(const char *, size_t);
933:	static const struct psmouse_protocol *psmouse_protocol_by_type(enum psmouse_type);
1766:	static int psmouse_reconnect(struct serio *);
1336:	static void psmouse_resync(struct work_struct *);
1880:	static ssize_t psmouse_set_int_attr(struct psmouse *, void *, const char *, size_t);
2026:	static int psmouse_set_maxproto(const char *, const struct kernel_param *);
471:	static void psmouse_set_rate(struct psmouse *, unsigned int);
487:	static void psmouse_set_scale(struct psmouse *, enum psmouse_scale);
1873:	static ssize_t psmouse_show_int_attr(struct psmouse *, void *, char *);
1524:	static int psmouse_switch_protocol(struct psmouse *, const struct psmouse_protocol *);
1014:	static bool psmouse_try_protocol(struct psmouse *, enum psmouse_type, unsigned int *, bool, bool);
658:	static int thinking_detect(struct psmouse *, bool);

File drivers/input/mouse/psmouse-smbus.c:
213:	void psmouse_smbus_cleanup(struct psmouse *);
229:	int psmouse_smbus_init(struct psmouse *, const struct i2c_board_info *, const void *, size_t, bool, bool);
308:	void psmouse_smbus_module_exit(void);
295:	int psmouse_smbus_module_init(void);
191:	static int psmouse_smbus_create_companion(struct device *, void *);
169:	static void psmouse_smbus_disconnect(struct psmouse *);
91:	static int psmouse_smbus_notifier_call(struct notifier_block *, unsigned long, void *);
115:	static psmouse_ret_t psmouse_smbus_process_byte(struct psmouse *);
120:	static int psmouse_smbus_reconnect(struct psmouse *);
135:	static void psmouse_smbus_remove_i2c_device(struct work_struct *);

File drivers/input/mouse/sentelic.c:
975:	int fsp_detect(struct psmouse *, bool);
1025:	int fsp_init(struct psmouse *);
851:	static int fsp_activate_protocol(struct psmouse *);
601:	static ssize_t fsp_attr_set_flags(struct psmouse *, void *, const char *, size_t);
475:	static ssize_t fsp_attr_set_getreg(struct psmouse *, void *, const char *, size_t);
571:	static ssize_t fsp_attr_set_hscroll(struct psmouse *, void *, const char *, size_t);
512:	static ssize_t fsp_attr_set_pagereg(struct psmouse *, void *, const char *, size_t);
432:	static ssize_t fsp_attr_set_setreg(struct psmouse *, void *, const char *, size_t);
542:	static ssize_t fsp_attr_set_vscroll(struct psmouse *, void *, const char *, size_t);
592:	static ssize_t fsp_attr_show_flags(struct psmouse *, void *, char *);
462:	static ssize_t fsp_attr_show_getreg(struct psmouse *, void *, char *);
563:	static ssize_t fsp_attr_show_hscroll(struct psmouse *, void *, char *);
501:	static ssize_t fsp_attr_show_pagereg(struct psmouse *, void *, char *);
625:	static ssize_t fsp_attr_show_ver(struct psmouse *, void *, char *);
534:	static ssize_t fsp_attr_show_vscroll(struct psmouse *, void *, char *);
1000:	static void fsp_disconnect(struct psmouse *);
396:	static int fsp_onpad_hscr(struct psmouse *, bool);
375:	static int fsp_onpad_vscr(struct psmouse *, bool);
345:	static int fsp_opc_tag_enable(struct psmouse *, bool);
252:	static int fsp_page_reg_write(struct psmouse *, int);
706:	static psmouse_ret_t fsp_process_byte(struct psmouse *);
1009:	static int fsp_reconnect(struct psmouse *);
84:	static int fsp_reg_read(struct psmouse *, int, int *);
141:	static int fsp_reg_write(struct psmouse *, int, int);
194:	static int fsp_reg_write_enable(struct psmouse *, bool);
993:	static void fsp_reset(struct psmouse *);
695:	static void fsp_set_slot(struct input_dev *, int, bool, unsigned int, unsigned int);
50:	static unsigned char fsp_test_swap_cmd(unsigned char);

File drivers/input/mouse/synaptics.c:
99:	int synaptics_detect(struct psmouse *, bool);
1850:	int synaptics_init(struct psmouse *);
1671:	int synaptics_init_absolute(struct psmouse *);
1676:	int synaptics_init_relative(struct psmouse *);
1811:	int synaptics_init_smbus(struct psmouse *);
1541:	void synaptics_module_init(void);
121:	void synaptics_reset(struct psmouse *);
1655:	static int __synaptics_init(struct psmouse *, bool);
1227:	static void set_abs_position_params(struct input_dev *, struct synaptics_device_info *, int, int);
1739:	static int synaptics_create_intertouch(struct psmouse *, struct synaptics_device_info *, bool);
1396:	static void synaptics_disconnect(struct psmouse *);
1548:	static int synaptics_init_ps2(struct psmouse *, struct synaptics_device_info *, bool);
82:	static int synaptics_mode_cmd(struct psmouse *, u8);
1201:	static psmouse_ret_t synaptics_process_byte(struct psmouse *);
1058:	static void synaptics_process_packet(struct psmouse *);
683:	static void synaptics_pt_activate(struct psmouse *);
641:	static int synaptics_pt_start(struct serio *);
653:	static void synaptics_pt_stop(struct serio *);
624:	static int synaptics_pt_write(struct serio *, u8);
415:	static int synaptics_query_hardware(struct psmouse *, struct synaptics_device_info *);
1416:	static int synaptics_reconnect(struct psmouse *);
962:	static void synaptics_report_buttons(struct psmouse *, const struct synaptics_hw_state *);
982:	static void synaptics_report_mt_data(struct psmouse *, const struct synaptics_hw_state *, int);
886:	static void synaptics_report_semi_mt_slot(struct input_dev *, int, bool, int, int);
202:	static int synaptics_send_cmd(struct psmouse *, u8, u8 *);
1362:	static ssize_t synaptics_set_disable_gesture(struct psmouse *, void *, const char *, size_t);
574:	static int synaptics_set_mode(struct psmouse *);
606:	static void synaptics_set_rate(struct psmouse *, unsigned int);
1354:	static ssize_t synaptics_show_disable_gesture(struct psmouse *, void *, char *);

File drivers/input/mouse/trackpoint.c:
395:	int trackpoint_detect(struct psmouse *, bool);
366:	static void trackpoint_disconnect(struct psmouse *);
215:	static umode_t trackpoint_is_attr_visible(struct kobject *, struct attribute *, int);
34:	static int trackpoint_power_on_reset(struct ps2dev *);
375:	static int trackpoint_reconnect(struct psmouse *);
147:	static ssize_t trackpoint_set_bit_attr(struct psmouse *, void *, const char *, size_t);
118:	static ssize_t trackpoint_set_int_attr(struct psmouse *, void *, const char *, size_t);
105:	static ssize_t trackpoint_show_int_attr(struct psmouse *, void *, char *);
302:	static int trackpoint_sync(struct psmouse *, bool);
78:	static int trackpoint_update_bit(struct ps2dev *, u8, u8, u8);

File drivers/input/mouse/vmmouse.c:
346:	int vmmouse_detect(struct psmouse *, bool);
423:	int vmmouse_init(struct psmouse *);
250:	static void vmmouse_disable(struct psmouse *);
378:	static void vmmouse_disconnect(struct psmouse *);
274:	static int vmmouse_enable(struct psmouse *);
226:	static psmouse_ret_t vmmouse_process_byte(struct psmouse *);
396:	static int vmmouse_reconnect(struct psmouse *);
118:	static void vmmouse_report_button(struct input_dev *, struct input_dev *, struct input_dev *, unsigned int, int, struct psmouse *);

File drivers/input/mousedev.c:
487:	static void mixdev_close_devices(struct mousedev *);
457:	static int mixdev_open_devices(struct mousedev *);
815:	static void mousedev_cleanup(struct mousedev *);
442:	static void mousedev_close_device(struct mousedev *);
977:	static int mousedev_connect(struct input_handler *, struct input_dev *, const struct input_device_id *);
845:	static struct mousedev *mousedev_create(struct input_dev *, struct input_handler *, bool);
928:	static void mousedev_destroy(struct mousedev *);
514:	static void mousedev_detach_client(struct mousedev *, struct mousedev_client *);
997:	static void mousedev_disconnect(struct input_handle *);
349:	static void mousedev_event(struct input_handle *, unsigned int, unsigned int, int);
1120:	static void mousedev_exit(void);
407:	static int mousedev_fasync(int, struct file *, int);
414:	static void mousedev_free(struct device *);
1099:	static int mousedev_init(void);
264:	static void mousedev_notify_readers(struct mousedev *, struct mousedev_hw_data *);
536:	static int mousedev_open(struct inode *, struct file *);
422:	static int mousedev_open_device(struct mousedev *);
574:	static void mousedev_packet(struct mousedev_client *, u8 *);
761:	static __poll_t mousedev_poll(struct file *, poll_table *);
719:	static ssize_t mousedev_read(struct file *, char *, size_t, loff_t *);
523:	static int mousedev_release(struct inode *, struct file *);
677:	static ssize_t mousedev_write(struct file *, const char *, size_t, loff_t *);

File drivers/input/serio/i8042-x86ia64io.h:
942:	static int i8042_pnp_aux_probe(struct pnp_dev *, const struct pnp_device_id *);
1021:	static void i8042_pnp_exit(void);
905:	static void i8042_pnp_id_to_string(struct pnp_id *, char *, int);
916:	static int i8042_pnp_kbd_probe(struct pnp_dev *, const struct pnp_device_id *);

File drivers/input/serio/i8042.c:
343:	int i8042_command(unsigned char *, int);
190:	int i8042_install_filter(bool (*)(unsigned char, unsigned char, struct serio *));
178:	void i8042_lock_chip(void);
211:	int i8042_remove_filter(bool (*)(unsigned char, unsigned char, struct serio *));
184:	void i8042_unlock_chip(void);
299:	static int __i8042_command(unsigned char *, int);
733:	static irqreturn_t i8042_aux_test_irq(int, void *);
381:	static int i8042_aux_write(struct serio *, unsigned char);
1063:	static void i8042_controller_reset(bool);
1156:	static int i8042_controller_resume(bool);
929:	static int i8042_controller_selftest(void);
1338:	static int i8042_create_aux_port(int);
1138:	static void i8042_dritek_enable(void);
618:	static int i8042_enable_aux_port(void);
599:	static int i8042_enable_kbd_port(void);
638:	static int i8042_enable_mux_ports(void);
1638:	static void i8042_exit(void);
265:	static int i8042_flush(void);
1381:	static void i8042_free_aux_ports(void);
1433:	static void i8042_free_irqs(void);
1607:	static int i8042_init(void);
502:	static irqreturn_t i8042_interrupt(int, void *);
1511:	static int i8042_kbd_bind_notifier(struct notifier_block *, unsigned long, void *);
360:	static int i8042_kbd_write(struct serio *, unsigned char);
1114:	static long i8042_panic_blink(int);
1277:	static int i8042_pm_reset(struct device *);
1284:	static int i8042_pm_restore(struct device *);
1240:	static int i8042_pm_resume(struct device *);
1232:	static int i8042_pm_resume_noirq(struct device *);
1214:	static int i8042_pm_suspend(struct device *);
1270:	static int i8042_pm_thaw(struct device *);
396:	static void i8042_port_close(struct serio *);
1534:	static int i8042_probe(struct platform_device *);
1582:	static int i8042_remove(struct platform_device *);
657:	static int i8042_set_mux_mode(bool, unsigned char *);
58:	static int i8042_set_reset(const char *, const struct kernel_param *);
1305:	static void i8042_shutdown(struct platform_device *);
435:	static int i8042_start(struct serio *);
451:	static void i8042_stop(struct serio *);
760:	static int i8042_toggle_aux(bool);
249:	static int i8042_wait_write(void);

File drivers/input/serio/libps2.c:
230:	int __ps2_command(struct ps2dev *, u8 *, unsigned int);
105:	void ps2_begin_command(struct ps2dev *);
483:	void ps2_cmd_aborted(struct ps2dev *);
331:	int ps2_command(struct ps2dev *, u8 *, unsigned int);
126:	void ps2_drain(struct ps2dev *, size_t, unsigned int);
113:	void ps2_end_command(struct ps2dev *);
394:	bool ps2_handle_ack(struct ps2dev *, u8);
463:	bool ps2_handle_response(struct ps2dev *, u8);
380:	void ps2_init(struct ps2dev *, struct serio *);
153:	bool ps2_is_keyboard_id(u8);
90:	int ps2_sendbyte(struct ps2dev *, u8, unsigned int);
351:	int ps2_sliced_command(struct ps2dev *, u8);
29:	static int ps2_do_sendbyte(struct ps2dev *, u8, unsigned int, unsigned int);

File drivers/input/serio/serio.c:
826:	int __serio_register_driver(struct serio_driver *, struct module *, const char *);
707:	void __serio_register_port(struct serio *, struct module *);
996:	void serio_close(struct serio *);
1005:	irqreturn_t serio_interrupt(struct serio *, unsigned char, unsigned int);
983:	int serio_open(struct serio *, struct serio_driver *);
697:	void serio_reconnect(struct serio *);
691:	void serio_rescan(struct serio *);
729:	void serio_unregister_child_port(struct serio *);
865:	void serio_unregister_driver(struct serio_driver *);
717:	void serio_unregister_port(struct serio *);
754:	static ssize_t bind_mode_show(struct device_driver *, char *);
760:	static ssize_t bind_mode_store(struct device_driver *, const char *, size_t);
747:	static ssize_t description_show(struct device_driver *, char *);
394:	static ssize_t drvctl_store(struct device *, struct device_attribute *, const char *, size_t);
388:	static ssize_t extra_show(struct device *, struct device_attribute *, char *);
448:	static ssize_t firmware_id_show(struct device *, struct device_attribute *, char *);
382:	static ssize_t id_show(struct device *, struct device_attribute *, char *);
362:	static ssize_t modalias_show(struct device *, struct device_attribute *, char *);
376:	static ssize_t proto_show(struct device *, struct device_attribute *, char *);
896:	static int serio_bus_match(struct device *, struct device_driver *);
801:	static void serio_cleanup(struct serio *);
565:	static void serio_destroy_port(struct serio *);
77:	static void serio_disconnect_driver(struct serio *);
656:	static void serio_disconnect_port(struct serio *);
785:	static int serio_driver_probe(struct device *);
793:	static int serio_driver_remove(struct device *);
1053:	static void serio_exit(void);
128:	static void serio_find_driver(struct serio *);
211:	static void serio_handle_event(struct work_struct *);
1040:	static int serio_init(void);
85:	static int serio_match_port(const struct serio_device_id *, struct serio *);
252:	static int serio_queue_event(void *, struct module *, enum serio_event_type);
65:	static int serio_reconnect_driver(struct serio *);
614:	static void serio_reconnect_subtree(struct serio *);
498:	static void serio_release_port(struct device *);
185:	static void serio_remove_duplicate_events(void *, enum serio_event_type);
307:	static void serio_remove_pending_events(void *);
949:	static int serio_resume(struct device *);
431:	static ssize_t serio_set_bind_mode(struct device *, struct device_attribute *, const char *, size_t);
425:	static ssize_t serio_show_bind_mode(struct device *, struct device_attribute *, char *);
356:	static ssize_t serio_show_description(struct device *, struct device_attribute *, char *);
809:	static void serio_shutdown(struct device *);
940:	static int serio_suspend(struct device *);
914:	static int serio_uevent(struct device *, struct kobj_uevent_env *);
370:	static ssize_t type_show(struct device *, struct device_attribute *, char *);

File drivers/input/serio/serport.c:
305:	static void serport_exit(void);
295:	static int serport_init(void);
108:	static void serport_ldisc_close(struct tty_struct *);
229:	static long serport_ldisc_compat_ioctl(struct tty_struct *, struct file *, unsigned int, unsigned long);
248:	static int serport_ldisc_hangup(struct tty_struct *);
211:	static int serport_ldisc_ioctl(struct tty_struct *, struct file *, unsigned int, unsigned long);
82:	static int serport_ldisc_open(struct tty_struct *);
163:	static ssize_t serport_ldisc_read(struct tty_struct *, struct file *, unsigned char *, size_t);
121:	static void serport_ldisc_receive(struct tty_struct *, const unsigned char *, char *, int);
261:	static void serport_ldisc_write_wakeup(struct tty_struct *);
67:	static void serport_serio_close(struct serio *);
54:	static int serport_serio_open(struct serio *);
48:	static int serport_serio_write(struct serio *, unsigned char);

File drivers/input/touchscreen/of_touchscreen.c:
67:	void touchscreen_parse_properties(struct input_dev *, bool, struct touchscreen_properties *);
179:	void touchscreen_report_pos(struct input_dev *, const struct touchscreen_properties *, unsigned int, unsigned int, bool);
157:	void touchscreen_set_mt_pos(struct input_mt_pos *, const struct touchscreen_properties *, unsigned int, unsigned int);
36:	static void touchscreen_set_params(struct input_dev *, unsigned long, int, int);

File drivers/iommu/amd_iommu.c:
3533:	int amd_iommu_complete_ppr(struct pci_dev *, int, int, int);
4463:	int amd_iommu_create_irq_domain(struct amd_iommu *);
3578:	int amd_iommu_device_info(struct pci_dev *, struct amd_iommu_device_info *);
3519:	int amd_iommu_domain_clear_gcr3(struct iommu_domain *, int);
3269:	void amd_iommu_domain_direct_map(struct iommu_domain *);
3290:	int amd_iommu_domain_enable_v2(struct iommu_domain *, int);
3504:	int amd_iommu_domain_set_gcr3(struct iommu_domain *, int, unsigned long);
3566:	void amd_iommu_enable_device_erratum(struct pci_dev *, u32);
3404:	int amd_iommu_flush_page(struct iommu_domain *, int, u64);
3425:	int amd_iommu_flush_tlb(struct iommu_domain *, int);
3550:	struct iommu_domain *amd_iommu_get_v2_domain(struct pci_dev *);
2787:	int amd_iommu_init_api(void);
2814:	int amd_iommu_init_dma_ops(void);
836:	irqreturn_t amd_iommu_int_handler(int, void *);
791:	irqreturn_t amd_iommu_int_thread(int, void *);
734:	int amd_iommu_register_ga_log_notifier(int (*)(u32));
3257:	int amd_iommu_register_ppr_notifier(struct notifier_block *);
3263:	int amd_iommu_unregister_ppr_notifier(struct notifier_block *);
4482:	int amd_iommu_update_ga(int, bool, void *);
327:	struct iommu_dev_data *get_dev_data(struct device *);
1199:	void iommu_flush_all_caches(struct amd_iommu *);
2147:	static void __detach_device(struct iommu_dev_data *);
1257:	static void __domain_flush_pages(struct protection_domain *, u64, size_t, int);
3337:	static int __flush_pasid(struct protection_domain *, int, u64, bool);
3439:	static u64 *__get_gcr3_pte(u64 *, int, int, bool);
1034:	static int __iommu_queue_command_sync(struct amd_iommu *, struct iommu_cmd *, bool);
240:	static int __last_alias(struct pci_dev *, u16, void *);
2356:	static dma_addr_t __map_single(struct dma_ops_domain *, phys_addr_t, size_t, enum dma_data_direction, u64, struct device *);
2417:	static void __unmap_single(struct dma_ops_domain *, dma_addr_t, size_t, int);
1622:	static void add_domain_to_list(struct protection_domain *);
2628:	static void *alloc_coherent(struct device *, size_t, dma_addr_t *, gfp_t, unsigned long);
3695:	static struct irq_remap_table *alloc_irq_table(u16);
2197:	static int amd_iommu_add_device(struct device *);
3191:	static void amd_iommu_apply_resv_region(struct device *, struct iommu_domain *, struct iommu_resv_region *);
3020:	static int amd_iommu_attach_device(struct iommu_domain *, struct device *);
3115:	static bool amd_iommu_capable(enum iommu_cap);
2990:	static void amd_iommu_detach_device(struct iommu_domain *, struct device *);
2263:	static struct iommu_group *amd_iommu_device_group(struct device *);
2712:	static int amd_iommu_dma_supported(struct device *, u64);
2912:	static struct iommu_domain *amd_iommu_domain_alloc(unsigned int);
2957:	static void amd_iommu_domain_free(struct iommu_domain *);
3211:	static void amd_iommu_flush_iotlb_all(struct iommu_domain *);
3129:	static void amd_iommu_get_resv_regions(struct device *, struct list_head *);
3219:	static void amd_iommu_iotlb_range_add(struct iommu_domain *, unsigned long, size_t);
3094:	static phys_addr_t amd_iommu_iova_to_phys(struct iommu_domain *, dma_addr_t);
3204:	static bool amd_iommu_is_attach_deferred(struct iommu_domain *, struct device *);
3056:	static int amd_iommu_map(struct iommu_domain *, unsigned long, phys_addr_t, size_t, int);
2719:	static int amd_iommu_mapping_error(struct device *, dma_addr_t);
3182:	static void amd_iommu_put_resv_regions(struct device *, struct list_head *);
2245:	static void amd_iommu_remove_device(struct device *);
3078:	static size_t amd_iommu_unmap(struct iommu_domain *, unsigned long, size_t);
4420:	static int amd_ir_set_affinity(struct irq_data *, const struct cpumask *, bool);
4336:	static int amd_ir_set_vcpu_affinity(struct irq_data *, void *);
2096:	static int attach_device(struct device *, struct protection_domain *);
894:	static void build_inv_dte(struct iommu_cmd *, u16);
901:	static void build_inv_iommu_pages(struct iommu_cmd *, u64, size_t, u16, int);
932:	static void build_inv_iotlb_pages(struct iommu_cmd *, u16, int, u64, size_t);
1023:	static void build_inv_irt(struct iommu_cmd *, u16);
392:	static bool check_device(struct device *);
1927:	static void clear_dte_entry(u16);
1635:	static void del_domain_from_list(struct protection_domain *);
2163:	static void detach_device(struct device *);
1231:	static int device_flush_dte(struct iommu_dev_data *);
1580:	static unsigned long dma_ops_alloc_iova(struct dma_ops_domain *, unsigned int, u64, struct device *);
1790:	static void dma_ops_domain_free(struct dma_ops_domain *);
1306:	static void domain_flush_complete(struct protection_domain *);
1644:	static u16 domain_id_alloc(void);
1660:	static void domain_id_free(int);
1433:	static u64 *fetch_pte(unsigned long, unsigned long *, struct protection_domain *, struct protection_domain *);
2684:	static void free_coherent(struct device *, size_t, void *, dma_addr_t, unsigned long);
1729:	static void free_gcr3_tbl_level1(u64 *);
3866:	static void free_irte(u16, int);
1699:	static void free_pagetable(struct protection_domain *, struct protection_domain *);
1693:	static void free_pt_l2(unsigned long);
1694:	static void free_pt_l3(unsigned long);
1695:	static void free_pt_l4(unsigned long);
1696:	static void free_pt_l5(unsigned long);
246:	static u16 get_alias(struct device *);
4021:	static int get_devid(struct irq_alloc_info *);
2284:	static struct protection_domain *get_domain(struct device *);
4044:	static struct irq_domain *get_ir_irq_domain(struct irq_alloc_info *);
4062:	static struct irq_domain *get_irq_domain(struct irq_alloc_info *);
3648:	static struct irq_remap_table *get_irq_table(u16);
1094:	static int iommu_completion_wait(struct amd_iommu *);
1494:	static int iommu_map_page(struct protection_domain *, unsigned long, unsigned long, unsigned long, int, gfp_t);
1071:	static int iommu_queue_command_sync(struct amd_iommu *, struct iommu_cmd *, bool);
1539:	static unsigned long iommu_unmap_page(struct protection_domain *, unsigned long, unsigned long);
1777:	static void iova_domain_flush_tlb(struct iova_domain *);
4448:	static void ir_compose_msi_msg(struct irq_data *, struct msi_msg *);
4300:	static int irq_remapping_activate(struct irq_domain *, struct irq_data *, bool);
4166:	static int irq_remapping_alloc(struct irq_domain *, unsigned int, unsigned int, void *);
4317:	static void irq_remapping_deactivate(struct irq_domain *, struct irq_data *);
4274:	static void irq_remapping_free(struct irq_domain *, unsigned int, unsigned int);
3918:	static void irte_activate(void *, u16, u16);
4007:	static void irte_clear_allocated(struct irq_remap_table *, int);
3934:	static void irte_deactivate(void *, u16, u16);
3926:	static void irte_ga_activate(void *, u16, u16);
4012:	static void irte_ga_clear_allocated(struct irq_remap_table *, int);
3942:	static void irte_ga_deactivate(void *, u16, u16);
3999:	static bool irte_ga_is_allocated(struct irq_remap_table *, int);
3902:	static void irte_ga_prepare(void *, u32, u32, u8, u32, int);
3960:	static void irte_ga_set_affinity(void *, u16, u16, u8, u32);
3981:	static void irte_ga_set_allocated(struct irq_remap_table *, int);
3991:	static bool irte_is_allocated(struct irq_remap_table *, int);
3888:	static void irte_prepare(void *, u32, u32, u8, u32, int);
3950:	static void irte_set_affinity(void *, u16, u16, u8, u32);
3976:	static void irte_set_allocated(struct irq_remap_table *, int);
2447:	static dma_addr_t map_page(struct device *, struct page *, unsigned long, size_t, enum dma_data_direction, unsigned long);
2517:	static int map_sg(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long);
3842:	static int modify_irte(u16, int, union irte *);
3807:	static int modify_irte_ga(u16, int, struct irte_ga *, struct amd_ir_data *);
2891:	static struct protection_domain *protection_domain_alloc(void);
2866:	static void protection_domain_free(struct protection_domain *);
1856:	static void set_dte_entry(u16, struct protection_domain *, bool, bool);
3687:	static void set_remap_table_entry(struct amd_iommu *, u16, struct irq_remap_table *);
2487:	static int sg_num_pages(struct device *, struct scatterlist *, int);
202:	static struct dma_ops_domain *to_dma_ops_domain(struct protection_domain *);
2472:	static void unmap_page(struct device *, dma_addr_t, size_t, enum dma_data_direction, unsigned long);
2605:	static void unmap_sg(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long);
2325:	static void update_domain(struct protection_domain *);

File drivers/iommu/amd_iommu_init.c:
1006:	int add_special_device(u8, u8, u16 *, bool);
962:	void amd_iommu_apply_erratum_63(u16);
2797:	int amd_iommu_detect(void);
2724:	void amd_iommu_disable(void);
2712:	int amd_iommu_enable(void);
2736:	int amd_iommu_enable_faulting(void);
306:	int amd_iommu_get_num_iommus(void);
2990:	u8 amd_iommu_pc_get_max_banks(unsigned int);
3007:	u8 amd_iommu_pc_get_max_counters(unsigned int);
3056:	int amd_iommu_pc_get_reg(struct amd_iommu *, u8, u8, u8, u64 *);
3065:	int amd_iommu_pc_set_reg(struct amd_iommu *, u8, u8, u8, u64 *);
3001:	bool amd_iommu_pc_supported(void);
2700:	int amd_iommu_prepare(void);
2729:	int amd_iommu_reenable(int);
618:	void amd_iommu_reset_cmd_buffer(struct amd_iommu *);
2965:	bool amd_iommu_v2_supported(void);
2971:	struct amd_iommu *get_amd_iommu(unsigned int);
272:	bool translation_pre_enabled(struct amd_iommu *);
1043:	static int add_acpi_hid_device(u8 *, u8 *, u16 *, bool);
2748:	static int amd_iommu_init(void);
2288:	static void amd_iommu_resume(void);
1682:	static ssize_t amd_iommu_show_cap(struct device *, struct device_attribute *, char *);
1691:	static ssize_t amd_iommu_show_features(struct device *, struct device_attribute *, char *);
2301:	static int amd_iommu_suspend(void);
2270:	static void disable_iommus(void);
2436:	static int early_amd_iommu_init(void);
2209:	static void early_enable_iommus(void);
2253:	static void enable_iommus_v2(void);
2400:	static void free_dma_resources(void);
739:	static void free_ga_log(struct amd_iommu *);
2314:	static void free_iommu_resources(void);
1140:	static int init_iommu_from_acpi(struct amd_iommu *, struct ivhd_header *);
423:	static void iommu_disable(struct amd_iommu *);
634:	static void iommu_enable_command_buffer(struct amd_iommu *);
671:	static void iommu_enable_event_buffer(struct amd_iommu *);
2169:	static void iommu_enable_ga(struct amd_iommu *);
2684:	static int iommu_go_to_state(enum iommu_init_state);
1929:	static int iommu_init_msi(struct amd_iommu *);
3018:	static int iommu_pc_get_set_reg(struct amd_iommu *, u8, u8, u8, u64 *, bool);
376:	static void iommu_set_device_table(struct amd_iommu *);
2825:	static int parse_amd_iommu_dump(char *);
2832:	static int parse_amd_iommu_intr(char *);
2847:	static int parse_amd_iommu_options(char *);
2921:	static int parse_ivrs_acpihid(char *);
2891:	static int parse_ivrs_hpet(char *);
2861:	static int parse_ivrs_ioapic(char *);
983:	static void set_dev_entry_from_acpi(struct amd_iommu *, u16, u32, u32);
1117:	static void set_device_exclusion_range(u16, struct ivmd_header *);

File drivers/iommu/amd_iommu_quirks.c:
101:	void amd_iommu_apply_ivrs_quirks(void);
47:	static int ivrs_ioapic_quirk_cb(const struct dmi_system_id *);

File drivers/iommu/dmar.c:
900:	int detect_intel_iommu(void);
702:	bool dmar_acpi_insert_dev_scope(u8, struct acpi_device *, void *, void *, struct dmar_dev_scope *, int);
91:	void *dmar_alloc_dev_scope(void *, void *, int *);
787:	int dmar_dev_scope_init(void);
2049:	int dmar_device_add(acpi_handle);
2054:	int dmar_device_remove(acpi_handle);
1379:	void dmar_disable_qi(struct intel_iommu *);
1444:	int dmar_enable_qi(struct intel_iommu *);
1628:	irqreturn_t dmar_fault(int, void *);
673:	struct dmar_drhd_unit *dmar_find_matched_drhd_unit(struct pci_dev *);
114:	void dmar_free_dev_scope(struct dmar_dev_scope **, int *);
1782:	int dmar_ir_support(void);
1566:	void dmar_msi_mask(struct irq_data *);
1593:	void dmar_msi_read(int, struct msi_msg *);
1552:	void dmar_msi_unmask(struct irq_data *);
1580:	void dmar_msi_write(int, struct msi_msg *);
221:	int dmar_pci_insert_dev_scope(struct dmar_pci_notify_info *, void *, void *, u16, struct dmar_dev_scope *, int);
1757:	int dmar_reenable_qi(struct intel_iommu *);
820:	void dmar_register_bus_notifier(void);
278:	int dmar_remove_dev_scope(struct dmar_pci_notify_info *, struct dmar_dev_scope *, int, u16);
1701:	int dmar_set_interrupt(struct intel_iommu *);
826:	int dmar_table_init(void);
1725:	int enable_drhd_fault_handling(void);
1321:	void qi_flush_context(struct intel_iommu *, u16, u16, u8, u64);
1355:	void qi_flush_dev_iotlb(struct intel_iommu *, u16, u16, u16, u64, unsigned int);
1333:	void qi_flush_iotlb(struct intel_iommu *, u16, u64, unsigned int, u64);
1310:	void qi_global_iec(struct intel_iommu *);
1234:	int qi_submit_sync(struct qi_desc *, struct intel_iommu *);
1414:	static void __dmar_enable_qi(struct intel_iommu *);
133:	static struct dmar_pci_notify_info *dmar_alloc_pci_notify_info(struct pci_dev *, unsigned long);
2015:	static int dmar_device_hotplug(acpi_handle, bool);
438:	static void dmar_free_drhd(struct dmar_drhd_unit *);
1022:	static void dmar_free_seq_id(struct intel_iommu *);
1797:	static int dmar_free_unused_resources(void);
2002:	static acpi_status dmar_get_dsm_handle(acpi_handle, u32, void *, void **);
1876:	static int dmar_hp_add_drhd(struct acpi_dmar_header *, void *);
1918:	static int dmar_hp_release_drhd(struct acpi_dmar_header *, void *);
1892:	static int dmar_hp_remove_drhd(struct acpi_dmar_header *, void *);
1542:	static int dmar_msi_reg(struct intel_iommu *, struct intel_iommu *, int);
447:	static int dmar_parse_one_andd(struct acpi_dmar_header *, void *);
390:	static int dmar_parse_one_drhd(struct acpi_dmar_header *, void *);
469:	static int dmar_parse_one_rhsa(struct acpi_dmar_header *, void *);
298:	static int dmar_pci_bus_add_dev(struct dmar_pci_notify_info *);
336:	static int dmar_pci_bus_notifier(struct notifier_block *, unsigned long, void *);
542:	static int dmar_table_detect(void);
863:	static int dmar_validate_one_drhd(struct acpi_dmar_header *, void *);
1844:	static int dmar_walk_dsm_resource(acpi_handle, int, dmar_res_handler_t, void *);
557:	static int dmar_walk_remapping_entries(struct acpi_dmar_header *, size_t, struct dmar_res_callback *);
850:	static void warn_invalid_dmar(u64, const char *);

File drivers/iommu/intel-iommu.c:
599:	void *alloc_pgtable_page(int);
4348:	int dmar_check_one_atsr(struct acpi_dmar_header *, void *);
4488:	int dmar_find_matched_atsr_unit(struct pci_dev *);
4451:	int dmar_iommu_hotplug(struct dmar_drhd_unit *, bool);
4552:	int dmar_iommu_notify_scope_dev(struct dmar_pci_notify_info *);
4286:	int dmar_parse_one_atsr(struct acpi_dmar_header *, void *);
4236:	int dmar_parse_one_rmrr(struct acpi_dmar_header *, void *);
4332:	int dmar_release_one_atsr(struct acpi_dmar_header *, void *);
4532:	int dmar_rmrr_add_acpi_dev(u8, struct acpi_device *);
693:	struct intel_iommu *domain_get_iommu(struct dmar_domain *);
477:	int for_each_device_domain(int (*)(struct device_domain_info *, void *), void *);
610:	void free_pgtable_page(void *);
3591:	struct dmar_domain *get_valid_domain_for_dev(struct device *);
4828:	int intel_iommu_init(void);
687:	int iommu_calculate_agaw(struct intel_iommu *);
677:	int iommu_calculate_max_sagaw(struct intel_iommu *);
4972:	static void __dmar_remove_one_dev_info(struct device_domain_info *);
2246:	static int __domain_mapping(struct dmar_domain *, unsigned long, struct scatterlist *, unsigned long, unsigned long, int);
3682:	static dma_addr_t __intel_map_single(struct device *, phys_addr_t, size_t, int, u64);
659:	static int __iommu_calculate_agaw(int, struct intel_iommu *);
1347:	static void __iommu_flush_context(struct intel_iommu *, u16, u16, u8, u64);
1381:	static void __iommu_flush_iotlb(struct intel_iommu *, u16, u64, unsigned int, u64);
1814:	static struct dmar_domain *alloc_domain(int);
3031:	static int dev_prepare_static_identity_mapping(struct device *, int);
932:	static int device_context_mapped(struct intel_iommu *, u8, u8);
2901:	static bool device_has_rmrr(struct device *);
2947:	static bool device_is_rmrr_locked(struct device *);
4609:	static int device_notifier(struct notifier_block *, unsigned long, void *);
856:	static struct intel_iommu *device_to_iommu(struct device *, u8 *, u8 *);
1745:	static void disable_dmar_iommu(struct intel_iommu *);
1267:	static void dma_free_pagelist(struct page *);
1189:	static struct page *dma_pte_clear_level(struct dmar_domain *, int, struct dma_pte *, unsigned long, unsigned long, unsigned long, struct page *);
1063:	static void dma_pte_clear_range(struct dmar_domain *, unsigned long, unsigned long);
1094:	static void dma_pte_free_level(struct dmar_domain *, int, int, struct dma_pte *, unsigned long, unsigned long, unsigned long);
1137:	static void dma_pte_free_pagetable(struct dmar_domain *, unsigned long, unsigned long, int);
1165:	static struct page *dma_pte_list_pagetables(struct dmar_domain *, int, struct dma_pte *, struct page *);
4268:	static struct dmar_atsr_unit *dmar_find_atsr(struct acpi_dmar_atsr *);
2483:	static struct dmar_domain *dmar_insert_one_dev_info(struct intel_iommu *, int, int, struct device *, struct dmar_domain *);
4999:	static void dmar_remove_one_dev_info(struct device *, struct dmar_domain *);
2884:	static int domain_add_dev_info(struct dmar_domain *, struct device *);
4950:	static int domain_context_clear_one_cb(struct pci_dev *, u16, void *);
2186:	static int domain_context_mapped_cb(struct pci_dev *, u16, void *);
2156:	static int domain_context_mapping_cb(struct pci_dev *, u16, void *);
2030:	static int domain_context_mapping_one(struct dmar_domain *, struct intel_iommu *, u8, u8);
2007:	static void domain_exit(struct dmar_domain *);
2361:	static int domain_mapping(struct dmar_domain *, unsigned long, struct scatterlist *, unsigned long, unsigned long, int);
2720:	static int domain_prepare_identity_map(struct device *, struct dmar_domain *, unsigned long long, unsigned long long);
1241:	static struct page *domain_unmap(struct dmar_domain *, unsigned long, unsigned long);
783:	static void domain_update_iommu_cap(struct dmar_domain *);
758:	static int domain_update_iommu_superpage(struct intel_iommu *);
1459:	static void domain_update_iotlb(struct dmar_domain *);
2589:	static struct dmar_domain *find_or_alloc_domain(struct device *, int);
1786:	static void free_dmar_iommu(struct intel_iommu *);
2583:	static int get_last_alias(struct pci_dev *, u16, void *);
3307:	static int init_dmars(void);
3801:	static void *intel_alloc_coherent(struct device *, size_t, dma_addr_t *, gfp_t, unsigned long);
3558:	static unsigned long intel_alloc_iova(struct device *, struct dmar_domain *, unsigned long, uint64_t);
3849:	static void intel_free_coherent(struct device *, size_t, void *, dma_addr_t, unsigned long);
5237:	static int intel_iommu_add_device(struct device *);
5069:	static int intel_iommu_attach_device(struct iommu_domain *, struct device *);
5227:	static bool intel_iommu_capable(enum iommu_cap);
4729:	static int intel_iommu_cpu_dead(unsigned int);
5133:	static void intel_iommu_detach_device(struct iommu_domain *, struct device *);
5036:	static struct iommu_domain *intel_iommu_domain_alloc(unsigned int);
5064:	static void intel_iommu_domain_free(struct iommu_domain *);
5279:	static void intel_iommu_get_resv_regions(struct device *, struct list_head *);
3088:	static void intel_iommu_init_qi(struct intel_iommu *);
5212:	static phys_addr_t intel_iommu_iova_to_phys(struct iommu_domain *, dma_addr_t);
5139:	static int intel_iommu_map(struct iommu_domain *, unsigned long, phys_addr_t, size_t, int);
4639:	static int intel_iommu_memory_notifier(struct notifier_block *, unsigned long, void *);
5319:	static void intel_iommu_put_resv_regions(struct device *, struct list_head *);
5265:	static void intel_iommu_remove_device(struct device *);
520:	static int intel_iommu_setup(char *);
4762:	static ssize_t intel_iommu_show_address(struct device *, struct device_attribute *, char *);
4771:	static ssize_t intel_iommu_show_cap(struct device *, struct device_attribute *, char *);
4780:	static ssize_t intel_iommu_show_ecap(struct device *, struct device_attribute *, char *);
4789:	static ssize_t intel_iommu_show_ndoms(struct device *, struct device_attribute *, char *);
4798:	static ssize_t intel_iommu_show_ndoms_used(struct device *, struct device_attribute *, char *);
4751:	static ssize_t intel_iommu_show_version(struct device *, struct device_attribute *, char *);
5177:	static size_t intel_iommu_unmap(struct iommu_domain *, unsigned long, size_t);
3741:	static dma_addr_t intel_map_page(struct device *, struct page *, unsigned long, size_t, enum dma_data_direction, unsigned long);
3893:	static int intel_map_sg(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long);
3950:	static int intel_mapping_error(struct device *, dma_addr_t);
3750:	static void intel_unmap(struct device *, dma_addr_t, size_t);
3794:	static void intel_unmap_page(struct device *, dma_addr_t, size_t, enum dma_data_direction, unsigned long);
3863:	static void intel_unmap_sg(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long);
1285:	static int iommu_alloc_root_entry(struct intel_iommu *);
1642:	static void iommu_disable_protect_mem_regions(struct intel_iommu *);
1678:	static void iommu_disable_translation(struct intel_iommu *);
2695:	static int iommu_domain_identity_map(struct dmar_domain *, unsigned long long, unsigned long long);
1662:	static void iommu_enable_translation(struct intel_iommu *);
1554:	static void iommu_flush_dev_iotlb(struct dmar_domain *, u64, unsigned int);
1577:	static void iommu_flush_iotlb_psi(struct intel_iommu *, struct dmar_domain *, unsigned long, unsigned int, int, int);
1623:	static void iommu_flush_iova(struct iova_domain *);
1328:	static void iommu_flush_write_buffer(struct intel_iommu *);
1695:	static int iommu_init_domains(struct intel_iommu *);
3639:	static int iommu_no_mapping(struct device *);
2781:	static int iommu_prepare_identity_map(struct device *, unsigned long long, unsigned long long);
4187:	static void iommu_resume(void);
1306:	static void iommu_set_root_entry(struct intel_iommu *);
2962:	static int iommu_should_identity_map(struct device *, int);
4147:	static int iommu_suspend(void);
1277:	static void iova_entry_free(unsigned long);
838:	static bool is_downstream_to_pci_bridge(struct device *, struct device *);
5011:	static int md_domain_init(struct dmar_domain *, int);
975:	static struct dma_pte *pfn_to_dma_pte(struct dmar_domain *, unsigned long, int *);
5507:	static void quirk_calpella_no_shadow_gtt(struct pci_dev *);
4032:	static void quirk_ioat_snb_local_iommu(struct pci_dev *);
5464:	static void quirk_iommu_g4x_gfx(struct pci_dev *);
5479:	static void quirk_iommu_rwbf(struct pci_dev *);
2636:	static struct dmar_domain *set_domain_for_dev(struct device *, struct dmar_domain *);
581:	static void set_iommu_domain(struct intel_iommu *, u16, struct dmar_domain *);

File drivers/iommu/intel-pasid.c:
29:	int intel_pasid_alloc_id(void *, int, int, gfp_t);
120:	int intel_pasid_alloc_table(struct device *);
232:	void intel_pasid_clear_entry(struct device *, int);
46:	void intel_pasid_free_id(int);
167:	void intel_pasid_free_table(struct device *);
198:	int intel_pasid_get_dev_max_id(struct device *);
209:	struct pasid_entry *intel_pasid_get_entry(struct device *, int);
187:	struct pasid_table *intel_pasid_get_table(struct device *);
53:	void *intel_pasid_lookup_id(int);
105:	static int get_alias_pasid_table(struct pci_dev *, u16, void *);
90:	static int search_pasid_table(struct device_domain_info *, void *);

File drivers/iommu/intel_irq_remapping.c:
1459:	int dmar_ir_hotplug(struct dmar_drhd_unit *, bool);
989:	static void disable_irq_remapping(void);
663:	static void intel_cleanup_irq_remapping(void);
776:	static int intel_enable_irq_remapping(void);
1294:	static void intel_free_irq_resources(struct irq_domain *, unsigned int, unsigned int);
1068:	static struct irq_domain *intel_get_ir_irq_domain(struct irq_alloc_info *);
1094:	static struct irq_domain *intel_get_irq_domain(struct irq_alloc_info *);
1180:	static void intel_ir_compose_msi_msg(struct irq_data *, struct msi_msg *);
1125:	static void intel_ir_reconfigure_irte(struct irq_data *, bool);
1158:	static int intel_ir_set_affinity(struct irq_data *, const struct cpumask *, bool);
1188:	static int intel_ir_set_vcpu_affinity(struct irq_data *, void *);
1399:	static int intel_irq_remapping_activate(struct irq_domain *, struct irq_data *, bool);
1316:	static int intel_irq_remapping_alloc(struct irq_domain *, unsigned int, unsigned int, void *);
1406:	static void intel_irq_remapping_deactivate(struct irq_domain *, struct irq_data *);
1392:	static void intel_irq_remapping_free(struct irq_domain *, unsigned int, unsigned int);
679:	static int intel_prepare_irq_remapping(void);
501:	static int intel_setup_irq_remapping(struct intel_iommu *);
602:	static void intel_teardown_irq_remapping(struct intel_iommu *);
624:	static void iommu_disable_irq_remapping(struct intel_iommu *);
473:	static void iommu_enable_irq_remapping(struct intel_iommu *);
446:	static void iommu_set_irq_remapping(struct intel_iommu *, int);
974:	static int ir_dev_scope_init(void);
897:	static int ir_parse_ioapic_hpet_scope(struct acpi_dmar_header *, struct intel_iommu *);
155:	static int modify_irte(struct irq_2_iommu *, struct irte *);
1011:	static int reenable_irq_remapping(int);
750:	static void set_irq_posting_cap(void);
359:	static int set_msi_sid_cb(struct pci_dev *, u16, void *);

File drivers/iommu/iommu-sysfs.c:
106:	int iommu_device_link(struct iommu_device *, struct device *);
57:	int iommu_device_sysfs_add(struct iommu_device *, struct device *, const struct attribute_group **, const char *, ...);
94:	void iommu_device_sysfs_remove(struct iommu_device *);
126:	void iommu_device_unlink(struct iommu_device *, struct device *);
46:	static int iommu_dev_init(void);
35:	static void iommu_release_device(struct device *);

File drivers/iommu/iommu.c:
1478:	int bus_set_iommu(struct bus_type *, const struct iommu_ops *);
1186:	struct iommu_group *generic_device_group(struct device *);
2220:	struct iommu_resv_region *iommu_alloc_resv_region(phys_addr_t, size_t, int, enum iommu_resv_type);
1584:	int iommu_attach_device(struct iommu_domain *, struct device *);
1795:	int iommu_attach_group(struct iommu_domain *, struct iommu_group *);
1612:	int iommu_bind_pasid_table(struct iommu_domain *, struct device *, struct pasid_table_config *);
1502:	bool iommu_capable(struct bus_type *, enum iommu_cap);
1713:	void iommu_detach_device(struct iommu_domain *, struct device *);
1842:	void iommu_detach_group(struct iommu_domain *, struct iommu_group *);
99:	int iommu_device_register(struct iommu_device *);
108:	void iommu_device_unregister(struct iommu_device *);
1555:	struct iommu_domain *iommu_domain_alloc(struct bus_type *);
1561:	void iommu_domain_free(struct iommu_domain *);
2139:	int iommu_domain_get_attr(struct iommu_domain *, enum iommu_attr, void *);
2177:	int iommu_domain_set_attr(struct iommu_domain *, enum iommu_attr, void *);
2076:	void iommu_domain_window_disable(struct iommu_domain *, u32);
2065:	int iommu_domain_window_enable(struct iommu_domain *, u32, phys_addr_t, u64, int);
2338:	int iommu_fwspec_add_ids(struct device *, u32 *, int);
2326:	void iommu_fwspec_free(struct device *);
2306:	int iommu_fwspec_init(struct device *, struct fwnode_handle *, const struct iommu_ops *);
1756:	struct iommu_domain *iommu_get_dma_domain(struct device *);
1735:	struct iommu_domain *iommu_get_domain_for_dev(struct device *);
269:	int iommu_get_group_resv_regions(struct iommu_group *, struct list_head *);
2204:	void iommu_get_resv_regions(struct device *, struct list_head *);
616:	int iommu_group_add_device(struct iommu_group *, struct device *);
380:	struct iommu_group *iommu_group_alloc(void);
1332:	struct iommu_domain *iommu_group_default_domain(struct iommu_group *);
784:	int iommu_group_for_each_dev(struct iommu_group *, void *, int (*)(struct device *, void *));
805:	struct iommu_group *iommu_group_get(struct device *);
438:	struct iommu_group *iommu_group_get_by_id(int);
1268:	struct iommu_group *iommu_group_get_for_dev(struct device *);
475:	void *iommu_group_get_iommudata(struct iommu_group *);
1068:	int iommu_group_id(struct iommu_group *);
836:	void iommu_group_put(struct iommu_group *);
823:	struct iommu_group *iommu_group_ref_get(struct iommu_group *);
852:	int iommu_group_register_notifier(struct iommu_group *, struct notifier_block *);
711:	void iommu_group_remove_device(struct device *);
491:	void iommu_group_set_iommudata(struct iommu_group *, void *, void (*)(void *));
507:	int iommu_group_set_name(struct iommu_group *, const char *);
534:	struct iommu_domain *iommu_group_share_domain(struct iommu_group *);
866:	int iommu_group_unregister_notifier(struct iommu_group *, struct notifier_block *);
546:	struct iommu_domain *iommu_group_unshare_domain(struct iommu_group *);
1850:	phys_addr_t iommu_iova_to_phys(struct iommu_domain *, dma_addr_t);
1891:	int iommu_map(struct iommu_domain *, unsigned long, phys_addr_t, size_t, int);
2022:	size_t iommu_map_sg(struct iommu_domain *, unsigned long, struct scatterlist *, unsigned int, int);
2291:	const struct iommu_ops *iommu_ops_from_fwnode(struct fwnode_handle *);
1646:	int iommu_page_response(struct device *, struct page_response_msg *);
1496:	bool iommu_present(struct bus_type *);
2212:	void iommu_put_resv_regions(struct device *, struct list_head *);
926:	int iommu_register_device_fault_handler(struct device *, iommu_dev_fault_handler_t, void *);
1013:	int iommu_report_device_fault(struct device *, struct iommu_fault_event *);
2239:	int iommu_request_dm_for_dev(struct device *);
1523:	void iommu_set_fault_handler(struct iommu_domain *, iommu_fault_handler_t, void *);
2386:	int iommu_sva_bind_device(struct device *, struct mm_struct *, int *, unsigned long, void *);
1631:	int iommu_sva_invalidate(struct iommu_domain *, struct device *, struct tlb_invalidate_info *);
2428:	int iommu_sva_unbind_device(struct device *, int);
1622:	void iommu_unbind_pasid_table(struct iommu_domain *, struct device *);
2008:	size_t iommu_unmap(struct iommu_domain *, unsigned long, size_t);
2015:	size_t iommu_unmap_fast(struct iommu_domain *, unsigned long, size_t);
975:	int iommu_unregister_device_fault_handler(struct device *);
1195:	struct iommu_group *pci_device_group(struct device *);
2109:	int report_iommu_fault(struct iommu_domain *, struct device *, unsigned long, int);
1567:	static int __iommu_attach_device(struct iommu_domain *, struct device *);
1778:	static int __iommu_attach_group(struct iommu_domain *, struct iommu_group *);
1816:	static void __iommu_detach_group(struct iommu_domain *, struct iommu_group *);
1534:	static struct iommu_domain *__iommu_domain_alloc(struct bus_type *, unsigned int);
1948:	static size_t __iommu_unmap(struct iommu_domain *, unsigned long, size_t, bool);
1337:	static int add_iommu_group(struct device *, void *);
1127:	static struct iommu_group *get_pci_alias_group(struct pci_dev *, unsigned long *);
1172:	static int get_pci_alias_or_group(struct pci_dev *, u16, void *);
1093:	static struct iommu_group *get_pci_function_alias_group(struct pci_dev *, unsigned long *);
1372:	static int iommu_bus_notifier(struct notifier_block *, unsigned long, void *);
875:	static void iommu_dev_fault_timer_fn(struct timer_list *);
138:	static int iommu_dma_setup(char *);
144:	static ssize_t iommu_group_attr_show(struct kobject *, struct attribute *, char *);
156:	static ssize_t iommu_group_attr_store(struct kobject *, struct attribute *, const char *, size_t);
346:	static void iommu_group_release(struct kobject *);
186:	static ssize_t iommu_group_show_name(struct iommu_group *, char *);
291:	static ssize_t iommu_group_show_resv_regions(struct iommu_group *, char *);
313:	static ssize_t iommu_group_show_type(struct iommu_group *, char *);
2127:	static int iommu_init(void);
203:	static int iommu_insert_resv_region(struct iommu_resv_region *, struct list_head *);
1859:	static size_t iommu_pgsize(unsigned long, size_t, struct iommu_domain *);
124:	static int iommu_set_def_domain_type(char *);
1361:	static int remove_iommu_group(struct device *, void *);

File drivers/iommu/iova.c:
404:	void __free_iova(struct iova_domain *, struct iova *);
325:	struct iova *alloc_iova(struct iova_domain *, unsigned long, unsigned long, bool);
443:	unsigned long alloc_iova_fast(struct iova_domain *, unsigned long, unsigned long, bool);
265:	struct iova *alloc_iova_mem(void);
728:	void copy_reserved_iova(struct iova_domain *, struct iova_domain *);
384:	struct iova *find_iova(struct iova_domain *, unsigned long);
1054:	void free_cpu_cached_iovas(unsigned int, struct iova_domain *);
422:	void free_iova(struct iova_domain *, unsigned long);
481:	void free_iova_fast(struct iova_domain *, unsigned long, unsigned long);
271:	void free_iova_mem(struct iova *);
69:	bool has_iova_flush_queue(struct iova_domain *);
42:	void init_iova_domain(struct iova_domain *, unsigned long, unsigned long);
109:	int init_iova_flush_queue(struct iova_domain *, iova_flush_cb, iova_entry_dtor);
278:	int iova_cache_get(void);
299:	void iova_cache_put(void);
615:	void put_iova_domain(struct iova_domain *);
571:	void queue_iova(struct iova_domain *, unsigned long, unsigned long, unsigned long);
683:	struct iova *reserve_iova(struct iova_domain *, unsigned long, unsigned long);
751:	struct iova *split_and_remove_iova(struct iova_domain *, struct iova *, unsigned long, unsigned long);
166:	static void __cached_rbnode_delete_update(struct iova_domain *, struct iova *);
561:	static void fq_flush_timeout(struct timer_list *);
510:	static void fq_ring_free(struct iova_domain *, struct iova_fq *);
92:	static void free_iova_work_func(struct work_struct *);
533:	static void iova_domain_flush(struct iova_domain *);
185:	static void iova_insert_rbtree(struct rb_root *, struct iova *, struct rb_node *);
823:	static void iova_magazine_free_pfns(struct iova_magazine *, struct iova_domain *);
349:	static struct iova *private_find_iova(struct iova_domain *, unsigned long);
369:	static void private_free_iova(struct iova_domain *, struct iova *);

File drivers/iommu/irq_remapping.c:
142:	int irq_remap_enable_fault_handling(void);
88:	bool irq_remapping_cap(enum irq_remap_cap);
128:	void irq_remapping_disable(void);
113:	int irq_remapping_enable(void);
168:	struct irq_domain *irq_remapping_get_ir_irq_domain(struct irq_alloc_info *);
186:	struct irq_domain *irq_remapping_get_irq_domain(struct irq_alloc_info *);
97:	int irq_remapping_prepare(void);
134:	int irq_remapping_reenable(int);
153:	void panic_if_irq_remap(const char *);
83:	void set_irq_remapping_broken(void);
30:	static void irq_remapping_restore_boot_irq_mode(void);
55:	static int setup_irqremap(char *);
48:	static int setup_nointremap(char *);

File drivers/leds/led-class.c:
405:	void devm_led_classdev_unregister(struct device *, struct led_classdev *);
366:	int devm_of_led_classdev_register(struct device *, struct device_node *, struct led_classdev *);
183:	void led_classdev_resume(struct led_classdev *);
172:	void led_classdev_suspend(struct led_classdev *);
324:	void led_classdev_unregister(struct led_classdev *);
253:	int of_led_classdev_register(struct device *, struct device_node *, struct led_classdev *);
28:	static ssize_t brightness_show(struct device *, struct device_attribute *, char *);
39:	static ssize_t brightness_store(struct device *, struct device_attribute *, const char *, size_t);
390:	static int devm_led_classdev_match(struct device *, void *, void *);
355:	static void devm_led_classdev_release(struct device *, void *);
205:	static int led_resume(struct device *);
195:	static int led_suspend(struct device *);
424:	static void leds_exit(void);
414:	static int leds_init(void);
218:	static int match_name(struct device *, const void *);
68:	static ssize_t max_brightness_show(struct device *, struct device_attribute *, char *);

File drivers/leds/led-core.c:
185:	void led_blink_set(struct led_classdev *, unsigned long *, unsigned long *);
199:	void led_blink_set_oneshot(struct led_classdev *, unsigned long *, unsigned long *, int);
177:	void led_init_core(struct led_classdev *);
229:	void led_set_brightness(struct led_classdev *, enum led_brightness);
257:	void led_set_brightness_nopm(struct led_classdev *, enum led_brightness);
270:	void led_set_brightness_nosleep(struct led_classdev *, enum led_brightness);
282:	int led_set_brightness_sync(struct led_classdev *, enum led_brightness);
220:	void led_stop_software_blink(struct led_classdev *);
314:	void led_sysfs_disable(struct led_classdev *);
323:	void led_sysfs_enable(struct led_classdev *);
297:	int led_update_brightness(struct led_classdev *);
161:	static void led_blink_setup(struct led_classdev *, unsigned long *, unsigned long *);
48:	static void led_timer_function(struct timer_list *);
105:	static void set_brightness_delayed(struct work_struct *);

File drivers/leds/led-triggers.c:
291:	int devm_led_trigger_register(struct device *, struct led_trigger *);
353:	void led_trigger_blink(struct led_trigger *, unsigned long *, unsigned long *);
361:	void led_trigger_blink_oneshot(struct led_trigger *, unsigned long *, unsigned long *, int);
316:	void led_trigger_event(struct led_trigger *, enum led_brightness);
227:	int led_trigger_register(struct led_trigger *);
370:	void led_trigger_register_simple(const char *, struct led_trigger **);
186:	void led_trigger_remove(struct led_classdev *);
212:	void led_trigger_rename_static(const char *, struct led_trigger *);
106:	int led_trigger_set(struct led_classdev *, struct led_trigger *);
194:	void led_trigger_set_default(struct led_classdev *);
73:	ssize_t led_trigger_show(struct device *, struct device_attribute *, char *);
33:	ssize_t led_trigger_store(struct device *, struct device_attribute *, const char *, size_t);
262:	void led_trigger_unregister(struct led_trigger *);
394:	void led_trigger_unregister_simple(struct led_trigger *);
286:	static void devm_led_trigger_release(struct device *, void *);

File drivers/leds/trigger/ledtrig-disk.c:
25:	void ledtrig_disk_activity(bool);
42:	static int ledtrig_disk_init(void);

File drivers/macintosh/mac_hid.c:
92:	static int mac_hid_emumouse_connect(struct input_handler *, struct input_dev *, const struct input_device_id *);
136:	static void mac_hid_emumouse_disconnect(struct input_handle *);
70:	static bool mac_hid_emumouse_filter(struct input_handle *, unsigned int, unsigned int, int);
276:	static void mac_hid_exit(void);
266:	static int mac_hid_init(void);
178:	static void mac_hid_stop_emulation(void);
184:	static int mac_hid_toggle_emumouse(struct ctl_table *, int, void *, size_t *, loff_t *);

File drivers/mailbox/mailbox.c:
153:	void mbox_chan_received_data(struct mbox_chan *, void *);
171:	void mbox_chan_txdone(struct mbox_chan *, int);
218:	bool mbox_client_peek_data(struct mbox_chan *);
192:	void mbox_client_txdone(struct mbox_chan *, int);
449:	int mbox_controller_register(struct mbox_controller *);
500:	void mbox_controller_unregister(struct mbox_controller *);
409:	void mbox_free_channel(struct mbox_chan *);
303:	struct mbox_chan *mbox_request_channel(struct mbox_client *, int);
373:	struct mbox_chan *mbox_request_channel_byname(struct mbox_client *, const char *);
251:	int mbox_send_message(struct mbox_chan *, void *);
56:	static void msg_submit(struct mbox_chan *);
432:	static struct mbox_chan *of_mbox_index_xlate(struct mbox_controller *, const struct of_phandle_args *);
93:	static void tx_tick(struct mbox_chan *, int);
117:	static enum hrtimer_restart txdone_hrtimer(struct hrtimer *);

File drivers/mailbox/pcc.c:
295:	void pcc_mbox_free_channel(struct mbox_chan *);
239:	struct mbox_chan *pcc_mbox_request_channel(struct mbox_client *, int);
438:	static int acpi_pcc_probe(void);
385:	static int parse_pcc_subspace(union acpi_subtable_headers *, const unsigned long);
588:	static int pcc_init(void);
187:	static irqreturn_t pcc_mbox_irq(int, void *);
561:	static int pcc_mbox_probe(struct platform_device *);
333:	static int pcc_send_data(struct mbox_chan *, void *);
108:	static int read_register(void *, u64 *, unsigned int);
134:	static int write_register(void *, u64, unsigned int);

File drivers/md/dm-builtin.c:
44:	void dm_kobject_release(struct kobject *);

File drivers/md/md-bitmap.c:
1953:	struct bitmap *get_bitmap_from_slot(struct mddev *, int);
1595:	void md_bitmap_close_sync(struct bitmap *);
1612:	void md_bitmap_cond_end_sync(struct bitmap *, sector_t, bool);
1977:	int md_bitmap_copy_from_slot(struct mddev *, int, sector_t *, sector_t *, bool);
1811:	struct bitmap *md_bitmap_create(struct mddev *, int);
1229:	void md_bitmap_daemon_work(struct mddev *);
1786:	void md_bitmap_destroy(struct mddev *);
1690:	void md_bitmap_dirty_bits(struct bitmap *, unsigned long, unsigned long);
1564:	void md_bitmap_end_sync(struct bitmap *, sector_t, sector_t *, int);
1459:	void md_bitmap_endwrite(struct bitmap *, sector_t, unsigned long, int, int);
1710:	void md_bitmap_flush(struct mddev *);
1736:	void md_bitmap_free(struct bitmap *);
1898:	int md_bitmap_load(struct mddev *);
482:	void md_bitmap_print_sb(struct bitmap *);
2050:	int md_bitmap_resize(struct bitmap *, sector_t, int, int);
1540:	int md_bitmap_start_sync(struct bitmap *, sector_t, sector_t *, int);
1395:	int md_bitmap_startwrite(struct bitmap *, sector_t, unsigned long, int);
2023:	void md_bitmap_status(struct seq_file *, struct bitmap *);
1642:	void md_bitmap_sync_with_cluster(struct mddev *, sector_t, sector_t, sector_t, sector_t);
1008:	void md_bitmap_unplug(struct bitmap *);
446:	void md_bitmap_update_sb(struct bitmap *);
1772:	void md_bitmap_wait_behind_writes(struct mddev *);
1182:	void md_bitmap_write_all(struct bitmap *);
2459:	static ssize_t backlog_show(struct mddev *, char *);
2465:	static ssize_t backlog_store(struct mddev *, const char *, size_t);
2580:	static ssize_t behind_writes_used_reset(struct mddev *, const char *, size_t);
2566:	static ssize_t behind_writes_used_show(struct mddev *, char *);
2534:	static ssize_t can_clear_show(struct mddev *, char *);
2547:	static ssize_t can_clear_store(struct mddev *, const char *, size_t);
2481:	static ssize_t chunksize_show(struct mddev *, char *);
2487:	static ssize_t chunksize_store(struct mddev *, const char *, size_t);
316:	static void end_bitmap_write(struct buffer_head *, int);
334:	static void free_buffers(struct page *);
2255:	static ssize_t location_show(struct mddev *, char *);
2269:	static ssize_t location_store(struct mddev *, const char *, size_t);
49:	static int md_bitmap_checkpage(struct bitmap_counts *, unsigned long, int, int);
1201:	static void md_bitmap_count_page(struct bitmap_counts *, sector_t, int);
955:	static void md_bitmap_file_clear_bit(struct bitmap *, sector_t);
865:	static void md_bitmap_file_kick(struct bitmap *);
926:	static void md_bitmap_file_set_bit(struct bitmap *, sector_t);
833:	static void md_bitmap_file_unmap(struct bitmap_storage *);
1353:	static bitmap_counter_t *md_bitmap_get_counter(struct bitmap_counts *, sector_t, sector_t *, int);
1058:	static int md_bitmap_init_from_disk(struct bitmap *, sector_t);
1663:	static void md_bitmap_set_memory_bits(struct bitmap *, sector_t, int);
428:	static void md_bitmap_wait_writes(struct bitmap *);
2507:	static ssize_t metadata_show(struct mddev *, char *);
2515:	static ssize_t metadata_store(struct mddev *, const char *, size_t);
358:	static int read_page(struct file *, unsigned long, struct bitmap *, unsigned long, struct page *);
148:	static int read_sb_page(struct mddev *, loff_t, struct page *, unsigned long, int);
2376:	static ssize_t space_show(struct mddev *, char *);
2382:	static ssize_t space_store(struct mddev *, const char *, size_t);
2409:	static ssize_t timeout_show(struct mddev *, char *);
2423:	static ssize_t timeout_store(struct mddev *, const char *, size_t);
287:	static void write_page(struct bitmap *, struct page *, int);

File drivers/md/md.c:
190:	struct bio *bio_alloc_mddev(gfp_t, int, struct mddev *);
8314:	void md_allow_write(struct mddev *);
9445:	void md_autodetect_dev(dev_t);
1058:	int md_check_no_bitmap(struct mddev *);
8899:	void md_check_recovery(struct mddev *);
8152:	void md_cluster_stop(struct mddev *);
8345:	void md_do_sync(struct md_thread *);
8204:	void md_done_sync(struct mddev *, int, int);
7709:	void md_error(struct mddev *, struct md_rdev *);
736:	struct md_rdev *md_find_rdev_nr_rcu(struct mddev *, int);
759:	struct md_rdev *md_find_rdev_rcu(struct mddev *, dev_t);
9137:	void md_finish_reshape(struct mddev *);
499:	bool md_flush_request(struct mddev *, struct bio *);
283:	void md_handle_request(struct mddev *, struct bio *);
2226:	int md_integrity_add_rdev(struct md_rdev *, struct mddev *);
2179:	int md_integrity_register(struct mddev *);
2414:	void md_kick_rdev_from_array(struct md_rdev *);
225:	void md_new_event(struct mddev *);
798:	void md_rdev_clear(struct md_rdev *);
3508:	int md_rdev_init(struct md_rdev *);
9077:	void md_reap_sync_thread(struct mddev *);
7665:	struct md_thread *md_register_thread(void (*)(struct md_thread *), struct mddev *, const char *);
9401:	void md_reload_sb(struct mddev *, int);
5544:	int md_run(struct mddev *);
6921:	void md_set_array_sectors(struct mddev *, sector_t);
8136:	int md_setup_cluster(struct mddev *, int);
5833:	int md_start(struct mddev *);
6006:	void md_stop(struct mddev *);
5967:	void md_stop_writes(struct mddev *);
875:	int md_super_wait(struct mddev *);
837:	void md_super_write(struct mddev *, struct md_rdev *, sector_t, int, struct page *);
7691:	void md_unregister_thread(struct md_thread **);
2523:	void md_update_sb(struct mddev *, int);
9126:	void md_wait_for_blocked_rdev(struct md_rdev *, struct mddev *);
7655:	void md_wakeup_thread(struct md_thread *);
8291:	void md_write_end(struct mddev *);
8282:	void md_write_inc(struct mddev *, struct bio *);
8225:	bool md_write_start(struct mddev *, struct bio *);
392:	int mddev_congested(struct mddev *, int);
562:	void mddev_init(struct mddev *);
5369:	int mddev_init_writes_pending(struct mddev *);
378:	void mddev_resume(struct mddev *);
359:	void mddev_suspend(struct mddev *);
685:	void mddev_unlock(struct mddev *);
9179:	int rdev_clear_badblocks(struct md_rdev *, sector_t, int, int);
9155:	int rdev_set_badblocks(struct md_rdev *, sector_t, int, int);
8111:	int register_md_cluster_operations(struct md_cluster_operations *, struct module *);
8090:	int register_md_personality(struct md_personality *);
3681:	int strict_strtoul_scaled(const char *, unsigned long *, int);
884:	int sync_page_io(struct md_rdev *, sector_t, int, struct page *, int, int, bool);
8127:	int unregister_md_cluster_operations(void);
8101:	int unregister_md_personality(struct md_personality *);
5987:	static void __md_stop(struct mddev *);
5939:	static void __md_stop_writes(struct mddev *);
4635:	static ssize_t action_show(struct mddev *, char *);
4661:	static ssize_t action_store(struct mddev *, const char *, size_t);
2717:	static int add_bound_rdev(struct md_rdev *);
5502:	static int add_named_array(const char *, const struct kernel_param *);
6428:	static int add_new_disk(struct mddev *, mdu_disk_info_t *);
5135:	static ssize_t array_size_show(struct mddev *, char *);
5145:	static ssize_t array_size_store(struct mddev *, const char *, size_t);
4213:	static ssize_t array_state_show(struct mddev *, char *);
4254:	static ssize_t array_state_store(struct mddev *, const char *, size_t);
3344:	static ssize_t bb_show(struct md_rdev *, char *);
3348:	static ssize_t bb_store(struct md_rdev *, const char *, size_t);
2251:	static int bind_rdev_to_array(struct md_rdev *, struct mddev *);
4475:	static ssize_t bitmap_store(struct mddev *, const char *, size_t);
4074:	static ssize_t chunk_size_show(struct mddev *, char *);
4085:	static ssize_t chunk_size_store(struct mddev *, const char *, size_t);
2754:	static int cmd_match(const char *, const char *);
5192:	static ssize_t consistency_policy_show(struct mddev *, char *);
5215:	static ssize_t consistency_policy_store(struct mddev *, const char *, size_t);
4808:	static ssize_t degraded_show(struct mddev *, char *);
5797:	static int do_md_run(struct mddev *);
6080:	static int do_md_stop(struct mddev *, int, struct block_device *);
2984:	static ssize_t errors_show(struct md_rdev *, char *);
2990:	static ssize_t errors_store(struct md_rdev *, const char *, size_t);
2400:	static void export_rdev(struct md_rdev *);
771:	static struct md_personality *find_pers(int, char *);
4396:	static void flush_rdev_wq(struct mddev *);
9545:	static int get_ro(char *, const struct kernel_param *);
8160:	static int is_mddev_idle(struct mddev *, int);
4732:	static ssize_t last_sync_action_show(struct mddev *, char *);
3973:	static ssize_t layout_show(struct mddev *, char *);
3984:	static ssize_t layout_store(struct mddev *, const char *, size_t);
3747:	static ssize_t level_show(struct mddev *, char *);
3766:	static ssize_t level_store(struct mddev *, const char *, size_t);
2375:	static int lock_rdev(struct md_rdev *, dev_t, int);
4367:	static ssize_t max_corrected_read_errors_show(struct mddev *, char *);
4373:	static ssize_t max_corrected_read_errors_store(struct mddev *, const char *, size_t);
4921:	static ssize_t max_sync_show(struct mddev *, char *);
4930:	static ssize_t max_sync_store(struct mddev *, const char *, size_t);
5381:	static int md_alloc(dev_t, char *);
5279:	static ssize_t md_attr_show(struct kobject *, struct attribute *, char *);
5301:	static ssize_t md_attr_store(struct kobject *, struct attribute *, const char *, size_t);
205:	static struct bio *md_bio_alloc_sync(struct mddev *);
7512:	static int md_compat_ioctl(struct block_device *, fmode_t, unsigned int, unsigned long);
406:	static int md_congested(void *, int);
416:	static void md_end_flush(struct bio *);
9500:	static void md_exit(void);
5324:	static void md_free(struct kobject *);
7177:	static int md_getgeo(struct block_device *, struct hd_geometry *);
3544:	static struct md_rdev *md_import_device(dev_t, int, int);
9236:	static int md_init(void);
7213:	static int md_ioctl(struct block_device *, fmode_t, unsigned int, unsigned long);
314:	static blk_qc_t md_make_request(struct request_queue *, struct bio *);
7584:	static int md_media_changed(struct gendisk *);
9194:	static int md_notify_reboot(struct notifier_block *, unsigned long, void *);
7531:	static int md_open(struct block_device *, fmode_t);
5495:	static struct kobject *md_probe(dev_t, int *, void *);
7575:	static void md_release(struct gendisk *, fmode_t);
7591:	static int md_revalidate(struct gendisk *);
5531:	static void md_safemode_timeout(struct timer_list *);
7908:	static void *md_seq_next(struct seq_file *, void *, loff_t *);
8049:	static int md_seq_open(struct inode *, struct file *);
7944:	static int md_seq_show(struct seq_file *, void *);
7878:	static void *md_seq_start(struct seq_file *, loff_t *);
7936:	static void md_seq_stop(struct seq_file *, void *);
6018:	static int md_set_readonly(struct mddev *, struct block_device *);
8850:	static void md_start_sync(struct work_struct *);
467:	static void md_submit_flush_data(struct work_struct *);
7612:	static int md_thread(void *);
5358:	static void mddev_delayed_delete(struct work_struct *);
5975:	static void mddev_detach(struct mddev *);
598:	static struct mddev *mddev_find(dev_t);
539:	static void mddev_put(struct mddev *);
8064:	static __poll_t mdstat_poll(struct file *, poll_table *);
4557:	static ssize_t metadata_show(struct mddev *, char *);
4569:	static ssize_t metadata_store(struct mddev *, const char *, size_t);
4885:	static ssize_t min_sync_show(struct mddev *, char *);
4891:	static ssize_t min_sync_store(struct mddev *, const char *, size_t);
4740:	static ssize_t mismatch_cnt_show(struct mddev *, char *);
4410:	static ssize_t new_dev_store(struct mddev *, const char *, size_t);
3128:	static ssize_t new_offset_show(struct md_rdev *, char *);
3134:	static ssize_t new_offset_store(struct md_rdev *, const char *, size_t);
5367:	static void no_op(struct percpu_ref *);
4390:	static ssize_t null_show(struct mddev *, char *);
3103:	static ssize_t offset_show(struct md_rdev *, char *);
3109:	static ssize_t offset_store(struct md_rdev *, const char *, size_t);
3371:	static ssize_t ppl_sector_show(struct md_rdev *, char *);
3377:	static ssize_t ppl_sector_store(struct md_rdev *, const char *, size_t);
3410:	static ssize_t ppl_size_show(struct md_rdev *, char *);
3416:	static ssize_t ppl_size_store(struct md_rdev *, const char *, size_t);
4019:	static ssize_t raid_disks_show(struct mddev *, char *);
4033:	static ssize_t raid_disks_store(struct mddev *, const char *, size_t);
3457:	static ssize_t rdev_attr_show(struct kobject *, struct attribute *, char *);
3470:	static ssize_t rdev_attr_store(struct kobject *, struct attribute *, const char *, size_t);
2337:	static void rdev_delayed_delete(struct work_struct *);
3493:	static void rdev_free(struct kobject *);
3187:	static ssize_t rdev_size_show(struct md_rdev *, char *);
3222:	static ssize_t rdev_size_store(struct md_rdev *, const char *, size_t);
913:	static int read_disk_sb(struct md_rdev *, int);
9354:	static int read_rdev(struct mddev *, struct md_rdev *);
3298:	static ssize_t recovery_start_show(struct md_rdev *, char *);
3309:	static ssize_t recovery_start_store(struct md_rdev *, const char *, size_t);
8756:	static int remove_and_add_spares(struct mddev *, struct md_rdev *);
5094:	static ssize_t reshape_direction_show(struct mddev *, char *);
5101:	static ssize_t reshape_direction_store(struct mddev *, const char *, size_t);
5048:	static ssize_t reshape_position_show(struct mddev *, char *);
5058:	static ssize_t reshape_position_store(struct mddev *, const char *, size_t);
5848:	static int restart_array(struct mddev *);
4120:	static ssize_t resync_start_show(struct mddev *, char *);
4128:	static ssize_t resync_start_store(struct mddev *, const char *, size_t);
3712:	static ssize_t safe_delay_show(struct mddev *, char *);
3718:	static ssize_t safe_delay_store(struct mddev *, const char *, size_t);
2434:	static bool set_in_sync(struct mddev *);
9549:	static int set_ro(const char *, const struct kernel_param *);
4509:	static ssize_t size_show(struct mddev *, char *);
4518:	static ssize_t size_store(struct mddev *, const char *, size_t);
3005:	static ssize_t slot_show(struct md_rdev *, char *);
3016:	static ssize_t slot_store(struct md_rdev *, const char *, size_t);
2778:	static ssize_t state_show(struct md_rdev *, char *);
2820:	static ssize_t state_store(struct md_rdev *, const char *, size_t);
3202:	static int strict_blocks_to_sectors(const char *, sector_t *);
432:	static void submit_flushes(struct work_struct *);
2079:	static int super_1_allow_new_offset(struct md_rdev *, unsigned long long);
1510:	static int super_1_load(struct md_rdev *, struct md_rdev *, int);
2039:	static unsigned long long super_1_rdev_size_change(struct md_rdev *, sector_t);
1870:	static void super_1_sync(struct mddev *, struct md_rdev *);
1697:	static int super_1_validate(struct mddev *, struct md_rdev *);
1478:	static int super_90_allow_new_offset(struct md_rdev *, unsigned long long);
1071:	static int super_90_load(struct md_rdev *, struct md_rdev *, int);
1455:	static unsigned long long super_90_rdev_size_change(struct md_rdev *, sector_t);
1310:	static void super_90_sync(struct mddev *, struct md_rdev *);
1181:	static int super_90_validate(struct mddev *, struct md_rdev *);
815:	static void super_written(struct bio *);
5011:	static ssize_t suspend_hi_show(struct mddev *, char *);
5017:	static ssize_t suspend_hi_store(struct mddev *, const char *, size_t);
4974:	static ssize_t suspend_lo_show(struct mddev *, char *);
4980:	static ssize_t suspend_lo_store(struct mddev *, const char *, size_t);
4860:	static ssize_t sync_completed_show(struct mddev *, char *);
4815:	static ssize_t sync_force_parallel_show(struct mddev *, char *);
4821:	static ssize_t sync_force_parallel_store(struct mddev *, const char *, size_t);
4779:	static ssize_t sync_max_show(struct mddev *, char *);
4786:	static ssize_t sync_max_store(struct mddev *, const char *, size_t);
4750:	static ssize_t sync_min_show(struct mddev *, char *);
4757:	static ssize_t sync_min_store(struct mddev *, const char *, size_t);
4845:	static ssize_t sync_speed_show(struct mddev *, char *);
3359:	static ssize_t ubb_show(struct md_rdev *, char *);
3363:	static ssize_t ubb_store(struct md_rdev *, const char *, size_t);
2344:	static void unbind_rdev_from_array(struct md_rdev *);
6976:	static int update_raid_disks(struct mddev *, int);
6932:	static int update_size(struct mddev *, sector_t);

File drivers/media/cec/cec-adap.c:
1588:	int __cec_s_log_addrs(struct cec_adapter *, struct cec_log_addrs *, bool);
1507:	void __cec_s_phys_addr(struct cec_adapter *, u16, bool);
2083:	int cec_adap_status(struct seq_file *, void *);
65:	u16 cec_get_edid_phys_addr(const u8 *, unsigned int, unsigned int *);
2048:	void cec_monitor_all_cnt_dec(struct cec_adapter *);
2037:	int cec_monitor_all_cnt_inc(struct cec_adapter *);
2071:	void cec_monitor_pin_cnt_dec(struct cec_adapter *);
2060:	int cec_monitor_pin_cnt_inc(struct cec_adapter *);
86:	void cec_queue_event_fh(struct cec_fh *, const struct cec_event *, u64);
193:	void cec_queue_pin_5v_event(struct cec_adapter *, bool, ktime_t);
158:	void cec_queue_pin_cec_event(struct cec_adapter *, bool, bool, ktime_t);
177:	void cec_queue_pin_hpd_event(struct cec_adapter *, bool, ktime_t);
991:	void cec_received_msg_ts(struct cec_adapter *, struct cec_msg *, ktime_t);
1745:	int cec_s_log_addrs(struct cec_adapter *, struct cec_log_addrs *, bool);
1560:	void cec_s_phys_addr(struct cec_adapter *, u16, bool);
1571:	void cec_s_phys_addr_from_edid(struct cec_adapter *, const struct edid *);
443:	int cec_thread_func(void *);
675:	void cec_transmit_attempt_done_ts(struct cec_adapter *, u8, ktime_t);
578:	void cec_transmit_done_ts(struct cec_adapter *, u8, u8, u8, u8, u8, ktime_t);
881:	int cec_transmit_msg(struct cec_adapter *, struct cec_msg *, bool);
733:	int cec_transmit_msg_fh(struct cec_adapter *, struct cec_msg *, struct cec_fh *, bool);
1272:	static void cec_adap_unconfigure(struct cec_adapter *);
1483:	static void cec_claim_log_addrs(struct cec_adapter *, bool);
1196:	static int cec_config_log_addr(struct cec_adapter *, unsigned int, unsigned int);
1289:	static int cec_config_thread_func(void *);
357:	static void cec_data_cancel(struct cec_data *, u8);
319:	static void cec_data_completed(struct cec_data *);
1788:	static int cec_feature_abort_reason(struct cec_adapter *, struct cec_msg *, u8);
1760:	static void cec_fill_msg_report_features(struct cec_adapter *, struct cec_msg *, unsigned int);
394:	static void cec_flush(struct cec_adapter *);
301:	static void cec_post_state_event(struct cec_adapter *);
215:	static void cec_queue_msg_fh(struct cec_fh *, const struct cec_msg *);
268:	static void cec_queue_msg_monitor(struct cec_adapter *, const struct cec_msg *, bool);
705:	static void cec_wait_timeout(struct work_struct *);

File drivers/media/cec/cec-api.c:
491:	static long cec_ioctl(struct file *, unsigned int, unsigned long);
537:	static int cec_open(struct inode *, struct file *);
34:	static __poll_t cec_poll(struct file *, struct poll_table_struct *);
227:	static int cec_receive_msg(struct cec_fh *, struct cec_msg *, bool);
616:	static int cec_release(struct inode *, struct file *);

File drivers/media/cec/cec-core.c:
247:	struct cec_adapter *cec_allocate_adapter(const struct cec_adap_ops *, void *, const char *, u32, u8);
420:	void cec_delete_adapter(struct cec_adapter *);
38:	int cec_get_device(struct cec_devnode *);
62:	void cec_put_device(struct cec_devnode *);
331:	int cec_register_adapter(struct cec_adapter *, struct device *);
401:	void cec_unregister_adapter(struct cec_adapter *);
466:	static void cec_devnode_exit(void);
439:	static int cec_devnode_init(void);
68:	static void cec_devnode_release(struct device *);
233:	static int cec_error_inj_open(struct inode *, struct file *);
226:	static int cec_error_inj_show(struct seq_file *, void *);
199:	static ssize_t cec_error_inj_write(struct file *, const char *, size_t, loff_t *);

File drivers/mfd/intel-lpss-acpi.c:
122:	static void intel_lpss_acpi_driver_exit(void);
122:	static int intel_lpss_acpi_driver_init(void);
79:	static int intel_lpss_acpi_probe(struct platform_device *);
102:	static int intel_lpss_acpi_remove(struct platform_device *);

File drivers/mfd/intel-lpss-pci.c:
281:	static void intel_lpss_pci_driver_exit(void);
281:	static int intel_lpss_pci_driver_init(void);
24:	static int intel_lpss_pci_probe(struct pci_dev *, const struct pci_device_id *);
58:	static void intel_lpss_pci_remove(struct pci_dev *);

File drivers/mfd/intel-lpss.c:
492:	int intel_lpss_prepare(struct device *);
387:	int intel_lpss_probe(struct device *, const struct intel_lpss_platform_info *);
472:	void intel_lpss_remove(struct device *);
524:	int intel_lpss_resume(struct device *);
503:	int intel_lpss_suspend(struct device *);
546:	static void intel_lpss_exit(void);
539:	static int intel_lpss_init(void);
174:	static void intel_lpss_ltr_set(struct device *, s32);
484:	static int resume_lpss_device(struct device *, void *);

File drivers/mfd/mfd-core.c:
350:	int devm_mfd_add_devices(struct device *, int, const struct mfd_cell *, int, struct resource *, int, struct irq_domain *);
273:	int mfd_add_devices(struct device *, int, const struct mfd_cell *, int, struct resource *, int, struct irq_domain *);
47:	int mfd_cell_disable(struct platform_device *);
30:	int mfd_cell_enable(struct platform_device *);
376:	int mfd_clone_cell(const char *, const char **, size_t);
329:	void mfd_remove_devices(struct device *);
338:	static void devm_mfd_dev_release(struct device *, void *);
140:	static int mfd_add_device(struct device *, int, const struct mfd_cell *, atomic_t *, struct resource *, int, struct irq_domain *);
306:	static int mfd_remove_devices_fn(struct device *, void *);

File drivers/misc/kgdbts.c:
232:	static void break_helper(char *, char *, unsigned long);
306:	static int check_and_rewind_pc(char *, char *);
343:	static int check_single_step(char *, char *);
1082:	static int configure_kgdbts(void);
439:	static int emul_reset(char *, char *);
450:	static void emul_sstep_get(char *);
485:	static int emul_sstep_put(char *, char *);
703:	static void fill_get_buf(char *);
537:	static int final_ack_set(char *, char *);
425:	static void get_cont_catch(char *);
296:	static int get_thread_id_continue(char *, char *);
414:	static int got_break(char *, char *);
276:	static void hw_access_break(char *);
256:	static void hw_break(char *);
281:	static void hw_rem_access_break(char *);
261:	static void hw_rem_break(char *);
271:	static void hw_rem_write_break(char *);
266:	static void hw_write_break(char *);
1109:	static int init_kgdbts(void);
210:	static void kgdbts_break_test(void);
1119:	static int kgdbts_get_char(void);
1070:	static int kgdbts_option_setup(char *);
1172:	static void kgdbts_post_exp_handler(void);
1165:	static void kgdbts_pre_exp_handler(void);
1129:	static void kgdbts_put_char(u8);
191:	static int kgdbts_unreg_thread(void *);
216:	static unsigned long lookup_addr(char *);
1135:	static int param_set_kgdbts_var(const char *, const struct kernel_param *);
431:	static int put_cont_catch(char *, char *);
863:	static void run_breakpoint_test(int);
888:	static void run_hw_break_test(int);
838:	static void run_plant_and_detach_test(int);
752:	static int run_simple_test(int, int);
398:	static void skip_back_repeat_test(char *);
246:	static void sw_break(char *);
251:	static void sw_rem_break(char *);
722:	static int validate_simple_test(char *);
389:	static void write_regs(char *);

File drivers/net/Space.c:
136:	static int net_olddevs_init(void);
46:	static int probe_list2(int, struct devprobe2 *, int);

File drivers/net/ethernet/cavium/common/cavium_ptp.c:
56:	struct cavium_ptp *cavium_ptp_get(void);
76:	void cavium_ptp_put(struct cavium_ptp *);
90:	static int cavium_ptp_adjfine(struct ptp_clock_info *, long);
137:	static int cavium_ptp_adjtime(struct ptp_clock_info *, s64);
209:	static u64 cavium_ptp_cc_read(const struct cyclecounter *);
339:	static void cavium_ptp_driver_exit(void);
339:	static int cavium_ptp_driver_init(void);
203:	static int cavium_ptp_enable(struct ptp_clock_info *, struct ptp_clock_request *, int);
158:	static int cavium_ptp_gettime(struct ptp_clock_info *, struct timespec64 *);
217:	static int cavium_ptp_probe(struct pci_dev *, const struct pci_device_id *);
312:	static void cavium_ptp_remove(struct pci_dev *);
180:	static int cavium_ptp_settime(struct ptp_clock_info *, const struct timespec64 *);

File drivers/net/loopback.c:
132:	static u32 always_on(struct net_device *);
162:	static void loopback_dev_free(struct net_device *);
154:	static int loopback_dev_init(struct net_device *);
105:	static void loopback_get_stats64(struct net_device *, struct rtnl_link_stats64 *);
137:	static int loopback_get_ts_info(struct net_device *, struct ethtool_ts_info *);
207:	static int loopback_net_init(struct net *);
178:	static void loopback_setup(struct net_device *);
71:	static netdev_tx_t loopback_xmit(struct sk_buff *, struct net_device *);

File drivers/net/phy/fixed_phy.c:
118:	int fixed_phy_add(unsigned int, int, struct fixed_phy_status *, int);
181:	struct phy_device *fixed_phy_register(unsigned int, struct fixed_phy_status *, int, struct device_node *);
96:	int fixed_phy_set_link_update(struct phy_device *, int (*)(struct net_device *, struct fixed_phy_status *));
248:	void fixed_phy_unregister(struct phy_device *);
292:	static void fixed_mdio_bus_exit(void);
256:	static int fixed_mdio_bus_init(void);
57:	static int fixed_mdio_read(struct mii_bus *, int, int);
85:	static int fixed_mdio_write(struct mii_bus *, int, int, u16);
164:	static void fixed_phy_del(int);
51:	static void fixed_phy_update(struct fixed_phy *, struct fixed_phy *);

File drivers/net/phy/mdio-boardinfo.c:
64:	int mdiobus_register_board_info(const struct mdio_board_info *, unsigned int);
27:	void mdiobus_setup_mdiodev_from_board_info(struct mii_bus *, int (*)(struct mii_bus *, struct mdio_board_info *));

File drivers/net/phy/mdio_bus.c:
549:	int __mdiobus_read(struct mii_bus *, int, u32);
361:	int __mdiobus_register(struct mii_bus *, struct module *);
574:	int __mdiobus_write(struct mii_bus *, int, u32, u16);
189:	struct mii_bus *devm_mdiobus_alloc_size(struct device *, int);
217:	void devm_mdiobus_free(struct device *, struct mii_bus *);
751:	void mdio_bus_exit(void);
735:	int mdio_bus_init(void);
131:	struct mii_bus *mdiobus_alloc_size(size_t);
487:	void mdiobus_free(struct mii_bus *);
103:	struct phy_device *mdiobus_get_phy(struct mii_bus *, int);
117:	bool mdiobus_is_registered_device(struct mii_bus *, int);
625:	int mdiobus_read(struct mii_bus *, int, u32);
601:	int mdiobus_read_nested(struct mii_bus *, int, u32);
73:	int mdiobus_register_device(struct mdio_device *);
514:	struct phy_device *mdiobus_scan(struct mii_bus *, int);
450:	void mdiobus_unregister(struct mii_bus *);
92:	int mdiobus_unregister_device(struct mdio_device *);
678:	int mdiobus_write(struct mii_bus *, int, u32, u16);
653:	int mdiobus_write_nested(struct mii_bus *, int, u32, u16);
160:	static void _devm_mdiobus_free(struct device *, void *);
165:	static int devm_mdiobus_match(struct device *, void *, void *);
703:	static int mdio_bus_match(struct device *, struct device_driver *);
716:	static int mdio_uevent(struct device *, struct kobj_uevent_env *);
325:	static int mdiobus_create_device(struct mii_bus *, struct mdio_board_info *);
234:	static void mdiobus_release(struct device *);

File drivers/net/phy/mdio_device.c:
40:	int mdio_device_bus_match(struct device *, struct device_driver *);
51:	struct mdio_device *mdio_device_create(struct mii_bus *, int);
29:	void mdio_device_free(struct mdio_device *);
80:	int mdio_device_register(struct mdio_device *);
113:	void mdio_device_remove(struct mdio_device *);
120:	void mdio_device_reset(struct mdio_device *, int);
183:	int mdio_driver_register(struct mdio_driver *);
206:	void mdio_driver_unregister(struct mdio_driver *);
35:	static void mdio_device_release(struct device *);
142:	static int mdio_probe(struct device *);
163:	static int mdio_remove(struct device *);

File drivers/net/phy/phy-c45.c:
277:	int gen10g_config_aneg(struct phy_device *);
310:	int gen10g_config_init(struct phy_device *);
283:	int gen10g_read_status(struct phy_device *);
76:	int genphy_c45_an_disable_aneg(struct phy_device *);
123:	int genphy_c45_aneg_done(struct phy_device *);
14:	int genphy_c45_pma_setup_forced(struct phy_device *);
140:	int genphy_c45_read_link(struct phy_device *, u32);
181:	int genphy_c45_read_lpa(struct phy_device *);
246:	int genphy_c45_read_mdix(struct phy_device *);
210:	int genphy_c45_read_pma(struct phy_device *);
98:	int genphy_c45_restart_aneg(struct phy_device *);

File drivers/net/phy/phy-core.c:
337:	int __phy_modify(struct phy_device *, u32, u16, u16);
49:	const char *phy_duplex_to_str(unsigned int);
146:	const struct phy_setting *phy_lookup_setting(int, int, const unsigned long *, size_t, bool);
362:	int phy_modify(struct phy_device *, u32, u16, u16);
518:	int phy_modify_paged(struct phy_device *, int, u32, u16, u16);
258:	int phy_read_mmd(struct phy_device *, int, u32);
475:	int phy_read_paged(struct phy_device *, int, u32);
200:	void phy_resolve_aneg_linkmode(struct phy_device *);
444:	int phy_restore_page(struct phy_device *, int, int);
392:	int phy_save_page(struct phy_device *);
410:	int phy_select_page(struct phy_device *, int);
12:	const char *phy_speed_to_str(int);
177:	size_t phy_speeds(unsigned int *, size_t, unsigned long *, size_t);
296:	int phy_write_mmd(struct phy_device *, int, u32, u16);
496:	int phy_write_paged(struct phy_device *, int, u32, u16);
235:	static void mmd_phy_indirect(struct mii_bus *, int, int, u16);

File drivers/net/phy/phy.c:
145:	int phy_aneg_done(struct phy_device *);
763:	void phy_change_work(struct work_struct *);
1247:	int phy_ethtool_get_eee(struct phy_device *, struct ethtool_eee *);
1339:	int phy_ethtool_get_link_ksettings(struct net_device *, struct ethtool_link_ksettings *);
1332:	void phy_ethtool_get_wol(struct phy_device *, struct ethtool_wolinfo *);
358:	void phy_ethtool_ksettings_get(struct phy_device *, struct ethtool_link_ksettings *);
304:	int phy_ethtool_ksettings_set(struct phy_device *, const struct ethtool_link_ksettings *);
1365:	int phy_ethtool_nway_reset(struct net_device *);
1283:	int phy_ethtool_set_eee(struct phy_device *, struct ethtool_eee *);
1353:	int phy_ethtool_set_link_ksettings(struct net_device *, const struct ethtool_link_ksettings *);
1323:	int phy_ethtool_set_wol(struct phy_device *, struct ethtool_wolinfo *);
257:	int phy_ethtool_sset(struct phy_device *, struct ethtool_cmd *);
1230:	int phy_get_eee_err(struct phy_device *);
1162:	int phy_init_eee(struct phy_device *, bool);
1145:	void phy_mac_interrupt(struct phy_device *);
395:	int phy_mii_ioctl(struct phy_device *, struct ifreq *, int);
70:	void phy_print_status(struct phy_device *);
124:	int phy_restart_aneg(struct phy_device *);
589:	int phy_speed_down(struct phy_device *, bool);
621:	int phy_speed_up(struct phy_device *);
884:	void phy_start(struct phy_device *);
554:	int phy_start_aneg(struct phy_device *);
813:	int phy_start_interrupts(struct phy_device *);
648:	void phy_start_machine(struct phy_device *);
935:	void phy_state_machine(struct work_struct *);
849:	void phy_stop(struct phy_device *);
832:	int phy_stop_interrupts(struct phy_device *);
681:	void phy_stop_machine(struct phy_device *);
191:	unsigned int phy_supported_speeds(struct phy_device *, unsigned int *, unsigned int);
664:	void phy_trigger_machine(struct phy_device *, bool);
730:	static irqreturn_t phy_change(struct phy_device *);
470:	static int phy_config_aneg(struct phy_device *);
713:	static int phy_disable_interrupts(struct phy_device *);
793:	static int phy_enable_interrupts(struct phy_device *);
700:	static void phy_error(struct phy_device *);
779:	static irqreturn_t phy_interrupt(int, void *);
494:	static int phy_start_aneg_priv(struct phy_device *, bool);

File drivers/net/phy/phy_device.c:
1196:	int __phy_resume(struct phy_device *);
1488:	int genphy_aneg_done(struct phy_device *);
1442:	int genphy_config_aneg(struct phy_device *);
1663:	int genphy_config_init(struct phy_device *);
1736:	int genphy_loopback(struct phy_device *, bool);
1711:	int genphy_read_mmd_unsupported(struct phy_device *, int, u16);
1541:	int genphy_read_status(struct phy_device *);
1426:	int genphy_restart_aneg(struct phy_device *);
1730:	int genphy_resume(struct phy_device *);
1402:	int genphy_setup_forced(struct phy_device *);
1651:	int genphy_soft_reset(struct phy_device *);
1724:	int genphy_suspend(struct phy_device *);
1504:	int genphy_update_link(struct phy_device *);
1717:	int genphy_write_mmd_unsupported(struct phy_device *, int, u16, u16);
622:	struct phy_device *get_phy_device(struct mii_bus *, int, bool);
1092:	struct phy_device *phy_attach(struct net_device *, const char *, phy_interface_t);
958:	int phy_attach_direct(struct net_device *, struct phy_device *, u32, phy_interface_t);
898:	void phy_attached_info(struct phy_device *);
905:	void phy_attached_print(struct phy_device *, const char *, ...);
791:	struct phy_device *phy_connect(struct net_device *, const char *, void (*)(struct net_device *), phy_interface_t);
754:	int phy_connect_direct(struct net_device *, struct phy_device *, void (*)(struct net_device *), phy_interface_t);
1129:	void phy_detach(struct phy_device *);
400:	struct phy_device *phy_device_create(struct mii_bus *, int, int, bool, struct phy_c45_device_ids *);
45:	void phy_device_free(struct phy_device *);
644:	int phy_device_register(struct phy_device *);
687:	void phy_device_remove(struct phy_device *);
823:	void phy_disconnect(struct phy_device *);
1923:	int phy_driver_register(struct phy_driver *, struct module *);
1973:	void phy_driver_unregister(struct phy_driver *);
1956:	int phy_drivers_register(struct phy_driver *, int, struct module *);
1979:	void phy_drivers_unregister(struct phy_driver *, int);
702:	struct phy_device *phy_find_first(struct mii_bus *);
874:	int phy_init_hw(struct phy_device *);
1227:	int phy_loopback(struct phy_device *, bool);
198:	int phy_register_fixup(const char *, u32, u32, int (*)(struct phy_device *));
228:	int phy_register_fixup_for_id(const char *, int (*)(struct phy_device *));
220:	int phy_register_fixup_for_uid(u32, u32, int (*)(struct phy_device *));
1269:	int phy_reset_after_clk_enable(struct phy_device *);
1215:	int phy_resume(struct phy_device *);
1761:	int phy_set_max_speed(struct phy_device *, u32);
1172:	int phy_suspend(struct phy_device *);
241:	int phy_unregister_fixup(const char *, u32, u32);
276:	int phy_unregister_fixup_for_id(const char *);
269:	int phy_unregister_fixup_for_uid(u32, u32);
474:	static int get_phy_c45_devs_in_pkg(struct mii_bus *, int, int, u32 *);
79:	static bool mdio_bus_phy_may_suspend(struct phy_device *);
154:	static int mdio_bus_phy_restore(struct device *);
135:	static int mdio_bus_phy_resume(struct device *);
117:	static int mdio_bus_phy_suspend(struct device *);
321:	static int phy_bus_match(struct device *, struct device_driver *);
59:	static void phy_device_release(struct device *);
2025:	static void phy_exit(void);
376:	static ssize_t phy_has_fixups_show(struct device *, struct device_attribute *, char *);
352:	static ssize_t phy_id_show(struct device *, struct device_attribute *, char *);
2003:	static int phy_init(void);
361:	static ssize_t phy_interface_show(struct device *, struct device_attribute *, char *);
716:	static void phy_link_change(struct phy_device *, bool, bool);
51:	static void phy_mdio_device_free(struct mdio_device *);
64:	static void phy_mdio_device_remove(struct mdio_device *);
1825:	static int phy_probe(struct device *);
1897:	static int phy_remove(struct device *);
300:	static int phy_scan_fixups(struct phy_device *);

File drivers/net/phy/phy_led_triggers.c:
39:	void phy_led_trigger_change_speed(struct phy_device *);
105:	int phy_led_triggers_register(struct phy_device *);
167:	void phy_led_triggers_unregister(struct phy_device *);

File drivers/net/phy/swphy.c:
121:	int swphy_read_reg(int, const struct fixed_phy_status *);
99:	int swphy_validate_state(const struct fixed_phy_status *);

File drivers/nvmem/core.c:
973:	struct nvmem_cell *devm_nvmem_cell_get(struct device *, const char *);
1010:	void devm_nvmem_cell_put(struct device *, struct nvmem_cell *);
806:	struct nvmem_device *devm_nvmem_device_get(struct device *, const char *);
774:	void devm_nvmem_device_put(struct device *, struct nvmem_device *);
589:	struct nvmem_device *devm_nvmem_register(struct device *, const struct nvmem_config *);
627:	int devm_nvmem_unregister(struct device *, struct nvmem_device *);
364:	int nvmem_add_cells(struct nvmem_device *, const struct nvmem_cell_info *, int);
940:	struct nvmem_cell *nvmem_cell_get(const char *, struct device *);
1026:	void nvmem_cell_put(struct nvmem_cell *);
1098:	void *nvmem_cell_read(struct nvmem_cell *, size_t *);
1220:	int nvmem_cell_read_u32(struct device *, const char *, u32 *);
1183:	int nvmem_cell_write(struct nvmem_cell *, void *, size_t);
1258:	ssize_t nvmem_device_cell_read(struct nvmem_device *, struct nvmem_cell_info *, void *);
1289:	int nvmem_device_cell_write(struct nvmem_device *, struct nvmem_cell_info *, void *);
736:	struct nvmem_device *nvmem_device_get(struct device *, const char *);
790:	void nvmem_device_put(struct nvmem_device *);
1317:	int nvmem_device_read(struct nvmem_device *, unsigned int, size_t, void *);
1345:	int nvmem_device_write(struct nvmem_device *, unsigned int, size_t, void *);
459:	struct nvmem_device *nvmem_register(const struct nvmem_config *);
553:	int nvmem_unregister(struct nvmem_device *);
1067:	static int __nvmem_cell_read(struct nvmem_device *, struct nvmem_cell *, void *, size_t *);
680:	static void __nvmem_device_put(struct nvmem_device *, struct nvmem_device *);
87:	static ssize_t bin_attr_nvmem_read(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
121:	static ssize_t bin_attr_nvmem_write(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
993:	static int devm_nvmem_cell_match(struct device *, void *, void *);
958:	static void devm_nvmem_cell_release(struct device *, void *);
752:	static int devm_nvmem_device_match(struct device *, void *, void *);
762:	static void devm_nvmem_device_release(struct device *, void *);
611:	static int devm_nvmem_match(struct device *, void *, void *);
573:	static void devm_nvmem_release(struct device *, void *);
302:	static void nvmem_cell_drop(struct nvmem_cell *);
329:	static int nvmem_cell_info_to_nvmem_cell(struct nvmem_device *, const struct nvmem_cell_info *, struct nvmem_cell *);
1369:	static void nvmem_exit(void);
1364:	static int nvmem_init(void);
249:	static void nvmem_release(struct device *);

File drivers/pci/access.c:
63:	int pci_bus_read_config_byte(struct pci_bus *, unsigned int, int, u8 *);
65:	int pci_bus_read_config_dword(struct pci_bus *, unsigned int, int, u32 *);
64:	int pci_bus_read_config_word(struct pci_bus *, unsigned int, int, u16 *);
183:	struct pci_ops *pci_bus_set_ops(struct pci_bus *, struct pci_ops *);
66:	int pci_bus_write_config_byte(struct pci_bus *, unsigned int, int, u8);
68:	int pci_bus_write_config_dword(struct pci_bus *, unsigned int, int, u32);
67:	int pci_bus_write_config_word(struct pci_bus *, unsigned int, int, u16);
273:	void pci_cfg_access_lock(struct pci_dev *);
293:	bool pci_cfg_access_trylock(struct pci_dev *);
315:	void pci_cfg_access_unlock(struct pci_dev *);
77:	int pci_generic_config_read(struct pci_bus *, unsigned int, int, int, u32 *);
119:	int pci_generic_config_read32(struct pci_bus *, unsigned int, int, int, u32 *);
99:	int pci_generic_config_write(struct pci_bus *, unsigned int, int, int, u32);
139:	int pci_generic_config_write32(struct pci_bus *, unsigned int, int, int, u32);
527:	int pci_read_config_byte(const struct pci_dev *, int, u8 *);
547:	int pci_read_config_dword(const struct pci_dev *, int, u32 *);
537:	int pci_read_config_word(const struct pci_dev *, int, u16 *);
258:	int pci_user_read_config_byte(struct pci_dev *, int, u8 *);
260:	int pci_user_read_config_dword(struct pci_dev *, int, u32 *);
259:	int pci_user_read_config_word(struct pci_dev *, int, u16 *);
261:	int pci_user_write_config_byte(struct pci_dev *, int, u8);
263:	int pci_user_write_config_dword(struct pci_dev *, int, u32);
262:	int pci_user_write_config_word(struct pci_dev *, int, u16);
558:	int pci_write_config_byte(const struct pci_dev *, int, u8);
574:	int pci_write_config_dword(const struct pci_dev *, int, u32);
566:	int pci_write_config_word(const struct pci_dev *, int, u16);
339:	bool pcie_cap_has_lnkctl(const struct pci_dev *);
358:	bool pcie_cap_has_rtctl(const struct pci_dev *);
510:	int pcie_capability_clear_and_set_dword(struct pci_dev *, int, u32, u32);
493:	int pcie_capability_clear_and_set_word(struct pci_dev *, int, u16, u16);
441:	int pcie_capability_read_dword(struct pci_dev *, int, u32 *);
406:	int pcie_capability_read_word(struct pci_dev *, int, u16 *);
481:	int pcie_capability_write_dword(struct pci_dev *, int, u32);
469:	int pcie_capability_write_word(struct pci_dev *, int, u16);
206:	static void pci_wait_cfg(struct pci_dev *);
366:	static bool pcie_capability_reg_implemented(struct pci_dev *, int);

File drivers/pci/ats.c:
19:	void pci_ats_init(struct pci_dev *);
130:	int pci_ats_queue_depth(struct pci_dev *);
80:	void pci_disable_ats(struct pci_dev *);
305:	void pci_disable_pasid(struct pci_dev *);
189:	void pci_disable_pri(struct pci_dev *);
40:	int pci_enable_ats(struct pci_dev *, int);
268:	int pci_enable_pasid(struct pci_dev *, int);
152:	int pci_enable_pri(struct pci_dev *, u32);
380:	int pci_max_pasids(struct pci_dev *);
354:	int pci_pasid_features(struct pci_dev *);
399:	bool pci_prg_resp_requires_prefix(struct pci_dev *);
238:	int pci_reset_pri(struct pci_dev *);
104:	void pci_restore_ats_state(struct pci_dev *);
327:	void pci_restore_pasid_state(struct pci_dev *);
213:	void pci_restore_pri_state(struct pci_dev *);

File drivers/pci/bus.c:
93:	int devm_request_pci_bus_resources(struct device *, struct list_head *);
35:	void pci_add_resource(struct list_head *, struct resource *);
19:	void pci_add_resource_offset(struct list_head *, struct resource *, resource_size_t);
309:	void pci_bus_add_device(struct pci_dev *);
342:	void pci_bus_add_devices(const struct pci_bus *);
47:	void pci_bus_add_resource(struct pci_bus *, struct resource *, unsigned int);
224:	int pci_bus_alloc_resource(struct pci_bus *, struct resource *, resource_size_t, resource_size_t, resource_size_t, unsigned long, resource_size_t (*)(void *, const struct resource *, resource_size_t, resource_size_t), void *);
261:	bool pci_bus_clip_resource(struct pci_dev *, int);
414:	struct pci_bus *pci_bus_get(struct pci_bus *);
422:	void pci_bus_put(struct pci_bus *);
79:	void pci_bus_remove_resources(struct pci_bus *);
63:	struct resource *pci_bus_resource_n(const struct pci_bus *, int);
41:	void pci_free_resource_list(struct list_head *);
378:	void pci_walk_bus(struct pci_bus *, int (*)(struct pci_dev *, void *), void *);
299:	void pcibios_resource_survey_bus(struct pci_bus *);
154:	static int pci_bus_alloc_from_region(struct pci_bus *, struct resource *, resource_size_t, resource_size_t, resource_size_t, unsigned long, resource_size_t (*)(void *, const struct resource *, resource_size_t, resource_size_t), void *, struct pci_bus_region *);

File drivers/pci/controller/vmd.c:
319:	static void *vmd_alloc(struct device *, size_t, dma_addr_t *, gfp_t, unsigned long);
127:	static void vmd_compose_msi_msg(struct irq_data *, struct msi_msg *);
406:	static int vmd_dma_supported(struct device *, u64);
882:	static void vmd_drv_exit(void);
882:	static int vmd_drv_init(void);
326:	static void vmd_free(struct device *, size_t, void *, dma_addr_t, unsigned long);
189:	static irq_hw_number_t vmd_get_hwirq(struct msi_domain_info *, msi_alloc_info_t *);
341:	static int vmd_get_sgtable(struct device *, struct sg_table *, void *, dma_addr_t, size_t, unsigned long);
731:	static irqreturn_t vmd_irq(int, void *);
156:	static void vmd_irq_disable(struct irq_data *);
142:	static void vmd_irq_enable(struct irq_data *);
175:	static int vmd_irq_set_affinity(struct irq_data *, const struct cpumask *, bool);
349:	static dma_addr_t vmd_map_page(struct device *, struct page *, unsigned long, size_t, enum dma_data_direction, unsigned long);
364:	static int vmd_map_sg(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long);
401:	static int vmd_mapping_error(struct device *, dma_addr_t);
333:	static int vmd_mmap(struct device *, struct vm_area_struct *, void *, dma_addr_t, size_t, unsigned long);
251:	static void vmd_msi_free(struct irq_domain *, struct msi_domain_info *, unsigned int);
228:	static int vmd_msi_init(struct irq_domain *, struct msi_domain_info *, unsigned int, irq_hw_number_t, msi_alloc_info_t *);
267:	static int vmd_msi_prepare(struct irq_domain *, struct device *, int, msi_alloc_info_t *);
486:	static int vmd_pci_read(struct pci_bus *, unsigned int, int, int, u32 *);
521:	static int vmd_pci_write(struct pci_bus *, unsigned int, int, int, u32);
745:	static int vmd_probe(struct pci_dev *, const struct pci_device_id *);
817:	static void vmd_remove(struct pci_dev *);
844:	static int vmd_resume(struct device *);
280:	static void vmd_set_desc(msi_alloc_info_t *, struct msi_desc *);
831:	static int vmd_suspend(struct device *);
389:	static void vmd_sync_sg_for_cpu(struct device *, struct scatterlist *, int, enum dma_data_direction);
395:	static void vmd_sync_sg_for_device(struct device *, struct scatterlist *, int, enum dma_data_direction);
376:	static void vmd_sync_single_for_cpu(struct device *, dma_addr_t, size_t, enum dma_data_direction);
382:	static void vmd_sync_single_for_device(struct device *, dma_addr_t, size_t, enum dma_data_direction);
358:	static void vmd_unmap_page(struct device *, dma_addr_t, size_t, enum dma_data_direction, unsigned long);
370:	static void vmd_unmap_sg(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long);

File drivers/pci/host-bridge.c:
20:	struct pci_host_bridge *pci_find_host_bridge(struct pci_bus *);
27:	struct device *pci_get_host_bridge_device(struct pci_dev *);
36:	void pci_put_host_bridge_device(struct device *);
41:	void pci_set_host_bridge_release(struct pci_host_bridge *, void (*)(struct pci_host_bridge *), void *);
75:	void pcibios_bus_to_resource(struct pci_bus *, struct resource *, struct pci_bus_region *);
50:	void pcibios_resource_to_bus(struct pci_bus *, struct pci_bus_region *, struct resource *);

File drivers/pci/hotplug/../pci.h:
374:	static int pci_dev_set_disconnected(struct pci_dev *, void *);

File drivers/pci/hotplug/acpi_pcihp.c:
68:	int acpi_get_hp_hw_control_from_firmware(struct pci_dev *);
166:	int acpi_pci_check_ejectable(struct pci_bus *, acpi_handle);
198:	int acpi_pci_detect_ejectable(acpi_handle);
182:	static acpi_status check_hotplug(acpi_handle, u32, void *, void **);
145:	static int pcihp_is_ejectable(acpi_handle);

File drivers/pci/hotplug/acpiphp_core.c:
321:	void acpiphp_init(void);
78:	int acpiphp_register_attention(struct acpiphp_attention_info *);
258:	int acpiphp_register_hotplug_slot(struct acpiphp_slot *, unsigned int);
100:	int acpiphp_unregister_attention(struct acpiphp_attention_info *);
309:	void acpiphp_unregister_hotplug_slot(struct acpiphp_slot *);
136:	static int disable_slot(struct hotplug_slot *);
119:	static int enable_slot(struct hotplug_slot *);
246:	static int get_adapter_status(struct hotplug_slot *, u8 *);
202:	static int get_attention_status(struct hotplug_slot *, u8 *);
226:	static int get_latch_status(struct hotplug_slot *, u8 *);
180:	static int get_power_status(struct hotplug_slot *, u8 *);
156:	static int set_attention_status(struct hotplug_slot *, u8);

File drivers/pci/hotplug/acpiphp_glue.c:
750:	void acpiphp_check_host_bridge(struct acpi_device *);
1017:	int acpiphp_disable_slot(struct acpiphp_slot *);
973:	int acpiphp_enable_slot(struct acpiphp_slot *);
847:	void acpiphp_enumerate_slots(struct pci_bus *);
1055:	u8 acpiphp_get_adapter_status(struct acpiphp_slot *);
1046:	u8 acpiphp_get_latch_status(struct acpiphp_slot *);
1037:	u8 acpiphp_get_power_status(struct acpiphp_slot *);
951:	void acpiphp_remove_slots(struct pci_bus *);
218:	static acpi_status acpiphp_add_context(acpi_handle, u32, void *, void **);
687:	static void acpiphp_check_bridge(struct acpiphp_bridge *);
994:	static int acpiphp_disable_and_eject_slot(struct acpiphp_slot *);
120:	static struct acpiphp_context *acpiphp_grab_context(struct acpi_device *);
827:	static int acpiphp_hotplug_notify(struct acpi_device *, u32);
181:	static void acpiphp_post_dock_fixup(struct acpi_device *);
100:	static void acpiphp_put_context(struct acpiphp_context *);
420:	static int acpiphp_rescan_slot(struct acpiphp_slot *);
330:	static void cleanup_bridge(struct acpiphp_bridge *);
543:	static void disable_slot(struct acpiphp_slot *);
472:	static void enable_slot(struct acpiphp_slot *, bool);
141:	static void free_bridge(struct kref *);
589:	static unsigned int get_slot_status(struct acpiphp_slot *);
643:	static void trim_stale_devices(struct pci_dev *);

File drivers/pci/hotplug/pci_hotplug_core.c:
439:	int __pci_hp_initialize(struct hotplug_slot *, struct pci_bus *, int, const char *, struct module *, const char *);
405:	int __pci_hp_register(struct hotplug_slot *, struct pci_bus *, int, const char *, struct module *, const char *);
478:	int pci_hp_add(struct hotplug_slot *);
572:	int pci_hp_change_slot_info(struct hotplug_slot *, struct hotplug_slot_info *);
520:	void pci_hp_del(struct hotplug_slot *);
505:	void pci_hp_deregister(struct hotplug_slot *);
552:	void pci_hp_destroy(struct hotplug_slot *);
126:	static ssize_t attention_read_file(struct pci_slot *, char *);
138:	static ssize_t attention_write_file(struct pci_slot *, const char *, size_t);
170:	static ssize_t latch_read_file(struct pci_slot *, char *);
584:	static int pci_hotplug_init(void);
69:	static ssize_t power_read_file(struct pci_slot *, char *);
81:	static ssize_t power_write_file(struct pci_slot *, const char *, size_t);
187:	static ssize_t presence_read_file(struct pci_slot *, char *);
204:	static ssize_t test_write_file(struct pci_slot *, const char *, size_t);

File drivers/pci/hotplug/pciehp_core.c:
351:	int pcie_hp_init(void);
115:	static void cleanup_slot(struct controller *);
148:	static int disable_slot(struct hotplug_slot *);
140:	static int enable_slot(struct hotplug_slot *);
185:	static int get_adapter_status(struct hotplug_slot *, u8 *);
166:	static int get_attention_status(struct hotplug_slot *, u8 *);
174:	static int get_latch_status(struct hotplug_slot *, u8 *);
155:	static int get_power_status(struct hotplug_slot *, u8 *);
213:	static void pciehp_check_presence(struct controller *);
232:	static int pciehp_probe(struct pcie_device *);
294:	static void pciehp_remove(struct pcie_device *);
326:	static int pciehp_resume(struct pcie_device *);
310:	static int pciehp_resume_noirq(struct pcie_device *);
305:	static int pciehp_suspend(struct pcie_device *);
196:	static int reset_slot(struct hotplug_slot *, int);
128:	static int set_attention_status(struct hotplug_slot *, u8);

File drivers/pci/hotplug/pciehp_ctrl.c:
174:	void pciehp_handle_button_press(struct slot *);
230:	void pciehp_handle_disable_request(struct slot *);
250:	void pciehp_handle_presence_or_link_change(struct slot *, u32);
144:	void pciehp_queue_pushbutton_work(struct work_struct *);
137:	void pciehp_request(struct controller *, int);
446:	int pciehp_sysfs_disable_slot(struct slot *);
404:	int pciehp_sysfs_enable_slot(struct slot *);
388:	static int pciehp_disable_slot(struct slot *, bool);

File drivers/pci/hotplug/pciehp_hpc.c:
853:	void pcie_clear_hotplug_events(struct controller *);
964:	struct controller *pcie_init(struct pcie_device *);
901:	int pcie_init_notification(struct controller *);
910:	void pcie_shutdown_notification(struct controller *);
409:	bool pciehp_card_present(struct controller *);
427:	bool pciehp_card_present_or_link_active(struct controller *);
219:	bool pciehp_check_link_active(struct controller *);
276:	int pciehp_check_link_status(struct controller *);
349:	void pciehp_get_attention_status(struct slot *, u8 *);
400:	void pciehp_get_latch_status(struct slot *, u8 *);
377:	void pciehp_get_power_status(struct slot *, u8 *);
335:	int pciehp_get_raw_indicator_status(struct hotplug_slot *, u8 *);
509:	void pciehp_green_led_blink(struct slot *);
495:	void pciehp_green_led_off(struct slot *);
481:	void pciehp_green_led_on(struct slot *);
549:	void pciehp_power_off_slot(struct slot *);
523:	int pciehp_power_on_slot(struct slot *);
432:	int pciehp_query_power_fault(struct slot *);
1052:	void pciehp_release_ctrl(struct controller *);
867:	int pciehp_reset_slot(struct slot *, int);
455:	void pciehp_set_attention_status(struct slot *, u8);
441:	int pciehp_set_raw_indicator_status(struct hotplug_slot *, u8);
840:	static void pcie_disable_notification(struct controller *);
152:	static void pcie_do_write_cmd(struct controller *, u16, u16, bool);
107:	static void pcie_wait_cmd(struct controller *);
559:	static irqreturn_t pciehp_isr(int, void *);
662:	static irqreturn_t pciehp_ist(int, void *);
781:	static int pciehp_poll(void *);
1058:	static void quirk_cmd_compl(struct pci_dev *);

File drivers/pci/hotplug/pciehp_pci.c:
31:	int pciehp_configure_device(struct slot *);
84:	void pciehp_unconfigure_device(struct slot *, bool);

File drivers/pci/hotplug/shpchp_core.c:
148:	void cleanup_slots(struct controller *);
189:	static int disable_slot(struct hotplug_slot *);
179:	static int enable_slot(struct hotplug_slot *);
244:	static int get_adapter_status(struct hotplug_slot *, u8 *);
214:	static int get_attention_status(struct hotplug_slot *, u8 *);
229:	static int get_latch_status(struct hotplug_slot *, u8 *);
199:	static int get_power_status(struct hotplug_slot *, u8 *);
166:	static int set_attention_status(struct hotplug_slot *, u8);
275:	static int shpc_probe(struct pci_dev *, const struct pci_device_id *);
324:	static void shpc_remove(struct pci_dev *);
358:	static void shpcd_cleanup(void);
347:	static int shpcd_init(void);

File drivers/pci/hotplug/shpchp_ctrl.c:
45:	u8 shpchp_handle_attention_button(u8, struct controller *);
141:	u8 shpchp_handle_power_fault(u8, struct controller *);
106:	u8 shpchp_handle_presence_change(u8, struct controller *);
68:	u8 shpchp_handle_switch_change(u8, struct controller *);
418:	void shpchp_queue_pushbutton_work(struct work_struct *);
684:	int shpchp_sysfs_disable_slot(struct slot *);
648:	int shpchp_sysfs_enable_slot(struct slot *);
229:	static int board_added(struct slot *);
178:	static int change_bus_speed(struct slot *, enum pci_bus_speed, struct controller *);
530:	static void interrupt_event_handler(struct work_struct *);
28:	static int queue_interrupt_event(struct slot *, u32);
612:	static int shpchp_disable_slot(struct slot *);
555:	static int shpchp_enable_slot(struct slot *);
389:	static void shpchp_pushbutton_thread(struct work_struct *);
449:	static int update_slot_info(struct slot *);

File drivers/pci/hotplug/shpchp_hpc.c:
919:	int shpc_init(struct controller *, struct pci_dev *);
444:	static int hpc_get_adapter_speed(struct slot *, enum pci_bus_speed *);
424:	static int hpc_get_adapter_status(struct slot *, u8 *);
365:	static int hpc_get_attention_status(struct slot *, u8 *);
414:	static int hpc_get_latch_status(struct slot *, u8 *);
497:	static int hpc_get_mode1_ECC_cap(struct slot *, u8 *);
389:	static int hpc_get_power_status(struct slot *, u8 *);
435:	static int hpc_get_prog_int(struct slot *, u8 *);
600:	static int hpc_power_on_slot(struct slot *);
514:	static int hpc_query_power_fault(struct slot *);
560:	static void hpc_release_ctlr(struct controller *);
523:	static int hpc_set_attention_status(struct slot *, u8);
706:	static int hpc_set_bus_speed_mode(struct slot *, enum pci_bus_speed);
555:	static void hpc_set_green_led_blink(struct slot *);
550:	static void hpc_set_green_led_off(struct slot *);
545:	static void hpc_set_green_led_on(struct slot *);
624:	static int hpc_slot_disable(struct slot *);
611:	static int hpc_slot_enable(struct slot *);
218:	static void int_poll_timeout(struct timer_list *);
637:	static int shpc_get_cur_bus_speed(struct controller *);
772:	static irqreturn_t shpc_isr(int, void *);
293:	static int shpc_write_cmd(struct slot *, u8, u8);

File drivers/pci/hotplug/shpchp_pci.c:
23:	int shpchp_configure_device(struct slot *);
64:	int shpchp_unconfigure_device(struct slot *);

File drivers/pci/hotplug/shpchp_sysfs.c:
74:	int shpchp_create_ctrl_files(struct controller *);
79:	void shpchp_remove_ctrl_files(struct controller *);
24:	static ssize_t show_ctrl(struct device *, struct device_attribute *, char *);

File drivers/pci/iov.c:
737:	void pci_disable_sriov(struct pci_dev *);
722:	int pci_enable_sriov(struct pci_dev *, int);
138:	int pci_iov_add_virtfn(struct pci_dev *, int);
700:	int pci_iov_bus_range(struct pci_bus *);
553:	int pci_iov_init(struct pci_dev *);
571:	void pci_iov_release(struct pci_dev *);
581:	void pci_iov_remove(struct pci_dev *);
215:	void pci_iov_remove_virtfn(struct pci_dev *, int);
107:	resource_size_t pci_iov_resource_size(struct pci_dev *, int);
600:	void pci_iov_update_resource(struct pci_dev *, int);
21:	int pci_iov_virtfn_bus(struct pci_dev *, int);
29:	int pci_iov_virtfn_devfn(struct pci_dev *, int);
754:	int pci_num_vf(struct pci_dev *);
676:	void pci_restore_iov_state(struct pci_dev *);
860:	int pci_sriov_configure_simple(struct pci_dev *, int);
842:	int pci_sriov_get_totalvfs(struct pci_dev *);
667:	resource_size_t pci_sriov_resource_alignment(struct pci_dev *, int);
817:	int pci_sriov_set_totalvfs(struct pci_dev *, u16);
687:	void pci_vf_drivers_autoprobe(struct pci_dev *, bool);
770:	int pci_vfs_assigned(struct pci_dev *);
651:	resource_size_t pcibios_iov_resource_alignment(struct pci_dev *, int);
249:	int pcibios_sriov_disable(struct pci_dev *);
244:	int pcibios_sriov_enable(struct pci_dev *, u16);
370:	static void sriov_disable(struct pci_dev *);
254:	static int sriov_enable(struct pci_dev *, int);

File drivers/pci/irq.c:
120:	void pci_free_irq(struct pci_dev *, unsigned int, void *);
38:	enum pci_lost_interrupt_reason pci_lost_interrupt(struct pci_dev *);
83:	int pci_request_irq(struct pci_dev *, unsigned int, irq_handler_t, irq_handler_t, void *, const char *, ...);
15:	static void pci_note_irq_problem(struct pci_dev *, const char *);

File drivers/pci/mmap.c:
22:	int pci_mmap_page_range(struct pci_dev *, int, struct vm_area_struct *, enum pci_mmap_state, int);
43:	int pci_mmap_resource_range(struct pci_dev *, int, struct vm_area_struct *, enum pci_mmap_state, int);

File drivers/pci/msi.c:
173:	void __pci_msi_desc_mask_irq(struct msi_desc *, u32, u32);
207:	u32 __pci_msix_desc_mask_irq(struct msi_desc *, u32);
268:	void __pci_read_msi_msg(struct msi_desc *, struct msi_msg *);
298:	void __pci_write_msi_msg(struct msi_desc *, struct msi_msg *);
154:	void arch_restore_msi_irqs(struct pci_dev *);
63:	int arch_setup_msi_irq(struct pci_dev *, struct msi_desc *);
90:	int arch_setup_msi_irqs(struct pci_dev *, int, int);
80:	void arch_teardown_msi_irq(unsigned int);
131:	void arch_teardown_msi_irqs(struct pci_dev *);
260:	void default_restore_msi_irqs(struct pci_dev *);
120:	void default_teardown_msi_irqs(struct pci_dev *);
1342:	struct pci_dev *msi_desc_to_pci_dev(struct msi_desc *);
1348:	void *msi_desc_to_pci_sysdata(struct msi_desc *);
1203:	int pci_alloc_irq_vectors_affinity(struct pci_dev *, unsigned int, unsigned int, unsigned int, const struct irq_affinity *);
957:	void pci_disable_msi(struct pci_dev *);
1044:	void pci_disable_msix(struct pci_dev *);
1122:	int pci_enable_msi(struct pci_dev *);
1178:	int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);
1253:	void pci_free_irq_vectors(struct pci_dev *);
1299:	const struct cpumask *pci_irq_get_affinity(struct pci_dev *, int);
1331:	int pci_irq_get_node(struct pci_dev *, int);
1265:	int pci_irq_vector(struct pci_dev *, unsigned int);
1488:	struct irq_domain *pci_msi_create_irq_domain(struct fwnode_handle *, struct msi_domain_info *, struct irq_domain *);
1381:	irq_hw_number_t pci_msi_domain_calc_hwirq(struct pci_dev *, struct msi_desc *);
1405:	int pci_msi_domain_check_cap(struct irq_domain *, struct msi_domain_info *, struct device *);
1552:	u32 pci_msi_domain_get_msi_rid(struct irq_domain *, struct pci_dev *);
1362:	void pci_msi_domain_write_msg(struct irq_data *, struct msi_msg *);
1065:	int pci_msi_enabled(void);
1575:	struct irq_domain *pci_msi_get_device_domain(struct pci_dev *);
244:	void pci_msi_mask_irq(struct irq_data *);
254:	void pci_msi_unmask_irq(struct irq_data *);
918:	int pci_msi_vec_count(struct pci_dev *);
975:	int pci_msix_vec_count(struct pci_dev *);
1054:	void pci_no_msi(void);
452:	void pci_restore_msi_state(struct pci_dev *);
354:	void pci_write_msi_msg(unsigned int, struct msi_msg *);
1071:	static int __pci_enable_msi_range(struct pci_dev *, int, int, const struct irq_affinity *);
1131:	static int __pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int, const struct irq_affinity *);
136:	static void default_restore_msi_irq(struct pci_dev *, int);
362:	static void free_msi_irqs(struct pci_dev *);
1531:	static int get_msi_id_cb(struct pci_dev *, u16, void *);
459:	static ssize_t msi_mode_show(struct device *, struct device_attribute *, char *);
227:	static void msi_set_mask_bit(struct irq_data *, u32);
556:	static struct msi_desc *msi_setup_entry(struct pci_dev *, int, const struct irq_affinity *);
595:	static int msi_verify_entries(struct pci_dev *);
1420:	static int pci_msi_domain_handle_error(struct irq_domain *, struct msi_desc *, int);
35:	static int pci_msi_setup_msi_irqs(struct pci_dev *, int, int);
875:	static int pci_msi_supported(struct pci_dev *, int);
478:	static int populate_msi_sysfs(struct pci_dev *);

File drivers/pci/pci-acpi.c:
653:	void acpi_pci_add_bus(struct pci_bus *);
683:	void acpi_pci_remove_bus(struct pci_bus *);
107:	phys_addr_t acpi_pci_root_get_mcfg_addr(acpi_handle);
453:	acpi_status pci_acpi_add_bus_pm_notifier(struct acpi_device *);
463:	acpi_status pci_acpi_add_pm_notifier(struct acpi_device *, struct pci_dev *);
328:	int pci_get_hp_params(struct pci_dev *, struct hotplug_params *);
840:	struct irq_domain *pci_host_bridge_acpi_msi_domain(struct pci_bus *);
826:	void pci_msi_register_fwnode_provider(struct fwnode_handle *(*)(struct device *));
375:	bool pciehp_is_native(struct pci_dev *);
401:	bool shpchp_is_native(struct pci_dev *);
492:	static pci_power_t acpi_pci_choose_state(struct pci_dev *);
693:	static struct acpi_device *acpi_pci_find_companion(struct device *);
562:	static pci_power_t acpi_pci_get_power_state(struct pci_dev *);
854:	static int acpi_pci_init(void);
616:	static bool acpi_pci_need_resume(struct pci_dev *);
519:	static bool acpi_pci_power_manageable(struct pci_dev *);
583:	static void acpi_pci_refresh_power_state(struct pci_dev *);
525:	static int acpi_pci_set_power_state(struct pci_dev *, pci_power_t);
608:	static int acpi_pci_wakeup(struct pci_dev *, bool);
801:	static bool pci_acpi_bus_match(struct device *);
784:	static void pci_acpi_cleanup(struct device *);
757:	static void pci_acpi_setup(struct device *);
410:	static void pci_acpi_wake_bus(struct acpi_device_wakeup_context *);
424:	static void pci_acpi_wake_dev(struct acpi_device_wakeup_context *);

File drivers/pci/pci-driver.c:
1440:	int __pci_register_driver(struct pci_driver *, struct module *, const char *);
50:	int pci_add_dynid(struct pci_driver *, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned long);
1486:	struct pci_driver *pci_dev_driver(const struct pci_dev *);
1538:	struct pci_dev *pci_dev_get(struct pci_dev *);
1553:	void pci_dev_put(struct pci_dev *);
221:	const struct pci_device_id *pci_match_id(const struct pci_device_id *, struct pci_dev *);
1598:	void pci_uevent_ers(struct pci_dev *, enum pci_ers_result);
1468:	void pci_unregister_driver(struct pci_driver *);
390:	int pcibios_alloc_irq(struct pci_dev *);
395:	void pcibios_free_irq(struct pci_dev *);
287:	static long local_pci_probe(void *);
98:	static ssize_t new_id_store(struct device_driver *, const char *, size_t);
1509:	static int pci_bus_match(struct device *, struct device_driver *);
1628:	static int pci_bus_num_vf(struct device *);
412:	static int pci_device_probe(struct device *);
437:	static int pci_device_remove(struct device *);
476:	static void pci_device_shutdown(struct device *);
1640:	static int pci_dma_configure(struct device *);
1707:	static int pci_driver_init(void);
661:	static bool pci_has_legacy_pm_support(struct pci_dev *, struct pci_dev *, struct pci_dev *);
635:	static int pci_legacy_resume(struct device *);
565:	static int pci_legacy_suspend(struct device *, pm_message_t);
592:	static int pci_legacy_suspend_late(struct device *, pm_message_t);
251:	static const struct pci_device_id *pci_match_device(struct pci_driver *, struct pci_dev *);
695:	static void pci_pm_complete(struct device *);
992:	static int pci_pm_freeze(struct device *);
1028:	static int pci_pm_freeze_late(struct device *);
1036:	static int pci_pm_freeze_noirq(struct device *);
1132:	static int pci_pm_poweroff(struct device *);
1163:	static int pci_pm_poweroff_late(struct device *);
1173:	static int pci_pm_poweroff_noirq(struct device *);
680:	static int pci_pm_prepare(struct device *);
549:	static int pci_pm_reenable_device(struct pci_dev *);
1244:	static int pci_pm_restore(struct device *);
1216:	static int pci_pm_restore_noirq(struct device *);
945:	static int pci_pm_resume(struct device *);
906:	static int pci_pm_resume_noirq(struct device *);
1372:	static int pci_pm_runtime_idle(struct device *);
1344:	static int pci_pm_runtime_resume(struct device *);
1289:	static int pci_pm_runtime_suspend(struct device *);
740:	static int pci_pm_suspend(struct device *);
794:	static int pci_pm_suspend_late(struct device *);
804:	static int pci_pm_suspend_noirq(struct device *);
1111:	static int pci_pm_thaw(struct device *);
1067:	static int pci_pm_thaw_noirq(struct device *);
505:	static int pci_restore_standard_config(struct pci_dev *);
1560:	static int pci_uevent(struct device *, struct kobj_uevent_env *);
1679:	static int pcie_port_bus_match(struct device *, struct device_driver *);
166:	static ssize_t remove_id_store(struct device_driver *, const char *, size_t);

File drivers/pci/pci-label.c:
297:	void pci_create_firmware_label_files(struct pci_dev *);
305:	void pci_remove_firmware_label_files(struct pci_dev *);
224:	static umode_t acpi_index_string_exist(struct kobject *, struct attribute *, int);
243:	static ssize_t acpiindex_show(struct device *, struct device_attribute *, char *);
237:	static ssize_t acpilabel_show(struct device *, struct device_attribute *, char *);
212:	static bool device_has_dsm(struct device *);
169:	static int dsm_get_label(char *, enum acpi_attr_enum, struct device *);
43:	static size_t find_smbios_instance_string(char *, enum smbios_attr_enum, struct pci_dev *, struct pci_dev *);
79:	static umode_t smbios_instance_string_exist(struct kobject *, struct attribute *, int);
102:	static ssize_t smbiosinstance_show(struct device *, struct device_attribute *, char *);
92:	static ssize_t smbioslabel_show(struct device *, struct device_attribute *, char *);

File drivers/pci/pci-stub.c:
86:	static void pci_stub_exit(void);
41:	static int pci_stub_init(void);
29:	static int pci_stub_probe(struct pci_dev *, const struct pci_device_id *);

File drivers/pci/pci-sysfs.c:
1494:	int pci_create_sysfs_dev_files(struct pci_dev *);
1143:	int pci_mmap_fits(struct pci_dev *, int, struct vm_area_struct *, enum pci_mmap_api);
1578:	void pci_remove_sysfs_dev_files(struct pci_dev *);
239:	static ssize_t ari_enabled_show(struct device *, struct device_attribute *, char *);
821:	static ssize_t boot_vga_show(struct device *, struct device_attribute *, char *);
54:	static ssize_t broken_parity_status_show(struct device *, struct device_attribute *, char *);
62:	static ssize_t broken_parity_status_store(struct device *, struct device_attribute *, const char *, size_t);
401:	static ssize_t bus_rescan_store(struct bus_type *, const char *, size_t);
51:	static ssize_t class_show(struct device *, struct device_attribute *, char *);
346:	static ssize_t consistent_dma_mask_bits_show(struct device *, struct device_attribute *, char *);
109:	static ssize_t cpuaffinity_show(struct device *, struct device_attribute *, char *);
118:	static ssize_t cpulistaffinity_show(struct device *, struct device_attribute *, char *);
173:	static ssize_t current_link_speed_show(struct device *, struct device_attribute *, char *);
191:	static ssize_t current_link_width_show(struct device *, struct device_attribute *, char *);
542:	static ssize_t d3cold_allowed_show(struct device *, struct device_attribute *, char *);
521:	static ssize_t d3cold_allowed_store(struct device *, struct device_attribute *, const char *, size_t);
498:	static ssize_t dev_bus_rescan_store(struct device *, struct device_attribute *, const char *, size_t);
434:	static ssize_t dev_rescan_store(struct device *, struct device_attribute *, const char *, size_t);
47:	static ssize_t device_show(struct device *, struct device_attribute *, char *);
337:	static ssize_t dma_mask_bits_show(struct device *, struct device_attribute *, char *);
747:	static ssize_t driver_override_show(struct device *, struct device_attribute *, char *);
713:	static ssize_t driver_override_store(struct device *, struct device_attribute *, const char *, size_t);
290:	static ssize_t enable_show(struct device *, struct device_attribute *, char *);
262:	static ssize_t enable_store(struct device *, struct device_attribute *, const char *, size_t);
52:	static ssize_t irq_show(struct device *, struct device_attribute *, char *);
99:	static ssize_t local_cpulist_show(struct device *, struct device_attribute *, char *);
92:	static ssize_t local_cpus_show(struct device *, struct device_attribute *, char *);
154:	static ssize_t max_link_speed_show(struct device *, struct device_attribute *, char *);
164:	static ssize_t max_link_width_show(struct device *, struct device_attribute *, char *);
249:	static ssize_t modalias_show(struct device *, struct device_attribute *, char *);
354:	static ssize_t msi_bus_show(struct device *, struct device_attribute *, char *);
365:	static ssize_t msi_bus_store(struct device *, struct device_attribute *, const char *, size_t);
329:	static ssize_t numa_node_show(struct device *, struct device_attribute *, char *);
301:	static ssize_t numa_node_store(struct device *, struct device_attribute *, const char *, size_t);
1655:	static umode_t pci_bridge_attrs_are_visible(struct kobject *, struct attribute *, int);
1288:	static int pci_create_attr(struct pci_dev *, int, int);
1624:	static umode_t pci_dev_attrs_are_visible(struct kobject *, struct attribute *, int);
1643:	static umode_t pci_dev_hp_attrs_are_visible(struct kobject *, struct attribute *, int);
1174:	static int pci_mmap_resource(struct kobject *, struct vm_area_struct *, int, struct bin_attribute *);
1193:	static int pci_mmap_resource_uc(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *);
1200:	static int pci_mmap_resource_wc(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *);
836:	static ssize_t pci_read_config(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
1246:	static ssize_t pci_read_resource_io(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
1402:	static ssize_t pci_read_rom(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
1267:	static void pci_remove_resource_files(struct pci_dev *);
1601:	static int pci_sysfs_init(void);
912:	static ssize_t pci_write_config(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
1253:	static ssize_t pci_write_resource_io(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
1376:	static ssize_t pci_write_rom(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
1667:	static umode_t pcie_dev_attrs_are_visible(struct kobject *, struct attribute *, int);
455:	static ssize_t remove_store(struct device *, struct device_attribute *, const char *, size_t);
1450:	static ssize_t reset_store(struct device *, struct device_attribute *, const char *, size_t);
128:	static ssize_t resource_show(struct device *, struct device_attribute *, char *);
50:	static ssize_t revision_show(struct device *, struct device_attribute *, char *);
207:	static ssize_t secondary_bus_number_show(struct device *, struct device_attribute *, char *);
1722:	static umode_t sriov_attrs_are_visible(struct kobject *, struct attribute *, int);
677:	static ssize_t sriov_drivers_autoprobe_show(struct device *, struct device_attribute *, char *);
686:	static ssize_t sriov_drivers_autoprobe_store(struct device *, struct device_attribute *, const char *, size_t);
576:	static ssize_t sriov_numvfs_show(struct device *, struct device_attribute *, char *);
592:	static ssize_t sriov_numvfs_store(struct device *, struct device_attribute *, const char *, size_t);
650:	static ssize_t sriov_offset_show(struct device *, struct device_attribute *, char *);
659:	static ssize_t sriov_stride_show(struct device *, struct device_attribute *, char *);
566:	static ssize_t sriov_totalvfs_show(struct device *, struct device_attribute *, char *);
668:	static ssize_t sriov_vf_device_show(struct device *, struct device_attribute *, char *);
223:	static ssize_t subordinate_bus_number_show(struct device *, struct device_attribute *, char *);
49:	static ssize_t subsystem_device_show(struct device *, struct device_attribute *, char *);
48:	static ssize_t subsystem_vendor_show(struct device *, struct device_attribute *, char *);
46:	static ssize_t vendor_show(struct device *, struct device_attribute *, char *);

File drivers/pci/pci.c:
1056:	int __pci_complete_power_transition(struct pci_dev *, pci_power_t);
4851:	int __pci_reset_function_locked(struct pci_dev *);
5733:	void __pcie_print_link_status(struct pci_dev *, bool);
4074:	void *devm_pci_remap_cfg_resource(struct device *, struct resource *);
4034:	void *devm_pci_remap_cfgspace(struct device *, resource_size_t, resource_size_t);
4003:	int devm_pci_remap_iospace(struct device *, const struct resource *, phys_addr_t);
3308:	bool pci_acs_enabled(struct pci_dev *, u16);
3381:	bool pci_acs_path_enabled(struct pci_dev *, struct pci_dev *, u16);
3066:	int pci_add_cap_save_buffer(struct pci_dev *, char, unsigned int);
5874:	void pci_add_dma_alias(struct pci_dev *, u8);
3071:	int pci_add_ext_cap_save_buffer(struct pci_dev *, u16, unsigned int);
3925:	unsigned long pci_address_to_pio(phys_addr_t);
3080:	void pci_allocate_cap_save_buffers(struct pci_dev *);
122:	bool pci_ats_disabled(void);
2405:	int pci_back_from_sleep(struct pci_dev *);
2604:	bool pci_bridge_d3_possible(struct pci_dev *);
2680:	void pci_bridge_d3_update(struct pci_dev *);
4704:	int pci_bridge_secondary_bus_reset(struct pci_dev *);
5324:	int pci_bus_error_reset(struct pci_dev *);
464:	int pci_bus_find_capability(struct pci_bus *, unsigned int, int);
152:	unsigned char pci_bus_max_busnr(struct pci_bus *);
1043:	void pci_bus_set_current_state(struct pci_bus *, pci_power_t);
4401:	bool pci_check_and_mask_intx(struct pci_dev *);
4415:	bool pci_check_and_unmask_intx(struct pci_dev *);
1986:	bool pci_check_pme_status(struct pci_dev *);
1150:	pci_power_t pci_choose_state(struct pci_dev *, pm_message_t);
4181:	void pci_clear_master(struct pci_dev *);
4302:	void pci_clear_mwi(struct pci_dev *);
3624:	u8 pci_common_swizzle(struct pci_dev *, u8 *);
2546:	void pci_config_pm_runtime_get(struct pci_dev *);
2568:	void pci_config_pm_runtime_put(struct pci_dev *);
3117:	void pci_configure_ari(struct pci_dev *);
2750:	void pci_d3cold_disable(struct pci_dev *);
2733:	void pci_d3cold_enable(struct pci_dev *);
2531:	void pci_dev_complete_resume(struct pci_dev *);
2493:	bool pci_dev_keep_suspended(struct pci_dev *);
2450:	bool pci_dev_run_wake(struct pci_dev *);
5897:	bool pci_device_is_present(struct pci_dev *);
5889:	bool pci_devs_are_dma_aliases(struct pci_dev *, struct pci_dev *);
1920:	void pci_disable_device(struct pci_dev *);
1904:	void pci_disable_enabled_device(struct pci_dev *);
2998:	void pci_ea_init(struct pci_dev *);
3250:	void pci_enable_acs(struct pci_dev *);
3515:	int pci_enable_atomic_ops_to_root(struct pci_dev *, u32);
1728:	int pci_enable_device(struct pci_dev *);
1697:	int pci_enable_device_io(struct pci_dev *);
1711:	int pci_enable_device_mem(struct pci_dev *);
2275:	int pci_enable_wake(struct pci_dev *, pci_power_t, bool);
6230:	int pci_ext_cfg_avail(void);
439:	int pci_find_capability(struct pci_dev *, int);
545:	int pci_find_ext_capability(struct pci_dev *, int);
608:	int pci_find_ht_capability(struct pci_dev *, int);
393:	int pci_find_next_capability(struct pci_dev *, u8, int);
490:	int pci_find_next_ext_capability(struct pci_dev *, int, int);
591:	int pci_find_next_ht_capability(struct pci_dev *, int, int);
628:	struct resource *pci_find_parent_resource(const struct pci_dev *, struct resource *);
694:	struct pci_dev *pci_find_pcie_root_port(struct pci_dev *);
672:	struct resource *pci_find_resource(struct pci_dev *, struct resource *);
1193:	struct pci_cap_saved_state *pci_find_saved_cap(struct pci_dev *, char);
1198:	struct pci_cap_saved_state *pci_find_saved_ext_cap(struct pci_dev *, u16);
2419:	int pci_finish_runtime_suspend(struct pci_dev *);
6235:	void pci_fixup_cardbus(struct pci_bus *);
3101:	void pci_free_cap_save_buffers(struct pci_dev *);
3600:	int pci_get_interrupt_pin(struct pci_dev *, struct pci_dev **);
5907:	void pci_ignore_hotplug(struct pci_dev *);
4323:	void pci_intx(struct pci_dev *, int);
168:	void *pci_ioremap_bar(struct pci_dev *, int);
183:	void *pci_ioremap_wc_bar(struct pci_dev *, int);
1568:	int pci_load_and_free_saved_state(struct pci_dev *, struct pci_saved_state **);
1531:	int pci_load_saved_state(struct pci_dev *, struct pci_saved_state *);
3911:	phys_addr_t pci_pio_to_address(unsigned long);
2763:	void pci_pm_init(struct pci_dev *);
2140:	void pci_pme_active(struct pci_dev *, bool);
2049:	bool pci_pme_capable(struct pci_dev *, pci_power_t);
2114:	void pci_pme_restore(struct pci_dev *);
2037:	void pci_pme_wakeup_bus(struct pci_bus *);
1133:	void pci_power_up(struct pci_dev *);
2379:	int pci_prepare_to_sleep(struct pci_dev *);
5357:	int pci_probe_reset_bus(struct pci_bus *);
4897:	int pci_probe_reset_function(struct pci_dev *);
5254:	int pci_probe_reset_slot(struct pci_slot *);
6058:	void pci_reassigndev_resource_alignment(struct pci_dev *);
3464:	int pci_rebar_get_current_size(struct pci_dev *, int);
3443:	u32 pci_rebar_get_possible_sizes(struct pci_dev *, int);
3486:	int pci_rebar_set_size(struct pci_dev *, int, int);
1624:	int pci_reenable_device(struct pci_dev *);
943:	void pci_refresh_power_state(struct pci_dev *);
3880:	int pci_register_io_range(struct fwnode_handle *, phys_addr_t, resource_size_t);
5788:	void pci_register_set_vga_state(arch_set_vga_state_t);
3646:	void pci_release_region(struct pci_dev *, int);
3828:	void pci_release_regions(struct pci_dev *);
3768:	void pci_release_selected_regions(struct pci_dev *, int);
3947:	int pci_remap_iospace(phys_addr_t, const struct resource *);
3149:	void pci_request_acs(void);
3729:	int pci_request_region(struct pci_dev *, int, const char *);
3753:	int pci_request_region_exclusive(struct pci_dev *, int, const char *);
3847:	int pci_request_regions(struct pci_dev *, const char *);
3869:	int pci_request_regions_exclusive(struct pci_dev *, const char *);
3804:	int pci_request_selected_regions(struct pci_dev *, int, const char *);
3811:	int pci_request_selected_regions_exclusive(struct pci_dev *, int, const char *);
5395:	int pci_reset_bus(struct pci_dev *);
4937:	int pci_reset_function(struct pci_dev *);
4973:	int pci_reset_function_locked(struct pci_dev *);
4665:	void pci_reset_secondary_bus(struct pci_dev *);
1445:	void pci_restore_state(struct pci_dev *);
1330:	int pci_save_state(struct pci_dev *);
5775:	int pci_select_bars(struct pci_dev *, unsigned long);
4197:	int pci_set_cacheline_size(struct pci_dev *);
4170:	void pci_set_master(struct pci_dev *);
4233:	int pci_set_mwi(struct pci_dev *);
1963:	int pci_set_pcie_reset_state(struct pci_dev *, enum pcie_reset_state);
754:	int pci_set_platform_pm(const struct pci_platform_pm_ops *);
1087:	int pci_set_power_state(struct pci_dev *, pci_power_t);
5810:	int pci_set_vga_state(struct pci_dev *, bool, unsigned int, u32);
1492:	struct pci_saved_state *pci_store_saved_state(struct pci_dev *);
3588:	u8 pci_swizzle_interrupt_pin(const struct pci_dev *, u8);
4996:	int pci_try_reset_function(struct pci_dev *);
4286:	int pci_try_set_mwi(struct pci_dev *);
3977:	void pci_unmap_iospace(struct resource *);
921:	void pci_update_current_state(struct pci_dev *, pci_power_t);
719:	int pci_wait_for_pending(struct pci_dev *, int, u16);
4427:	int pci_wait_for_pending_transaction(struct pci_dev *);
2298:	int pci_wake_from_d3(struct pci_dev *, bool);
989:	void pci_wakeup_bus(struct pci_bus *);
1848:	int pcibios_add_device(struct pci_dev *);
5918:	resource_size_t pcibios_default_alignment(void);
1578:	int pcibios_enable_device(struct pci_dev *, int);
1882:	void pcibios_penalize_isa_irq(int, int);
4692:	void pcibios_reset_secondary_bus(struct pci_dev *);
4144:	void pcibios_set_master(struct pci_dev *);
1949:	int pcibios_set_pcie_reset_state(struct pci_dev *, enum pcie_reset_state);
4131:	char *pcibios_setup(char *);
5602:	u32 pcie_bandwidth_available(struct pci_dev *, struct pci_dev **, enum pci_bus_speed *, enum pcie_link_width *);
5711:	u32 pcie_bandwidth_capable(struct pci_dev *, enum pci_bus_speed *, enum pcie_link_width *);
1973:	void pcie_clear_root_pme_status(struct pci_dev *);
4505:	int pcie_flr(struct pci_dev *);
5553:	int pcie_get_mps(struct pci_dev *);
5502:	int pcie_get_readrq(struct pci_dev *);
5653:	enum pci_bus_speed pcie_get_speed_cap(struct pci_dev *);
5689:	enum pcie_link_width pcie_get_width_cap(struct pci_dev *);
4485:	bool pcie_has_flr(struct pci_dev *);
5762:	void pcie_print_link_status(struct pci_dev *);
5571:	int pcie_set_mps(struct pci_dev *, int);
5520:	int pcie_set_readrq(struct pci_dev *, int);
4621:	bool pcie_wait_for_link(struct pci_dev *, bool);
1801:	int pcim_enable_device(struct pci_dev *);
1829:	void pcim_pin_device(struct pci_dev *);
4264:	int pcim_set_mwi(struct pci_dev *);
5409:	int pcix_get_max_mmrbc(struct pci_dev *);
5432:	int pcix_get_mmrbc(struct pci_dev *);
5457:	int pcix_set_mmrbc(struct pci_dev *, int);
400:	static int __pci_bus_find_cap_start(struct pci_bus *, unsigned int, u8);
1030:	static int __pci_dev_set_current_state(struct pci_dev *, void *);
2217:	static int __pci_enable_wake(struct pci_dev *, pci_power_t, bool);
361:	static int __pci_find_next_cap_ttl(struct pci_bus *, unsigned int, u8, int, int *);
551:	static int __pci_find_next_ht_cap(struct pci_dev *, int, int);
2094:	static void __pci_pme_active(struct pci_dev *, bool);
3684:	static int __pci_request_region(struct pci_dev *, int, const char *, int);
3778:	static int __pci_request_selected_regions(struct pci_dev *, int, const char *, int);
4107:	static void __pci_set_master(struct pci_dev *, bool);
1000:	static void __pci_start_power_transition(struct pci_dev *, pci_power_t);
3040:	static int _pci_add_cap_save_buffer(struct pci_dev *, u16, bool, unsigned int);
3987:	static void devm_pci_unmap_iospace(struct device *, void *);
1884:	static void do_pci_disable_device(struct pci_dev *);
1583:	static int do_pci_enable_device(struct pci_dev *, int);
3271:	static bool pci_acs_flags_enabled(struct pci_dev *, u16);
4526:	static int pci_af_flr(struct pci_dev *, int);
5034:	static void pci_bus_lock(struct pci_bus *);
5295:	static int pci_bus_reset(struct pci_bus *, int);
5016:	static bool pci_bus_resetable(struct pci_bus *);
5182:	static void pci_bus_restore_locked(struct pci_bus *);
5166:	static void pci_bus_save_and_disable_locked(struct pci_bus *);
5058:	static int pci_bus_trylock(struct pci_bus *);
5046:	static void pci_bus_unlock(struct pci_bus *);
4348:	static bool pci_check_and_set_intx_mask(struct pci_dev *, bool);
2653:	static int pci_dev_check_d3cold(struct pci_dev *, void *);
4745:	static int pci_dev_reset_slot_function(struct pci_dev *, int);
4816:	static void pci_dev_restore(struct pci_dev *);
4785:	static void pci_dev_save_and_disable(struct pci_dev *);
311:	static int pci_dev_str_match(struct pci_dev *, const char *, const char **);
4768:	static int pci_dev_trylock(struct pci_dev *);
4437:	static int pci_dev_wait(struct pci_dev *, char *, int);
1632:	static void pci_enable_bridge(struct pci_dev *);
1654:	static int pci_enable_device_flags(struct pci_dev *, unsigned long);
4712:	static int pci_parent_bus_reset(struct pci_dev *, int);
956:	static int pci_platform_power_transition(struct pci_dev *, pci_power_t);
2058:	static void pci_pme_list_scan(struct work_struct *);
2021:	static int pci_pme_wakeup(struct pci_dev *, void *);
815:	static int pci_raw_set_power_state(struct pci_dev *, pci_power_t);
6312:	static int pci_realloc_setup_params(void);
3410:	static int pci_rebar_find_pos(struct pci_dev *, int);
4730:	static int pci_reset_hotplug_slot(struct hotplug_slot *, int);
6132:	static ssize_t pci_resource_alignment_show(struct bus_type *, char *);
6137:	static ssize_t pci_resource_alignment_store(struct bus_type *, const char *, size_t);
6146:	static int pci_resource_alignment_sysfs_init(void);
1356:	static void pci_restore_config_dword(struct pci_dev *, int, u32, int, bool);
6112:	static ssize_t pci_set_resource_alignment_param(const char *, size_t);
6240:	static int pci_setup(char *);
5228:	static int pci_slot_reset(struct pci_slot *, int);
5118:	static void pci_slot_unlock(struct pci_slot *);
2315:	static pci_power_t pci_target_state(struct pci_dev *, bool);
978:	static int pci_wakeup(struct pci_dev *, void *);
132:	static int pcie_port_pm_setup(char *);
1749:	static void pcim_release(struct device *, void *);

File drivers/pci/pcie/aer.c:
326:	bool aer_acpi_firmware_first(void);
1143:	int aer_get_device_error_info(struct pci_dev *, struct aer_err_info *);
801:	void aer_print_error(struct pci_dev *, struct aer_err_info *);
1113:	void aer_recover_queue(int, unsigned int, unsigned int, int, struct aer_capability_regs *);
862:	void cper_print_aer(struct pci_dev *, int, struct aer_capability_regs *);
849:	int cper_severity_to_aer(int);
111:	bool pci_aer_available(void);
371:	void pci_aer_clear_device_status(struct pci_dev *);
402:	void pci_aer_clear_fatal_status(struct pci_dev *);
521:	void pci_aer_exit(struct pci_dev *);
499:	void pci_aer_init(struct pci_dev *);
422:	int pci_cleanup_aer_error_status_regs(struct pci_dev *);
379:	int pci_cleanup_aer_uncorrect_error_status(struct pci_dev *);
361:	int pci_disable_pcie_error_reporting(struct pci_dev *);
349:	int pci_enable_pcie_error_reporting(struct pci_dev *);
106:	void pci_no_aer(void);
476:	void pci_restore_aer_state(struct pci_dev *);
453:	void pci_save_aer_state(struct pci_dev *);
308:	int pcie_aer_get_firmware_first(struct pci_dev *);
1514:	int pcie_aer_init(void);
207:	void pcie_ecrc_get_policy(char *);
187:	void pcie_set_ecrc_checking(struct pci_dev *);
776:	static void __aer_print_error(struct pci_dev *, struct aer_err_info *);
657:	static ssize_t aer_dev_correctable_show(struct device *, struct device_attribute *, char *);
660:	static ssize_t aer_dev_fatal_show(struct device *, struct device_attribute *, char *);
663:	static ssize_t aer_dev_nonfatal_show(struct device *, struct device_attribute *, char *);
259:	static int aer_hest_parse(struct acpi_hest_header *, void *);
1290:	static irqreturn_t aer_irq(int, void *);
1269:	static irqreturn_t aer_isr(int, void *);
836:	static void aer_print_port_info(struct pci_dev *, struct aer_err_info *);
1436:	static int aer_probe(struct pcie_device *);
1080:	static void aer_recover_work_func(struct work_struct *);
1423:	static void aer_remove(struct pcie_device *);
1471:	static pci_ers_result_t aer_root_reset(struct pci_dev *);
677:	static ssize_t aer_rootport_total_err_cor_show(struct device *, struct device_attribute *, char *);
679:	static ssize_t aer_rootport_total_err_fatal_show(struct device *, struct device_attribute *, char *);
681:	static ssize_t aer_rootport_total_err_nonfatal_show(struct device *, struct device_attribute *, char *);
694:	static umode_t aer_stats_attrs_are_visible(struct kobject *, struct attribute *, int);
979:	static int find_device_iter(struct pci_dev *, void *);
1010:	static bool find_source_device(struct pci_dev *, struct aer_err_info *);
1311:	static int set_device_error_reporting(struct pci_dev *, void *);
1336:	static void set_downstream_devices_error_reporting(struct pci_dev *, bool);

File drivers/pci/pcie/aspm.c:
1133:	void pci_disable_link_state(struct pci_dev *, int);
1118:	void pci_disable_link_state_locked(struct pci_dev *, int);
997:	void pcie_aspm_exit_link_state(struct pci_dev *);
910:	void pcie_aspm_init_link_state(struct pci_dev *);
1036:	void pcie_aspm_pm_state_change(struct pci_dev *);
1054:	void pcie_aspm_powersave_config_link(struct pci_dev *);
1314:	bool pcie_aspm_support_enabled(void);
1300:	void pcie_no_aspm(void);
1073:	static void __pci_disable_link_state(struct pci_dev *, int, bool);
343:	static u32 calc_l1ss_pwron(struct pci_dev *, u32, u32);
664:	static void pci_clear_and_set_dword(struct pci_dev *, int, u32, u32);
546:	static void pcie_aspm_cap_init(struct pcie_link_state *, int);
435:	static void pcie_aspm_check_latency(struct pci_dev *, struct pci_dev *, struct pci_dev *);
1284:	static int pcie_aspm_disable(char *);
1165:	static int pcie_aspm_get_policy(char *, const struct kernel_param *);
1139:	static int pcie_aspm_set_policy(const char *, const struct kernel_param *);
761:	static void pcie_config_aspm_link(struct pcie_link_state *, u32);
812:	static void pcie_config_aspm_path(struct pcie_link_state *);
396:	static void pcie_get_aspm_reg(struct pci_dev *, struct aspm_register_info *);
152:	static void pcie_set_clkpm_nocheck(struct pcie_link_state *, int);
973:	static void pcie_update_aspm_capable(struct pcie_link_state *);

File drivers/pci/pcie/dpc.c:
80:	void pci_restore_dpc_state(struct pci_dev *);
59:	void pci_save_dpc_state(struct pci_dev *);
360:	int pcie_dpc_init(void);
227:	static irqreturn_t dpc_handler(int, void *);
267:	static irqreturn_t dpc_irq(int, void *);
286:	static int dpc_probe(struct pcie_device *);
150:	static void dpc_process_rp_pio_error(struct dpc_dev *);
340:	static void dpc_remove(struct pcie_device *);
120:	static pci_ers_result_t dpc_reset_link(struct pci_dev *);

File drivers/pci/pcie/err.c:
188:	void pcie_do_recovery(struct pci_dev *, enum pci_channel_state, u32);
21:	static pci_ers_result_t merge_result(enum pci_ers_result, enum pci_ers_result);
46:	static int report_error_detected(struct pci_dev *, enum pci_channel_state, enum pci_ers_result *);
80:	static int report_frozen_detected(struct pci_dev *, void *);
90:	static int report_mmio_enabled(struct pci_dev *, void *);
85:	static int report_normal_detected(struct pci_dev *, void *);
128:	static int report_resume(struct pci_dev *, void *);
109:	static int report_slot_reset(struct pci_dev *, void *);

File drivers/pci/pcie/pme.c:
458:	int pcie_pme_init(void);
51:	void pcie_pme_interrupt_enable(struct pci_dev *, bool);
294:	static int pcie_pme_can_wakeup(struct pci_dev *, void *);
351:	static bool pcie_pme_check_wakeup(struct pci_bus *);
366:	static void pcie_pme_disable_interrupt(struct pci_dev *, struct pcie_pme_service_data *);
99:	static bool pcie_pme_from_pci_bridge(struct pci_bus *, u8);
262:	static irqreturn_t pcie_pme_irq(int, void *);
319:	static int pcie_pme_probe(struct pcie_device *);
434:	static void pcie_pme_remove(struct pcie_device *);
411:	static int pcie_pme_resume(struct pcie_device *);
30:	static int pcie_pme_setup(char *);
380:	static int pcie_pme_suspend(struct pcie_device *);
67:	static bool pcie_pme_walk_bus(struct pci_bus *);
211:	static void pcie_pme_work_fn(struct work_struct *);

File drivers/pci/pcie/portdrv_core.c:
310:	int pcie_port_device_register(struct pci_dev *);
485:	void pcie_port_device_remove(struct pci_dev *);
400:	int pcie_port_device_resume(struct device *);
390:	int pcie_port_device_resume_noirq(struct device *);
384:	int pcie_port_device_suspend(struct device *);
463:	struct device *pcie_port_find_device(struct pci_dev *, u32);
442:	struct pcie_port_service_driver *pcie_port_find_service(struct pci_dev *, u32);
563:	int pcie_port_service_register(struct pcie_port_service_driver *);
582:	void pcie_port_service_unregister(struct pcie_port_service_driver *);
414:	static int find_service_iter(struct device *, void *);
500:	static int pcie_port_probe_service(struct device *);
531:	static int pcie_port_remove_service(struct device *);
557:	static void pcie_port_shutdown_service(struct device *);
365:	static int pm_iter(struct device *, void *);
35:	static void release_pcie_device(struct device *);
407:	static int remove_iter(struct device *, void *);

File drivers/pci/pcie/portdrv_pci.c:
223:	static int dmi_pcie_pme_disable_msi(const struct dmi_system_id *);
59:	static int pcie_port_runtime_resume(struct device *);
54:	static int pcie_port_runtime_suspend(struct device *);
38:	static int pcie_port_setup(char *);
187:	static void pcie_portdrv_err_resume(struct pci_dev *);
150:	static pci_ers_result_t pcie_portdrv_error_detected(struct pci_dev *, enum pci_channel_state);
255:	static int pcie_portdrv_init(void);
164:	static pci_ers_result_t pcie_portdrv_mmio_enabled(struct pci_dev *);
103:	static int pcie_portdrv_probe(struct pci_dev *, const struct pci_device_id *);
139:	static void pcie_portdrv_remove(struct pci_dev *);
157:	static pci_ers_result_t pcie_portdrv_slot_reset(struct pci_dev *);
169:	static int resume_iter(struct device *, void *);

File drivers/pci/probe.c:
180:	int __pci_read_base(struct pci_dev *, enum pci_bar_type, struct resource *, unsigned int);
620:	struct pci_host_bridge *devm_pci_alloc_host_bridge(struct device *, size_t);
77:	int no_pci_devices(void);
1106:	struct pci_bus *pci_add_new_bus(struct pci_bus *, struct pci_dev *, int);
2344:	struct pci_dev *pci_alloc_dev(struct pci_bus *);
605:	struct pci_host_bridge *pci_alloc_host_bridge(size_t);
2841:	bool pci_bus_generic_read_dev_vendor_id(struct pci_bus *, int, u32 *, int);
3592:	int pci_bus_insert_busn_res(struct pci_bus *, int, int);
2861:	bool pci_bus_read_dev_vendor_id(struct pci_bus *, int, u32 *, int);
3640:	void pci_bus_release_busn_res(struct pci_bus *);
3619:	int pci_bus_update_busn_res_end(struct pci_bus *, int);
1607:	int pci_cfg_space_size(struct pci_dev *);
2114:	int pci_configure_extended_tags(struct pci_dev *, void *);
3530:	struct pci_bus *pci_create_root_bus(struct device *, int, struct pci_ops *, void *, struct list_head *);
3016:	void pci_device_add(struct pci_dev *, struct pci_bus *);
636:	void pci_free_host_bridge(struct pci_host_bridge *);
3559:	int pci_host_probe(struct pci_host_bridge *);
3832:	int pci_hp_add_bridge(struct pci_dev *);
3797:	void pci_lock_rescan_remove(void);
517:	void pci_read_bridge_bases(struct pci_bus *);
3779:	unsigned int pci_rescan_bus(struct pci_bus *);
3756:	unsigned int pci_rescan_bus_bridge_resize(struct pci_dev *);
1439:	int pci_scan_bridge(struct pci_bus *, struct pci_dev *, int, int);
3726:	struct pci_bus *pci_scan_bus(int, struct pci_ops *, void *);
3504:	unsigned int pci_scan_child_bus(struct pci_bus *);
3692:	struct pci_bus *pci_scan_root_bus(struct device *, int, struct pci_ops *, void *, struct list_head *);
3653:	int pci_scan_root_bus_bridge(struct pci_host_bridge *);
3070:	struct pci_dev *pci_scan_single_device(struct pci_bus *, int);
3151:	int pci_scan_slot(struct pci_bus *, int);
1741:	int pci_setup_device(struct pci_dev *);
3827:	void pci_sort_breadthfirst(void);
685:	const char *pci_speed_string(enum pci_bus_speed);
3803:	void pci_unlock_rescan_remove(void);
3522:	void pcibios_add_bus(struct pci_bus *);
3517:	int pcibios_root_bridge_prepare(struct pci_host_bridge *);
3312:	void pcie_bus_configure_settings(struct pci_bus *);
2166:	bool pcie_relaxed_ordering_enabled(struct pci_dev *);
722:	void pcie_update_link_speed(struct pci_bus *, u16);
1519:	void set_pcie_hotplug_bridge(struct pci_dev *);
1467:	void set_pcie_port_type(struct pci_dev *);
572:	static void devm_pci_release_host_bridge_dev(struct device *);
1717:	static void early_dump_pci_device(struct pci_dev *);
67:	static int find_anything(struct device *, void *);
3090:	static unsigned int next_fn(struct pci_bus *, struct pci_dev *, unsigned int);
550:	static struct pci_bus *pci_alloc_bus(struct pci_bus *);
1594:	static int pci_cfg_space_size_ext(struct pci_dev *);
2292:	static void pci_configure_device(struct pci_dev *);
325:	static void pci_read_bases(struct pci_dev *, unsigned int, int);
1449:	static void pci_read_irq(struct pci_dev *);
868:	static int pci_register_host_bridge(struct pci_host_bridge *);
2330:	static void pci_release_dev(struct device *);
582:	static void pci_release_host_bridge_dev(struct device *);
1194:	static int pci_scan_bridge_extend(struct pci_bus *, struct pci_dev *, int, unsigned int, int);
3363:	static unsigned int pci_scan_child_bus_extend(struct pci_bus *, unsigned int);
847:	static void pci_set_bus_msi_domain(struct pci_bus *);
2819:	static int pci_skip_bus(char *);
3809:	static int pci_sort_bf_cmp(const struct device *, const struct device *);
108:	static int pcibus_class_init(void);
3283:	static int pcie_bus_configure_set(struct pci_dev *, void *);
3182:	static int pcie_find_smpss(struct pci_dev *, void *);
92:	static void release_pcibus_dev(struct device *);

File drivers/pci/proc.c:
393:	int pci_proc_attach_device(struct pci_dev *);
432:	int pci_proc_detach_bus(struct pci_bus *);
425:	int pci_proc_detach_device(struct pci_dev *);
438:	static int pci_proc_init(void);
328:	static void *pci_seq_next(struct seq_file *, void *, loff_t *);
316:	static void *pci_seq_start(struct seq_file *, loff_t *);
337:	static void pci_seq_stop(struct seq_file *, void *);
190:	static long proc_bus_pci_ioctl(struct file *, unsigned int, unsigned long);
21:	static loff_t proc_bus_pci_lseek(struct file *, loff_t, int);
234:	static int proc_bus_pci_mmap(struct file *, struct vm_area_struct *);
274:	static int proc_bus_pci_open(struct inode *, struct file *);
27:	static ssize_t proc_bus_pci_read(struct file *, char *, size_t, loff_t *);
289:	static int proc_bus_pci_release(struct inode *, struct file *);
111:	static ssize_t proc_bus_pci_write(struct file *, const char *, size_t, loff_t *);
345:	static int show_device(struct seq_file *, void *);

File drivers/pci/quirks.c:
4656:	int pci_dev_specific_acs_enabled(struct pci_dev *, u16);
4871:	int pci_dev_specific_disable_acs_redir(struct pci_dev *);
4850:	int pci_dev_specific_enable_acs(struct pci_dev *);
3897:	int pci_dev_specific_reset(struct pci_dev *, int);
100:	void pci_fixup_device(enum pci_fixup_pass, struct pci_dev *);
5090:	int pci_idt_bus_quirk(struct pci_bus *, int, u32 *, int);
2747:	static void __nv_msi_ht_cap_quirk(struct pci_dev *, int);
1649:	static void asus_hides_ac97_lpc(struct pci_dev *);
1372:	static void asus_hides_smbus_hostbridge(struct pci_dev *);
1505:	static void asus_hides_smbus_lpc(struct pci_dev *);
1579:	static void asus_hides_smbus_lpc_ich6(struct pci_dev *);
1569:	static void asus_hides_smbus_lpc_ich6_resume(struct pci_dev *);
1555:	static void asus_hides_smbus_lpc_ich6_resume_early(struct pci_dev *);
1540:	static void asus_hides_smbus_lpc_ich6_suspend(struct pci_dev *);
3788:	static int delay_250ms_after_flr(struct pci_dev *, int);
3192:	static void disable_igfx_irq(struct pci_dev *);
1864:	static int dmi_disable_ioapicreroute(const struct dmi_system_id *);
3074:	static void fixup_mpss_256(struct pci_dev *);
2239:	static void fixup_rev1_53c810(struct pci_dev *);
3058:	static void fixup_ti816x_class(struct pci_dev *);
2602:	static int ht_check_msi_mapping(struct pci_dev *);
2525:	static void ht_enable_msi_mapping(struct pci_dev *);
774:	static void ich6_lpc_acpi_gpio(struct pci_dev *);
789:	static void ich6_lpc_generic_decode(struct pci_dev *, unsigned int, const char *, int);
833:	static void ich7_lpc_generic_decode(struct pci_dev *, unsigned int, const char *);
3324:	static void mellanox_check_broken_intx_masking(struct pci_dev *);
2464:	static int msi_ht_cap_enabled(struct pci_dev *);
2798:	static void nv_msi_ht_cap_quirk_all(struct pci_dev *);
2805:	static void nv_msi_ht_cap_quirk_leaf(struct pci_dev *);
2580:	static void nvbridge_check_legacy_irq_routing(struct pci_dev *);
2555:	static void nvenet_msi_disable(struct pci_dev *);
3714:	static int nvme_disable_and_flr(struct pci_dev *, int);
155:	static int pci_apply_final_quirks(void);
57:	static void pci_do_fixups(struct pci_dev *, struct pci_fixup *, struct pci_fixup *);
4295:	static int pci_quirk_amd_sb_acs(struct pci_dev *, u16);
4338:	static int pci_quirk_cavium_acs(struct pci_dev *, u16);
4811:	static int pci_quirk_disable_intel_spt_pch_acs_redir(struct pci_dev *);
4765:	static int pci_quirk_enable_intel_pch_acs(struct pci_dev *);
4784:	static int pci_quirk_enable_intel_spt_pch_acs(struct pci_dev *);
5303:	static void pci_quirk_hisi_fixup_bar(struct pci_dev *);
5295:	static void pci_quirk_hisi_fixup_class(struct pci_dev *);
4419:	static int pci_quirk_intel_pch_acs(struct pci_dev *, u16);
4512:	static int pci_quirk_intel_spt_pch_acs(struct pci_dev *, u16);
4495:	static bool pci_quirk_intel_spt_pch_acs_match(struct pci_dev *);
4533:	static int pci_quirk_mf_endpoint_acs(struct pci_dev *, u16);
4440:	static int pci_quirk_qcom_rp_acs(struct pci_dev *, u16);
4356:	static int pci_quirk_xgene_acs(struct pci_dev *, u16);
4177:	static int pci_quirk_zhaoxin_pcie_ports_acs(struct pci_dev *, u16);
637:	static void piix4_io_quirk(struct pci_dev *, const char *, unsigned int, unsigned int);
663:	static void piix4_mem_quirk(struct pci_dev *, const char *, unsigned int, unsigned int);
1769:	static void quirk_alder_ioapic(struct pci_dev *);
630:	static void quirk_ali7101_acpi(struct pci_dev *);
425:	static void quirk_alimagik(struct pci_dev *);
2446:	static void quirk_amd_780_apc_msi(struct pci_dev *);
1026:	static void quirk_amd_8131_mmrbc(struct pci_dev *);
1261:	static void quirk_amd_ide_mode(struct pci_dev *);
1001:	static void quirk_amd_ioapic(struct pci_dev *);
608:	static void quirk_amd_nl_class(struct pci_dev *);
1174:	static void quirk_amd_ordering(struct pci_dev *);
3471:	static void quirk_apple_poweroff_thunderbolt(struct pci_dev *);
3517:	static void quirk_apple_wait_for_thunderbolt(struct pci_dev *);
588:	static void quirk_ati_exploding_mce(struct pci_dev *);
2343:	static void quirk_brcm_5719_limit_mrrs(struct pci_dev *);
4068:	static void quirk_bridge_cavm_thrx2_pcie_root(struct pci_dev *);
3257:	static void quirk_broken_intx_masking(struct pci_dev *);
1158:	static void quirk_cardbus_legacy(struct pci_dev *);
4256:	static void quirk_chelsio_T5_disable_root_port_attributes(struct pci_dev *);
454:	static void quirk_citrine(struct pci_dev *);
545:	static void quirk_cs5536_vsa(struct pci_dev *);
2414:	static void quirk_disable_all_msi(struct pci_dev *);
2016:	static void quirk_disable_amd_8111_boot_interrupt(struct pci_dev *);
1992:	static void quirk_disable_amd_813x_boot_interrupt(struct pci_dev *);
2202:	static void quirk_disable_aspm_l0s(struct pci_dev *);
1955:	static void quirk_disable_broadcom_boot_interrupt(struct pci_dev *);
1932:	static void quirk_disable_intel_boot_interrupt(struct pci_dev *);
2429:	static void quirk_disable_msi(struct pci_dev *);
1245:	static void quirk_disable_pxb(struct pci_dev *);
3912:	static void quirk_dma_func0_alias(struct pci_dev *);
3926:	static void quirk_dma_func1_alias(struct pci_dev *);
1197:	static void quirk_dunord(struct pci_dev *);
2132:	static void quirk_e100_interrupt(struct pci_dev *);
1339:	static void quirk_eisa_bridge(struct pci_dev *);
2230:	static void quirk_enable_clear_retrain_link(struct pci_dev *);
474:	static void quirk_extend_bar_to_page(struct pci_dev *);
4008:	static void quirk_fixed_dma_alias(struct pci_dev *);
5020:	static void quirk_fsl_no_msi(struct pci_dev *);
5036:	static void quirk_gpu_hda(struct pci_dev *);
2912:	static void quirk_hotplug_bridge(struct pci_dev *);
742:	static void quirk_ich4_lpc_acpi(struct pci_dev *);
821:	static void quirk_ich6_lpc(struct pci_dev *);
858:	static void quirk_ich7_lpc(struct pci_dev *);
1302:	static void quirk_ide_samemode(struct pci_dev *);
3093:	static void quirk_intel_mc_errata(struct pci_dev *);
4976:	static void quirk_intel_no_flr(struct pci_dev *);
3159:	static void quirk_intel_ntb(struct pci_dev *);
1823:	static void quirk_intel_pcie_pm(struct pci_dev *);
4899:	static void quirk_intel_qat_vf_cap(struct pci_dev *);
509:	static void quirk_io(struct pci_dev *, int, unsigned int, const char *);
559:	static void quirk_io_region(struct pci_dev *, int, unsigned int, int, const char *);
254:	static void quirk_isa_dma_hangs(struct pci_dev *);
1756:	static void quirk_jmicron_async_suspend(struct pci_dev *);
1682:	static void quirk_jmicron_ata(struct pci_dev *);
1225:	static void quirk_mediagx_master(struct pci_dev *);
214:	static void quirk_mellanox_tavor(struct pci_dev *);
4054:	static void quirk_mic_x200_dma_alias(struct pci_dev *);
202:	static void quirk_mmio_always_on(struct pci_dev *);
2487:	static void quirk_msi_ht_cap(struct pci_dev *);
2817:	static void quirk_msi_intx_disable_ati_bug(struct pci_dev *);
2812:	static void quirk_msi_intx_disable_bug(struct pci_dev *);
2836:	static void quirk_msi_intx_disable_qca_bug(struct pci_dev *);
436:	static void quirk_natoma(struct pci_dev *);
2095:	static void quirk_netmos(struct pci_dev *);
464:	static void quirk_nfp6000(struct pci_dev *);
1318:	static void quirk_no_ata_d3(struct pci_dev *);
5008:	static void quirk_no_ats(struct pci_dev *);
3386:	static void quirk_no_bus_reset(struct pci_dev *);
4983:	static void quirk_no_ext_tags(struct pci_dev *);
3411:	static void quirk_no_pm_reset(struct pci_dev *);
304:	static void quirk_nopciamd(struct pci_dev *);
294:	static void quirk_nopcipci(struct pci_dev *);
2501:	static void quirk_nvidia_ck804_msi_ht_cap(struct pci_dev *);
2275:	static void quirk_nvidia_ck804_pcie_aer_ext_cap(struct pci_dev *);
2257:	static void quirk_p64h2_1k_io(struct pci_dev *);
225:	static void quirk_passive_release(struct pci_dev *);
1794:	static void quirk_pcie_mch(struct pci_dev *);
1808:	static void quirk_pcie_pxh(struct pci_dev *);
695:	static void quirk_piix4_acpi(struct pci_dev *);
2063:	static void quirk_plx_pci9050(struct pci_dev *);
1850:	static void quirk_radeon_pm(struct pci_dev *);
4104:	static void quirk_relaxedordering_disable(struct pci_dev *);
3221:	static void quirk_remove_d3_delay(struct pci_dev *);
1893:	static void quirk_reroute_to_boot_interrupts_intel(struct pci_dev *);
5253:	static void quirk_reset_lenovo_thinkpad_p50_nvgpu(struct pci_dev *);
496:	static void quirk_s3_64M(struct pci_dev *);
1619:	static void quirk_sis_503(struct pci_dev *);
1591:	static void quirk_sis_96x_smbus(struct pci_dev *);
1288:	static void quirk_svwks_csb5ide(struct pci_dev *);
5127:	static void quirk_switchtec_ntb_dma_alias(struct pci_dev *);
2042:	static void quirk_tc86c001_ide(struct pci_dev *);
3437:	static void quirk_thunderbolt_hotplug_msi(struct pci_dev *);
277:	static void quirk_tigerpoint_bm_sts(struct pci_dev *);
1212:	static void quirk_transparent_bridge(struct pci_dev *);
317:	static void quirk_triton(struct pci_dev *);
4081:	static void quirk_tw686x_class(struct pci_dev *);
2392:	static void quirk_unhide_mch_dev6(struct pci_dev *);
4028:	static void quirk_use_pcie_bridge_dma_alias(struct pci_dev *);
1043:	static void quirk_via_acpi(struct pci_dev *);
1059:	static void quirk_via_bridge(struct pci_dev *);
2291:	static void quirk_via_cx700_pci_parking_caching(struct pci_dev *);
954:	static void quirk_via_ioapic(struct pci_dev *);
1107:	static void quirk_via_vlink(struct pci_dev *);
978:	static void quirk_via_vt8237_bypass_apic_deassert(struct pci_dev *);
402:	static void quirk_viaetbf(struct pci_dev *);
339:	static void quirk_vialatency(struct pci_dev *);
411:	static void quirk_vsfx(struct pci_dev *);
917:	static void quirk_vt8235_acpi(struct pci_dev *);
887:	static void quirk_vt82c586_acpi(struct pci_dev *);
1145:	static void quirk_vt82c598_id(struct pci_dev *);
901:	static void quirk_vt82c686_acpi(struct pci_dev *);
928:	static void quirk_xio2000a(struct pci_dev *);
3636:	static int reset_chelsio_generic_dev(struct pci_dev *, int);
3811:	static int reset_hinic_vf_dev(struct pci_dev *, int);
3571:	static int reset_intel_82599_sfp_virtfn(struct pci_dev *, int);
3593:	static int reset_ivb_igd(struct pci_dev *, int);
2976:	static void ricoh_mmc_fixup_r5c832(struct pci_dev *);
2944:	static void ricoh_mmc_fixup_rl5c476(struct pci_dev *);
3047:	static void vtd_mask_spec_errors(struct pci_dev *);

File drivers/pci/remove.c:
47:	void pci_remove_bus(struct pci_bus *);
147:	void pci_remove_root_bus(struct pci_bus *);
114:	void pci_stop_and_remove_bus_device(struct pci_dev *);
121:	void pci_stop_and_remove_bus_device_locked(struct pci_dev *);
129:	void pci_stop_root_bus(struct pci_bus *);
85:	static void pci_remove_bus_device(struct pci_dev *);
65:	static void pci_stop_bus_device(struct pci_dev *);

File drivers/pci/rom.c:
58:	void pci_disable_rom(struct pci_dev *);
24:	int pci_enable_rom(struct pci_dev *);
136:	void *pci_map_rom(struct pci_dev *, size_t *);
205:	void *pci_platform_rom(struct pci_dev *, size_t *);
187:	void pci_unmap_rom(struct pci_dev *, void *);

File drivers/pci/search.c:
379:	int pci_dev_present(const struct pci_device_id *);
140:	struct pci_bus *pci_find_bus(int, int);
165:	struct pci_bus *pci_find_next_bus(const struct pci_bus *);
29:	int pci_for_each_dma_alias(struct pci_dev *, int (*)(struct pci_dev *, u16, void *), void *);
353:	struct pci_dev *pci_get_class(unsigned int, struct pci_dev *);
332:	struct pci_dev *pci_get_device(unsigned int, unsigned int, struct pci_dev *);
229:	struct pci_dev *pci_get_domain_bus_and_slot(int, unsigned int, unsigned int);
194:	struct pci_dev *pci_get_slot(struct pci_bus *, unsigned int);
303:	struct pci_dev *pci_get_subsys(unsigned int, unsigned int, unsigned int, unsigned int, struct pci_dev *);
243:	static int match_pci_dev_by_id(struct device *, void *);
115:	static struct pci_bus *pci_do_find_bus(struct pci_bus *, unsigned char);
269:	static struct pci_dev *pci_get_dev_by_id(const struct pci_device_id *, struct pci_dev *);

File drivers/pci/setup-bus.c:
1338:	void __pci_bus_assign_resources(const struct pci_bus *, struct list_head *, struct list_head *);
1173:	void __pci_bus_size_bridges(struct pci_bus *, struct list_head *);
1993:	void pci_assign_unassigned_bridge_resources(struct pci_dev *);
2164:	void pci_assign_unassigned_bus_resources(struct pci_bus *);
1811:	void pci_assign_unassigned_resources(void);
1717:	void pci_assign_unassigned_root_bus_resources(struct pci_bus *);
1374:	void pci_bus_assign_resources(const struct pci_bus *);
1441:	void pci_bus_claim_resources(struct pci_bus *);
1291:	void pci_bus_size_bridges(struct pci_bus *);
1071:	unsigned long pci_cardbus_resource_alignment(struct resource *);
698:	int pci_claim_bridge_resource(struct pci_dev *, int);
1649:	void pci_realloc_get_opt(char *);
2066:	int pci_reassign_bridge_resources(struct pci_dev *, unsigned long);
688:	void pci_setup_bridge(struct pci_bus *);
510:	void pci_setup_cardbus(struct pci_bus *);
684:	void pcibios_setup_bridge(struct pci_bus *, unsigned long);
810:	resource_size_t pcibios_window_alignment(struct pci_bus *, unsigned long);
348:	static void __assign_resources_sorted(struct list_head *, struct list_head *, struct list_head *);
179:	static void __dev_sort_resources(struct pci_dev *, struct list_head *);
1448:	static void __pci_bridge_assign_resources(const struct pci_dev *, struct list_head *, struct list_head *);
665:	static void __pci_setup_bridge(struct pci_bus *, unsigned long);
60:	static int add_to_list(struct list_head *, struct pci_dev *, struct resource *, resource_size_t, resource_size_t);
278:	static void assign_requested_resources_sorted(struct list_head *, struct list_head *);
1824:	static void extend_bridge_window(struct pci_dev *, struct resource *, struct list_head *, resource_size_t);
758:	static struct resource *find_free_bus_resource(struct pci_bus *, unsigned long, unsigned long);
41:	static void free_list(struct list_head *);
963:	static int pbus_size_mem(struct pci_bus *, unsigned long, unsigned long, unsigned long, unsigned long, resource_size_t, resource_size_t, struct list_head *);
1408:	static void pci_bus_allocate_dev_resources(struct pci_bus *);
1422:	static void pci_bus_allocate_resources(struct pci_bus *);
1848:	static void pci_bus_distribute_available_resources(struct pci_bus *, struct list_head *, resource_size_t, resource_size_t, resource_size_t);
1600:	static void pci_bus_dump_resources(struct pci_bus *);
1617:	static int pci_bus_get_depth(struct pci_bus *);
1555:	static void pci_bus_release_bridge_resources(struct pci_bus *, unsigned long, enum release_type);
576:	static void pci_setup_bridge_io(struct pci_dev *);
613:	static void pci_setup_bridge_mmio(struct pci_dev *);
632:	static void pci_setup_bridge_mmio_pref(struct pci_dev *);
83:	static void remove_from_list(struct list_head *, struct resource *);

File drivers/pci/setup-irq.c:
19:	void pci_assign_irq(struct pci_dev *);

File drivers/pci/setup-res.c:
309:	int pci_assign_resource(struct pci_dev *, int);
130:	int pci_claim_resource(struct pci_dev *, int);
169:	void pci_disable_bridge_window(struct pci_dev *);
456:	int pci_enable_resources(struct pci_dev *, int);
354:	int pci_reassign_resource(struct pci_dev *, int, resource_size_t, resource_size_t);
393:	void pci_release_resource(struct pci_dev *, int);
409:	int pci_resize_resource(struct pci_dev *, int, int);
120:	void pci_update_resource(struct pci_dev *, int);
237:	resource_size_t pcibios_align_resource(void *, const struct resource *, resource_size_t, resource_size_t);
189:	resource_size_t pcibios_retrieve_fw_addr(struct pci_dev *, int);
293:	static int _pci_assign_resource(struct pci_dev *, int, resource_size_t, resource_size_t);

File drivers/pci/slot.c:
225:	struct pci_slot *pci_create_slot(struct pci_bus *, int, const char *, struct hotplug_slot *);
312:	void pci_destroy_slot(struct pci_slot *);
162:	void pci_dev_assign_slot(struct pci_dev *);
332:	void pci_hp_create_module_link(struct pci_slot *);
358:	void pci_hp_remove_module_link(struct pci_slot *);
39:	static ssize_t address_read_file(struct pci_slot *, char *);
62:	static ssize_t cur_speed_read_file(struct pci_slot *, char *);
106:	static char *make_slot_name(const char *);
57:	static ssize_t max_speed_read_file(struct pci_slot *, char *);
18:	static ssize_t pci_slot_attr_show(struct kobject *, struct attribute *, char *);
26:	static ssize_t pci_slot_attr_store(struct kobject *, struct attribute *, const char *, size_t);
365:	static int pci_slot_init(void);
67:	static void pci_slot_release(struct kobject *);

File drivers/pci/vc.c:
415:	void pci_allocate_vc_save_buffers(struct pci_dev *);
390:	void pci_restore_vc_state(struct pci_dev *);
353:	int pci_save_vc_state(struct pci_dev *);
185:	static int pci_vc_do_save_buffer(struct pci_dev *, int, struct pci_cap_saved_state *, bool);
26:	static void pci_vc_save_restore_dwords(struct pci_dev *, int, u32 *, int, bool);

File drivers/pci/vpd.c:
40:	ssize_t pci_read_vpd(struct pci_dev *, loff_t, size_t, void *);
68:	int pci_set_vpd_size(struct pci_dev *, size_t);
502:	int pci_vpd_find_info_keyword(const u8 *, unsigned int, unsigned int, const char *);
467:	int pci_vpd_find_tag(const u8 *, unsigned int, unsigned int, u8);
369:	int pci_vpd_init(struct pci_dev *);
395:	void pci_vpd_release(struct pci_dev *);
55:	ssize_t pci_write_vpd(struct pci_dev *, loff_t, size_t, const void *);
432:	void pcie_vpd_create_sysfs_dev_files(struct pci_dev *);
459:	void pcie_vpd_remove_sysfs_dev_files(struct pci_dev *);
319:	static ssize_t pci_vpd_f0_read(struct pci_dev *, loff_t, size_t, void *);
349:	static int pci_vpd_f0_set_size(struct pci_dev *, size_t);
334:	static ssize_t pci_vpd_f0_write(struct pci_dev *, loff_t, size_t, const void *);
175:	static ssize_t pci_vpd_read(struct pci_dev *, loff_t, size_t, void *);
300:	static int pci_vpd_set_size(struct pci_dev *, size_t);
83:	static size_t pci_vpd_size(struct pci_dev *, size_t);
138:	static int pci_vpd_wait(struct pci_dev *);
242:	static ssize_t pci_vpd_write(struct pci_dev *, loff_t, size_t, const void *);
553:	static void quirk_blacklist_vpd(struct pci_dev *);
586:	static void quirk_brcm_570x_limit_vpd(struct pci_dev *);
621:	static void quirk_chelsio_extend_vpd(struct pci_dev *);
526:	static void quirk_f0_vpd_link(struct pci_dev *);
400:	static ssize_t read_vpd_attr(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
416:	static ssize_t write_vpd_attr(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);

File drivers/pcmcia/cardbus.c:
67:	int cb_alloc(struct pcmcia_socket *);
106:	void cb_free(struct pcmcia_socket *);
30:	static void cardbus_config_irq_and_cls(struct pci_bus *, int);

File drivers/pcmcia/cs.c:
744:	int pccard_register_pcmcia(struct pcmcia_socket *, struct pcmcia_callback *);
76:	struct pcmcia_socket *pcmcia_get_socket(struct pcmcia_socket *);
235:	struct pcmcia_socket *pcmcia_get_socket_by_nr(unsigned int);
703:	void pcmcia_parse_events(struct pcmcia_socket *, u_int);
728:	void pcmcia_parse_uevents(struct pcmcia_socket *, u_int);
86:	void pcmcia_put_socket(struct pcmcia_socket *);
106:	int pcmcia_register_socket(struct pcmcia_socket *);
777:	int pcmcia_reset_card(struct pcmcia_socket *);
209:	void pcmcia_unregister_socket(struct pcmcia_socket *);
840:	static int __pcmcia_pm_op(struct device *, int (*)(struct pcmcia_socket *));
915:	static void exit_pcmcia_cs(void);
909:	static int init_pcmcia_cs(void);
595:	static int pccardd(void *);
93:	static void pcmcia_release_socket(struct device *);
832:	static void pcmcia_release_socket_class(struct class *);
868:	static void pcmcia_socket_dev_complete(struct device *);
863:	static int pcmcia_socket_dev_resume(struct device *);
858:	static int pcmcia_socket_dev_resume_noirq(struct device *);
853:	static int pcmcia_socket_dev_suspend_noirq(struct device *);
818:	static int pcmcia_socket_uevent(struct device *, struct kobj_uevent_env *);
525:	static int socket_complete_resume(struct pcmcia_socket *);
473:	static int socket_early_resume(struct pcmcia_socket *);
413:	static int socket_insert(struct pcmcia_socket *);
486:	static int socket_late_resume(struct pcmcia_socket *);
560:	static void socket_remove(struct pcmcia_socket *);
252:	static int socket_reset(struct pcmcia_socket *);
335:	static int socket_setup(struct pcmcia_socket *, int);
288:	static void socket_shutdown(struct pcmcia_socket *);
453:	static int socket_suspend(struct pcmcia_socket *);

File drivers/pcmcia/rsrc_mgr.c:
33:	struct resource *pcmcia_make_resource(resource_size_t, resource_size_t, unsigned long, const char *);
23:	int static_init(struct pcmcia_socket *);
48:	static int static_find_io(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **);

File drivers/pcmcia/socket_sysfs.c:
223:	int pccard_sysfs_add_socket(struct device *);
228:	void pccard_sysfs_remove_socket(struct device *);
99:	static ssize_t pccard_show_card_pm_state(struct device *, struct device_attribute *, char *);
146:	static ssize_t pccard_show_irq_mask(struct device *, struct device_attribute *, char *);
179:	static ssize_t pccard_show_resource(struct device *, struct device_attribute *, char *);
36:	static ssize_t pccard_show_type(struct device *, struct device_attribute *, char *);
73:	static ssize_t pccard_show_vcc(struct device *, struct device_attribute *, char *);
49:	static ssize_t pccard_show_voltage(struct device *, struct device_attribute *, char *);
63:	static ssize_t pccard_show_vpp(struct device *, struct device_attribute *, char *);
107:	static ssize_t pccard_store_card_pm_state(struct device *, struct device_attribute *, const char *, size_t);
130:	static ssize_t pccard_store_eject(struct device *, struct device_attribute *, const char *, size_t);
84:	static ssize_t pccard_store_insert(struct device *, struct device_attribute *, const char *, size_t);
154:	static ssize_t pccard_store_irq_mask(struct device *, struct device_attribute *, const char *, size_t);
186:	static ssize_t pccard_store_resource(struct device *, struct device_attribute *, const char *, size_t);

File drivers/pinctrl/core.c:
1320:	struct pinctrl *devm_pinctrl_get(struct device *);
1355:	void devm_pinctrl_put(struct pinctrl *);
2188:	struct pinctrl_dev *devm_pinctrl_register(struct device *, struct pinctrl_desc *, void *);
2222:	int devm_pinctrl_register_and_init(struct device *, struct pinctrl_desc *, void *, struct pinctrl_dev **);
2252:	void devm_pinctrl_unregister(struct device *, struct pinctrl_dev *);
100:	struct pinctrl_dev *get_pinctrl_dev_from_devname(const char *);
122:	struct pinctrl_dev *get_pinctrl_dev_from_of_node(struct device_node *);
144:	int pin_get_from_name(struct pinctrl_dev *, const char *);
167:	const char *pin_get_name(struct pinctrl_dev *, const unsigned int);
189:	bool pin_is_valid(struct pinctrl_dev *, int);
425:	void pinctrl_add_gpio_range(struct pinctrl_dev *, struct pinctrl_gpio_range *);
434:	void pinctrl_add_gpio_ranges(struct pinctrl_dev *, struct pinctrl_gpio_range *, unsigned int);
81:	const char *pinctrl_dev_get_devname(struct pinctrl_dev *);
87:	void *pinctrl_dev_get_drvdata(struct pinctrl_dev *);
74:	const char *pinctrl_dev_get_name(struct pinctrl_dev *);
2034:	int pinctrl_enable(struct pinctrl_dev *);
445:	struct pinctrl_dev *pinctrl_find_and_add_gpio_range(const char *, struct pinctrl_gpio_range *);
513:	struct pinctrl_gpio_range *pinctrl_find_gpio_range_from_pin(struct pinctrl_dev *, unsigned int);
484:	struct pinctrl_gpio_range *pinctrl_find_gpio_range_from_pin_nolock(struct pinctrl_dev *, unsigned int);
1481:	int pinctrl_force_default(struct pinctrl_dev *);
1469:	int pinctrl_force_sleep(struct pinctrl_dev *);
1108:	struct pinctrl *pinctrl_get(struct device *);
466:	int pinctrl_get_group_pins(struct pinctrl_dev *, const char *, const unsigned int **, unsigned int *);
736:	int pinctrl_get_group_selector(struct pinctrl_dev *, const char *);
859:	int pinctrl_gpio_direction_input(unsigned int);
873:	int pinctrl_gpio_direction_output(unsigned int);
806:	void pinctrl_gpio_free(unsigned int);
771:	int pinctrl_gpio_request(unsigned int);
888:	int pinctrl_gpio_set_config(unsigned int, unsigned long);
1497:	int pinctrl_init_done(struct device *);
1199:	struct pinctrl_state *pinctrl_lookup_state(struct pinctrl *, const char *);
1547:	int pinctrl_pm_select_default_state(struct device *);
1573:	int pinctrl_pm_select_idle_state(struct device *);
1560:	int pinctrl_pm_select_sleep_state(struct device *);
69:	void pinctrl_provide_dummies(void);
1188:	void pinctrl_put(struct pinctrl *);
2069:	struct pinctrl_dev *pinctrl_register(struct pinctrl_desc *, struct device *, void *);
2098:	int pinctrl_register_and_init(struct pinctrl_desc *, struct device *, void *, struct pinctrl_dev **);
1362:	int pinctrl_register_map(const struct pinctrl_map *, unsigned int, bool);
1442:	int pinctrl_register_mappings(const struct pinctrl_map *, unsigned int);
531:	void pinctrl_remove_gpio_range(struct pinctrl_dev *, struct pinctrl_gpio_range *);
1299:	int pinctrl_select_state(struct pinctrl *, struct pinctrl_state *);
2126:	void pinctrl_unregister(struct pinctrl_dev *);
1449:	void pinctrl_unregister_map(const struct pinctrl_map *);
1019:	static struct pinctrl *create_pinctrl(struct device *, struct pinctrl_dev *);
920:	static struct pinctrl_state *create_state(struct pinctrl *, const char *);
2167:	static int devm_pinctrl_dev_match(struct device *, void *, void *);
2160:	static void devm_pinctrl_dev_release(struct device *, void *);
1340:	static int devm_pinctrl_match(struct device *, void *, void *);
1308:	static void devm_pinctrl_release(struct device *, void *);
1224:	static int pinctrl_commit_state(struct pinctrl *, struct pinctrl_state *);
1725:	static int pinctrl_devices_open(struct inode *, struct file *);
1700:	static int pinctrl_devices_show(struct seq_file *, void *);
1149:	static void pinctrl_free(struct pinctrl *, bool);
205:	static void pinctrl_free_pindescs(struct pinctrl_dev *, const struct pinctrl_pin_desc *, unsigned int);
391:	static int pinctrl_get_device_gpio_range(unsigned int, struct pinctrl_dev **, struct pinctrl_gpio_range **);
828:	static int pinctrl_gpio_direction(unsigned int, bool);
1698:	static int pinctrl_gpioranges_open(struct inode *, struct file *);
1666:	static int pinctrl_gpioranges_show(struct seq_file *, void *);
1664:	static int pinctrl_groups_open(struct inode *, struct file *);
1620:	static int pinctrl_groups_show(struct seq_file *, void *);
2259:	static int pinctrl_init(void);
1925:	static struct pinctrl_dev *pinctrl_init_controller(struct pinctrl_desc *, struct device *, void *);
1779:	static int pinctrl_maps_open(struct inode *, struct file *);
1743:	static int pinctrl_maps_show(struct seq_file *, void *);
1825:	static int pinctrl_open(struct inode *, struct file *);
1618:	static int pinctrl_pins_open(struct inode *, struct file *);
1585:	static int pinctrl_pins_show(struct seq_file *, void *);
1528:	static int pinctrl_pm_select_state(struct device *, struct pinctrl_state *);
1177:	static void pinctrl_release(struct kref *);
1781:	static int pinctrl_show(struct seq_file *, void *);

File drivers/pinctrl/intel/pinctrl-baytrail.c:
800:	static int byt_get_function_groups(struct pinctrl_dev *, unsigned int, const char * const **, unsigned int *);
792:	static const char *byt_get_function_name(struct pinctrl_dev *, unsigned int);
785:	static int byt_get_functions_count(struct pinctrl_dev *);
930:	static u32 byt_get_gpio_mux(unsigned int, struct byt_gpio *);
758:	static const char *byt_get_group_name(struct pinctrl_dev *, unsigned int);
766:	static int byt_get_group_pins(struct pinctrl_dev *, unsigned int, const unsigned int **, unsigned int *);
751:	static int byt_get_groups_count(struct pinctrl_dev *);
945:	static void byt_gpio_clear_triggering(struct byt_gpio *, unsigned int);
1387:	static void byt_gpio_dbg_show(struct seq_file *, struct gpio_chip *);
1369:	static int byt_gpio_direction_input(struct gpio_chip *, unsigned int);
1374:	static int byt_gpio_direction_output(struct gpio_chip *, unsigned int, int);
996:	static void byt_gpio_disable_free(struct pinctrl_dev *, struct pinctrl_gpio_range *, unsigned int);
1314:	static int byt_gpio_get(struct gpio_chip *, unsigned int);
1347:	static int byt_gpio_get_direction(struct gpio_chip *, unsigned int);
1956:	static int byt_gpio_init(void);
1605:	static void byt_gpio_irq_handler(struct irq_desc *);
726:	static void *byt_gpio_reg(struct byt_gpio *, unsigned int, int);
958:	static int byt_gpio_request_enable(struct pinctrl_dev *, struct pinctrl_gpio_range *, unsigned int);
1876:	static int byt_gpio_resume(struct device *);
1928:	static int byt_gpio_runtime_suspend(struct device *);
1328:	static void byt_gpio_set(struct gpio_chip *, unsigned int, int);
1006:	static int byt_gpio_set_direction(struct pinctrl_dev *, struct pinctrl_gpio_range *, unsigned int, bool);
1843:	static int byt_gpio_suspend(struct device *);
1495:	static void byt_irq_ack(struct irq_data *);
1511:	static void byt_irq_mask(struct irq_data *);
1558:	static int byt_irq_type(struct irq_data *, unsigned int);
1519:	static void byt_irq_unmask(struct irq_data *);
1091:	static int byt_pin_config_get(struct pinctrl_dev *, unsigned int, unsigned long *);
1174:	static int byt_pin_config_set(struct pinctrl_dev *, unsigned int, unsigned long *, unsigned int);
1781:	static int byt_pinctrl_probe(struct platform_device *);
845:	static void byt_set_group_simple_mux(struct byt_gpio *, const struct byt_pingroup, unsigned short);
905:	static int byt_set_mux(struct pinctrl_dev *, unsigned int, unsigned int);

File drivers/pinctrl/pinconf-generic.c:
130:	void pinconf_generic_dump_config(struct pinctrl_dev *, struct seq_file *, unsigned long);
109:	void pinconf_generic_dump_pins(struct pinctrl_dev *, struct seq_file *, const char *, unsigned int);
55:	static void pinconf_generic_dump_one(struct pinctrl_dev *, struct seq_file *, const char *, unsigned int, const struct pin_config_item *, int, int *);

File drivers/pinctrl/pinconf.c:
58:	int pin_config_get_for_pin(struct pinctrl_dev *, unsigned int, unsigned long *);
72:	int pin_config_group_get(const char *, const char *, unsigned long *);
150:	int pinconf_apply_setting(const struct pinctrl_setting *);
27:	int pinconf_check_ops(struct pinctrl_dev *);
146:	void pinconf_free_setting(const struct pinctrl_setting *);
612:	void pinconf_init_device_debugfs(struct dentry *, struct pinctrl_dev *);
109:	int pinconf_map_to_setting(const struct pinctrl_map *, struct pinctrl_setting *);
202:	int pinconf_set_config(struct pinctrl_dev *, unsigned int, unsigned long *, size_t);
238:	void pinconf_show_map(struct seq_file *, const struct pinctrl_map *);
261:	void pinconf_show_setting(struct seq_file *, const struct pinctrl_setting *);
40:	int pinconf_validate_map(const struct pinctrl_map *, int);
598:	static int pinconf_dbg_config_open(struct inode *, struct file *);
414:	static int pinconf_dbg_config_print(struct seq_file *, void *);
475:	static ssize_t pinconf_dbg_config_write(struct file *, const char *, size_t, loff_t *);
374:	static int pinconf_groups_open(struct inode *, struct file *);
347:	static int pinconf_groups_show(struct seq_file *, void *);
369:	static int pinconf_pins_open(struct inode *, struct file *);
304:	static int pinconf_pins_show(struct seq_file *, void *);
216:	static void pinconf_show_config(struct seq_file *, struct pinctrl_dev *, unsigned long *, unsigned int);

File drivers/pinctrl/pinctrl-utils.c:
99:	int pinctrl_utils_add_config(struct pinctrl_dev *, unsigned long **, unsigned int *, unsigned long);
73:	int pinctrl_utils_add_map_configs(struct pinctrl_dev *, struct pinctrl_map **, unsigned int *, unsigned int *, const char *, unsigned long *, unsigned int, enum pinctrl_map_type);
56:	int pinctrl_utils_add_map_mux(struct pinctrl_dev *, struct pinctrl_map **, unsigned int *, unsigned int *, const char *, const char *);
123:	void pinctrl_utils_free_map(struct pinctrl_dev *, struct pinctrl_map *, unsigned int);
31:	int pinctrl_utils_reserve_map(struct pinctrl_dev *, struct pinctrl_map **, unsigned int *, unsigned int *, unsigned int);

File drivers/pinctrl/pinmux.c:
32:	int pinmux_check_ops(struct pinctrl_dev *);
459:	void pinmux_disable_setting(const struct pinctrl_setting *);
378:	int pinmux_enable_setting(const struct pinctrl_setting *);
260:	void pinmux_free_gpio(struct pinctrl_dev *, unsigned int, struct pinctrl_gpio_range *);
373:	void pinmux_free_setting(const struct pinctrl_setting *);
276:	int pinmux_gpio_direction(struct pinctrl_dev *, struct pinctrl_gpio_range *, unsigned int, bool);
671:	void pinmux_init_device_debugfs(struct dentry *, struct pinctrl_dev *);
313:	int pinmux_map_to_setting(const struct pinctrl_map *, struct pinctrl_setting *);
235:	int pinmux_request_gpio(struct pinctrl_dev *, struct pinctrl_gpio_range *, unsigned int, unsigned int);
626:	void pinmux_show_map(struct seq_file *, const struct pinctrl_map *);
633:	void pinmux_show_setting(struct seq_file *, const struct pinctrl_setting *);
63:	int pinmux_validate_map(const struct pinctrl_map *, int);
181:	static const char *pin_free(struct pinctrl_dev *, int, struct pinctrl_gpio_range *);
82:	static int pin_request(struct pinctrl_dev *, int, const char *, struct pinctrl_gpio_range *);
647:	static int pinmux_functions_open(struct inode *, struct file *);
512:	static int pinmux_functions_show(struct seq_file *, void *);
652:	static int pinmux_pins_open(struct inode *, struct file *);
554:	static int pinmux_pins_show(struct seq_file *, void *);

File drivers/platform/x86/intel_turbo_max_3.c:
98:	static int itmt_legacy_cpu_online(unsigned int);
132:	static int itmt_legacy_init(void);
91:	static void itmt_legacy_work_fn(struct work_struct *);

File drivers/platform/x86/pmc_atom.c:
222:	int pmc_atom_read(int, u32 *);
234:	int pmc_atom_write(int, u32);
551:	static int pmc_atom_init(void);
313:	static int pmc_dev_state_open(struct inode *, struct file *);
277:	static void pmc_dev_state_print(struct seq_file *, int, u32, const struct pmc_bit_map *, u32, const struct pmc_bit_map *);
292:	static int pmc_dev_state_show(struct seq_file *, void *);
246:	static void pmc_power_off(void);
330:	static int pmc_pss_state_open(struct inode *, struct file *);
315:	static int pmc_pss_state_show(struct seq_file *, void *);
351:	static int pmc_sleep_tmr_open(struct inode *, struct file *);
332:	static int pmc_sleep_tmr_show(struct seq_file *, void *);

File drivers/platform/x86/pvpanic.c:
93:	static int pvpanic_add(struct acpi_device *);
124:	static void pvpanic_driver_exit(void);
124:	static int pvpanic_driver_init(void);
64:	static int pvpanic_panic_notify(struct notifier_block *, unsigned long, void *);
116:	static int pvpanic_remove(struct acpi_device *);
78:	static acpi_status pvpanic_walk_resources(struct acpi_resource *, void *);

File drivers/pnp/card.c:
234:	int pnp_add_card(struct pnp_card *);
296:	int pnp_add_card_device(struct pnp_card *, struct pnp_dev *);
157:	struct pnp_card *pnp_alloc_card(struct pnp_protocol *, int, char *);
414:	int pnp_register_card_driver(struct pnp_card_driver *);
377:	void pnp_release_card_device(struct pnp_dev *);
276:	void pnp_remove_card(struct pnp_card *);
313:	void pnp_remove_card_device(struct pnp_dev *);
328:	struct pnp_dev *pnp_request_card_device(struct pnp_card_link *, const char *, struct pnp_dev *);
447:	void pnp_unregister_card_driver(struct pnp_card_driver *);
71:	static int card_probe(struct pnp_card *, struct pnp_card_driver *);
53:	static void card_remove(struct pnp_dev *);
58:	static void card_remove_first(struct pnp_dev *);
399:	static int card_resume(struct pnp_dev *);
389:	static int card_suspend(struct pnp_dev *, pm_message_t);
149:	static void pnp_release_card(struct device *);
196:	static ssize_t pnp_show_card_ids(struct device *, struct device_attribute *, char *);
184:	static ssize_t pnp_show_card_name(struct device *, struct device_attribute *, char *);

File drivers/pnp/core.c:
182:	int __pnp_add_device(struct pnp_dev *);
236:	void __pnp_remove_device(struct pnp_dev *);
212:	int pnp_add_device(struct pnp_dev *);
34:	void *pnp_alloc(long);
141:	struct pnp_dev *pnp_alloc_dev(struct pnp_protocol *, int, const char *);
116:	void pnp_free_resource(struct pnp_resource *);
122:	void pnp_free_resources(struct pnp_dev *);
59:	int pnp_register_protocol(struct pnp_protocol *);
97:	void pnp_unregister_protocol(struct pnp_protocol *);
174:	static void pnp_delist_device(struct pnp_dev *);
242:	static int pnp_init(void);
131:	static void pnp_release_device(struct device *);
46:	static void pnp_remove_protocol(struct pnp_protocol *);

File drivers/pnp/driver.c:
29:	int compare_pnp_id(struct pnp_id *, const char *);
285:	struct pnp_id *pnp_add_id(struct pnp_dev *, const char *);
60:	int pnp_device_attach(struct pnp_dev *);
72:	void pnp_device_detach(struct pnp_dev *);
267:	int pnp_register_driver(struct pnp_driver *);
275:	void pnp_unregister_driver(struct pnp_driver *);
162:	static int __pnp_bus_suspend(struct device *, pm_message_t);
44:	static const struct pnp_device_id *match_device(struct pnp_dev *, struct pnp_driver *);
200:	static int pnp_bus_freeze(struct device *);
152:	static int pnp_bus_match(struct device *, struct device_driver *);
205:	static int pnp_bus_poweroff(struct device *);
210:	static int pnp_bus_resume(struct device *);
195:	static int pnp_bus_suspend(struct device *);
80:	static int pnp_device_probe(struct device *);
124:	static int pnp_device_remove(struct device *);
143:	static void pnp_device_shutdown(struct device *);

File drivers/pnp/interface.c:
440:	static ssize_t id_show(struct device *, struct device_attribute *, char *);
207:	static ssize_t options_show(struct device *, struct device_attribute *, char *);
302:	static char *pnp_get_resource_value(char *, resource_size_t *, resource_size_t *, unsigned long *, unsigned long);
36:	static int pnp_printf(pnp_info_buffer_t *, char *, ...);
247:	static ssize_t resources_show(struct device *, struct device_attribute *, char *);
335:	static ssize_t resources_store(struct device *, struct device_attribute *, const char *, size_t);

File drivers/pnp/manager.c:
381:	int pnp_activate_dev(struct pnp_dev *);
308:	int pnp_auto_config_dev(struct pnp_dev *);
406:	int pnp_disable_dev(struct pnp_dev *);
236:	void pnp_init_resources(struct pnp_dev *);
337:	int pnp_start_dev(struct pnp_dev *);
360:	int pnp_stop_dev(struct pnp_dev *);
256:	static int pnp_assign_resources(struct pnp_dev *, int);
241:	static void pnp_clean_resource_table(struct pnp_dev *);

File drivers/pnp/pnpacpi/core.c:
42:	static int ispnpidacpi(const char *);
299:	static acpi_status pnpacpi_add_device_handler(acpi_handle, u32, void *, void **);
129:	static bool pnpacpi_can_wakeup(struct pnp_dev *);
103:	static int pnpacpi_disable_resources(struct pnp_dev *);
56:	static int pnpacpi_get_resources(struct pnp_dev *);
313:	static int pnpacpi_init(void);
177:	static int pnpacpi_resume(struct pnp_dev *);
62:	static int pnpacpi_set_resources(struct pnp_dev *);
329:	static int pnpacpi_setup(char *);
141:	static int pnpacpi_suspend(struct pnp_dev *, pm_message_t);

File drivers/pnp/pnpacpi/rsparser.c:
630:	int pnpacpi_build_resource_template(struct pnp_dev *, struct acpi_buffer *);
885:	int pnpacpi_encode_resources(struct pnp_dev *, struct acpi_buffer *);
279:	int pnpacpi_parse_allocated_resource(struct pnp_dev *);
558:	int pnpacpi_parse_resource_option_data(struct pnp_dev *);
27:	static void decode_irq_flags(struct pnp_dev *, int, u8 *, u8 *, u8 *);
62:	static int dma_flags(struct pnp_dev *, int, int, int);
173:	static acpi_status pnpacpi_allocated_resource(struct acpi_resource *, void *);
604:	static acpi_status pnpacpi_count_resources(struct acpi_resource *, void *);
462:	static acpi_status pnpacpi_option_resource(struct acpi_resource *, void *);
614:	static acpi_status pnpacpi_type_resources(struct acpi_resource *, void *);

File drivers/pnp/quirks.c:
454:	void pnp_fixup_device(struct pnp_dev *);
208:	static void quirk_ad1815_mpu_resources(struct pnp_dev *);
180:	static void quirk_add_irq_optional_dependent_sets(struct pnp_dev *);
306:	static void quirk_amd_mmconfig_area(struct pnp_dev *);
26:	static void quirk_awe32_add_ports(struct pnp_dev *, struct pnp_option *, unsigned int);
50:	static void quirk_awe32_resources(struct pnp_dev *);
69:	static void quirk_cmi8330_resources(struct pnp_dev *);
364:	static void quirk_intel_mch(struct pnp_dev *);
103:	static void quirk_sb16audio_resources(struct pnp_dev *);
231:	static void quirk_system_pci_resources(struct pnp_dev *);

File drivers/pnp/resource.c:
616:	struct pnp_resource *pnp_add_bus_resource(struct pnp_dev *, resource_size_t, resource_size_t);
547:	struct pnp_resource *pnp_add_dma_resource(struct pnp_dev *, int, int);
568:	struct pnp_resource *pnp_add_io_resource(struct pnp_dev *, resource_size_t, resource_size_t, int);
526:	struct pnp_resource *pnp_add_irq_resource(struct pnp_dev *, int, int);
592:	struct pnp_resource *pnp_add_mem_resource(struct pnp_dev *, resource_size_t, resource_size_t, int);
509:	struct pnp_resource *pnp_add_resource(struct pnp_dev *, struct resource *);
416:	int pnp_check_dma(struct pnp_dev *, struct resource *);
352:	int pnp_check_irq(struct pnp_dev *, struct resource *);
229:	int pnp_check_mem(struct pnp_dev *, struct resource *);
166:	int pnp_check_port(struct pnp_dev *, struct resource *);
143:	void pnp_free_options(struct pnp_dev *);
482:	struct resource *pnp_get_resource(struct pnp_dev *, unsigned long, unsigned int);
644:	int pnp_possible_config(struct pnp_dev *, int, resource_size_t, resource_size_t);
686:	int pnp_range_reserved(resource_size_t, resource_size_t);
79:	int pnp_register_dma_resource(struct pnp_dev *, unsigned int, unsigned char, unsigned char);
51:	int pnp_register_irq_resource(struct pnp_dev *, unsigned int, pnp_irq_mask_t *, unsigned char);
120:	int pnp_register_mem_resource(struct pnp_dev *, unsigned int, resource_size_t, resource_size_t, resource_size_t, resource_size_t, unsigned char);
97:	int pnp_register_port_resource(struct pnp_dev *, unsigned int, resource_size_t, resource_size_t, resource_size_t, resource_size_t, unsigned char);
475:	unsigned long pnp_resource_type(struct resource *);
35:	static struct pnp_option *pnp_build_option(struct pnp_dev *, unsigned long, unsigned int);
497:	static struct pnp_resource *pnp_new_resource(struct pnp_dev *);
718:	static int pnp_setup_reserve_dma(char *);
731:	static int pnp_setup_reserve_io(char *);
705:	static int pnp_setup_reserve_irq(char *);
744:	static int pnp_setup_reserve_mem(char *);
292:	static irqreturn_t pnp_test_handler(int, void *);

File drivers/pnp/support.c:
105:	void dbg_pnp_show_option(struct pnp_dev *, struct pnp_option *);
79:	void dbg_pnp_show_resources(struct pnp_dev *, char *);
40:	void pnp_eisa_id_to_string(u32, char *);
20:	int pnp_is_active(struct pnp_dev *);
92:	char *pnp_option_priority_name(struct pnp_option *);
62:	char *pnp_resource_type_name(struct resource *);

File drivers/pnp/system.c:
104:	static int pnp_system_init(void);
26:	static void reserve_range(struct pnp_dev *, struct resource *, int);
90:	static int system_pnp_probe(struct pnp_dev *, const struct pnp_device_id *);

File drivers/power/supply/power_supply_core.c:
1024:	struct power_supply *devm_power_supply_register(struct device *, const struct power_supply_desc *, const struct power_supply_config *);
1060:	struct power_supply *devm_power_supply_register_no_ws(struct device *, const struct power_supply_desc *, const struct power_supply_config *);
330:	int power_supply_am_i_supplied(struct power_supply *);
115:	void power_supply_changed(struct power_supply *);
660:	void power_supply_external_power_changed(struct power_supply *);
568:	int power_supply_get_battery_info(struct power_supply *, struct power_supply_battery_info *);
454:	struct power_supply *power_supply_get_by_name(const char *);
1103:	void *power_supply_get_drvdata(struct power_supply *);
624:	int power_supply_get_property(struct power_supply *, enum power_supply_property, union power_supply_propval *);
362:	int power_supply_is_system_supplied(void);
670:	int power_supply_powers(struct power_supply *, struct device *);
649:	int power_supply_property_is_writeable(struct power_supply *, enum power_supply_property);
476:	void power_supply_put(struct power_supply *);
683:	int power_supply_reg_notifier(struct notifier_block *);
971:	struct power_supply *power_supply_register(struct device *, const struct power_supply_desc *, const struct power_supply_config *);
994:	struct power_supply *power_supply_register_no_ws(struct device *, const struct power_supply_desc *, const struct power_supply_config *);
422:	int power_supply_set_battery_charged(struct power_supply *);
397:	int power_supply_set_input_current_limit_from_supplier(struct power_supply *);
638:	int power_supply_set_property(struct power_supply *, enum power_supply_property, const union power_supply_propval *);
689:	void power_supply_unreg_notifier(struct notifier_block *);
1088:	void power_supply_unregister(struct power_supply *);
314:	static int __power_supply_am_i_supplied(struct device *, void *);
64:	static int __power_supply_changed_work(struct device *, void *);
381:	static int __power_supply_get_supplier_max_current(struct device *, void *);
38:	static bool __power_supply_is_supplied_by(struct power_supply *, struct power_supply *);
347:	static int __power_supply_is_system_supplied(struct device *, void *);
846:	static struct power_supply *__power_supply_register(struct device *, const struct power_supply_desc *, const struct power_supply_config *, bool);
1002:	static void devm_power_supply_release(struct device *, void *);
77:	static void power_supply_changed_work(struct work_struct *);
1122:	static void power_supply_class_exit(void);
1109:	static int power_supply_class_init(void);
139:	static void power_supply_deferred_register_work(struct work_struct *);
676:	static void power_supply_dev_release(struct device *);
435:	static int power_supply_match_device_by_name(struct device *, const void *);
696:	static int power_supply_read_temp(struct thermal_zone_device *, int *);
763:	static int ps_get_cur_chrage_cntl_limit(struct thermal_cooling_device *, unsigned long *);
745:	static int ps_get_max_charge_cntl_limit(struct thermal_cooling_device *, unsigned long *);
781:	static int ps_set_cur_charge_cntl_limit(struct thermal_cooling_device *, unsigned long);

File drivers/power/supply/power_supply_leds.c:
157:	int power_supply_create_triggers(struct power_supply *);
164:	void power_supply_remove_triggers(struct power_supply *);
149:	void power_supply_update_leds(struct power_supply *);

File drivers/power/supply/power_supply_sysfs.c:
352:	void power_supply_init_attrs(struct device_type *);
379:	int power_supply_uevent(struct device *, struct kobj_uevent_env *);
315:	static umode_t power_supply_attr_is_visible(struct kobject *, struct attribute *, int);
116:	static ssize_t power_supply_show_property(struct device *, struct device_attribute *, char *);
185:	static ssize_t power_supply_store_property(struct device *, struct device_attribute *, const char *, size_t);

File drivers/powercap/powercap_sys.c:
612:	struct powercap_control_type *powercap_register_control_type(struct powercap_control_type *, const char *, const struct powercap_control_type_ops *);
494:	struct powercap_zone *powercap_register_zone(struct powercap_zone *, struct powercap_control_type *, const char *, struct powercap_zone *, const struct powercap_zone_ops *, int, const struct powercap_zone_constraint_ops *);
652:	int powercap_unregister_control_type(struct powercap_control_type *);
596:	int powercap_unregister_zone(struct powercap_control_type *, struct powercap_zone *);
433:	static ssize_t enabled_show(struct device *, struct device_attribute *, char *);
456:	static ssize_t enabled_store(struct device *, struct device_attribute *, const char *, size_t);
126:	static ssize_t energy_uj_show(struct device *, struct device_attribute *, char *);
127:	static ssize_t energy_uj_store(struct device *, struct device_attribute *, const char *, size_t);
128:	static ssize_t max_energy_range_uj_show(struct device *, struct device_attribute *, char *);
125:	static ssize_t max_power_range_uw_show(struct device *, struct device_attribute *, char *);
359:	static ssize_t name_show(struct device *, struct device_attribute *, char *);
124:	static ssize_t power_uw_show(struct device *, struct device_attribute *, char *);
675:	static int powercap_init(void);
398:	static void powercap_release(struct device *);
141:	static ssize_t show_constraint_max_power_uw(struct device *, struct device_attribute *, char *);
143:	static ssize_t show_constraint_max_time_window_us(struct device *, struct device_attribute *, char *);
142:	static ssize_t show_constraint_min_power_uw(struct device *, struct device_attribute *, char *);
144:	static ssize_t show_constraint_min_time_window_us(struct device *, struct device_attribute *, char *);
166:	static ssize_t show_constraint_name(struct device *, struct device_attribute *, char *);
137:	static ssize_t show_constraint_power_limit_uw(struct device *, struct device_attribute *, char *);
139:	static ssize_t show_constraint_time_window_us(struct device *, struct device_attribute *, char *);
138:	static ssize_t store_constraint_power_limit_uw(struct device *, struct device_attribute *, const char *, size_t);
140:	static ssize_t store_constraint_time_window_us(struct device *, struct device_attribute *, const char *, size_t);

File drivers/pps/kapi.c:
172:	void pps_event(struct pps_device *, struct pps_event_time *, int, void *);
78:	struct pps_device *pps_register_source(struct pps_source_info *, int);
149:	void pps_unregister_source(struct pps_device *);
55:	static void pps_echo_client_default(struct pps_device *, int, void *);

File drivers/pps/pps.c:
445:	struct pps_device *pps_lookup_dev(const void *);
361:	int pps_register_cdev(struct pps_device *);
420:	void pps_unregister_cdev(struct pps_device *);
263:	static long pps_cdev_compat_ioctl(struct file *, unsigned int, unsigned long);
61:	static int pps_cdev_fasync(int, struct file *, int);
104:	static long pps_cdev_ioctl(struct file *, unsigned int, unsigned long);
313:	static int pps_cdev_open(struct inode *, struct file *);
52:	static __poll_t pps_cdev_poll(struct file *, poll_table *);
67:	static int pps_cdev_pps_fetch(struct pps_device *, struct pps_fdata *);
322:	static int pps_cdev_release(struct inode *, struct file *);
345:	static void pps_device_destruct(struct device *);
463:	static void pps_exit(void);
469:	static int pps_init(void);

File drivers/pps/sysfs.c:
32:	static ssize_t assert_show(struct device *, struct device_attribute *, char *);
46:	static ssize_t clear_show(struct device *, struct device_attribute *, char *);
69:	static ssize_t echo_show(struct device *, struct device_attribute *, char *);
60:	static ssize_t mode_show(struct device *, struct device_attribute *, char *);
78:	static ssize_t name_show(struct device *, struct device_attribute *, char *);
87:	static ssize_t path_show(struct device *, struct device_attribute *, char *);

File drivers/ptp/ptp_chardev.c:
122:	long ptp_ioctl(struct posix_clock *, unsigned int, unsigned long);
117:	int ptp_open(struct posix_clock *, fmode_t);
291:	__poll_t ptp_poll(struct posix_clock *, struct file *, poll_table *);
302:	ssize_t ptp_read(struct posix_clock *, uint, char *, size_t);
61:	int ptp_set_pinfunc(struct ptp_clock *, unsigned int, enum ptp_pin_function, unsigned int);
31:	static int ptp_disable_pinfunc(struct ptp_clock_info *, enum ptp_pin_function, unsigned int);

File drivers/ptp/ptp_clock.c:
325:	void ptp_clock_event(struct ptp_clock *, struct ptp_clock_event *);
352:	int ptp_clock_index(struct ptp_clock *);
204:	struct ptp_clock *ptp_clock_register(struct ptp_clock_info *, struct device *);
305:	int ptp_clock_unregister(struct ptp_clock *);
358:	int ptp_find_pin(struct ptp_clock *, enum ptp_pin_function, unsigned int);
378:	int ptp_schedule_worker(struct ptp_clock *, unsigned long);
189:	static void ptp_aux_kworker(struct kthread_work *);
124:	static int ptp_clock_adjtime(struct posix_clock *, struct timex *);
101:	static int ptp_clock_getres(struct posix_clock *, struct timespec64 *);
115:	static int ptp_clock_gettime(struct posix_clock *, struct timespec64 *);
178:	static void ptp_clock_release(struct device *);
108:	static int ptp_clock_settime(struct posix_clock *, const struct timespec64 *);
386:	static void ptp_exit(void);
393:	static int ptp_init(void);

File drivers/ptp/ptp_sysfs.c:
311:	void ptp_cleanup_pin_groups(struct ptp_clock *);
271:	int ptp_populate_pin_groups(struct ptp_clock *);
25:	static ssize_t clock_name_show(struct device *, struct device_attribute *, char *);
49:	static ssize_t extts_enable_store(struct device *, struct device_attribute *, const char *, size_t);
75:	static ssize_t extts_fifo_show(struct device *, struct device_attribute *, char *);
42:	static ssize_t max_adj_show(struct device *, struct device_attribute *, char *);
43:	static ssize_t n_alarm_show(struct device *, struct device_attribute *, char *);
44:	static ssize_t n_ext_ts_show(struct device *, struct device_attribute *, char *);
45:	static ssize_t n_per_out_show(struct device *, struct device_attribute *, char *);
46:	static ssize_t n_pins_show(struct device *, struct device_attribute *, char *);
109:	static ssize_t period_store(struct device *, struct device_attribute *, const char *, size_t);
137:	static ssize_t pps_enable_store(struct device *, struct device_attribute *, const char *, size_t);
47:	static ssize_t pps_show(struct device *, struct device_attribute *, char *);
181:	static umode_t ptp_is_attribute_visible(struct kobject *, struct attribute *, int);
224:	static ssize_t ptp_pin_show(struct device *, struct device_attribute *, char *);
246:	static ssize_t ptp_pin_store(struct device *, struct device_attribute *, const char *, size_t);

File drivers/pwm/core.c:
934:	struct pwm_device *devm_of_pwm_get(struct device *, struct device_node *, const char *);
902:	struct pwm_device *devm_pwm_get(struct device *, const char *);
974:	void devm_pwm_put(struct device *, struct pwm_device *);
658:	struct pwm_device *of_pwm_get(struct device_node *, const char *);
136:	struct pwm_device *of_pwm_xlate_with_flags(struct pwm_chip *, const struct of_phandle_args *);
718:	void pwm_add_table(struct pwm_lookup *, size_t);
574:	int pwm_adjust_config(struct pwm_device *);
467:	int pwm_apply_state(struct pwm_device *, struct pwm_state *);
547:	int pwm_capture(struct pwm_device *, struct pwm_capture *, unsigned long);
454:	void pwm_free(struct pwm_device *);
762:	struct pwm_device *pwm_get(struct device *, const char *);
233:	void *pwm_get_chip_data(struct pwm_device *);
862:	void pwm_put(struct pwm_device *);
735:	void pwm_remove_table(struct pwm_lookup *, size_t);
389:	struct pwm_device *pwm_request(int, const char *);
426:	struct pwm_device *pwm_request_from_chip(struct pwm_chip *, unsigned int, const char *);
216:	int pwm_set_chip_data(struct pwm_device *, void *);
333:	int pwmchip_add(struct pwm_chip *);
263:	int pwmchip_add_with_polarity(struct pwm_chip *, enum pwm_polarity);
348:	int pwmchip_remove(struct pwm_chip *);
955:	static int devm_pwm_match(struct device *, void *, void *);
886:	static void devm_pwm_release(struct device *, void *);
1065:	static int pwm_debugfs_init(void);
111:	static int pwm_device_request(struct pwm_device *, const char *);
1016:	static void *pwm_seq_next(struct seq_file *, void *, loff_t *);
1052:	static int pwm_seq_open(struct inode *, struct file *);
1028:	static int pwm_seq_show(struct seq_file *, void *);
1008:	static void *pwm_seq_start(struct seq_file *, loff_t *);
1023:	static void pwm_seq_stop(struct seq_file *, void *);
88:	static struct pwm_chip *pwmchip_find_by_name(const char *);

File drivers/pwm/sysfs.c:
384:	void pwmchip_sysfs_export(struct pwm_chip *);
400:	void pwmchip_sysfs_unexport(struct pwm_chip *);
211:	static ssize_t capture_show(struct device *, struct device_attribute *, char *);
79:	static ssize_t duty_cycle_show(struct device *, struct device_attribute *, char *);
91:	static ssize_t duty_cycle_store(struct device *, struct device_attribute *, const char *, size_t);
114:	static ssize_t enable_show(struct device *, struct device_attribute *, char *);
126:	static ssize_t enable_store(struct device *, struct device_attribute *, const char *, size_t);
307:	static ssize_t export_store(struct device *, struct device_attribute *, const char *, size_t);
356:	static ssize_t npwm_show(struct device *, struct device_attribute *, char *);
44:	static ssize_t period_show(struct device *, struct device_attribute *, char *);
56:	static ssize_t period_store(struct device *, struct device_attribute *, const char *, size_t);
162:	static ssize_t polarity_show(struct device *, struct device_attribute *, char *);
185:	static ssize_t polarity_store(struct device *, struct device_attribute *, const char *, size_t);
242:	static void pwm_export_release(struct device *);
421:	static int pwm_sysfs_init(void);
288:	static int pwm_unexport_child(struct device *, struct pwm_device *);
283:	static int pwm_unexport_match(struct device *, void *);
379:	static int pwmchip_sysfs_match(struct device *, const void *);
335:	static ssize_t unexport_store(struct device *, struct device_attribute *, const char *, size_t);

File drivers/ras/debugfs.c:
37:	int ras_add_daemon_trace(void);
53:	void ras_debugfs_init(void);
7:	int ras_userspace_consumers(void);
18:	static int trace_open(struct inode *, struct file *);
24:	static int trace_release(struct inode *, struct file *);
13:	static int trace_show(struct seq_file *, void *);

File drivers/ras/ras.c:
24:	void log_arm_hw_error(struct cper_sec_proc_arm *, const u8);
17:	void log_non_standard_event(const uuid_le *, const uuid_le *, const char *, const u8, const u8 *, const u32);
89:	static int parse_ras_param(char *);
71:	static int ras_init(void);

File drivers/rtc/class.c:
498:	int __rtc_register_device(struct module *, struct rtc_device *);
460:	struct rtc_device *devm_rtc_allocate_device(struct device *);
406:	struct rtc_device *devm_rtc_device_register(struct device *, const char *, const struct rtc_class_ops *, struct module *);
438:	void devm_rtc_device_unregister(struct device *, struct rtc_device *);
289:	struct rtc_device *rtc_device_register(const char *, struct device *, const struct rtc_class_ops *, struct module *);
362:	void rtc_device_unregister(struct rtc_device *);
385:	static int devm_rtc_device_match(struct device *, void *, void *);
377:	static void devm_rtc_device_release(struct device *, void *);
448:	static void devm_rtc_release_device(struct device *, void *);
154:	static struct rtc_device *rtc_allocate_device(void);
213:	static void rtc_device_get_offset(struct rtc_device *);
30:	static void rtc_device_release(struct device *);
534:	static int rtc_init(void);
97:	static int rtc_resume(struct device *);
51:	static int rtc_suspend(struct device *);

File drivers/rtc/hctosys.c:
27:	static int rtc_hctosys(void);

File drivers/rtc/interface.c:
220:	int __rtc_read_alarm(struct rtc_device *, struct rtc_wkalrm *);
638:	void rtc_aie_update_irq(void *);
528:	int rtc_alarm_irq_enable(struct rtc_device *, unsigned int);
728:	void rtc_class_close(struct rtc_device *);
708:	struct rtc_device *rtc_class_open(const char *);
618:	void rtc_handle_legacy_irq(struct rtc_device *, int, int);
495:	int rtc_initialize_alarm(struct rtc_device *, struct rtc_wkalrm *);
791:	int rtc_irq_set_freq(struct rtc_device *, int);
768:	int rtc_irq_set_state(struct rtc_device *, int);
666:	enum hrtimer_restart rtc_pie_update_irq(struct hrtimer *);
398:	int rtc_read_alarm(struct rtc_device *, struct rtc_wkalrm *);
1044:	int rtc_read_offset(struct rtc_device *, long *);
112:	int rtc_read_time(struct rtc_device *, struct rtc_time *);
460:	int rtc_set_alarm(struct rtc_device *, struct rtc_wkalrm *);
1079:	int rtc_set_offset(struct rtc_device *, long);
128:	int rtc_set_time(struct rtc_device *, struct rtc_time *);
1025:	void rtc_timer_cancel(struct rtc_device *, struct rtc_timer *);
911:	void rtc_timer_do_work(struct work_struct *);
986:	void rtc_timer_init(struct rtc_timer *, void (*)(void *), void *);
1002:	int rtc_timer_start(struct rtc_device *, struct rtc_timer *, ktime_t, ktime_t);
651:	void rtc_uie_update_irq(void *);
688:	void rtc_update_irq(struct rtc_device *, unsigned long, unsigned long);
557:	int rtc_update_irq_enable(struct rtc_device *, unsigned int);
699:	static int __rtc_match(struct device *, const void *);
87:	static int __rtc_read_time(struct rtc_device *, struct rtc_time *);
421:	static int __rtc_set_alarm(struct rtc_device *, struct rtc_wkalrm *);
26:	static void rtc_add_offset(struct rtc_device *, struct rtc_time *);
856:	static void rtc_alarm_disable(struct rtc_device *, struct rtc_device *);
49:	static void rtc_subtract_offset(struct rtc_device *, struct rtc_time *);
818:	static int rtc_timer_enqueue(struct rtc_device *, struct rtc_timer *);
877:	static void rtc_timer_remove(struct rtc_device *, struct rtc_timer *);
735:	static int rtc_update_hrtimer(struct rtc_device *, int);
70:	static int rtc_valid_range(struct rtc_device *, struct rtc_time *);

File drivers/rtc/nvmem.c:
85:	int rtc_nvmem_register(struct rtc_device *, struct nvmem_config *);
108:	void rtc_nvmem_unregister(struct rtc_device *);
24:	static ssize_t rtc_nvram_read(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
36:	static ssize_t rtc_nvram_write(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);

File drivers/rtc/rtc-cmos.c:
936:	static int cmos_aie_poweroff(struct device *);
516:	static int cmos_alarm_irq_enable(struct device *, unsigned int);
325:	static void cmos_checkintr(struct cmos_rtc *, unsigned char);
710:	static int cmos_do_probe(struct device *, struct resource *, int);
911:	static void cmos_do_remove(struct device *);
903:	static void cmos_do_shutdown(int);
1487:	static void cmos_exit(void);
1459:	static int cmos_init(void);
654:	static irqreturn_t cmos_interrupt(int, void *);
365:	static void cmos_irq_disable(struct cmos_rtc *, unsigned char);
342:	static void cmos_irq_enable(struct cmos_rtc *, unsigned char);
597:	static int cmos_nvram_read(void *, unsigned int, void *, size_t);
618:	static int cmos_nvram_write(void *, unsigned int, void *, size_t);
1401:	static int cmos_platform_probe(struct platform_device *);
1420:	static int cmos_platform_remove(struct platform_device *);
1426:	static void cmos_platform_shutdown(struct platform_device *);
1300:	static int cmos_pnp_probe(struct pnp_dev *, const struct pnp_device_id *);
1323:	static void cmos_pnp_remove(struct pnp_dev *);
1328:	static void cmos_pnp_shutdown(struct pnp_dev *);
534:	static int cmos_procfs(struct device *, struct seq_file *);
255:	static int cmos_read_alarm(struct device *, struct rtc_wkalrm *);
227:	static int cmos_read_time(struct device *, struct rtc_time *);
1072:	static int cmos_resume(struct device *);
450:	static int cmos_set_alarm(struct device *, struct rtc_wkalrm *);
244:	static int cmos_set_time(struct device *, struct rtc_time *);
981:	static int cmos_suspend(struct device *);
383:	static int cmos_validate_alarm(struct device *, struct rtc_wkalrm *);
1229:	static void cmos_wake_setup(struct device *);
1142:	static u32 rtc_handler(void *);
1195:	static void rtc_wake_off(struct device *);
1189:	static void rtc_wake_on(struct device *);

File drivers/rtc/rtc-dev.c:
479:	void rtc_dev_exit(void);
470:	void rtc_dev_init(void);
449:	void rtc_dev_prepare(struct rtc_device *);
408:	static int rtc_dev_fasync(int, struct file *, int);
209:	static long rtc_dev_ioctl(struct file *, unsigned int, unsigned long);
25:	static int rtc_dev_open(struct inode *, struct file *);
197:	static __poll_t rtc_dev_poll(struct file *, poll_table *);
143:	static ssize_t rtc_dev_read(struct file *, char *, size_t, loff_t *);
414:	static int rtc_dev_release(struct inode *, struct file *);

File drivers/rtc/rtc-lib.c:
137:	struct rtc_time rtc_ktime_to_tm(ktime_t);
33:	int rtc_month_days(unsigned int, unsigned int);
53:	void rtc_time64_to_tm(time64_t, struct rtc_time *);
128:	ktime_t rtc_tm_to_ktime(struct rtc_time);
118:	time64_t rtc_tm_to_time64(struct rtc_time *);
98:	int rtc_valid_tm(struct rtc_time *);
42:	int rtc_year_days(unsigned int, unsigned int, unsigned int);

File drivers/rtc/rtc-mc146818-lib.c:
24:	unsigned int mc146818_get_time(struct rtc_time *);
102:	int mc146818_set_time(struct rtc_time *);

File drivers/rtc/rtc-proc.c:
110:	void rtc_proc_add_device(struct rtc_device *);
117:	void rtc_proc_del_device(struct rtc_device *);
24:	static bool is_rtc_hctosys(struct rtc_device *);
42:	static int rtc_proc_show(struct seq_file *, void *);

File drivers/rtc/rtc-sysfs.c:
356:	int rtc_add_group(struct rtc_device *, const struct attribute_group *);
321:	int rtc_add_groups(struct rtc_device *, const struct attribute_group **);
316:	const struct attribute_group **rtc_get_dev_attribute_groups(void);
36:	static ssize_t date_show(struct device *, struct device_attribute *, char *);
119:	static ssize_t hctosys_show(struct device *, struct device_attribute *, char *);
86:	static ssize_t max_user_freq_show(struct device *, struct device_attribute *, char *);
92:	static ssize_t max_user_freq_store(struct device *, struct device_attribute *, const char *, size_t);
28:	static ssize_t name_show(struct device *, struct device_attribute *, char *);
224:	static ssize_t offset_show(struct device *, struct device_attribute *, char *);
237:	static ssize_t offset_store(struct device *, struct device_attribute *, const char *, size_t);
252:	static ssize_t range_show(struct device *, struct device_attribute *, char *);
285:	static umode_t rtc_attr_is_visible(struct kobject *, struct attribute *, int);
68:	static ssize_t since_epoch_show(struct device *, struct device_attribute *, char *);
52:	static ssize_t time_show(struct device *, struct device_attribute *, char *);
133:	static ssize_t wakealarm_show(struct device *, struct device_attribute *, char *);
157:	static ssize_t wakealarm_store(struct device *, struct device_attribute *, const char *, size_t);

File drivers/scsi/constants.c:
424:	const char *scsi_driverbyte_string(int);
378:	const char *scsi_extd_sense_format(unsigned char, unsigned char, const char **);
413:	const char *scsi_hostbyte_string(int);
448:	const char *scsi_mlreturn_string(int);
260:	bool scsi_opcode_sa_name(int, int, const char **, const char **);
365:	const char *scsi_sense_key_string(unsigned char);

File drivers/scsi/device_handler/scsi_dh_alua.c:
1022:	static int alua_activate(struct scsi_device *, activate_complete, void *);
1126:	static int alua_bus_attach(struct scsi_device *);
1156:	static void alua_bus_detach(struct scsi_device *);
1068:	static void alua_check(struct scsi_device *, bool);
422:	static int alua_check_sense(struct scsi_device *, struct scsi_sense_hdr *);
1205:	static void alua_exit(void);
192:	static struct alua_port_group *alua_find_get_pg(char *, size_t, int);
1188:	static int alua_init(void);
957:	static int alua_initialize(struct scsi_device *, struct alua_dh_data *);
1091:	static int alua_prep_fn(struct scsi_device *, struct request *);
1115:	static void alua_rescan(struct scsi_device *);
519:	static int alua_rtpg(struct scsi_device *, struct alua_port_group *);
905:	static bool alua_rtpg_queue(struct alua_port_group *, struct scsi_device *, struct alua_queue_data *, bool);
807:	static void alua_rtpg_work(struct work_struct *);
978:	static int alua_set_params(struct scsi_device *, const char *);
122:	static void release_port_group(struct kref *);

File drivers/scsi/device_handler/scsi_dh_emc.c:
394:	static int clariion_activate(struct scsi_device *, activate_complete, void *);
486:	static int clariion_bus_attach(struct scsi_device *);
520:	static void clariion_bus_detach(struct scsi_device *);
296:	static int clariion_check_sense(struct scsi_device *, struct scsi_sense_hdr *);
548:	static void clariion_exit(void);
537:	static int clariion_init(void);
344:	static int clariion_prep_fn(struct scsi_device *, struct request *);
382:	static int clariion_send_inquiry(struct scsi_device *, struct clariion_dh_data *);
436:	static int clariion_set_params(struct scsi_device *, const char *);
248:	static int send_trespass_cmd(struct scsi_device *, struct clariion_dh_data *);

File drivers/scsi/device_handler/scsi_dh_hp_sw.c:
198:	static int hp_sw_activate(struct scsi_device *, activate_complete, void *);
214:	static int hp_sw_bus_attach(struct scsi_device *);
245:	static void hp_sw_bus_detach(struct scsi_device *);
265:	static void hp_sw_exit(void);
260:	static int hp_sw_init(void);
175:	static int hp_sw_prep_fn(struct scsi_device *, struct request *);
94:	static int hp_sw_tur(struct scsi_device *, struct hp_sw_dh_data *);

File drivers/scsi/device_handler/scsi_dh_rdac.c:
388:	static int check_ownership(struct scsi_device *, struct rdac_dh_data *);
611:	static int rdac_activate(struct scsi_device *, activate_complete, void *);
725:	static int rdac_bus_attach(struct scsi_device *);
772:	static void rdac_bus_detach(struct scsi_device *);
660:	static int rdac_check_sense(struct scsi_device *, struct scsi_sense_hdr *);
824:	static void rdac_exit(void);
800:	static int rdac_init(void);
647:	static int rdac_prep_fn(struct scsi_device *, struct request *);
317:	static void release_controller(struct kref *);
527:	static void send_mode_select(struct work_struct *);

File drivers/scsi/hosts.c:
206:	int scsi_add_host_with_dma(struct Scsi_Host *, struct device *, struct device *);
596:	void scsi_exit_hosts(void);
637:	void scsi_flush_work(struct Scsi_Host *);
383:	struct Scsi_Host *scsi_host_alloc(struct scsi_host_template *, int);
575:	int scsi_host_busy(struct Scsi_Host *);
562:	struct Scsi_Host *scsi_host_get(struct Scsi_Host *);
543:	struct Scsi_Host *scsi_host_lookup(unsigned short);
585:	void scsi_host_put(struct Scsi_Host *);
72:	int scsi_host_set_state(struct Scsi_Host *, enum scsi_host_state);
591:	int scsi_init_hosts(void);
602:	int scsi_is_host_device(const struct device *);
618:	int scsi_queue_work(struct Scsi_Host *, struct work_struct *);
162:	void scsi_remove_host(struct Scsi_Host *);
523:	static int __scsi_host_match(struct device *, const void *);
54:	static void scsi_host_cls_release(struct device *);
320:	static void scsi_host_dev_release(struct device *);

File drivers/scsi/scsi.c:
733:	struct scsi_device *__scsi_device_lookup(struct Scsi_Host *, uint, uint, u64);
675:	struct scsi_device *__scsi_device_lookup_by_target(struct scsi_target *, u64);
584:	struct scsi_device *__scsi_iterate_devices(struct Scsi_Host *, struct scsi_device *);
646:	void __starget_for_each_device(struct scsi_target *, void *, void (*)(struct scsi_device *, void *));
474:	void scsi_attach_vpd(struct scsi_device *);
258:	int scsi_change_queue_depth(struct scsi_device *, int);
185:	void scsi_cmd_get_serial(struct Scsi_Host *, struct scsi_cmnd *);
551:	int scsi_device_get(struct scsi_device *);
761:	struct scsi_device *scsi_device_lookup(struct Scsi_Host *, uint, uint, u64);
700:	struct scsi_device *scsi_device_lookup_by_target(struct scsi_target *, u64);
576:	void scsi_device_put(struct scsi_device *);
201:	void scsi_finish_command(struct scsi_cmnd *);
375:	int scsi_get_vpd_page(struct scsi_device *, u8, unsigned char *, int);
142:	void scsi_log_completion(struct scsi_cmnd *, int);
116:	void scsi_log_send(struct scsi_cmnd *);
109:	void scsi_put_command(struct scsi_cmnd *);
507:	int scsi_report_opcode(struct scsi_device *, unsigned char *, unsigned int, unsigned char);
291:	int scsi_track_queue_full(struct scsi_device *, int);
618:	void starget_for_each_device(struct scsi_target *, void *, void (*)(struct scsi_device *, void *));
833:	static void exit_scsi(void);
790:	static int init_scsi(void);
421:	static struct scsi_vpd *scsi_get_vpd_buf(struct scsi_device *, u8);
447:	static void scsi_update_vpd_page(struct scsi_device *, u8, struct scsi_vpd **);
329:	static int scsi_vpd_inquiry(struct scsi_device *, unsigned char *, u8, unsigned int);

File drivers/scsi/scsi_common.c:
105:	void int_to_scsilun(u64, struct scsi_lun *);
232:	void scsi_build_sense_buffer(int, u8 *, u8, u8, u8);
45:	const char *scsi_device_type(unsigned int);
138:	bool scsi_normalize_sense(const u8 *, int, struct scsi_sense_hdr *);
196:	const u8 *scsi_sense_desc_find(const u8 *, int, int);
310:	int scsi_set_sense_field_pointer(u8 *, int, u16, u8, bool);
260:	int scsi_set_sense_information(u8 *, int, u64);
77:	u64 scsilun_to_int(struct scsi_lun *);

File drivers/scsi/scsi_debugfs.c:
35:	void scsi_show_rq(struct seq_file *, struct request *);

File drivers/scsi/scsi_devinfo.c:
777:	int scsi_dev_info_add_list(enum scsi_devinfo_key, const char *);
344:	int scsi_dev_info_list_add_keyed(int, char *, char *, char *, blist_flags_t, enum scsi_devinfo_key);
492:	int scsi_dev_info_list_del_keyed(char *, char *, enum scsi_devinfo_key);
809:	int scsi_dev_info_remove_list(enum scsi_devinfo_key);
760:	void scsi_exit_devinfo(void);
570:	blist_flags_t scsi_get_device_flags(struct scsi_device *, const unsigned char *, const unsigned char *);
592:	blist_flags_t scsi_get_device_flags_keyed(struct scsi_device *, const unsigned char *, const unsigned char *, enum scsi_devinfo_key);
842:	int scsi_init_devinfo(void);
660:	static void *devinfo_seq_next(struct seq_file *, void *, loff_t *);
621:	static int devinfo_seq_show(struct seq_file *, void *);
639:	static void *devinfo_seq_start(struct seq_file *, loff_t *);
683:	static void devinfo_seq_stop(struct seq_file *, void *);
695:	static int proc_scsi_devinfo_open(struct inode *, struct file *);
707:	static ssize_t proc_scsi_devinfo_write(struct file *, const char *, size_t, loff_t *);
519:	static int scsi_dev_info_list_add_str(char *);
408:	static struct scsi_dev_info_list *scsi_dev_info_list_find(const char *, const char *, enum scsi_devinfo_key);
283:	static void scsi_strcpy_devinfo(char *, char *, size_t, char *, int);

File drivers/scsi/scsi_dh.c:
263:	int scsi_dh_activate(struct request_queue *, activate_complete, void *);
182:	void scsi_dh_add_device(struct scsi_device *);
332:	int scsi_dh_attach(struct request_queue *, const char *);
371:	const char *scsi_dh_attached_handler_name(struct request_queue *, gfp_t);
198:	void scsi_dh_release_device(struct scsi_device *);
310:	int scsi_dh_set_params(struct request_queue *, const char *);
211:	int scsi_register_device_handler(struct scsi_device_handler *);
236:	int scsi_unregister_device_handler(struct scsi_device_handler *);
100:	static struct scsi_device_handler *__scsi_dh_lookup(const char *);
136:	static int scsi_dh_handler_attach(struct scsi_device *, struct scsi_device_handler *);

File drivers/scsi/scsi_error.c:
136:	void scmd_eh_abort_handler(struct work_struct *);
340:	int scsi_block_when_processing_errors(struct scsi_device *);
487:	int scsi_check_sense(struct scsi_cmnd *);
2411:	bool scsi_command_normalize_sense(const struct scsi_cmnd *, struct scsi_sense_hdr *);
1761:	int scsi_decide_disposition(struct scsi_cmnd *);
1177:	void scsi_eh_finish_cmd(struct scsi_cmnd *, struct list_head *);
2072:	void scsi_eh_flush_done_q(struct list_head *);
1203:	int scsi_eh_get_sense(struct list_head *, struct list_head *);
959:	void scsi_eh_prep_cmnd(struct scsi_cmnd *, struct scsi_eh_save *, unsigned char *, int, unsigned int);
2054:	void scsi_eh_ready_devs(struct Scsi_Host *, struct list_head *, struct list_head *);
1032:	void scsi_eh_restore_cmnd(struct scsi_cmnd *, struct scsi_eh_save *);
254:	void scsi_eh_scmd_add(struct scsi_cmnd *);
65:	void scsi_eh_wakeup(struct Scsi_Host *);
2157:	int scsi_error_handler(void *);
2429:	bool scsi_get_sense_info_fld(const u8 *, int, u64 *);
2315:	int scsi_ioctl_reset(struct scsi_device *, int *);
1712:	int scsi_noretry_cmd(struct scsi_cmnd *);
2259:	void scsi_report_bus_reset(struct Scsi_Host *, int);
2292:	void scsi_report_device_reset(struct Scsi_Host *, int, int);
83:	void scsi_schedule_eh(struct Scsi_Host *);
290:	enum blk_eh_timer_return scsi_times_out(struct request *);
849:	static void __scsi_report_device_reset(struct scsi_device *, void *);
1943:	static void eh_lock_door_done(struct request *, blk_status_t);
1155:	static int scsi_eh_action(struct scsi_cmnd *, int);
777:	static void scsi_eh_done(struct scsi_cmnd *);
238:	static void scsi_eh_inc_host_failed(struct callback_head *);
1313:	static int scsi_eh_test_devices(struct list_head *, struct list_head *, struct list_head *, int);
1362:	static int scsi_eh_try_stu(struct scsi_cmnd *);
1276:	static int scsi_eh_tur(struct scsi_cmnd *);
681:	static void scsi_handle_queue_full(struct scsi_device *);
649:	static void scsi_handle_queue_ramp_up(struct scsi_device *);
2305:	static void scsi_reset_provider_done_command(struct scsi_cmnd *);
1064:	static int scsi_send_eh_cmnd(struct scsi_cmnd *, unsigned char *, int, int, unsigned int);
823:	static int scsi_try_bus_reset(struct scsi_cmnd *);
793:	static int scsi_try_host_reset(struct scsi_cmnd *);
865:	static int scsi_try_target_reset(struct scsi_cmnd *);

File drivers/scsi/scsi_ioctl.c:
201:	int scsi_ioctl(struct scsi_device *, int, void *);
279:	int scsi_ioctl_block_when_processing_errors(struct scsi_device *, int, bool);
141:	int scsi_set_medium_removal(struct scsi_device *, char);
88:	static int ioctl_internal_command(struct scsi_device *, char *, int, int);

File drivers/scsi/scsi_lib.c:
264:	int __scsi_execute(struct scsi_device *, const unsigned char *, int, void *, unsigned int, unsigned char *, struct scsi_sense_hdr *, int, int, u64, req_flags_t, int *);
2309:	void __scsi_init_queue(struct Scsi_Host *, struct request_queue *);
1326:	void scsi_add_cmd_to_list(struct scsi_cmnd *);
2516:	void scsi_block_requests(struct Scsi_Host *);
1340:	void scsi_del_cmd_from_list(struct scsi_cmnd *);
2484:	struct scsi_device *scsi_device_from_queue(struct request_queue *);
3144:	int scsi_device_quiesce(struct scsi_device *);
3192:	void scsi_device_resume(struct scsi_device *);
2803:	int scsi_device_set_state(struct scsi_device *, enum scsi_device_state);
376:	void scsi_device_unbusy(struct scsi_device *);
2976:	void scsi_evt_thread(struct work_struct *);
2562:	void scsi_exit_queue(void);
1355:	void scsi_init_command(struct scsi_device *, struct scsi_cmnd *);
1215:	int scsi_init_io(struct scsi_cmnd *);
2549:	int scsi_init_queue(void);
69:	int scsi_init_sense_cache(struct Scsi_Host *);
3249:	int scsi_internal_device_block_nowait(struct scsi_device *);
3346:	int scsi_internal_device_unblock_nowait(struct scsi_device *, enum scsi_device_state);
1105:	void scsi_io_completion(struct scsi_cmnd *, unsigned int);
3465:	void *scsi_kmap_atomic_sg(struct scatterlist *, int, size_t *, size_t *);
3510:	void scsi_kunmap_atomic_sg(void *);
2588:	int scsi_mode_select(struct scsi_device *, int, int, int, unsigned char *, int, int, int, struct scsi_mode_data *, struct scsi_sense_hdr *);
2664:	int scsi_mode_sense(struct scsi_device *, int, int, unsigned char *, int, int, int, struct scsi_mode_data *, struct scsi_sense_hdr *);
2436:	struct request_queue *scsi_mq_alloc_queue(struct scsi_device *);
2472:	void scsi_mq_destroy_tags(struct Scsi_Host *);
2448:	int scsi_mq_setup_tags(struct Scsi_Host *);
2390:	struct request_queue *scsi_old_alloc_queue(struct scsi_device *);
240:	void scsi_queue_insert(struct scsi_cmnd *, int);
561:	void scsi_requeue_run_queue(struct work_struct *);
612:	void scsi_run_host_queues(struct Scsi_Host *);
3317:	void scsi_start_queue(struct scsi_device *);
3420:	void scsi_target_block(struct device *);
3216:	void scsi_target_quiesce(struct scsi_target *);
3229:	void scsi_target_resume(struct scsi_target *);
3446:	void scsi_target_unblock(struct device *, enum scsi_device_state);
2772:	int scsi_test_unit_ready(struct scsi_device *, int, int, struct scsi_sense_hdr *);
2542:	void scsi_unblock_requests(struct Scsi_Host *);
3616:	int scsi_vpd_lun_id(struct scsi_device *, char *, size_t);
3741:	int scsi_vpd_tpg_id(struct scsi_device *, int *);
3516:	void sdev_disable_disk_events(struct scsi_device *);
3522:	void sdev_enable_disk_events(struct scsi_device *);
3044:	struct scsi_event *sdev_evt_alloc(enum scsi_device_event, gfp_t);
3016:	void sdev_evt_send(struct scsi_device *, struct scsi_event *);
3081:	void sdev_evt_send_simple(struct scsi_device *, enum scsi_device_event, gfp_t);
168:	static void __scsi_queue_insert(struct scsi_cmnd *, int, bool);
3405:	static void device_block(struct scsi_device *, void *);
3210:	static void device_quiesce_fn(struct scsi_device *, void *);
3223:	static void device_resume_fn(struct scsi_device *, void *);
3431:	static void device_unblock(struct scsi_device *, void *);
1317:	static void scsi_cleanup_rq(struct request *);
356:	static void scsi_dec_host_busy(struct Scsi_Host *);
1840:	static int scsi_dispatch_cmd(struct scsi_cmnd *);
1925:	static void scsi_done(struct scsi_cmnd *);
720:	static bool scsi_end_request(struct request *, blk_status_t, unsigned int, unsigned int);
338:	static void scsi_init_cmd_errh(struct scsi_cmnd *);
1182:	static int scsi_init_sgtable(struct request *, struct scsi_data_buffer *);
1303:	static void scsi_initialize_rq(struct request *);
831:	static void scsi_io_completion_reprep(struct scsi_cmnd *, struct request_queue *);
389:	static void scsi_kick_queue(struct request_queue *);
1738:	static int scsi_lld_busy(struct request_queue *);
2300:	static int scsi_map_queues(struct blk_mq_tag_set *);
2127:	static void scsi_mq_done(struct scsi_cmnd *);
2291:	static void scsi_mq_exit_request(struct blk_mq_tag_set *, struct request *, unsigned int);
630:	static void scsi_mq_free_sgtables(struct scsi_cmnd *);
2142:	static bool scsi_mq_get_budget(struct blk_mq_hw_ctx *);
2266:	static int scsi_mq_init_request(struct blk_mq_tag_set *, struct request *, unsigned int, unsigned int);
2133:	static void scsi_mq_put_budget(struct blk_mq_hw_ctx *);
645:	static void scsi_mq_uninit_cmd(struct scsi_cmnd *);
2380:	static void scsi_old_exit_rq(struct request_queue *, struct request *);
2349:	static int scsi_old_init_rq(struct request_queue *, struct request *, gfp_t);
1542:	static int scsi_prep_fn(struct request_queue *, struct request *);
1450:	static int scsi_prep_state_check(struct scsi_device *, struct request *);
2178:	static blk_status_t scsi_queue_rq(struct blk_mq_hw_ctx *, const struct blk_mq_queue_data *);
668:	static void scsi_release_buffers(struct scsi_cmnd *);
1945:	static void scsi_request_fn(struct request_queue *);
799:	static blk_status_t scsi_result_to_blk_status(struct scsi_cmnd *, int);
546:	static void scsi_run_queue(struct request_queue *);
688:	static void scsi_run_queue_async(struct scsi_device *);
1432:	static int scsi_setup_cmnd(struct scsi_device *, struct request *);
1794:	static void scsi_softirq_done(struct request *);
2258:	static enum blk_eh_timer_return scsi_timeout(struct request *, bool);
620:	static void scsi_uninit_cmd(struct scsi_cmnd *);
1572:	static void scsi_unprep_fn(struct request_queue *, struct request *);
3411:	static int target_block(struct device *, void *);
3437:	static int target_unblock(struct device *, void *);

File drivers/scsi/scsi_lib_dma.c:
23:	int scsi_dma_map(struct scsi_cmnd *);
43:	void scsi_dma_unmap(struct scsi_cmnd *);

File drivers/scsi/scsi_logging.c:
155:	size_t __scsi_format_command(char *, size_t, const unsigned char *, size_t);
371:	void __scsi_print_sense(const struct scsi_device *, const char *, const unsigned char *, int);
81:	void scmd_printk(const char *, const struct scsi_cmnd *, const char *, ...);
178:	void scsi_print_command(struct scsi_cmnd *);
386:	void scsi_print_result(const struct scsi_cmnd *, const char *, int);
379:	void scsi_print_sense(const struct scsi_cmnd *);
363:	void scsi_print_sense_hdr(const struct scsi_device *, const char *, const struct scsi_sense_hdr *);
54:	void sdev_prefix_printk(const char *, const struct scsi_device *, const char *, const char *, ...);
106:	static size_t scsi_format_opcode_name(char *, size_t, const unsigned char *);
348:	static void scsi_log_print_sense(const struct scsi_device *, const char *, int, const unsigned char *, int);
323:	static void scsi_log_print_sense_hdr(const struct scsi_device *, const char *, int, const struct scsi_sense_hdr *);
36:	static size_t sdev_format_header(char *, const char *, int, size_t);

File drivers/scsi/scsi_netlink.c:
150:	void scsi_netlink_exit(void);
126:	void scsi_netlink_init(void);
46:	static void scsi_nl_rcv_msg(struct sk_buff *);

File drivers/scsi/scsi_pm.c:
301:	int scsi_autopm_get_device(struct scsi_device *);
330:	int scsi_autopm_get_host(struct Scsi_Host *);
320:	void scsi_autopm_get_target(struct scsi_target *);
314:	void scsi_autopm_put_device(struct scsi_device *);
342:	void scsi_autopm_put_host(struct Scsi_Host *);
325:	void scsi_autopm_put_target(struct scsi_target *);
135:	static void async_sdev_restore(void *, async_cookie_t);
125:	static void async_sdev_resume(void *, async_cookie_t);
130:	static void async_sdev_thaw(void *, async_cookie_t);
26:	static int do_scsi_freeze(struct device *, const struct dev_pm_ops *);
31:	static int do_scsi_poweroff(struct device *, const struct dev_pm_ops *);
46:	static int do_scsi_restore(struct device *, const struct dev_pm_ops *);
36:	static int do_scsi_resume(struct device *, const struct dev_pm_ops *);
21:	static int do_scsi_suspend(struct device *, const struct dev_pm_ops *);
41:	static int do_scsi_thaw(struct device *, const struct dev_pm_ops *);
198:	static int scsi_bus_freeze(struct device *);
208:	static int scsi_bus_poweroff(struct device *);
175:	static int scsi_bus_prepare(struct device *);
213:	static int scsi_bus_restore(struct device *);
193:	static int scsi_bus_resume(struct device *);
140:	static int scsi_bus_resume_common(struct device *, int (*)(struct device *, const struct dev_pm_ops *));
188:	static int scsi_bus_suspend(struct device *);
104:	static int scsi_bus_suspend_common(struct device *, int (*)(struct device *, const struct dev_pm_ops *));
203:	static int scsi_bus_thaw(struct device *);
70:	static int scsi_dev_type_resume(struct device *, int (*)(struct device *, const struct dev_pm_ops *));
286:	static int scsi_runtime_idle(struct device *);
273:	static int scsi_runtime_resume(struct device *);
246:	static int scsi_runtime_suspend(struct device *);

File drivers/scsi/scsi_proc.c:
479:	void scsi_exit_procfs(void);
456:	int scsi_init_procfs(void);
138:	void scsi_proc_host_add(struct Scsi_Host *);
160:	void scsi_proc_host_rm(struct Scsi_Host *);
101:	void scsi_proc_hostdir_add(struct scsi_host_template *);
120:	void scsi_proc_hostdir_rm(struct scsi_host_template *);
375:	static int always_match(struct device *, void *);
80:	static int proc_scsi_host_open(struct inode *, struct file *);
49:	static ssize_t proc_scsi_host_write(struct file *, const char *, size_t, loff_t *);
435:	static int proc_scsi_open(struct inode *, struct file *);
74:	static int proc_scsi_show(struct seq_file *, void *);
310:	static ssize_t proc_scsi_write(struct file *, const char *, size_t, loff_t *);
401:	static void *scsi_seq_next(struct seq_file *, void *, loff_t *);
413:	static int scsi_seq_show(struct seq_file *, void *);
388:	static void *scsi_seq_start(struct seq_file *, loff_t *);
408:	static void scsi_seq_stop(struct seq_file *, void *);

File drivers/scsi/scsi_scan.c:
1472:	struct scsi_device *__scsi_add_device(struct Scsi_Host *, uint, uint, u64, void *);
1508:	int scsi_add_device(struct Scsi_Host *, uint, uint, u64);
133:	int scsi_complete_async_scans(void);
1874:	void scsi_forget_host(struct Scsi_Host *);
1940:	void scsi_free_host_dev(struct scsi_device *);
1908:	struct scsi_device *scsi_get_host_dev(struct Scsi_Host *);
347:	int scsi_is_target_device(const struct device *);
1521:	void scsi_rescan_device(struct device *);
542:	void scsi_sanitize_inquiry_string(unsigned char *, int);
1848:	void scsi_scan_host(struct Scsi_Host *);
1670:	int scsi_scan_host_selected(struct Scsi_Host *, unsigned int, unsigned int, u64, enum scsi_scan_mode);
1614:	void scsi_scan_target(struct device *, unsigned int, unsigned int, u64, enum scsi_scan_mode);
516:	void scsi_target_reap(struct scsi_target *);
1543:	static void __scsi_scan_target(struct device *, unsigned int, unsigned int, u64, enum scsi_scan_mode);
1835:	static void do_scan_async(void *, async_cookie_t);
1820:	static void do_scsi_scan_host(struct Scsi_Host *);
215:	static struct scsi_device *scsi_alloc_sdev(struct scsi_target *, u64, void *);
418:	static struct scsi_target *scsi_alloc_target(struct device *, int, uint);
1056:	static int scsi_probe_and_add_lun(struct scsi_target *, u64, blist_flags_t *, struct scsi_device **, enum scsi_scan_mode, void *);
1638:	static void scsi_scan_channel(struct Scsi_Host *, unsigned int, unsigned int, u64, enum scsi_scan_mode);
316:	static void scsi_target_destroy(struct scsi_target *);
333:	static void scsi_target_dev_release(struct device *);
383:	static void scsi_target_reap_ref_release(struct kref *);

File drivers/scsi/scsi_sysctl.c:
48:	void scsi_exit_sysctl(void);
40:	int scsi_init_sysctl(void);

File drivers/scsi/scsi_sysfs.c:
1354:	void __scsi_remove_device(struct scsi_device *);
45:	const char *scsi_device_state_name(enum scsi_device_state);
71:	const char *scsi_host_state_name(enum scsi_host_state);
1597:	int scsi_is_sdev_device(const struct device *);
1509:	int scsi_register_driver(struct device_driver *);
1517:	int scsi_register_interface(struct class_interface *);
1431:	void scsi_remove_device(struct scsi_device *);
1480:	void scsi_remove_target(struct device *);
1529:	int scsi_sysfs_add_host(struct Scsi_Host *);
1285:	int scsi_sysfs_add_sdev(struct scsi_device *);
1554:	void scsi_sysfs_device_initialize(struct scsi_device *);
528:	int scsi_sysfs_register(void);
542:	void scsi_sysfs_unregister(void);
114:	static int check_set(unsigned long long *, char *);
492:	static int scsi_bus_match(struct device *, struct device_driver *);
505:	static int scsi_bus_uevent(struct device *, struct kobj_uevent_env *);
419:	static void scsi_device_cls_release(struct device *);
479:	static void scsi_device_dev_release(struct device *);
427:	static void scsi_device_dev_release_usercontext(struct work_struct *);
1158:	static umode_t scsi_sdev_attr_is_visible(struct kobject *, struct attribute *, int);
1184:	static umode_t scsi_sdev_bin_attr_is_visible(struct kobject *, struct bin_attribute *, int);
1091:	static ssize_t sdev_show_access_state(struct device *, struct device_attribute *, char *);
1009:	static ssize_t sdev_show_blacklist(struct device *, struct device_attribute *, char *);
651:	static ssize_t sdev_show_device_blocked(struct device *, struct device_attribute *, char *);
642:	static ssize_t sdev_show_device_busy(struct device *, struct device_attribute *, char *);
1039:	static ssize_t sdev_show_dh_state(struct device *, struct device_attribute *, char *);
684:	static ssize_t sdev_show_eh_timeout(struct device *, struct device_attribute *, char *);
951:	static ssize_t sdev_show_evt_capacity_change_reported(struct device *, struct device_attribute *, char *);
950:	static ssize_t sdev_show_evt_inquiry_change_reported(struct device *, struct device_attribute *, char *);
954:	static ssize_t sdev_show_evt_lun_change_reported(struct device *, struct device_attribute *, char *);
949:	static ssize_t sdev_show_evt_media_change(struct device *, struct device_attribute *, char *);
953:	static ssize_t sdev_show_evt_mode_parameter_change_reported(struct device *, struct device_attribute *, char *);
952:	static ssize_t sdev_show_evt_soft_threshold_reached(struct device *, struct device_attribute *, char *);
908:	static ssize_t sdev_show_modalias(struct device *, struct device_attribute *, char *);
638:	static ssize_t sdev_show_model(struct device *, struct device_attribute *, char *);
1111:	static ssize_t sdev_show_preferred_path(struct device *, struct device_attribute *, char *);
980:	static ssize_t sdev_show_queue_depth(struct device *, struct device_attribute *, char *);
1129:	static ssize_t sdev_show_queue_ramp_up_period(struct device *, struct device_attribute *, char *);
639:	static ssize_t sdev_show_rev(struct device *, struct device_attribute *, char *);
636:	static ssize_t sdev_show_scsi_level(struct device *, struct device_attribute *, char *);
663:	static ssize_t sdev_show_timeout(struct device *, struct device_attribute *, char *);
635:	static ssize_t sdev_show_type(struct device *, struct device_attribute *, char *);
637:	static ssize_t sdev_show_vendor(struct device *, struct device_attribute *, char *);
986:	static ssize_t sdev_show_wwid(struct device *, struct device_attribute *, char *);
722:	static ssize_t sdev_store_delete(struct device *, struct device_attribute *, const char *, size_t);
1051:	static ssize_t sdev_store_dh_state(struct device *, struct device_attribute *, const char *, size_t);
692:	static ssize_t sdev_store_eh_timeout(struct device *, struct device_attribute *, const char *, size_t);
951:	static ssize_t sdev_store_evt_capacity_change_reported(struct device *, struct device_attribute *, const char *, size_t);
950:	static ssize_t sdev_store_evt_inquiry_change_reported(struct device *, struct device_attribute *, const char *, size_t);
954:	static ssize_t sdev_store_evt_lun_change_reported(struct device *, struct device_attribute *, const char *, size_t);
949:	static ssize_t sdev_store_evt_media_change(struct device *, struct device_attribute *, const char *, size_t);
953:	static ssize_t sdev_store_evt_mode_parameter_change_reported(struct device *, struct device_attribute *, const char *, size_t);
952:	static ssize_t sdev_store_evt_soft_threshold_reached(struct device *, struct device_attribute *, const char *, size_t);
957:	static ssize_t sdev_store_queue_depth(struct device *, struct device_attribute *, const char *, size_t);
1140:	static ssize_t sdev_store_queue_ramp_up_period(struct device *, struct device_attribute *, const char *, size_t);
671:	static ssize_t sdev_store_timeout(struct device *, struct device_attribute *, const char *, size_t);
373:	static ssize_t show_can_queue(struct device *, struct device_attribute *, char *);
372:	static ssize_t show_cmd_per_lun(struct device *, struct device_attribute *, char *);
382:	static ssize_t show_host_busy(struct device *, struct device_attribute *, char *);
860:	static ssize_t show_inquiry(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
884:	static ssize_t show_iostat_counterbits(struct device *, struct device_attribute *, char *);
904:	static ssize_t show_iostat_iodone_cnt(struct device *, struct device_attribute *, char *);
905:	static ssize_t show_iostat_ioerr_cnt(struct device *, struct device_attribute *, char *);
903:	static ssize_t show_iostat_iorequest_cnt(struct device *, struct device_attribute *, char *);
379:	static ssize_t show_proc_name(struct device *, struct device_attribute *, char *);
377:	static ssize_t show_prot_capabilities(struct device *, struct device_attribute *, char *);
378:	static ssize_t show_prot_guard_type(struct device *, struct device_attribute *, char *);
803:	static ssize_t show_queue_type_field(struct device *, struct device_attribute *, char *);
375:	static ssize_t show_sg_prot_tablesize(struct device *, struct device_attribute *, char *);
374:	static ssize_t show_sg_tablesize(struct device *, struct device_attribute *, char *);
269:	static ssize_t show_shost_active_mode(struct device *, struct device_attribute *, char *);
319:	static ssize_t show_shost_eh_deadline(struct device *, struct device_attribute *, char *);
237:	static ssize_t show_shost_mode(unsigned int, char *);
221:	static ssize_t show_shost_state(struct device *, struct device_attribute *, char *);
253:	static ssize_t show_shost_supported_mode(struct device *, struct device_attribute *, char *);
789:	static ssize_t show_state_field(struct device *, struct device_attribute *, char *);
376:	static ssize_t show_unchecked_isa_dma(struct device *, struct device_attribute *, char *);
371:	static ssize_t show_unique_id(struct device *, struct device_attribute *, char *);
370:	static ssize_t show_use_blk_mq(struct device *, struct device_attribute *, char *);
858:	static ssize_t show_vpd_pg80(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
857:	static ssize_t show_vpd_pg83(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
293:	static ssize_t store_host_reset(struct device *, struct device_attribute *, const char *, size_t);
816:	static ssize_t store_queue_type_field(struct device *, struct device_attribute *, const char *, size_t);
713:	static ssize_t store_rescan_field(struct device *, struct device_attribute *, const char *, size_t);
183:	static ssize_t store_scan(struct device *, struct device_attribute *, const char *, size_t);
330:	static ssize_t store_shost_eh_deadline(struct device *, struct device_attribute *, const char *, size_t);
197:	static ssize_t store_shost_state(struct device *, struct device_attribute *, const char *, size_t);
757:	static ssize_t store_state_field(struct device *, struct device_attribute *, const char *, size_t);

File drivers/scsi/scsi_trace.c:
368:	const char *scsi_trace_parse_cdb(struct trace_seq *, unsigned char *, int);

File drivers/scsi/scsicam.c:
36:	unsigned char *scsi_bios_ptable(struct block_device *);
126:	int scsi_partsize(unsigned char *, unsigned long, unsigned int *, unsigned int *, unsigned int *);
68:	int scsicam_bios_param(struct block_device *, sector_t, int *);

File drivers/sfi/sfi_acpi.c:
116:	int sfi_acpi_init(void);
201:	void sfi_acpi_sysfs_init(void);
152:	int sfi_acpi_table_parse(char *, char *, char *, int (*)(struct acpi_table_header *));
127:	static struct acpi_table_header *sfi_acpi_get_table(struct sfi_table_key *);
97:	static int sfi_acpi_parse_xsdt(struct sfi_table_header *);
175:	static ssize_t sfi_acpi_table_show(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);

File drivers/sfi/sfi_core.c:
232:	struct sfi_table_header *sfi_check_table(u64, struct sfi_table_key *);
260:	struct sfi_table_header *sfi_get_table(struct sfi_table_key *);
485:	void sfi_init(void);
501:	void sfi_init_late(void);
275:	void sfi_put_table(struct sfi_table_header *);
419:	struct sfi_table_attr *sfi_sysfs_install_table(u64);
281:	int sfi_table_parse(char *, char *, char *, sfi_table_handler);
99:	static void *sfi_map_memory(u64, u32);
165:	static struct sfi_table_header *sfi_map_table(u64);
454:	static int sfi_sysfs_init(void);
390:	static ssize_t sfi_table_show(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
110:	static void sfi_unmap_memory(void *, u32);
193:	static void sfi_unmap_table(struct sfi_table_header *);
134:	static int sfi_verify_table(struct sfi_table_header *);

File drivers/spi/spi.c:
2026:	struct spi_controller *__spi_alloc_controller(struct device *, unsigned int, bool);
401:	int __spi_register_driver(struct module *, struct spi_driver *);
2282:	int devm_spi_register_controller(struct device *, struct spi_controller *);
518:	int spi_add_device(struct spi_device *);
459:	struct spi_device *spi_alloc_device(struct spi_controller *);
3021:	int spi_async(struct spi_device *, struct spi_message *);
3075:	int spi_async_locked(struct spi_device *, struct spi_message *);
3232:	int spi_bus_lock(struct spi_controller *);
3261:	int spi_bus_unlock(struct spi_controller *);
2409:	struct spi_controller *spi_busnum_to_master(u16);
2373:	int spi_controller_resume(struct spi_controller *);
2357:	int spi_controller_suspend(struct spi_controller *);
1365:	void spi_finalize_current_message(struct spi_controller *);
1133:	void spi_finalize_current_transfer(struct spi_controller *);
1558:	void spi_flush_queue(struct spi_controller *);
295:	const struct spi_device_id *spi_get_device_id(const struct spi_device *);
1343:	struct spi_message *spi_get_next_queued_message(struct spi_controller *);
760:	int spi_map_buf(struct spi_controller *, struct device *, struct sg_table *, void *, size_t, enum dma_data_direction);
596:	struct spi_device *spi_new_device(struct spi_controller *, struct spi_board_info *);
707:	int spi_register_board_info(const struct spi_board_info *, unsigned int);
2137:	int spi_register_controller(struct spi_controller *);
2550:	struct spi_replaced_transfers *spi_replace_transfers(struct spi_message *, struct spi_transfer *, size_t, size_t, spi_replaced_release_t, size_t, gfp_t);
2480:	void spi_res_add(struct spi_message *, void *);
2441:	void *spi_res_alloc(struct spi_device *, spi_res_release_t, size_t, gfp_t);
2463:	void spi_res_free(void *);
2494:	void spi_res_release(struct spi_controller *, struct spi_message *);
2793:	int spi_setup(struct spi_device *);
2726:	int spi_split_transfers_maxsize(struct spi_controller *, struct spi_message *, size_t, gfp_t);
253:	void spi_statistics_add_transfer_stats(struct spi_statistics *, struct spi_transfer *, struct spi_controller *);
3183:	int spi_sync(struct spi_device *, struct spi_message *);
3211:	int spi_sync_locked(struct spi_device *, struct spi_message *);
841:	void spi_unmap_buf(struct spi_controller *, struct device *, struct sg_table *, enum dma_data_direction);
2322:	void spi_unregister_controller(struct spi_controller *);
656:	void spi_unregister_device(struct spi_device *);
3297:	int spi_write_then_read(struct spi_device *, const void *, unsigned int, void *, unsigned int);
2969:	static int __spi_async(struct spi_device *, struct spi_message *);
2388:	static int __spi_controller_match(struct device *, const void *);
1152:	static void __spi_pump_messages(struct spi_controller *, bool);
1483:	static int __spi_queued_transfer(struct spi_device *, struct spi_message *, bool);
2516:	static void __spi_replace_transfers_release(struct spi_controller *, struct spi_message *, void *);
3108:	static int __spi_sync(struct spi_device *, struct spi_message *);
2859:	static int __spi_validate(struct spi_device *, struct spi_message *);
2304:	static int __unregister(struct device *, void *);
1805:	static acpi_status acpi_register_spi_device(struct spi_controller *, struct acpi_device *);
1857:	static acpi_status acpi_spi_add_device(acpi_handle, u32, void *, void **);
1758:	static int acpi_spi_add_resource(struct acpi_resource *, void *);
3481:	static int acpi_spi_notify(struct notifier_block *, unsigned long, void *);
2264:	static void devm_spi_unregister(struct device *, void *);
67:	static ssize_t modalias_show(struct device *, struct device_attribute *, char *);
3447:	static int spi_acpi_controller_match(struct device *, const void *);
3452:	static int spi_acpi_device_match(struct device *, void *);
3103:	static void spi_complete(void *);
132:	static ssize_t spi_controller_bytes_rx_show(struct device *, struct device_attribute *, char *);
131:	static ssize_t spi_controller_bytes_show(struct device *, struct device_attribute *, char *);
133:	static ssize_t spi_controller_bytes_tx_show(struct device *, struct device_attribute *, char *);
124:	static ssize_t spi_controller_errors_show(struct device *, struct device_attribute *, char *);
122:	static ssize_t spi_controller_messages_show(struct device *, struct device_attribute *, char *);
1887:	static void spi_controller_release(struct device *);
129:	static ssize_t spi_controller_spi_async_show(struct device *, struct device_attribute *, char *);
128:	static ssize_t spi_controller_spi_sync_immediate_show(struct device *, struct device_attribute *, char *);
127:	static ssize_t spi_controller_spi_sync_show(struct device *, struct device_attribute *, char *);
125:	static ssize_t spi_controller_timedout_show(struct device *, struct device_attribute *, char *);
139:	static ssize_t spi_controller_transfer_bytes_histo0_show(struct device *, struct device_attribute *, char *);
149:	static ssize_t spi_controller_transfer_bytes_histo10_show(struct device *, struct device_attribute *, char *);
150:	static ssize_t spi_controller_transfer_bytes_histo11_show(struct device *, struct device_attribute *, char *);
151:	static ssize_t spi_controller_transfer_bytes_histo12_show(struct device *, struct device_attribute *, char *);
152:	static ssize_t spi_controller_transfer_bytes_histo13_show(struct device *, struct device_attribute *, char *);
153:	static ssize_t spi_controller_transfer_bytes_histo14_show(struct device *, struct device_attribute *, char *);
154:	static ssize_t spi_controller_transfer_bytes_histo15_show(struct device *, struct device_attribute *, char *);
155:	static ssize_t spi_controller_transfer_bytes_histo16_show(struct device *, struct device_attribute *, char *);
140:	static ssize_t spi_controller_transfer_bytes_histo1_show(struct device *, struct device_attribute *, char *);
141:	static ssize_t spi_controller_transfer_bytes_histo2_show(struct device *, struct device_attribute *, char *);
142:	static ssize_t spi_controller_transfer_bytes_histo3_show(struct device *, struct device_attribute *, char *);
143:	static ssize_t spi_controller_transfer_bytes_histo4_show(struct device *, struct device_attribute *, char *);
144:	static ssize_t spi_controller_transfer_bytes_histo5_show(struct device *, struct device_attribute *, char *);
145:	static ssize_t spi_controller_transfer_bytes_histo6_show(struct device *, struct device_attribute *, char *);
146:	static ssize_t spi_controller_transfer_bytes_histo7_show(struct device *, struct device_attribute *, char *);
147:	static ssize_t spi_controller_transfer_bytes_histo8_show(struct device *, struct device_attribute *, char *);
148:	static ssize_t spi_controller_transfer_bytes_histo9_show(struct device *, struct device_attribute *, char *);
123:	static ssize_t spi_controller_transfers_show(struct device *, struct device_attribute *, char *);
157:	static ssize_t spi_controller_transfers_split_maxsize_show(struct device *, struct device_attribute *, char *);
1460:	static int spi_destroy_queue(struct spi_controller *);
498:	static int spi_dev_check(struct device *, void *);
132:	static ssize_t spi_device_bytes_rx_show(struct device *, struct device_attribute *, char *);
131:	static ssize_t spi_device_bytes_show(struct device *, struct device_attribute *, char *);
133:	static ssize_t spi_device_bytes_tx_show(struct device *, struct device_attribute *, char *);
124:	static ssize_t spi_device_errors_show(struct device *, struct device_attribute *, char *);
122:	static ssize_t spi_device_messages_show(struct device *, struct device_attribute *, char *);
129:	static ssize_t spi_device_spi_async_show(struct device *, struct device_attribute *, char *);
128:	static ssize_t spi_device_spi_sync_immediate_show(struct device *, struct device_attribute *, char *);
127:	static ssize_t spi_device_spi_sync_show(struct device *, struct device_attribute *, char *);
125:	static ssize_t spi_device_timedout_show(struct device *, struct device_attribute *, char *);
139:	static ssize_t spi_device_transfer_bytes_histo0_show(struct device *, struct device_attribute *, char *);
149:	static ssize_t spi_device_transfer_bytes_histo10_show(struct device *, struct device_attribute *, char *);
150:	static ssize_t spi_device_transfer_bytes_histo11_show(struct device *, struct device_attribute *, char *);
151:	static ssize_t spi_device_transfer_bytes_histo12_show(struct device *, struct device_attribute *, char *);
152:	static ssize_t spi_device_transfer_bytes_histo13_show(struct device *, struct device_attribute *, char *);
153:	static ssize_t spi_device_transfer_bytes_histo14_show(struct device *, struct device_attribute *, char *);
154:	static ssize_t spi_device_transfer_bytes_histo15_show(struct device *, struct device_attribute *, char *);
155:	static ssize_t spi_device_transfer_bytes_histo16_show(struct device *, struct device_attribute *, char *);
140:	static ssize_t spi_device_transfer_bytes_histo1_show(struct device *, struct device_attribute *, char *);
141:	static ssize_t spi_device_transfer_bytes_histo2_show(struct device *, struct device_attribute *, char *);
142:	static ssize_t spi_device_transfer_bytes_histo3_show(struct device *, struct device_attribute *, char *);
143:	static ssize_t spi_device_transfer_bytes_histo4_show(struct device *, struct device_attribute *, char *);
144:	static ssize_t spi_device_transfer_bytes_histo5_show(struct device *, struct device_attribute *, char *);
145:	static ssize_t spi_device_transfer_bytes_histo6_show(struct device *, struct device_attribute *, char *);
146:	static ssize_t spi_device_transfer_bytes_histo7_show(struct device *, struct device_attribute *, char *);
147:	static ssize_t spi_device_transfer_bytes_histo8_show(struct device *, struct device_attribute *, char *);
148:	static ssize_t spi_device_transfer_bytes_histo9_show(struct device *, struct device_attribute *, char *);
123:	static ssize_t spi_device_transfers_show(struct device *, struct device_attribute *, char *);
157:	static ssize_t spi_device_transfers_split_maxsize_show(struct device *, struct device_attribute *, char *);
343:	static int spi_drv_probe(struct device *);
374:	static int spi_drv_remove(struct device *);
386:	static void spi_drv_shutdown(struct device *);
3520:	static int spi_init(void);
671:	static void spi_match_controller_to_boardinfo(struct spi_controller *, struct spi_board_info *);
303:	static int spi_match_device(struct device *, struct device_driver *);
1293:	static void spi_pump_messages(struct kthread_work *);
1514:	static int spi_queued_transfer(struct spi_device *, struct spi_message *);
743:	static void spi_set_cs(struct spi_device *, bool);
1406:	static int spi_start_queue(struct spi_controller *);
132:	static ssize_t spi_statistics_bytes_rx_show(struct spi_statistics *, char *);
131:	static ssize_t spi_statistics_bytes_show(struct spi_statistics *, char *);
133:	static ssize_t spi_statistics_bytes_tx_show(struct spi_statistics *, char *);
124:	static ssize_t spi_statistics_errors_show(struct spi_statistics *, char *);
122:	static ssize_t spi_statistics_messages_show(struct spi_statistics *, char *);
129:	static ssize_t spi_statistics_spi_async_show(struct spi_statistics *, char *);
128:	static ssize_t spi_statistics_spi_sync_immediate_show(struct spi_statistics *, char *);
127:	static ssize_t spi_statistics_spi_sync_show(struct spi_statistics *, char *);
125:	static ssize_t spi_statistics_timedout_show(struct spi_statistics *, char *);
139:	static ssize_t spi_statistics_transfer_bytes_histo0_show(struct spi_statistics *, char *);
149:	static ssize_t spi_statistics_transfer_bytes_histo10_show(struct spi_statistics *, char *);
150:	static ssize_t spi_statistics_transfer_bytes_histo11_show(struct spi_statistics *, char *);
151:	static ssize_t spi_statistics_transfer_bytes_histo12_show(struct spi_statistics *, char *);
152:	static ssize_t spi_statistics_transfer_bytes_histo13_show(struct spi_statistics *, char *);
153:	static ssize_t spi_statistics_transfer_bytes_histo14_show(struct spi_statistics *, char *);
154:	static ssize_t spi_statistics_transfer_bytes_histo15_show(struct spi_statistics *, char *);
155:	static ssize_t spi_statistics_transfer_bytes_histo16_show(struct spi_statistics *, char *);
140:	static ssize_t spi_statistics_transfer_bytes_histo1_show(struct spi_statistics *, char *);
141:	static ssize_t spi_statistics_transfer_bytes_histo2_show(struct spi_statistics *, char *);
142:	static ssize_t spi_statistics_transfer_bytes_histo3_show(struct spi_statistics *, char *);
143:	static ssize_t spi_statistics_transfer_bytes_histo4_show(struct spi_statistics *, char *);
144:	static ssize_t spi_statistics_transfer_bytes_histo5_show(struct spi_statistics *, char *);
145:	static ssize_t spi_statistics_transfer_bytes_histo6_show(struct spi_statistics *, char *);
146:	static ssize_t spi_statistics_transfer_bytes_histo7_show(struct spi_statistics *, char *);
147:	static ssize_t spi_statistics_transfer_bytes_histo8_show(struct spi_statistics *, char *);
148:	static ssize_t spi_statistics_transfer_bytes_histo9_show(struct spi_statistics *, char *);
123:	static ssize_t spi_statistics_transfers_show(struct spi_statistics *, char *);
157:	static ssize_t spi_statistics_transfers_split_maxsize_show(struct spi_statistics *, char *);
1426:	static int spi_stop_queue(struct spi_controller *);
1018:	static int spi_transfer_one_message(struct spi_controller *, struct spi_message *);
322:	static int spi_uevent(struct device *, struct kobj_uevent_env *);
54:	static void spidev_release(struct device *);

File drivers/thermal/fair_share.c:
133:	int thermal_gov_fair_share_register(void);
138:	void thermal_gov_fair_share_unregister(void);
90:	static int fair_share_throttle(struct thermal_zone_device *, int);

File drivers/thermal/gov_bang_bang.c:
130:	int thermal_gov_bang_bang_register(void);
135:	void thermal_gov_bang_bang_unregister(void);
109:	static int bang_bang_control(struct thermal_zone_device *, int);

File drivers/thermal/step_wise.c:
222:	int thermal_gov_step_wise_register(void);
227:	void thermal_gov_step_wise_unregister(void);
198:	static int step_wise_throttle(struct thermal_zone_device *, int);
128:	static void thermal_zone_trip_update(struct thermal_zone_device *, int);

File drivers/thermal/thermal_core.c:
535:	int power_actor_get_max_power(struct thermal_cooling_device *, struct thermal_zone_device *, u32 *);
556:	int power_actor_get_min_power(struct thermal_cooling_device *, struct thermal_zone_device *, u32 *);
584:	int power_actor_set_power(struct thermal_cooling_device *, struct thermal_instance *, u32);
227:	int thermal_build_list_of_policies(char *);
1018:	struct thermal_cooling_device *thermal_cooling_device_register(char *, void *, const struct thermal_cooling_device_ops *);
1066:	void thermal_cooling_device_unregister(struct thermal_cooling_device *);
1416:	int thermal_generate_netlink_event(struct thermal_zone_device *, enum events);
502:	void thermal_notify_framework(struct thermal_zone_device *, int);
1041:	struct thermal_cooling_device *thermal_of_cooling_device_register(struct device_node *, char *, void *, const struct thermal_cooling_device_ops *);
125:	int thermal_register_governor(struct thermal_governor *);
179:	void thermal_unregister_governor(struct thermal_governor *);
675:	int thermal_zone_bind_cooling_device(struct thermal_zone_device *, int, struct thermal_cooling_device *, unsigned long, unsigned long, unsigned int);
606:	void thermal_zone_device_rebind_exception(struct thermal_zone_device *, const char *, size_t);
1180:	struct thermal_zone_device *thermal_zone_device_register(const char *, int, int, void *, struct thermal_zone_device_ops *, struct thermal_zone_params *, int, int);
205:	int thermal_zone_device_set_policy(struct thermal_zone_device *, char *);
626:	void thermal_zone_device_unbind_exception(struct thermal_zone_device *, const char *, size_t);
1309:	void thermal_zone_device_unregister(struct thermal_zone_device *);
468:	void thermal_zone_device_update(struct thermal_zone_device *, enum thermal_notify_event);
1374:	struct thermal_zone_device *thermal_zone_get_zone_by_name(const char *);
800:	int thermal_zone_unbind_cooling_device(struct thermal_zone_device *, int, struct thermal_cooling_device *);
862:	static void __bind(struct thermal_zone_device *, int, struct thermal_cooling_device *, unsigned long *, unsigned int);
59:	static struct thermal_governor *__find_governor(const char *);
943:	static struct thermal_cooling_device *__thermal_cooling_device_register(struct device_node *, char *, void *, const struct thermal_cooling_device_ops *);
1049:	static void __unbind(struct thermal_zone_device *, int, struct thermal_cooling_device *);
406:	static void handle_thermal_trip(struct thermal_zone_device *, int);
1567:	static void thermal_exit(void);
1524:	static int thermal_init(void);
1493:	static int thermal_pm_notify(struct notifier_block *, unsigned long, void *);
832:	static void thermal_release(struct device *);
103:	static int thermal_set_governor(struct thermal_zone_device *, struct thermal_governor *);
508:	static void thermal_zone_device_check(struct work_struct *);
289:	static void thermal_zone_device_set_polling(struct thermal_zone_device *, int);

File drivers/thermal/thermal_helpers.c:
44:	struct thermal_instance *get_thermal_instance(struct thermal_zone_device *, struct thermal_cooling_device *, int);
25:	int get_tz_trend(struct thermal_zone_device *, int);
166:	void thermal_cdev_update(struct thermal_cooling_device *);
220:	int thermal_zone_get_offset(struct thermal_zone_device *);
205:	int thermal_zone_get_slope(struct thermal_zone_device *);
77:	int thermal_zone_get_temp(struct thermal_zone_device *, int *);
116:	void thermal_zone_set_trips(struct thermal_zone_device *);

File drivers/thermal/thermal_hwmon.c:
130:	int thermal_add_hwmon_sysfs(struct thermal_zone_device *);
214:	void thermal_remove_hwmon_sysfs(struct thermal_zone_device *);
67:	static ssize_t temp_crit_show(struct device *, struct device_attribute *, char *);
47:	static ssize_t temp_input_show(struct device *, struct device_attribute *, char *);
87:	static struct thermal_hwmon_device *thermal_hwmon_lookup_by_type(const struct thermal_zone_device *);

File drivers/thermal/thermal_sysfs.c:
963:	void thermal_cooling_device_destroy_sysfs(struct thermal_cooling_device *);
957:	void thermal_cooling_device_setup_sysfs(struct thermal_cooling_device *);
623:	int thermal_zone_create_device_groups(struct thermal_zone_device *, int);
655:	void thermal_zone_destroy_device_groups(struct thermal_zone_device *);
970:	ssize_t trip_point_show(struct device *, struct device_attribute *, char *);
984:	ssize_t weight_show(struct device *, struct device_attribute *, char *);
993:	ssize_t weight_store(struct device *, struct device_attribute *, const char *, size_t);
287:	static ssize_t available_policies_show(struct device *, struct device_attribute *, char *);
668:	static ssize_t cdev_type_show(struct device *, struct device_attribute *, char *);
688:	static ssize_t cur_state_show(struct device *, struct device_attribute *, char *);
702:	static ssize_t cur_state_store(struct device *, struct device_attribute *, const char *, size_t);
387:	static ssize_t integral_cutoff_show(struct device *, struct device_attribute *, char *);
387:	static ssize_t integral_cutoff_store(struct device *, struct device_attribute *, const char *, size_t);
386:	static ssize_t k_d_show(struct device *, struct device_attribute *, char *);
386:	static ssize_t k_d_store(struct device *, struct device_attribute *, const char *, size_t);
385:	static ssize_t k_i_show(struct device *, struct device_attribute *, char *);
385:	static ssize_t k_i_store(struct device *, struct device_attribute *, const char *, size_t);
383:	static ssize_t k_po_show(struct device *, struct device_attribute *, char *);
383:	static ssize_t k_po_store(struct device *, struct device_attribute *, const char *, size_t);
384:	static ssize_t k_pu_show(struct device *, struct device_attribute *, char *);
384:	static ssize_t k_pu_store(struct device *, struct device_attribute *, const char *, size_t);
675:	static ssize_t max_state_show(struct device *, struct device_attribute *, char *);
49:	static ssize_t mode_show(struct device *, struct device_attribute *, char *);
67:	static ssize_t mode_store(struct device *, struct device_attribute *, const char *, size_t);
389:	static ssize_t offset_show(struct device *, struct device_attribute *, char *);
389:	static ssize_t offset_store(struct device *, struct device_attribute *, const char *, size_t);
253:	static ssize_t passive_show(struct device *, struct device_attribute *, char *);
219:	static ssize_t passive_store(struct device *, struct device_attribute *, const char *, size_t);
279:	static ssize_t policy_show(struct device *, struct device_attribute *, char *);
262:	static ssize_t policy_store(struct device *, struct device_attribute *, const char *, size_t);
388:	static ssize_t slope_show(struct device *, struct device_attribute *, char *);
388:	static ssize_t slope_store(struct device *, struct device_attribute *, const char *, size_t);
322:	static ssize_t sustainable_power_show(struct device *, struct device_attribute *, char *);
334:	static ssize_t sustainable_power_store(struct device *, struct device_attribute *, const char *, size_t);
35:	static ssize_t temp_show(struct device *, struct device_attribute *, char *);
437:	static umode_t thermal_zone_mode_is_visible(struct kobject *, struct attribute *, int);
463:	static umode_t thermal_zone_passive_is_visible(struct kobject *, struct attribute *, int);
200:	static ssize_t trip_point_hyst_show(struct device *, struct device_attribute *, char *);
170:	static ssize_t trip_point_hyst_store(struct device *, struct device_attribute *, const char *, size_t);
148:	static ssize_t trip_point_temp_show(struct device *, struct device_attribute *, char *);
122:	static ssize_t trip_point_temp_store(struct device *, struct device_attribute *, const char *, size_t);
90:	static ssize_t trip_point_type_show(struct device *, struct device_attribute *, char *);
27:	static ssize_t type_show(struct device *, struct device_attribute *, char *);

File drivers/thermal/user_space.c:
60:	int thermal_gov_user_space_register(void);
65:	void thermal_gov_user_space_unregister(void);
37:	static int notify_user_space(struct thermal_zone_device *, int);

File drivers/thunderbolt/cap.c:
33:	int tb_port_find_cap(struct tb_port *, enum tb_port_cap);
95:	int tb_switch_find_vse_cap(struct tb_switch *, enum tb_switch_vse_cap);

File drivers/thunderbolt/ctl.c:
715:	int tb_cfg_error(struct tb_ctl *, u64, u32, enum tb_cfg_error);
996:	int tb_cfg_get_upstream_port(struct tb_ctl *, u64);
933:	int tb_cfg_read(struct tb_ctl *, void *, u64, u32, enum tb_cfg_space, u32, u32);
812:	struct tb_cfg_result tb_cfg_read_raw(struct tb_ctl *, void *, u64, u32, enum tb_cfg_space, u32, u32, int);
503:	int tb_cfg_request(struct tb_ctl *, struct tb_cfg_request *, void (*)(void *), void *);
65:	struct tb_cfg_request *tb_cfg_request_alloc(void);
545:	void tb_cfg_request_cancel(struct tb_cfg_request *, int);
82:	void tb_cfg_request_get(struct tb_cfg_request *);
103:	void tb_cfg_request_put(struct tb_cfg_request *);
569:	struct tb_cfg_result tb_cfg_request_sync(struct tb_ctl *, struct tb_cfg_request *, int);
777:	struct tb_cfg_result tb_cfg_reset(struct tb_ctl *, u64, int);
960:	int tb_cfg_write(struct tb_ctl *, const void *, u64, u32, enum tb_cfg_space, u32, u32);
875:	struct tb_cfg_result tb_cfg_write_raw(struct tb_ctl *, const void *, u64, u32, enum tb_cfg_space, u32, u32, int);
601:	struct tb_ctl *tb_ctl_alloc(struct tb_nhi *, event_cb, void *);
648:	void tb_ctl_free(struct tb_ctl *);
673:	void tb_ctl_start(struct tb_ctl *);
693:	void tb_ctl_stop(struct tb_ctl *);
196:	static int check_config_address(struct tb_cfg_address, enum tb_cfg_space, u32, u32);
168:	static int check_header(const struct ctl_pkg *, u32, enum tb_cfg_pkg_type, u64);
754:	static bool tb_cfg_copy(struct tb_cfg_request *, const struct ctl_pkg *);
727:	static bool tb_cfg_match(const struct tb_cfg_request *, const struct ctl_pkg *);
254:	static void tb_cfg_print_error(const struct tb_cfg_result *, struct tb_ctl *);
553:	static void tb_cfg_request_complete(void *);
128:	static void tb_cfg_request_dequeue(struct tb_cfg_request *);
482:	static void tb_cfg_request_work(struct work_struct *);
307:	static struct ctl_pkg *tb_ctl_pkg_alloc(struct tb_ctl *);
298:	static void tb_ctl_pkg_free(struct ctl_pkg *);
406:	static void tb_ctl_rx_callback(struct tb_ring *, struct ring_frame *, bool);
339:	static int tb_ctl_tx(struct tb_ctl *, const void *, size_t, enum tb_cfg_pkg_type);
325:	static void tb_ctl_tx_callback(struct tb_ring *, struct ring_frame *, bool);

File drivers/thunderbolt/dma_port.c:
204:	struct tb_dma_port *dma_port_alloc(struct tb_switch *);
366:	int dma_port_flash_read(struct tb_dma_port *, unsigned int, void *, size_t);
461:	int dma_port_flash_update_auth(struct tb_dma_port *);
484:	int dma_port_flash_update_auth_status(struct tb_dma_port *, u32 *);
411:	int dma_port_flash_write(struct tb_dma_port *, unsigned int, const void *, size_t);
234:	void dma_port_free(struct tb_dma_port *);
514:	int dma_port_power_cycle(struct tb_dma_port *);
85:	static bool dma_port_copy(struct tb_cfg_request *, const struct ctl_pkg *);
68:	static bool dma_port_match(const struct tb_cfg_request *, const struct ctl_pkg *);
91:	static int dma_port_read(struct tb_ctl *, void *, u64, u32, u32, u32, int);
281:	static int dma_port_request(struct tb_dma_port *, u32, unsigned int);
132:	static int dma_port_write(struct tb_ctl *, const void *, u64, u32, u32, u32, int);

File drivers/thunderbolt/domain.c:
403:	int tb_domain_add(struct tb *);
326:	struct tb *tb_domain_alloc(struct tb_nhi *, size_t);
570:	int tb_domain_approve_switch(struct tb *, struct tb_switch *);
596:	int tb_domain_approve_switch_key(struct tb *, struct tb_switch *);
722:	int tb_domain_approve_xdomain_paths(struct tb *, struct tb_xdomain *);
628:	int tb_domain_challenge_switch_key(struct tb *, struct tb_switch *);
533:	void tb_domain_complete(struct tb *);
773:	int tb_domain_disconnect_all_paths(struct tb *);
702:	int tb_domain_disconnect_pcie_paths(struct tb *);
742:	int tb_domain_disconnect_xdomain_paths(struct tb *, struct tb_xdomain *);
798:	void tb_domain_exit(void);
784:	int tb_domain_init(void);
470:	void tb_domain_remove(struct tb *);
515:	int tb_domain_resume_noirq(struct tb *);
550:	int tb_domain_runtime_resume(struct tb *);
539:	int tb_domain_runtime_suspend(struct tb *);
528:	int tb_domain_suspend(struct tb *);
489:	int tb_domain_suspend_noirq(struct tb *);
50:	static const struct tb_service_id *__tb_service_match(struct device *, struct device_driver *);
124:	static ssize_t boot_acl_show(struct device *, struct device_attribute *, char *);
166:	static ssize_t boot_acl_store(struct device *, struct device_attribute *, const char *, size_t);
750:	static int disconnect_xdomain(struct device *, void *);
261:	static umode_t domain_attr_is_visible(struct kobject *, struct attribute *, int);
242:	static ssize_t security_show(struct device *, struct device_attribute *, char *);
370:	static bool tb_domain_event_cb(void *, enum tb_cfg_pkg_type, const void *, size_t);
296:	static void tb_domain_release(struct device *);
73:	static int tb_service_match(struct device *, struct device_driver *);
78:	static int tb_service_probe(struct device *);
90:	static int tb_service_remove(struct device *);
102:	static void tb_service_shutdown(struct device *);

File drivers/thunderbolt/eeprom.c:
489:	int tb_drom_read(struct tb_switch *);
276:	int tb_drom_read_uid_only(struct tb_switch *, u64 *);
40:	static int tb_eeprom_active(struct tb_switch *, bool);
24:	static int tb_eeprom_ctl_read(struct tb_switch *, struct tb_eeprom_ctl *);
16:	static int tb_eeprom_ctl_write(struct tb_switch *, struct tb_eeprom_ctl *);
243:	static int tb_eeprom_get_drom_offset(struct tb_switch *, u16 *);
94:	static int tb_eeprom_out(struct tb_switch *, u8);
135:	static int tb_eeprom_read_n(struct tb_switch *, u16, u8 *, size_t);

File drivers/thunderbolt/icm.c:
1955:	struct tb *icm_probe(struct tb_nhi *);
1445:	static int __icm_driver_ready(struct tb *, enum tb_security_level *, size_t *, bool *);
463:	static void add_switch(struct tb_switch *, u64, const uuid_t *, const u8 *, u8, u8, u8, u8, enum tb_security_level, bool, bool, size_t);
541:	static void add_xdomain(struct tb_switch *, u64, const uuid_t *, const uuid_t *, u8, u8);
1263:	static int icm_ar_driver_ready(struct tb *, enum tb_security_level *, size_t *, bool *);
1311:	static int icm_ar_get_boot_acl(struct tb *, uuid_t *, size_t);
1241:	static int icm_ar_get_mode(struct tb *);
1289:	static int icm_ar_get_route(struct tb *, u8, u8, u64 *);
1208:	static bool icm_ar_is_supported(struct tb *);
1348:	static int icm_ar_set_boot_acl(struct tb *, const uuid_t *, size_t);
1816:	static void icm_complete(struct tb *);
187:	static bool icm_copy(struct tb_cfg_request *, const struct ctl_pkg *);
1894:	static int icm_disconnect_pcie_paths(struct tb *);
1706:	static int icm_driver_ready(struct tb *);
361:	static int icm_fr_add_switch_key(struct tb *, struct tb_switch *);
334:	static int icm_fr_approve_switch(struct tb *, struct tb_switch *);
418:	static int icm_fr_approve_xdomain_paths(struct tb *, struct tb_xdomain *);
388:	static int icm_fr_challenge_switch_key(struct tb *, struct tb_switch *, const u8 *, u8 *);
582:	static void icm_fr_device_connected(struct tb *, const struct icm_pkg_header *);
709:	static void icm_fr_device_disconnected(struct tb *, const struct icm_pkg_header *);
446:	static int icm_fr_disconnect_xdomain_paths(struct tb *, struct tb_xdomain *);
313:	static int icm_fr_driver_ready(struct tb *, enum tb_security_level *, size_t *, bool *);
256:	static int icm_fr_get_route(struct tb *, u8, u8, u64 *);
240:	static bool icm_fr_is_supported(struct tb *);
307:	static void icm_fr_save_devices(struct tb *);
737:	static void icm_fr_xdomain_connected(struct tb *, const struct icm_pkg_header *);
821:	static void icm_fr_xdomain_disconnected(struct tb *, const struct icm_pkg_header *);
1777:	static void icm_free_unplugged_children(struct tb_switch *);
1428:	static void icm_handle_event(struct tb *, enum tb_cfg_pkg_type, const void *, size_t);
1392:	static void icm_handle_notification(struct work_struct *);
173:	static bool icm_match(const struct tb_cfg_request *, const struct ctl_pkg *);
200:	static int icm_request(struct tb *, const void *, size_t, void *, size_t, size_t, unsigned int);
1805:	static void icm_rescan_work(struct work_struct *);
1590:	static int icm_reset_phy_port(struct tb *, int);
1845:	static int icm_runtime_resume(struct tb *);
1839:	static int icm_runtime_suspend(struct tb *);
1855:	static int icm_start(struct tb *);
1884:	static void icm_stop(struct tb *);
1737:	static int icm_suspend(struct tb *);
893:	static int icm_tr_add_switch_key(struct tb *, struct tb_switch *);
866:	static int icm_tr_approve_switch(struct tb *, struct tb_switch *);
952:	static int icm_tr_approve_xdomain_paths(struct tb *, struct tb_xdomain *);
921:	static int icm_tr_challenge_switch_key(struct tb *, struct tb_switch *, const u8 *, u8 *);
1019:	static void icm_tr_device_connected(struct tb *, const struct icm_pkg_header *);
1092:	static void icm_tr_device_disconnected(struct tb *, const struct icm_pkg_header *);
1006:	static int icm_tr_disconnect_xdomain_paths(struct tb *, struct tb_xdomain *);
840:	static int icm_tr_driver_ready(struct tb *, enum tb_security_level *, size_t *, bool *);
1112:	static void icm_tr_xdomain_connected(struct tb *, const struct icm_pkg_header *);
1164:	static void icm_tr_xdomain_disconnected(struct tb *, const struct icm_pkg_header *);
980:	static int icm_tr_xdomain_tear_down(struct tb *, int, struct tb_xdomain *, struct tb_xdomain *);
1754:	static void icm_unplug_children(struct tb_switch *);
1478:	static int pci2cio_wait_completion(struct icm *, struct icm *, unsigned long);
1498:	static int pcie2cio_read(struct icm *, unsigned int, u32 *, unsigned int, enum tb_cfg_space);
1519:	static int pcie2cio_write(struct icm *, enum tb_cfg_space, unsigned int, unsigned int, u32);
532:	static void remove_switch(struct tb_switch *);
572:	static void remove_xdomain(struct tb_xdomain *);

File drivers/thunderbolt/nhi.c:
276:	int __tb_ring_enqueue(struct tb_ring *, struct ring_frame *);
757:	int nhi_mailbox_cmd(struct tb_nhi *, enum nhi_mailbox_cmd, u32);
792:	enum nhi_fw_mode nhi_mailbox_mode(struct tb_nhi *);
575:	struct tb_ring *tb_ring_alloc_rx(struct tb_nhi *, int, int, unsigned int, u16, u16, void (*)(void *), void *);
555:	struct tb_ring *tb_ring_alloc_tx(struct tb_nhi *, int, int, unsigned int);
705:	void tb_ring_free(struct tb_ring *);
302:	struct ring_frame *tb_ring_poll(struct tb_ring *);
370:	void tb_ring_poll_complete(struct tb_ring *);
589:	void tb_ring_start(struct tb_ring *);
660:	void tb_ring_stop(struct tb_ring *);
350:	static void __ring_interrupt(struct tb_ring *);
334:	static void __ring_interrupt_mask(struct tb_ring *, bool);
912:	static void nhi_complete(struct device *);
115:	static void nhi_disable_interrupts(struct tb_nhi *, struct tb_nhi *);
870:	static void nhi_enable_int_throttling(struct tb_nhi *);
1189:	static int nhi_init(void);
803:	static void nhi_interrupt_work(struct work_struct *);
855:	static irqreturn_t nhi_msi(int, void *);
1012:	static int nhi_probe(struct pci_dev *, const struct pci_device_id *);
1098:	static void nhi_remove(struct pci_dev *);
886:	static int nhi_resume_noirq(struct device *);
936:	static int nhi_runtime_resume(struct device *);
928:	static int nhi_runtime_suspend(struct device *);
945:	static void nhi_shutdown(struct tb_nhi *);
904:	static int nhi_suspend(struct device *);
862:	static int nhi_suspend_noirq(struct device *);
1202:	static void nhi_unload(void);
54:	static void ring_interrupt_active(struct tb_ring *, bool);
161:	static void ring_iowrite32desc(struct tb_ring *, u32, u32);
172:	static void ring_iowrite32options(struct tb_ring *, u32, u32);
166:	static void ring_iowrite64desc(struct tb_ring *, u64, u32);
383:	static irqreturn_t ring_msix(int, void *);
419:	static void ring_release_msix(struct tb_ring *);
226:	static void ring_work(struct work_struct *);
192:	static void ring_write_descriptors(struct tb_ring *);
486:	static struct tb_ring *tb_ring_alloc(struct tb_nhi *, u32, int, bool, unsigned int, u16, u16, void (*)(void *), void *);

File drivers/thunderbolt/path.c:
116:	int tb_path_activate(struct tb_path *);
36:	struct tb_path *tb_path_alloc(struct tb *, int);
91:	void tb_path_deactivate(struct tb_path *);
54:	void tb_path_free(struct tb_path *);
225:	bool tb_path_is_invalid(struct tb_path *);
77:	static void __tb_path_deactivate_hops(int, struct tb_path *, struct tb_path *);
64:	static void __tb_path_deallocate_nfc(struct tb_path *, int);

File drivers/thunderbolt/property.c:
538:	int tb_property_add_data(struct tb_property_dir *, const char *, const void *, size_t);
608:	int tb_property_add_dir(struct tb_property_dir *, const char *, struct tb_property_dir *);
509:	int tb_property_add_immediate(struct tb_property_dir *, const char *, u32);
574:	int tb_property_add_text(struct tb_property_dir *, const char *, const char *);
241:	struct tb_property_dir *tb_property_create_dir(const uuid_t *);
650:	struct tb_property *tb_property_find(struct tb_property_dir *, const char *, enum tb_property_type);
487:	ssize_t tb_property_format_dir(const struct tb_property_dir *, u32 *, size_t);
292:	void tb_property_free_dir(struct tb_property_dir *);
669:	struct tb_property *tb_property_get_next(struct tb_property_dir *, struct tb_property *);
219:	struct tb_property_dir *tb_property_parse_dir(const u32 *, size_t);
634:	void tb_property_remove(struct tb_property *);
347:	static ssize_t __tb_property_format_dir(const struct tb_property_dir *, u32 *, unsigned int, size_t);
164:	static struct tb_property_dir *__tb_property_parse_dir(const u32 *, size_t, unsigned int, size_t, bool);
83:	static struct tb_property *tb_property_alloc(const char *, enum tb_property_type);
308:	static size_t tb_property_dir_length(const struct tb_property_dir *, bool, size_t *);
77:	static bool tb_property_key_valid(const char *);

File drivers/thunderbolt/switch.c:
660:	struct tb_switch *get_switch_at_route(struct tb_switch *, u64);
556:	int tb_port_add_nfc_credits(struct tb_port *, int);
575:	int tb_port_clear_counter(struct tb_port *, int);
1534:	void tb_sw_set_unplugged(struct tb_switch *);
1434:	int tb_switch_add(struct tb_switch *);
1166:	struct tb_switch *tb_switch_alloc(struct tb *, struct device *, u64);
1250:	struct tb_switch *tb_switch_alloc_safe_mode(struct tb *, struct device *, u64);
1284:	int tb_switch_configure(struct tb_switch *);
1730:	void tb_switch_exit(void);
1662:	struct tb_switch *tb_switch_find_by_link_depth(struct tb *, u8, u8);
1711:	struct tb_switch *tb_switch_find_by_route(struct tb *, u64);
1687:	struct tb_switch *tb_switch_find_by_uuid(struct tb *, const uuid_t *);
1503:	void tb_switch_remove(struct tb_switch *);
641:	int tb_switch_reset(struct tb *, u64);
1552:	int tb_switch_resume(struct tb_switch *);
1603:	void tb_switch_suspend(struct tb_switch *);
496:	int tb_wait_for_port(struct tb_port *, bool);
45:	static struct nvm_auth_status *__nvm_get_auth_status(const struct tb_switch *);
719:	static ssize_t authorized_show(struct device *, struct device_attribute *, char *);
780:	static ssize_t authorized_store(struct device *, struct device_attribute *, const char *, size_t);
800:	static ssize_t boot_show(struct device *, struct device_attribute *, char *);
819:	static ssize_t device_name_show(struct device *, struct device_attribute *, char *);
809:	static ssize_t device_show(struct device *, struct device_attribute *, char *);
827:	static ssize_t key_show(struct device *, struct device_attribute *, char *);
845:	static ssize_t key_store(struct device *, struct device_attribute *, const char *, size_t);
894:	static void nvm_authenticate_complete(struct tb_switch *);
903:	static ssize_t nvm_authenticate_show(struct device *, struct device_attribute *, char *);
913:	static ssize_t nvm_authenticate_store(struct device *, struct device_attribute *, const char *, size_t);
93:	static void nvm_clear_auth_status(const struct tb_switch *);
57:	static void nvm_get_auth_status(const struct tb_switch *, u32 *);
68:	static void nvm_set_auth_status(const struct tb_switch *, u32);
975:	static ssize_t nvm_version_show(struct device *, struct device_attribute *, char *);
299:	static struct nvmem_device *register_nvmem(struct tb_switch *, int, size_t, bool);
1038:	static umode_t switch_attr_is_visible(struct kobject *, struct attribute *, int);
685:	static int tb_plug_events_active(struct tb_switch *, bool);
1628:	static int tb_switch_match(struct device *, void *);
253:	static int tb_switch_nvm_read(void *, unsigned int, void *, size_t);
267:	static int tb_switch_nvm_write(void *, unsigned int, void *, size_t);
1074:	static void tb_switch_release(struct device *);
1093:	static int tb_switch_runtime_suspend(struct device *);
1309:	static int tb_switch_set_uuid(struct tb_switch *);
1015:	static ssize_t unique_id_show(struct device *, struct device_attribute *, char *);
1007:	static ssize_t vendor_name_show(struct device *, struct device_attribute *, char *);
997:	static ssize_t vendor_show(struct device *, struct device_attribute *, char *);

File drivers/thunderbolt/tb.c:
453:	struct tb *tb_probe(struct tb_nhi *);
173:	static void tb_activate_pcie_devices(struct tb *);
91:	static void tb_free_invalid_tunnels(struct tb *);
109:	static void tb_free_unplugged_children(struct tb_switch *);
319:	static void tb_handle_event(struct tb *, enum tb_cfg_pkg_type, const void *, size_t);
250:	static void tb_handle_hotplug(struct work_struct *);
415:	static int tb_resume_noirq(struct tb *);
48:	static void tb_scan_port(struct tb_port *);
365:	static int tb_start(struct tb *);
350:	static void tb_stop(struct tb *);
403:	static int tb_suspend_noirq(struct tb *);

File drivers/thunderbolt/tunnel_pci.c:
196:	int tb_pci_activate(struct tb_pci_tunnel *);
59:	struct tb_pci_tunnel *tb_pci_alloc(struct tb *, struct tb_port *, struct tb_port *);
212:	void tb_pci_deactivate(struct tb_pci_tunnel *);
120:	void tb_pci_free(struct tb_pci_tunnel *);
134:	bool tb_pci_is_invalid(struct tb_pci_tunnel *);
162:	int tb_pci_restart(struct tb_pci_tunnel *);
148:	static int tb_pci_port_active(struct tb_port *, bool);

File drivers/thunderbolt/xdomain.c:
1524:	int tb_register_property_dir(const char *, struct tb_property_dir *);
433:	int tb_register_protocol_handler(struct tb_protocol_handler *);
555:	int tb_register_service_driver(struct tb_service_driver *);
1569:	void tb_unregister_property_dir(const char *, struct tb_property_dir *);
454:	void tb_unregister_protocol_handler(struct tb_protocol_handler *);
568:	void tb_unregister_service_driver(struct tb_service_driver *);
1166:	void tb_xdomain_add(struct tb_xdomain *);
1106:	struct tb_xdomain *tb_xdomain_alloc(struct tb *, struct device *, u64, const uuid_t *, const uuid_t *);
1259:	int tb_xdomain_disable_paths(struct tb_xdomain *);
1223:	int tb_xdomain_enable_paths(struct tb_xdomain *, u16, u16, u16, u16);
1613:	void tb_xdomain_exit(void);
1365:	struct tb_xdomain *tb_xdomain_find_by_link_depth(struct tb *, u8, u8);
1394:	struct tb_xdomain *tb_xdomain_find_by_route(struct tb *, u64);
1336:	struct tb_xdomain *tb_xdomain_find_by_uuid(struct tb *, const uuid_t *);
1407:	bool tb_xdomain_handle_request(struct tb *, enum tb_cfg_pkg_type, const void *, size_t);
1583:	int tb_xdomain_init(void);
1186:	void tb_xdomain_remove(struct tb_xdomain *);
178:	int tb_xdomain_request(struct tb_xdomain *, const void *, size_t, enum tb_cfg_pkg_type, void *, size_t, enum tb_cfg_pkg_type, unsigned int);
126:	int tb_xdomain_response(struct tb_xdomain *, const void *, size_t, enum tb_cfg_pkg_type);
133:	static int __tb_xdomain_request(struct tb_ctl *, const void *, size_t, enum tb_cfg_pkg_type, void *, size_t, enum tb_cfg_pkg_type, unsigned int);
96:	static int __tb_xdomain_response(struct tb_ctl *, const void *, size_t, enum tb_cfg_pkg_type);
961:	static ssize_t device_name_show(struct device *, struct device_attribute *, char *);
951:	static ssize_t device_show(struct device *, struct device_attribute *, char *);
702:	static int find_service(struct device *, void *);
574:	static ssize_t key_show(struct device *, struct device_attribute *, char *);
593:	static ssize_t modalias_show(struct device *, struct device_attribute *, char *);
604:	static ssize_t prtcid_show(struct device *, struct device_attribute *, char *);
622:	static ssize_t prtcrevs_show(struct device *, struct device_attribute *, char *);
631:	static ssize_t prtcstns_show(struct device *, struct device_attribute *, char *);
613:	static ssize_t prtcvers_show(struct device *, struct device_attribute *, char *);
1452:	static int rebuild_property_block(void);
1499:	static bool remove_directory(const char *, const struct tb_property_dir *);
686:	static int remove_missing_service(struct device *, void *);
91:	static void response_ready(void *);
1042:	static void start_handshake(struct tb_xdomain *);
1285:	static struct tb_xdomain *switch_find_xdomain(struct tb_switch *, const struct tb_xdomain_lookup *);
668:	static void tb_service_release(struct device *);
659:	static int tb_service_uevent(struct device *, struct kobj_uevent_env *);
83:	static bool tb_xdomain_copy(struct tb_cfg_request *, const struct ctl_pkg *);
838:	static void tb_xdomain_get_properties(struct work_struct *);
50:	static bool tb_xdomain_match(const struct tb_cfg_request *, const struct ctl_pkg *);
932:	static void tb_xdomain_properties_changed(struct work_struct *);
1026:	static void tb_xdomain_release(struct device *);
826:	static void tb_xdomain_restore_paths(struct tb_xdomain *);
1069:	static int tb_xdomain_resume(struct device *);
1063:	static int tb_xdomain_suspend(struct device *);
228:	static int tb_xdp_error_response(struct tb_ctl *, u64, u8, enum tb_xdp_error);
462:	static void tb_xdp_handle_request(struct work_struct *);
999:	static ssize_t unique_id_show(struct device *, struct device_attribute *, char *);
1172:	static int unregister_service(struct device *, void *);
1481:	static int update_xdomain(struct device *, void *);
985:	static ssize_t vendor_name_show(struct device *, struct device_attribute *, char *);
975:	static ssize_t vendor_show(struct device *, struct device_attribute *, char *);

File drivers/tty/hvc/hvc_console.c:
789:	void __hvc_resize(struct hvc_struct *, struct winsize);
922:	struct hvc_struct *hvc_alloc(uint32_t, int, const struct hv_ops *, int);
285:	int hvc_instantiate(uint32_t, int, const struct hv_ops *);
317:	void hvc_kick(void);
773:	int hvc_poll(struct hvc_struct *);
981:	int hvc_remove(struct hvc_struct *);
643:	static int __hvc_poll(struct hvc_struct *, bool);
610:	static int hvc_chars_in_buffer(struct tty_struct *);
443:	static void hvc_cleanup(struct tty_struct *);
394:	static void hvc_close(struct tty_struct *, struct file *);
197:	static struct tty_driver *hvc_console_device(struct console *, int *);
241:	static int hvc_console_init(void);
151:	static void hvc_console_print(struct console *, const char *, unsigned int);
206:	static int hvc_console_setup(struct console *, char *);
90:	static struct hvc_struct *hvc_get_by_index(int);
450:	static void hvc_hangup(struct tty_struct *);
329:	static int hvc_install(struct tty_driver *, struct tty_struct *);
351:	static int hvc_open(struct tty_struct *, struct file *);
872:	static int hvc_poll_get_char(struct tty_driver *, int);
867:	static int hvc_poll_init(struct tty_driver *, int, char *);
887:	static void hvc_poll_put_char(struct tty_driver *, int, char);
249:	static void hvc_port_destruct(struct tty_port *);
487:	static int hvc_push(struct hvc_struct *);
574:	static void hvc_set_winsz(struct work_struct *);
847:	static int hvc_tiocmget(struct tty_struct *);
856:	static int hvc_tiocmset(struct tty_struct *, unsigned int, unsigned int);
324:	static void hvc_unthrottle(struct tty_struct *);
510:	static int hvc_write(struct tty_struct *, const unsigned char *, int);
600:	static int hvc_write_room(struct tty_struct *);
801:	static int khvcd(void *);

File drivers/tty/hvc/hvc_irq.c:
29:	int notifier_add_irq(struct hvc_struct *, int);
44:	void notifier_del_irq(struct hvc_struct *, int);
52:	void notifier_hangup_irq(struct hvc_struct *, int);
13:	static irqreturn_t hvc_handle_interrupt(int, void *);

File drivers/tty/hvc/hvc_xen.c:
311:	void xen_console_resume(void);
656:	void xen_raw_console_write(const char *);
669:	void xen_raw_printk(const char *, ...);
128:	static int domU_read_console(uint32_t, char *, int);
102:	static int domU_write_console(uint32_t, const char *, int);
569:	static int xen_cons_init(void);
517:	static int xen_hvc_init(void);
187:	static int xen_hvm_console_init(void);
596:	static void xen_hvm_early_write(const char *, int, uint32_t);
248:	static int xen_pv_console_init(void);
688:	static int xenboot_earlycon_setup(struct earlycon_device *, const char *);
681:	static void xenboot_earlycon_write(struct console *, const char *, unsigned int);
606:	static int xenboot_setup_console(struct console *, char *);
618:	static void xenboot_write_console(struct console *, const char *, unsigned int);
474:	static void xencons_backend_changed(struct xenbus_device *, enum xenbus_state);
367:	static int xencons_connect_backend(struct xenbus_device *, struct xencons_info *);
322:	static void xencons_disconnect_backend(struct xencons_info *);
236:	static int xencons_info_pv_init(struct xencons_info *, int);
427:	static int xencons_probe(struct xenbus_device *, const struct xenbus_device_id *);
362:	static int xencons_remove(struct xenbus_device *);
465:	static int xencons_resume(struct xenbus_device *);

File drivers/tty/n_null.c:
18:	static void n_null_close(struct tty_struct *);
57:	static void n_null_exit(void);
51:	static int n_null_init(void);
13:	static int n_null_open(struct tty_struct *);
22:	static ssize_t n_null_read(struct tty_struct *, struct file *, unsigned char *, size_t);
34:	static void n_null_receivebuf(struct tty_struct *, const unsigned char *, char *, int);

File drivers/tty/n_tty.c:
2491:	void n_tty_inherit_ops(struct tty_ldisc_ops *);
2499:	void n_tty_init(void);
1110:	static void __isig(int, struct tty_struct *);
624:	static size_t __process_echoes(struct tty_struct *);
770:	static void commit_echoes(struct tty_struct *);
1960:	static int copy_from_read_buf(struct tty_struct *, unsigned char **, size_t *);
429:	static int do_output_char(unsigned char, struct tty_struct *, int);
937:	static void echo_char(unsigned char, struct tty_struct *);
1119:	static void isig(int, struct tty_struct *);
1886:	static void n_tty_close(struct tty_struct *);
369:	static void n_tty_flush_buffer(struct tty_struct *);
2446:	static int n_tty_ioctl(struct tty_struct *, struct file *, unsigned int, unsigned long);
202:	static void n_tty_kick_worker(struct tty_struct *);
1907:	static int n_tty_open(struct tty_struct *);
343:	static void n_tty_packet_mode_flush(struct tty_struct *);
2400:	static __poll_t n_tty_poll(struct tty_struct *, struct file *, poll_table *);
2130:	static ssize_t n_tty_read(struct tty_struct *, struct file *, unsigned char *, size_t);
1766:	static void n_tty_receive_buf(struct tty_struct *, const unsigned char *, char *, int);
1772:	static int n_tty_receive_buf2(struct tty_struct *, const unsigned char *, char *, int);
1697:	static int n_tty_receive_buf_common(struct tty_struct *, const unsigned char *, char *, int, int);
1473:	static void n_tty_receive_char_flagged(struct tty_struct *, unsigned char, char);
1493:	static void n_tty_receive_char_lnext(struct tty_struct *, unsigned char, char);
1269:	static int n_tty_receive_char_special(struct tty_struct *, unsigned char);
1239:	static void n_tty_receive_signal_char(struct tty_struct *, int, unsigned char);
1792:	static void n_tty_set_termios(struct tty_struct *, struct ktermios *);
2299:	static ssize_t n_tty_write(struct tty_struct *, struct file *, const unsigned char *, size_t);
243:	static void n_tty_write_wakeup(struct tty_struct *);
799:	static void process_echoes(struct tty_struct *);
156:	static void zero_buffer(u8 *, int, struct tty_struct *);

File drivers/tty/pty.c:
623:	int ptm_open_peer(struct file *, struct tty_struct *, int);
708:	static struct tty_struct *ptm_unix98_lookup(struct tty_driver *, struct file *, int);
811:	static int ptmx_open(struct inode *, struct file *);
724:	static struct tty_struct *pts_unix98_lookup(struct tty_driver *, struct file *, int);
154:	static int pty_chars_in_buffer(struct tty_struct *);
451:	static void pty_cleanup(struct tty_struct *);
46:	static void pty_close(struct tty_struct *, struct file *);
224:	static void pty_flush_buffer(struct tty_struct *);
962:	static int pty_init(void);
240:	static int pty_open(struct tty_struct *, struct file *);
303:	static int pty_resize(struct tty_struct *, struct winsize *);
262:	static void pty_set_termios(struct tty_struct *, struct ktermios *);
759:	static void pty_show_fdinfo(struct tty_struct *, struct seq_file *);
342:	static void pty_start(struct tty_struct *);
355:	static void pty_stop(struct tty_struct *);
685:	static long pty_unix98_compat_ioctl(struct tty_struct *, unsigned int, unsigned long);
738:	static int pty_unix98_install(struct tty_driver *, struct tty_struct *);
663:	static int pty_unix98_ioctl(struct tty_struct *, unsigned int, unsigned long);
744:	static void pty_unix98_remove(struct tty_driver *, struct tty_struct *);
93:	static void pty_unthrottle(struct tty_struct *);
111:	static int pty_write(struct tty_struct *, const unsigned char *, int);
139:	static int pty_write_room(struct tty_struct *);

File drivers/tty/serial/8250/8250_core.c:
710:	int early_serial_setup(struct uart_port *);
415:	struct uart_8250_port *serial8250_get_port(int);
977:	int serial8250_register_8250_port(struct uart_8250_port *);
775:	void serial8250_resume_port(int);
424:	void serial8250_set_isa_configurator(void (*)(int, struct uart_port *, u32 *));
752:	void serial8250_suspend_port(int);
1109:	void serial8250_unregister_port(int);
269:	static void serial8250_backup_timeout(struct timer_list *);
1195:	static void serial8250_exit(void);
1138:	static int serial8250_init(void);
107:	static irqreturn_t serial8250_interrupt(int, void *);
499:	static void serial8250_isa_init_ports(void);
800:	static int serial8250_probe(struct platform_device *);
378:	static void serial8250_release_rsa_resource(struct uart_8250_port *);
848:	static int serial8250_remove(struct platform_device *);
357:	static int serial8250_request_rsa_resource(struct uart_8250_port *);
875:	static int serial8250_resume(struct platform_device *);
861:	static int serial8250_suspend(struct platform_device *, pm_message_t);
261:	static void serial8250_timeout(struct timer_list *);
949:	static void serial_8250_overrun_backoff_work(struct work_struct *);
155:	static void serial_do_unlink(struct irq_info *, struct uart_8250_port *);
433:	static void univ8250_config_port(struct uart_port *, int);
679:	static int univ8250_console_init(void);
633:	static int univ8250_console_match(struct console *, char *, int, char *);
593:	static int univ8250_console_setup(struct console *, char *);
585:	static void univ8250_console_write(struct console *, const char *, unsigned int);
346:	static void univ8250_release_irq(struct uart_8250_port *);
474:	static void univ8250_release_port(struct uart_port *);
459:	static int univ8250_request_port(struct uart_port *);
316:	static int univ8250_setup_irq(struct uart_8250_port *);

File drivers/tty/serial/8250/8250_dma.c:
247:	void serial8250_release_dma(struct uart_8250_port *);
151:	int serial8250_request_dma(struct uart_8250_port *);
114:	int serial8250_rx_dma(struct uart_8250_port *);
139:	void serial8250_rx_dma_flush(struct uart_8250_port *);
64:	int serial8250_tx_dma(struct uart_8250_port *);
45:	static void __dma_rx_complete(void *);
14:	static void __dma_tx_complete(void *);

File drivers/tty/serial/8250/8250_dw.c:
108:	static void dw8250_check_lcr(struct uart_port *, int);
294:	static void dw8250_do_pm(struct uart_port *, unsigned int, unsigned int);
361:	static bool dw8250_fallback_dma_filter(struct dma_chan *, void *);
381:	static unsigned int dw8250_get_divisor(struct uart_port *, unsigned int, unsigned int *);
252:	static int dw8250_handle_irq(struct uart_port *);
366:	static bool dw8250_idma_filter(struct dma_chan *, void *);
778:	static void dw8250_platform_driver_exit(void);
778:	static int dw8250_platform_driver_init(void);
493:	static int dw8250_probe(struct platform_device *);
667:	static int dw8250_remove(struct platform_device *);
699:	static int dw8250_resume(struct device *);
723:	static int dw8250_runtime_resume(struct device *);
710:	static int dw8250_runtime_suspend(struct device *);
186:	static unsigned int dw8250_serial_in(struct uart_port *, int);
227:	static unsigned int dw8250_serial_in32(struct uart_port *, int);
176:	static void dw8250_serial_out(struct uart_port *, int, int);
217:	static void dw8250_serial_out32(struct uart_port *, int, int);
395:	static void dw8250_set_divisor(struct uart_port *, unsigned int, unsigned int, unsigned int);
337:	static void dw8250_set_ldisc(struct uart_port *, struct ktermios *);
305:	static void dw8250_set_termios(struct uart_port *, struct ktermios *, struct ktermios *);
690:	static int dw8250_suspend(struct device *);

File drivers/tty/serial/8250/8250_early.c:
135:	int early_serial8250_setup(struct earlycon_device *, const char *);
103:	static void early_serial8250_write(struct console *, const char *, unsigned int);
37:	static unsigned int serial8250_early_in(struct uart_port *, int);
60:	static void serial8250_early_out(struct uart_port *, int, int);
89:	static void serial_putc(struct uart_port *, int);

File drivers/tty/serial/8250/8250_exar.c:
239:	static void *__xr17v35x_register_gpio(struct pci_dev *, const struct property_entry *);
443:	static irqreturn_t exar_misc_handler(int, void *);
707:	static void exar_pci_driver_exit(void);
707:	static int exar_pci_driver_init(void);
458:	static int exar_pci_probe(struct pci_dev *, const struct pci_device_id *);
530:	static void exar_pci_remove(struct pci_dev *);
559:	static int exar_resume(struct device *);
542:	static int exar_suspend(struct device *);
276:	static int generic_rs485_config(struct uart_port *, struct serial_rs485 *);
343:	static int iot2040_register_gpio(struct pci_dev *, struct uart_8250_port *);
304:	static int iot2040_rs485_config(struct uart_port *, struct serial_rs485 *);
194:	static int pci_connect_tech_setup(struct exar8250 *, struct pci_dev *, struct uart_8250_port *, int);
146:	static int pci_fastcom335_setup(struct exar8250 *, struct pci_dev *, struct uart_8250_port *, int);
205:	static int pci_xr17c154_setup(struct exar8250 *, struct pci_dev *, struct uart_8250_port *, int);
424:	static void pci_xr17v35x_exit(struct pci_dev *);
377:	static int pci_xr17v35x_setup(struct exar8250 *, struct pci_dev *, struct uart_8250_port *, int);
266:	static int xr17v35x_register_gpio(struct pci_dev *, struct uart_8250_port *);

File drivers/tty/serial/8250/8250_lpss.c:
99:	static unsigned int byt_get_mctrl(struct uart_port *);
109:	static int byt_serial_setup(struct lpss8250 *, struct uart_port *);
61:	static void byt_set_termios(struct uart_port *, struct ktermios *, struct ktermios *);
232:	static bool lpss8250_dma_filter(struct dma_chan *, void *);
373:	static void lpss8250_pci_driver_exit(void);
373:	static int lpss8250_pci_driver_init(void);
274:	static int lpss8250_probe(struct pci_dev *, const struct pci_device_id *);
329:	static void lpss8250_remove(struct pci_dev *);
227:	static void qrk_serial_exit(struct lpss8250 *);
210:	static int qrk_serial_setup(struct lpss8250 *, struct uart_port *);

File drivers/tty/serial/8250/8250_mid.c:
190:	static void dnv_exit(struct mid8250 *);
127:	static int dnv_handle_irq(struct uart_port *);
158:	static int dnv_setup(struct mid8250 *, struct uart_port *);
235:	static bool mid8250_dma_filter(struct dma_chan *, void *);
391:	static void mid8250_pci_driver_exit(void);
391:	static int mid8250_pci_driver_init(void);
281:	static int mid8250_probe(struct pci_dev *, const struct pci_device_id *);
339:	static void mid8250_remove(struct pci_dev *);
199:	static void mid8250_set_termios(struct uart_port *, struct ktermios *, struct ktermios *);
53:	static int pnw_setup(struct mid8250 *, struct uart_port *);
76:	static int tng_handle_irq(struct uart_port *);
107:	static int tng_setup(struct mid8250 *, struct uart_port *);

File drivers/tty/serial/8250/8250_pci.c:
3601:	struct serial_private *pciserial_init_ports(struct pci_dev *, const struct pciserial_board *);
3693:	void pciserial_remove_ports(struct serial_private *);
3716:	void pciserial_resume_ports(struct serial_private *);
3700:	void pciserial_suspend_ports(struct serial_private *);
102:	static int addidata_apci7800_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
130:	static int afavlab_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
1355:	static int ce4100_serial_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
2523:	static struct pci_serial_quirk *find_quirk(struct pci_dev *);
1557:	static void kt_handle_break(struct uart_port *);
1568:	static unsigned int kt_serial_in(struct uart_port *, int);
1591:	static int kt_serial_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
59:	static void moan_device(const char *, struct pci_dev *);
1052:	static int pci_asix_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
1379:	static int pci_brcm_trumanage_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
1309:	static int pci_default_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
1601:	static int pci_eg20t_init(struct pci_dev *);
993:	static int pci_endrun_init(struct pci_dev *);
1473:	static int pci_fintek_init(struct pci_dev *);
1396:	static int pci_fintek_rs485_config(struct uart_port *, struct serial_rs485 *);
1442:	static int pci_fintek_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
153:	static int pci_hp_diva_init(struct pci_dev *);
184:	static int pci_hp_diva_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
214:	static int pci_inteli960ni_init(struct pci_dev *);
977:	static void pci_ite887x_exit(struct pci_dev *);
883:	static int pci_ite887x_init(struct pci_dev *);
764:	static int pci_netmos_9900_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
822:	static int pci_netmos_init(struct pci_dev *);
304:	static void pci_ni8420_exit(struct pci_dev *);
663:	static int pci_ni8420_init(struct pci_dev *);
333:	static void pci_ni8430_exit(struct pci_dev *);
692:	static int pci_ni8430_init(struct pci_dev *);
737:	static int pci_ni8430_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
1371:	static int pci_omegapci_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
1025:	static int pci_oxsemi_tornado_init(struct pci_dev *);
1330:	static int pci_pericom_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
279:	static void pci_plx9050_exit(struct pci_dev *);
236:	static int pci_plx9050_init(struct pci_dev *);
1305:	static void pci_quatech_exit(struct pci_dev *);
1275:	static int pci_quatech_init(struct pci_dev *);
1291:	static int pci_quatech_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
495:	static int pci_siig_init(struct pci_dev *);
508:	static int pci_siig_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
583:	static int pci_timedia_init(struct pci_dev *);
567:	static int pci_timedia_probe(struct pci_dev *);
602:	static int pci_timedia_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
1611:	static int pci_wch_ch353_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
1631:	static int pci_wch_ch38x_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
657:	static int pci_xircom_init(struct pci_dev *);
3677:	static void pciserial_detach_ports(struct serial_private *);
3737:	static int pciserial_init_one(struct pci_dev *, const struct pci_device_id *);
3806:	static void pciserial_remove_one(struct pci_dev *);
3825:	static int pciserial_resume_one(struct device *);
3814:	static int pciserial_suspend_one(struct device *);
407:	static void sbs_exit(struct pci_dev *);
383:	static int sbs_init(struct pci_dev *);
354:	static int sbs_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
5276:	static pci_ers_result_t serial8250_io_error_detected(struct pci_dev *, pci_channel_state_t);
5307:	static void serial8250_io_resume(struct pci_dev *);
5292:	static pci_ers_result_t serial8250_io_slot_reset(struct pci_dev *);
5339:	static void serial_pci_driver_exit(void);
5339:	static int serial_pci_driver_init(void);
3525:	static int serial_pci_guess_board(struct pci_dev *, struct pciserial_board *, struct pciserial_board *);
72:	static int setup_port(struct uart_8250_port *, int, int, int, struct serial_private *);
1544:	static int skip_tx_en_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);
636:	static int titan_400l_800l_setup(struct serial_private *, const struct pciserial_board *, struct uart_8250_port *, int);

File drivers/tty/serial/8250/8250_pnp.c:
540:	void serial8250_pnp_exit(void);
535:	int serial8250_pnp_init(void);
437:	static int serial_pnp_probe(struct pnp_dev *, const struct pnp_device_id *);
492:	static void serial_pnp_remove(struct pnp_dev *);
512:	static int serial_pnp_resume(struct pnp_dev *);
502:	static int serial_pnp_suspend(struct pnp_dev *, pm_message_t);

File drivers/tty/serial/8250/8250_port.c:
581:	void serial8250_clear_and_reinit_fifos(struct uart_8250_port *);
3327:	int serial8250_console_setup(struct uart_port *, char *, bool);
3253:	void serial8250_console_write(struct uart_8250_port *, const char *, unsigned int);
1963:	unsigned int serial8250_do_get_mctrl(struct uart_port *);
2836:	void serial8250_do_pm(struct uart_port *, unsigned int, unsigned int);
2603:	void serial8250_do_set_divisor(struct uart_port *, unsigned int, unsigned int, unsigned int);
2809:	void serial8250_do_set_ldisc(struct uart_port *, struct ktermios *);
1993:	void serial8250_do_set_mctrl(struct uart_port *, unsigned int);
2662:	void serial8250_do_set_termios(struct uart_port *, struct ktermios *, struct ktermios *);
2432:	void serial8250_do_shutdown(struct uart_port *);
2134:	int serial8250_do_startup(struct uart_port *);
661:	void serial8250_em485_destroy(struct uart_8250_port *);
625:	int serial8250_em485_init(struct uart_8250_port *);
1865:	int serial8250_handle_irq(struct uart_port *, unsigned int);
3178:	void serial8250_init_port(struct uart_8250_port *);
1825:	unsigned int serial8250_modem_status(struct uart_8250_port *);
1690:	void serial8250_read_char(struct uart_8250_port *, unsigned char);
588:	void serial8250_rpm_get(struct uart_8250_port *);
679:	void serial8250_rpm_get_tx(struct uart_8250_port *);
596:	void serial8250_rpm_put(struct uart_8250_port *);
693:	void serial8250_rpm_put_tx(struct uart_8250_port *);
1757:	unsigned char serial8250_rx_chars(struct uart_8250_port *, unsigned char);
3189:	void serial8250_set_defaults(struct uart_8250_port *);
1774:	void serial8250_tx_chars(struct uart_8250_port *);
1447:	static void __do_stop_tx_rs485(struct uart_8250_port *);
754:	static int __enable_rsa(struct uart_8250_port *);
1492:	static void __stop_tx_rs485(struct uart_8250_port *);
859:	static unsigned int autoconfig_read_divisor_id(struct uart_8250_port *);
314:	static int default_serial_dl_read(struct uart_8250_port *);
324:	static void default_serial_dl_write(struct uart_8250_port *, int);
388:	static unsigned int hub6_serial_in(struct uart_port *, int);
395:	static void hub6_serial_out(struct uart_port *, int, int);
450:	static unsigned int io_serial_in(struct uart_port *, int);
456:	static void io_serial_out(struct uart_port *, int, int);
420:	static unsigned int mem16_serial_in(struct uart_port *, int);
414:	static void mem16_serial_out(struct uart_port *, int, int);
432:	static unsigned int mem32_serial_in(struct uart_port *, int);
426:	static void mem32_serial_out(struct uart_port *, int, int);
444:	static unsigned int mem32be_serial_in(struct uart_port *, int);
438:	static void mem32be_serial_out(struct uart_port *, int, int);
402:	static unsigned int mem_serial_in(struct uart_port *, int);
408:	static void mem_serial_out(struct uart_port *, int, int);
2023:	static void serial8250_break_ctl(struct uart_port *, int);
557:	static void serial8250_clear_fifos(struct uart_8250_port *);
3094:	static void serial8250_config_port(struct uart_port *, int);
3218:	static void serial8250_console_putchar(struct uart_port *, int);
1906:	static int serial8250_default_handle_irq(struct uart_port *);
1618:	static enum hrtimer_restart serial8250_em485_handle_start_tx(struct hrtimer *);
1463:	static enum hrtimer_restart serial8250_em485_handle_stop_tx(struct hrtimer *);
1675:	static void serial8250_enable_ms(struct uart_port *);
3006:	static ssize_t serial8250_get_attr_rx_trig_bytes(struct device *, struct device_attribute *, char *);
2555:	static unsigned int serial8250_get_divisor(struct uart_port *, unsigned int, unsigned int *);
1986:	static unsigned int serial8250_get_mctrl(struct uart_port *);
2079:	static int serial8250_get_poll_char(struct uart_port *);
2846:	static void serial8250_pm(struct uart_port *, unsigned int, unsigned int);
2101:	static void serial8250_put_poll_char(struct uart_port *, unsigned char);
2942:	static void serial8250_release_port(struct uart_port *);
2912:	static void serial8250_release_std_resource(struct uart_8250_port *);
2949:	static int serial8250_request_port(struct uart_port *);
2873:	static int serial8250_request_std_resource(struct uart_8250_port *);
3052:	static ssize_t serial8250_set_attr_rx_trig_bytes(struct device *, struct device_attribute *, const char *, size_t);
2637:	static void serial8250_set_divisor(struct uart_port *, unsigned int, unsigned int, unsigned int);
2828:	static void serial8250_set_ldisc(struct uart_port *, struct ktermios *);
2015:	static void serial8250_set_mctrl(struct uart_port *, unsigned int);
713:	static void serial8250_set_sleep(struct uart_8250_port *, int);
2800:	static void serial8250_set_termios(struct uart_port *, struct ktermios *, struct ktermios *);
2487:	static void serial8250_shutdown(struct uart_port *);
1636:	static void serial8250_start_tx(struct uart_port *);
2425:	static int serial8250_startup(struct uart_port *);
1434:	static void serial8250_stop_rx(struct uart_port *);
1540:	static void serial8250_stop_tx(struct uart_port *);
1653:	static void serial8250_throttle(struct uart_port *);
1945:	static unsigned int serial8250_tx_empty(struct uart_port *);
1927:	static int serial8250_tx_threshold_handle_irq(struct uart_port *);
3142:	static const char *serial8250_type(struct uart_port *);
1658:	static void serial8250_unthrottle(struct uart_port *);
3132:	static int serial8250_verify_port(struct uart_port *, struct serial_struct *);
542:	static unsigned int serial_icr_read(struct uart_8250_port *, int);
517:	static void serial_port_out_sync(struct uart_port *, int, int);
464:	static void set_io_from_upio(struct uart_port *);
822:	static int size_fifo(struct uart_8250_port *);
1483:	static void start_hrtimer_ms(struct hrtimer *, unsigned long);
2042:	static void wait_for_xmitr(struct uart_8250_port *, int);

File drivers/tty/serial/earlycon.c:
170:	int setup_earlycon(char *);
208:	static int param_setup_earlycon(char *);

File drivers/tty/serial/kgdboc.c:
131:	static void cleanup_kgdboc(void);
140:	static int configure_kgdboc(void);
207:	static int init_kgdboc(void);
321:	static int kgdboc_early_init(char *);
216:	static int kgdboc_get_char(void);
301:	static int kgdboc_option_setup(char *);
280:	static void kgdboc_post_exp_handler(void);
269:	static void kgdboc_pre_exp_handler(void);
224:	static void kgdboc_put_char(u8);
39:	static int kgdboc_reset_connect(struct input_handler *, struct input_dev *, const struct input_device_id *);
49:	static void kgdboc_reset_disconnect(struct input_handle *);
72:	static void kgdboc_restore_input_helper(struct work_struct *);
111:	static void kgdboc_unregister_kbd(void);
232:	static int param_set_kgdboc_var(const char *, const struct kernel_param *);

File drivers/tty/serial/serial_core.c:
2743:	int uart_add_one_port(struct uart_driver *, struct uart_port *);
2556:	struct tty_driver *uart_console_device(struct console *, int *);
1879:	void uart_console_write(struct uart_port *, const char *, unsigned int, void (*)(struct uart_port *, int));
391:	unsigned int uart_get_baud_rate(struct uart_port *, struct ktermios *, struct ktermios *, unsigned int, unsigned int);
1899:	struct uart_port *uart_get_console(struct uart_port *, int, struct console *);
481:	unsigned int uart_get_divisor(struct uart_port *, unsigned int);
3056:	void uart_get_rs485_mode(struct device *, struct serial_rs485 *);
2985:	void uart_handle_cts_change(struct uart_port *, unsigned int);
2950:	void uart_handle_dcd_change(struct uart_port *, unsigned int);
3021:	void uart_insert_char(struct uart_port *, unsigned int, unsigned int, unsigned int, unsigned int);
2920:	int uart_match_port(struct uart_port *, struct uart_port *);
1933:	int uart_parse_earlycon(char *, unsigned char *, resource_size_t *, char **);
1988:	void uart_parse_options(const char *, int *, int *, int *, int *);
2475:	int uart_register_driver(struct uart_driver *);
2846:	int uart_remove_one_port(struct uart_driver *, struct uart_port *);
2170:	int uart_resume_port(struct uart_driver *, struct uart_port *);
2015:	int uart_set_options(struct uart_port *, struct console *, int, int, int, int);
2108:	int uart_suspend_port(struct uart_driver *, struct uart_port *);
2542:	void uart_unregister_driver(struct uart_driver *);
331:	void uart_update_timeout(struct uart_port *, unsigned int, unsigned int);
95:	void uart_write_wakeup(struct uart_port *);
118:	static void __uart_start(struct tty_struct *);
2098:	static int serial_match_port(struct device *, void *);
1103:	static int uart_break_ctl(struct tty_struct *, int);
1672:	static int uart_carrier_raised(struct tty_port *);
499:	static void uart_change_speed(struct tty_struct *, struct uart_state *, struct ktermios *);
629:	static int uart_chars_in_buffer(struct tty_struct *);
1498:	static void uart_close(struct tty_struct *, struct file *);
1697:	static void uart_dtr_rts(struct tty_port *, int);
642:	static void uart_flush_buffer(struct tty_struct *);
568:	static void uart_flush_chars(struct tty_struct *);
2637:	static ssize_t uart_get_attr_close_delay(struct device *, struct device_attribute *, char *);
2648:	static ssize_t uart_get_attr_closing_wait(struct device *, struct device_attribute *, char *);
2658:	static ssize_t uart_get_attr_custom_divisor(struct device *, struct device_attribute *, char *);
2616:	static ssize_t uart_get_attr_flags(struct device *, struct device_attribute *, char *);
2668:	static ssize_t uart_get_attr_io_type(struct device *, struct device_attribute *, char *);
2678:	static ssize_t uart_get_attr_iomem_base(struct device *, struct device_attribute *, char *);
2688:	static ssize_t uart_get_attr_iomem_reg_shift(struct device *, struct device_attribute *, char *);
2606:	static ssize_t uart_get_attr_irq(struct device *, struct device_attribute *, char *);
2582:	static ssize_t uart_get_attr_line(struct device *, struct device_attribute *, char *);
2592:	static ssize_t uart_get_attr_port(struct device *, struct device_attribute *, char *);
2573:	static ssize_t uart_get_attr_type(struct device *, struct device_attribute *, char *);
2563:	static ssize_t uart_get_attr_uartclk(struct device *, struct device_attribute *, char *);
2626:	static ssize_t uart_get_attr_xmit_fifo_size(struct device *, struct device_attribute *, char *);
1254:	static int uart_get_icount(struct tty_struct *, struct serial_icounter_struct *);
753:	static int uart_get_info(struct tty_port *, struct serial_struct *);
1615:	static void uart_hangup(struct tty_struct *);
1709:	static int uart_install(struct tty_driver *, struct tty_struct *);
1329:	static int uart_ioctl(struct tty_struct *, unsigned int, unsigned long);
1778:	static void uart_line_info(struct seq_file *, int, struct uart_driver *);
1729:	static int uart_open(struct tty_struct *, struct file *);
2388:	static int uart_poll_get_char(struct tty_driver *, int);
2349:	static int uart_poll_init(struct tty_driver *, int, char *);
2404:	static void uart_poll_put_char(struct tty_driver *, int, char);
1741:	static int uart_port_activate(struct tty_port *, struct tty_struct *);
155:	static void uart_port_dtr_rts(struct uart_port *, int);
1645:	static void uart_port_shutdown(struct tty_port *);
1858:	static int uart_proc_show(struct seq_file *, void *);
544:	static int uart_put_char(struct tty_struct *, unsigned char);
673:	static void uart_send_xchar(struct tty_struct *, char);
1420:	static void uart_set_ldisc(struct tty_struct *);
1436:	static void uart_set_termios(struct tty_struct *, struct ktermios *);
271:	static void uart_shutdown(struct tty_struct *, struct uart_state *);
127:	static void uart_start(struct tty_struct *);
248:	static int uart_startup(struct tty_struct *, struct uart_state *, int);
106:	static void uart_stop(struct tty_struct *);
695:	static void uart_throttle(struct tty_struct *);
1058:	static int uart_tiocmget(struct tty_struct *);
1082:	static int uart_tiocmset(struct tty_struct *, unsigned int, unsigned int);
1519:	static void uart_tty_port_shutdown(struct tty_port *);
724:	static void uart_unthrottle(struct tty_struct *);
139:	static void uart_update_mctrl(struct uart_port *, unsigned int, unsigned int);
1196:	static int uart_wait_modem_status(struct uart_state *, unsigned long);
1548:	static void uart_wait_until_sent(struct tty_struct *, int);
573:	static int uart_write(struct tty_struct *, const unsigned char *, int);
616:	static int uart_write_room(struct tty_struct *);

File drivers/tty/sysrq.c:
533:	void __handle_sysrq(int, bool);
513:	struct sysrq_key_op *__sysrq_get_key_op(int);
586:	void handle_sysrq(int);
1081:	int register_sysrq_key(int, struct sysrq_key_op *);
1041:	int sysrq_toggle_support(int);
1087:	int unregister_sysrq_key(int, struct sysrq_key_op *);
1057:	static int __sysrq_swap_key_ops(int, struct sysrq_key_op *, struct sysrq_key_op *);
368:	static void moom_callback(struct work_struct *);
340:	static void send_sig_all(int);
76:	static int sysrq_always_enabled_setup(char *);
895:	static int sysrq_connect(struct input_handler *, struct input_dev *, const struct input_device_id *);
936:	static void sysrq_disconnect(struct input_handle *);
657:	static void sysrq_do_reset(struct timer_list *);
864:	static bool sysrq_filter(struct input_handle *, unsigned int, unsigned int, int);
312:	static void sysrq_ftrace_dump(int);
104:	static void sysrq_handle_SAK(int);
135:	static void sysrq_handle_crash(int);
411:	static void sysrq_handle_kill(int);
87:	static void sysrq_handle_loglevel(int);
387:	static void sysrq_handle_moom(int);
191:	static void sysrq_handle_mountro(int);
156:	static void sysrq_handle_reboot(int);
180:	static void sysrq_handle_show_timers(int);
241:	static void sysrq_handle_showallcpus(int);
326:	static void sysrq_handle_showmem(int);
269:	static void sysrq_handle_showregs(int);
286:	static void sysrq_handle_showstate(int);
298:	static void sysrq_handle_showstate_blocked(int);
169:	static void sysrq_handle_sync(int);
356:	static void sysrq_handle_term(int);
399:	static void sysrq_handle_thaw(int);
120:	static void sysrq_handle_unraw(int);
423:	static void sysrq_handle_unrt(int);
1137:	static int sysrq_init(void);
972:	static void sysrq_register_handler(void);
746:	static void sysrq_reinject_alt_sysrq(struct work_struct *);
993:	static int sysrq_reset_seq_param_set(const char *, const struct kernel_param *);
1100:	static ssize_t write_sysrq_trigger(struct file *, const char *, size_t, loff_t *);

File drivers/tty/tty_audit.c:
202:	void tty_audit_add_data(struct tty_struct *, const void *, size_t);
112:	void tty_audit_exit(void);
129:	void tty_audit_fork(struct signal_struct *);
154:	int tty_audit_push(void);
137:	void tty_audit_tiocsti(struct tty_struct *, char);
53:	static void tty_audit_buf_free(struct tty_audit_buf *);
91:	static void tty_audit_buf_push(struct tty_audit_buf *);
22:	static struct tty_audit_buf *tty_audit_buf_ref(void);
60:	static void tty_audit_log(const char *, dev_t, unsigned char *, size_t);

File drivers/tty/tty_baudrate.c:
237:	void tty_encode_baud_rate(struct tty_struct *, speed_t, speed_t);
61:	speed_t tty_termios_baud_rate(struct ktermios *);
145:	void tty_termios_encode_baud_rate(struct ktermios *, speed_t, speed_t);
96:	speed_t tty_termios_input_baud_rate(struct ktermios *);

File drivers/tty/tty_buffer.c:
376:	int __tty_insert_flip_char(struct tty_port *, unsigned char, char);
608:	bool tty_buffer_cancel_work(struct tty_port *);
216:	void tty_buffer_flush(struct tty_struct *, struct tty_ldisc *);
613:	void tty_buffer_flush_work(struct tty_port *);
116:	void tty_buffer_free_all(struct tty_port *);
565:	void tty_buffer_init(struct tty_port *);
56:	void tty_buffer_lock_exclusive(struct tty_port *);
291:	int tty_buffer_request_room(struct tty_port *, size_t);
603:	bool tty_buffer_restart_work(struct tty_port *);
588:	int tty_buffer_set_limit(struct tty_port *, int);
598:	void tty_buffer_set_lock_subclass(struct tty_port *);
91:	int tty_buffer_space_avail(struct tty_port *);
65:	void tty_buffer_unlock_exclusive(struct tty_port *);
551:	void tty_flip_buffer_push(struct tty_port *);
308:	int tty_insert_flip_string_fixed_flag(struct tty_port *, const unsigned char *, char, size_t);
344:	int tty_insert_flip_string_flags(struct tty_port *, const unsigned char *, const char *, size_t);
454:	int tty_ldisc_receive_buf(struct tty_ldisc *, const unsigned char *, char *, int);
427:	int tty_prepare_flip_string(struct tty_port *, unsigned char **, size_t);
254:	static int __tty_buffer_request_room(struct tty_port *, size_t, int);
497:	static void flush_to_ldisc(struct work_struct *);
191:	static void tty_buffer_free(struct tty_port *, struct tty_buffer *);

File drivers/tty/tty_io.c:
2744:	void __do_SAK(struct tty_struct *);
799:	void __start_tty(struct tty_struct *);
768:	void __stop_tty(struct tty_struct *);
3071:	struct tty_driver *__tty_alloc_driver(unsigned int, struct module *, unsigned long);
2839:	struct tty_struct *alloc_tty_struct(struct tty_driver *, int);
3340:	void console_sysfs_notify(void);
2808:	void do_SAK(struct tty_struct *);
3169:	void put_tty_driver(struct tty_driver *);
1049:	ssize_t redirected_tty_write(struct file *, const char *, size_t, loff_t *);
809:	void start_tty(struct tty_struct *);
777:	void stop_tty(struct tty_struct *);
197:	void tty_add_file(struct tty_struct *, struct file *);
183:	int tty_alloc_file(struct file *);
3263:	void tty_default_fops(struct file_operations *);
344:	int tty_dev_name_to_number(const char *, dev_t *);
3257:	dev_t tty_devnum(struct tty_struct *);
2233:	int tty_do_resize(struct tty_struct *, struct winsize *);
254:	const char *tty_driver_name(const struct tty_struct *);
392:	struct tty_driver *tty_find_polling_driver(char *, int *);
215:	void tty_free_file(struct file *);
676:	void tty_hangup(struct tty_struct *);
744:	int tty_hung_up_p(struct file *);
3350:	int tty_init(void);
1316:	struct tty_struct *tty_init_dev(struct tty_driver *, int);
1179:	void tty_init_termios(struct tty_struct *);
2544:	long tty_ioctl(struct file *, unsigned int, unsigned long);
1574:	void tty_kclose(struct tty_struct *);
1888:	struct tty_struct *tty_kopen(dev_t);
1484:	void tty_kref_put(struct tty_struct *);
245:	const char *tty_name(const struct tty_struct *);
2891:	int tty_put_char(struct tty_struct *, unsigned char);
2937:	struct device *tty_register_device(struct tty_driver *, unsigned int, struct device *);
2970:	struct device *tty_register_device_attr(struct tty_driver *, unsigned int, struct device *, void *, const struct attribute_group **);
3178:	int tty_register_driver(struct tty_driver *);
1648:	int tty_release(struct inode *, struct file *);
1606:	void tty_release_struct(struct tty_struct *, int);
1391:	void tty_save_termios(struct tty_struct *);
1076:	int tty_send_xchar(struct tty_struct *, char);
3162:	void tty_set_operations(struct tty_driver *, const struct tty_operations *);
1201:	int tty_standard_install(struct tty_driver *, struct tty_struct *);
3051:	void tty_unregister_device(struct tty_driver *, unsigned int);
3240:	int tty_unregister_driver(struct tty_driver *);
693:	void tty_vhangup(struct tty_struct *);
708:	void tty_vhangup_self(void);
730:	void tty_vhangup_session(struct tty_struct *);
526:	void tty_wakeup(struct tty_struct *);
994:	void tty_write_message(struct tty_struct *, char *);
2117:	static int __tty_fasync(int, struct file *, int);
565:	static void __tty_hangup(struct tty_struct *, int);
280:	static int check_tty_count(struct tty_struct *, const char *);
3129:	static void destruct_tty_driver(struct kref *);
2817:	static int dev_match_devt(struct device *, const void *);
2795:	static void do_SAK_work(struct work_struct *);
660:	static void do_tty_hangup(struct work_struct *);
169:	static void free_tty_struct(struct tty_struct *);
463:	static int hung_up_tty_fasync(int, struct file *, int);
451:	static long hung_up_tty_ioctl(struct file *, unsigned int, unsigned long);
446:	static __poll_t hung_up_tty_poll(struct file *, poll_table *);
433:	static ssize_t hung_up_tty_read(struct file *, char *, size_t, loff_t *);
439:	static ssize_t hung_up_tty_write(struct file *, const char *, size_t, loff_t *);
1466:	static void queue_release_one_tty(struct kref *);
1443:	static void release_one_tty(struct work_struct *);
1503:	static void release_tty(struct tty_struct *, int);
2403:	static int send_break(struct tty_struct *, unsigned int);
3292:	static ssize_t show_cons_active(struct device *, struct device_attribute *, char *);
2718:	static int this_tty(const void *, struct file *, unsigned int);
2901:	static int tty_cdev_add(dev_t, unsigned int, unsigned int, struct tty_driver *, struct tty_driver *);
3278:	static int tty_class_init(void);
2689:	static long tty_compat_ioctl(struct file *, unsigned int, unsigned long);
2944:	static void tty_device_create_release(struct device *);
3268:	static char *tty_devnode(struct device *, umode_t *);
2152:	static int tty_fasync(int, struct file *, int);
1418:	static void tty_flush_works(struct tty_struct *);
1134:	static ssize_t tty_line_name(struct tty_driver *, int, char *);
1836:	static struct tty_driver *tty_lookup_driver(dev_t, struct file *, int *);
2015:	static int tty_open(struct inode *, struct file *);
261:	static int tty_paranoia_check(struct tty_struct *, struct inode *, const char *);
2099:	static __poll_t tty_poll(struct file *, poll_table *);
848:	static ssize_t tty_read(struct file *, char *, size_t, loff_t *);
1257:	static int tty_reopen(struct tty_struct *);
468:	static void tty_show_fdinfo(struct seq_file *, struct file *);
1024:	static ssize_t tty_write(struct file *, const char *, size_t, loff_t *);
884:	static int tty_write_lock(struct tty_struct *, int);
878:	static void tty_write_unlock(struct tty_struct *);

File drivers/tty/tty_ioctl.c:
946:	long n_tty_compat_ioctl_helper(struct tty_struct *, struct file *, unsigned int, unsigned long);
894:	int n_tty_ioctl_helper(struct tty_struct *, struct file *, unsigned int, unsigned long);
56:	int tty_chars_in_buffer(struct tty_struct *);
92:	void tty_driver_flush_buffer(struct tty_struct *);
708:	int tty_mode_ioctl(struct tty_struct *, struct file *, unsigned int, unsigned long);
879:	int tty_perform_flush(struct tty_struct *, unsigned long);
314:	int tty_set_termios(struct tty_struct *, struct ktermios *);
273:	void tty_termios_copy_hw(struct ktermios *, struct ktermios *);
293:	int tty_termios_hw_change(const struct ktermios *, const struct ktermios *);
109:	void tty_throttle(struct tty_struct *);
157:	int tty_throttle_safe(struct tty_struct *);
134:	void tty_unthrottle(struct tty_struct *);
188:	int tty_unthrottle_safe(struct tty_struct *);
218:	void tty_wait_until_sent(struct tty_struct *, long);
76:	int tty_write_room(struct tty_struct *);
853:	static int __tty_perform_flush(struct tty_struct *, unsigned long);
423:	static void copy_termios(struct tty_struct *, struct ktermios *);
437:	static int get_termio(struct tty_struct *, struct termio *);
362:	static int set_termios(struct tty_struct *, void *, int);
459:	static int set_termiox(struct tty_struct *, void *, int);
678:	static int tty_change_softcar(struct tty_struct *, int);

File drivers/tty/tty_jobctrl.c:
31:	int __tty_check_change(struct tty_struct *, int);
257:	void disassociate_ctty(int);
156:	struct tty_struct *get_current_tty(void);
323:	void no_tty(void);
73:	void proc_clear_tty(struct task_struct *);
171:	void session_clear_tty(struct pid *);
67:	int tty_check_change(struct tty_struct *);
401:	struct pid *tty_get_pgrp(struct tty_struct *);
552:	long tty_jobctrl_ioctl(struct tty_struct *, struct tty_struct *, struct file *, unsigned int, unsigned long);
128:	void tty_open_proc_set_tty(struct file *, struct tty_struct *);
191:	int tty_signal_session_leader(struct tty_struct *, int);
94:	static void __proc_set_tty(struct tty_struct *);

File drivers/tty/tty_ldisc.c:
842:	void tty_ldisc_deinit(struct tty_struct *);
310:	void tty_ldisc_deref(struct tty_ldisc *);
416:	void tty_ldisc_flush(struct tty_struct *);
718:	void tty_ldisc_hangup(struct tty_struct *, bool);
826:	int tty_ldisc_init(struct tty_struct *);
335:	int tty_ldisc_lock(struct tty_struct *, unsigned long);
289:	struct tty_ldisc *tty_ldisc_ref(struct tty_struct *);
268:	struct tty_ldisc *tty_ldisc_ref_wait(struct tty_struct *);
676:	int tty_ldisc_reinit(struct tty_struct *, int);
796:	void tty_ldisc_release(struct tty_struct *);
772:	int tty_ldisc_setup(struct tty_struct *, struct tty_struct *);
351:	void tty_ldisc_unlock(struct tty_struct *);
61:	int tty_register_ldisc(int, struct tty_ldisc_ops *);
556:	int tty_set_ldisc(struct tty_struct *, int);
882:	void tty_sysctl_init(void);
91:	int tty_unregister_ldisc(int);
110:	static struct tty_ldisc_ops *get_ldops(int);
129:	static void put_ldops(struct tty_ldisc_ops *, struct tty_ldisc_ops *);
488:	static void tty_ldisc_close(struct tty_struct *, struct tty_ldisc *);
506:	static int tty_ldisc_failto(struct tty_struct *, int);
166:	static struct tty_ldisc *tty_ldisc_get(struct tty_struct *, int);
632:	static void tty_ldisc_kill(struct tty_struct *);
463:	static int tty_ldisc_open(struct tty_struct *, struct tty_ldisc *);
204:	static void tty_ldisc_put(struct tty_ldisc *);
218:	static void *tty_ldiscs_seq_next(struct seq_file *, void *, loff_t *);
228:	static int tty_ldiscs_seq_show(struct seq_file *, void *);
213:	static void *tty_ldiscs_seq_start(struct seq_file *, loff_t *);
224:	static void tty_ldiscs_seq_stop(struct seq_file *, void *);

File drivers/tty/tty_ldsem.c:
80:	void __init_ldsem(struct ld_semaphore *, const char *, struct lock_class_key *);
359:	int ldsem_down_read(struct ld_semaphore *, long);
368:	int ldsem_down_read_trylock(struct ld_semaphore *);
385:	int ldsem_down_write(struct ld_semaphore *, long);
394:	int ldsem_down_write_trylock(struct ld_semaphore *);
411:	void ldsem_up_read(struct ld_semaphore *);
425:	void ldsem_up_write(struct ld_semaphore *);
158:	static void __ldsem_wake(struct ld_semaphore *);
97:	static void __ldsem_wake_readers(struct ld_semaphore *);
166:	static void ldsem_wake(struct ld_semaphore *);

File drivers/tty/tty_mutex.c:
14:	void tty_lock(struct tty_struct *);
23:	int tty_lock_interruptible(struct tty_struct *);
45:	void tty_lock_slave(struct tty_struct *);
57:	void tty_set_lock_subclass(struct tty_struct *);
36:	void tty_unlock(struct tty_struct *);
51:	void tty_unlock_slave(struct tty_struct *);

File drivers/tty/tty_port.c:
213:	int tty_port_alloc_xmit_buf(struct tty_port *);
468:	int tty_port_block_til_ready(struct tty_port *, struct tty_struct *, struct file *);
403:	int tty_port_carrier_raised(struct tty_port *);
637:	void tty_port_close(struct tty_port *, struct tty_struct *, struct file *);
611:	void tty_port_close_end(struct tty_port *, struct tty_struct *);
565:	int tty_port_close_start(struct tty_port *, struct tty_struct *, struct file *);
245:	void tty_port_destroy(struct tty_port *);
226:	void tty_port_free_xmit_buf(struct tty_port *);
347:	void tty_port_hangup(struct tty_port *);
60:	void tty_port_init(struct tty_port *);
660:	int tty_port_install(struct tty_port *, struct tty_driver *, struct tty_struct *);
87:	void tty_port_link_device(struct tty_port *, struct tty_driver *, unsigned int);
436:	void tty_port_lower_dtr_rts(struct tty_port *);
676:	int tty_port_open(struct tty_port *, struct tty_struct *, struct file *);
268:	void tty_port_put(struct tty_port *);
420:	void tty_port_raise_dtr_rts(struct tty_port *);
107:	struct device *tty_port_register_device(struct tty_port *, struct tty_driver *, unsigned int, struct device *);
128:	struct device *tty_port_register_device_attr(struct tty_port *, struct tty_driver *, unsigned int, struct device *, void *, const struct attribute_group **);
283:	struct tty_struct *tty_port_tty_get(struct tty_port *);
373:	void tty_port_tty_hangup(struct tty_port *, bool);
304:	void tty_port_tty_set(struct tty_port *, struct tty_struct *);
388:	void tty_port_tty_wakeup(struct tty_port *);
200:	void tty_port_unregister_device(struct tty_port *, struct tty_driver *, unsigned int);
22:	static int tty_port_default_receive_buf(struct tty_port *, const unsigned char *, const unsigned char *, size_t);
45:	static void tty_port_default_wakeup(struct tty_port *);
252:	static void tty_port_destructor(struct kref *);
315:	static void tty_port_shutdown(struct tty_port *, struct tty_struct *);

File drivers/tty/vt/consolemap.c:
527:	int con_clear_unimap(struct vc_data *);
715:	int con_copy_unimap(struct vc_data *, struct vc_data *);
420:	void con_free_unimap(struct vc_data *);
372:	int con_get_trans_new(ushort *);
341:	int con_get_trans_old(unsigned char *);
738:	int con_get_unimap(struct vc_data *, ushort, ushort *, struct unipair *);
659:	int con_set_default_unimap(struct vc_data *);
358:	int con_set_trans_new(ushort *);
322:	int con_set_trans_old(unsigned char *);
536:	int con_set_unimap(struct vc_data *, ushort, struct unipair *);
849:	void console_map_init(void);
793:	u32 conv_8bit_to_uni(unsigned char);
799:	int conv_uni_to_8bit(u32);
810:	int conv_uni_to_pc(struct vc_data *, long);
271:	u16 inverse_translate(struct vc_data *, int, int);
258:	unsigned short *set_translate(int, struct vc_data *);
504:	static int con_do_clear_unimap(struct vc_data *);
475:	static int con_insert_unipair(struct uni_pagedir *, u_short, u_short);
396:	static void con_release_unimap(struct uni_pagedir *);
434:	static int con_unify_unimap(struct uni_pagedir *, struct vc_data *);
223:	static void set_inverse_trans_unicode(struct uni_pagedir *, struct vc_data *);
199:	static void set_inverse_transl(struct vc_data *, struct uni_pagedir *, int);
297:	static void update_user_maps(void);

File drivers/tty/vt/keyboard.c:
396:	void compute_shiftstate(void);
1618:	int kbd_init(void);
297:	int kbd_rate(struct kbd_repeat *);
261:	void kd_mksound(unsigned int, unsigned int);
148:	int register_keyboard_notifier(struct notifier_block *);
1123:	void setledstate(struct kbd_struct *, unsigned int);
154:	int unregister_keyboard_notifier(struct notifier_block *);
2296:	void vt_clr_kbd_mode_bit(int, int);
1656:	int vt_do_diacrit(unsigned int, void *, int);
1866:	int vt_do_kbkeycode_ioctl(int, struct kbkeycode *, int);
1999:	int vt_do_kdgkb_ioctl(int, struct kbsentry *, int);
2191:	int vt_do_kdgkbmeta(int);
2167:	int vt_do_kdgkbmode(int);
1893:	int vt_do_kdsk_ioctl(int, struct kbentry *, int, int);
1845:	int vt_do_kdskbmeta(int, unsigned int);
1805:	int vt_do_kdskbmode(int, unsigned int);
2125:	int vt_do_kdskled(int, int, unsigned long, int);
2262:	int vt_get_kbd_mode_bit(int, int);
1154:	int vt_get_leds(int, int);
2219:	int vt_get_shift_state(void);
1195:	void vt_kbd_con_start(int);
1212:	void vt_kbd_con_stop(int);
2232:	void vt_reset_keyboard(int);
2204:	void vt_reset_unicode(int);
2277:	void vt_set_kbd_mode_bit(int, int);
1176:	void vt_set_led_state(int, int);
374:	static void do_compute_shiftstate(void);
611:	static void fn_SAK(struct vc_data *);
518:	static void fn_bare_num(struct vc_data *);
590:	static void fn_boot_it(struct vc_data *);
470:	static void fn_caps_on(struct vc_data *);
462:	static void fn_caps_toggle(struct vc_data *);
595:	static void fn_compose(struct vc_data *);
530:	static void fn_dec_console(struct vc_data *);
444:	static void fn_enter(struct vc_data *);
486:	static void fn_hold(struct vc_data *);
547:	static void fn_inc_console(struct vc_data *);
524:	static void fn_lastcons(struct vc_data *);
617:	static void fn_null(struct vc_data *);
504:	static void fn_num(struct vc_data *);
575:	static void fn_scroll_back(struct vc_data *);
570:	static void fn_scroll_forw(struct vc_data *);
564:	static void fn_send_intr(struct vc_data *);
580:	static void fn_show_mem(struct vc_data *);
478:	static void fn_show_ptregs(struct vc_data *);
585:	static void fn_show_state(struct vc_data *);
600:	static void fn_spawn_con(struct vc_data *);
175:	static int getkeycode_helper(struct input_handle *, void *);
411:	static unsigned int handle_diacr(struct vc_data *, unsigned int);
878:	static void k_ascii(struct vc_data *, unsigned char, char);
951:	static void k_brl(struct vc_data *, unsigned char, char);
933:	static void k_brlcommit(struct vc_data *, unsigned int, char);
731:	static void k_cons(struct vc_data *, unsigned char, char);
756:	static void k_cur(struct vc_data *, unsigned char, char);
696:	static void k_dead(struct vc_data *, unsigned char, char);
688:	static void k_dead2(struct vc_data *, unsigned char, char);
675:	static void k_deadunicode(struct vc_data *, unsigned int, char);
739:	static void k_fn(struct vc_data *, unsigned char, char);
625:	static void k_ignore(struct vc_data *, unsigned char, char);
902:	static void k_lock(struct vc_data *, unsigned char, char);
643:	static void k_lowercase(struct vc_data *, unsigned char, char);
866:	static void k_meta(struct vc_data *, unsigned char, char);
766:	static void k_pad(struct vc_data *, unsigned char, char);
683:	static void k_self(struct vc_data *, unsigned char, char);
825:	static void k_shift(struct vc_data *, unsigned char, char);
910:	static void k_slock(struct vc_data *, unsigned char, char);
629:	static void k_spec(struct vc_data *, unsigned char, char);
648:	static void k_unicode(struct vc_data *, unsigned int, char);
1228:	static void kbd_bh(unsigned long);
1540:	static int kbd_connect(struct input_handler *, struct input_dev *, const struct input_device_id *);
1571:	static void kbd_disconnect(struct input_handle *);
1497:	static void kbd_event(struct input_handle *, unsigned int, unsigned int, int);
1002:	static int kbd_led_trigger_activate(struct led_classdev *);
1515:	static bool kbd_match(struct input_handler *, struct input_dev *);
1044:	static void kbd_propagate_led_state(unsigned int, unsigned int);
276:	static int kbd_rate_helper(struct input_handle *, void *);
1582:	static void kbd_start(struct input_handle *);
252:	static void kd_nosound(struct timer_list *);
234:	static int kd_sound_helper(struct input_handle *, void *);
316:	static void puts_queue(struct vc_data *, char *);
202:	static int setkeycode_helper(struct input_handle *, void *);
340:	static void to_utf8(struct vc_data *, uint);

File drivers/tty/vt/selection.c:
79:	void clear_selection(void);
356:	int paste_selection(struct tty_struct *);
116:	int sel_loadlut(char *);
336:	int set_selection(const struct tiocl_selection *, struct tty_struct *);
88:	bool vc_is_sel(struct vc_data *);
175:	static int __set_selection(const struct tiocl_selection *, struct tty_struct *);
65:	static u32 sel_pos(int);

File drivers/tty/vt/vc_screen.c:
705:	int vcs_init(void);
688:	void vcs_make_sysfs(int);
698:	void vcs_remove_sysfs(int);
632:	static int vcs_fasync(int, struct file *, int);
212:	static loff_t vcs_lseek(struct file *, loff_t, int);
89:	static int vcs_notifier(struct notifier_block *, unsigned long, void *);
649:	static int vcs_open(struct inode *, struct file *);
618:	static __poll_t vcs_poll(struct file *, poll_table *);
121:	static struct vcs_poll_data *vcs_poll_data_get(struct file *);
226:	static ssize_t vcs_read(struct file *, char *, size_t, loff_t *);
667:	static int vcs_release(struct inode *, struct file *);
190:	static int vcs_size(struct inode *);
167:	static struct vc_data *vcs_vc(struct inode *, int *);
428:	static ssize_t vcs_write(struct file *, const char *, size_t, loff_t *);

File drivers/tty/vt/vt.c:
967:	void clear_buffer_attributes(struct vc_data *);
805:	void complement_pos(struct vc_data *, int);
3886:	int con_debug_enter(struct vc_data *);
3943:	int con_debug_leave(void);
4595:	int con_font_op(struct vc_data *, struct console_font_op *);
4401:	int con_get_cmap(unsigned char *);
3859:	int con_is_bound(const struct consw *);
4372:	int con_set_cmap(unsigned char *);
4202:	void do_blank_screen(int);
4118:	int do_take_over_console(const struct consw *, int, int, int);
3609:	int do_unbind_con_driver(const struct consw *, int, int, int);
4261:	void do_unblank_screen(int);
4041:	int do_unregister_con_driver(const struct consw *);
4644:	void getconsxy(struct vc_data *, unsigned char *);
4142:	void give_up_console(const struct consw *);
760:	void invert_screen(struct vc_data *, int, int, int);
1862:	void mouse_report(struct tty_struct *, int, int, int);
1872:	int mouse_reporting(void);
4327:	void poke_blanked_console(void);
4650:	void putconsxy(struct vc_data *, unsigned char *);
978:	void redraw_screen(struct vc_data *, int);
257:	int register_vt_notifier(struct notifier_block *);
4420:	void reset_palette(struct vc_data *);
317:	void schedule_console_callback(void);
4616:	u16 screen_glyph(struct vc_data *, int);
4627:	u32 screen_glyph_unicode(struct vc_data *, int);
4638:	unsigned short *screen_pos(struct vc_data *, int, int);
1491:	void scrollback(struct vc_data *);
1496:	void scrollfront(struct vc_data *, int);
2882:	int set_console(int);
3053:	int tioclinux(struct tty_struct *, unsigned long);
4311:	void unblank_screen(void);
263:	int unregister_vt_notifier(struct notifier_block *);
695:	void update_region(struct vc_data *, unsigned long, int);
1106:	int vc_allocate(unsigned int);
1045:	int vc_cons_allocated(unsigned int);
1387:	struct vc_data *vc_deallocate(unsigned int);
1359:	int vc_resize(struct vc_data *, unsigned int, unsigned int);
4678:	void vc_scrolldelta_helper(struct vc_data *, int, unsigned int, void *, unsigned int);
508:	int vc_uniscr_check(struct vc_data *);
554:	void vc_uniscr_copy_line(struct vc_data *, void *, int, unsigned int, unsigned int, unsigned int);
4657:	u16 vcs_scr_readw(struct vc_data *, const u16 *);
4673:	void vcs_scr_updated(struct vc_data *);
4664:	void vcs_scr_writew(struct vc_data *, u16, u16 *);
2931:	int vt_kmsg_redirect(int);
3463:	int vty_init(const struct file_operations *);
869:	static void add_softcursor(struct vc_data *);
4321:	static void blank_screen_t(struct timer_list *);
708:	static u8 build_attr(struct vc_data *, u8, u8, u8, u8, u8, u8);
3183:	static int con_chars_in_buffer(struct tty_struct *);
3311:	static void con_cleanup(struct tty_struct *);
3297:	static void con_close(struct tty_struct *, struct file *);
4078:	static void con_driver_unregister_callback(struct work_struct *);
3232:	static void con_flush_chars(struct tty_struct *);
3357:	static int con_init(void);
3250:	static int con_install(struct tty_driver *, struct tty_struct *);
3290:	static int con_open(struct tty_struct *, struct file *);
3169:	static int con_put_char(struct tty_struct *, unsigned char);
627:	static void con_scroll(struct vc_data *, unsigned int, unsigned int, enum con_scroll, unsigned int);
3302:	static void con_shutdown(struct tty_struct *);
3221:	static void con_start(struct tty_struct *);
3207:	static void con_stop(struct tty_struct *);
3193:	static void con_throttle(struct tty_struct *);
3197:	static void con_unthrottle(struct tty_struct *);
3159:	static int con_write(struct tty_struct *, const unsigned char *, int);
3176:	static int con_write_room(struct tty_struct *);
2847:	static void console_callback(struct work_struct *);
1554:	static void csi_J(struct vc_data *, int);
3505:	static int do_bind_con_driver(const struct consw *, int, int, int);
2146:	static void do_con_trol(struct tty_struct *, struct vc_data *, int);
2583:	static int do_con_write(struct tty_struct *, const unsigned char *, int);
651:	static void do_update_region(struct vc_data *, unsigned long, int);
1455:	static void gotoxy(struct vc_data *, int, int);
897:	static void hide_cursor(struct vc_data *);
840:	static void insert_char(struct vc_data *, unsigned int);
1503:	static void lf(struct vc_data *);
2094:	static void reset_terminal(struct vc_data *, int);
1835:	static void respond_string(const char *, struct tty_port *);
2072:	static void restore_cur(struct vc_data *);
1687:	static void rgb_background(struct vc_data *, const struct rgb *);
1665:	static void rgb_foreground(struct vc_data *, const struct rgb *);
933:	static void save_screen(struct vc_data *);
906:	static void set_cursor(struct vc_data *);
1878:	static void set_mode(struct vc_data *, int);
920:	static void set_origin(struct vc_data *);
4359:	static void set_palette(struct vc_data *);
3808:	static ssize_t show_bind(struct device *, struct device_attribute *, char *);
3817:	static ssize_t show_name(struct device *, struct device_attribute *, char *);
3449:	static ssize_t show_tty_active(struct device *, struct device_attribute *, char *);
3790:	static ssize_t store_bind(struct device *, struct device_attribute *, const char *, size_t);
2543:	static int ucs_cmp(const void *, const void *);
751:	static void update_attr(struct vc_data *);
1194:	static int vc_do_resize(struct tty_struct *, struct vc_data *, unsigned int, unsigned int);
3325:	static void vc_init(struct vc_data *, unsigned int, unsigned int, int);
1087:	static void vc_port_destruct(struct tty_port *);
1703:	static int vc_t416_color(struct vc_data *, int, void (*)(struct vc_data *, const struct rgb *));
345:	static struct uni_screen *vc_uniscr_alloc(unsigned int, unsigned int);
1050:	static void visual_init(struct vc_data *, int, int);
3022:	static struct tty_driver *vt_console_device(struct console *, int *);
2947:	static void vt_console_print(struct console *, const char *, unsigned int);
1376:	static int vt_resize(struct tty_struct *, struct winsize *);
4149:	static int vtconsole_class_init(void);

File drivers/tty/vt/vt_ioctl.c:
1360:	void change_console(struct vc_data *);
1474:	void pm_set_vt_switch(int);
1058:	void reset_vc(struct vc_data *);
1074:	void vc_SAK(struct work_struct *);
1203:	long vt_compat_ioctl(struct tty_struct *, unsigned int, unsigned long);
111:	void vt_event_post(unsigned int, unsigned int, unsigned int);
350:	int vt_ioctl(struct tty_struct *, unsigned int, unsigned long);
1431:	int vt_move_to_console(unsigned int, int);
218:	int vt_waitactive(int);
156:	static void __vt_event_dequeue(struct vt_event_wait *);
138:	static void __vt_event_queue(struct vt_event_wait *);
150:	static void __vt_event_wait(struct vt_event_wait *);
1286:	static void complete_change_console(struct vc_data *);
326:	static void vt_disallocate_all(void);
189:	static int vt_event_wait_ioctl(struct vt_event *);

File drivers/usb/common/common.c:
113:	enum usb_dr_mode usb_get_dr_mode(struct device *);
62:	enum usb_device_speed usb_get_maximum_speed(struct device *);
19:	const char *usb_otg_state_string(enum usb_otg_state);
54:	const char *usb_speed_string(enum usb_device_speed);
77:	const char *usb_state_string(enum usb_device_state);

File drivers/usb/common/led.c:
21:	void usb_led_activity(enum usb_led_event);
46:	static void ledtrig_usb_exit(void);
39:	static int ledtrig_usb_init(void);

File drivers/usb/core/buffer.c:
118:	void *hcd_buffer_alloc(struct usb_bus *, size_t, gfp_t, dma_addr_t *);
63:	int hcd_buffer_create(struct usb_hcd *);
96:	void hcd_buffer_destroy(struct usb_hcd *);
146:	void hcd_buffer_free(struct usb_bus *, size_t, void *, dma_addr_t);
32:	void usb_init_pool_max(void);

File drivers/usb/core/config.c:
814:	void usb_destroy_configuration(struct usb_device *);
973:	int usb_get_bos_descriptor(struct usb_device *);
850:	int usb_get_configuration(struct usb_device *);
954:	void usb_release_bos_descriptor(struct usb_device *);
473:	void usb_release_interface_cache(struct kref *);
594:	static int usb_parse_configuration(struct usb_device *, int, struct usb_host_config *, unsigned char *, int);

File drivers/usb/core/devices.c:
145:	void usbfs_conn_disc_event(void);
469:	static ssize_t usb_device_dump(char **, size_t *, loff_t *, loff_t *, struct usb_device *, struct usb_bus *, int, int, int);
625:	static __poll_t usb_device_poll(struct file *, struct poll_table_struct *);
589:	static ssize_t usb_device_read(struct file *, char *, size_t, loff_t *);

File drivers/usb/core/devio.c:
2694:	void usb_devio_cleanup(void);
2668:	int usb_devio_init(void);
581:	static void async_completed(struct urb *);
418:	static struct async *async_getcompleted(struct usb_dev_state *);
822:	static int check_ctrlrecip(struct usb_dev_state *, unsigned int, unsigned int, unsigned int);
1237:	static void check_reset_of_active_ep(struct usb_device *, unsigned int, char *);
782:	static int checkintf(struct usb_dev_state *, unsigned int);
723:	static int claimintf(struct usb_dev_state *, unsigned int);
514:	static int copy_urb_data_to_user(u8 *, struct urb *);
163:	static void dec_usb_memory_use_count(struct usb_memory *, int *);
624:	static void destroy_async(struct usb_dev_state *, struct list_head *);
646:	static void destroy_async_on_interface(struct usb_dev_state *, unsigned int);
678:	static void driver_disconnect(struct usb_interface *);
672:	static int driver_probe(struct usb_interface *, const struct usb_device_id *);
710:	static int driver_resume(struct usb_interface *);
705:	static int driver_suspend(struct usb_interface *, pm_message_t);
797:	static int findintfep(unsigned int, struct usb_device *);
374:	static void free_async(struct async *);
963:	static int match_devt(struct device *, void *);
890:	static int parse_usbdevfs_streams(struct usb_dev_state *, struct usbdevfs_streams *, unsigned int *, unsigned int *, struct usb_host_endpoint ***, struct usb_interface **);
1163:	static int proc_bulk(struct usb_dev_state *, void *);
1076:	static int proc_control(struct usb_dev_state *, void *);
2280:	static int proc_disconnect_claim(struct usb_dev_state *, void *);
1441:	static int proc_do_submiturb(struct usb_dev_state *, struct usbdevfs_urb *, struct usbdevfs_iso_packet_desc *, void *);
1292:	static int proc_getdriver(void *, struct usb_dev_state *);
2135:	static int proc_ioctl(struct usb_dev_state *, struct usbdevfs_ioctl *);
2018:	static int proc_submiturb_compat(struct usb_dev_state *, void *);
1861:	static int processcompl(struct async *, void **);
2030:	static int processcompl_compat(struct async *, void **);
1899:	static struct async *reap_as(struct usb_dev_state *);
756:	static int releaseintf(struct usb_dev_state *, unsigned int);
447:	static void snoop_urb(struct usb_device *, void *, int, unsigned int, int, enum snoop_when, unsigned char *, unsigned int);
492:	static void snoop_urb_data(struct urb *, unsigned int);
2585:	static long usbdev_compat_ioctl(struct file *, unsigned int, unsigned long);
2376:	static long usbdev_do_ioctl(struct file *, unsigned int, void *);
2574:	static long usbdev_ioctl(struct file *, unsigned int, unsigned long);
206:	static int usbdev_mmap(struct file *, struct vm_area_struct *);
2649:	static int usbdev_notify(struct notifier_block *, unsigned long, void *);
982:	static int usbdev_open(struct inode *, struct file *);
2597:	static __poll_t usbdev_poll(struct file *, struct poll_table_struct *);
269:	static ssize_t usbdev_read(struct file *, char *, size_t, loff_t *);
1042:	static int usbdev_release(struct inode *, struct file *);
2627:	static void usbdev_remove(struct usb_device *);
194:	static void usbdev_vm_close(struct vm_area_struct *);
184:	static void usbdev_vm_open(struct vm_area_struct *);
134:	static int usbfs_increase_memory_usage(u64);

File drivers/usb/core/driver.c:
1706:	int usb_autopm_get_interface(struct usb_interface *);
1739:	int usb_autopm_get_interface_async(struct usb_interface *);
1764:	void usb_autopm_get_interface_no_resume(struct usb_interface *);
1628:	void usb_autopm_put_interface(struct usb_interface *);
1656:	void usb_autopm_put_interface_async(struct usb_interface *);
1678:	void usb_autopm_put_interface_no_suspend(struct usb_interface *);
1598:	int usb_autoresume_device(struct usb_device *);
1567:	void usb_autosuspend_device(struct usb_device *);
998:	void usb_deregister(struct usb_driver *);
920:	void usb_deregister_device_driver(struct usb_device_driver *);
1545:	void usb_disable_autosuspend(struct usb_device *);
1913:	int usb_disable_usb2_hardware_lpm(struct usb_device *);
504:	int usb_driver_claim_interface(struct usb_driver *, struct usb_interface *, void *);
581:	void usb_driver_release_interface(struct usb_driver *, struct usb_interface *);
1530:	void usb_enable_autosuspend(struct usb_device *);
1903:	int usb_enable_usb2_hardware_lpm(struct usb_device *);
1015:	void usb_forced_unbind_intf(struct usb_interface *);
610:	int usb_match_device(struct usb_device *, const struct usb_device_id *);
774:	const struct usb_device_id *usb_match_id(struct usb_interface *, const struct usb_device_id *);
681:	int usb_match_one_id(struct usb_interface *, const struct usb_device_id *);
646:	int usb_match_one_id_intf(struct usb_device *, struct usb_host_interface *, const struct usb_device_id *);
884:	int usb_register_device_driver(struct usb_device_driver *, struct module *);
945:	int usb_register_driver(struct usb_driver *, struct module *, const char *);
1492:	int usb_resume(struct device *, pm_message_t);
1479:	int usb_resume_complete(struct device *);
1876:	int usb_runtime_idle(struct device *);
1864:	int usb_runtime_resume(struct device *);
1835:	int usb_runtime_suspend(struct device *);
114:	ssize_t usb_show_dynids(struct usb_dynids *, char *);
42:	ssize_t usb_store_new_id(struct usb_dynids *, const struct usb_device_id *, struct device_driver *, const char *, size_t);
1456:	int usb_suspend(struct device *, pm_message_t);
1102:	void usb_unbind_and_rebind_marked_interfaces(struct usb_device *);
1774:	static int autosuspend_check(struct usb_device *);
131:	static ssize_t new_id_show(struct device_driver *, char *);
138:	static ssize_t new_id_store(struct device_driver *, const char *, size_t);
1079:	static void rebind_marked_interfaces(struct usb_device *);
150:	static ssize_t remove_id_store(struct device_driver *, const char *, size_t);
1032:	static void unbind_marked_interfaces(struct usb_device *);
796:	static int usb_device_match(struct device *, struct device_driver *);
231:	static const struct usb_device_id *usb_match_dynamic_id(struct usb_interface *, struct usb_driver *);
249:	static int usb_probe_device(struct device *);
283:	static int usb_probe_interface(struct device *);
1395:	static int usb_resume_both(struct usb_device *, pm_message_t);
1213:	static int usb_resume_interface(struct usb_device *, struct usb_interface *, int);
1294:	static int usb_suspend_both(struct usb_device *, pm_message_t);
832:	static int usb_uevent(struct device *, struct kobj_uevent_env *);
271:	static int usb_unbind_device(struct device *);
393:	static int usb_unbind_interface(struct device *);

File drivers/usb/core/endpoint.c:
176:	int usb_create_ep_devs(struct device *, struct usb_host_endpoint *, struct usb_device *);
210:	void usb_remove_ep_devs(struct usb_host_endpoint *);
47:	static ssize_t bEndpointAddress_show(struct device *, struct device_attribute *, char *);
49:	static ssize_t bInterval_show(struct device *, struct device_attribute *, char *);
46:	static ssize_t bLength_show(struct device *, struct device_attribute *, char *);
48:	static ssize_t bmAttributes_show(struct device *, struct device_attribute *, char *);
129:	static ssize_t direction_show(struct device *, struct device_attribute *, char *);
164:	static void ep_device_release(struct device *);
83:	static ssize_t interval_show(struct device *, struct device_attribute *, char *);
59:	static ssize_t type_show(struct device *, struct device_attribute *, char *);
51:	static ssize_t wMaxPacketSize_show(struct device *, struct device_attribute *, char *);

File drivers/usb/core/file.c:
230:	void usb_deregister_dev(struct usb_interface *, struct usb_class_driver *);
132:	void usb_major_cleanup(void);
120:	int usb_major_init(void);
156:	int usb_register_dev(struct usb_interface *, struct usb_class_driver *);
105:	static void release_usb_class(struct kref *);
65:	static char *usb_devnode(struct device *, umode_t *);
34:	static int usb_open(struct inode *, struct file *);

File drivers/usb/core/generic.c:
45:	int usb_choose_configuration(struct usb_device *);
189:	static void generic_disconnect(struct usb_device *);
162:	static int generic_probe(struct usb_device *);
227:	static int generic_resume(struct usb_device *, pm_message_t);
201:	static int generic_suspend(struct usb_device *, pm_message_t);

File drivers/usb/core/hcd-pci.c:
182:	int usb_hcd_pci_probe(struct pci_dev *, const struct pci_device_id *);
320:	void usb_hcd_pci_remove(struct pci_dev *);
363:	void usb_hcd_pci_shutdown(struct pci_dev *);
404:	static int check_root_hub_suspended(struct device *);
112:	static void ehci_post_add(struct pci_dev *, struct usb_hcd *, struct pci_dev *, struct usb_hcd *);
95:	static void ehci_pre_add(struct pci_dev *, struct usb_hcd *, struct pci_dev *, struct usb_hcd *);
144:	static void ehci_remove(struct pci_dev *, struct usb_hcd *, struct pci_dev *, struct usb_hcd *);
154:	static void ehci_wait_for_companions(struct pci_dev *, struct usb_hcd *, struct pci_dev *, struct usb_hcd *);
46:	static void for_each_companion(struct pci_dev *, struct usb_hcd *, companion_fn);
577:	static int hcd_pci_restore(struct device *);
572:	static int hcd_pci_resume(struct device *);
566:	static int hcd_pci_resume_noirq(struct device *);
603:	static int hcd_pci_runtime_resume(struct device *);
592:	static int hcd_pci_runtime_suspend(struct device *);
522:	static int hcd_pci_suspend(struct device *);
527:	static int hcd_pci_suspend_noirq(struct device *);
133:	static void non_ehci_add(struct pci_dev *, struct usb_hcd *, struct pci_dev *, struct usb_hcd *);
478:	static int resume_common(struct device *, int);
423:	static int suspend_common(struct device *, bool);

File drivers/usb/core/hcd.c:
2519:	struct usb_hcd *__usb_create_hcd(const struct hc_driver *, struct device *, struct device *, const char *, struct usb_hcd *);
2293:	int hcd_bus_resume(struct usb_device *, pm_message_t);
2240:	int hcd_bus_suspend(struct usb_device *, pm_message_t);
2740:	int usb_add_hcd(struct usb_hcd *, unsigned int, unsigned long);
2134:	int usb_alloc_streams(struct usb_interface *, struct usb_host_endpoint **, unsigned int, unsigned int, gfp_t);
1182:	long usb_calc_bus_time(int, int, int, int);
2617:	struct usb_hcd *usb_create_hcd(const struct hc_driver *, struct device *, const char *);
2595:	struct usb_hcd *usb_create_shared_hcd(const struct hc_driver *, struct device *, const char *, struct usb_hcd *);
2184:	int usb_free_streams(struct usb_interface *, struct usb_host_endpoint **, unsigned int, gfp_t);
2651:	struct usb_hcd *usb_get_hcd(struct usb_hcd *);
2474:	void usb_hc_died(struct usb_hcd *);
1960:	int usb_hcd_alloc_bandwidth(struct usb_device *, struct usb_host_config *, struct usb_host_interface *, struct usb_host_interface *);
1299:	int usb_hcd_check_unlink_urb(struct usb_hcd *, struct urb *, int);
2082:	void usb_hcd_disable_endpoint(struct usb_device *, struct usb_host_endpoint *);
1156:	void usb_hcd_end_port_resume(struct usb_bus *, int);
2674:	int usb_hcd_find_raw_port_number(struct usb_hcd *, int);
1868:	void usb_hcd_flush_endpoint(struct usb_device *, struct usb_host_endpoint *);
2227:	int usb_hcd_get_frame_number(struct usb_device *);
1826:	void usb_hcd_giveback_urb(struct usb_hcd *, struct urb *, int);
2446:	irqreturn_t usb_hcd_irq(int, void *);
2666:	int usb_hcd_is_primary_hcd(struct usb_hcd *);
1241:	int usb_hcd_link_urb_to_ep(struct usb_hcd *, struct urb *);
1500:	int usb_hcd_map_urb_for_dma(struct usb_hcd *, struct urb *, gfp_t);
3016:	void usb_hcd_platform_shutdown(struct platform_device *);
749:	void usb_hcd_poll_rh_status(struct usb_hcd *);
2101:	void usb_hcd_reset_endpoint(struct usb_device *, struct usb_host_endpoint *);
2377:	void usb_hcd_resume_root_hub(struct usb_hcd *);
1134:	void usb_hcd_start_port_resume(struct usb_bus *, int);
1628:	int usb_hcd_submit_urb(struct urb *, gfp_t);
2218:	void usb_hcd_synchronize_unlinks(struct usb_device *);
1703:	int usb_hcd_unlink_urb(struct urb *, int);
1332:	void usb_hcd_unlink_urb_from_ep(struct usb_hcd *, struct urb *);
1453:	void usb_hcd_unmap_urb_for_dma(struct usb_hcd *, struct urb *);
1425:	void usb_hcd_unmap_urb_setup_for_dma(struct usb_hcd *, struct urb *);
3054:	void usb_mon_deregister(void);
3042:	int usb_mon_register(const struct usb_mon_operations *);
2659:	void usb_put_hcd(struct usb_hcd *);
2947:	void usb_remove_hcd(struct usb_hcd *);
1736:	static void __usb_hcd_giveback_urb(struct urb *);
879:	static ssize_t authorized_default_show(struct device *, struct device_attribute *, char *);
890:	static ssize_t authorized_default_store(struct device *, struct device_attribute *, const char *, size_t);
1373:	static int hcd_alloc_coherent(struct usb_bus *, gfp_t, dma_addr_t *, void **, size_t, enum dma_data_direction);
2633:	static void hcd_release(struct kref *);
2360:	static void hcd_resume_work(struct work_struct *);
923:	static ssize_t interface_authorized_default_show(struct device *, struct device_attribute *, char *);
939:	static ssize_t interface_authorized_default_store(struct device *, struct device_attribute *, const char *, size_t);
793:	static void rh_timer_func(struct timer_list *);
1681:	static int unlink1(struct usb_hcd *, struct urb *, int);
1445:	static void unmap_urb_for_dma(struct usb_hcd *, struct urb *);
1041:	static void usb_deregister_bus(struct usb_bus *);
1780:	static void usb_giveback_urb_bh(unsigned long);

File drivers/usb/core/hub.c:
4339:	int hub_port_debounce(struct usb_hub *, int, bool);
2570:	int usb_authorize_device(struct usb_device *);
415:	int usb_clear_port_feature(struct usb_device *, int, int);
2555:	int usb_deauthorize_device(struct usb_device *);
1941:	bool usb_device_is_owned(struct usb_device *);
135:	int usb_device_supports_lpm(struct usb_device *);
4108:	int usb_disable_lpm(struct usb_device *);
3048:	int usb_disable_ltm(struct usb_device *);
2135:	void usb_disconnect(struct usb_device **);
4165:	void usb_enable_lpm(struct usb_device *);
3070:	void usb_enable_ltm(struct usb_device *);
4382:	void usb_ep0_reinit(struct usb_device *);
5965:	acpi_handle usb_get_hub_port_acpi_handle(struct usb_device *, int);
5911:	void usb_hub_adjust_deviceremovable(struct usb_device *, struct usb_hub_descriptor *);
1896:	int usb_hub_claim_port(struct usb_device *, unsigned int, struct usb_dev_state *);
5465:	void usb_hub_cleanup(void);
828:	int usb_hub_clear_tt_buffer(struct urb *);
5900:	struct usb_device *usb_hub_find_child(struct usb_device *, int);
5440:	int usb_hub_init(void);
1928:	void usb_hub_release_all_ports(struct usb_device *, struct usb_dev_state *);
1912:	int usb_hub_release_port(struct usb_device *, unsigned int, struct usb_dev_state *);
794:	int usb_hub_set_port_power(struct usb_device *, struct usb_hub *, int, bool);
128:	struct usb_hub *usb_hub_to_struct_hub(struct usb_device *);
638:	void usb_kick_hub_wq(struct usb_device *);
2448:	int usb_new_device(struct usb_device *);
4317:	int usb_port_disable(struct usb_device *);
3470:	int usb_port_resume(struct usb_device *, pm_message_t);
3199:	int usb_port_suspend(struct usb_device *, pm_message_t);
5880:	void usb_queue_reset_device(struct usb_interface *);
3559:	int usb_remote_wakeup(struct usb_device *);
958:	int usb_remove_device(struct usb_device *);
5762:	int usb_reset_device(struct usb_device *);
3761:	void usb_root_hub_lost_power(struct usb_device *);
1986:	void usb_set_device_state(struct usb_device *, enum usb_device_state);
4141:	int usb_unlocked_disable_lpm(struct usb_device *);
4204:	void usb_unlocked_enable_lpm(struct usb_device *);
654:	void usb_wakeup_notification(struct usb_device *, unsigned int);
406:	static int clear_hub_feature(struct usb_device *, int);
1878:	static int find_port_owner(struct usb_device *, unsigned int, struct usb_dev_state ***);
983:	static void hub_activate(struct usb_hub *, enum hub_activation_type);
1324:	static int hub_configure(struct usb_hub *, struct usb_endpoint_descriptor *);
1662:	static void hub_disconnect(struct usb_interface *);
5288:	static void hub_event(struct work_struct *);
575:	static int hub_ext_port_status(struct usb_hub *, int, int, u16 *, u16 *, u32 *);
895:	static int hub_hub_status(struct usb_hub *, u16 *, u16 *);
1252:	static void hub_init_func2(struct work_struct *);
1259:	static void hub_init_func3(struct work_struct *);
1840:	static int hub_ioctl(struct usb_interface *, unsigned int, void *);
676:	static void hub_irq(struct urb *);
4897:	static void hub_port_connect(struct usb_hub *, int, u16, u16);
4287:	static int hub_port_disable(struct usb_hub *, int, int);
4475:	static int hub_port_init(struct usb_hub *, struct usb_device *, int, int);
928:	static void hub_port_logical_disconnect(struct usb_hub *, int);
2805:	static int hub_port_reset(struct usb_hub *, int, struct usb_device *, unsigned int, bool);
2690:	static bool hub_port_warm_reset_required(struct usb_hub *, int, u16);
1314:	static int hub_post_reset(struct usb_interface *);
870:	static void hub_power_on(struct usb_hub *, bool);
1303:	static int hub_pre_reset(struct usb_interface *);
1724:	static int hub_probe(struct usb_interface *, const struct usb_device_id *);
1270:	static void hub_quiesce(struct usb_hub *, enum hub_quiescing_type);
1651:	static void hub_release(struct kref *);
3741:	static int hub_reset_resume(struct usb_interface *);
3724:	static int hub_resume(struct usb_interface *);
3635:	static int hub_suspend(struct usb_interface *, pm_message_t);
745:	static void hub_tt_work(struct work_struct *);
611:	static void kick_hub_wq(struct usb_hub *);
465:	static void led_work(struct work_struct *);
1951:	static void recursively_mark_NOTATTACHED(struct usb_device *);
2083:	static void release_devnum(struct usb_device *, struct usb_device *);
425:	static int set_port_feature(struct usb_device *, int, int);
452:	static void set_port_led(int, int, struct usb_hub *, struct usb_hub *);
4064:	static int usb_disable_link_state(struct usb_hcd *, struct usb_device *, enum usb3_link_state);
3128:	static int usb_disable_remote_wakeup(struct usb_device *);
3978:	static void usb_enable_link_state(struct usb_hcd *, struct usb_device *, enum usb3_link_state);
5597:	static int usb_reset_and_verify_device(struct usb_device *);
3865:	static int usb_set_device_initiated_lpm(struct usb_device *, enum usb3_link_state, bool);
3920:	static int usb_set_lpm_timeout(struct usb_device *, enum usb3_link_state, int);

File drivers/usb/core/message.c:
2137:	int cdc_parse_cdc_header(struct usb_cdc_parsed_header *, struct usb_interface *, u8 *, int);
1666:	void usb_authorize_interface(struct usb_interface *);
229:	int usb_bulk_msg(struct usb_device *, unsigned int, void *, int, int *, int);
874:	char *usb_cache_string(struct usb_device *, int);
1060:	int usb_clear_halt(struct usb_device *, int);
135:	int usb_control_msg(struct usb_device *, unsigned int, __u8, __u8, __u16, __u16, void *, __u16, int);
1644:	void usb_deauthorize_interface(struct usb_interface *);
1217:	void usb_disable_device(struct usb_device *, int);
1135:	void usb_disable_endpoint(struct usb_device *, unsigned int, bool);
1194:	void usb_disable_interface(struct usb_device *, struct usb_interface *, bool);
2101:	int usb_driver_set_configuration(struct usb_device *, int);
1293:	void usb_enable_endpoint(struct usb_device *, struct usb_host_endpoint *, bool);
1317:	void usb_enable_interface(struct usb_device *, struct usb_interface *, bool);
644:	int usb_get_descriptor(struct usb_device *, unsigned char, unsigned char, void *, int);
915:	int usb_get_device_descriptor(struct usb_device *, unsigned int);
980:	int usb_get_status(struct usb_device *, int, int, int, void *);
190:	int usb_interrupt_msg(struct usb_device *, unsigned int, void *, int, int *, int);
1525:	int usb_reset_configuration(struct usb_device *);
1170:	void usb_reset_endpoint(struct usb_device *, unsigned int);
1812:	int usb_set_configuration(struct usb_device *, int);
1365:	int usb_set_interface(struct usb_device *, int, int);
940:	int usb_set_isoch_delay(struct usb_device *);
585:	void usb_sg_cancel(struct usb_sg_request *);
367:	int usb_sg_init(struct usb_sg_request *, struct usb_device *, unsigned int, unsigned int, struct scatterlist *, int, size_t, gfp_t);
515:	void usb_sg_wait(struct usb_sg_request *);
823:	int usb_string(struct usb_device *, int, char *, size_t);
1751:	static void __usb_queue_reset_device(struct work_struct *);
1095:	static int create_intf_ep_devs(struct usb_interface *);
2048:	static void driver_set_config_work(struct work_struct *);
1110:	static void remove_intf_ep_devs(struct usb_interface *);
259:	static void sg_clean(struct usb_sg_request *);
270:	static void sg_complete(struct urb *);
33:	static void usb_api_blocking_completion(struct urb *);
692:	static int usb_get_string(struct usb_device *, unsigned short, unsigned char, void *, int);
1677:	static int usb_if_uevent(struct device *, struct kobj_uevent_env *);
1627:	static void usb_release_interface(struct device *);
48:	static int usb_start_wait_urb(struct urb *, int, int *);
729:	static int usb_string_sub(struct usb_device *, unsigned int, unsigned int, unsigned char *);

File drivers/usb/core/notify.c:
63:	void usb_notify_add_bus(struct usb_bus *);
49:	void usb_notify_add_device(struct usb_device *);
68:	void usb_notify_remove_bus(struct usb_bus *);
54:	void usb_notify_remove_device(struct usb_device *);
29:	void usb_register_notify(struct notifier_block *);
42:	void usb_unregister_notify(struct notifier_block *);

File drivers/usb/core/phy.c:
48:	struct usb_phy_roothub *usb_phy_roothub_alloc(struct device *);
104:	int usb_phy_roothub_exit(struct usb_phy_roothub *);
77:	int usb_phy_roothub_init(struct usb_phy_roothub *);
152:	void usb_phy_roothub_power_off(struct usb_phy_roothub *);
177:	int usb_phy_roothub_resume(struct device *, struct usb_phy_roothub *);
164:	int usb_phy_roothub_suspend(struct device *, struct usb_phy_roothub *);

File drivers/usb/core/port.c:
506:	int usb_hub_create_port_device(struct usb_hub *, int);
589:	void usb_hub_remove_port_device(struct usb_hub *, int);
19:	static ssize_t connect_type_show(struct device *, struct device_attribute *, char *);
365:	static void link_peers_report(struct usb_port *, struct usb_port *);
420:	static int match_location(struct usb_device *, void *);
44:	static ssize_t over_current_count_show(struct device *, struct device_attribute *, char *);
53:	static ssize_t quirks_show(struct device *, struct device_attribute *, char *);
61:	static ssize_t quirks_store(struct device *, struct device_attribute *, const char *, size_t);
75:	static ssize_t usb3_lpm_permit_show(struct device *, struct device_attribute *, char *);
96:	static ssize_t usb3_lpm_permit_store(struct device *, struct device_attribute *, const char *, size_t);
172:	static void usb_port_device_release(struct device *);
181:	static int usb_port_runtime_resume(struct device *);
237:	static int usb_port_runtime_suspend(struct device *);

File drivers/usb/core/quirks.c:
583:	void usb_detect_interface_quirks(struct usb_device *);
555:	void usb_detect_quirks(struct usb_device *);
596:	void usb_release_quirk_list(void);
28:	static int quirks_param_set(const char *, const struct kernel_param *);
513:	static u32 usb_detect_static_quirks(struct usb_device *, const struct usb_device_id *);

File drivers/usb/core/sysfs.c:
925:	int usb_create_sysfs_dev_files(struct usb_device *);
1134:	void usb_create_sysfs_intf_files(struct usb_interface *);
947:	void usb_remove_sysfs_dev_files(struct usb_device *);
1149:	void usb_remove_sysfs_intf_files(struct usb_interface *);
406:	static ssize_t active_duration_show(struct device *, struct device_attribute *, char *);
745:	static ssize_t authorized_show(struct device *, struct device_attribute *, char *);
757:	static ssize_t authorized_store(struct device *, struct device_attribute *, const char *, size_t);
420:	static ssize_t autosuspend_show(struct device *, struct device_attribute *, char *);
426:	static ssize_t autosuspend_store(struct device *, struct device_attribute *, const char *, size_t);
260:	static ssize_t avoid_reset_quirk_show(struct device *, struct device_attribute *, char *);
269:	static ssize_t avoid_reset_quirk_store(struct device *, struct device_attribute *, const char *, size_t);
989:	static ssize_t bAlternateSetting_show(struct device *, struct device_attribute *, char *);
89:	static ssize_t bConfigurationValue_show(struct device *, struct device_attribute *, char *);
91:	static ssize_t bConfigurationValue_store(struct device *, struct device_attribute *, const char *, size_t);
737:	static ssize_t bDeviceClass_show(struct device *, struct device_attribute *, char *);
739:	static ssize_t bDeviceProtocol_show(struct device *, struct device_attribute *, char *);
738:	static ssize_t bDeviceSubClass_show(struct device *, struct device_attribute *, char *);
991:	static ssize_t bInterfaceClass_show(struct device *, struct device_attribute *, char *);
988:	static ssize_t bInterfaceNumber_show(struct device *, struct device_attribute *, char *);
993:	static ssize_t bInterfaceProtocol_show(struct device *, struct device_attribute *, char *);
992:	static ssize_t bInterfaceSubClass_show(struct device *, struct device_attribute *, char *);
741:	static ssize_t bMaxPacketSize0_show(struct device *, struct device_attribute *, char *);
50:	static ssize_t bMaxPower_show(struct device *, struct device_attribute *, char *);
740:	static ssize_t bNumConfigurations_show(struct device *, struct device_attribute *, char *);
990:	static ssize_t bNumEndpoints_show(struct device *, struct device_attribute *, char *);
47:	static ssize_t bNumInterfaces_show(struct device *, struct device_attribute *, char *);
723:	static ssize_t bcdDevice_show(struct device *, struct device_attribute *, char *);
48:	static ssize_t bmAttributes_show(struct device *, struct device_attribute *, char *);
198:	static ssize_t busnum_show(struct device *, struct device_attribute *, char *);
69:	static ssize_t configuration_show(struct device *, struct device_attribute *, char *);
389:	static ssize_t connected_duration_show(struct device *, struct device_attribute *, char *);
848:	static umode_t dev_string_attrs_are_visible(struct kobject *, struct attribute *, int);
208:	static ssize_t devnum_show(struct device *, struct device_attribute *, char *);
218:	static ssize_t devpath_show(struct device *, struct device_attribute *, char *);
969:	static ssize_t iad_bFirstInterface_show(struct device *, struct device_attribute *, char *);
971:	static ssize_t iad_bFunctionClass_show(struct device *, struct device_attribute *, char *);
973:	static ssize_t iad_bFunctionProtocol_show(struct device *, struct device_attribute *, char *);
972:	static ssize_t iad_bFunctionSubClass_show(struct device *, struct device_attribute *, char *);
970:	static ssize_t iad_bInterfaceCount_show(struct device *, struct device_attribute *, char *);
722:	static ssize_t idProduct_show(struct device *, struct device_attribute *, char *);
721:	static ssize_t idVendor_show(struct device *, struct device_attribute *, char *);
1056:	static ssize_t interface_authorized_show(struct device *, struct device_attribute *, char *);
1067:	static ssize_t interface_authorized_store(struct device *, struct device_attribute *, const char *, size_t);
995:	static ssize_t interface_show(struct device *, struct device_attribute *, char *);
1112:	static umode_t intf_assoc_attrs_are_visible(struct kobject *, struct attribute *, int);
455:	static ssize_t level_show(struct device *, struct device_attribute *, char *);
467:	static ssize_t level_store(struct device *, struct device_attribute *, const char *, size_t);
323:	static ssize_t ltm_capable_show(struct device *, struct device_attribute *, char *);
140:	static ssize_t manufacturer_show(struct device *, struct device_attribute *, char *);
240:	static ssize_t maxchild_show(struct device *, struct device_attribute *, char *);
1009:	static ssize_t modalias_show(struct device *, struct device_attribute *, char *);
334:	static ssize_t persist_show(struct device *, struct device_attribute *, char *);
342:	static ssize_t persist_store(struct device *, struct device_attribute *, const char *, size_t);
139:	static ssize_t product_show(struct device *, struct device_attribute *, char *);
250:	static ssize_t quirks_show(struct device *, struct device_attribute *, char *);
881:	static ssize_t read_descriptors(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
300:	static ssize_t removable_show(struct device *, struct device_attribute *, char *);
777:	static ssize_t remove_store(struct device *, struct device_attribute *, const char *, size_t);
178:	static ssize_t rx_lanes_show(struct device *, struct device_attribute *, char *);
141:	static ssize_t serial_show(struct device *, struct device_attribute *, char *);
143:	static ssize_t speed_show(struct device *, struct device_attribute *, char *);
1035:	static ssize_t supports_autosuspend_show(struct device *, struct device_attribute *, char *);
188:	static ssize_t tx_lanes_show(struct device *, struct device_attribute *, char *);
290:	static ssize_t urbnum_show(struct device *, struct device_attribute *, char *);
501:	static ssize_t usb2_hardware_lpm_show(struct device *, struct device_attribute *, char *);
515:	static ssize_t usb2_hardware_lpm_store(struct device *, struct device_attribute *, const char *, size_t);
570:	static ssize_t usb2_lpm_besl_show(struct device *, struct device_attribute *, char *);
577:	static ssize_t usb2_lpm_besl_store(struct device *, struct device_attribute *, const char *, size_t);
546:	static ssize_t usb2_lpm_l1_timeout_show(struct device *, struct device_attribute *, char *);
554:	static ssize_t usb2_lpm_l1_timeout_store(struct device *, struct device_attribute *, const char *, size_t);
593:	static ssize_t usb3_hardware_lpm_u1_show(struct device *, struct device_attribute *, char *);
615:	static ssize_t usb3_hardware_lpm_u2_show(struct device *, struct device_attribute *, char *);
228:	static ssize_t version_show(struct device *, struct device_attribute *, char *);

File drivers/usb/core/urb.c:
70:	struct urb *usb_alloc_urb(int, gfp_t);
992:	int usb_anchor_empty(struct usb_anchor *);
903:	void usb_anchor_resume_wakeups(struct usb_anchor *);
889:	void usb_anchor_suspend_wakeups(struct usb_anchor *);
127:	void usb_anchor_urb(struct urb *, struct usb_anchor *);
766:	void usb_block_urb(struct urb *);
94:	void usb_free_urb(struct urb *);
943:	struct urb *usb_get_from_anchor(struct usb_anchor *);
111:	struct urb *usb_get_urb(struct urb *);
43:	void usb_init_urb(struct urb *);
785:	void usb_kill_anchored_urbs(struct usb_anchor *);
689:	void usb_kill_urb(struct urb *);
817:	void usb_poison_anchored_urbs(struct usb_anchor *);
730:	void usb_poison_urb(struct urb *);
970:	void usb_scuttle_anchored_urbs(struct usb_anchor *);
353:	int usb_submit_urb(struct urb *, gfp_t);
165:	void usb_unanchor_urb(struct urb *);
870:	void usb_unlink_anchored_urbs(struct usb_anchor *);
650:	int usb_unlink_urb(struct urb *);
845:	void usb_unpoison_anchored_urbs(struct usb_anchor *);
745:	void usb_unpoison_urb(struct urb *);
203:	int usb_urb_ep_type_check(const struct urb *);
924:	int usb_wait_anchor_empty_timeout(struct usb_anchor *, unsigned int);
150:	static void __usb_unanchor_urb(struct urb *, struct usb_anchor *);
19:	static void urb_destroy(struct kref *);

File drivers/usb/core/usb-acpi.c:
26:	bool usb_acpi_power_manageable(struct usb_device *, int);
236:	int usb_acpi_register(void);
52:	int usb_acpi_set_power_state(struct usb_device *, int, bool);
241:	void usb_acpi_unregister(void);
225:	static bool usb_acpi_bus_match(struct device *);
142:	static struct acpi_device *usb_acpi_find_companion(struct device *);
126:	static struct acpi_device *usb_acpi_find_port(struct acpi_device *, int);

File drivers/usb/core/usb.c:
834:	int __usb_get_extra_descriptor(char *, unsigned int, unsigned char, void **, size_t);
886:	void *usb_alloc_coherent(struct usb_device *, size_t, gfp_t, dma_addr_t *);
555:	struct usb_device *usb_alloc_dev(struct usb_device *, struct usb_bus *, unsigned int);
310:	struct usb_host_interface *usb_altnum_to_altsetting(const struct usb_interface *, unsigned int);
61:	int usb_disabled(void);
223:	struct usb_host_interface *usb_find_alt_setting(struct usb_host_config *, unsigned int, unsigned int);
137:	int usb_find_common_endpoints(struct usb_host_interface *, struct usb_endpoint_descriptor **, struct usb_endpoint_descriptor **, struct usb_endpoint_descriptor **, struct usb_endpoint_descriptor **);
183:	int usb_find_common_endpoints_reverse(struct usb_host_interface *, struct usb_endpoint_descriptor **, struct usb_endpoint_descriptor **, struct usb_endpoint_descriptor **, struct usb_endpoint_descriptor **);
354:	struct usb_interface *usb_find_interface(struct usb_driver *, int);
396:	int usb_for_each_dev(void *, int (*)(struct usb_device *, void *));
906:	void usb_free_coherent(struct usb_device *, size_t, void *, dma_addr_t);
822:	int usb_get_current_frame_number(struct usb_device *);
688:	struct usb_device *usb_get_dev(struct usb_device *);
722:	struct usb_interface *usb_get_intf(struct usb_interface *);
274:	struct usb_interface *usb_ifnum_to_if(const struct usb_device *, unsigned int);
775:	int usb_lock_device_for_reset(struct usb_device *, const struct usb_interface *);
703:	void usb_put_dev(struct usb_device *);
738:	void usb_put_intf(struct usb_interface *);
376:	static int __each_dev(struct device *, void *);
329:	static int __find_interface(struct device *, void *);
77:	static bool match_endpoint(struct usb_endpoint_descriptor *, struct usb_endpoint_descriptor **, struct usb_endpoint_descriptor **, struct usb_endpoint_descriptor **, struct usb_endpoint_descriptor **);
1142:	static int usb_bus_notify(struct notifier_block *, unsigned long, void *);
458:	static void usb_dev_complete(struct device *);
474:	static int usb_dev_freeze(struct device *);
484:	static int usb_dev_poweroff(struct device *);
453:	static int usb_dev_prepare(struct device *);
489:	static int usb_dev_restore(struct device *);
469:	static int usb_dev_resume(struct device *);
464:	static int usb_dev_suspend(struct device *);
479:	static int usb_dev_thaw(struct device *);
429:	static int usb_dev_uevent(struct device *, struct kobj_uevent_env *);
511:	static char *usb_devnode(struct device *, umode_t *, kuid_t *, kgid_t *);
1242:	static void usb_exit(void);
1187:	static int usb_init(void);
411:	static void usb_release_dev(struct device *);

File drivers/usb/early/../host/xhci-ext-caps.h:
97:	static int xhci_find_next_ext_cap(void *, u32, int);

File drivers/usb/early/ehci-dbgp.c:
1001:	int dbgp_external_startup(struct usb_hcd *);
973:	int dbgp_reset_prep(struct usb_hcd *);
830:	int early_dbgp_init(char *);
495:	static int _dbgp_external_startup(void);
298:	static int dbgp_bulk_read(unsigned int, unsigned int, void *, int, int);
270:	static int dbgp_bulk_write(unsigned int, const char *, int, unsigned int);
329:	static int dbgp_control_msg(unsigned int, int, int, int, void *, int, int);
200:	static int dbgp_wait_until_done(unsigned int, int);
678:	static void default_set_debug_port(int);
913:	static void early_dbgp_write(const char *, u32, struct console *);
1047:	static int kgdbdbgp_parse_config(char *);
1015:	static int kgdbdbgp_read_char(void);
1067:	static int kgdbdbgp_reader_thread(void *);
1088:	static int kgdbdbgp_start_thread(void);
1034:	static void kgdbdbgp_write_char(u8);
684:	static void nvidia_set_debug_port(int);

File drivers/usb/early/xhci-dbc.c:
605:	int early_xdbc_parse_parameter(char *);
918:	void early_xdbc_register_console(void);
658:	int early_xdbc_setup_hardware(void);
878:	static void early_xdbc_write(struct console *, const char *, u32);
463:	static int xdbc_bulk_transfer(void *, int, bool);
187:	static void xdbc_free_ring(struct xdbc_ring *);
93:	static void *xdbc_get_page(dma_addr_t *);
757:	static void xdbc_handle_events(void);
961:	static int xdbc_init(void);
225:	static void xdbc_mem_init(void);
198:	static void xdbc_reset_ring(struct xdbc_ring *);
937:	static int xdbc_scrub_function(void *);
417:	static int xdbc_start(void);

File drivers/usb/host/./xhci-trace.h:
533:	static void __bpf_trace_xhci_dbc_log_request(void *, struct dbc_request *);
75:	static void __bpf_trace_xhci_log_ctx(void *, struct xhci_hcd *, struct xhci_container_ctx *, unsigned int);
329:	static void __bpf_trace_xhci_log_ep_ctx(void *, struct xhci_ep_ctx *);
174:	static void __bpf_trace_xhci_log_free_virt_dev(void *, struct xhci_virt_device *);
30:	static void __bpf_trace_xhci_log_msg(void *, struct va_format *);
501:	static void __bpf_trace_xhci_log_portsc(void *, u32, u32);
435:	static void __bpf_trace_xhci_log_ring(void *, struct xhci_ring *);
369:	static void __bpf_trace_xhci_log_slot_ctx(void *, struct xhci_slot_ctx *);
116:	static void __bpf_trace_xhci_log_trb(void *, struct xhci_ring *, struct xhci_generic_trb *);
257:	static void __bpf_trace_xhci_log_urb(void *, struct urb *);
533:	static void perf_trace_xhci_dbc_log_request(void *, struct dbc_request *);
75:	static void perf_trace_xhci_log_ctx(void *, struct xhci_hcd *, struct xhci_container_ctx *, unsigned int);
329:	static void perf_trace_xhci_log_ep_ctx(void *, struct xhci_ep_ctx *);
174:	static void perf_trace_xhci_log_free_virt_dev(void *, struct xhci_virt_device *);
30:	static void perf_trace_xhci_log_msg(void *, struct va_format *);
501:	static void perf_trace_xhci_log_portsc(void *, u32, u32);
435:	static void perf_trace_xhci_log_ring(void *, struct xhci_ring *);
369:	static void perf_trace_xhci_log_slot_ctx(void *, struct xhci_slot_ctx *);
116:	static void perf_trace_xhci_log_trb(void *, struct xhci_ring *, struct xhci_generic_trb *);
257:	static void perf_trace_xhci_log_urb(void *, struct urb *);
205:	static void perf_trace_xhci_log_virt_dev(void *, struct xhci_virt_device *);
533:	static int trace_event_define_fields_xhci_dbc_log_request(struct trace_event_call *);
75:	static int trace_event_define_fields_xhci_log_ctx(struct trace_event_call *);
329:	static int trace_event_define_fields_xhci_log_ep_ctx(struct trace_event_call *);
174:	static int trace_event_define_fields_xhci_log_free_virt_dev(struct trace_event_call *);
30:	static int trace_event_define_fields_xhci_log_msg(struct trace_event_call *);
501:	static int trace_event_define_fields_xhci_log_portsc(struct trace_event_call *);
435:	static int trace_event_define_fields_xhci_log_ring(struct trace_event_call *);
369:	static int trace_event_define_fields_xhci_log_slot_ctx(struct trace_event_call *);
116:	static int trace_event_define_fields_xhci_log_trb(struct trace_event_call *);
257:	static int trace_event_define_fields_xhci_log_urb(struct trace_event_call *);
205:	static int trace_event_define_fields_xhci_log_virt_dev(struct trace_event_call *);
533:	static void trace_event_raw_event_xhci_dbc_log_request(void *, struct dbc_request *);
75:	static void trace_event_raw_event_xhci_log_ctx(void *, struct xhci_hcd *, struct xhci_container_ctx *, unsigned int);
329:	static void trace_event_raw_event_xhci_log_ep_ctx(void *, struct xhci_ep_ctx *);
174:	static void trace_event_raw_event_xhci_log_free_virt_dev(void *, struct xhci_virt_device *);
30:	static void trace_event_raw_event_xhci_log_msg(void *, struct va_format *);
501:	static void trace_event_raw_event_xhci_log_portsc(void *, u32, u32);
435:	static void trace_event_raw_event_xhci_log_ring(void *, struct xhci_ring *);
369:	static void trace_event_raw_event_xhci_log_slot_ctx(void *, struct xhci_slot_ctx *);
116:	static void trace_event_raw_event_xhci_log_trb(void *, struct xhci_ring *, struct xhci_generic_trb *);
257:	static void trace_event_raw_event_xhci_log_urb(void *, struct urb *);
205:	static void trace_event_raw_event_xhci_log_virt_dev(void *, struct xhci_virt_device *);
533:	static enum print_line_t trace_raw_output_xhci_dbc_log_request(struct trace_iterator *, int, struct trace_event *);
75:	static enum print_line_t trace_raw_output_xhci_log_ctx(struct trace_iterator *, int, struct trace_event *);
329:	static enum print_line_t trace_raw_output_xhci_log_ep_ctx(struct trace_iterator *, int, struct trace_event *);
174:	static enum print_line_t trace_raw_output_xhci_log_free_virt_dev(struct trace_iterator *, int, struct trace_event *);
30:	static enum print_line_t trace_raw_output_xhci_log_msg(struct trace_iterator *, int, struct trace_event *);
501:	static enum print_line_t trace_raw_output_xhci_log_portsc(struct trace_iterator *, int, struct trace_event *);
435:	static enum print_line_t trace_raw_output_xhci_log_ring(struct trace_iterator *, int, struct trace_event *);
369:	static enum print_line_t trace_raw_output_xhci_log_slot_ctx(struct trace_iterator *, int, struct trace_event *);
116:	static enum print_line_t trace_raw_output_xhci_log_trb(struct trace_iterator *, int, struct trace_event *);
257:	static enum print_line_t trace_raw_output_xhci_log_urb(struct trace_iterator *, int, struct trace_event *);
205:	static enum print_line_t trace_raw_output_xhci_log_virt_dev(struct trace_iterator *, int, struct trace_event *);

File drivers/usb/host/ehci-dbg.c:
915:	static struct debug_buffer *alloc_buffer(struct usb_bus *, ssize_t (*)(struct debug_buffer *));
188:	static int dbg_command_buf(char *, const char *, u32, unsigned int);
212:	static int dbg_port_buf(char *, const char *, int, u32, unsigned int);
152:	static int dbg_status_buf(char *, const char *, u32, unsigned int);
990:	static int debug_async_open(struct inode *, struct file *);
997:	static int debug_bandwidth_open(struct inode *, struct file *);
978:	static int debug_close(struct inode *, struct file *);
955:	static ssize_t debug_output(struct file *, char *, size_t, loff_t *);
1005:	static int debug_periodic_open(struct inode *, struct file *);
1018:	static int debug_registers_open(struct inode *, struct file *);
470:	static ssize_t fill_async_buffer(struct debug_buffer *);
510:	static ssize_t fill_bandwidth_buffer(struct debug_buffer *);
621:	static ssize_t fill_periodic_buffer(struct debug_buffer *);
755:	static ssize_t fill_registers_buffer(struct debug_buffer *);
370:	static void qh_lines(struct ehci_qh *, char **, unsigned int *, struct ehci_hcd *);

File drivers/usb/host/ehci-hcd.c:
147:	int ehci_handshake(struct ehci_hcd *, void *, u32, u32, int);
1237:	void ehci_init_driver(struct hc_driver *, const struct ehci_driver_overrides *);
229:	int ehci_reset(struct ehci_hcd *);
1118:	int ehci_resume(struct usb_hcd *, bool);
656:	int ehci_setup(struct usb_hcd *);
1084:	int ehci_suspend(struct usb_hcd *, bool);
944:	static void ehci_endpoint_disable(struct usb_hcd *, struct usb_host_endpoint *);
1018:	static void ehci_endpoint_reset(struct usb_hcd *, struct usb_host_endpoint *);
1057:	static int ehci_get_frame(struct usb_hcd *);
179:	static int ehci_halt(struct ehci_hcd *);
1367:	static void ehci_hcd_cleanup(void);
1294:	static int ehci_hcd_init(void);
690:	static irqreturn_t ehci_irq(struct usb_hcd *);
271:	static void ehci_quiesce(struct ehci_hcd *);
1067:	static void ehci_remove_device(struct usb_hcd *, struct usb_device *);
571:	static int ehci_run(struct usb_hcd *);
354:	static void ehci_shutdown(struct usb_hcd *);
334:	static void ehci_silence_controller(struct ehci_hcd *);
418:	static void ehci_stop(struct usb_hcd *);
893:	static int ehci_urb_dequeue(struct usb_hcd *, struct urb *, int);
852:	static int ehci_urb_enqueue(struct usb_hcd *, struct urb *, gfp_t);
384:	static void ehci_work(struct ehci_hcd *);

File drivers/usb/host/ehci-hub.c:
147:	void ehci_adjust_port_wakeup_flags(struct ehci_hcd *, bool, bool);
872:	int ehci_hub_control(struct usb_hcd *, u16, u16, u16, char *, u16);
378:	static int ehci_bus_resume(struct usb_hcd *);
214:	static int ehci_bus_suspend(struct usb_hcd *);
519:	static unsigned long ehci_get_resuming_ports(struct usb_hcd *);
620:	static int ehci_hub_status_data(struct usb_hcd *, char *);
1328:	static int ehci_port_handed_over(struct usb_hcd *, int);
1339:	static int ehci_port_power(struct ehci_hcd *, int, bool);
1319:	static void ehci_relinquish_port(struct usb_hcd *, int);
25:	static int persist_enabled_on_companion(struct usb_device *, void *);
539:	static void set_owner(struct ehci_hcd *, int, int);

File drivers/usb/host/ehci-mem.c:
107:	static void ehci_mem_cleanup(struct ehci_hcd *);
67:	static struct ehci_qh *ehci_qh_alloc(struct ehci_hcd *, gfp_t);
36:	static struct ehci_qtd *ehci_qtd_alloc(gfp_t, struct ehci_hcd *);
54:	static void qh_destroy(struct ehci_hcd *, struct ehci_qh *);

File drivers/usb/host/ehci-pci.c:
421:	static void ehci_pci_cleanup(void);
404:	static int ehci_pci_init(void);
362:	static int ehci_pci_probe(struct pci_dev *, const struct pci_device_id *);
60:	static int ehci_pci_reinit(struct ehci_hcd *, struct pci_dev *);
369:	static void ehci_pci_remove(struct pci_dev *);
338:	static int ehci_pci_resume(struct usb_hcd *, bool);
87:	static int ehci_pci_setup(struct usb_hcd *);

File drivers/usb/host/ehci-q.c:
155:	static void ehci_clear_tt_buffer(struct ehci_hcd *, struct ehci_qh *, struct urb *, u32);
140:	static void ehci_clear_tt_buffer_complete(struct usb_hcd *, struct usb_host_endpoint *);
251:	static void ehci_urb_done(struct ehci_hcd *, struct urb *, int);
1297:	static void end_iaa_cycle(struct ehci_hcd *);
1311:	static void end_unlink_async(struct ehci_hcd *);
1020:	static struct ehci_qh *qh_append_tds(struct ehci_hcd *, struct urb *, struct list_head *, int, void **);
289:	static unsigned int qh_completions(struct ehci_hcd *, struct ehci_qh *);
981:	static void qh_link_async(struct ehci_hcd *, struct ehci_qh *);
113:	static void qh_refresh(struct ehci_hcd *, struct ehci_qh *);
575:	static struct list_head *qh_urb_transaction(struct ehci_hcd *, struct urb *, struct list_head *, gfp_t);
37:	static int qtd_fill(struct ehci_qtd *, dma_addr_t, size_t, int, int, struct ehci_hcd *);
555:	static void qtd_list_free(struct ehci_hcd *, struct list_head *, struct urb *);
1257:	static void single_unlink_async(struct ehci_hcd *, struct ehci_qh *);
1276:	static void start_iaa_cycle(struct ehci_hcd *);
1473:	static void start_unlink_async(struct ehci_hcd *, struct ehci_qh *);
1424:	static void unlink_empty_async(struct ehci_hcd *);

File drivers/usb/host/ehci-sched.c:
194:	static void bandwidth_dbg(int, char *, struct ehci_per_sched *, struct ehci_hcd *);
781:	static int check_intr_schedule(struct ehci_hcd *, unsigned int, unsigned int, struct ehci_qh *, unsigned int *, struct ehci_tt *);
261:	static void compute_tt_budget(u8 *, struct ehci_tt *);
517:	static void disable_periodic(struct ehci_hcd *);
504:	static void enable_periodic(struct ehci_hcd *);
101:	static struct ehci_tt *find_tt(struct usb_device *);
1235:	static void iso_sched_free(struct ehci_iso_stream *, struct ehci_iso_sched *);
1139:	static struct ehci_iso_stream *iso_stream_find(struct ehci_hcd *, struct urb *);
1480:	static int iso_stream_schedule(struct ehci_hcd *, struct urb *, struct ehci_iso_stream *);
534:	static void qh_link_periodic(struct ehci_hcd *, struct ehci_qh *);
849:	static int qh_schedule(struct ehci_hcd *, struct ehci_qh *);
206:	static void reserve_release_intr_bandwidth(struct ehci_hcd *, struct ehci_qh *, int);
1316:	static void reserve_release_iso_bandwidth(struct ehci_hcd *, struct ehci_iso_stream *, int);
662:	static void start_unlink_intr(struct ehci_hcd *, struct ehci_qh *);
367:	static int tt_available(struct ehci_hcd *, struct ehci_tt *, unsigned int, unsigned int, struct ehci_per_sched *, struct ehci_per_sched *);

File drivers/usb/host/ehci-sysfs.c:
10:	static ssize_t companion_show(struct device *, struct device_attribute *, char *);
37:	static ssize_t companion_store(struct device *, struct device_attribute *, const char *, size_t);
68:	static ssize_t uframe_periodic_max_show(struct device *, struct device_attribute *, char *);
81:	static ssize_t uframe_periodic_max_store(struct device *, struct device_attribute *, const char *, size_t);

File drivers/usb/host/ehci-timer.c:
134:	static void ehci_disable_ASE(struct ehci_hcd *);
180:	static void ehci_disable_PSE(struct ehci_hcd *);
76:	static void ehci_enable_event(struct ehci_hcd *, unsigned int, bool);
187:	static void ehci_handle_controller_death(struct ehci_hcd *);
243:	static void ehci_handle_intr_unlinks(struct ehci_hcd *);
211:	static void ehci_handle_start_intr_unlinks(struct ehci_hcd *);
398:	static enum hrtimer_restart ehci_hrtimer_func(struct hrtimer *);
320:	static void ehci_iaa_watchdog(struct ehci_hcd *);
95:	static void ehci_poll_ASS(struct ehci_hcd *);
141:	static void ehci_poll_PSS(struct ehci_hcd *);
290:	static void end_free_itds(struct ehci_hcd *);
276:	static void start_free_itds(struct ehci_hcd *);
360:	static void turn_on_io_watchdog(struct ehci_hcd *);

File drivers/usb/host/ohci-dbg.c:
665:	static struct debug_buffer *alloc_buffer(struct ohci_hcd *, ssize_t (*)(struct debug_buffer *));
740:	static int debug_async_open(struct inode *, struct file *);
728:	static int debug_close(struct inode *, struct file *);
704:	static ssize_t debug_output(struct file *, char *, size_t, loff_t *);
747:	static int debug_periodic_open(struct inode *, struct file *);
755:	static int debug_registers_open(struct inode *, struct file *);
465:	static ssize_t fill_async_buffer(struct debug_buffer *);
486:	static ssize_t fill_periodic_buffer(struct debug_buffer *);
581:	static ssize_t fill_registers_buffer(struct debug_buffer *);
64:	static void maybe_print_eds(struct ohci_hcd *, char *, u32, char **, unsigned int *);
240:	static void ohci_dump(struct ohci_hcd *);
42:	static void ohci_dump_intr_mask(struct ohci_hcd *, char *, u32, char **, unsigned int *);
191:	static void ohci_dump_roothub(struct ohci_hcd *, char **, unsigned int *, int);
101:	static void ohci_dump_status(struct ohci_hcd *, char **, unsigned int *);
400:	static ssize_t show_list(char *, size_t, struct ed *, struct ohci_hcd *);

File drivers/usb/host/ohci-hcd.c:
1211:	void ohci_init_driver(struct hc_driver *, const struct ohci_driver_overrides *);
1015:	int ohci_restart(struct ohci_hcd *);
1109:	int ohci_resume(struct usb_hcd *, bool);
701:	int ohci_setup(struct usb_hcd *);
1081:	int ohci_suspend(struct usb_hcd *, bool);
737:	static void io_watchdog_func(struct timer_list *);
349:	static void ohci_endpoint_disable(struct usb_hcd *, struct usb_host_endpoint *);
402:	static int ohci_get_frame(struct usb_hcd *);
1332:	static void ohci_hcd_mod_exit(void);
1257:	static int ohci_hcd_mod_init(void);
453:	static int ohci_init(struct ohci_hcd *);
866:	static irqreturn_t ohci_irq(struct usb_hcd *);
537:	static int ohci_run(struct ohci_hcd *);
437:	static void ohci_shutdown(struct usb_hcd *);
712:	static int ohci_start(struct usb_hcd *);
980:	static void ohci_stop(struct usb_hcd *);
314:	static int ohci_urb_dequeue(struct usb_hcd *, struct urb *, int);
146:	static int ohci_urb_enqueue(struct usb_hcd *, struct urb *, gfp_t);

File drivers/usb/host/ohci-hub.c:
673:	int ohci_hub_control(struct usb_hcd *, u16, u16, u16, char *, u16);
465:	int ohci_hub_status_data(struct usb_hcd *, char *);
321:	static int ohci_bus_resume(struct usb_hcd *);
301:	static int ohci_bus_suspend(struct usb_hcd *);
149:	static int ohci_rh_resume(struct ohci_hcd *);
47:	static int ohci_rh_suspend(struct ohci_hcd *, int);

File drivers/usb/host/ohci-mem.c:
103:	static void td_free(struct ohci_hcd *, struct td *);

File drivers/usb/host/ohci-pci.c:
35:	static int broken_suspend(struct usb_hcd *);
324:	static void ohci_pci_cleanup(void);
305:	static int ohci_pci_init(void);
242:	static int ohci_pci_reset(struct usb_hcd *);
151:	static int ohci_quirk_amd700(struct usb_hcd *);
44:	static int ohci_quirk_amd756(struct usb_hcd *);
140:	static int ohci_quirk_nec(struct usb_hcd *);
129:	static void ohci_quirk_nec_worker(struct work_struct *);
72:	static int ohci_quirk_ns(struct usb_hcd *);
59:	static int ohci_quirk_opti(struct usb_hcd *);
168:	static int ohci_quirk_qemu(struct usb_hcd *);
107:	static int ohci_quirk_toshiba_scc(struct usb_hcd *);
94:	static int ohci_quirk_zfmicro(struct usb_hcd *);

File drivers/usb/host/ohci-q.c:
899:	static void add_to_done_list(struct td *, struct ohci_hcd *, struct ohci_hcd *);
317:	static void ed_deschedule(struct ohci_hcd *, struct ed *);
183:	static int ed_schedule(struct ohci_hcd *, struct ed *);
41:	static void finish_urb(struct ohci_hcd *, struct urb *, int);
1217:	static void ohci_work(struct ohci_hcd *);
484:	static void start_ed_unlink(struct ohci_hcd *, struct ed *);
756:	static int td_done(struct ohci_hcd *, struct urb *, struct td *);
516:	static void td_fill(struct ohci_hcd *, u32, dma_addr_t, int, struct urb *, int);
935:	static void update_done_list(struct ohci_hcd *);
14:	static void urb_free_priv(struct ohci_hcd *, urb_priv_t *);

File drivers/usb/host/pci-quirks.c:
191:	void sb800_prefetch(struct device *, int);
667:	int uhci_check_and_reset_hc(struct pci_dev *, unsigned long);
635:	void uhci_reset_hc(struct pci_dev *, unsigned long);
508:	void usb_amd_dev_put(void);
204:	int usb_amd_find_chipset_info(void);
304:	bool usb_amd_hang_symptom_quirk(void);
317:	bool usb_amd_prefetch_quirk(void);
545:	bool usb_amd_pt_check_port(struct device *, int);
452:	void usb_amd_quirk_pll_disable(void);
502:	void usb_amd_quirk_pll_enable(void);
482:	void usb_asmedia_modifyflowcontrol(struct pci_dev *);
1130:	void usb_disable_xhci_ports(struct pci_dev *);
1045:	void usb_enable_intel_xhci_ports(struct pci_dev *);
291:	int usb_hcd_amd_remote_wakeup_quirk(struct pci_dev *);
739:	static int mmio_resource_enabled(struct pci_dev *, int);
1248:	static void quirk_usb_early_handoff(struct pci_dev *);
335:	static void usb_amd_quirk_pll(int);
458:	static int usb_asmedia_wait_write(struct pci_dev *);

File drivers/usb/host/uhci-debug.c:
27:	static void lprintk(char *);
586:	static loff_t uhci_debug_lseek(struct file *, loff_t, int);
558:	static int uhci_debug_open(struct inode *, struct file *);
592:	static ssize_t uhci_debug_read(struct file *, char *, size_t, loff_t *);
599:	static int uhci_debug_release(struct inode *, struct file *);
165:	static int uhci_show_qh(struct uhci_qh *, char *, int, int, struct uhci_hcd *, struct uhci_hcd *);
262:	static int uhci_show_sc(int, unsigned short, char *);
43:	static int uhci_show_td(struct uhci_td *, char *, int, int, struct uhci_hcd *);
374:	static int uhci_sprint_schedule(struct uhci_hcd *, char *, int);

File drivers/usb/host/uhci-hcd.c:
168:	static void check_and_reset_hc(struct uhci_hcd *);
131:	static void finish_reset(struct uhci_hcd *);
288:	static void suspend_rh(struct uhci_hcd *, enum uhci_rh_state);
516:	static void uhci_get_current_frame_number(struct uhci_hcd *);
152:	static void uhci_hc_died(struct uhci_hcd *);
924:	static void uhci_hcd_cleanup(void);
770:	static void uhci_hcd_endpoint_disable(struct usb_hcd *, struct usb_host_endpoint *);
795:	static int uhci_hcd_get_frame_number(struct usb_hcd *);
865:	static int uhci_hcd_init(void);
450:	static irqreturn_t uhci_irq(struct usb_hcd *);
753:	static int uhci_rh_resume(struct usb_hcd *);
726:	static int uhci_rh_suspend(struct usb_hcd *);
575:	static int uhci_start(struct usb_hcd *);
710:	static void uhci_stop(struct usb_hcd *);
410:	static void wakeup_rh(struct uhci_hcd *);

File drivers/usb/host/uhci-hub.c:
44:	static int any_ports_active(struct uhci_hcd *);
137:	static void uhci_check_ports(struct uhci_hcd *);
96:	static void uhci_finish_suspend(struct uhci_hcd *, int, unsigned long);
243:	static int uhci_hub_control(struct usb_hcd *, u16, u16, u16, char *, u16);
186:	static int uhci_hub_status_data(struct usb_hcd *, char *);

File drivers/usb/host/uhci-pci.c:
38:	static int uhci_pci_check_and_reset_hc(struct uhci_hcd *);
48:	static void uhci_pci_configure_hc(struct uhci_hcd *);
92:	static int uhci_pci_global_suspend_mode_is_broken(struct uhci_hcd *);
114:	static int uhci_pci_init(struct usb_hcd *);
27:	static void uhci_pci_reset_hc(struct uhci_hcd *);
214:	static int uhci_pci_resume(struct usb_hcd *, bool);
60:	static int uhci_pci_resume_detect_interrupts_are_broken(struct uhci_hcd *);
175:	static int uhci_pci_suspend(struct usb_hcd *, bool);
164:	static void uhci_shutdown(struct pci_dev *);

File drivers/usb/host/uhci-q.c:
480:	static void uhci_activate_qh(struct uhci_hcd *, struct uhci_qh *);
245:	static struct uhci_qh *uhci_alloc_qh(struct uhci_hcd *, struct usb_device *, struct usb_host_endpoint *);
106:	static struct uhci_td *uhci_alloc_td(struct uhci_hcd *);
623:	static int uhci_check_bandwidth(struct uhci_hcd *, struct uhci_qh *);
372:	static void uhci_fixup_toggles(struct uhci_qh *, int, struct uhci_hcd *);
292:	static void uhci_free_qh(struct uhci_hcd *, struct uhci_qh *);
124:	static void uhci_free_td(struct uhci_hcd *, struct uhci_td *);
740:	static void uhci_free_urb_priv(struct uhci_hcd *, struct urb_priv *);
92:	static void uhci_fsbr_timeout(struct timer_list *);
1516:	static void uhci_giveback_urb(struct uhci_hcd *, struct uhci_qh *, struct urb *, int);
586:	static void uhci_make_qh_idle(struct uhci_hcd *, struct uhci_qh *);
765:	static int uhci_map_status(int, int);
659:	static void uhci_reserve_bandwidth(struct uhci_hcd *, struct uhci_qh *);
1741:	static void uhci_scan_schedule(struct uhci_hcd *);
29:	static void uhci_set_next_interrupt(struct uhci_hcd *);
915:	static int uhci_submit_common(struct uhci_hcd *, struct urb *, struct uhci_qh *, struct uhci_qh *);
551:	static void uhci_unlink_qh(struct uhci_hcd *, struct uhci_qh *);
1481:	static int uhci_urb_dequeue(struct usb_hcd *, struct urb *, int);
1408:	static int uhci_urb_enqueue(struct usb_hcd *, struct urb *, gfp_t);
79:	static void uhci_urbp_wants_fsbr(struct uhci_hcd *, struct urb_priv *);

File drivers/usb/host/xhci-dbg.c:
22:	void xhci_dbg_trace(struct xhci_hcd *, void (*)(struct va_format *), const char *, ...);
13:	char *xhci_get_slot_state(struct xhci_hcd *, struct xhci_container_ctx *);

File drivers/usb/host/xhci-dbgcap.c:
191:	struct dbc_request *dbc_alloc_request(struct dbc_ep *, gfp_t);
329:	int dbc_ep_queue(struct dbc_ep *, struct dbc_request *, gfp_t);
210:	void dbc_free_request(struct dbc_ep *, struct dbc_request *);
960:	void xhci_dbc_exit(struct xhci_hcd *);
933:	int xhci_dbc_init(struct xhci_hcd *);
989:	int xhci_dbc_resume(struct xhci_hcd *);
974:	int xhci_dbc_suspend(struct xhci_hcd *);
876:	static ssize_t dbc_show(struct device *, struct device_attribute *, char *);
913:	static ssize_t dbc_store(struct device *, struct device_attribute *, const char *, size_t);
176:	static void xhci_dbc_flush_endpoint_requests(struct dbc_ep *);
134:	static void xhci_dbc_giveback(struct dbc_request *, int);
786:	static void xhci_dbc_handle_events(struct work_struct *);
524:	static int xhci_dbc_start(struct xhci_hcd *);
546:	static void xhci_dbc_stop(struct xhci_hcd *);
824:	static void xhci_do_dbc_exit(struct xhci_hcd *);

File drivers/usb/host/xhci-dbgtty.c:
443:	int xhci_dbc_tty_register_device(struct xhci_hcd *);
284:	int xhci_dbc_tty_register_driver(struct xhci_hcd *);
492:	void xhci_dbc_tty_unregister_device(struct xhci_hcd *);
322:	void xhci_dbc_tty_unregister_driver(void);
404:	static int dbc_port_activate(struct tty_port *, struct tty_struct *);
94:	static void dbc_read_complete(struct xhci_hcd *, struct dbc_request *);
331:	static void dbc_rx_push(unsigned long);
66:	static void dbc_start_rx(struct dbc_port *);
30:	static int dbc_start_tx(struct dbc_port *);
247:	static int dbc_tty_chars_in_buffer(struct tty_struct *);
188:	static void dbc_tty_close(struct tty_struct *, struct file *);
224:	static void dbc_tty_flush_chars(struct tty_struct *);
172:	static int dbc_tty_install(struct tty_driver *, struct tty_struct *);
181:	static int dbc_tty_open(struct tty_struct *, struct file *);
211:	static int dbc_tty_put_char(struct tty_struct *, unsigned char);
260:	static void dbc_tty_unthrottle(struct tty_struct *);
195:	static int dbc_tty_write(struct tty_struct *, const unsigned char *, int);
234:	static int dbc_tty_write_room(struct tty_struct *);
106:	static void dbc_write_complete(struct xhci_hcd *, struct dbc_request *);
135:	static int xhci_dbc_alloc_requests(struct dbc_ep *, struct list_head *, void (*)(struct xhci_hcd *, struct dbc_request *));
161:	static void xhci_dbc_free_requests(struct dbc_ep *, struct list_head *);

File drivers/usb/host/xhci-debugfs.c:
436:	void xhci_debugfs_create_endpoint(struct xhci_hcd *, struct xhci_virt_device *, int);
602:	void xhci_debugfs_create_root(void);
477:	void xhci_debugfs_create_slot(struct xhci_hcd *, int);
590:	void xhci_debugfs_exit(struct xhci_hcd *);
538:	void xhci_debugfs_init(struct xhci_hcd *);
461:	void xhci_debugfs_remove_endpoint(struct xhci_hcd *, struct xhci_virt_device *, int);
607:	void xhci_debugfs_remove_root(void);
497:	void xhci_debugfs_remove_slot(struct xhci_hcd *, int);
314:	static int xhci_context_open(struct inode *, struct file *);
410:	static struct dentry *xhci_debugfs_create_ring_dir(struct xhci_ring **, const char *, struct dentry *, struct xhci_hcd *);
139:	static void xhci_debugfs_extcap_regset(struct xhci_hcd *, int, const struct debugfs_reg32 *, size_t, const char *);
113:	static void xhci_debugfs_regset(struct xhci_hcd *, u32, const struct debugfs_reg32 *, size_t, struct dentry *, const char *, ...);
298:	static int xhci_device_name_show(struct seq_file *, void *);
274:	static int xhci_endpoint_context_show(struct seq_file *, void *);
350:	static int xhci_port_open(struct inode *, struct file *);
355:	static ssize_t xhci_port_write(struct file *, const char *, size_t, loff_t *);
339:	static int xhci_portsc_show(struct seq_file *, void *);
185:	static int xhci_ring_cycle_show(struct seq_file *, void *);
174:	static int xhci_ring_dequeue_show(struct seq_file *, void *);
163:	static int xhci_ring_enqueue_show(struct seq_file *, void *);
233:	static int xhci_ring_open(struct inode *, struct file *);
212:	static int xhci_ring_trb_show(struct seq_file *, void *);
256:	static int xhci_slot_context_show(struct seq_file *, void *);

File drivers/usb/host/xhci-ext-caps.c:
64:	int xhci_ext_cap_init(struct xhci_hcd *);
14:	static void xhci_intel_unregister_pdev(void *);

File drivers/usb/host/xhci-hub.c:
1632:	int xhci_bus_resume(struct usb_hcd *);
1486:	int xhci_bus_suspend(struct usb_hcd *);
360:	int xhci_find_slot_id_by_port(struct usb_hcd *, struct xhci_hcd *, u16);
1747:	unsigned long xhci_get_resuming_ports(struct usb_hcd *);
553:	struct xhci_hub *xhci_get_rhub(struct usb_hcd *);
1031:	int xhci_hub_control(struct usb_hcd *, u16, u16, u16, char *, u16);
1425:	int xhci_hub_status_data(struct usb_hcd *, char *);
350:	u32 xhci_port_state_to_neutral(u32);
461:	void xhci_ring_device(struct xhci_hcd *, int);
674:	void xhci_set_link_state(struct xhci_hcd *, struct xhci_port *, u32);
713:	void xhci_test_and_clear_bit(struct xhci_hcd *, struct xhci_port *, u32);
840:	static u32 xhci_get_port_status(struct usb_hcd *, struct xhci_bus_state *, u16, u32, unsigned long *);
567:	static void xhci_set_port_power(struct xhci_hcd *, struct usb_hcd *, u16, bool, unsigned long *);
388:	static int xhci_stop_device(struct xhci_hcd *, int, int);

File drivers/usb/host/xhci-mem.c:
1738:	struct xhci_command *xhci_alloc_command(struct xhci_hcd *, bool, gfp_t);
1764:	struct xhci_command *xhci_alloc_command_with_ctx(struct xhci_hcd *, bool, gfp_t);
460:	struct xhci_container_ctx *xhci_alloc_container_ctx(struct xhci_hcd *, int, gfp_t);
1797:	int xhci_alloc_erst(struct xhci_hcd *, struct xhci_ring *, struct xhci_erst *, gfp_t);
612:	struct xhci_stream_info *xhci_alloc_stream_info(struct xhci_hcd *, unsigned int, unsigned int, unsigned int, gfp_t);
832:	int xhci_alloc_tt_info(struct xhci_hcd *, struct xhci_virt_device *, struct usb_device *, struct usb_tt *, gfp_t);
972:	int xhci_alloc_virt_device(struct xhci_hcd *, int, struct usb_device *, gfp_t);
1539:	void xhci_clear_endpoint_bw_info(struct xhci_bw_info *);
1041:	void xhci_copy_ep0_dequeue_into_input_ctx(struct xhci_hcd *, struct usb_device *);
576:	struct xhci_ring *xhci_dma_to_transfer_ring(struct xhci_virt_ep *, u64);
1607:	void xhci_endpoint_copy(struct xhci_hcd *, struct xhci_container_ctx *, struct xhci_container_ctx *, unsigned int);
1421:	int xhci_endpoint_init(struct xhci_hcd *, struct xhci_virt_device *, struct usb_device *, struct usb_host_endpoint *, gfp_t);
1520:	void xhci_endpoint_zero(struct xhci_hcd *, struct xhci_virt_device *, struct usb_host_endpoint *);
1788:	void xhci_free_command(struct xhci_hcd *, struct xhci_command *);
486:	void xhci_free_container_ctx(struct xhci_hcd *, struct xhci_container_ctx *);
402:	void xhci_free_endpoint_ring(struct xhci_hcd *, struct xhci_virt_device *, unsigned int);
1827:	void xhci_free_erst(struct xhci_hcd *, struct xhci_erst *);
762:	void xhci_free_stream_info(struct xhci_hcd *, struct xhci_stream_info *);
877:	void xhci_free_virt_device(struct xhci_hcd *, int);
936:	void xhci_free_virt_devices_depth_first(struct xhci_hcd *, int);
514:	struct xhci_ep_ctx *xhci_get_ep_ctx(struct xhci_hcd *, struct xhci_container_ctx *, unsigned int);
495:	struct xhci_input_control_ctx *xhci_get_input_control_ctx(struct xhci_container_ctx *);
504:	struct xhci_slot_ctx *xhci_get_slot_ctx(struct xhci_hcd *, struct xhci_container_ctx *);
1840:	void xhci_mem_cleanup(struct xhci_hcd *);
2384:	int xhci_mem_init(struct xhci_hcd *, gfp_t);
362:	struct xhci_ring *xhci_ring_alloc(struct xhci_hcd *, unsigned int, unsigned int, enum xhci_ring_type, unsigned int, gfp_t);
414:	int xhci_ring_expansion(struct xhci_hcd *, struct xhci_ring *, unsigned int, gfp_t);
277:	void xhci_ring_free(struct xhci_hcd *, struct xhci_ring *);
1092:	int xhci_setup_addressable_virt_dev(struct xhci_hcd *, struct usb_device *);
749:	void xhci_setup_no_streams_ep_input_ctx(struct xhci_ep_ctx *, struct xhci_virt_ep *);
725:	void xhci_setup_streams_ep_input_ctx(struct xhci_hcd *, struct xhci_ep_ctx *, struct xhci_stream_info *);
1633:	void xhci_slot_copy(struct xhci_hcd *, struct xhci_container_ctx *, struct xhci_container_ctx *);
586:	struct xhci_ring *xhci_stream_id_to_ring(struct xhci_virt_device *, unsigned int, unsigned int);
1549:	void xhci_update_bw_info(struct xhci_hcd *, struct xhci_container_ctx *, struct xhci_input_control_ctx *, struct xhci_virt_device *);
1783:	void xhci_urb_free_priv(struct urb_priv *);
318:	static int xhci_alloc_segments_for_ring(struct xhci_hcd *, struct xhci_segment **, struct xhci_segment **, unsigned int, unsigned int, enum xhci_ring_type, unsigned int, gfp_t);
1976:	static int xhci_check_trb_in_td_math(struct xhci_hcd *);
2249:	static void xhci_create_rhub_port_array(struct xhci_hcd *, struct xhci_hub *, gfp_t);
802:	static void xhci_free_tt_info(struct xhci_hcd *, int, struct xhci_virt_device *);
99:	static void xhci_link_segments(struct xhci_hcd *, struct xhci_segment *, struct xhci_segment *, enum xhci_ring_type);
1249:	static unsigned int xhci_microframes_to_exponent(struct usb_device *, unsigned int, unsigned int, unsigned int, struct usb_host_endpoint *);
1220:	static unsigned int xhci_parse_exponent_interval(struct usb_device *, struct usb_host_endpoint *, struct usb_host_endpoint *);
206:	static void xhci_remove_segment_mapping(struct radix_tree_root *, struct xhci_segment *);
28:	static struct xhci_segment *xhci_segment_alloc(struct xhci_hcd *, unsigned int, unsigned int, gfp_t);
68:	static void xhci_segment_free(struct xhci_segment *, struct xhci_hcd *);
1939:	static int xhci_test_trb_in_td(struct xhci_hcd *, struct xhci_segment *, union xhci_trb *, union xhci_trb *, dma_addr_t, struct xhci_segment *, char *, int);
216:	static int xhci_update_stream_segment_mapping(struct radix_tree_root *, struct xhci_ring *, struct xhci_segment *, struct xhci_segment *, gfp_t);

File drivers/usb/host/xhci-pci.c:
581:	static void xhci_pci_exit(void);
569:	static int xhci_pci_init(void);
327:	static int xhci_pci_probe(struct pci_dev *, const struct pci_device_id *);
79:	static void xhci_pci_quirks(struct device *, struct xhci_hcd *);
390:	static void xhci_pci_remove(struct pci_dev *);
490:	static int xhci_pci_resume(struct usb_hcd *, bool);
280:	static int xhci_pci_setup(struct usb_hcd *);
527:	static void xhci_pci_shutdown(struct usb_hcd *);
464:	static int xhci_pci_suspend(struct usb_hcd *, bool);
452:	static void xhci_pme_quirk(struct usb_hcd *);
417:	static void xhci_ssic_port_unused_quirk(struct usb_hcd *, bool);

File drivers/usb/host/xhci-ring.c:
2949:	unsigned int count_trbs(u64, u64);
156:	void inc_deq(struct xhci_hcd *, struct xhci_ring *);
1732:	struct xhci_segment *trb_in_td(struct xhci_hcd *, struct xhci_segment *, union xhci_trb *, union xhci_trb *, dma_addr_t, bool);
1299:	void xhci_cleanup_command_queue(struct xhci_hcd *);
514:	void xhci_find_new_dequeue_state(struct xhci_hcd *, unsigned int, unsigned int, unsigned int, struct xhci_td *, struct xhci_dequeue_state *);
1307:	void xhci_handle_command_timeout(struct work_struct *);
900:	void xhci_hc_died(struct xhci_hcd *);
2700:	irqreturn_t xhci_irq(struct usb_hcd *);
1849:	int xhci_is_vendor_info_code(struct xhci_hcd *, unsigned int);
2788:	irqreturn_t xhci_msi_irq(int, void *);
3932:	int xhci_queue_address_device(struct xhci_hcd *, struct xhci_command *, dma_addr_t, u32, enum xhci_setup_dev);
3183:	int xhci_queue_bulk_tx(struct xhci_hcd *, gfp_t, struct urb *, int, unsigned int);
3957:	int xhci_queue_configure_endpoint(struct xhci_hcd *, struct xhci_command *, dma_addr_t, u32, bool);
3335:	int xhci_queue_ctrl_tx(struct xhci_hcd *, gfp_t, struct urb *, int, unsigned int);
3968:	int xhci_queue_evaluate_context(struct xhci_hcd *, struct xhci_command *, dma_addr_t, u32, bool);
3059:	int xhci_queue_intr_tx(struct xhci_hcd *, gfp_t, struct urb *, int, unsigned int);
3797:	int xhci_queue_isoc_tx_prepare(struct xhci_hcd *, gfp_t, struct urb *, int, unsigned int);
3994:	void xhci_queue_new_dequeue_state(struct xhci_hcd *, unsigned int, unsigned int, struct xhci_dequeue_state *);
3948:	int xhci_queue_reset_device(struct xhci_hcd *, struct xhci_command *, u32);
4058:	int xhci_queue_reset_ep(struct xhci_hcd *, struct xhci_command *, int, unsigned int, enum xhci_ep_reset_type);
3924:	int xhci_queue_slot_control(struct xhci_hcd *, struct xhci_command *, u32, u32);
3981:	int xhci_queue_stop_endpoint(struct xhci_hcd *, struct xhci_command *, int, unsigned int, int);
3941:	int xhci_queue_vendor_command(struct xhci_hcd *, struct xhci_command *, u32, u32, u32, u32);
277:	void xhci_ring_cmd_db(struct xhci_hcd *);
386:	void xhci_ring_ep_doorbell(struct xhci_hcd *, unsigned int, unsigned int, unsigned int);
942:	void xhci_stop_endpoint_command_watchdog(struct timer_list *);
66:	dma_addr_t xhci_trb_virt_to_dma(struct xhci_segment *, union xhci_trb *);
440:	struct xhci_ring *xhci_triad_to_transfer_ring(struct xhci_hcd *, unsigned int, unsigned int, unsigned int);
3023:	static void check_interval(struct xhci_ep_ctx *, struct urb *, struct urb *, struct xhci_hcd *);
1909:	static int finish_td(struct xhci_hcd *, struct xhci_td *, struct xhci_transfer_event *, struct xhci_virt_ep *, int *);
1361:	static void handle_cmd_completion(struct xhci_hcd *, struct xhci_event_cmd *);
1553:	static void handle_port_status(struct xhci_hcd *, union xhci_trb *, union xhci_trb *);
2255:	static int handle_tx_event(struct xhci_hcd *, struct xhci_transfer_event *);
204:	static void inc_enq(struct xhci_hcd *, struct xhci_ring *, bool);
2823:	static int prepare_ring(struct xhci_hcd *, struct xhci_ring *, u32, unsigned int, gfp_t);
2901:	static int prepare_transfer(struct xhci_hcd *, struct xhci_virt_device *, unsigned int, unsigned int, unsigned int, struct urb *, unsigned int, gfp_t);
3882:	static int queue_command(struct xhci_hcd *, struct xhci_command *, u32, u32, u32, u32, bool);
411:	static void ring_doorbell_for_active_rings(struct xhci_hcd *, unsigned int, unsigned int);
1957:	static int sum_trb_lengths(union xhci_trb *, struct xhci_ring *, struct xhci_ring *, struct xhci_hcd *);
599:	static void td_to_noop(struct xhci_td *, bool, struct xhci_ring *, struct xhci_hcd *);
1793:	static void xhci_cleanup_halted_endpoint(struct xhci_hcd *, unsigned int, unsigned int, unsigned int, struct xhci_td *, enum xhci_ep_reset_type);
631:	static void xhci_giveback_urb_in_irq(struct xhci_hcd *, int, struct xhci_td *);
304:	static void xhci_handle_stopped_cmd_ring(struct xhci_hcd *, struct xhci_command *);
828:	static void xhci_kill_ring_urbs(struct xhci_hcd *, struct xhci_ring *);
1863:	static int xhci_td_cleanup(struct xhci_hcd *, struct xhci_td *, struct xhci_ring *, int *);
3090:	static u32 xhci_td_remainder(struct xhci_hcd *, int, int, unsigned int, struct urb *, bool);
653:	static void xhci_unmap_td_bounce_buffer(struct xhci_hcd *, struct xhci_ring *, struct xhci_td *, struct xhci_td *);

File drivers/usb/host/xhci-trace.h:
40:	static void trace_xhci_dbg_address(struct va_format *);
60:	static void trace_xhci_dbg_cancel_urb(struct va_format *);
45:	static void trace_xhci_dbg_context_change(struct va_format *);
65:	static void trace_xhci_dbg_init(struct va_format *);
50:	static void trace_xhci_dbg_quirks(struct va_format *);
55:	static void trace_xhci_dbg_reset_ep(struct va_format *);
70:	static void trace_xhci_dbg_ring_expansion(struct va_format *);

File drivers/usb/host/xhci.c:
3873:	int xhci_alloc_dev(struct usb_hcd *, struct usb_device *);
3002:	void xhci_cleanup_stalled_ring(struct xhci_hcd *, unsigned int, unsigned int, struct xhci_td *);
3811:	int xhci_disable_slot(struct xhci_hcd *, u32);
4160:	int xhci_find_raw_port_number(struct usb_hcd *, int);
3570:	void xhci_free_device_endpoint_resources(struct xhci_hcd *, struct xhci_virt_device *, bool);
5060:	int xhci_gen_setup(struct usb_hcd *, xhci_get_quirks_t);
1271:	unsigned int xhci_get_endpoint_address(unsigned int);
1257:	unsigned int xhci_get_endpoint_index(struct usb_endpoint_descriptor *);
111:	int xhci_halt(struct xhci_hcd *);
69:	int xhci_handshake(void *, u32, u32, int);
5298:	void xhci_init_driver(struct hc_driver *, const struct xhci_driver_overrides *);
1302:	unsigned int xhci_last_valid_endpoint(u32);
87:	void xhci_quiesce(struct xhci_hcd *);
166:	int xhci_reset(struct xhci_hcd *);
1071:	int xhci_resume(struct xhci_hcd *, bool);
633:	int xhci_run(struct usb_hcd *);
772:	void xhci_shutdown(struct usb_hcd *);
131:	int xhci_start(struct xhci_hcd *);
960:	int xhci_suspend(struct xhci_hcd *, bool);
2599:	void xhci_update_tt_active_eps(struct xhci_hcd *, struct xhci_virt_device *, int);
4830:	static int calculate_max_exit_latency(struct usb_device *, enum usb3_link_state, u16);
474:	static void compliance_mode_recovery(struct timer_list *);
521:	static void compliance_mode_recovery_timer_init(struct xhci_hcd *);
1790:	static int xhci_add_endpoint(struct usb_hcd *, struct usb_device *, struct usb_host_endpoint *);
2525:	static void xhci_add_ep_to_interval_table(struct xhci_hcd *, struct xhci_bw_info *, struct xhci_interval_bw_table *, struct xhci_virt_ep *, struct xhci_tt_bw_info *, struct usb_device *, struct usb_device *);
4144:	static int xhci_address_device(struct usb_hcd *, struct usb_device *);
3315:	static int xhci_alloc_streams(struct usb_hcd *, struct usb_device *, struct usb_host_endpoint **, unsigned int, unsigned int, gfp_t);
4543:	static u16 xhci_calculate_u1_timeout(struct usb_device *, struct usb_endpoint_descriptor *, struct xhci_hcd *);
4607:	static u16 xhci_calculate_u2_timeout(struct usb_device *, struct usb_endpoint_descriptor *, struct xhci_hcd *);
4172:	static int xhci_change_max_exit_latency(struct xhci_hcd *, struct usb_device *, u16);
1310:	static int xhci_check_args(struct usb_hcd *, struct usb_device *, struct usb_host_endpoint *, int, bool, const char *);
2830:	static int xhci_check_bandwidth(struct usb_hcd *, struct usb_device *);
2806:	static void xhci_check_bw_drop_ep_streams(struct xhci_hcd *, struct xhci_virt_device *, int);
364:	static void xhci_cleanup_msix(struct xhci_hcd *);
2712:	static int xhci_configure_endpoint(struct xhci_hcd *, struct usb_device *, struct xhci_command *, bool, bool);
2031:	static u32 xhci_count_num_new_endpoints(struct xhci_input_control_ctx *, struct xhci_input_control_ctx *, struct xhci_hcd *);
4907:	static int xhci_disable_usb3_lpm_timeout(struct usb_hcd *, struct usb_device *, enum usb3_link_state);
3610:	static int xhci_discover_or_reset_device(struct usb_hcd *, struct usb_device *);
1705:	static int xhci_drop_endpoint(struct usb_hcd *, struct usb_device *, struct usb_host_endpoint *);
2461:	static void xhci_drop_ep_from_interval_table(struct xhci_hcd *, struct xhci_bw_info *, struct xhci_interval_bw_table *, struct xhci_virt_ep *, struct xhci_tt_bw_info *, struct usb_device *, struct usb_device *);
4149:	static int xhci_enable_device(struct usb_hcd *, struct usb_device *);
4876:	static int xhci_enable_usb3_lpm_timeout(struct usb_hcd *, struct usb_device *, enum usb3_link_state);
3053:	static void xhci_endpoint_reset(struct usb_hcd *, struct usb_host_endpoint *);
3772:	static void xhci_free_dev(struct usb_hcd *, struct usb_device *);
2105:	static void xhci_free_host_resources(struct xhci_hcd *, struct xhci_input_control_ctx *);
3478:	static int xhci_free_streams(struct usb_hcd *, struct usb_device *, struct usb_host_endpoint **, unsigned int, gfp_t);
1282:	static unsigned int xhci_get_endpoint_flag(struct usb_endpoint_descriptor *);
5053:	static int xhci_get_frame(struct usb_hcd *);
4455:	static u16 xhci_get_timeout_no_hub_lpm(struct usb_device *, enum usb3_link_state);
5352:	static void xhci_hcd_fini(void);
5320:	static int xhci_hcd_init(void);
574:	static int xhci_init(struct usb_hcd *);
2619:	static int xhci_reserve_bandwidth(struct xhci_hcd *, struct xhci_virt_device *, struct xhci_container_ctx *);
2927:	static void xhci_reset_bandwidth(struct usb_hcd *, struct usb_device *);
821:	static void xhci_set_cmd_ring_deq(struct xhci_hcd *);
4294:	static int xhci_set_usb2_hardware_lpm(struct usb_hcd *, struct usb_device *, int);
3964:	static int xhci_setup_device(struct usb_hcd *, struct usb_device *, enum xhci_setup_dev);
711:	static void xhci_stop(struct usb_hcd *);
4418:	static int xhci_update_device(struct usb_hcd *, struct usb_device *);
4952:	static int xhci_update_hub_device(struct usb_hcd *, struct usb_device *, struct usb_tt *, gfp_t);
1573:	static int xhci_urb_dequeue(struct usb_hcd *, struct urb *, int);
1430:	static int xhci_urb_enqueue(struct usb_hcd *, struct urb *, gfp_t);
225:	static void xhci_zero_64b_regs(struct xhci_hcd *);
1897:	static void xhci_zero_in_ctx(struct xhci_hcd *, struct xhci_virt_device *);

File drivers/usb/mon/mon_bin.c:
1351:	int mon_bin_add(struct mon_bus *, const struct usb_bus *);
1369:	void mon_bin_del(struct mon_bus *);
1405:	void mon_bin_exit(void);
1374:	int mon_bin_init(void);
261:	static int copy_from_buf(unsigned int, char *, int, const struct mon_reader_bin *, const struct mon_reader_bin *);
1325:	static int mon_alloc_buff(struct mon_pgmap *, int);
1134:	static long mon_bin_compat_ioctl(struct file *, unsigned int, unsigned long);
626:	static void mon_bin_complete(void *, struct urb *, int);
632:	static void mon_bin_error(void *, struct urb *, int);
485:	static void mon_bin_event(struct mon_reader_bin *, struct urb *, char, int);
898:	static int mon_bin_fetch(struct file *, struct mon_reader_bin *, u32 *, unsigned int);
872:	static int mon_bin_flush(struct mon_reader_bin *, unsigned int);
737:	static int mon_bin_get_event(struct file *, struct mon_reader_bin *, struct mon_bin_hdr *, unsigned int, void *, unsigned int);
984:	static long mon_bin_ioctl(struct file *, unsigned int, unsigned long);
1267:	static int mon_bin_mmap(struct file *, struct vm_area_struct *);
673:	static int mon_bin_open(struct inode *, struct file *);
1202:	static __poll_t mon_bin_poll(struct file *, struct poll_table_struct *);
800:	static ssize_t mon_bin_read(struct file *, char *, size_t, loff_t *);
778:	static int mon_bin_release(struct inode *, struct file *);
620:	static void mon_bin_submit(void *, struct urb *);
1232:	static void mon_bin_vma_close(struct vm_area_struct *);
1245:	static vm_fault_t mon_bin_vma_fault(struct vm_fault *);
1222:	static void mon_bin_vma_open(struct vm_area_struct *);
1292:	static int mon_bin_wait_event(struct mon_reader_bin *, struct file *);
229:	static unsigned int mon_copy_to_buff(unsigned int, const unsigned char *, unsigned int, const struct mon_reader_bin *, const struct mon_reader_bin *);

File drivers/usb/mon/mon_main.c:
333:	struct mon_bus *mon_bus_lookup(unsigned int);
36:	void mon_reader_add(struct mon_bus *, struct mon_reader *);
65:	void mon_reader_del(struct mon_bus *, struct mon_reader *);
135:	static void mon_bus_complete(struct mon_bus *, struct urb *, int);
271:	static void mon_bus_drop(struct kref *);
283:	static void mon_bus_init(struct usb_bus *);
81:	static void mon_bus_submit(struct mon_bus *, struct urb *);
108:	static void mon_bus_submit_error(struct mon_bus *, struct urb *, int);
150:	static void mon_complete(struct usb_bus *, struct urb *, int);
384:	static void mon_exit(void);
350:	static int mon_init(void);
225:	static int mon_notify(struct notifier_block *, unsigned long, void *);
96:	static void mon_submit(struct usb_bus *, struct urb *);
123:	static void mon_submit_error(struct usb_bus *, struct urb *, int);

File drivers/usb/mon/mon_stat.c:
27:	static int mon_stat_open(struct inode *, struct file *);
46:	static ssize_t mon_stat_read(struct file *, char *, size_t, loff_t *);
54:	static int mon_stat_release(struct inode *, struct file *);

File drivers/usb/mon/mon_text.c:
701:	int mon_text_add(struct mon_bus *, const struct usb_bus *);
745:	void mon_text_del(struct mon_bus *);
770:	void mon_text_exit(void);
764:	int mon_text_init(void);
265:	static void mon_text_complete(void *, struct urb *, int);
381:	static ssize_t mon_text_copy_to_user(struct mon_reader_text *, char * const, const size_t);
755:	static void mon_text_ctor(void *);
271:	static void mon_text_error(void *, struct urb *, int);
193:	static void mon_text_event(struct mon_reader_text *, struct urb *, char, int);
324:	static int mon_text_open(struct inode *, struct file *);
610:	static void mon_text_read_data(struct mon_text_ptr *, const struct mon_event_text *, struct mon_reader_text *);
547:	static void mon_text_read_statset(struct mon_text_ptr *, const struct mon_event_text *, struct mon_reader_text *);
394:	static ssize_t mon_text_read_t(struct file *, char *, size_t, loff_t *);
433:	static ssize_t mon_text_read_u(struct file *, char *, size_t, loff_t *);
480:	static struct mon_event_text *mon_text_read_wait(struct mon_reader_text *, struct file *);
642:	static int mon_text_release(struct inode *, struct file *);
259:	static void mon_text_submit(void *, struct urb *);

File drivers/usb/roles/class.c:
110:	struct usb_role_switch *usb_role_switch_get(struct device *);
67:	enum usb_role usb_role_switch_get_role(struct usb_role_switch *);
130:	void usb_role_switch_put(struct usb_role_switch *);
246:	struct usb_role_switch *usb_role_switch_register(struct device *, const struct usb_role_switch_desc *);
41:	int usb_role_switch_set_role(struct usb_role_switch *, enum usb_role);
291:	void usb_role_switch_unregister(struct usb_role_switch *);
87:	static int __switch_match(struct device *, const void *);
158:	static ssize_t role_show(struct device *, struct device_attribute *, char *);
166:	static ssize_t role_store(struct device *, struct device_attribute *, const char *, size_t);
140:	static umode_t usb_role_switch_is_visible(struct kobject *, struct attribute *, int);
92:	static void *usb_role_switch_match(struct device_connection *, int, void *);
217:	static void usb_role_switch_release(struct device *);
206:	static int usb_role_switch_uevent(struct device *, struct kobj_uevent_env *);
305:	static void usb_roles_exit(void);
298:	static int usb_roles_init(void);

File drivers/usb/roles/intel-xhci-usb-role-switch.c:
185:	static void intel_xhci_usb_driver_exit(void);
185:	static int intel_xhci_usb_driver_init(void);
105:	static enum usb_role intel_xhci_usb_get_role(struct device *);
131:	static int intel_xhci_usb_probe(struct platform_device *);
160:	static int intel_xhci_usb_remove(struct platform_device *);
42:	static int intel_xhci_usb_set_role(struct device *, enum usb_role);

File drivers/usb/serial/bus.c:
185:	void usb_serial_bus_deregister(struct usb_serial_driver *);
172:	int usb_serial_bus_register(struct usb_serial_driver *);
138:	static ssize_t new_id_show(struct device_driver *, char *);
123:	static ssize_t new_id_store(struct device_driver *, const char *, size_t);
16:	static int usb_serial_device_match(struct device *, struct device_driver *);
38:	static int usb_serial_device_probe(struct device *);
87:	static int usb_serial_device_remove(struct device *);

File drivers/usb/serial/console.c:
264:	void usb_serial_console_disconnect(struct usb_serial *);
293:	void usb_serial_console_exit(void);
272:	void usb_serial_console_init(int);
243:	static struct tty_driver *usb_console_device(struct console *, int *);
55:	static int usb_console_setup(struct console *, char *);
194:	static void usb_console_write(struct console *, const char *, unsigned int);

File drivers/usb/serial/generic.c:
254:	int usb_serial_generic_chars_in_buffer(struct tty_struct *);
123:	void usb_serial_generic_close(struct usb_serial_port *);
99:	void usb_serial_generic_deregister(void);
566:	int usb_serial_generic_get_icount(struct tty_struct *, struct serial_icounter_struct *);
106:	int usb_serial_generic_open(struct tty_struct *, struct usb_serial_port *);
143:	int usb_serial_generic_prepare_write_buffer(struct usb_serial_port *, void *, size_t);
349:	void usb_serial_generic_process_read_urb(struct urb *);
374:	void usb_serial_generic_read_bulk_callback(struct urb *);
83:	int usb_serial_generic_register(void);
655:	int usb_serial_generic_resume(struct usb_serial *);
328:	int usb_serial_generic_submit_read_urbs(struct usb_serial_port *, gfp_t);
485:	void usb_serial_generic_throttle(struct tty_struct *);
546:	int usb_serial_generic_tiocmiwait(struct tty_struct *, unsigned long);
496:	void usb_serial_generic_unthrottle(struct tty_struct *);
272:	void usb_serial_generic_wait_until_sent(struct tty_struct *, long);
217:	int usb_serial_generic_write(struct tty_struct *, struct usb_serial_port *, const unsigned char *, int);
444:	void usb_serial_generic_write_bulk_callback(struct urb *);
237:	int usb_serial_generic_write_room(struct tty_struct *);
158:	int usb_serial_generic_write_start(struct usb_serial_port *, gfp_t);
614:	int usb_serial_handle_break(struct usb_serial_port *);
631:	void usb_serial_handle_dcd_change(struct usb_serial_port *, struct tty_struct *, unsigned int);
594:	int usb_serial_handle_sysrq_char(struct usb_serial_port *, unsigned int);
48:	static int usb_serial_generic_calc_num_ports(struct usb_serial *, struct usb_serial_endpoints *);
517:	static bool usb_serial_generic_msr_changed(unsigned long, struct async_icount *, struct tty_struct *);
37:	static int usb_serial_generic_probe(struct usb_serial *, const struct usb_device_id *);
304:	static int usb_serial_generic_submit_read_urb(struct usb_serial_port *, int, gfp_t);

File drivers/usb/serial/usb-serial.c:
1409:	void usb_serial_deregister_drivers(struct usb_serial_driver * const *);
61:	struct usb_serial_port *usb_serial_port_get_by_minor(unsigned int);
516:	void usb_serial_port_softint(struct usb_serial_port *);
153:	void usb_serial_put(struct usb_serial *);
1334:	int usb_serial_register_drivers(struct usb_serial_driver * const *, const char *, const struct usb_device_id *);
1126:	int usb_serial_resume(struct usb_interface *);
1091:	int usb_serial_suspend(struct usb_interface *, pm_message_t);
124:	static void destroy_serial(struct kref *);
615:	static const struct usb_device_id *get_iface_id(struct usb_serial_driver *, struct usb_interface *);
671:	static ssize_t port_number_show(struct device *, struct device_attribute *, char *);
429:	static int serial_break(struct tty_struct *, int);
347:	static int serial_chars_in_buffer(struct tty_struct *);
295:	static void serial_cleanup(struct tty_struct *);
277:	static void serial_close(struct tty_struct *, struct file *);
499:	static int serial_get_icount(struct tty_struct *, struct serial_icounter_struct *);
268:	static void serial_hangup(struct tty_struct *);
176:	static int serial_install(struct tty_driver *, struct tty_struct *);
396:	static int serial_ioctl(struct tty_struct *, unsigned int, unsigned long);
239:	static int serial_open(struct tty_struct *, struct file *);
219:	static int serial_port_activate(struct tty_port *, struct tty_struct *);
651:	static int serial_port_carrier_raised(struct tty_port *);
662:	static void serial_port_dtr_rts(struct tty_port *, int);
258:	static void serial_port_shutdown(struct tty_port *);
441:	static int serial_proc_show(struct seq_file *, void *);
417:	static void serial_set_termios(struct tty_struct *, struct ktermios *);
376:	static void serial_throttle(struct tty_struct *);
476:	static int serial_tiocmget(struct tty_struct *);
487:	static int serial_tiocmset(struct tty_struct *, unsigned int, unsigned int);
386:	static void serial_unthrottle(struct tty_struct *);
360:	static void serial_wait_until_sent(struct tty_struct *, int);
320:	static int serial_write(struct tty_struct *, const unsigned char *, int);
338:	static int serial_write_room(struct tty_struct *);
1314:	static void usb_serial_deregister(struct usb_serial_driver *);
1055:	static void usb_serial_disconnect(struct usb_interface *);
1242:	static void usb_serial_exit(void);
1185:	static int usb_serial_init(void);
530:	static void usb_serial_port_poison_urbs(struct usb_serial_port *);
556:	static void usb_serial_port_release(struct device *);
543:	static void usb_serial_port_unpoison_urbs(struct usb_serial_port *);
522:	static void usb_serial_port_work(struct work_struct *);
844:	static int usb_serial_probe(struct usb_interface *, const struct usb_device_id *);
1143:	static int usb_serial_reset_resume(struct usb_interface *);

File drivers/usb/typec/altmodes/displayport.c:
374:	static ssize_t configuration_show(struct device *, struct device_attribute *, char *);
329:	static ssize_t configuration_store(struct device *, struct device_attribute *, const char *, size_t);
311:	static int dp_altmode_activate(struct typec_altmode *, int);
227:	static void dp_altmode_attention(struct typec_altmode *, const u32);
160:	static int dp_altmode_configure_vdm(struct dp_altmode *, u32);
141:	static int dp_altmode_configured(struct dp_altmode *);
576:	static void dp_altmode_driver_exit(void);
576:	static int dp_altmode_driver_init(void);
70:	static int dp_altmode_notify(struct dp_altmode *);
514:	static int dp_altmode_probe(struct typec_altmode *);
553:	static void dp_altmode_remove(struct typec_altmode *);
121:	static int dp_altmode_status_update(struct dp_altmode *);
253:	static int dp_altmode_vdm(struct typec_altmode *, const u32, const u32 *, int);
184:	static void dp_altmode_work(struct work_struct *);
467:	static ssize_t pin_assignment_show(struct device *, struct device_attribute *, char *);
415:	static ssize_t pin_assignment_store(struct device *, struct device_attribute *, const char *, size_t);

File drivers/usb/typec/bus.c:
235:	int __typec_altmode_register_driver(struct typec_altmode_driver *, struct module *);
149:	void typec_altmode_attention(struct typec_altmode *, u32);
92:	int typec_altmode_enter(struct typec_altmode *);
120:	int typec_altmode_exit(struct typec_altmode *);
193:	const struct typec_altmode *typec_altmode_get_partner(struct typec_altmode *);
210:	struct typec_altmode *typec_altmode_get_plug(struct typec_altmode *, enum typec_plug_index);
51:	int typec_altmode_notify(struct typec_altmode *, unsigned long, void *);
228:	void typec_altmode_put_plug(struct typec_altmode *);
248:	void typec_altmode_unregister_driver(struct typec_altmode_driver *);
169:	int typec_altmode_vdm(struct typec_altmode *, const u32, const u32 *, int);
267:	struct typec_altmode *typec_match_altmode(struct typec_altmode **, size_t, u16, u8);
286:	static ssize_t description_show(struct device *, struct device_attribute *, char *);
18:	static int typec_altmode_set_state(struct typec_altmode *, int);
300:	static int typec_match(struct device *, struct device_driver *);
350:	static int typec_probe(struct device *);
374:	static int typec_remove(struct device *);
313:	static int typec_uevent(struct device *, struct kobj_uevent_env *);

File drivers/usb/typec/class.c:
302:	struct typec_port *typec_altmode2port(struct typec_altmode *);
219:	struct typec_altmode *typec_altmode_register_notifier(struct device *, u16, u8, struct notifier_block *);
255:	void typec_altmode_unregister_notifier(struct typec_altmode *, struct notifier_block *);
273:	void typec_altmode_update_active(struct typec_altmode *, bool);
837:	int typec_cable_set_identity(struct typec_cable *);
1421:	int typec_find_port_data_role(const char *);
1392:	int typec_find_port_power_role(const char *);
1407:	int typec_find_power_role(const char *);
1461:	enum typec_orientation typec_get_orientation(struct typec_port *);
623:	struct typec_altmode *typec_partner_register_altmode(struct typec_partner *, const struct typec_altmode_desc *);
600:	int typec_partner_set_identity(struct typec_partner *);
720:	struct typec_altmode *typec_plug_register_altmode(struct typec_plug *, const struct typec_altmode_desc *);
1494:	struct typec_altmode *typec_port_register_altmode(struct typec_port *, const struct typec_altmode_desc *);
857:	struct typec_cable *typec_register_cable(struct typec_port *, struct typec_cable_desc *);
639:	struct typec_partner *typec_register_partner(struct typec_port *, struct typec_partner_desc *);
738:	struct typec_plug *typec_register_plug(struct typec_cable *, struct typec_plug_desc *);
1526:	struct typec_port *typec_register_port(struct device *, const struct typec_capability *);
1295:	void typec_set_data_role(struct typec_port *, enum typec_data_role);
1475:	int typec_set_mode(struct typec_port *, int);
1438:	int typec_set_orientation(struct typec_port *, enum typec_orientation);
1358:	void typec_set_pwr_opmode(struct typec_port *, enum typec_pwr_opmode);
1313:	void typec_set_pwr_role(struct typec_port *, enum typec_role);
1332:	void typec_set_vconn_role(struct typec_port *, enum typec_role);
540:	void typec_unregister_altmode(struct typec_altmode *);
901:	void typec_unregister_cable(struct typec_cable *);
684:	void typec_unregister_partner(struct typec_partner *);
775:	void typec_unregister_plug(struct typec_plug *);
1621:	void typec_unregister_port(struct typec_port *);
207:	static int __typec_port_match(struct device *, const void *);
552:	static ssize_t accessory_mode_show(struct device *, struct device_attribute *, char *);
334:	static ssize_t active_show(struct device *, struct device_attribute *, char *);
341:	static ssize_t active_store(struct device *, struct device_attribute *, const char *, size_t);
150:	static int altmode_match(struct device *, void *);
105:	static ssize_t cert_stat_show(struct device *, struct device_attribute *, char *);
1021:	static ssize_t data_role_show(struct device *, struct device_attribute *, char *);
989:	static ssize_t data_role_store(struct device *, struct device_attribute *, const char *, size_t);
325:	static ssize_t description_show(struct device *, struct device_attribute *, char *);
96:	static ssize_t id_header_show(struct device *, struct device_attribute *, char *);
404:	static ssize_t mode_show(struct device *, struct device_attribute *, char *);
1343:	static int partner_match(struct device *, void *);
801:	static ssize_t plug_type_show(struct device *, struct device_attribute *, char *);
1129:	static ssize_t port_type_show(struct device *, struct device_attribute *, char *);
1092:	static ssize_t port_type_store(struct device *, struct device_attribute *, const char *, size_t);
1149:	static ssize_t power_operation_mode_show(struct device *, struct device_attribute *, char *);
1078:	static ssize_t power_role_show(struct device *, struct device_attribute *, char *);
1034:	static ssize_t power_role_store(struct device *, struct device_attribute *, const char *, size_t);
974:	static ssize_t preferred_role_show(struct device *, struct device_attribute *, char *);
940:	static ssize_t preferred_role_store(struct device *, struct device_attribute *, const char *, size_t);
114:	static ssize_t product_show(struct device *, struct device_attribute *, char *);
1198:	static ssize_t supported_accessory_modes_show(struct device *, struct device_attribute *, char *);
381:	static ssize_t supported_roles_show(struct device *, struct device_attribute *, char *);
562:	static ssize_t supports_usb_power_delivery_show(struct device *, struct device_attribute *, char *);
413:	static ssize_t svid_show(struct device *, struct device_attribute *, char *);
785:	static ssize_t type_show(struct device *, struct device_attribute *, char *);
458:	static void typec_altmode_release(struct device *);
817:	static void typec_cable_release(struct device *);
1646:	static void typec_exit(void);
1628:	static int typec_init(void);
579:	static void typec_partner_release(struct device *);
694:	static void typec_plug_release(struct device *);
212:	static void *typec_port_match(struct device_connection *, int, void *);
475:	static struct typec_altmode *typec_register_altmode(struct device *, const struct typec_altmode_desc *);
1267:	static void typec_release(struct device *);
140:	static void typec_report_identity(struct device *);
1256:	static int typec_uevent(struct device *, struct kobj_uevent_env *);
1232:	static ssize_t usb_power_delivery_revision_show(struct device *, struct device_attribute *, char *);
1221:	static ssize_t usb_typec_revision_show(struct device *, struct device_attribute *, char *);
1188:	static ssize_t vconn_source_show(struct device *, struct device_attribute *, char *);
1159:	static ssize_t vconn_source_store(struct device *, struct device_attribute *, const char *, size_t);
316:	static ssize_t vdo_show(struct device *, struct device_attribute *, char *);

File drivers/usb/typec/mux.c:
138:	struct typec_mux *typec_mux_get(struct device *, const char *);
160:	void typec_mux_put(struct typec_mux *);
178:	int typec_mux_register(struct typec_mux *);
194:	void typec_mux_unregister(struct typec_mux *);
46:	struct typec_switch *typec_switch_get(struct device *);
69:	void typec_switch_put(struct typec_switch *);
87:	int typec_switch_register(struct typec_switch *);
103:	void typec_switch_unregister(struct typec_switch *);
113:	static void *typec_mux_match(struct device_connection *, int, void *);
21:	static void *typec_switch_match(struct device_connection *, int, void *);

File drivers/usb/typec/tcpci.c:
397:	irqreturn_t tcpci_irq(struct tcpci *);
494:	struct tcpci *tcpci_register_port(struct device *, struct tcpci_data *);
532:	void tcpci_unregister_port(struct tcpci *);
466:	static irqreturn_t _tcpci_irq(int, void *);
163:	static int tcpci_get_cc(struct tcpc_dev *, enum typec_cc_status *, enum typec_cc_status *);
260:	static int tcpci_get_vbus(struct tcpc_dev *);
609:	static void tcpci_i2c_driver_exit(void);
609:	static int tcpci_i2c_driver_init(void);
345:	static int tcpci_init(struct tcpc_dev *);
311:	static int tcpci_pd_transmit(struct tcpc_dev *, enum tcpm_transmit_type, const struct pd_message *);
538:	static int tcpci_probe(struct i2c_client *, const struct i2c_device_id *);
577:	static int tcpci_remove(struct i2c_client *);
56:	static int tcpci_set_cc(struct tcpc_dev *, enum typec_cc_status);
245:	static int tcpci_set_pd_rx(struct tcpc_dev *, bool);
184:	static int tcpci_set_polarity(struct tcpc_dev *, enum typec_cc_polarity);
226:	static int tcpci_set_roles(struct tcpc_dev *, bool, enum typec_role, enum typec_data_role);
273:	static int tcpci_set_vbus(struct tcpc_dev *, bool, bool);
209:	static int tcpci_set_vconn(struct tcpc_dev *, bool);
103:	static int tcpci_start_drp_toggling(struct tcpc_dev *, enum typec_cc_status);

File drivers/usb/typec/tcpci_rt1711h.c:
308:	static void rt1711h_i2c_driver_exit(void);
308:	static int rt1711h_i2c_driver_init(void);
76:	static int rt1711h_init(struct tcpci *, struct tcpci_data *);
155:	static irqreturn_t rt1711h_irq(int, void *);
235:	static int rt1711h_probe(struct i2c_client *, const struct i2c_device_id *);
277:	static int rt1711h_remove(struct i2c_client *);
107:	static int rt1711h_set_vconn(struct tcpci *, struct tcpci_data *, bool);
116:	static int rt1711h_start_drp_toggling(struct tcpci *, struct tcpci_data *, enum typec_cc_status);

File drivers/usb/typec/tcpm.c:
3954:	void tcpm_cc_change(struct tcpm_port *);
3972:	void tcpm_pd_hard_reset(struct tcpm_port *);
2004:	void tcpm_pd_receive(struct tcpm_port *, const struct pd_message *);
654:	void tcpm_pd_transmit_complete(struct tcpm_port *, enum tcpm_transmit_status);
4794:	struct tcpm_port *tcpm_register_port(struct device *, struct tcpc_dev *);
4370:	void tcpm_tcpc_reset(struct tcpm_port *);
4905:	void tcpm_unregister_port(struct tcpm_port *);
4513:	int tcpm_update_sink_capabilities(struct tcpm_port *, const u32 *, unsigned int, unsigned int);
4484:	int tcpm_update_source_capabilities(struct tcpm_port *, const u32 *, unsigned int);
3963:	void tcpm_vbus_change(struct tcpm_port *);
3626:	static void _tcpm_cc_change(struct tcpm_port *, enum typec_cc_status, enum typec_cc_status);
421:	static void _tcpm_log(struct tcpm_port *, const char *, struct __va_list_tag *);
2863:	static void run_state_machine(struct tcpm_port *);
1494:	static int tcpm_altmode_enter(struct typec_altmode *);
1510:	static int tcpm_altmode_exit(struct typec_altmode *);
1526:	static int tcpm_altmode_vdm(struct typec_altmode *, u32, const u32 *, int);
2831:	static void tcpm_check_send_discover(struct tcpm_port *);
572:	static int tcpm_debug_open(struct inode *, struct file *);
555:	static int tcpm_debug_show(struct seq_file *, void *);
2732:	static void tcpm_detach(struct tcpm_port *);
3981:	static int tcpm_dr_set(const struct typec_capability *, enum typec_data_role);
716:	static u32 tcpm_get_current_limit(struct tcpm_port *);
4313:	static void tcpm_init(struct tcpm_port *);
469:	static void tcpm_log(struct tcpm_port *, const char *, ...);
485:	static void tcpm_log_force(struct tcpm_port *, const char *, ...);
663:	static int tcpm_mux_set(struct tcpm_port *, int, enum usb_role, enum typec_orientation);
3918:	static void tcpm_pd_event_handler(struct work_struct *);
1950:	static void tcpm_pd_rx_handler(struct work_struct *);
2019:	static int tcpm_pd_send_control(struct tcpm_port *, enum pd_ctrl_msg_type);
843:	static int tcpm_pd_send_source_caps(struct tcpm_port *);
618:	static int tcpm_pd_transmit(struct tcpm_port *, enum tcpm_transmit_type, const struct pd_message *);
4342:	static int tcpm_port_type_set(const struct typec_capability *, enum typec_port_type);
4262:	static int tcpm_pps_activate(struct tcpm_port *, bool);
4049:	static int tcpm_pr_set(const struct typec_capability *, enum typec_role);
4625:	static int tcpm_psy_get_prop(struct power_supply *, enum power_supply_property, union power_supply_propval *);
4714:	static int tcpm_psy_prop_writeable(struct power_supply *, enum power_supply_property);
4682:	static int tcpm_psy_set_prop(struct power_supply *, enum power_supply_property, const union power_supply_propval *);
949:	static void tcpm_queue_vdm(struct tcpm_port *, const u32, const u32 *, int);
2703:	static void tcpm_reset_port(struct tcpm_port *);
761:	static enum typec_cc_status tcpm_rp_cc(struct tcpm_port *);
2038:	static bool tcpm_send_queued_message(struct tcpm_port *);
2580:	static void tcpm_set_cc(struct tcpm_port *, enum typec_cc_status);
2546:	static int tcpm_set_charge(struct tcpm_port *, bool);
741:	static int tcpm_set_current_limit(struct tcpm_port *, u32, u32);
685:	static int tcpm_set_polarity(struct tcpm_port *, enum typec_cc_polarity);
828:	static int tcpm_set_pwr_role(struct tcpm_port *, enum typec_role);
795:	static int tcpm_set_roles(struct tcpm_port *, bool, enum typec_role, enum typec_data_role);
897:	static void tcpm_set_state(struct tcpm_port *, enum tcpm_state, unsigned int);
926:	static void tcpm_set_state_cond(struct tcpm_port *, enum tcpm_state, unsigned int);
2529:	static int tcpm_set_vbus(struct tcpm_port *, bool);
701:	static int tcpm_set_vconn(struct tcpm_port *, bool);
2564:	static bool tcpm_start_drp_toggling(struct tcpm_port *, enum typec_cc_status);
3588:	static void tcpm_state_machine_work(struct work_struct *);
2840:	static void tcpm_swap_complete(struct tcpm_port *, int);
4133:	static int tcpm_try_role(const struct typec_capability *, int);
2606:	static void tcpm_typec_connect(struct tcpm_port *);
2690:	static void tcpm_unregister_altmodes(struct tcpm_port *);
1481:	static int tcpm_validate_caps(struct tcpm_port *, const u32 *, unsigned int);
4093:	static int tcpm_vconn_set(const struct typec_capability *, enum typec_role);
1353:	static void vdm_state_machine_work(struct work_struct *);

File drivers/usb/typec/ucsi/./trace.h:
13:	static void __bpf_trace_ucsi_log_ack(void *, u8);
74:	static void __bpf_trace_ucsi_log_cci(void *, u32);
48:	static void __bpf_trace_ucsi_log_command(void *, struct ucsi_control *, int);
91:	static void __bpf_trace_ucsi_log_connector_status(void *, int, struct ucsi_connector_status *);
30:	static void __bpf_trace_ucsi_log_control(void *, struct ucsi_control *);
13:	static void perf_trace_ucsi_log_ack(void *, u8);
74:	static void perf_trace_ucsi_log_cci(void *, u32);
48:	static void perf_trace_ucsi_log_command(void *, struct ucsi_control *, int);
91:	static void perf_trace_ucsi_log_connector_status(void *, int, struct ucsi_connector_status *);
30:	static void perf_trace_ucsi_log_control(void *, struct ucsi_control *);
13:	static int trace_event_define_fields_ucsi_log_ack(struct trace_event_call *);
74:	static int trace_event_define_fields_ucsi_log_cci(struct trace_event_call *);
48:	static int trace_event_define_fields_ucsi_log_command(struct trace_event_call *);
91:	static int trace_event_define_fields_ucsi_log_connector_status(struct trace_event_call *);
30:	static int trace_event_define_fields_ucsi_log_control(struct trace_event_call *);
13:	static void trace_event_raw_event_ucsi_log_ack(void *, u8);
74:	static void trace_event_raw_event_ucsi_log_cci(void *, u32);
48:	static void trace_event_raw_event_ucsi_log_command(void *, struct ucsi_control *, int);
91:	static void trace_event_raw_event_ucsi_log_connector_status(void *, int, struct ucsi_connector_status *);
30:	static void trace_event_raw_event_ucsi_log_control(void *, struct ucsi_control *);
13:	static enum print_line_t trace_raw_output_ucsi_log_ack(struct trace_iterator *, int, struct trace_event *);
74:	static enum print_line_t trace_raw_output_ucsi_log_cci(struct trace_iterator *, int, struct trace_event *);
48:	static enum print_line_t trace_raw_output_ucsi_log_command(struct trace_iterator *, int, struct trace_event *);
91:	static enum print_line_t trace_raw_output_ucsi_log_connector_status(struct trace_iterator *, int, struct trace_event *);
30:	static enum print_line_t trace_raw_output_ucsi_log_control(struct trace_iterator *, int, struct trace_event *);

File drivers/usb/typec/ucsi/ucsi.c:
389:	void ucsi_notify(struct ucsi *);
752:	struct ucsi *ucsi_register_ppm(struct device *, struct ucsi_ppm *);
783:	void ucsi_unregister_ppm(struct ucsi *);
116:	static int ucsi_ack(struct ucsi *, u8);
92:	static int ucsi_command(struct ucsi *, struct ucsi_control *);
306:	static void ucsi_connector_change(struct work_struct *);
501:	static int ucsi_dr_swap(const struct typec_capability *, enum typec_data_role);
670:	static void ucsi_init(struct work_struct *);
538:	static int ucsi_pr_swap(const struct typec_capability *, enum typec_role);
243:	static void ucsi_pwr_opmode_change(struct ucsi_connector *);
261:	static int ucsi_register_partner(struct ucsi_connector *);
424:	static int ucsi_reset_connector(struct ucsi_connector *, bool);
433:	static int ucsi_reset_ppm(struct ucsi *);
480:	static int ucsi_role_cmd(struct ucsi_connector *, struct ucsi_control *);
147:	static int ucsi_run_command(struct ucsi *, struct ucsi_control *, void *, size_t);

File drivers/usb/typec/ucsi/ucsi_acpi.c:
42:	static int ucsi_acpi_cmd(struct ucsi_ppm *, struct ucsi_control *);
26:	static int ucsi_acpi_dsm(struct ucsi_acpi *, int);
58:	static void ucsi_acpi_notify(acpi_handle, u32, void *);
156:	static void ucsi_acpi_platform_driver_exit(void);
156:	static int ucsi_acpi_platform_driver_init(void);
65:	static int ucsi_acpi_probe(struct platform_device *);
129:	static int ucsi_acpi_remove(struct platform_device *);
51:	static int ucsi_acpi_sync(struct ucsi_ppm *);

File drivers/video/backlight/backlight.c:
397:	struct backlight_device *backlight_device_get_by_type(enum backlight_type);
331:	struct backlight_device *backlight_device_register(const char *, struct device *, void *, const struct backlight_ops *, const struct backlight_properties *);
173:	int backlight_device_set_brightness(struct backlight_device *, unsigned long);
421:	void backlight_device_unregister(struct backlight_device *);
307:	void backlight_force_update(struct backlight_device *, enum backlight_update_reason);
473:	int backlight_register_notifier(struct notifier_block *);
488:	int backlight_unregister_notifier(struct notifier_block *);
509:	struct backlight_device *devm_backlight_device_register(struct device *, const char *, struct device *, void *, const struct backlight_ops *, const struct backlight_properties *);
543:	void devm_backlight_device_unregister(struct device *, struct backlight_device *);
598:	struct backlight_device *of_find_backlight(struct device *);
231:	static ssize_t actual_brightness_show(struct device *, struct device_attribute *, char *);
656:	static void backlight_class_exit(void);
661:	static int backlight_class_init(void);
103:	static void backlight_generate_event(struct backlight_device *, enum backlight_update_reason);
265:	static int backlight_resume(struct device *);
251:	static int backlight_suspend(struct device *);
283:	static void bl_device_release(struct device *);
124:	static ssize_t bl_power_show(struct device *, struct device_attribute *, char *);
132:	static ssize_t bl_power_store(struct device *, struct device_attribute *, const char *, size_t);
165:	static ssize_t brightness_show(struct device *, struct device_attribute *, char *);
196:	static ssize_t brightness_store(struct device *, struct device_attribute *, const char *, size_t);
456:	static int devm_backlight_device_match(struct device *, void *, void *);
449:	static void devm_backlight_device_release(struct device *, void *);
40:	static int fb_notifier_callback(struct notifier_block *, unsigned long, void *);
222:	static ssize_t max_brightness_show(struct device *, struct device_attribute *, char *);
213:	static ssize_t type_show(struct device *, struct device_attribute *, char *);

File drivers/video/console/dummycon.c:
82:	static int dummycon_blank(struct vc_data *, int, int);
104:	static void dummycon_clear(struct vc_data *, int, int, int, int);
106:	static void dummycon_cursor(struct vc_data *, int);
103:	static void dummycon_deinit(struct vc_data *);
132:	static int dummycon_font_copy(struct vc_data *, int);
126:	static int dummycon_font_default(struct vc_data *, struct console_font *, char *);
120:	static int dummycon_font_set(struct vc_data *, struct console_font *, unsigned int);
93:	static void dummycon_init(struct vc_data *, int);
79:	static void dummycon_putc(struct vc_data *, int, int, int);
80:	static void dummycon_putcs(struct vc_data *, const unsigned short *, int, int, int);
108:	static bool dummycon_scroll(struct vc_data *, unsigned int, unsigned int, enum con_scroll, unsigned int);
88:	static const char *dummycon_startup(void);
115:	static int dummycon_switch(struct vc_data *);

File drivers/video/console/vgacon.c:
106:	bool vgacon_text_force(void);
126:	static int no_scroll(char *);
112:	static int text_mode(char *);
657:	static void vga_set_palette(struct vc_data *, const unsigned char *);
808:	static int vgacon_blank(struct vc_data *, int, int);
420:	static u8 vgacon_build_attr(struct vc_data *, u8, u8, u8, u8, u8, u8);
1214:	static void vgacon_clear(struct vc_data *, int, int, int, int);
498:	static void vgacon_cursor(struct vc_data *, int);
406:	static void vgacon_deinit(struct vc_data *);
864:	static int vgacon_do_font_op(char *, int, bool, struct vgastate *);
563:	static int vgacon_doresize(unsigned int, unsigned int, struct vc_data *);
1090:	static int vgacon_font_get(struct vc_data *, struct console_font *);
1068:	static int vgacon_font_set(struct vc_data *, struct console_font *, unsigned int);
368:	static void vgacon_init(struct vc_data *, int);
452:	static void vgacon_invert_region(struct vc_data *, u16 *, int);
1216:	static void vgacon_putc(struct vc_data *, int, int, int);
1217:	static void vgacon_putcs(struct vc_data *, const unsigned short *, int, int, int);
1103:	static int vgacon_resize(struct vc_data *, unsigned int, unsigned int, unsigned int);
1140:	static void vgacon_save_screen(struct vc_data *);
1162:	static bool vgacon_scroll(struct vc_data *, unsigned int, unsigned int, enum con_scroll, unsigned int);
174:	static void vgacon_scrolldelta(struct vc_data *, int);
467:	static void vgacon_set_cursor_size(int, int, int);
1129:	static int vgacon_set_origin(struct vc_data *);
670:	static void vgacon_set_palette(struct vc_data *, const unsigned char *);
181:	static const char *vgacon_startup(void);
625:	static int vgacon_switch(struct vc_data *);

File drivers/video/fbdev/core/bitblit.c:
394:	void fbcon_set_bitops(struct fbcon_ops *);
46:	static void bit_bmove(struct vc_data *, struct fb_info *, int, int, int, int, int, int);
61:	static void bit_clear(struct vc_data *, struct fb_info *, int, int, int, int);
205:	static void bit_clear_margins(struct vc_data *, struct fb_info *, int, int);
236:	static void bit_cursor(struct vc_data *, struct fb_info *, int, int, int);
143:	static void bit_putcs(struct vc_data *, struct fb_info *, const unsigned short *, int, int, int, int, int);
382:	static int bit_update_start(struct fb_info *);
25:	static void update_attr(u8 *, u8 *, int, struct vc_data *, struct vc_data *);

File drivers/video/fbdev/core/cfbcopyarea.c:
381:	void cfb_copyarea(struct fb_info *, const struct fb_copyarea *);

File drivers/video/fbdev/core/cfbfillrect.c:
278:	void cfb_fillrect(struct fb_info *, const struct fb_fillrect *);
35:	static void bitfill_aligned(struct fb_info *, unsigned long *, int, unsigned long, unsigned int, int, u32);
146:	static void bitfill_aligned_rev(struct fb_info *, unsigned long *, int, unsigned long, unsigned int, int, u32);
92:	static void bitfill_unaligned(struct fb_info *, unsigned long *, int, unsigned long, int, int, unsigned int, int);
217:	static void bitfill_unaligned_rev(struct fb_info *, unsigned long *, int, unsigned long, int, int, unsigned int, int);

File drivers/video/fbdev/core/cfbimgblt.c:
265:	void cfb_imageblit(struct fb_info *, const struct fb_image *);

File drivers/video/fbdev/core/fb_cmdline.c:
35:	int fb_get_options(const char *, char **);
82:	static int video_setup(char *);

File drivers/video/fbdev/core/fb_defio.c:
225:	void fb_deferred_io_cleanup(struct fb_info *);
68:	int fb_deferred_io_fsync(struct file *, loff_t, loff_t, int);
203:	void fb_deferred_io_init(struct fb_info *);
165:	int fb_deferred_io_mmap(struct fb_info *, struct vm_area_struct *);
217:	void fb_deferred_io_open(struct fb_info *, struct inode *, struct file *);
40:	static vm_fault_t fb_deferred_io_fault(struct vm_fault *);
93:	static vm_fault_t fb_deferred_io_mkwrite(struct vm_fault *);
26:	static struct page *fb_deferred_io_page(unsigned long, struct fb_info *, struct fb_info *);
154:	static int fb_deferred_io_set_page_dirty(struct page *);
177:	static void fb_deferred_io_work(struct work_struct *);

File drivers/video/fbdev/core/fb_notify.c:
43:	int fb_notifier_call_chain(unsigned long, void *);
23:	int fb_register_client(struct notifier_block *);
33:	int fb_unregister_client(struct notifier_block *);

File drivers/video/fbdev/core/fbcmap.c:
133:	int fb_alloc_cmap(struct fb_cmap *, int, int);
92:	int fb_alloc_cmap_gfp(struct fb_cmap *, int, int, gfp_t);
191:	int fb_cmap_to_user(const struct fb_cmap *, struct fb_cmap_user *);
166:	int fb_copy_cmap(const struct fb_cmap *, struct fb_cmap *);
147:	void fb_dealloc_cmap(struct fb_cmap *);
311:	const struct fb_cmap *fb_default_cmap(int);
330:	void fb_invert_cmaps(void);
231:	int fb_set_cmap(struct fb_cmap *, struct fb_info *);
267:	int fb_set_user_cmap(struct fb_cmap_user *, struct fb_info *);

File drivers/video/fbdev/core/fbcon.c:
3400:	void fb_console_init(void);
682:	static int con2fb_acquire_newinfo(struct vc_data *, struct fb_info *, int, int);
718:	static int con2fb_release_oldinfo(struct fb_info *, struct fb_info *, int, int, int, struct vc_data *);
384:	static void cursor_timer_handler(struct timer_list *);
892:	static void display_to_var(struct fb_var_screeninfo *, struct display *);
517:	static int do_fbcon_takeover(int);
421:	static int fb_console_setup(char *);
350:	static void fb_flashcursor(struct work_struct *);
393:	static void fbcon_add_cursor_timer(struct fb_info *);
2169:	static int fbcon_blank(struct vc_data *, int, int);
1855:	static void fbcon_bmove(struct vc_data *, int, int, int, int, int, int);
1878:	static void fbcon_bmove_rec(struct vc_data *, struct display *, int, int, int, int, int, int, u_int);
1220:	static void fbcon_clear(struct vc_data *, int, int, int, int);
1279:	static void fbcon_clear_margins(struct vc_data *, int);
2405:	static int fbcon_copy_font(struct vc_data *, int);
1288:	static void fbcon_cursor(struct vc_data *, int);
2211:	static int fbcon_debug_enter(struct vc_data *);
2224:	static int fbcon_debug_leave(struct vc_data *);
1151:	static void fbcon_deinit(struct vc_data *);
2359:	static int fbcon_do_set_font(struct vc_data *, int, int, const u8 *, int);
3008:	static int fbcon_event_notify(struct notifier_block *, unsigned long, void *);
2235:	static int fbcon_get_font(struct vc_data *, struct console_font *);
2555:	static unsigned long fbcon_getxy(struct vc_data *, unsigned long, int *, int *);
997:	static void fbcon_init(struct vc_data *, int);
2581:	static void fbcon_invert_region(struct vc_data *, u16 *, int);
2627:	static void fbcon_modechanged(struct fb_info *);
2951:	static void fbcon_new_modelist(struct fb_info *);
551:	static void fbcon_prepare_logo(struct vc_data *, struct fb_info *, int, int, int, int);
1271:	static void fbcon_putc(struct vc_data *, int, int, int);
1258:	static void fbcon_putcs(struct vc_data *, const unsigned short *, int, int, int);
1598:	static void fbcon_redraw(struct vc_data *, int, int, int, struct display *);
1548:	static void fbcon_redraw_blit(struct vc_data *, struct fb_info *, int, int, int, struct display *);
1514:	static void fbcon_redraw_move(struct vc_data *, int, int, int, struct display *);
1967:	static int fbcon_resize(struct vc_data *, unsigned int, unsigned int, unsigned int);
2550:	static u16 *fbcon_screen_pos(struct vc_data *, int);
1653:	static bool fbcon_scroll(struct vc_data *, unsigned int, unsigned int, enum con_scroll, unsigned int);
2665:	static void fbcon_set_all_vcs(struct fb_info *);
2491:	static int fbcon_set_def_font(struct vc_data *, struct console_font *, char *);
1314:	static void fbcon_set_disp(struct fb_info *, struct fb_var_screeninfo *, int);
2427:	static int fbcon_set_font(struct vc_data *, struct console_font *, unsigned int);
2597:	static int fbcon_set_origin(struct vc_data *);
2515:	static void fbcon_set_palette(struct vc_data *, const unsigned char *);
911:	static const char *fbcon_startup(void);
2013:	static int fbcon_switch(struct vc_data *);
283:	static int get_color(struct vc_data *, struct fb_info *, u16, int);
639:	static void set_blitting_type(struct vc_data *, struct fb_info *);
809:	static int set_con2fb_map(int, int, int);
2299:	static void set_vc_hi_font(struct vc_data *, bool);
3188:	static ssize_t show_cursor_blink(struct device *, struct device_attribute *, char *);
3166:	static ssize_t show_rotate(struct device *, struct device_attribute *, char *);
3216:	static ssize_t store_cursor_blink(struct device *, struct device_attribute *, const char *, size_t);
3116:	static ssize_t store_rotate(struct device *, struct device_attribute *, const char *, size_t);
3141:	static ssize_t store_rotate_all(struct device *, struct device_attribute *, const char *, size_t);
1920:	static void updatescrollmode(struct fb_info *, struct vc_data *, struct vc_data *, struct display *, struct display *);
868:	static int var_to_display(struct display *, struct fb_var_screeninfo *, struct fb_info *);

File drivers/video/fbdev/core/fbcon_ccw.c:
403:	void fbcon_rotate_ccw(struct fbcon_ops *);
63:	static void ccw_bmove(struct vc_data *, struct fb_info *, int, int, int, int, int, int);
80:	static void ccw_clear(struct vc_data *, struct fb_info *, int, int, int, int);
191:	static void ccw_clear_margins(struct vc_data *, struct fb_info *, int, int);
221:	static void ccw_cursor(struct vc_data *, struct fb_info *, int, int, int);
129:	static void ccw_putcs(struct vc_data *, struct fb_info *, const unsigned short *, int, int, int, int, int);
25:	static void ccw_update_attr(u8 *, u8 *, int, struct vc_data *, struct vc_data *);
386:	static int ccw_update_start(struct fb_info *);

File drivers/video/fbdev/core/fbcon_cw.c:
386:	void fbcon_rotate_cw(struct fbcon_ops *);
48:	static void cw_bmove(struct vc_data *, struct fb_info *, int, int, int, int, int, int);
65:	static void cw_clear(struct vc_data *, struct fb_info *, int, int, int, int);
174:	static void cw_clear_margins(struct vc_data *, struct fb_info *, int, int);
204:	static void cw_cursor(struct vc_data *, struct fb_info *, int, int, int);
114:	static void cw_putcs(struct vc_data *, struct fb_info *, const unsigned short *, int, int, int, int, int);
25:	static void cw_update_attr(u8 *, u8 *, int, struct vc_data *, struct vc_data *);
369:	static int cw_update_start(struct fb_info *);

File drivers/video/fbdev/core/fbcon_rotate.c:
97:	void fbcon_set_rotate(struct fbcon_ops *);
22:	static int fbcon_rotate_font(struct fb_info *, struct vc_data *);

File drivers/video/fbdev/core/fbcon_ud.c:
430:	void fbcon_rotate_ud(struct fbcon_ops *);
48:	static void ud_bmove(struct vc_data *, struct fb_info *, int, int, int, int, int, int);
66:	static void ud_clear(struct vc_data *, struct fb_info *, int, int, int, int);
222:	static void ud_clear_margins(struct vc_data *, struct fb_info *, int, int);
251:	static void ud_cursor(struct vc_data *, struct fb_info *, int, int, int);
151:	static void ud_putcs(struct vc_data *, struct fb_info *, const unsigned short *, int, int, int, int, int);
25:	static void ud_update_attr(u8 *, u8 *, int, struct vc_data *, struct vc_data *);
409:	static int ud_update_start(struct fb_info *);

File drivers/video/fbdev/core/fbcvt.c:
305:	int fb_find_mode_cvt(struct fb_videomode *, int, int);

File drivers/video/fbdev/core/fbmem.c:
1053:	int fb_blank(struct fb_info *, int);
160:	char *fb_get_buffer_offset(struct fb_info *, struct fb_pixmap *, u32);
94:	int fb_get_color_depth(struct fb_var_screeninfo *, struct fb_fix_screeninfo *);
1952:	int fb_new_modelist(struct fb_info *);
120:	void fb_pad_aligned_buffer(u8 *, u32, u8 *, u32, u32);
126:	void fb_pad_unaligned_buffer(u8 *, u32, u8 *, u32, u32, u32, u32, u32);
881:	int fb_pan_display(struct fb_info *, struct fb_var_screeninfo *);
605:	int fb_prepare_logo(struct fb_info *, int);
1876:	void fb_set_suspend(struct fb_info *, int);
942:	int fb_set_var(struct fb_info *, struct fb_var_screeninfo *);
673:	int fb_show_logo(struct fb_info *, int);
79:	int lock_fb_info(struct fb_info *);
1826:	int register_framebuffer(struct fb_info *);
1803:	int remove_conflicting_framebuffers(struct apertures_struct *, const char *, bool);
1789:	int unlink_framebuffer(struct fb_info *);
1855:	int unregister_framebuffer(struct fb_info *);
1773:	static int __unlink_framebuffer(struct fb_info *);
1084:	static long do_fb_ioctl(struct fb_info *, unsigned int, unsigned long);
1598:	static int do_remove_conflicting_framebuffers(struct apertures_struct *, const char *, bool);
1743:	static int do_unregister_framebuffer(struct fb_info *);
1340:	static long fb_compat_ioctl(struct file *, unsigned int, unsigned long);
1224:	static long fb_ioctl(struct file *, unsigned int, unsigned long);
1381:	static int fb_mmap(struct file *, struct vm_area_struct *);
1439:	static int fb_open(struct inode *, struct file *);
744:	static ssize_t fb_read(struct file *, char *, size_t, loff_t *);
1480:	static int fb_release(struct inode *, struct file *);
696:	static void *fb_seq_next(struct seq_file *, void *, loff_t *);
707:	static int fb_seq_show(struct seq_file *, void *);
690:	static void *fb_seq_start(struct seq_file *, loff_t *);
702:	static void fb_seq_stop(struct seq_file *, void *);
200:	static void fb_set_logocmap(struct fb_info *, const struct linux_logo *, const struct linux_logo *);
809:	static ssize_t fb_write(struct file *, const char *, size_t, loff_t *);
1901:	static int fbmem_init(void);
55:	static struct fb_info *get_fb_info(unsigned int);
71:	static void put_fb_info(struct fb_info *);
1718:	static int unbind_console(struct fb_info *);

File drivers/video/fbdev/core/fbmon.c:
1409:	void fb_destroy_modedb(struct fb_videomode *);
1406:	void fb_edid_to_monspecs(unsigned char *, struct fb_monspecs *);
1507:	const unsigned char *fb_firmware_edid(struct device *);
1412:	int fb_get_mode(int, u32, struct fb_var_screeninfo *, struct fb_info *);
1402:	int fb_parse_edid(unsigned char *, struct fb_var_screeninfo *);
1431:	int fb_validate_mode(const struct fb_var_screeninfo *, struct fb_info *);

File drivers/video/fbdev/core/fbsysfs.c:
561:	void fb_bl_default_curve(struct fb_info *, u8, u8, u8);
542:	void fb_cleanup_device(struct fb_info *);
518:	int fb_init_device(struct fb_info *);
39:	struct fb_info *framebuffer_alloc(size_t, struct device *);
82:	void framebuffer_release(struct fb_info *);
91:	static int activate(struct fb_info *, struct fb_var_screeninfo *);
106:	static int mode_string(char *, unsigned int, const struct fb_videomode *);
474:	static ssize_t show_bl_curve(struct device *, struct device_attribute *, char *);
323:	static ssize_t show_blank(struct device *, struct device_attribute *, char *);
235:	static ssize_t show_bpp(struct device *, struct device_attribute *, char *);
425:	static ssize_t show_fbstate(struct device *, struct device_attribute *, char *);
159:	static ssize_t show_mode(struct device *, struct device_attribute *, char *);
202:	static ssize_t show_modes(struct device *, struct device_attribute *, char *);
393:	static ssize_t show_name(struct device *, struct device_attribute *, char *);
385:	static ssize_t show_pan(struct device *, struct device_attribute *, char *);
261:	static ssize_t show_rotate(struct device *, struct device_attribute *, char *);
298:	static ssize_t show_stride(struct device *, struct device_attribute *, char *);
290:	static ssize_t show_virtual(struct device *, struct device_attribute *, char *);
433:	static ssize_t store_bl_curve(struct device *, struct device_attribute *, const char *, size_t);
305:	static ssize_t store_blank(struct device *, struct device_attribute *, const char *, size_t);
220:	static ssize_t store_bpp(struct device *, struct device_attribute *, const char *, size_t);
330:	static ssize_t store_console(struct device *, struct device_attribute *, const char *, size_t);
401:	static ssize_t store_fbstate(struct device *, struct device_attribute *, const char *, size_t);
128:	static ssize_t store_mode(struct device *, struct device_attribute *, const char *, size_t);
170:	static ssize_t store_modes(struct device *, struct device_attribute *, const char *, size_t);
360:	static ssize_t store_pan(struct device *, struct device_attribute *, const char *, size_t);
242:	static ssize_t store_rotate(struct device *, struct device_attribute *, const char *, size_t);
269:	static ssize_t store_virtual(struct device *, struct device_attribute *, const char *, size_t);

File drivers/video/fbdev/core/modedb.c:
1057:	int fb_add_videomode(const struct fb_videomode *, struct list_head *);
1092:	void fb_delete_videomode(const struct fb_videomode *, struct list_head *);
1113:	void fb_destroy_modelist(struct list_head *);
1143:	const struct fb_videomode *fb_find_best_display(const struct fb_monspecs *, struct list_head *);
954:	const struct fb_videomode *fb_find_best_mode(const struct fb_var_screeninfo *, struct list_head *);
617:	int fb_find_mode(struct fb_var_screeninfo *, struct fb_info *, const char *, const struct fb_videomode *, unsigned int, const struct fb_videomode *, unsigned int);
992:	const struct fb_videomode *fb_find_nearest_mode(const struct fb_videomode *, struct list_head *);
1032:	const struct fb_videomode *fb_match_mode(const struct fb_var_screeninfo *, struct list_head *);
921:	int fb_mode_is_equal(const struct fb_videomode *, const struct fb_videomode *);
846:	void fb_var_to_videomode(struct fb_videomode *, const struct fb_var_screeninfo *);
1130:	void fb_videomode_to_modelist(const struct fb_videomode *, int, struct list_head *);
893:	void fb_videomode_to_var(struct fb_var_screeninfo *, const struct fb_videomode *);
542:	static int fb_try_mode(struct fb_var_screeninfo *, struct fb_info *, const struct fb_videomode *, unsigned int);

File drivers/video/fbdev/core/softcursor.c:
22:	int soft_cursor(struct fb_info *, struct fb_cursor *);

File drivers/video/fbdev/core/tileblit.c:
132:	void fbcon_set_tileops(struct vc_data *, struct fb_info *);
20:	static void tile_bmove(struct vc_data *, struct fb_info *, int, int, int, int, int, int);
35:	static void tile_clear(struct vc_data *, struct fb_info *, int, int, int, int);
77:	static void tile_clear_margins(struct vc_data *, struct fb_info *, int, int);
83:	static void tile_cursor(struct vc_data *, struct fb_info *, int, int, int);
55:	static void tile_putcs(struct vc_data *, struct fb_info *, const unsigned short *, int, int, int, int, int);
120:	static int tile_update_start(struct fb_info *);

File drivers/video/fbdev/efifb.c:
313:	static ssize_t base_show(struct device *, struct device_attribute *, char *);
317:	static ssize_t depth_show(struct device *, struct device_attribute *, char *);
239:	static void efifb_destroy(struct fb_info *);
612:	static int efifb_driver_init(void);
637:	static void efifb_fixup_resources(struct pci_dev *);
335:	static int efifb_probe(struct platform_device *);
593:	static int efifb_remove(struct platform_device *);
67:	static int efifb_setcolreg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, struct fb_info *);
315:	static ssize_t height_show(struct device *, struct device_attribute *, char *);
314:	static ssize_t linelength_show(struct device *, struct device_attribute *, char *);
316:	static ssize_t width_show(struct device *, struct device_attribute *, char *);

File drivers/video/fbdev/vesafb.c:
180:	static void vesafb_destroy(struct fb_info *);
496:	static void vesafb_driver_exit(void);
496:	static int vesafb_driver_init(void);
65:	static int vesafb_pan_display(struct fb_var_screeninfo *, struct fb_info *);
235:	static int vesafb_probe(struct platform_device *);
478:	static int vesafb_remove(struct platform_device *);
129:	static int vesafb_setcolreg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, struct fb_info *);

File drivers/video/hdmi.c:
233:	int hdmi_audio_infoframe_init(struct hdmi_audio_infoframe *);
259:	ssize_t hdmi_audio_infoframe_pack(struct hdmi_audio_infoframe *, void *, size_t);
59:	int hdmi_avi_infoframe_init(struct hdmi_avi_infoframe *);
85:	ssize_t hdmi_avi_infoframe_pack(struct hdmi_avi_infoframe *, void *, size_t);
985:	void hdmi_infoframe_log(const char *, struct device *, union hdmi_infoframe *);
428:	ssize_t hdmi_infoframe_pack(union hdmi_infoframe *, void *, size_t);
1237:	int hdmi_infoframe_unpack(union hdmi_infoframe *, void *);
165:	int hdmi_spd_infoframe_init(struct hdmi_spd_infoframe *, const char *, const char *);
195:	ssize_t hdmi_spd_infoframe_pack(struct hdmi_spd_infoframe *, void *, size_t);
308:	int hdmi_vendor_infoframe_init(struct hdmi_vendor_infoframe *);
352:	ssize_t hdmi_vendor_infoframe_pack(struct hdmi_vendor_infoframe *, void *, size_t);
472:	static void hdmi_infoframe_log_header(const char *, struct device *, struct hdmi_any_infoframe *, struct hdmi_any_infoframe *, struct hdmi_any_infoframe *);

File drivers/video/logo/logo.c:
43:	const struct linux_logo *fb_find_logo(int);
31:	static int fb_logo_late_init(void);

File drivers/virtio/virtio.c:
315:	int register_virtio_device(struct virtio_device *);
291:	int register_virtio_driver(struct virtio_driver *);
357:	void unregister_virtio_device(struct virtio_device *);
300:	void unregister_virtio_driver(struct virtio_driver *);
162:	void virtio_add_status(struct virtio_device *, unsigned int);
103:	void virtio_check_driver_offered_feature(const struct virtio_device *, unsigned int);
133:	void virtio_config_changed(struct virtio_device *);
143:	void virtio_config_disable(struct virtio_device *);
151:	void virtio_config_enable(struct virtio_device *);
367:	int virtio_device_freeze(struct virtio_device *);
382:	int virtio_device_restore(struct virtio_device *);
168:	int virtio_finalize_features(struct virtio_device *);
11:	static ssize_t device_show(struct device *, struct device_attribute *, char *);
44:	static ssize_t features_show(struct device *, struct device_attribute *, char *);
35:	static ssize_t modalias_show(struct device *, struct device_attribute *, char *);
27:	static ssize_t status_show(struct device *, struct device_attribute *, char *);
19:	static ssize_t vendor_show(struct device *, struct device_attribute *, char *);
82:	static int virtio_dev_match(struct device *, struct device_driver *);
190:	static int virtio_dev_probe(struct device *);
265:	static int virtio_dev_remove(struct device *);
436:	static void virtio_exit(void);
429:	static int virtio_init(void);
95:	static int virtio_uevent(struct device *, struct kobj_uevent_env *);

File drivers/virtio/virtio_pci_common.c:
414:	const char *vp_bus_name(struct virtio_device *);
229:	void vp_del_vqs(struct virtio_device *);
395:	int vp_find_vqs(struct virtio_device *, unsigned int, struct virtqueue **, vq_callback_t **, const char * const *, const bool *, struct irq_affinity *);
450:	const struct cpumask *vp_get_vq_affinity(struct virtio_device *, int);
44:	bool vp_notify(struct virtqueue *);
426:	int vp_set_vq_affinity(struct virtqueue *, const struct cpumask *);
31:	void vp_synchronize_vectors(struct virtio_device *);
640:	static void virtio_pci_driver_exit(void);
640:	static int virtio_pci_driver_init(void);
463:	static int virtio_pci_freeze(struct device *);
515:	static int virtio_pci_probe(struct pci_dev *, const struct pci_device_id *);
504:	static void virtio_pci_release_dev(struct device *);
577:	static void virtio_pci_remove(struct pci_dev *);
476:	static int virtio_pci_restore(struct device *);
602:	static int virtio_pci_sriov_configure(struct pci_dev *, int);
53:	static irqreturn_t vp_config_changed(int, void *);
282:	static int vp_find_vqs_msix(struct virtio_device *, unsigned int, struct virtqueue **, vq_callback_t **, const char * const *, bool, const bool *, struct irq_affinity *);
85:	static irqreturn_t vp_interrupt(int, void *);
177:	static struct virtqueue *vp_setup_vq(struct virtio_device *, unsigned int, void (*)(struct virtqueue *), const char *, bool, u16);
62:	static irqreturn_t vp_vring_interrupt(int, void *);

File drivers/virtio/virtio_pci_legacy.c:
213:	int virtio_pci_legacy_probe(struct virtio_pci_device *);
274:	void virtio_pci_legacy_remove(struct virtio_pci_device *);
177:	static void del_vq(struct virtio_pci_vq_info *);
114:	static struct virtqueue *setup_vq(struct virtio_pci_device *, struct virtio_pci_vq_info *, unsigned int, void (*)(struct virtqueue *), const char *, bool, u16);
105:	static u16 vp_config_vector(struct virtio_pci_device *, u16);
33:	static int vp_finalize_features(struct virtio_device *);
50:	static void vp_get(struct virtio_device *, unsigned int, void *, unsigned int);
23:	static u64 vp_get_features(struct virtio_device *);
79:	static u8 vp_get_status(struct virtio_device *);
93:	static void vp_reset(struct virtio_device *);
65:	static void vp_set(struct virtio_device *, unsigned int, const void *, unsigned int);
85:	static void vp_set_status(struct virtio_device *, u8);

File drivers/virtio/virtio_pci_modern.c:
584:	int virtio_pci_modern_probe(struct virtio_pci_device *);
726:	void virtio_pci_modern_remove(struct virtio_pci_device *);
429:	static void del_vq(struct virtio_pci_vq_info *);
68:	static void *map_capability(struct pci_dev *, int, size_t, u32, u32, u32, size_t *);
309:	static struct virtqueue *setup_vq(struct virtio_pci_device *, struct virtio_pci_vq_info *, unsigned int, void (*)(struct virtqueue *), const char *, bool, u16);
300:	static u16 vp_config_vector(struct virtio_pci_device *, u16);
167:	static int vp_finalize_features(struct virtio_device *);
263:	static u32 vp_generation(struct virtio_device *);
193:	static void vp_get(struct virtio_device *, unsigned int, void *, unsigned int);
143:	static u64 vp_get_features(struct virtio_device *);
270:	static u8 vp_get_status(struct virtio_device *);
405:	static int vp_modern_find_vqs(struct virtio_device *, unsigned int, struct virtqueue **, vq_callback_t **, const char * const *, const bool *, struct irq_affinity *);
284:	static void vp_reset(struct virtio_device *);
229:	static void vp_set(struct virtio_device *, unsigned int, const void *, unsigned int);
276:	static void vp_set_status(struct virtio_device *, u8);

File drivers/virtio/virtio_ring.c:
959:	struct virtqueue *__vring_new_virtqueue(unsigned int, struct vring, struct virtio_device *, bool, bool, bool (*)(struct virtqueue *), void (*)(struct virtqueue *), const char *);
1208:	void virtio_break_device(struct virtio_device *);
506:	int virtqueue_add_inbuf(struct virtqueue *, struct scatterlist *, unsigned int, void *, gfp_t);
529:	int virtqueue_add_inbuf_ctx(struct virtqueue *, struct scatterlist *, unsigned int, void *, void *, gfp_t);
484:	int virtqueue_add_outbuf(struct virtqueue *, struct scatterlist *, unsigned int, void *, gfp_t);
451:	int virtqueue_add_sgs(struct virtqueue *, struct scatterlist **, unsigned int, unsigned int, void *, gfp_t);
912:	void *virtqueue_detach_unused_buf(struct virtqueue *);
770:	void virtqueue_disable_cb(struct virtqueue *);
850:	bool virtqueue_enable_cb(struct virtqueue *);
870:	bool virtqueue_enable_cb_delayed(struct virtqueue *);
795:	unsigned int virtqueue_enable_cb_prepare(struct virtqueue *);
1229:	dma_addr_t virtqueue_get_avail_addr(struct virtqueue *);
756:	void *virtqueue_get_buf(struct virtqueue *, unsigned int *);
698:	void *virtqueue_get_buf_ctx(struct virtqueue *, unsigned int *, void **);
1219:	dma_addr_t virtqueue_get_desc_addr(struct virtqueue *);
1240:	dma_addr_t virtqueue_get_used_addr(struct virtqueue *);
1251:	const struct vring *virtqueue_get_vring(struct virtqueue *);
1187:	unsigned int virtqueue_get_vring_size(struct virtqueue *);
1196:	bool virtqueue_is_broken(struct virtqueue *);
620:	bool virtqueue_kick(struct virtqueue *);
550:	bool virtqueue_kick_prepare(struct virtqueue *);
592:	bool virtqueue_notify(struct virtqueue *);
827:	bool virtqueue_poll(struct virtqueue *, unsigned int);
1061:	struct virtqueue *vring_create_virtqueue(unsigned int, unsigned int, unsigned int, struct virtio_device *, bool, bool, bool, bool (*)(struct virtqueue *), void (*)(struct virtqueue *), const char *);
1144:	void vring_del_virtqueue(struct virtqueue *);
939:	irqreturn_t vring_interrupt(int, void *);
1126:	struct virtqueue *vring_new_virtqueue(unsigned int, unsigned int, unsigned int, struct virtio_device *, bool, bool, void *, bool (*)(struct virtqueue *), void (*)(struct virtqueue *), const char *);
1158:	void vring_transport_features(struct virtio_device *);
237:	static struct vring_desc *alloc_indirect(unsigned int, gfp_t, struct virtqueue *);
628:	static void detach_buf(struct vring_virtqueue *, unsigned int, void **);
1019:	static void *vring_alloc_queue(struct virtio_device *, size_t, dma_addr_t *, gfp_t);
1051:	static void vring_free_queue(struct virtio_device *, size_t, void *, dma_addr_t);
175:	static dma_addr_t vring_map_one_sg(const struct vring_virtqueue *, struct scatterlist *, enum dma_data_direction);
192:	static dma_addr_t vring_map_single(const struct vring_virtqueue *, void *, size_t, enum dma_data_direction);
228:	static int vring_mapping_error(const struct vring_virtqueue *, dma_addr_t);
203:	static void vring_unmap_one(const struct vring_virtqueue *, struct vring_desc *);
144:	static bool vring_use_dma_api(struct virtio_device *);

File drivers/watchdog/watchdog_core.c:
347:	int devm_watchdog_register_device(struct device *, struct watchdog_device *);
112:	int watchdog_init_timeout(struct watchdog_device *, unsigned int, struct device *);
284:	int watchdog_register_device(struct watchdog_device *);
189:	void watchdog_set_restart_priority(struct watchdog_device *, int);
321:	void watchdog_unregister_device(struct watchdog_device *);
195:	static int __watchdog_register_device(struct watchdog_device *);
333:	static void devm_watchdog_unregister_device(struct device *, void *);
398:	static void watchdog_exit(void);
386:	static int watchdog_init(void);
141:	static int watchdog_reboot_notifier(struct notifier_block *, unsigned long, void *);
160:	static int watchdog_restart_notifier(struct notifier_block *, unsigned long, void *);

File drivers/watchdog/watchdog_dev.c:
1199:	void watchdog_dev_exit(void);
1160:	int watchdog_dev_init(void);
1125:	int watchdog_dev_register(struct watchdog_device *);
1148:	void watchdog_dev_unregister(struct watchdog_device *);
154:	static int __watchdog_ping(struct watchdog_device *);
454:	static ssize_t bootstatus_show(struct device *, struct device_attribute *, char *);
562:	static ssize_t identity_show(struct device *, struct device_attribute *, char *);
430:	static ssize_t nowayout_show(struct device *, struct device_attribute *, char *);
583:	static ssize_t pretimeout_available_governors_show(struct device *, struct device_attribute *, char *);
599:	static ssize_t pretimeout_governor_store(struct device *, struct device_attribute *, const char *, size_t);
524:	static ssize_t pretimeout_show(struct device *, struct device_attribute *, char *);
571:	static ssize_t state_show(struct device *, struct device_attribute *, char *);
439:	static ssize_t status_show(struct device *, struct device_attribute *, char *);
463:	static ssize_t timeleft_show(struct device *, struct device_attribute *, char *);
481:	static ssize_t timeout_show(struct device *, struct device_attribute *, char *);
899:	static void watchdog_core_data_release(struct device *);
323:	static unsigned int watchdog_get_status(struct watchdog_device *);
737:	static long watchdog_ioctl(struct file *, unsigned int, unsigned long);
111:	static ktime_t watchdog_next_keepalive(struct watchdog_device *);
850:	static int watchdog_open(struct inode *, struct file *);
195:	static int watchdog_ping(struct watchdog_device *);
215:	static void watchdog_ping_work(struct kthread_work *);
918:	static int watchdog_release(struct inode *, struct file *);
248:	static int watchdog_start(struct watchdog_device *);
286:	static int watchdog_stop(struct watchdog_device *);
227:	static enum hrtimer_restart watchdog_timer_expired(struct hrtimer *);
686:	static ssize_t watchdog_write(struct file *, const char *, size_t, loff_t *);
613:	static umode_t wdt_is_visible(struct kobject *, struct attribute *, int);

File drivers/xen/balloon.c:
602:	int alloc_xenballooned_pages(int, struct page **);
563:	void balloon_set_new_target(unsigned long);
649:	void free_xenballooned_pages(int, struct page **);
162:	static void __balloon_append(struct page *);
696:	static int balloon_init(void);
521:	static void balloon_process(struct work_struct *);
181:	static struct page *balloon_retrieve(bool);
458:	static enum bp_state decrease_reservation(unsigned long, gfp_t);

File drivers/xen/biomerge.c:
7:	bool xen_biovec_phys_mergeable(const struct bio_vec *, const struct bio_vec *);

File drivers/xen/cpu_hotplug.c:
72:	static void handle_vcpu_hotplug_event(struct xenbus_watch *, const char *, const char *);
85:	static int setup_cpu_watcher(struct notifier_block *, unsigned long, void *);
105:	static int setup_vcpu_hotplug_event(void);
34:	static int vcpu_online(unsigned int);

File drivers/xen/efi.c:
212:	efi_status_t xen_efi_get_next_high_mono_count(u32 *);
145:	efi_status_t xen_efi_get_next_variable(unsigned long *, efi_char16_t *, efi_guid_t *);
42:	efi_status_t xen_efi_get_time(efi_time_t *, efi_time_cap_t *);
121:	efi_status_t xen_efi_get_variable(efi_char16_t *, efi_guid_t *, u32 *, unsigned long *, void *);
79:	efi_status_t xen_efi_get_wakeup_time(efi_bool_t *, efi_bool_t *, efi_time_t *);
245:	efi_status_t xen_efi_query_capsule_caps(efi_capsule_header_t **, unsigned long, u64 *, int *);
190:	efi_status_t xen_efi_query_variable_info(u32, u64 *, u64 *, u64 *);
268:	void xen_efi_reset_system(int, efi_status_t, unsigned long, efi_char16_t *);
65:	efi_status_t xen_efi_set_time(efi_time_t *);
169:	efi_status_t xen_efi_set_variable(efi_char16_t *, efi_guid_t *, u32, unsigned long, void *);
102:	efi_status_t xen_efi_set_wakeup_time(efi_bool_t, efi_time_t *);
225:	efi_status_t xen_efi_update_capsule(efi_capsule_header_t **, unsigned long, unsigned long);

File drivers/xen/events/events_2l.c:
264:	irqreturn_t xen_debug_interrupt(int, void *);
371:	void xen_evtchn_2l_init(void);
50:	static void evtchn_2l_bind_to_cpu(struct irq_info *, unsigned int);
56:	static void evtchn_2l_clear_pending(unsigned int);
164:	static void evtchn_2l_handle_events(unsigned int, struct evtchn_loop_ctrl *);
68:	static bool evtchn_2l_is_pending(unsigned int);
80:	static void evtchn_2l_mask(unsigned int);
45:	static unsigned int evtchn_2l_max_channels(void);
348:	static void evtchn_2l_resume(void);
62:	static void evtchn_2l_set_pending(unsigned int);
74:	static bool evtchn_2l_test_and_set_mask(unsigned int);
86:	static void evtchn_2l_unmask(unsigned int);

File drivers/xen/events/events_base.c:
1046:	int bind_evtchn_to_irq(unsigned int);
1052:	int bind_evtchn_to_irq_lateeoi(unsigned int);
1247:	int bind_evtchn_to_irqhandler(unsigned int, irq_handler_t, unsigned long, const char *, void *);
1258:	int bind_evtchn_to_irqhandler_lateeoi(unsigned int, irq_handler_t, unsigned long, const char *, void *);
1116:	int bind_interdomain_evtchn_to_irq(unsigned int, unsigned int);
1124:	int bind_interdomain_evtchn_to_irq_lateeoi(unsigned int, unsigned int);
1290:	int bind_interdomain_evtchn_to_irqhandler(unsigned int, unsigned int, irq_handler_t, unsigned long, const char *, void *);
1303:	int bind_interdomain_evtchn_to_irqhandler_lateeoi(unsigned int, unsigned int, irq_handler_t, unsigned long, const char *, void *);
1335:	int bind_ipi_to_irqhandler(enum ipi_vector, unsigned int, irq_handler_t, unsigned long, const char *, void *);
1167:	int bind_virq_to_irq(unsigned int, unsigned int, bool);
1316:	int bind_virq_to_irqhandler(unsigned int, unsigned int, irq_handler_t, unsigned long, const char *, void *);
344:	unsigned int cpu_from_evtchn(unsigned int);
339:	unsigned int cpu_from_irq(unsigned int);
281:	unsigned int evtchn_from_irq(unsigned int);
1407:	int evtchn_get(unsigned int);
1386:	int evtchn_make_refcounted(unsigned int);
1440:	void evtchn_put(unsigned int);
179:	int get_evtchn_to_irq(unsigned int);
1473:	void handle_irq_for_port(evtchn_port_t, struct evtchn_loop_ctrl *);
189:	struct irq_info *info_for_irq(unsigned int);
293:	unsigned int irq_from_evtchn(unsigned int);
299:	int irq_from_virq(unsigned int, unsigned int);
392:	void notify_remote_via_irq(int);
1575:	void rebind_evtchn_irq(int, int);
1358:	void unbind_from_irqhandler(unsigned int, void *);
893:	int xen_allocate_pirq_msi(struct pci_dev *, struct msi_desc *);
822:	int xen_bind_pirq_gsi_to_irq(unsigned int, unsigned int, int, char *);
907:	int xen_bind_pirq_msi_to_irq(struct pci_dev *, struct msi_desc *, int, int, const char *, domid_t);
1974:	void xen_callback_vector(void);
1810:	void xen_clear_irq_pending(int);
941:	int xen_destroy_irq(int);
1553:	void xen_evtchn_do_upcall(struct pt_regs *);
1161:	unsigned int xen_evtchn_nr_channels(void);
1568:	void xen_hvm_evtchn_do_upcall(void);
2021:	void xen_init_IRQ(void);
763:	int xen_irq_from_gsi(unsigned int);
978:	int xen_irq_from_pirq(unsigned int);
515:	void xen_irq_lateeoi(unsigned int, unsigned int);
1879:	void xen_irq_resume(void);
1001:	int xen_pirq_from_irq(unsigned int);
1857:	void xen_poll_irq(int);
1839:	void xen_poll_irq_timeout(int, u64);
1449:	void xen_send_IPI_one(unsigned int, enum ipi_vector);
1655:	int xen_set_affinity_evtchn(struct irq_desc *, unsigned int);
1960:	int xen_set_callback_via(uint64_t);
1818:	void xen_set_irq_pending(int);
1374:	int xen_set_irq_priority(unsigned int, unsigned int);
1826:	bool xen_test_irq_pending(int);
1863:	int xen_test_irq_shared(int);
684:	static unsigned int __startup_pirq(unsigned int);
779:	static void __unbind_from_irq(unsigned int);
1517:	static void __xen_evtchn_do_upcall(void);
1679:	static void ack_dynirq(struct irq_data *);
370:	static void bind_evtchn_to_cpu(unsigned int, unsigned int);
1007:	static int bind_evtchn_to_irq_chip(unsigned int, struct irq_chip *);
1099:	static int bind_interdomain_evtchn_to_irq_chip(unsigned int, unsigned int, struct irq_chip *);
1671:	static void disable_dynirq(struct irq_data *);
758:	static void disable_pirq(struct irq_data *);
1663:	static void enable_dynirq(struct irq_data *);
753:	static void enable_pirq(struct irq_data *);
650:	static void eoi_pirq(struct irq_data *);
304:	static enum ipi_vector ipi_from_irq(unsigned int);
1700:	static void mask_ack_dynirq(struct irq_data *);
678:	static void mask_ack_pirq(struct irq_data *);
356:	static bool pirq_check_eoi_map(unsigned int);
324:	static unsigned int pirq_from_irq(unsigned int);
362:	static bool pirq_needs_eoi_flag(unsigned int);
634:	static void pirq_query_unmask(int);
1706:	static int retrigger_dynirq(struct irq_data *);
1642:	static int set_affinity_irq(struct irq_data *, const struct cpumask *, bool);
152:	static int set_evtchn_to_irq(unsigned int, unsigned int);
737:	static void shutdown_pirq(struct irq_data *);
732:	static unsigned int startup_pirq(struct irq_data *);
1220:	static void unbind_from_irq(unsigned int);
314:	static unsigned int virq_from_irq(unsigned int);
553:	static int xen_allocate_irqs_dynamic(int);
506:	static void xen_cpu_init_eoi(unsigned int);
625:	static void xen_evtchn_close(unsigned int);
2011:	static int xen_evtchn_cpu_dead(unsigned int);
1999:	static int xen_evtchn_cpu_prepare(unsigned int);
595:	static void xen_free_irq(unsigned int);
195:	static int xen_irq_info_common_setup(struct irq_info *, unsigned int, enum xen_irq_type, unsigned int, unsigned short);
219:	static int xen_irq_info_evtchn_setup(unsigned int, unsigned int);
227:	static int xen_irq_info_ipi_setup(unsigned int, unsigned int, unsigned int, enum ipi_vector);
241:	static int xen_irq_info_virq_setup(unsigned int, unsigned int, unsigned int, unsigned int);
531:	static void xen_irq_init(unsigned int);
449:	static void xen_irq_lateeoi_locked(struct irq_info *);
468:	static void xen_irq_lateeoi_worker(struct work_struct *);

File drivers/xen/events/events_fifo.c:
432:	int xen_evtchn_fifo_init(void);
322:	static void __evtchn_fifo_handle_events(unsigned int, struct evtchn_loop_ctrl *);
380:	static int evtchn_fifo_alloc_control_block(unsigned int);
189:	static void evtchn_fifo_bind_to_cpu(struct irq_info *, unsigned int);
194:	static void evtchn_fifo_clear_pending(unsigned int);
340:	static void evtchn_fifo_handle_events(unsigned int, struct evtchn_loop_ctrl *);
206:	static bool evtchn_fifo_is_pending(unsigned int);
218:	static void evtchn_fifo_mask(unsigned int);
92:	static unsigned int evtchn_fifo_max_channels(void);
97:	static unsigned int evtchn_fifo_nr_channels(void);
409:	static int evtchn_fifo_percpu_deinit(unsigned int);
402:	static int evtchn_fifo_percpu_init(unsigned int);
346:	static void evtchn_fifo_resume(void);
200:	static void evtchn_fifo_set_pending(unsigned int);
141:	static int evtchn_fifo_setup(struct irq_info *);
212:	static bool evtchn_fifo_test_and_set_mask(unsigned int);
251:	static void evtchn_fifo_unmask(unsigned int);
102:	static int init_control_block(int, struct evtchn_fifo_control_block *);

File drivers/xen/fallback.c:
8:	int xen_event_channel_op_compat(int, void *);
47:	int xen_physdev_op_compat(int, void *);

File drivers/xen/features.c:
21:	void xen_setup_features(void);

File drivers/xen/grant-table.c:
575:	int gnttab_alloc_grant_references(u16, grant_ref_t *);
802:	int gnttab_alloc_pages(int, struct page **);
971:	void gnttab_batch_copy(struct gnttab_copy *, unsigned int);
958:	void gnttab_batch_map(struct gnttab_map_grant_ref *, unsigned int);
639:	void gnttab_cancel_free_callback(struct gnttab_free_callback *);
594:	int gnttab_claim_grant_reference(grant_ref_t *);
588:	int gnttab_empty_grant_references(const grant_ref_t *);
439:	void gnttab_end_foreign_access(grant_ref_t, int, unsigned long);
348:	int gnttab_end_foreign_access_ref(grant_ref_t, int);
540:	unsigned long gnttab_end_foreign_transfer(grant_ref_t);
534:	unsigned long gnttab_end_foreign_transfer_ref(grant_ref_t);
1010:	void gnttab_foreach_grant(struct page **, unsigned int, xen_grant_fn_t, void *);
984:	void gnttab_foreach_grant_in_range(struct page *, unsigned int, unsigned int, xen_grant_fn_t, void *);
763:	void gnttab_free_auto_xlat_frames(void);
548:	void gnttab_free_grant_reference(grant_ref_t);
554:	void gnttab_free_grant_references(grant_ref_t);
838:	void gnttab_free_pages(int, struct page **);
273:	int gnttab_grant_foreign_access(domid_t, unsigned long, int);
265:	void gnttab_grant_foreign_access_ref(grant_ref_t, domid_t, unsigned long, int);
452:	int gnttab_grant_foreign_transfer(domid_t, unsigned long);
465:	void gnttab_grant_foreign_transfer_ref(grant_ref_t, domid_t, unsigned long);
1412:	int gnttab_init(void);
1032:	int gnttab_map_refs(struct gnttab_map_grant_ref *, struct gnttab_map_grant_ref *, struct page **, unsigned int);
716:	unsigned int gnttab_max_grant_frames(void);
818:	void gnttab_pages_clear_private(int, struct page **);
776:	int gnttab_pages_set_private(int, struct page **);
298:	int gnttab_query_foreign_access(grant_ref_t);
604:	void gnttab_release_grant_reference(grant_ref_t *, grant_ref_t);
612:	void gnttab_request_free_callback(struct gnttab_free_callback *, void (*)(void *), void *, u16);
1374:	int gnttab_resume(void);
731:	int gnttab_setup_auto_xlat_frames(phys_addr_t);
1380:	int gnttab_suspend(void);
1077:	int gnttab_unmap_refs(struct page **, unsigned int, struct gnttab_unmap_grant_ref *, struct gnttab_unmap_grant_ref *);
1129:	void gnttab_unmap_refs_async(struct gntab_unmap_queue_data *);
1147:	int gnttab_unmap_refs_sync(struct gntab_unmap_queue_data *);
1477:	static int __gnttab_init(void);
1110:	static void __gnttab_unmap_refs_async(struct gntab_unmap_queue_data *);
196:	static void do_free_callbacks(void);
170:	static int get_free_entries(unsigned int);
304:	static int gnttab_end_foreign_access_ref_v1(grant_ref_t, int);
320:	static int gnttab_end_foreign_access_ref_v2(grant_ref_t, int);
472:	static unsigned long gnttab_end_foreign_transfer_ref_v1(grant_ref_t);
503:	static unsigned long gnttab_end_foreign_transfer_ref_v2(grant_ref_t);
368:	static void gnttab_handle_deferred(struct timer_list *);
1233:	static int gnttab_map(unsigned int, unsigned int);
1167:	static int gnttab_map_frames_v1(xen_pfn_t *, unsigned int);
1184:	static int gnttab_map_frames_v2(xen_pfn_t *, unsigned int);
288:	static int gnttab_query_foreign_access_v1(grant_ref_t);
293:	static int gnttab_query_foreign_access_v2(grant_ref_t);
1332:	static void gnttab_request_version(void);
1355:	static int gnttab_setup(void);
1179:	static void gnttab_unmap_frames_v1(void);
1227:	static void gnttab_unmap_frames_v2(void);
1099:	static void gnttab_unmap_work(struct work_struct *);
244:	static void gnttab_update_entry_v1(grant_ref_t, domid_t, unsigned long, unsigned int);
253:	static void gnttab_update_entry_v2(grant_ref_t, domid_t, unsigned long, unsigned int);
1161:	static unsigned int nr_status_frames(unsigned int);
222:	static void put_free_entry(grant_ref_t);
1138:	static void unmap_refs_callback(int, struct gntab_unmap_queue_data *);

File drivers/xen/manage.c:
48:	void xen_resume_notifier_register(struct notifier_block *);
54:	void xen_resume_notifier_unregister(struct notifier_block *);
373:	int xen_setup_shutdown_event(void);
186:	static void do_poweroff(void);
203:	static void do_reboot(void);
96:	static void do_suspend(void);
174:	static int poweroff_nb(struct notifier_block *, unsigned long, void *);
365:	static int shutdown_event(struct notifier_block *, unsigned long, void *);
218:	static void shutdown_handler(struct xenbus_watch *, const char *, const char *);
267:	static void sysrq_handler(struct xenbus_watch *, const char *, const char *);
61:	static int xen_suspend(void *);

File drivers/xen/mem-reservation.c:
109:	int xenmem_reservation_decrease(int, xen_pfn_t *);
93:	int xenmem_reservation_increase(int, xen_pfn_t *);

File drivers/xen/platform-pci.c:
77:	static irqreturn_t do_hvm_evtchn_intr(int, void *);
193:	static int platform_driver_init(void);
105:	static int platform_pci_probe(struct pci_dev *, const struct pci_device_id *);
90:	static int platform_pci_resume(struct pci_dev *);

File drivers/xen/preempt.c:
31:	void xen_maybe_preempt_hcall(void);

File drivers/xen/swiotlb-xen.c:
205:	int xen_swiotlb_init(int, bool);
504:	void xen_swiotlb_sync_single_for_cpu(struct device *, dma_addr_t, size_t, enum dma_data_direction);
511:	void xen_swiotlb_sync_single_for_device(struct device *, dma_addr_t, size_t, enum dma_data_direction);
97:	static int check_pages_physically_contiguous(unsigned long, unsigned int, size_t);
127:	static int is_xen_swiotlb_buffer(dma_addr_t);
288:	static void *xen_swiotlb_alloc_coherent(struct device *, size_t, dma_addr_t *, gfp_t, unsigned long);
662:	static int xen_swiotlb_dma_mmap(struct device *, struct vm_area_struct *, void *, dma_addr_t, size_t, unsigned long);
651:	static int xen_swiotlb_dma_supported(struct device *, u64);
343:	static void xen_swiotlb_free_coherent(struct device *, size_t, void *, dma_addr_t, unsigned long);
679:	static int xen_swiotlb_get_sgtable(struct device *, struct sg_table *, void *, dma_addr_t, size_t, unsigned long);
374:	static dma_addr_t xen_swiotlb_map_page(struct device *, struct page *, unsigned long, size_t, enum dma_data_direction, unsigned long);
553:	static int xen_swiotlb_map_sg_attrs(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long);
701:	static int xen_swiotlb_mapping_error(struct device *, dma_addr_t);
631:	static void xen_swiotlb_sync_sg_for_cpu(struct device *, struct scatterlist *, int, enum dma_data_direction);
638:	static void xen_swiotlb_sync_sg_for_device(struct device *, struct scatterlist *, int, enum dma_data_direction);
479:	static void xen_swiotlb_sync_single(struct device *, dma_addr_t, size_t, enum dma_data_direction, enum dma_sync_target);
461:	static void xen_swiotlb_unmap_page(struct device *, dma_addr_t, size_t, enum dma_data_direction, unsigned long);
522:	static void xen_swiotlb_unmap_sg_attrs(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long);
433:	static void xen_unmap_single(struct device *, dma_addr_t, size_t, enum dma_data_direction, unsigned long);

File drivers/xen/sys-hypervisor.c:
359:	static ssize_t buildid_show(struct hyp_sysfs_attr *, char *);
254:	static ssize_t capabilities_show(struct hyp_sysfs_attr *, char *);
272:	static ssize_t changeset_show(struct hyp_sysfs_attr *, char *);
217:	static ssize_t compile_date_show(struct hyp_sysfs_attr *, char *);
199:	static ssize_t compiled_by_show(struct hyp_sysfs_attr *, char *);
181:	static ssize_t compiler_show(struct hyp_sysfs_attr *, char *);
103:	static ssize_t extra_show(struct hyp_sysfs_attr *, char *);
336:	static ssize_t features_show(struct hyp_sysfs_attr *, char *);
53:	static ssize_t guest_type_show(struct hyp_sysfs_attr *, char *);
573:	static ssize_t hyp_sysfs_show(struct kobject *, struct attribute *, char *);
584:	static ssize_t hyp_sysfs_store(struct kobject *, struct attribute *, const char *, size_t);
521:	static int hyper_sysfs_init(void);
605:	static int hypervisor_subsys_init(void);
83:	static ssize_t major_show(struct hyp_sysfs_attr *, char *);
93:	static ssize_t minor_show(struct hyp_sysfs_attr *, char *);
310:	static ssize_t pagesize_show(struct hyp_sysfs_attr *, char *);
41:	static ssize_t type_show(struct hyp_sysfs_attr *, char *);
161:	static ssize_t uuid_show(struct hyp_sysfs_attr *, char *);
290:	static ssize_t virtual_start_show(struct hyp_sysfs_attr *, char *);

File drivers/xen/time.c:
141:	void xen_get_runstate_snapshot(struct vcpu_runstate_info *);
84:	void xen_manage_runstate_time(int);
160:	void xen_setup_runstate_info(int);
152:	u64 xen_steal_clock(int);
171:	void xen_time_setup_guest(void);
147:	bool xen_vcpu_stolen(int);
73:	static void xen_get_runstate_snapshot_cpu(struct vcpu_runstate_info *, unsigned int);
54:	static void xen_get_runstate_snapshot_cpu_delta(struct vcpu_runstate_info *, unsigned int);

File drivers/xen/xen-balloon.c:
117:	void xen_balloon_init(void);
100:	static int balloon_init_watcher(struct notifier_block *, unsigned long, void *);
136:	static ssize_t show_current_kb(struct device *, struct device_attribute *, char *);
138:	static ssize_t show_high_kb(struct device *, struct device_attribute *, char *);
137:	static ssize_t show_low_kb(struct device *, struct device_attribute *, char *);
174:	static ssize_t show_target(struct device *, struct device_attribute *, char *);
146:	static ssize_t show_target_kb(struct device *, struct device_attribute *, char *);
182:	static ssize_t store_target(struct device *, struct device_attribute *, const char *, size_t);
152:	static ssize_t store_target_kb(struct device *, struct device_attribute *, const char *, size_t);
58:	static void watch_target(struct xenbus_watch *, const char *, const char *);

File drivers/xen/xenbus/xenbus_client.c:
402:	int xenbus_alloc_evtchn(struct xenbus_device *, int *);
305:	void xenbus_dev_error(struct xenbus_device *, int, const char *, ...);
326:	void xenbus_dev_fatal(struct xenbus_device *, int, const char *, ...);
425:	int xenbus_free_evtchn(struct xenbus_device *, int);
260:	int xenbus_frontend_closed(struct xenbus_device *);
367:	int xenbus_grant_ring(struct xenbus_device *, void *, unsigned int, grant_ref_t *);
639:	int xenbus_map_ring(struct xenbus_device *, grant_ref_t *, unsigned int, grant_handle_t *, unsigned long *, bool *);
456:	int xenbus_map_ring_valloc(struct xenbus_device *, grant_ref_t *, unsigned int, void **);
921:	enum xenbus_state xenbus_read_driver_state(const char *);
937:	void xenbus_ring_ops_init(void);
84:	const char *xenbus_strstate(enum xenbus_state);
253:	int xenbus_switch_state(struct xenbus_device *, enum xenbus_state);
880:	int xenbus_unmap_ring(struct xenbus_device *, grant_handle_t *, unsigned int, unsigned long *);
670:	int xenbus_unmap_ring_vfree(struct xenbus_device *, void *);
115:	int xenbus_watch_path(struct xenbus_device *, const char *, struct xenbus_watch *, bool (*)(struct xenbus_watch *, const char *, const char *), void (*)(struct xenbus_watch *, const char *, const char *));
157:	int xenbus_watch_pathfmt(struct xenbus_device *, struct xenbus_watch *, bool (*)(struct xenbus_watch *, const char *, const char *), void (*)(struct xenbus_watch *, const char *, const char *), const char *, ...);
466:	static int __xenbus_map_ring(struct xenbus_device *, grant_ref_t *, unsigned int, grant_handle_t *, phys_addr_t *, bool *, unsigned int);
189:	static int __xenbus_switch_state(struct xenbus_device *, enum xenbus_state, int);
537:	static void xenbus_map_ring_setup_grant_hvm(unsigned long, unsigned int, unsigned int, void *);
551:	static int xenbus_map_ring_valloc_hvm(struct xenbus_device *, grant_ref_t *, unsigned int, void **);
342:	static void xenbus_switch_fatal(struct xenbus_device *, int, int, const char *, ...);
810:	static void xenbus_unmap_ring_setup_grant_hvm(unsigned long, unsigned int, unsigned int, void *);
822:	static int xenbus_unmap_ring_vfree_hvm(struct xenbus_device *, void *);
268:	static void xenbus_va_dev_error(struct xenbus_device *, int, const char *, struct __va_list_tag *);

File drivers/xen/xenbus/xenbus_comms.c:
484:	void xb_deinit_comms(void);
442:	int xb_init_comms(void);
63:	static irqreturn_t wake_waiting(int, void *);
166:	static int xb_read(void *, unsigned int);
409:	static int xb_thread_work(void);
414:	static int xenbus_thread(void *);

File drivers/xen/xenbus/xenbus_dev_frontend.c:
363:	void xenbus_dev_queue_reply(struct xb_req_data *);
233:	static void free_watch_adapter(struct watch_adapter *);
215:	static void queue_cleanup(struct list_head *);
189:	static int queue_reply(struct list_head *, const void *, size_t);
266:	static void watch_fired(struct xenbus_watch *, const char *, const char *);
419:	static int xenbus_command_reply(struct xenbus_file_priv *, unsigned int, const char *);
339:	static void xenbus_file_free(struct kref *);
651:	static int xenbus_file_open(struct inode *, struct file *);
689:	static __poll_t xenbus_file_poll(struct file *, poll_table *);
125:	static ssize_t xenbus_file_read(struct file *, char *, size_t, loff_t *);
680:	static int xenbus_file_release(struct inode *, struct file *);
551:	static ssize_t xenbus_file_write(struct file *, const char *, size_t, loff_t *);
715:	static int xenbus_init(void);
306:	static void xenbus_worker(struct work_struct *);

File drivers/xen/xenbus/xenbus_probe.c:
667:	int register_xenstore_notifier(struct notifier_block *);
680:	void unregister_xenstore_notifier(struct notifier_block *);
655:	int xenbus_dev_cancel(struct device *);
557:	void xenbus_dev_changed(const char *, struct xen_bus_type *);
209:	int xenbus_dev_probe(struct device *);
255:	int xenbus_dev_remove(struct device *);
615:	int xenbus_dev_resume(struct device *);
274:	void xenbus_dev_shutdown(struct device *);
595:	int xenbus_dev_suspend(struct device *);
92:	int xenbus_match(struct device *, struct device_driver *);
172:	void xenbus_otherend_changed(struct xenbus_watch *, const char *, const char *, int);
686:	void xenbus_probe(struct work_struct *);
513:	int xenbus_probe_devices(struct xen_bus_type *);
432:	int xenbus_probe_node(struct xen_bus_type *, const char *, const char *);
145:	int xenbus_read_otherend_details(struct xenbus_device *, char *, char *);
297:	int xenbus_register_driver_common(struct xenbus_driver *, struct xen_bus_type *, struct module *, const char *);
310:	void xenbus_unregister_driver(struct xenbus_driver *);
343:	static int cleanup_dev(struct device *, void *);
321:	static int cmp_dev(struct device *, void *);
391:	static ssize_t devtype_show(struct device *, struct device_attribute *, char *);
398:	static ssize_t modalias_show(struct device *, struct device_attribute *, char *);
384:	static ssize_t nodename_show(struct device *, struct device_attribute *, char *);
406:	static ssize_t state_show(struct device *, struct device_attribute *, char *);
121:	static int talk_to_otherend(struct xenbus_device *);
133:	static int watch_otherend(struct xenbus_device *);
378:	static void xenbus_dev_release(struct device *);
769:	static int xenbus_init(void);
695:	static int xenbus_probe_initcall(void);
745:	static int xenbus_resume_cb(struct notifier_block *, unsigned long, void *);

File drivers/xen/xenbus/xenbus_probe_frontend.c:
312:	int __xenbus_register_frontend(struct xenbus_driver *, struct module *, const char *);
88:	static void backend_changed(struct xenbus_watch *, const char *, const char *);
489:	static int boot_wait_for_devices(void);
209:	static int essential_device_connecting(struct device *, void *);
35:	static int frontend_bus_id(char *, const char *);
155:	static void frontend_changed(struct xenbus_watch *, const char *, const char *);
453:	static int frontend_probe_and_watch(struct notifier_block *, unsigned long, void *);
175:	static int is_device_connecting(struct device *, void *, bool);
213:	static int non_essential_device_connecting(struct device *, void *);
229:	static int print_device_status(struct device *, void *);
170:	static int read_backend_details(struct xenbus_device *);
287:	static void wait_for_devices(struct xenbus_driver *);
255:	static bool wait_loop(unsigned long, unsigned int, unsigned int *);
94:	static void xenbus_frontend_delayed_resume(struct work_struct *);
118:	static int xenbus_frontend_dev_probe(struct device *);
101:	static int xenbus_frontend_dev_resume(struct device *);
53:	static int xenbus_probe_frontend(struct xen_bus_type *, const char *, const char *);
468:	static int xenbus_probe_frontend_init(void);
334:	static void xenbus_reset_backend_state_changed(struct xenbus_watch *, const char *, const char *);
345:	static void xenbus_reset_wait_for_backend(char *, int);
76:	static int xenbus_uevent_frontend(struct device *, struct kobj_uevent_env *);

File drivers/xen/xenbus/xenbus_xs.c:
761:	int register_xenbus_watch(struct xenbus_watch *);
792:	void unregister_xenbus_watch(struct xenbus_watch *);
273:	int xenbus_dev_request_and_reply(struct xsd_sockmsg *, void *);
419:	char **xenbus_directory(struct xenbus_transaction, const char *, const char *, unsigned int *);
439:	int xenbus_exists(struct xenbus_transaction, const char *, const char *);
626:	int xenbus_gather(struct xenbus_transaction, const char *, ...);
499:	int xenbus_mkdir(struct xenbus_transaction, const char *, const char *);
603:	int xenbus_printf(struct xenbus_transaction, const char *, const char *, const char *, ...);
457:	void *xenbus_read(struct xenbus_transaction, const char *, const char *, unsigned int *);
588:	unsigned int xenbus_read_unsigned(const char *, const char *, unsigned int);
516:	int xenbus_rm(struct xenbus_transaction, const char *, const char *);
565:	int xenbus_scanf(struct xenbus_transaction, const char *, const char *, const char *, ...);
551:	int xenbus_transaction_end(struct xenbus_transaction, int);
534:	int xenbus_transaction_start(struct xenbus_transaction *);
476:	int xenbus_write(struct xenbus_transaction, const char *, const char *, const char *);
933:	int xs_init(void);
139:	void xs_request_exit(struct xb_req_data *);
844:	void xs_resume(void);
836:	void xs_suspend(void);
864:	void xs_suspend_cancel(void);
694:	int xs_watch_msg(struct xs_watch_event *);
373:	static unsigned int count_strings(const char *, unsigned int);
681:	static struct xenbus_watch *find_watch(const char *);
385:	static char *join(const char *, const char *);
192:	static bool test_reply(struct xb_req_data *);
872:	static int xenwatch_thread(void *);
915:	static int xs_reboot_notify(struct notifier_block *, unsigned long, void *);
224:	static void xs_send(struct xb_req_data *, struct xsd_sockmsg *);
352:	static void *xs_single(struct xenbus_transaction, enum xsd_sockmsg_type, const char *, unsigned int *);
106:	static void xs_suspend_exit(void);
299:	static void *xs_talkv(struct xenbus_transaction, enum xsd_sockmsg_type, const struct kvec *, unsigned int, unsigned int *);
268:	static void xs_wake_up(struct xb_req_data *);
655:	static int xs_watch(const char *, const char *);

File drivers/xen/xlate_mmu.c:
215:	int xen_xlate_map_ballooned_pages(xen_pfn_t **, void **, unsigned long);
144:	int xen_xlate_remap_gfn_array(struct page **, unsigned int, pgprot_t, int *, int, xen_pfn_t *, unsigned long, struct vm_area_struct *);
184:	int xen_xlate_unmap_gfn_range(struct vm_area_struct *, int, struct page **);
96:	static int remap_pte_fn(pte_t *, pgtable_t, unsigned long, void *);
198:	static void setup_balloon_gfn(unsigned long, void *);
84:	static void setup_hparams(unsigned long, void *);
175:	static void unmap_gfn(unsigned long, void *);
48:	static void xen_for_each_gfn(struct page **, unsigned int, xen_gfn_fn_t, void *);

File fs/aio.c:
2200:	long __ia32_compat_sys_io_getevents(const struct pt_regs *);
2229:	long __ia32_compat_sys_io_pgetevents(const struct pt_regs *);
2264:	long __ia32_compat_sys_io_pgetevents_time64(const struct pt_regs *);
1335:	long __ia32_compat_sys_io_setup(const struct pt_regs *);
1965:	long __ia32_compat_sys_io_submit(const struct pt_regs *);
2015:	long __ia32_sys_io_cancel(const struct pt_regs *);
1373:	long __ia32_sys_io_destroy(const struct pt_regs *);
2102:	long __ia32_sys_io_getevents(const struct pt_regs *);
2127:	long __ia32_sys_io_pgetevents(const struct pt_regs *);
1304:	long __ia32_sys_io_setup(const struct pt_regs *);
1925:	long __ia32_sys_io_submit(const struct pt_regs *);
2015:	long __x64_sys_io_cancel(const struct pt_regs *);
1373:	long __x64_sys_io_destroy(const struct pt_regs *);
2102:	long __x64_sys_io_getevents(const struct pt_regs *);
2127:	long __x64_sys_io_pgetevents(const struct pt_regs *);
1304:	long __x64_sys_io_setup(const struct pt_regs *);
1925:	long __x64_sys_io_submit(const struct pt_regs *);
857:	void exit_aio(struct mm_struct *);
558:	void kiocb_set_cancel_fn(struct kiocb *, kiocb_cancel_fn *);
916:	static bool __get_reqs_available(struct kioctx *);
1413:	static void aio_complete_rw(struct kiocb *, long, long);
298:	static void aio_free_ring(struct kioctx *);
1592:	static int aio_fsync(struct fsync_iocb *, const struct iocb *, bool);
1581:	static void aio_fsync_work(struct work_struct *);
373:	static int aio_migratepage(struct address_space *, struct page *, struct page *, enum migrate_mode);
247:	static struct dentry *aio_mount(struct file_system_type *, int, const char *, void *);
685:	static void aio_nr_sub(unsigned int);
1653:	static int aio_poll_cancel(struct kiocb *);
1620:	static void aio_poll_complete_work(struct work_struct *);
1612:	static void aio_poll_put_work(struct work_struct *);
1717:	static void aio_poll_queue_proc(struct file *, struct wait_queue_head *, struct poll_table_struct *);
1669:	static int aio_poll_wake(struct wait_queue_entry *, unsigned int, int, void *);
1437:	static int aio_prep_rw(struct kiocb *, const struct iocb *);
1512:	static ssize_t aio_read(struct kiocb *, const struct iocb *, bool, bool);
1245:	static bool aio_read_events(struct kioctx *, long, long, struct io_event *, long *);
361:	static int aio_ring_mmap(struct file *, struct vm_area_struct *);
324:	static int aio_ring_mremap(struct vm_area_struct *);
262:	static int aio_setup(void);
1472:	static ssize_t aio_setup_rw(int, const struct iocb *, struct iovec **, bool, bool, struct iov_iter *);
1540:	static ssize_t aio_write(struct kiocb *, const struct iocb *, bool, bool);
2058:	static long do_io_getevents(aio_context_t, long, long, struct io_event *, struct timespec64 *);
579:	static void free_ioctx(struct work_struct *);
592:	static void free_ioctx_reqs(struct percpu_ref *);
610:	static void free_ioctx_users(struct percpu_ref *);
1902:	static int io_submit_one(struct kioctx *, struct iocb *, bool);
698:	static struct kioctx *ioctx_alloc(unsigned int);
813:	static int kill_ioctx(struct mm_struct *, struct kioctx *, struct ctx_rq_wait *);
1039:	static struct kioctx *lookup_ioctx(unsigned long);
279:	static void put_aio_ring_file(struct kioctx *);
899:	static void put_reqs_available(struct kioctx *, unsigned int);
1262:	static long read_events(struct kioctx *, long, long, struct io_event *, ktime_t);
953:	static void refill_reqs_available(struct kioctx *, unsigned int, unsigned int);

File fs/anon_inodes.c:
121:	int anon_inode_getfd(const char *, const struct file_operations *, void *, int);
70:	struct file *anon_inode_getfile(const char *, const struct file_operations *, void *, int);
147:	static int anon_inode_init(void);
31:	static char *anon_inodefs_dname(struct dentry *, char *, int);
41:	static struct dentry *anon_inodefs_mount(struct file_system_type *, int, const char *, void *);

File fs/attr.c:
135:	int inode_newsize_ok(const struct inode *, loff_t);
226:	int notify_change(struct dentry *, struct iattr *, struct inode **);
178:	void setattr_copy(struct inode *, const struct iattr *);
61:	int setattr_prepare(struct dentry *, struct iattr *);

File fs/autofs/dev-ioctl.c:
749:	void autofs_dev_ioctl_exit(void);
736:	int autofs_dev_ioctl_init(void);
607:	static int _autofs_dev_ioctl(unsigned int, struct autofs_dev_ioctl *);
699:	static long autofs_dev_ioctl(struct file *, unsigned int, unsigned long);
490:	static int autofs_dev_ioctl_askumount(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
408:	static int autofs_dev_ioctl_catatonic(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
306:	static int autofs_dev_ioctl_closemount(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
709:	static long autofs_dev_ioctl_compat(struct file *, unsigned int, unsigned long);
476:	static int autofs_dev_ioctl_expire(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
331:	static int autofs_dev_ioctl_fail(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
521:	static int autofs_dev_ioctl_ismountpoint(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
275:	static int autofs_dev_ioctl_openmount(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
191:	static int autofs_dev_ioctl_protosubver(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
182:	static int autofs_dev_ioctl_protover(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
317:	static int autofs_dev_ioctl_ready(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
437:	static int autofs_dev_ioctl_requester(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
355:	static int autofs_dev_ioctl_setpipefd(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
417:	static int autofs_dev_ioctl_timeout(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
171:	static int autofs_dev_ioctl_version(struct file *, struct autofs_sb_info *, struct autofs_dev_ioctl *);
200:	static int find_autofs_mount(const char *, struct path *, int (*)(const struct path *, void *), void *);
228:	static int test_by_dev(const struct path *, void *);
233:	static int test_by_type(const struct path *, void *);

File fs/autofs/expire.c:
617:	int autofs_do_expire_multi(struct super_block *, struct vfsmount *, struct autofs_sb_info *, unsigned int);
653:	int autofs_expire_multi(struct super_block *, struct vfsmount *, struct autofs_sb_info *, int *);
578:	int autofs_expire_run(struct super_block *, struct vfsmount *, struct autofs_sb_info *, struct autofs_packet_expire *);
531:	int autofs_expire_wait(const struct path *, int);
192:	static int autofs_direct_busy(struct vfsmount *, struct dentry *, unsigned long, unsigned int);
462:	static struct dentry *autofs_expire_indirect(struct vfsmount *, struct autofs_sb_info *, unsigned int, struct super_block *);
32:	static int autofs_mount_busy(struct vfsmount *, struct dentry *, unsigned int);
126:	static struct dentry *get_next_positive_dentry(struct dentry *, struct dentry *);
363:	static struct dentry *should_expire(struct dentry *, struct vfsmount *, unsigned long, unsigned int);

File fs/autofs/init.c:
13:	static struct dentry *autofs_mount(struct file_system_type *, int, const char *, void *);
41:	static void exit_autofs_fs(void);
28:	static int init_autofs_fs(void);

File fs/autofs/inode.c:
30:	void autofs_clean_ino(struct autofs_info *);
204:	int autofs_fill_super(struct super_block *, void *, int);
37:	void autofs_free_ino(struct autofs_info *);
347:	struct inode *autofs_get_inode(struct super_block *, umode_t);
42:	void autofs_kill_sb(struct super_block *);
16:	struct autofs_info *autofs_new_ino(struct autofs_sb_info *);
99:	static void autofs_evict_inode(struct inode *);
64:	static int autofs_show_options(struct seq_file *, struct dentry *);

File fs/autofs/root.c:
878:	int is_autofs_dentry(struct dentry *);
332:	static struct vfsmount *autofs_d_automount(struct path *);
420:	static int autofs_d_manage(const struct path *, bool);
83:	static void autofs_del_active(struct dentry *);
130:	static void autofs_dentry_release(struct dentry *);
747:	static int autofs_dir_mkdir(struct inode *, struct dentry *, umode_t);
100:	static int autofs_dir_open(struct inode *, struct file *);
702:	static int autofs_dir_rmdir(struct inode *, struct dentry *);
546:	static int autofs_dir_symlink(struct inode *, struct dentry *, const char *);
616:	static int autofs_dir_unlink(struct inode *, struct dentry *);
497:	static struct dentry *autofs_lookup(struct inode *, struct dentry *, unsigned int);
266:	static int autofs_mount_wait(const struct path *, bool);
949:	static long autofs_root_compat_ioctl(struct file *, unsigned int, unsigned long);
940:	static long autofs_root_ioctl(struct file *, unsigned int, unsigned long);
889:	static int autofs_root_ioctl_unlocked(unsigned int, unsigned long, struct file *, struct inode *);
283:	static int do_expire_wait(const struct path *, bool);

File fs/autofs/symlink.c:
11:	static const char *autofs_get_link(struct dentry *, struct inode *, struct delayed_call *);

File fs/autofs/waitq.c:
18:	void autofs_catatonic_mode(struct autofs_sb_info *);
350:	int autofs_wait(struct autofs_sb_info *, const struct path *, enum autofs_notify);
529:	int autofs_wait_release(struct autofs_sb_info *, autofs_wqt_t, int);
227:	static struct autofs_wait_queue *autofs_find_wait(const struct qstr *, struct autofs_sb_info *);
81:	static void autofs_notify_daemon(struct autofs_sb_info *, struct autofs_wait_queue *, int);

File fs/bad_inode.c:
237:	void iget_failed(struct inode *);
224:	bool is_bad_inode(struct inode *);
198:	void make_bad_inode(struct inode *);
19:	static int bad_file_open(struct inode *, struct file *);
135:	static int bad_inode_atomic_open(struct inode *, struct dentry *, struct file *, unsigned int, umode_t);
29:	static int bad_inode_create(struct inode *, struct dentry *, umode_t, bool);
122:	static int bad_inode_fiemap(struct inode *, struct fiemap_extent_info *, u64, u64);
117:	static struct posix_acl *bad_inode_get_acl(struct inode *, int);
110:	static const char *bad_inode_get_link(struct dentry *, struct inode *, struct delayed_call *);
93:	static int bad_inode_getattr(const struct path *, struct kstat *, u32, unsigned int);
41:	static int bad_inode_link(struct dentry *, struct inode *, struct dentry *);
104:	static ssize_t bad_inode_listxattr(struct dentry *, char *, size_t);
35:	static struct dentry *bad_inode_lookup(struct inode *, struct dentry *, unsigned int);
58:	static int bad_inode_mkdir(struct inode *, struct dentry *, umode_t);
69:	static int bad_inode_mknod(struct inode *, struct dentry *, umode_t, dev_t);
88:	static int bad_inode_permission(struct inode *, int);
82:	static int bad_inode_readlink(struct dentry *, char *, int);
75:	static int bad_inode_rename2(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int);

File fs/binfmt_elf.c:
166:	static int create_elf_tables(struct linux_binprm *, struct elf64_hdr *, unsigned long, unsigned long);
2249:	static int elf_core_dump(struct coredump_params *);
350:	static unsigned long elf_map(struct file *, unsigned long, struct elf64_phdr *, int, int, unsigned long);
2457:	static void exit_compat_elf_binfmt(void);
2457:	static void exit_elf_binfmt(void);
1820:	static int fill_note_info(struct elf64_hdr *, int, struct elf_note_info *, const siginfo_t *, struct pt_regs *);
2451:	static int init_compat_elf_binfmt(void);
2451:	static int init_elf_binfmt(void);
711:	static int load_elf_binary(struct linux_binprm *);
438:	static struct elf64_phdr *load_elf_phdrs(struct elf64_hdr *, struct file *);
1459:	static int notesize(struct memelfnote *, struct memelfnote *);
104:	static int set_brk(unsigned long, unsigned long, int);
391:	static unsigned long total_mapping_size(struct elf64_phdr *, int);
1470:	static int writenote(struct memelfnote *, struct coredump_params *);

File fs/binfmt_script.c:
162:	static void exit_script_binfmt(void);
156:	static int init_script_binfmt(void);
33:	static int load_script(struct linux_binprm *);

File fs/block_dev.c:
52:	struct block_device *I_BDEV(struct inode *);
2249:	int __invalidate_device(struct block_device *, bool);
478:	int __sync_blockdev(struct block_device *, int);
1117:	void bd_abort_claiming(struct block_device *, struct block_device *, void *);
1009:	void bd_forget(struct inode *);
1298:	int bd_link_disk_holder(struct block_device *, struct gendisk *);
1490:	void bd_set_size(struct block_device *, loff_t);
1363:	void bd_unlink_disk_holder(struct block_device *, struct gendisk *);
845:	void bdev_cache_init(void);
692:	int bdev_read_page(struct block_device *, sector_t, struct page *);
890:	void bdev_unhash_inode(dev_t);
730:	int bdev_write_page(struct block_device *, sector_t, struct page *, struct writeback_control *);
901:	struct block_device *bdget(dev_t);
940:	struct block_device *bdgrab(struct block_device *);
959:	void bdput(struct block_device *);
653:	int blkdev_fsync(struct file *, loff_t, loff_t, int);
1695:	int blkdev_get(struct block_device *, fmode_t, void *);
1854:	struct block_device *blkdev_get_by_dev(dev_t, fmode_t, void *);
1809:	struct block_device *blkdev_get_by_path(const char *, fmode_t, void *);
1950:	void blkdev_put(struct block_device *, fmode_t);
2070:	ssize_t blkdev_read_iter(struct kiocb *, struct iov_iter *);
2029:	ssize_t blkdev_write_iter(struct kiocb *, struct iov_iter *);
1471:	int check_disk_change(struct block_device *);
1415:	void check_disk_size_change(struct gendisk *, struct block_device *, bool);
526:	struct super_block *freeze_bdev(struct block_device *);
502:	int fsync_bdev(struct block_device *);
92:	void invalidate_bdev(struct block_device *);
2195:	int ioctl_by_bdev(struct block_device *, unsigned int, unsigned long);
2270:	void iterate_bdevs(void (*)(struct block_device *, void *), void *);
79:	void kill_bdev(struct block_device *);
2215:	struct block_device *lookup_bdev(const char *);
947:	long nr_blockdev_pages(void);
1442:	int revalidate_disk(struct gendisk *);
157:	int sb_min_blocksize(struct super_block *, int);
144:	int sb_set_blocksize(struct super_block *, int);
122:	int set_blocksize(struct block_device *, int);
491:	int sync_blockdev(struct block_device *);
573:	int thaw_bdev(struct block_device *, struct super_block *);
1130:	int truncate_bdev_range(struct block_device *, fmode_t, loff_t, loff_t);
208:	static ssize_t __blkdev_direct_IO_simple(struct kiocb *, struct iov_iter *, int);
1529:	static int __blkdev_get(struct block_device *, fmode_t, int);
1902:	static void __blkdev_put(struct block_device *, fmode_t, int);
966:	static struct block_device *bd_acquire(struct inode *);
1038:	static bool bd_may_claim(struct block_device *, struct block_device *, void *);
826:	static struct dentry *bd_mount(struct file_system_type *, int, const char *, void *);
1069:	static int bd_prepare_to_claim(struct block_device *, struct block_device *, void *);
763:	static struct inode *bdev_alloc_inode(struct super_block *);
779:	static void bdev_destroy_inode(struct inode *);
1500:	static void bdev_disk_changed(struct block_device *, bool);
801:	static void bdev_evict_inode(struct inode *);
771:	static void bdev_i_callback(struct callback_head *);
878:	static int bdev_set(struct inode *, void *);
873:	static int bdev_test(struct inode *, void *);
306:	static void blkdev_bio_end_io(struct bio *);
194:	static void blkdev_bio_end_io_simple(struct bio *);
1998:	static int blkdev_close(struct inode *, struct file *);
459:	static ssize_t blkdev_direct_IO(struct kiocb *, struct iov_iter *);
2115:	static long blkdev_fallocate(struct file *, int, loff_t, loff_t);
168:	static int blkdev_get_block(struct inode *, sector_t, struct buffer_head *, int);
472:	static int blkdev_init(void);
1871:	static int blkdev_open(struct inode *, struct file *);
605:	static int blkdev_readpage(struct file *, struct page *);
610:	static int blkdev_readpages(struct file *, struct address_space *, struct list_head *, unsigned int);
616:	static int blkdev_write_begin(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page **, void **);
624:	static int blkdev_write_end(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *);
600:	static int blkdev_writepage(struct page *, struct writeback_control *);
2094:	static int blkdev_writepages(struct address_space *, struct writeback_control *);
2005:	static long block_ioctl(struct file *, unsigned int, unsigned long);
642:	static loff_t block_llseek(struct file *, loff_t, int);
1395:	static void flush_disk(struct block_device *, bool);
784:	static void init_once(void *);
108:	static void set_init_blocksize(struct block_device *);

File fs/buffer.c:
1152:	void __bforget(struct buffer_head *);
2025:	int __block_write_begin(struct page *, loff_t, unsigned int, get_block_t *);
1940:	int __block_write_begin_int(struct page *, loff_t, unsigned int, get_block_t *, struct iomap *);
1679:	int __block_write_full_page(struct inode *, struct page *, get_block_t *, struct writeback_control *, bh_end_io_t *);
1363:	struct buffer_head *__bread_gfp(struct block_device *, sector_t, unsigned int, gfp_t);
1329:	void __breadahead(struct block_device *, sector_t, unsigned int);
1339:	void __breadahead_gfp(struct block_device *, sector_t, unsigned int, gfp_t);
1138:	void __brelse(struct buffer_head *);
1289:	struct buffer_head *__find_get_block(struct block_device *, sector_t, unsigned int);
2100:	void __generic_write_end(struct inode *, loff_t, unsigned int, struct page *);
1314:	struct buffer_head *__getblk_gfp(struct block_device *, sector_t, unsigned int, gfp_t);
3318:	long __ia32_sys_bdflush(const struct pt_regs *);
63:	void __lock_buffer(struct buffer_head *);
574:	void __set_page_dirty(struct page *, struct address_space *, int);
615:	int __set_page_dirty_buffers(struct page *);
3174:	int __sync_dirty_buffer(struct buffer_head *, int);
116:	void __wait_on_buffer(struct buffer_head *);
3318:	long __x64_sys_bdflush(const struct pt_regs *);
3371:	struct buffer_head *alloc_buffer_head(gfp_t);
813:	struct buffer_head *alloc_page_buffers(struct page *, unsigned long, bool);
3435:	int bh_submit_read(struct buffer_head *);
3417:	int bh_uptodate_or_lock(struct buffer_head *);
2445:	int block_commit_write(struct page *, unsigned int, unsigned int);
1468:	void block_invalidatepage(struct page *, unsigned int, unsigned int);
2186:	int block_is_partially_uptodate(struct page *, unsigned long, unsigned long);
2471:	int block_page_mkwrite(struct vm_area_struct *, struct vm_fault *, get_block_t *);
2231:	int block_read_full_page(struct page *, get_block_t *);
2845:	int block_truncate_page(struct address_space *, loff_t, get_block_t *);
2077:	int block_write_begin(struct address_space *, loff_t, unsigned int, unsigned int, struct page **, get_block_t *);
2132:	int block_write_end(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *);
2924:	int block_write_full_page(struct page *, get_block_t *, struct writeback_control *);
82:	void buffer_check_dirty_writeback(struct page *, bool *, bool *);
3454:	void buffer_init(void);
1573:	void clean_bdev_aliases(struct block_device *, sector_t, sector_t);
2421:	int cont_write_begin(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page **, void **, get_block_t *, loff_t *);
1523:	void create_empty_buffers(struct page *, unsigned long, unsigned long);
498:	void emergency_thaw_bdev(struct super_block *);
313:	void end_buffer_async_write(struct buffer_head *, int);
161:	void end_buffer_read_sync(struct buffer_head *, int);
168:	void end_buffer_write_sync(struct buffer_head *, int);
3385:	void free_buffer_head(struct buffer_head *);
2957:	sector_t generic_block_bmap(struct address_space *, sector_t, get_block_t *);
2321:	int generic_cont_expand_simple(struct inode *, loff_t);
2168:	int generic_write_end(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *);
2993:	void guard_bio_eod(int, struct bio *);
458:	int inode_has_buffers(struct inode *);
1404:	void invalidate_bh_lrus(void);
760:	void invalidate_inode_buffers(struct inode *);
3127:	void ll_rw_block(int, int, int, struct buffer_head **);
392:	void mark_buffer_async_write(struct buffer_head *);
1085:	void mark_buffer_dirty(struct buffer_head *);
544:	void mark_buffer_dirty_inode(struct buffer_head *, struct inode *);
1120:	void mark_buffer_write_io_error(struct buffer_head *);
2767:	int nobh_truncate_page(struct address_space *, loff_t, get_block_t *);
2549:	int nobh_write_begin(struct address_space *, loff_t, unsigned int, unsigned int, struct page **, void **, get_block_t *);
2690:	int nobh_write_end(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *);
2730:	int nobh_writepage(struct page *, get_block_t *, struct writeback_control *);
1848:	void page_zero_new_buffers(struct page *, unsigned int, unsigned int);
781:	int remove_inode_buffers(struct inode *);
1410:	void set_bh_page(unsigned long, struct page *, struct buffer_head *);
3095:	int submit_bh(int, int, struct buffer_head *);
3203:	int sync_dirty_buffer(struct buffer_head *);
515:	int sync_mapping_buffers(struct address_space *);
56:	void touch_buffer(struct buffer_head *);
3262:	int try_to_free_buffers(struct page *);
69:	void unlock_buffer(struct buffer_head *);
533:	void write_boundary_block(struct block_device *, sector_t, unsigned int);
3156:	void write_dirty_buffer(struct buffer_head *, int);
2032:	static int __block_commit_write(struct page *, unsigned int, unsigned int, struct inode *);
146:	static void __end_buffer_read_notouch(struct buffer_head *, int);
451:	static void __remove_assoc_queue(struct buffer_head *);
2525:	static void attach_nobh_buffers(struct page *, struct buffer_head *);
3396:	static int buffer_exit_cpu_dead(unsigned int);
130:	static void buffer_io_error(struct buffer_head *, char *);
1640:	static struct buffer_head *create_page_buffers(struct page *, struct inode *, unsigned int);
3236:	static int drop_buffers(struct page *, struct buffer_head **);
2970:	static void end_bio_bh_io_sync(struct bio *);
252:	static void end_buffer_async_read(struct buffer_head *, int);
2515:	static void end_buffer_read_nobh(struct buffer_head *, int);
1391:	static bool has_bh_in_lru(int, void *);
893:	static sector_t init_page_buffers(struct page *, struct block_device *, sector_t, int);
1379:	static void invalidate_bh_lru(void *);
385:	static void mark_buffer_async_write_endio(struct buffer_head *, bh_end_io_t *);
3358:	static void recalc_bh_state(void);
3044:	static int submit_bh_wbc(int, int, struct buffer_head *, enum rw_hint, struct writeback_control *);

File fs/char_dev.c:
277:	int __register_chrdev(unsigned int, unsigned int, unsigned int, const char *, const struct file_operations *);
344:	void __unregister_chrdev(unsigned int, unsigned int, unsigned int, const char *);
245:	int alloc_chrdev_region(dev_t *, unsigned int, unsigned int, const char *);
435:	void cd_forget(struct inode *);
488:	int cdev_add(struct cdev *, dev_t, unsigned int);
639:	struct cdev *cdev_alloc(void);
600:	void cdev_del(struct cdev *);
543:	int cdev_device_add(struct cdev *, struct device *);
577:	void cdev_device_del(struct cdev *, struct device *);
657:	void cdev_init(struct cdev *, const struct file_operations *);
370:	void cdev_put(struct cdev *);
514:	void cdev_set_parent(struct cdev *, struct kobject *);
673:	void chrdev_init(void);
51:	void chrdev_show(struct seq_file *, off_t);
209:	int register_chrdev_region(dev_t, unsigned int, const char *);
320:	void unregister_chrdev_region(dev_t, unsigned int);
100:	static struct char_device_struct *__register_chrdev_region(unsigned int, unsigned int, int, const char *);
181:	static struct char_device_struct *__unregister_chrdev_region(unsigned int, unsigned int, int);
665:	static struct kobject *base_probe(dev_t, int *, void *);
607:	static void cdev_default_release(struct kobject *);
616:	static void cdev_dynamic_release(struct kobject *);
357:	static struct kobject *cdev_get(struct cdev *);
444:	static void cdev_purge(struct cdev *);
382:	static int chrdev_open(struct inode *, struct file *);
472:	static int exact_lock(dev_t, void *);
466:	static struct kobject *exact_match(dev_t, int *, void *);

File fs/compat.c:
92:	long __ia32_compat_sys_mount(const struct pt_regs *);

File fs/compat_ioctl.c:
1364:	long __ia32_compat_sys_ioctl(const struct pt_regs *);
125:	static int do_ioctl(struct file *, unsigned int, unsigned long);
1273:	static long do_ioctl_trans(unsigned int, unsigned long, struct file *);
1460:	static int init_sys32_ioctl(void);
1448:	static int init_sys32_ioctl_cmp(const void *, const void *);

File fs/configfs/dir.c:
378:	int configfs_create_link(struct configfs_symlink *, struct dentry *, struct dentry *);
1142:	int configfs_depend_item(struct configfs_subsystem *, struct config_item *);
1224:	int configfs_depend_item_unlocked(struct configfs_subsystem *, struct config_item *);
367:	int configfs_dirent_is_ready(struct configfs_dirent *);
251:	int configfs_make_dirent(struct configfs_dirent *, struct dentry *, void *, umode_t, int, struct configfs_fragment *);
1884:	struct config_group *configfs_register_default_group(struct config_group *, const char *, const struct config_item_type *);
1796:	int configfs_register_group(struct config_group *, struct config_group *);
1916:	int configfs_register_subsystem(struct configfs_subsystem *);
743:	void configfs_remove_default_groups(struct config_group *);
1192:	void configfs_undepend_item(struct config_item *);
1909:	void configfs_unregister_default_group(struct config_group *);
1841:	void configfs_unregister_group(struct config_group *);
1972:	void configfs_unregister_subsystem(struct configfs_subsystem *);
186:	struct configfs_fragment *get_fragment(struct configfs_fragment *);
180:	void put_fragment(struct configfs_fragment *);
935:	static void client_disconnect_notify(struct config_item *, struct config_item *);
954:	static void client_drop_item(struct config_item *, struct config_item *);
880:	static int configfs_attach_group(struct config_item *, struct dentry *, struct configfs_fragment *, struct config_item *);
845:	static int configfs_attach_item(struct config_item *, struct dentry *, struct config_item *, struct configfs_fragment *);
304:	static int configfs_create_dir(struct config_item *, struct dentry *, struct configfs_fragment *);
53:	static void configfs_d_iput(struct dentry *, struct inode *);
1068:	static int configfs_depend_prep(struct dentry *, struct config_item *);
920:	static void configfs_detach_group(struct config_item *);
526:	static int configfs_detach_prep(struct dentry **, struct dentry *);
573:	static void configfs_detach_rollback(struct dentry *);
1656:	static int configfs_dir_close(struct inode *, struct file *);
1739:	static loff_t configfs_dir_lseek(struct file *, loff_t, int);
1632:	static int configfs_dir_open(struct inode *, struct file *);
347:	static void configfs_dir_set_ready(struct configfs_dirent *);
1098:	static int configfs_do_depend_item(struct dentry *, struct config_item *);
284:	static void configfs_init_bin_file(struct inode *);
278:	static void configfs_init_file(struct inode *);
469:	static struct dentry *configfs_lookup(struct inode *, struct dentry *, unsigned int);
1288:	static int configfs_mkdir(struct inode *, struct dentry *, umode_t);
196:	static struct configfs_dirent *configfs_new_dirent(struct configfs_dirent *, void *, int, struct configfs_fragment *);
1678:	static int configfs_readdir(struct file *, struct dir_context *);
432:	static void configfs_remove_dir(struct config_item *);
1471:	static int configfs_rmdir(struct inode *, struct dentry *);
694:	static int create_default_group(struct config_group *, struct configfs_fragment *, struct config_group *);
585:	static void detach_attrs(struct config_item *);
650:	static void detach_groups(struct config_group *);
269:	static void init_dir(struct inode *);
290:	static void init_symlink(struct inode *);
811:	static void link_group(struct config_group *, struct config_group *);
778:	static void link_obj(struct config_item *, struct config_item *);
167:	static struct configfs_fragment *new_fragment(void);
800:	static void unlink_group(struct config_group *);
759:	static void unlink_obj(struct config_item *);

File fs/configfs/file.c:
554:	int configfs_create_bin_file(struct config_item *, const struct configfs_bin_attribute *);
533:	int configfs_create_file(struct config_item *, const struct configfs_attribute *);
370:	static int __configfs_open_file(struct file *, int, struct inode *);
476:	static int configfs_open_bin_file(struct inode *, struct file *);
471:	static int configfs_open_file(struct inode *, struct file *);
157:	static ssize_t configfs_read_bin_file(struct file *, char *, size_t, loff_t *);
116:	static ssize_t configfs_read_file(struct file *, char *, size_t, loff_t *);
459:	static int configfs_release(struct inode *, struct file *);
481:	static int configfs_release_bin_file(struct inode *, struct file *);
318:	static ssize_t configfs_write_bin_file(struct file *, const char *, size_t, loff_t *);
289:	static ssize_t configfs_write_file(struct file *, const char *, size_t, loff_t *);

File fs/configfs/inode.c:
181:	int configfs_create(struct dentry *, umode_t, void (*)(struct inode *));
243:	void configfs_drop_dentry(struct configfs_dirent *, struct dentry *);
221:	const unsigned char *configfs_get_name(struct configfs_dirent *);
259:	void configfs_hash_and_remove(struct dentry *, const char *);
129:	struct inode *configfs_new_inode(umode_t, struct configfs_dirent *, struct super_block *);
57:	int configfs_setattr(struct dentry *, struct iattr *);

File fs/configfs/item.c:
190:	struct config_item *config_group_find_item(struct config_group *, const char *);
173:	void config_group_init(struct config_group *);
108:	void config_group_init_type_name(struct config_group *, const char *, const struct config_item_type *);
117:	struct config_item *config_item_get(struct config_item *);
125:	struct config_item *config_item_get_unless_zero(struct config_item *);
98:	void config_item_init_type_name(struct config_item *, const char *, const struct config_item_type *);
162:	void config_item_put(struct config_item *);
65:	int config_item_set_name(struct config_item *, const char *, ...);
151:	static void config_item_release(struct kref *);

File fs/configfs/mount.c:
56:	int configfs_is_root(struct config_item *);
119:	struct dentry *configfs_pin_fs(void);
126:	void configfs_release_fs(void);
105:	static struct dentry *configfs_do_mount(struct file_system_type *, int, const char *, void *);
161:	static void configfs_exit(void);
69:	static int configfs_fill_super(struct super_block *, void *, int);
132:	static int configfs_init(void);

File fs/configfs/symlink.c:
134:	int configfs_symlink(struct inode *, struct dentry *, const char *);
215:	int configfs_unlink(struct inode *, struct dentry *);
312:	static const char *configfs_get_link(struct dentry *, struct inode *, struct delayed_call *);

File fs/coredump.c:
539:	void do_coredump(const siginfo_t *);
834:	int dump_align(struct coredump_params *, int);
791:	int dump_emit(struct coredump_params *, const void *, int);
813:	int dump_skip(struct coredump_params *, size_t);
848:	void dump_truncate(struct coredump_params *);
118:	static int cn_esc_printf(struct core_name *, const char *, ...);
105:	static int cn_printf(struct core_name *, const char *, ...);
81:	static int cn_vprintf(struct core_name *, const char *, struct __va_list_tag *);
66:	static int expand_corename(struct core_name *, int);
521:	static int umh_pipe_setup(struct subprocess_info *, struct cred *);
312:	static int zap_process(struct task_struct *, int, int);

File fs/d_path.c:
174:	char *__d_path(const struct path *, const struct path *, char *, int);
424:	long __ia32_sys_getcwd(const struct pt_regs *);
424:	long __x64_sys_getcwd(const struct pt_regs *);
191:	char *d_absolute_path(const struct path *, char *, int);
256:	char *d_path(const struct path *, char *, int);
375:	char *dentry_path(struct dentry *, char *, int);
369:	char *dentry_path_raw(struct dentry *, char *, int);
291:	char *dynamic_dname(struct dentry *, char *, int, const char *, ...);
309:	char *simple_dname(struct dentry *, char *, int);
324:	static char *__dentry_path(struct dentry *, char *, int);
11:	static int prepend(char **, int *, const char *, int);
38:	static int prepend_name(char **, int *, const struct qstr *);
75:	static int prepend_path(const struct path *, const struct path *, char **, int *);

File fs/dax.c:
1151:	int __dax_zero_page_range(struct block_device *, struct dax_device *, sector_t, unsigned int, unsigned int);
743:	int dax_delete_mapping_entry(struct address_space *, unsigned long);
1795:	vm_fault_t dax_finish_sync_fault(struct vm_fault *, enum page_entry_size, pfn_t);
761:	int dax_invalidate_mapping_entry_sync(struct address_space *, unsigned long);
1720:	vm_fault_t dax_iomap_fault(struct vm_fault *, enum page_entry_size, pfn_t *, int *, const struct iomap_ops *);
1286:	ssize_t dax_iomap_rw(struct kiocb *, struct iov_iter *, const struct iomap_ops *);
629:	struct page *dax_layout_busy_page(struct address_space *);
406:	bool dax_lock_mapping_entry(struct page *);
462:	void dax_unlock_mapping_entry(struct page *);
1020:	int dax_writeback_mapping_range(struct address_space *, struct block_device *, struct writeback_control *);
715:	static int __dax_invalidate_mapping_entry(struct address_space *, unsigned long, bool);
375:	static void dax_disassociate_entry(void *, struct address_space *, bool);
800:	static void *dax_insert_mapping_entry(struct address_space *, struct vm_fault *, void *, pfn_t, unsigned long, bool);
1184:	static loff_t dax_iomap_actor(struct inode *, loff_t, loff_t, void *, struct iomap *);
1084:	static int dax_iomap_pfn(struct iomap *, loff_t, size_t, pfn_t *);
165:	static void dax_wake_mapping_entry_waiter(struct address_space *, unsigned long, void *, bool);
232:	static void *get_unlocked_mapping_entry(struct address_space *, unsigned long, void ***);
499:	static void *grab_mapping_entry(struct address_space *, unsigned long, unsigned long);
51:	static int init_dax_wait_table(void);
290:	static void unlock_mapping_entry(struct address_space *, unsigned long);
147:	static int wake_exceptional_entry_func(wait_queue_entry_t *, unsigned int, int, void *);

File fs/dcache.c:
1646:	struct dentry *__d_alloc(struct super_block *, const struct qstr *);
492:	void __d_drop(struct dentry *);
2325:	struct dentry *__d_lookup(const struct dentry *, const struct qstr *);
2612:	void __d_lookup_done(struct dentry *);
2200:	struct dentry *__d_lookup_rcu(const struct dentry *, const struct qstr *, unsigned int *);
2664:	void d_add(struct dentry *, struct inode *);
2119:	struct dentry *d_add_ci(struct dentry *, struct inode *, struct qstr *);
1748:	struct dentry *d_alloc(struct dentry *, const struct qstr *);
1773:	struct dentry *d_alloc_anon(struct super_block *);
1779:	struct dentry *d_alloc_cursor(struct dentry *);
1816:	struct dentry *d_alloc_name(struct dentry *, const char *);
2502:	struct dentry *d_alloc_parallel(struct dentry *, const struct qstr *, wait_queue_head_t *);
1807:	struct dentry *d_alloc_pseudo(struct super_block *, const struct qstr *);
2915:	struct dentry *d_ancestor(struct dentry *, struct dentry *);
2426:	void d_delete(struct dentry *);
502:	void d_drop(struct dentry *);
2685:	struct dentry *d_exact_alias(struct dentry *, struct inode *);
2893:	void d_exchange(struct dentry *, struct dentry *);
1008:	struct dentry *d_find_alias(struct inode *);
964:	struct dentry *d_find_any_alias(struct inode *);
3096:	void d_genocide(struct dentry *);
2388:	struct dentry *d_hash_and_lookup(struct dentry *, struct qstr *);
1936:	void d_instantiate(struct dentry *, struct inode *);
2025:	struct dentry *d_instantiate_anon(struct dentry *, struct inode *);
1954:	void d_instantiate_new(struct dentry *, struct inode *);
1605:	void d_invalidate(struct dentry *);
2295:	struct dentry *d_lookup(const struct dentry *, const struct qstr *);
1970:	struct dentry *d_make_root(struct inode *);
2880:	void d_move(struct dentry *, struct dentry *);
2076:	struct dentry *d_obtain_alias(struct inode *);
2097:	struct dentry *d_obtain_root(struct inode *);
1025:	void d_prune_aliases(struct inode *);
2464:	void d_rehash(struct dentry *);
1826:	void d_set_d_op(struct dentry *, const struct dentry_operations *);
1864:	void d_set_fallthru(struct dentry *);
1433:	int d_set_mounted(struct dentry *);
2987:	struct dentry *d_splice_alias(struct inode *, struct dentry *);
3103:	void d_tmpfile(struct dentry *, struct inode *);
904:	struct dentry *dget_parent(struct dentry *);
868:	void dput(struct dentry *);
3054:	bool is_subdir(struct dentry *, struct dentry *);
1413:	int path_has_submounts(const struct path *);
155:	int proc_nr_dentry(struct ctl_table *, int, void *, size_t *, loff_t *);
1207:	long prune_dcache_sb(struct super_block *, struct shrink_control *);
303:	void release_dentry_name_snapshot(struct name_snapshot *);
1574:	void shrink_dcache_for_umount(struct super_block *);
1517:	void shrink_dcache_parent(struct dentry *);
1246:	void shrink_dcache_sb(struct super_block *);
286:	void take_dentry_name_snapshot(struct name_snapshot *, struct dentry *);
3193:	void vfs_caches_init(void);
3182:	void vfs_caches_init_early(void);
474:	static void ___d_drop(struct dentry *);
253:	static void __d_free(struct callback_head *);
272:	static void __d_free_external(struct callback_head *);
260:	static void __d_free_external_name(struct callback_head *);
1907:	static void __d_instantiate(struct dentry *, struct inode *);
1985:	static struct dentry *__d_instantiate_anon(struct dentry *, struct inode *, bool);
2792:	static void __d_move(struct dentry *, struct dentry *, bool);
2031:	static struct dentry *__d_obtain_alias(struct inode *, bool);
2448:	static void __d_rehash(struct dentry *);
548:	static void __dentry_kill(struct dentry *);
601:	static struct dentry *__lock_parent(struct dentry *);
1872:	static unsigned int d_flags_for_inode(struct inode *);
3081:	static enum d_walk_ret d_genocide_kill(void *, struct dentry *);
411:	static void d_lru_del(struct dentry *);
449:	static void d_lru_shrink_move(struct list_lru_one *, struct dentry *, struct list_head *);
419:	static void d_shrink_del(struct dentry *);
1280:	static void d_walk(struct dentry *, void *, enum d_walk_ret (*)(void *, struct dentry *));
346:	static void dentry_free(struct dentry *);
692:	static struct dentry *dentry_kill(struct dentry *);
1137:	static enum lru_status dentry_lru_isolate(struct list_head *, struct list_lru_one *, spinlock_t *, void *);
1218:	static enum lru_status dentry_lru_isolate_shrink(struct list_head *, struct list_lru_one *, spinlock_t *, void *);
368:	static void dentry_unlink_inode(struct dentry *);
1563:	static void do_one_tree(struct dentry *);
1590:	static enum d_walk_ret find_submount(void *, struct dentry *);
1391:	static enum d_walk_ret path_check_mount(void *, struct dentry *);
1482:	static enum d_walk_ret select_collect(void *, struct dentry *);
3120:	static int set_dhash_entries(char *);
1100:	static void shrink_dentry_list(struct list_head *);
1540:	static enum d_walk_ret umount_check(void *, struct dentry *);

File fs/dcookies.c:
212:	long __ia32_compat_sys_lookup_dcookie(const struct pt_regs *);
206:	long __ia32_sys_lookup_dcookie(const struct pt_regs *);
206:	long __x64_sys_lookup_dcookie(const struct pt_regs *);
315:	struct dcookie_user *dcookie_register(void);
340:	void dcookie_unregister(struct dcookie_user *);
116:	int get_dcookie(const struct path *, unsigned long *);
149:	static int do_lookup_dcookie(u64, char *, size_t);

File fs/debugfs/file.c:
318:	ssize_t debugfs_attr_read(struct file *, char *, size_t, loff_t *);
333:	ssize_t debugfs_attr_write(struct file *, const char *, size_t, loff_t *);
763:	struct dentry *debugfs_create_atomic_t(const char *, umode_t, struct dentry *, atomic_t *);
914:	struct dentry *debugfs_create_blob(const char *, umode_t, struct dentry *, struct debugfs_blob_wrapper *);
860:	struct dentry *debugfs_create_bool(const char *, umode_t, struct dentry *, bool *);
1152:	struct dentry *debugfs_create_devm_seqfile(struct device *, const char *, struct dentry *, int (*)(struct seq_file *, void *));
1112:	struct dentry *debugfs_create_regset32(const char *, umode_t, struct dentry *, struct debugfs_regset32 *);
726:	struct dentry *debugfs_create_size_t(const char *, umode_t, struct dentry *, size_t *);
450:	struct dentry *debugfs_create_u16(const char *, umode_t, struct dentry *, u16 *);
496:	struct dentry *debugfs_create_u32(const char *, umode_t, struct dentry *, u32 *);
1011:	struct dentry *debugfs_create_u32_array(const char *, umode_t, struct dentry *, u32 *, u32);
543:	struct dentry *debugfs_create_u64(const char *, umode_t, struct dentry *, u64 *);
404:	struct dentry *debugfs_create_u8(const char *, umode_t, struct dentry *, u8 *);
592:	struct dentry *debugfs_create_ulong(const char *, umode_t, struct dentry *, unsigned long *);
656:	struct dentry *debugfs_create_x16(const char *, umode_t, struct dentry *, u16 *);
674:	struct dentry *debugfs_create_x32(const char *, umode_t, struct dentry *, u32 *);
692:	struct dentry *debugfs_create_x64(const char *, umode_t, struct dentry *, u64 *);
638:	struct dentry *debugfs_create_x8(const char *, umode_t, struct dentry *, u8 *);
80:	int debugfs_file_get(struct dentry *);
130:	void debugfs_file_put(struct dentry *);
1051:	void debugfs_print_regs32(struct seq_file *, const struct debugfs_reg32 *, int, void *, char *);
772:	ssize_t debugfs_read_file_bool(struct file *, char *, size_t, loff_t *);
48:	const struct file_operations *debugfs_real_fops(const struct file *);
796:	ssize_t debugfs_write_file_bool(struct file *, const char *, size_t, loff_t *);
740:	static int debugfs_atomic_t_get(void *, u64 *);
735:	static int debugfs_atomic_t_set(void *, u64);
348:	static struct dentry *debugfs_create_mode_unsafe(const char *, umode_t, struct dentry *, void *, const struct file_operations *, const struct file_operations *, const struct file_operations *);
1127:	static int debugfs_devm_entry_open(struct inode *, struct file *);
1075:	static int debugfs_open_regset32(struct inode *, struct file *);
1067:	static int debugfs_show_regset32(struct seq_file *, void *);
417:	static int debugfs_u16_get(void *, u64 *);
412:	static int debugfs_u16_set(void *, u64);
463:	static int debugfs_u32_get(void *, u64 *);
458:	static int debugfs_u32_set(void *, u64);
510:	static int debugfs_u64_get(void *, u64 *);
504:	static int debugfs_u64_set(void *, u64);
371:	static int debugfs_u8_get(void *, u64 *);
366:	static int debugfs_u8_set(void *, u64);
557:	static int debugfs_ulong_get(void *, u64 *);
551:	static int debugfs_ulong_set(void *, u64);
27:	static ssize_t default_read_file(struct file *, char *, size_t, loff_t *);
33:	static ssize_t default_write_file(struct file *, const char *, size_t, loff_t *);
745:	static int fops_atomic_t_open(struct inode *, struct file *);
747:	static int fops_atomic_t_ro_open(struct inode *, struct file *);
749:	static int fops_atomic_t_wo_open(struct inode *, struct file *);
711:	static int fops_size_t_open(struct inode *, struct file *);
713:	static int fops_size_t_ro_open(struct inode *, struct file *);
714:	static int fops_size_t_wo_open(struct inode *, struct file *);
422:	static int fops_u16_open(struct inode *, struct file *);
423:	static int fops_u16_ro_open(struct inode *, struct file *);
424:	static int fops_u16_wo_open(struct inode *, struct file *);
468:	static int fops_u32_open(struct inode *, struct file *);
469:	static int fops_u32_ro_open(struct inode *, struct file *);
470:	static int fops_u32_wo_open(struct inode *, struct file *);
515:	static int fops_u64_open(struct inode *, struct file *);
516:	static int fops_u64_ro_open(struct inode *, struct file *);
517:	static int fops_u64_wo_open(struct inode *, struct file *);
376:	static int fops_u8_open(struct inode *, struct file *);
377:	static int fops_u8_ro_open(struct inode *, struct file *);
378:	static int fops_u8_wo_open(struct inode *, struct file *);
562:	static int fops_ulong_open(struct inode *, struct file *);
564:	static int fops_ulong_ro_open(struct inode *, struct file *);
565:	static int fops_ulong_wo_open(struct inode *, struct file *);
605:	static int fops_x16_open(struct inode *, struct file *);
607:	static int fops_x16_ro_open(struct inode *, struct file *);
608:	static int fops_x16_wo_open(struct inode *, struct file *);
610:	static int fops_x32_open(struct inode *, struct file *);
612:	static int fops_x32_ro_open(struct inode *, struct file *);
613:	static int fops_x32_wo_open(struct inode *, struct file *);
615:	static int fops_x64_open(struct inode *, struct file *);
617:	static int fops_x64_ro_open(struct inode *, struct file *);
618:	static int fops_x64_wo_open(struct inode *, struct file *);
601:	static int fops_x8_open(struct inode *, struct file *);
602:	static int fops_x8_ro_open(struct inode *, struct file *);
603:	static int fops_x8_wo_open(struct inode *, struct file *);
191:	static loff_t full_proxy_llseek(struct file *, loff_t, int);
263:	static int full_proxy_open(struct inode *, struct file *);
209:	static __poll_t full_proxy_poll(struct file *, struct poll_table_struct *);
195:	static ssize_t full_proxy_read(struct file *, char *, size_t, loff_t *);
225:	static int full_proxy_release(struct inode *, struct file *);
205:	static long full_proxy_unlocked_ioctl(struct file *, unsigned int, unsigned long);
200:	static ssize_t full_proxy_write(struct file *, const char *, size_t, loff_t *);
139:	static int open_proxy_open(struct inode *, struct file *);
868:	static ssize_t read_file_blob(struct file *, char *, size_t, loff_t *);
945:	static int u32_array_open(struct inode *, struct file *);
968:	static ssize_t u32_array_read(struct file *, char *, size_t, loff_t *);
977:	static int u32_array_release(struct inode *, struct file *);

File fs/debugfs/inode.c:
547:	struct dentry *debugfs_create_automount(const char *, struct dentry *, debugfs_automount_t, void *);
511:	struct dentry *debugfs_create_dir(const char *, struct dentry *);
402:	struct dentry *debugfs_create_file(const char *, umode_t, struct dentry *, void *, const struct file_operations *);
480:	struct dentry *debugfs_create_file_size(const char *, umode_t, struct dentry *, void *, const struct file_operations *, loff_t);
441:	struct dentry *debugfs_create_file_unsafe(const char *, umode_t, struct dentry *, void *, const struct file_operations *);
598:	struct dentry *debugfs_create_symlink(const char *, struct dentry *, const char *);
748:	bool debugfs_initialized(void);
268:	struct dentry *debugfs_lookup(const char *, struct dentry *);
664:	void debugfs_remove(struct dentry *);
694:	struct dentry *debugfs_rename(struct dentry *, struct dentry *, struct dentry *, const char *);
344:	static struct dentry *__debugfs_create_file(const char *, umode_t, struct dentry *, void *, const struct file_operations *, const struct file_operations *);
207:	static int debug_fill_super(struct super_block *, void *, int);
241:	static struct dentry *debug_mount(struct file_system_type *, int, const char *, void *);
194:	static struct vfsmount *debugfs_automount(struct path *);
174:	static void debugfs_destroy_inode(struct inode *);
35:	static struct inode *debugfs_get_inode(struct super_block *);
166:	static void debugfs_i_callback(struct callback_head *);
754:	static int debugfs_init(void);
70:	static int debugfs_parse_options(char *, struct debugfs_mount_opts *);
186:	static void debugfs_release_dentry(struct dentry *);
133:	static int debugfs_remount(struct super_block *, int *, char *);
149:	static int debugfs_show_options(struct seq_file *, struct dentry *);
330:	static struct dentry *failed_creating(struct dentry *);
644:	static void remove_one(struct dentry *);
289:	static struct dentry *start_creating(const char *, struct dentry *);

File fs/devpts/inode.c:
202:	struct pts_fs_info *devpts_acquire(struct file *);
608:	void *devpts_get_priv(struct dentry *);
550:	void devpts_kill_index(struct pts_fs_info *, int);
171:	struct vfsmount *devpts_mntget(struct file *, struct pts_fs_info *);
533:	int devpts_new_index(struct pts_fs_info *);
621:	void devpts_pty_kill(struct dentry *);
565:	struct dentry *devpts_pty_new(struct pts_fs_info *, int, void *);
234:	void devpts_release(struct pts_fs_info *);
448:	static int devpts_fill_super(struct super_block *, void *, int);
511:	static void devpts_kill_sb(struct super_block *);
505:	static struct dentry *devpts_mount(struct file_system_type *, int, const char *, void *);
134:	static int devpts_ptmx_path(struct path *);
387:	static int devpts_remount(struct super_block *, int *, char *);
406:	static int devpts_show_options(struct seq_file *, struct dentry *);
631:	static int init_devpts_fs(void);
249:	static int parse_mount_options(char *, int, struct pts_mount_opts *);

File fs/direct-io.c:
1401:	ssize_t __blockdev_direct_IO(struct kiocb *, struct inode *, struct block_device *, struct iov_iter *, get_block_t *, dio_iodone_t *, dio_submit_t *, int);
416:	void dio_end_io(struct bio *);
225:	void dio_warn_stale_pagecache(struct file *);
620:	int sb_init_dio_done_wq(struct super_block *);
337:	static void dio_aio_complete_work(struct work_struct *);
538:	static blk_status_t dio_bio_complete(struct dio *, struct bio *);
349:	static void dio_bio_end_aio(struct bio *);
395:	static void dio_bio_end_io(struct bio *);
255:	static ssize_t dio_complete(struct dio *, ssize_t, unsigned int);
1425:	static int dio_init(void);
789:	static int dio_send_cur_page(struct dio *, struct dio_submit *, struct buffer_head *);
1173:	static ssize_t do_blockdev_direct_IO(struct kiocb *, struct inode *, struct block_device *, struct iov_iter *, get_block_t *, dio_iodone_t *, dio_submit_t *, int);

File fs/drop_caches.c:
49:	int drop_caches_sysctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
17:	static void drop_pagecache_sb(struct super_block *, void *);

File fs/efivarfs/file.c:
167:	static long efivarfs_file_ioctl(struct file *, unsigned int, unsigned long);
68:	static ssize_t efivarfs_file_read(struct file *, char *, size_t, loff_t *);
18:	static ssize_t efivarfs_file_write(struct file *, const char *, size_t, loff_t *);

File fs/efivarfs/inode.c:
19:	struct inode *efivarfs_get_inode(struct super_block *, const struct inode *, int, dev_t, bool);
49:	bool efivarfs_valid_name(const char *, int);
72:	static int efivarfs_create(struct inode *, struct dentry *, umode_t, bool);
127:	static int efivarfs_unlink(struct inode *, struct dentry *);

File fs/efivarfs/super.c:
110:	static int efivarfs_callback(efi_char16_t *, efi_guid_t, unsigned long, void *);
47:	static int efivarfs_d_compare(const struct dentry *, unsigned int, const char *, const struct qstr *);
64:	static int efivarfs_d_hash(const struct dentry *, struct qstr *);
187:	static int efivarfs_destroy(struct efivar_entry *, void *);
23:	static void efivarfs_evict_inode(struct inode *);
265:	static void efivarfs_exit(void);
197:	static int efivarfs_fill_super(struct super_block *, void *, int);
254:	static int efivarfs_init(void);
238:	static void efivarfs_kill_sb(struct super_block *);
232:	static struct dentry *efivarfs_mount(struct file_system_type *, int, const char *, void *);

File fs/eventfd.c:
432:	long __ia32_sys_eventfd(const struct pt_regs *);
427:	long __ia32_sys_eventfd2(const struct pt_regs *);
432:	long __x64_sys_eventfd(const struct pt_regs *);
427:	long __x64_sys_eventfd2(const struct pt_regs *);
364:	struct eventfd_ctx *eventfd_ctx_fdget(int);
385:	struct eventfd_ctx *eventfd_ctx_fileget(struct file *);
104:	void eventfd_ctx_put(struct eventfd_ctx *);
196:	int eventfd_ctx_remove_wait_queue(struct eventfd_ctx *, wait_queue_entry_t *, __u64 *);
339:	struct file *eventfd_fget(int);
56:	__u64 eventfd_signal(struct eventfd_ctx *, __u64);
398:	static int do_eventfd(unsigned int, int);
119:	static __poll_t eventfd_poll(struct file *, poll_table *);
212:	static ssize_t eventfd_read(struct file *, char *, size_t, loff_t *);
110:	static int eventfd_release(struct inode *, struct file *);
307:	static void eventfd_show_fdinfo(struct seq_file *, struct file *);
259:	static ssize_t eventfd_write(struct file *, const char *, size_t, loff_t *);

File fs/eventpoll.c:
2255:	long __ia32_compat_sys_epoll_pwait(const struct pt_regs *);
1980:	long __ia32_sys_epoll_create(const struct pt_regs *);
1975:	long __ia32_sys_epoll_create1(const struct pt_regs *);
2166:	long __ia32_sys_epoll_ctl(const struct pt_regs *);
2234:	long __ia32_sys_epoll_pwait(const struct pt_regs *);
2224:	long __ia32_sys_epoll_wait(const struct pt_regs *);
1980:	long __x64_sys_epoll_create(const struct pt_regs *);
1975:	long __x64_sys_epoll_create1(const struct pt_regs *);
2166:	long __x64_sys_epoll_ctl(const struct pt_regs *);
2234:	long __x64_sys_epoll_pwait(const struct pt_regs *);
2224:	long __x64_sys_epoll_wait(const struct pt_regs *);
2000:	int do_epoll_ctl(int, int, int, struct epoll_event *, bool);
977:	void eventpoll_release_file(struct file *);
1083:	struct file *get_epoll_tfile_raw_ptr(struct file *, int, unsigned long);
1932:	static int do_epoll_create(int);
2182:	static int do_epoll_wait(int, struct epoll_event *, int, int);
380:	static bool ep_busy_loop_end(void *, unsigned long);
475:	static int ep_call_nested(int (*)(void *, void *, int), void *, void *, void *, int, struct nested_calls *);
1371:	static int ep_create_wakeup_source(struct epitem *);
1394:	static void ep_destroy_wakeup_source(struct epitem *);
922:	static __poll_t ep_eventpoll_poll(struct file *, poll_table *);
856:	static int ep_eventpoll_release(struct inode *, struct file *);
804:	static void ep_free(struct eventpoll *);
876:	static __poll_t ep_item_poll(poll_table *, int, const struct epitem *, const struct epitem *);
1855:	static int ep_loop_check_proc(void *, void *, int);
1739:	static int ep_poll(struct eventpoll *, struct epoll_event *, int, long);
1112:	static int ep_poll_callback(wait_queue_entry_t *, unsigned int, int, void *);
1230:	static void ep_ptable_queue_proc(struct file *, wait_queue_head_t *, poll_table *);
895:	static __poll_t ep_read_events_proc(struct eventpoll *, struct list_head *, void *);
766:	static int ep_remove(struct eventpoll *, struct epitem *);
664:	static __poll_t ep_scan_ready_list(struct eventpoll *, __poll_t (*)(struct eventpoll *, struct list_head *, void *), void *, bool, int);
1616:	static __poll_t ep_send_events_proc(struct eventpoll *, struct list_head *, void *);
939:	static void ep_show_fdinfo(struct seq_file *, struct file *);
605:	static void ep_unregister_pollwait(struct epitem *, struct eventpoll *);
756:	static void epi_rcu_free(struct callback_head *);
2278:	static int eventpoll_init(void);
1309:	static int reverse_path_check_proc(void *, void *, int);

File fs/exec.c:
1238:	char *__get_task_comm(char *, size_t, struct task_struct *);
1995:	long __ia32_compat_sys_execve(const struct pt_regs *);
2002:	long __ia32_compat_sys_execveat(const struct pt_regs *);
1973:	long __ia32_sys_execve(const struct pt_regs *);
1981:	long __ia32_sys_execveat(const struct pt_regs *);
80:	void __register_binfmt(struct linux_binfmt *, int);
1252:	void __set_task_comm(struct task_struct *, const char *, bool);
1973:	long __x64_sys_execve(const struct pt_regs *);
1981:	long __x64_sys_execveat(const struct pt_regs *);
1449:	int bprm_change_interp(const char *, struct linux_binprm *);
591:	int copy_strings_kernel(int, const char * const *, struct linux_binprm *);
1891:	int do_execve(struct filename *, const char * const *, const char * const *);
1883:	int do_execve_file(struct file *, void *, void *);
1900:	int do_execveat(int, struct filename *, const char * const *, const char * const *, int);
1404:	void finalize_exec(struct linux_binprm *);
1267:	int flush_old_exec(struct linux_binprm *);
1464:	void install_exec_creds(struct linux_binprm *);
892:	int kernel_read_file(struct file *, void **, loff_t *, loff_t, enum kernel_read_file_id);
981:	int kernel_read_file_from_fd(int, void **, loff_t *, loff_t, enum kernel_read_file_id);
962:	int kernel_read_file_from_path(const char *, void **, loff_t *, loff_t, enum kernel_read_file_id);
879:	struct file *open_exec(const char *);
107:	bool path_noexec(const struct path *);
1584:	int prepare_binprm(struct linux_binprm *);
1419:	int prepare_bprm_creds(struct linux_binprm *);
997:	ssize_t read_code(struct file *, unsigned long, loff_t, size_t);
1608:	int remove_arg_zero(struct linux_binprm *);
1648:	int search_binary_handler(struct linux_binprm *);
1944:	void set_binfmt(struct linux_binfmt *);
1960:	void set_dumpable(struct mm_struct *, int);
687:	int setup_arg_pages(struct linux_binprm *, unsigned long, int);
1345:	void setup_new_exec(struct linux_binprm *);
93:	void unregister_binfmt(struct linux_binfmt *);
1324:	void would_dump(struct linux_binprm *, struct file *);
1726:	static int __do_execve_file(int, struct filename *, int, struct file *);
500:	static int copy_strings(int, struct linux_binprm *);
469:	static int count(int);
835:	static struct file *do_open_execat(int, struct filename *, int);
1432:	static void free_bprm(struct linux_binprm *);
622:	static int shift_arg_pages(struct vm_area_struct *, unsigned long);

File fs/exportfs/expfs.c:
419:	struct dentry *exportfs_decode_fh(struct vfsmount *, struct fid *, int, int, int (*)(void *, struct dentry *), void *);
396:	int exportfs_encode_fh(struct dentry *, struct fid *, int *, int);
384:	int exportfs_encode_inode_fh(struct inode *, struct fid *, int *, struct inode *);
26:	static int exportfs_get_name(struct vfsmount *, struct dentry *, char *, struct dentry *);
250:	static int filldir_one(struct dir_context *, const char *, int, loff_t, u64, unsigned int);
42:	static struct dentry *find_acceptable_alias(struct dentry *, int (*)(void *, struct dentry *), void *);
276:	static int get_name(const struct path *, char *, struct dentry *);
211:	static int reconnect_path(struct vfsmount *, struct dentry *, char *);

File fs/fcntl.c:
106:	void __f_setown(struct file *, struct pid *, enum pid_type, int);
701:	long __ia32_compat_sys_fcntl(const struct pt_regs *);
695:	long __ia32_compat_sys_fcntl64(const struct pt_regs *);
468:	long __ia32_sys_fcntl(const struct pt_regs *);
468:	long __x64_sys_fcntl(const struct pt_regs *);
145:	void f_delown(struct file *);
150:	pid_t f_getown(struct file *);
114:	int f_setown(struct file *, unsigned long, int);
915:	struct fasync_struct *fasync_alloc(void);
925:	void fasync_free(struct fasync_struct *);
1000:	int fasync_helper(int, struct file *, int, struct fasync_struct **);
937:	struct fasync_struct *fasync_insert_entry(int, struct file *, struct fasync_struct **, struct fasync_struct *);
889:	int fasync_remove_entry(struct file *, struct fasync_struct **);
1037:	void kill_fasync(struct fasync_struct **, int, int);
798:	void send_sigio(struct fown_struct *, int, int);
836:	int send_sigurg(struct fown_struct *);
630:	static long do_compat_fcntl64(unsigned int, unsigned int, compat_ulong_t);
339:	static long do_fcntl(int, unsigned int, unsigned long, struct file *);
88:	static void f_modown(struct file *, struct pid *, enum pid_type, int);
874:	static void fasync_free_rcu(struct callback_head *);
1050:	static int fcntl_init(void);
551:	static int get_compat_flock(struct flock *, const struct compat_flock *);
561:	static int get_compat_flock64(struct flock *, const struct compat_flock64 *);
744:	static void send_sigio_to_task(struct task_struct *, struct fown_struct *, int, int, enum pid_type);
829:	static void send_sigurg_to_task(struct task_struct *, struct fown_struct *, enum pid_type);

File fs/fhandle.c:
274:	long __ia32_compat_sys_open_by_handle_at(const struct pt_regs *);
93:	long __ia32_sys_name_to_handle_at(const struct pt_regs *);
256:	long __ia32_sys_open_by_handle_at(const struct pt_regs *);
93:	long __x64_sys_name_to_handle_at(const struct pt_regs *);
256:	long __x64_sys_open_by_handle_at(const struct pt_regs *);
215:	static long do_handle_open(int, struct file_handle *, int);
17:	static long do_sys_name_to_handle(struct path *, struct file_handle *, int *);
134:	static int vfs_dentry_acceptable(void *, struct dentry *);

File fs/file.c:
519:	int __alloc_fd(struct files_struct *, unsigned int, unsigned int, unsigned int);
675:	int __close_fd(struct files_struct *, unsigned int);
703:	int __close_fd_get_file(unsigned int, struct file **);
867:	void __f_unlock_pos(struct file *);
641:	void __fd_install(struct files_struct *, unsigned int, struct file *);
842:	unsigned long __fdget(unsigned int);
853:	unsigned long __fdget_pos(unsigned int);
848:	unsigned long __fdget_raw(unsigned int);
588:	int __get_unused_fd_flags(unsigned int, unsigned long);
1048:	long __ia32_sys_dup(const struct pt_regs *);
1018:	long __ia32_sys_dup2(const struct pt_regs *);
1013:	long __ia32_sys_dup3(const struct pt_regs *);
1048:	long __x64_sys_dup(const struct pt_regs *);
1018:	long __x64_sys_dup2(const struct pt_regs *);
1013:	long __x64_sys_dup3(const struct pt_regs *);
729:	void do_close_on_exec(struct files_struct *);
273:	struct files_struct *dup_fd(struct files_struct *, int *);
476:	void exit_files(struct task_struct *);
1053:	int f_dupfd(unsigned int, struct file *, unsigned int);
665:	void fd_install(unsigned int, struct file *);
797:	struct file *fget(unsigned int);
792:	struct file *fget_many(unsigned int, unsigned int);
803:	struct file *fget_raw(unsigned int);
891:	bool get_close_on_exec(unsigned int);
439:	struct files_struct *get_files_struct(struct task_struct *);
593:	int get_unused_fd_flags(unsigned int);
1066:	int iterate_fd(struct files_struct *, unsigned int, int (*)(const void *, struct file *, unsigned int), const void *);
1033:	int ksys_dup(unsigned int);
452:	void put_files_struct(struct files_struct *);
611:	void put_unused_fd(unsigned int);
957:	int replace_fd(unsigned int, struct file *, unsigned int);
464:	void reset_files_struct(struct files_struct *);
878:	void set_close_on_exec(unsigned int, int);
765:	static struct file *__fget(unsigned int, fmode_t, unsigned int);
825:	static unsigned long __fget_light(unsigned int, fmode_t);
30:	static void __free_fdtable(struct fdtable *);
599:	static void __put_unused_fd(struct files_struct *, unsigned int);
86:	static struct fdtable *alloc_fdtable(unsigned int);
50:	static void copy_fd_bitmaps(struct fdtable *, struct fdtable *, unsigned int);
903:	static int do_dup2(struct files_struct *, struct file *, unsigned int, unsigned int);
194:	static int expand_files(struct files_struct *, unsigned int);
37:	static void free_fdtable_rcu(struct callback_head *);
979:	static int ksys_dup3(unsigned int, unsigned int, int);

File fs/file_table.c:
363:	void __fput_sync(struct file *);
133:	struct file *alloc_empty_file(int, const struct cred *);
170:	struct file *alloc_empty_file_noaccount(int, const struct cred *);
240:	struct file *alloc_file_clone(struct file *, int, const struct file_operations *);
213:	struct file *alloc_file_pseudo(struct inode *, struct vfsmount *, const char *, int, const struct file_operations *);
374:	void files_init(void);
385:	void files_maxfiles_init(void);
322:	void flush_delayed_fput(void);
350:	void fput(struct file *);
329:	void fput_many(struct file *, unsigned int);
71:	unsigned long get_max_files(void);
81:	int proc_nr_files(struct ctl_table *, int, void *, size_t *, loff_t *);
307:	static void ____fput(struct callback_head *);
95:	static struct file *__alloc_file(int, const struct cred *);
253:	static void __fput(struct file *);
187:	static struct file *alloc_file(const struct path *, int, const struct file_operations *);
298:	static void delayed_fput(struct work_struct *);
44:	static void file_free_rcu(struct callback_head *);

File fs/filescontrol.c:
152:	int files_cgroup_alloc_fd(struct files_struct *, u64);
287:	void files_cgroup_assign(struct files_struct *);
93:	u64 files_cgroup_count_fds(struct files_struct *);
298:	void files_cgroup_remove(struct files_struct *);
176:	void files_cgroup_unalloc_fd(struct files_struct *, u64);
109:	static int files_cgroup_can_attach(struct cgroup_taskset *);
63:	static struct cgroup_subsys_state *files_cgroup_css_alloc(struct cgroup_subsys_state *);
88:	static void files_cgroup_css_free(struct cgroup_subsys_state *);
190:	static u64 files_disabled_read(struct cgroup_subsys_state *, struct cftype *);
196:	static int files_disabled_write(struct cgroup_subsys_state *, struct cftype *, u64);
206:	static int files_limit_read(struct seq_file *, void *);
220:	static ssize_t files_limit_write(struct kernfs_open_file *, char *, size_t, loff_t);
247:	static u64 files_usage_read(struct cgroup_subsys_state *, struct cftype *);

File fs/filesystems.c:
186:	long __ia32_sys_sysfs(const struct pt_regs *);
186:	long __x64_sys_sysfs(const struct pt_regs *);
37:	struct file_system_type *get_filesystem(struct file_system_type *);
207:	int get_filesystem_list(char *);
261:	struct file_system_type *get_fs_type(const char *);
43:	void put_filesystem(struct file_system_type *);
71:	int register_filesystem(struct file_system_type *);
103:	int unregister_filesystem(struct file_system_type *);
249:	static struct file_system_type *__get_fs_type(const char *, int);
225:	static int filesystems_proc_show(struct seq_file *, void *);
48:	static struct file_system_type **find_filesystem(const char *, unsigned int);
127:	static int fs_index(const char *);
171:	static int fs_maxindex(void);
151:	static int fs_name(unsigned int, char *);
241:	static int proc_filesystems_init(void);

File fs/fs-writeback.c:
244:	void __inode_attach_wb(struct inode *, struct page *);
2151:	void __mark_inode_dirty(struct inode *, int);
924:	void cgroup_writeback_umount(void);
2114:	int dirtytime_interval_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
786:	int inode_congested(struct inode *, int);
1045:	void inode_io_list_del(struct inode *);
1274:	void inode_wait_for_writeback(struct inode *);
1078:	void sb_clear_inode_writeback(struct inode *);
1060:	void sb_mark_inode_writeback(struct inode *);
2502:	int sync_inode(struct inode *, struct writeback_control *);
2517:	int sync_inode_metadata(struct inode *, int);
2431:	void sync_inodes_sb(struct super_block *);
2414:	void try_to_writeback_inodes_sb(struct super_block *, enum wb_reason);
2057:	void wakeup_flusher_threads(enum wb_reason);
2046:	void wakeup_flusher_threads_bdi(struct backing_dev_info *, enum wb_reason);
1032:	void wb_start_background_writeback(struct bdi_writeback *);
1988:	void wb_workfn(struct work_struct *);
730:	void wbc_account_io(struct writeback_control *, struct page *, size_t);
569:	void wbc_attach_and_unlock_inode(struct writeback_control *, struct inode *);
638:	void wbc_detach_inode(struct writeback_control *);
2474:	int write_inode_now(struct inode *, int);
2401:	void writeback_inodes_sb(struct super_block *, enum wb_reason);
2384:	void writeback_inodes_sb_nr(struct super_block *, unsigned long, enum wb_reason);
1255:	static void __inode_wait_for_writeback(struct inode *);
2034:	static void __wakeup_flusher_threads_bdi(struct backing_dev_info *, enum wb_reason);
2352:	static void __writeback_inodes_sb_nr(struct super_block *, unsigned long, enum wb_reason, bool);
1697:	static long __writeback_inodes_wb(struct bdi_writeback *, struct wb_writeback_work *);
1374:	static int __writeback_single_inode(struct inode *, struct writeback_control *);
846:	static void bdi_split_work_to_wbs(struct backing_dev_info *, struct wb_writeback_work *, bool);
936:	static int cgroup_writeback_init(void);
177:	static void finish_writeback_work(struct wb_writeback_work *, struct bdi_writeback *);
994:	static unsigned long get_nr_dirty_pages(void);
158:	static void inode_io_list_del_locked(struct inode *, struct bdi_writeback *);
134:	static bool inode_io_list_move_locked(struct inode *, struct bdi_writeback *, struct list_head *);
1286:	static void inode_sleep_on_writeback(struct inode *);
488:	static void inode_switch_wbs(struct inode *, int);
470:	static void inode_switch_wbs_rcu_fn(struct callback_head *);
345:	static void inode_switch_wbs_work_fn(struct work_struct *);
1132:	static void inode_sync_complete(struct inode *);
283:	static struct bdi_writeback *locked_inode_to_wb_and_lock_list(struct inode *);
1163:	static int move_expired_inodes(struct list_head *, struct list_head *, unsigned long);
1220:	static void queue_io(struct bdi_writeback *, struct wb_writeback_work *, unsigned long);
1117:	static void redirty_tail(struct inode *, struct bdi_writeback *);
1102:	static void redirty_tail_locked(struct inode *, struct bdi_writeback *);
2107:	static int start_dirtytime_writeback(void);
2091:	static void wakeup_dirtytime_writeback(struct work_struct *);
114:	static void wb_io_lists_depopulated(struct bdi_writeback *);
101:	static bool wb_io_lists_populated(struct bdi_writeback *);
188:	static void wb_queue_work(struct bdi_writeback *, struct wb_writeback_work *);
218:	static void wb_wait_for_completion(struct backing_dev_info *, struct wb_completion *);
169:	static void wb_wakeup(struct bdi_writeback *);
1768:	static long wb_writeback(struct bdi_writeback *, struct wb_writeback_work *);
1731:	static long writeback_inodes_wb(struct bdi_writeback *, enum wb_reason, long);
1555:	static long writeback_sb_inodes(struct super_block *, struct bdi_writeback *, struct wb_writeback_work *);
1458:	static int writeback_single_inode(struct inode *, struct writeback_control *);

File fs/fs_pin.c:
91:	void group_pin_kill(struct hlist_head *);
77:	void mnt_pin_kill(struct mount *);
31:	void pin_insert(struct fs_pin *, struct vfsmount *);
22:	void pin_insert_group(struct fs_pin *, struct vfsmount *, struct hlist_head *);
36:	void pin_kill(struct fs_pin *);
10:	void pin_remove(struct fs_pin *);

File fs/fs_struct.c:
57:	void chroot_fs_refs(const struct path *, const struct path *);
111:	struct fs_struct *copy_fs_struct(struct fs_struct *);
155:	int current_umask(void);
94:	void exit_fs(struct task_struct *);
87:	void free_fs_struct(struct fs_struct *);
33:	void set_fs_pwd(struct fs_struct *, const struct path *);
14:	void set_fs_root(struct fs_struct *, const struct path *);
132:	int unshare_fs_struct(void);

File fs/hugetlbfs/inode.c:
1466:	struct file *hugetlb_file_setup(const char *, size_t, vm_flags_t, struct user_struct **, int, int);
407:	static void hugetlb_vmdelete_list(struct rb_root_cached *, unsigned long, unsigned long);
1144:	static struct inode *hugetlbfs_alloc_inode(struct super_block *);
955:	static int hugetlbfs_create(struct inode *, struct dentry *, umode_t, bool);
1177:	static void hugetlbfs_destroy_inode(struct inode *);
1021:	static int hugetlbfs_error_remove_page(struct address_space *, struct page *);
546:	static void hugetlbfs_evict_inode(struct inode *);
634:	static long hugetlbfs_fallocate(struct file *, int, loff_t, loff_t);
705:	static int hugetlbfs_fallocate_chunk(unsigned long, unsigned long, struct hf_args *);
172:	static int hugetlbfs_file_mmap(struct file *, struct vm_area_struct *);
1374:	static int hugetlbfs_fill_super(struct super_block *, void *, int);
870:	static struct inode *hugetlbfs_get_inode(struct super_block *, struct inode *, umode_t, dev_t);
1171:	static void hugetlbfs_i_callback(struct callback_head *);
1132:	static void hugetlbfs_inc_free_inodes(struct hugetlbfs_sb_info *);
992:	static int hugetlbfs_migrate_page(struct address_space *, struct page *, struct page *, enum migrate_mode);
947:	static int hugetlbfs_mkdir(struct inode *, struct dentry *, umode_t);
931:	static int hugetlbfs_mknod(struct inode *, struct dentry *, umode_t, dev_t);
1432:	static struct dentry *hugetlbfs_mount(struct file_system_type *, int, const char *, void *);
1260:	static int hugetlbfs_parse_options(char *, struct hugetlbfs_config *);
1103:	static void hugetlbfs_put_super(struct super_block *);
321:	static ssize_t hugetlbfs_read_iter(struct kiocb *, struct iov_iter *);
984:	static int hugetlbfs_set_page_dirty(struct page *);
807:	static int hugetlbfs_setattr(struct dentry *, struct iattr *);
1037:	static int hugetlbfs_show_options(struct seq_file *, struct dentry *);
1074:	static int hugetlbfs_statfs(struct dentry *, struct kstatfs *);
960:	static int hugetlbfs_symlink(struct inode *, struct dentry *, const char *);
383:	static int hugetlbfs_write_begin(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page **, void **);
391:	static int hugetlbfs_write_end(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *);
1526:	static int init_hugetlbfs_fs(void);
1193:	static void init_once(void *);
399:	static void remove_huge_page(struct page *);
465:	static void remove_inode_hugepages(struct inode *, loff_t, loff_t);

File fs/inode.c:
235:	void __destroy_inode(struct inode *);
395:	void __iget(struct inode *);
477:	void __insert_inode_hash(struct inode *, unsigned long);
495:	void __remove_inode_hash(struct inode *);
360:	void address_space_init_once(struct address_space *);
1687:	bool atime_needs_update(const struct path *, struct inode *);
1597:	sector_t bmap(struct inode *, sector_t);
505:	void clear_inode(struct inode *);
301:	void clear_nlink(struct inode *);
2160:	struct timespec64 current_time(struct inode *);
1787:	int dentry_needs_remove_privs(struct dentry *);
987:	void discard_new_inode(struct inode *);
284:	void drop_nlink(struct inode *);
608:	void evict_inodes(struct super_block *);
1821:	int file_remove_privs(struct file *);
1862:	int file_update_time(struct file *);
1415:	struct inode *find_inode_nowait(struct super_block *, unsigned long, int (*)(struct inode *, unsigned long, void *), void *);
229:	void free_inode_nonrcu(struct inode *);
1506:	int generic_delete_inode(struct inode *);
1640:	int generic_update_time(struct inode *, struct timespec64 *, int);
875:	unsigned int get_next_ino(void);
97:	long get_nr_dirty_inodes(void);
1124:	struct inode *iget5_locked(struct super_block *, unsigned long, int (*)(struct inode *, void *), int (*)(struct inode *, void *), void *);
1157:	struct inode *iget_locked(struct super_block *, unsigned long);
1279:	struct inode *igrab(struct inode *);
403:	void ihold(struct inode *);
1370:	struct inode *ilookup(struct super_block *, unsigned long);
1345:	struct inode *ilookup5(struct super_block *, unsigned long, int (*)(struct inode *, void *), void *);
1314:	struct inode *ilookup5_nowait(struct super_block *, unsigned long, int (*)(struct inode *, void *), void *);
340:	void inc_nlink(struct inode *);
1990:	void init_special_inode(struct inode *, umode_t, dev_t);
422:	void inode_add_lru(struct inode *);
2083:	void inode_dio_wait(struct inode *);
1964:	void inode_init(void);
130:	int inode_init_always(struct super_block *, struct inode *);
1944:	void inode_init_early(void);
372:	void inode_init_once(struct inode *);
2016:	void inode_init_owner(struct inode *, const struct inode *, umode_t);
1055:	struct inode *inode_insert5(struct inode *, unsigned long, int (*)(struct inode *, void *), int (*)(struct inode *, void *), void *);
1897:	int inode_needs_sync(struct inode *);
2120:	void inode_nohighmem(struct inode *);
2043:	bool inode_owner_or_capable(const struct inode *);
442:	void inode_sb_list_add(struct inode *);
2106:	void inode_set_flags(struct inode *, unsigned int, unsigned int);
1442:	int insert_inode_locked(struct inode *);
1489:	int insert_inode_locked4(struct inode *, unsigned long, int (*)(struct inode *, void *), void *);
658:	int invalidate_inodes(struct super_block *, bool);
1567:	void iput(struct inode *);
1256:	ino_t iunique(struct super_block *, ino_t);
1009:	void lock_two_nondirectories(struct inode *, struct inode *);
934:	struct inode *new_inode(struct super_block *);
909:	struct inode *new_inode_pseudo(struct super_block *);
108:	int proc_nr_inodes(struct ctl_table *, int, void *, size_t *, loff_t *);
782:	long prune_icache_sb(struct super_block *, struct shrink_control *);
318:	void set_nlink(struct inode *, unsigned int);
1759:	int should_remove_suid(struct dentry *);
2134:	struct timespec64 timespec64_trunc(struct timespec64, unsigned int);
1722:	void touch_atime(const struct path *);
975:	void unlock_new_inode(struct inode *);
1026:	void unlock_two_nondirectories(struct inode *, struct inode *);
1918:	static void __wait_on_freeing_inode(struct inode *);
206:	static struct inode *alloc_inode(struct super_block *);
263:	static void destroy_inode(struct inode *);
586:	static void dispose_list(struct list_head *);
538:	static void evict(struct inode *);
797:	static struct inode *find_inode(struct super_block *, struct hlist_head *, int (*)(struct inode *, void *), void *);
830:	static struct inode *find_inode_fast(struct super_block *, struct hlist_head *, unsigned long);
79:	static long get_nr_inodes(void);
257:	static void i_callback(struct callback_head *);
385:	static void init_once(void *);
716:	static enum lru_status inode_lru_isolate(struct list_head *, struct list_lru_one *, spinlock_t *, void *);
409:	static void inode_lru_list_add(struct inode *);
117:	static int no_open(struct inode *, struct file *);
1932:	static int set_ihash_entries(char *);

File fs/io-wq.c:
896:	void io_wq_cancel_all(struct io_wq *);
992:	enum io_wq_cancel io_wq_cancel_cb(struct io_wq *, work_cancel_fn *, void *, bool);
1041:	enum io_wq_cancel io_wq_cancel_work(struct io_wq *, struct io_wq_work *);
1046:	struct io_wq *io_wq_create(unsigned int, struct io_wq_data *);
1149:	void io_wq_destroy(struct io_wq *);
877:	void io_wq_enqueue(struct io_wq *, struct io_wq_work *);
1120:	bool io_wq_get(struct io_wq *, struct io_wq_data *);
1155:	struct task_struct *io_wq_get_task(struct io_wq *);
888:	void io_wq_hash_work(struct io_wq_work *, void *);
604:	void io_wq_worker_running(struct task_struct *);
622:	void io_wq_worker_sleeping(struct task_struct *);
142:	static bool __io_worker_unuse(struct io_wqe *, struct io_worker *);
639:	static bool create_io_worker(struct io_wq *, struct io_wqe *, int);
469:	static void io_assign_current_work(struct io_worker *, struct io_wq_work *);
126:	static bool io_worker_get(struct io_worker *);
486:	static void io_worker_handle_work(struct io_worker *);
131:	static void io_worker_release(struct io_worker *);
700:	static bool io_wq_for_each_worker(struct io_wqe *, bool (*)(struct io_worker *, void *), void *);
1036:	static bool io_wq_io_cb_cancel_data(struct io_wq_work *, void *);
730:	static int io_wq_manager(void *);
919:	static bool io_wq_worker_cancel(struct io_worker *, void *);
721:	static bool io_wq_worker_wake(struct io_worker *, void *);
302:	static void io_wqe_dec_running(struct io_wqe *, struct io_worker *);
849:	static void io_wqe_enqueue(struct io_wqe *, struct io_wq_work *);
277:	static void io_wqe_wake_worker(struct io_wqe *, struct io_wqe_acct *);
556:	static int io_wqe_worker(void *);
690:	static bool io_wqe_worker_send_sig(struct io_worker *, void *);

File fs/io_uring.c:
8155:	long __ia32_sys_io_uring_enter(const struct pt_regs *);
8792:	long __ia32_sys_io_uring_register(const struct pt_regs *);
8589:	long __ia32_sys_io_uring_setup(const struct pt_regs *);
8155:	long __x64_sys_io_uring_enter(const struct pt_regs *);
8792:	long __x64_sys_io_uring_register(const struct pt_regs *);
8589:	long __x64_sys_io_uring_setup(const struct pt_regs *);
924:	struct sock *io_uring_get_socket(struct file *);
4701:	static __poll_t __io_arm_poll_handler(struct io_kiocb *, struct io_poll_iocb *, struct io_poll_table *, __poll_t, wait_queue_func_t);
4418:	static int __io_async_wake(struct io_kiocb *, struct io_poll_iocb *, __poll_t, task_work_func_t);
5460:	static void __io_clean_op(struct io_kiocb *);
1476:	static void __io_cqring_fill_event(struct io_kiocb *, long, long);
7723:	static int __io_destroy_buffers(int, void *, void *);
1774:	static void __io_fail_links(struct io_kiocb *);
1680:	static void __io_free_req(struct io_kiocb *);
1653:	static void __io_free_req_finish(struct io_kiocb *);
1715:	static bool __io_kill_linked_timeout(struct io_kiocb *);
4798:	static bool __io_poll_remove_one(struct io_kiocb *, struct io_poll_iocb *);
1256:	static struct io_kiocb *__io_queue_async_work(struct io_kiocb *);
5948:	static void __io_queue_linked_timeout(struct io_kiocb *);
4598:	static void __io_queue_proc(struct io_poll_iocb *, struct wait_queue_head *, struct io_poll_iocb **, struct io_poll_table *, struct io_poll_table *);
5993:	static void __io_queue_sqe(struct io_kiocb *, const struct io_uring_sqe *, struct io_comp_state *);
3447:	static int __io_remove_buffers(struct io_ring_ctx *, struct io_buffer *, int, unsigned int);
1555:	static void __io_req_complete(struct io_kiocb *, long, unsigned int, struct io_comp_state *);
1812:	static struct io_kiocb *__io_req_find_next(struct io_kiocb *);
1871:	static void __io_req_task_cancel(struct io_kiocb *, int);
1895:	static void __io_req_task_submit(struct io_kiocb *);
3176:	static int __io_splice_prep(struct io_kiocb *, const struct io_uring_sqe *);
981:	static int __io_sq_thread_acquire_files(struct io_ring_ctx *);
1006:	static int __io_sq_thread_acquire_mm(struct io_ring_ctx *, struct io_ring_ctx *);
6722:	static int __io_sqe_files_scm(struct io_ring_ctx *, int, int);
7171:	static int __io_sqe_files_update(struct io_ring_ctx *, struct io_uring_files_update *, unsigned int);
5011:	static int __io_timeout_cancel(struct io_kiocb *);
8685:	static int __io_uring_register(struct io_ring_ctx *, unsigned int, void *, unsigned int);
6977:	static struct fixed_file_ref_node *alloc_fixed_file_ref_node(struct io_ring_ctx *);
4253:	static int io_accept_prep(struct io_kiocb *, const struct io_uring_sqe *);
7422:	static int io_account_mem(struct io_ring_ctx *, unsigned long, enum io_mem_account);
2954:	static int io_alloc_async_ctx(struct io_kiocb *);
5200:	static void io_async_find_and_cancel(struct io_ring_ctx *, struct io_kiocb *, __u64, int);
4640:	static void io_async_queue_proc(struct file *, struct wait_queue_head *, struct poll_table_struct *);
4649:	static void io_async_task_func(struct callback_head *);
4680:	static int io_async_wake(struct wait_queue_entry *, unsigned int, int, void *);
2688:	static struct io_buffer *io_buffer_select(struct io_kiocb *, size_t *, int, bool, struct io_buffer *);
5172:	static bool io_cancel_cb(struct io_wq_work *, void *);
7830:	static bool io_cancel_ctx_cb(struct io_wq_work *, void *);
7970:	static bool io_cancel_link_cb(struct io_wq_work *, void *);
8062:	static bool io_cancel_task_cb(struct io_wq_work *, void *);
3759:	static int io_close_prep(struct io_kiocb *, const struct io_uring_sqe *);
1362:	static void io_commit_cqring(struct io_ring_ctx *);
2372:	static void io_complete_rw(struct kiocb *, long, long);
2350:	static void io_complete_rw_common(struct kiocb *, long, struct io_comp_state *);
2379:	static void io_complete_rw_iopoll(struct kiocb *, long, long);
4313:	static int io_connect(struct io_kiocb *, bool, struct io_comp_state *);
4293:	static int io_connect_prep(struct io_kiocb *, const struct io_uring_sqe *);
1400:	static void io_cqring_ev_posted(struct io_ring_ctx *);
2065:	static unsigned int io_cqring_events(struct io_ring_ctx *, bool);
1420:	static bool io_cqring_overflow_flush(struct io_ring_ctx *, bool);
6562:	static int io_cqring_wait(struct io_ring_ctx *, int, const sigset_t *, size_t);
1641:	static bool io_dismantle_req(struct io_kiocb *);
2188:	static int io_do_iopoll(struct io_ring_ctx *, unsigned int *, long);
3601:	static int io_epoll_ctl_prep(struct io_kiocb *, const struct io_uring_sqe *);
6942:	static void io_file_data_ref_zero(struct percpu_ref *);
5838:	static int io_file_get(struct io_submit_state *, struct io_kiocb *, int, struct file **, bool);
6924:	static void io_file_put_work(struct work_struct *);
6650:	static void io_file_ref_kill(struct percpu_ref *);
2481:	static bool io_file_supports_async(struct file *, int);
6706:	static void io_finish_async(struct io_ring_ctx *);
7276:	static void io_free_work(struct io_wq_work *);
937:	static void io_get_req_task(struct io_kiocb *, struct io_kiocb *);
5872:	static int io_grab_files(struct io_kiocb *);
2810:	static ssize_t io_import_iovec(int, struct io_kiocb *, struct iovec **, struct iov_iter *, bool);
2290:	static int io_iopoll_check(struct io_ring_ctx *, long);
2146:	static void io_iopoll_complete(struct io_ring_ctx *, unsigned int *, struct list_head *);
2262:	static void io_iopoll_try_reap_events(struct io_ring_ctx *);
5521:	static int io_issue_sqe(struct io_kiocb *, const struct io_uring_sqe *, bool, struct io_comp_state *);
1279:	static void io_kill_timeout(struct io_kiocb *);
5911:	static enum hrtimer_restart io_link_timeout_fn(struct hrtimer *);
7886:	static bool io_match_link(struct io_kiocb *, struct io_kiocb *);
7443:	static void io_mem_free(void *);
3361:	static int io_openat_prep(struct io_kiocb *, const struct io_uring_sqe *);
4933:	static int io_poll_add_prep(struct io_kiocb *, const struct io_uring_sqe *);
4865:	static int io_poll_cancel(__u64, struct io_ring_ctx *, struct io_ring_ctx *);
4555:	static int io_poll_double_wake(struct wait_queue_entry *, unsigned int, int, void *);
4925:	static void io_poll_queue_proc(struct file *, struct wait_queue_head *, struct poll_table_struct *);
4497:	static void io_poll_remove_double(struct io_kiocb *);
4814:	static bool io_poll_remove_one(struct io_kiocb *);
4462:	static bool io_poll_rewait(struct io_kiocb *, struct io_poll_iocb *);
4542:	static void io_poll_task_func(struct callback_head *);
4916:	static int io_poll_wake(struct wait_queue_entry *, unsigned int, int, void *);
1246:	static void io_prep_async_link(struct io_kiocb *);
1211:	static void io_prep_async_work(struct io_kiocb *);
3293:	static int io_prep_fsync(struct io_kiocb *, const struct io_uring_sqe *);
2503:	static int io_prep_rw(struct io_kiocb *, const struct io_uring_sqe *, bool);
3819:	static int io_prep_sfr(struct io_kiocb *, const struct io_uring_sqe *);
3504:	static int io_provide_buffers_prep(struct io_kiocb *, const struct io_uring_sqe *);
2025:	static void io_put_req(struct io_kiocb *);
2014:	static struct io_kiocb *io_put_req_find_next(struct io_kiocb *);
1267:	static void io_queue_async_work(struct io_kiocb *);
5963:	static void io_queue_linked_timeout(struct io_kiocb *);
1936:	static void io_queue_next(struct io_kiocb *);
6065:	static void io_queue_sqe(struct io_kiocb *, const struct io_uring_sqe *, struct io_comp_state *);
3013:	static int io_read(struct io_kiocb *, bool, struct io_comp_state *);
2995:	static int io_read_prep(struct io_kiocb *, const struct io_uring_sqe *, bool);
4199:	static int io_recv(struct io_kiocb *, bool, struct io_comp_state *);
4087:	static struct io_buffer *io_recv_buffer_select(struct io_kiocb *, bool);
4139:	static int io_recvmsg(struct io_kiocb *, bool, struct io_comp_state *);
4073:	static int io_recvmsg_copy_hdr(struct io_kiocb *, struct io_async_msghdr *);
4107:	static int io_recvmsg_prep(struct io_kiocb *, const struct io_uring_sqe *);
3428:	static int io_remove_buffers_prep(struct io_kiocb *, const struct io_uring_sqe *);
7800:	static int io_remove_personalities(int, void *, void *);
5292:	static int io_req_defer_prep(struct io_kiocb *, const struct io_uring_sqe *);
2929:	static void io_req_map_rw(ssize_t, struct iovec *, struct iovec *, struct iov_iter *, struct io_kiocb *, struct io_kiocb *);
1885:	static void io_req_task_cancel(struct callback_head *);
1665:	static void io_req_task_file_table_put(struct callback_head *);
1909:	static void io_req_task_submit(struct callback_head *);
1078:	static void io_ring_ctx_ref_free(struct percpu_ref *);
7837:	static void io_ring_ctx_wait_and_kill(struct io_ring_ctx *);
7811:	static void io_ring_exit_work(struct work_struct *);
2722:	static void *io_rw_buffer_select(struct io_kiocb *, size_t *, bool);
3955:	static int io_send(struct io_kiocb *, bool, struct io_comp_state *);
3908:	static int io_sendmsg(struct io_kiocb *, bool, struct io_comp_state *);
3878:	static int io_sendmsg_prep(struct io_kiocb *, const struct io_uring_sqe *);
3854:	static int io_setup_async_msg(struct io_kiocb *, struct io_async_msghdr *);
6392:	static int io_sq_thread(void *);
959:	static void io_sq_thread_drop_mm_files(void);
7504:	static int io_sqe_buffer_unregister(struct io_ring_ctx *);
6658:	static int io_sqe_files_unregister(struct io_ring_ctx *);
1528:	static void io_submit_flush_completions(struct io_comp_state *);
6301:	static int io_submit_sqes(struct io_ring_ctx *, unsigned int, struct file *, int);
5028:	static int io_timeout_cancel(struct io_ring_ctx *, __u64);
4982:	static enum hrtimer_restart io_timeout_fn(struct hrtimer *);
5085:	static int io_timeout_prep(struct io_kiocb *, const struct io_uring_sqe *, bool);
5046:	static int io_timeout_remove_prep(struct io_kiocb *, const struct io_uring_sqe *);
8422:	static int io_uring_create(unsigned int, struct io_uring_params *, struct io_uring_params *);
7793:	static int io_uring_fasync(int, struct file *, int);
8070:	static int io_uring_flush(struct file *, void *);
8819:	static int io_uring_init(void);
8114:	static int io_uring_mmap(struct file *, struct vm_area_struct *);
7773:	static __poll_t io_uring_poll(struct file *, poll_table *);
7867:	static int io_uring_release(struct inode *, struct file *);
8569:	static long io_uring_setup(u32, struct io_uring_params *);
8227:	static int io_uring_show_cred(int, void *, void *);
8311:	static void io_uring_show_fdinfo(struct seq_file *, struct file *);
6545:	static int io_wake_function(struct wait_queue_entry *, unsigned int, int, void *);
7876:	static bool io_wq_files_match(struct io_wq_work *, void *);
5768:	static struct io_wq_work *io_wq_submit_work(struct io_wq_work *);
3091:	static int io_write(struct io_kiocb *, bool, struct io_comp_state *);
3073:	static int io_write_prep(struct io_kiocb *, const struct io_uring_sqe *, bool);
2583:	static void kiocb_done(struct kiocb *, ssize_t, struct io_comp_state *);
2875:	static ssize_t loop_rw_iter(int, struct file *, struct kiocb *, struct iov_iter *);
7492:	static unsigned long ring_pages(unsigned int, unsigned int);

File fs/ioctl.c:
281:	int __generic_block_fiemap(struct inode *, struct fiemap_extent_info *, loff_t, loff_t, get_block_t *);
710:	long __ia32_sys_ioctl(const struct pt_regs *);
710:	long __x64_sys_ioctl(const struct pt_regs *);
626:	int do_vfs_ioctl(struct file *, unsigned int, unsigned int, unsigned long);
142:	int fiemap_check_flags(struct fiemap_extent_info *, u32);
89:	int fiemap_fill_next_extent(struct fiemap_extent_info *, u64, u64, u64, u32);
440:	int generic_block_fiemap(struct inode *, struct fiemap_extent_info *, u64, u64, get_block_t *);
461:	int ioctl_preallocate(struct file *, void *);
696:	int ksys_ioctl(unsigned int, unsigned int, unsigned long);
39:	long vfs_ioctl(struct file *, unsigned int, unsigned long);
222:	static long ioctl_file_clone(struct file *, unsigned long, u64, u64, u64);

File fs/iomap.c:
49:	loff_t iomap_apply(struct inode *, loff_t, loff_t, unsigned int, const struct iomap_ops *, void *, iomap_actor_t);
2177:	sector_t iomap_bmap(struct address_space *, sector_t, const struct iomap_ops *);
1819:	ssize_t iomap_dio_rw(struct kiocb *, struct iov_iter *, const struct iomap_ops *, iomap_dio_end_io_t *);
1204:	int iomap_fiemap(struct inode *, struct fiemap_extent_info *, loff_t, loff_t, const struct iomap_ops *);
891:	ssize_t iomap_file_buffered_write(struct kiocb *, struct iov_iter *, const struct iomap_ops *);
973:	int iomap_file_dirty(struct inode *, loff_t, loff_t, const struct iomap_ops *);
572:	void iomap_invalidatepage(struct page *, unsigned int, unsigned int);
530:	int iomap_is_partially_uptodate(struct page *, unsigned long, unsigned long);
588:	int iomap_migrate_page(struct address_space *, struct page *, struct page *, enum migrate_mode);
1105:	int iomap_page_mkwrite(struct vm_fault *, const struct iomap_ops *);
390:	int iomap_readpage(struct page *, const struct iomap_ops *);
482:	int iomap_readpages(struct address_space *, struct list_head *, unsigned int, const struct iomap_ops *);
557:	int iomap_releasepage(struct page *, gfp_t);
1422:	loff_t iomap_seek_data(struct inode *, loff_t, const struct iomap_ops *);
1376:	loff_t iomap_seek_hole(struct inode *, loff_t, const struct iomap_ops *);
719:	int iomap_set_page_dirty(struct page *);
2112:	int iomap_swapfile_activate(struct swap_info_struct *, struct file *, sector_t *, const struct iomap_ops *);
1071:	int iomap_truncate_page(struct inode *, loff_t, bool *, const struct iomap_ops *);
1051:	int iomap_zero_range(struct inode *, loff_t, loff_t, bool *, const struct iomap_ops *);
156:	static void iomap_adjust_read_range(struct inode *, struct iomap_page *, loff_t *, loff_t, unsigned int *, unsigned int *);
2160:	static loff_t iomap_bmap_actor(struct inode *, loff_t, loff_t, void *, struct iomap *);
1785:	static loff_t iomap_dio_actor(struct inode *, loff_t, loff_t, void *, struct iomap *);
1619:	static loff_t iomap_dio_bio_actor(struct inode *, loff_t, loff_t, struct iomap_dio *, struct iomap *);
1562:	static void iomap_dio_bio_end_io(struct bio *);
1485:	static ssize_t iomap_dio_complete(struct iomap_dio *);
1544:	static void iomap_dio_complete_work(struct work_struct *);
1598:	static blk_qc_t iomap_dio_zero(struct iomap_dio *, struct iomap *, loff_t, unsigned int);
927:	static loff_t iomap_dirty_actor(struct inode *, loff_t, loff_t, void *, struct iomap *);
1183:	static loff_t iomap_fiemap_actor(struct inode *, loff_t, loff_t, void *, struct iomap *);
114:	static struct iomap_page *iomap_page_create(struct inode *, struct page *);
1085:	static loff_t iomap_page_mkwrite_actor(struct inode *, loff_t, loff_t, void *, struct iomap *);
138:	static void iomap_page_release(struct page *);
292:	static void iomap_read_end_io(struct bio *);
272:	static void iomap_read_inline_data(struct inode *, struct page *, struct iomap *);
629:	static int iomap_read_page_sync(loff_t, struct page *, unsigned int, unsigned int, struct iomap *);
312:	static loff_t iomap_readpage_actor(struct inode *, loff_t, loff_t, void *, struct iomap *);
454:	static loff_t iomap_readpages_actor(struct inode *, loff_t, loff_t, void *, struct iomap *);
1403:	static loff_t iomap_seek_data_actor(struct inode *, loff_t, loff_t, void *, struct iomap *);
1357:	static loff_t iomap_seek_hole_actor(struct inode *, loff_t, loff_t, void *, struct iomap *);
237:	static void iomap_set_range_uptodate(struct page *, unsigned int, unsigned int);
2056:	static loff_t iomap_swapfile_activate_actor(struct inode *, loff_t, loff_t, void *, struct iomap *);
2007:	static int iomap_swapfile_add_extent(struct iomap_swapfile_info *);
1152:	static int iomap_to_fiemap(struct fiemap_extent_info *, struct iomap *, u32);
810:	static loff_t iomap_write_actor(struct inode *, loff_t, loff_t, void *, struct iomap *);
684:	static int iomap_write_begin(struct inode *, loff_t, unsigned int, struct page **, struct iomap *, unsigned int);
785:	static int iomap_write_end(struct inode *, loff_t, unsigned int, unsigned int, struct page *, struct iomap *);
1016:	static loff_t iomap_zero_range_actor(struct inode *, loff_t, loff_t, void *, struct iomap *);
1310:	static loff_t page_cache_seek_hole_data(struct inode *, loff_t, loff_t, int);

File fs/kernfs/dir.c:
1253:	void kernfs_activate(struct kernfs_node *);
761:	int kernfs_add_one(struct kernfs_node *);
1368:	void kernfs_break_active_protection(struct kernfs_node *);
1009:	struct kernfs_node *kernfs_create_dir_ns(struct kernfs_node *, const char *, umode_t, kuid_t, kgid_t, void *, const void *);
1043:	struct kernfs_node *kernfs_create_empty_dir(struct kernfs_node *, const char *);
948:	struct kernfs_root *kernfs_create_root(struct kernfs_syscall_ops *, unsigned int, void *);
992:	void kernfs_destroy_root(struct kernfs_root *);
709:	struct kernfs_node *kernfs_find_and_get_node_by_ino(struct kernfs_root *, unsigned int);
902:	struct kernfs_node *kernfs_find_and_get_ns(struct kernfs_node *, const char *, const void *);
490:	void kernfs_get(struct kernfs_node *);
412:	struct kernfs_node *kernfs_get_active(struct kernfs_node *);
278:	struct kernfs_node *kernfs_get_parent(struct kernfs_node *);
182:	int kernfs_name(struct kernfs_node *, char *, size_t);
685:	struct kernfs_node *kernfs_new_node(struct kernfs_node *, const char *, umode_t, kuid_t, kgid_t, unsigned int);
611:	struct kernfs_node *kernfs_node_from_dentry(struct dentry *);
209:	int kernfs_path_from_node(struct kernfs_node *, struct kernfs_node *, char *, size_t);
505:	void kernfs_put(struct kernfs_node *);
432:	void kernfs_put_active(struct kernfs_node *);
1347:	void kernfs_remove(struct kernfs_node *);
1494:	int kernfs_remove_by_name_ns(struct kernfs_node *, const char *, const void *);
1434:	bool kernfs_remove_self(struct kernfs_node *);
1526:	int kernfs_rename_ns(struct kernfs_node *, struct kernfs_node *, const char *, const void *);
1392:	void kernfs_unbreak_active_protection(struct kernfs_node *);
926:	struct kernfs_node *kernfs_walk_and_get_ns(struct kernfs_node *, const char *, const void *);
228:	void pr_cont_kernfs_name(struct kernfs_node *);
246:	void pr_cont_kernfs_path(struct kernfs_node *);
619:	static struct kernfs_node *__kernfs_new_node(struct kernfs_root *, const char *, umode_t, kuid_t, kgid_t, unsigned int);
1274:	static void __kernfs_remove(struct kernfs_node *);
1601:	static int kernfs_dir_fop_release(struct inode *, struct file *);
1607:	static struct kernfs_node *kernfs_dir_pos(const void *, struct kernfs_node *, loff_t, struct kernfs_node *);
557:	static int kernfs_dop_revalidate(struct dentry *, unsigned int);
827:	static struct kernfs_node *kernfs_find_ns(struct kernfs_node *, const unsigned char *, const void *);
1657:	static int kernfs_fop_readdir(struct file *, struct dir_context *);
1069:	static struct dentry *kernfs_iop_lookup(struct inode *, struct dentry *, unsigned int);
1106:	static int kernfs_iop_mkdir(struct inode *, struct dentry *, umode_t);
1143:	static int kernfs_iop_rename(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int);
1125:	static int kernfs_iop_rmdir(struct inode *, struct dentry *);
347:	static int kernfs_link_sibling(struct kernfs_node *);
298:	static unsigned int kernfs_name_hash(const char *, const void *);
43:	static int kernfs_name_locked(struct kernfs_node *, char *, size_t);
1216:	static struct kernfs_node *kernfs_next_descendant_post(struct kernfs_node *, struct kernfs_node *);
123:	static int kernfs_path_from_node_locked(struct kernfs_node *, struct kernfs_node *, char *, size_t);
389:	static bool kernfs_unlink_sibling(struct kernfs_node *);

File fs/kernfs/file.c:
978:	struct kernfs_node *__kernfs_create_file(struct kernfs_node *, const char *, umode_t, kuid_t, kgid_t, loff_t, const struct kernfs_ops *, void *, const void *, struct lock_class_key *);
788:	void kernfs_drain_open_files(struct kernfs_node *);
933:	void kernfs_notify(struct kernfs_node *);
470:	static int kernfs_fop_mmap(struct file *, struct vm_area_struct *);
617:	static int kernfs_fop_open(struct inode *, struct file *);
835:	static __poll_t kernfs_fop_poll(struct file *, poll_table *);
246:	static ssize_t kernfs_fop_read(struct file *, char *, size_t, loff_t *);
769:	static int kernfs_fop_release(struct inode *, struct file *);
273:	static ssize_t kernfs_fop_write(struct file *, const char *, size_t, loff_t *);
857:	static void kernfs_notify_workfn(struct work_struct *);
594:	static void kernfs_put_open_node(struct kernfs_open_file *, struct kernfs_node *);
132:	static void *kernfs_seq_next(struct seq_file *, void *, loff_t *);
162:	static int kernfs_seq_show(struct seq_file *, void *);
103:	static void *kernfs_seq_start(struct seq_file *, loff_t *);
153:	static void kernfs_seq_stop(struct seq_file *, void *);
93:	static void kernfs_seq_stop_active(struct seq_file *, void *);
393:	static int kernfs_vma_access(struct vm_area_struct *, unsigned long, void *, int, int);
351:	static vm_fault_t kernfs_vma_fault(struct vm_fault *);
436:	static struct mempolicy *kernfs_vma_get_policy(struct vm_area_struct *, unsigned long);
334:	static void kernfs_vma_open(struct vm_area_struct *);
371:	static vm_fault_t kernfs_vma_page_mkwrite(struct vm_fault *);
415:	static int kernfs_vma_set_policy(struct vm_area_struct *, struct mempolicy *);

File fs/kernfs/inode.c:
66:	int __kernfs_setattr(struct kernfs_node *, const struct iattr *);
283:	void kernfs_evict_inode(struct inode *);
265:	struct inode *kernfs_get_inode(struct super_block *, struct kernfs_node *);
203:	int kernfs_iop_getattr(const struct path *, struct kstat *, u32, unsigned int);
155:	ssize_t kernfs_iop_listxattr(struct dentry *, char *, size_t);
292:	int kernfs_iop_permission(struct inode *, int);
112:	int kernfs_iop_setattr(struct dentry *, struct iattr *);
102:	int kernfs_setattr(struct kernfs_node *, const struct iattr *);
34:	static struct kernfs_iattrs *kernfs_iattrs(struct kernfs_node *, struct kernfs_node *);
184:	static void kernfs_refresh_inode(struct kernfs_node *, struct inode *);
345:	static int kernfs_security_xattr_set(const struct xattr_handler *, struct dentry *, struct inode *, const char *, const void *, size_t, int);
308:	static int kernfs_xattr_get(const struct xattr_handler *, struct dentry *, struct inode *, const char *, void *, size_t);
323:	static int kernfs_xattr_set(const struct xattr_handler *, struct dentry *, struct inode *, const char *, const void *, size_t, int);

File fs/kernfs/mount.c:
72:	struct kernfs_node *kernfs_get_node_by_id(struct kernfs_root *, const union kernfs_node_id *);
377:	void kernfs_init(void);
361:	void kernfs_kill_sb(struct super_block *);
309:	struct dentry *kernfs_mount_ns(struct file_system_type *, int, struct kernfs_root *, unsigned long, bool *, const void *);
184:	struct dentry *kernfs_node_dentry(struct kernfs_node *, struct super_block *);
147:	struct kernfs_root *kernfs_root_from_sb(struct super_block *);
286:	const void *kernfs_super_ns(struct super_block *);
87:	static struct inode *kernfs_fh_get_inode(struct super_block *, u64, u32);
113:	static struct dentry *kernfs_fh_to_dentry(struct super_block *, struct fid *, int, int);
120:	static struct dentry *kernfs_fh_to_parent(struct super_block *, struct fid *, int, int);
127:	static struct dentry *kernfs_get_parent_dentry(struct dentry *);
271:	static int kernfs_set_super(struct super_block *, void *);
25:	static int kernfs_sop_remount_fs(struct super_block *, int *, char *);
35:	static int kernfs_sop_show_options(struct seq_file *, struct dentry *);
45:	static int kernfs_sop_show_path(struct seq_file *, struct dentry *);
263:	static int kernfs_test_super(struct super_block *, void *);

File fs/kernfs/symlink.c:
26:	struct kernfs_node *kernfs_create_link(struct kernfs_node *, const char *, struct kernfs_node *);
127:	static const char *kernfs_iop_get_link(struct dentry *, struct inode *, struct delayed_call *);

File fs/libfs.c:
1044:	int __generic_file_fsync(struct file *, loff_t, loff_t, int);
1197:	struct inode *alloc_anon_inode(struct super_block *);
47:	int always_delete_dentry(const struct dentry *);
81:	int dcache_dir_close(struct inode *, struct file *);
130:	loff_t dcache_dir_lseek(struct file *, loff_t, int);
73:	int dcache_dir_open(struct inode *, struct file *);
179:	int dcache_readdir(struct file *, struct dir_context *);
1108:	int generic_check_addressable(unsigned int, u64);
979:	struct dentry *generic_fh_to_dentry(struct super_block *, struct fid *, int, int, struct inode *(*)(struct super_block *, u64, u32));
1012:	struct dentry *generic_fh_to_parent(struct super_block *, struct fid *, int, int, struct inode *(*)(struct super_block *, u64, u32));
1086:	int generic_file_fsync(struct file *, loff_t, loff_t, int);
216:	ssize_t generic_read_dir(struct file *, char *, size_t, loff_t *);
1326:	bool is_empty_dir_inode(struct inode *);
1177:	void kfree_link(void *);
1310:	void make_empty_dir_inode(struct inode *);
762:	ssize_t memory_read_from_buffer(void *, size_t, loff_t *, const void *, size_t);
310:	struct dentry *mount_pseudo_xattr(struct file_system_type *, char *, const struct super_operations *, const struct xattr_handler **, const struct dentry_operations *, unsigned long);
1164:	ssize_t noop_direct_IO(struct kiocb *, struct iov_iter *);
1131:	int noop_fsync(struct file *, loff_t, loff_t, int);
1153:	void noop_invalidatepage(struct page *, unsigned int, unsigned int);
1137:	int noop_set_page_dirty(struct page *);
865:	int simple_attr_open(struct inode *, struct file *, int (*)(void *, u64 *), int (*)(void *, u64), const char *);
895:	ssize_t simple_attr_read(struct file *, char *, size_t, loff_t *);
887:	int simple_attr_release(struct inode *, struct file *);
933:	ssize_t simple_attr_write(struct file *, const char *, size_t, loff_t *);
380:	int simple_empty(struct dentry *);
579:	int simple_fill_super(struct super_block *, unsigned long, const struct tree_descr *);
1244:	const char *simple_get_link(struct dentry *, struct inode *, struct delayed_call *);
24:	int simple_getattr(const struct path *, struct kstat *, u32, unsigned int);
367:	int simple_link(struct dentry *, struct inode *, struct dentry *);
62:	struct dentry *simple_lookup(struct inode *, struct dentry *, unsigned int);
1237:	int simple_nosetlease(struct file *, long, struct file_lock **, void **);
359:	int simple_open(struct inode *, struct file *);
645:	int simple_pin_fs(struct file_system_type *, struct vfsmount **, int *);
692:	ssize_t simple_read_from_buffer(void *, size_t, loff_t *, const void *, size_t);
486:	int simple_readpage(struct file *, struct page *);
259:	void simple_recursive_removal(struct dentry *, void (*)(struct dentry *));
666:	void simple_release_fs(struct vfsmount **, int *);
424:	int simple_rename(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int);
412:	int simple_rmdir(struct inode *, struct dentry *);
469:	int simple_setattr(struct dentry *, struct iattr *);
34:	int simple_statfs(struct dentry *, struct kstatfs *);
802:	char *simple_transaction_get(struct file *, const char *, size_t);
834:	ssize_t simple_transaction_read(struct file *, char *, size_t, loff_t *);
844:	int simple_transaction_release(struct inode *, struct file *);
787:	void simple_transaction_set(struct file *, size_t);
401:	int simple_unlink(struct inode *, struct dentry *);
496:	int simple_write_begin(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page **, void **);
543:	int simple_write_end(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *);
727:	ssize_t simple_write_to_buffer(void *, size_t, loff_t *, const void *, size_t);
1264:	static int empty_dir_getattr(const struct path *, struct kstat *, u32, unsigned int);
1277:	static ssize_t empty_dir_listxattr(struct dentry *, char *, size_t);
1290:	static loff_t empty_dir_llseek(struct file *, loff_t, int);
1259:	static struct dentry *empty_dir_lookup(struct inode *, struct dentry *, unsigned int);
1296:	static int empty_dir_readdir(struct file *, struct dir_context *);
1272:	static int empty_dir_setattr(struct dentry *, struct iattr *);
95:	static struct dentry *scan_positives(struct dentry *, struct list_head *, loff_t, struct dentry *);

File fs/locks.c:
1444:	int __break_lease(struct inode *, unsigned int, unsigned int);
1986:	long __ia32_sys_flock(const struct pt_regs *);
1986:	long __x64_sys_flock(const struct pt_regs *);
1603:	int fcntl_getlease(struct file *);
2118:	int fcntl_getlk(struct file *, unsigned int, struct flock *);
1913:	int fcntl_setlease(unsigned int, struct file *, long);
2244:	int fcntl_setlk(unsigned int, struct file *, unsigned int, struct flock *);
1820:	int generic_setlease(struct file *, long, struct file_lock **, void **);
1558:	void lease_get_mtime(struct inode *, struct timespec64 *);
1359:	int lease_modify(struct file_lock *, int, struct list_head *);
301:	struct file_lock *locks_alloc_lock(void);
366:	void locks_copy_conflock(struct file_lock *, struct file_lock *);
385:	void locks_copy_lock(struct file_lock *, struct file_lock *);
331:	void locks_free_lock(struct file_lock *);
282:	void locks_free_lock_context(struct inode *);
355:	void locks_init_lock(struct file_lock *);
1952:	int locks_lock_inode_wait(struct inode *, struct file_lock *);
312:	void locks_release_private(struct file_lock *);
2549:	void locks_remove_file(struct file *);
2464:	void locks_remove_posix(struct file *, fl_owner_t);
1218:	int posix_lock_file(struct file *, struct file_lock *, struct file_lock *);
813:	void posix_test_lock(struct file *, struct file_lock *);
2580:	int posix_unblock_lock(struct file_lock *);
2737:	void show_fd_locks(struct seq_file *, struct file *, struct files_struct *);
2601:	int vfs_cancel_lock(struct file *, struct file_lock *);
2192:	int vfs_lock_file(struct file *, unsigned int, struct file_lock *, struct file_lock *);
1869:	int vfs_setlease(struct file *, long, struct file_lock **, void **);
2042:	int vfs_test_lock(struct file *, struct file_lock *);
666:	static void __locks_delete_block(struct file_lock *);
690:	static void __locks_insert_block(struct file_lock *, struct file_lock *);
2717:	static void __show_fd_locks(struct seq_file *, struct list_head *, int *, struct file *, struct files_struct *);
1417:	static bool any_leases_conflict(struct file_lock *, struct inode *);
2201:	static int do_lock_file_wait(struct file *, unsigned int, struct file_lock *);
2797:	static int filelock_init(void);
455:	static int flock64_to_posix_lock(struct file *, struct file_lock *, struct flock64 *);
917:	static int flock_lock_inode(struct inode *, struct file_lock *);
419:	static struct file_lock *flock_make_lock(struct file *, unsigned int);
570:	static struct file_lock *lease_alloc(struct file *, long);
520:	static bool lease_break_callback(struct file_lock *);
527:	static void lease_setup(struct file_lock *, void **);
1407:	static bool leases_conflict(struct file_lock *, struct file_lock *);
2619:	static void lock_get_status(struct seq_file *, struct file_lock *, loff_t, char *);
266:	static void locks_check_ctx_file_list(struct file *, struct list_head *, char *);
673:	static void locks_delete_block(struct file_lock *);
757:	static void locks_delete_lock_ctx(struct file_lock *, struct list_head *);
344:	static void locks_dispose_list(struct list_head *);
239:	static void locks_dump_ctx_list(struct list_head *, char *);
207:	static struct file_lock_context *locks_get_lock_context(struct inode *, int);
701:	static void locks_insert_block(struct file_lock *, struct file_lock *);
742:	static void locks_insert_lock_ctx(struct file_lock *, struct list_head *);
2766:	static void *locks_next(struct seq_file *, void *, loff_t *);
2501:	static void locks_remove_flock(struct file *, struct file_lock_context *);
2698:	static int locks_show(struct seq_file *, void *);
2755:	static void *locks_start(struct seq_file *, loff_t *);
2774:	static void locks_stop(struct seq_file *, void *);
2058:	static pid_t locks_translate_pid(struct pid_namespace *, struct file_lock *, struct file_lock *);
749:	static void locks_unlink_lock_ctx(struct file_lock *);
714:	static void locks_wake_up_blocks(struct file_lock *);
988:	static int posix_lock_inode(struct inode *, struct file_lock *, struct file_lock *);
781:	static int posix_locks_conflict(struct file_lock *, struct file_lock *);
2788:	static int proc_locks_init(void);
1391:	static void time_out_leases(struct inode *, struct list_head *);

File fs/mpage.c:
491:	void clean_page_buffers(struct page *);
418:	int mpage_readpage(struct page *, get_block_t *);
385:	int mpage_readpages(struct address_space *, struct list_head *, unsigned int, get_block_t *);
742:	int mpage_writepage(struct page *, get_block_t *, struct writeback_control *);
712:	int mpage_writepages(struct address_space *, struct writeback_control *, get_block_t *);
496:	static int __mpage_writepage(struct page *, struct writeback_control *, void *);
461:	static void clean_buffers(struct page *, unsigned int);
156:	static struct bio *do_mpage_readpage(struct mpage_readpage_args *);
71:	static struct bio *mpage_alloc(sector_t, int, gfp_t, struct block_device *, struct block_device *);
47:	static void mpage_end_io(struct bio *);

File fs/namei.c:
2766:	int __check_sticky(struct inode *, struct inode *);
4345:	long __ia32_sys_link(const struct pt_regs *);
4339:	long __ia32_sys_linkat(const struct pt_regs *);
3863:	long __ia32_sys_mkdir(const struct pt_regs *);
3858:	long __ia32_sys_mkdirat(const struct pt_regs *);
3802:	long __ia32_sys_mknod(const struct pt_regs *);
3796:	long __ia32_sys_mknodat(const struct pt_regs *);
4680:	long __ia32_sys_rename(const struct pt_regs *);
4674:	long __ia32_sys_renameat(const struct pt_regs *);
4668:	long __ia32_sys_renameat2(const struct pt_regs *);
3966:	long __ia32_sys_rmdir(const struct pt_regs *);
4180:	long __ia32_sys_symlink(const struct pt_regs *);
4174:	long __ia32_sys_symlinkat(const struct pt_regs *);
4117:	long __ia32_sys_unlink(const struct pt_regs *);
4106:	long __ia32_sys_unlinkat(const struct pt_regs *);
4830:	int __page_symlink(struct inode *, const char *, int, int);
4345:	long __x64_sys_link(const struct pt_regs *);
4339:	long __x64_sys_linkat(const struct pt_regs *);
3863:	long __x64_sys_mkdir(const struct pt_regs *);
3858:	long __x64_sys_mkdirat(const struct pt_regs *);
3802:	long __x64_sys_mknod(const struct pt_regs *);
3796:	long __x64_sys_mknodat(const struct pt_regs *);
4680:	long __x64_sys_rename(const struct pt_regs *);
4674:	long __x64_sys_renameat(const struct pt_regs *);
4668:	long __x64_sys_renameat2(const struct pt_regs *);
3966:	long __x64_sys_rmdir(const struct pt_regs *);
4180:	long __x64_sys_symlink(const struct pt_regs *);
4174:	long __x64_sys_symlinkat(const struct pt_regs *);
4117:	long __x64_sys_unlink(const struct pt_regs *);
4106:	long __x64_sys_unlinkat(const struct pt_regs *);
3583:	struct file *do_file_open_root(struct dentry *, struct vfsmount *, const char *, const struct open_flags *);
3566:	struct file *do_filp_open(int, struct filename *, const struct open_flags *);
4274:	int do_linkat(int, const char *, int, const char *, int);
3833:	long do_mkdirat(int, const char *, umode_t);
3752:	long do_mknodat(int, const char *, umode_t, unsigned int);
3907:	long do_rmdir(int, const char *);
4143:	long do_symlinkat(const char *, int, const char *);
4035:	long do_unlinkat(int, struct filename *);
3691:	void done_path_create(struct path *, struct dentry *);
2344:	int filename_lookup(int, struct filename *, unsigned int, struct path *, struct path *);
1411:	int follow_down(struct path *);
1286:	int follow_down_one(struct path *);
1113:	int follow_up(struct path *);
1946:	unsigned int full_name_hash(const void *, const char *, unsigned int);
334:	int generic_permission(struct inode *, int);
209:	struct filename *getname(const char *);
129:	struct filename *getname_flags(const char *, int, int *);
215:	struct filename *getname_kernel(const char *);
1967:	u64 hashlen_string(const void *, const char *);
427:	int inode_permission(struct inode *, int);
2440:	int kern_path(const char *, unsigned int, struct path *);
3683:	struct dentry *kern_path_create(int, const char *, struct path *, unsigned int);
2414:	struct dentry *kern_path_locked(const char *, struct path *);
2759:	int kern_path_mountpoint(int, const char *, struct path *, unsigned int);
2865:	struct dentry *lock_rename(struct dentry *, struct dentry *);
2538:	struct dentry *lookup_one_len(const char *, struct dentry *, int);
2567:	struct dentry *lookup_one_len_unlocked(const char *, struct dentry *, int);
2948:	bool may_open_dev(const struct path *);
870:	void nd_jump_link(struct path *);
4781:	const char *page_get_link(struct dentry *, struct inode *, struct delayed_call *);
4810:	void page_put_link(void *);
4816:	int page_readlink(struct dentry *, char *, int);
4862:	int page_symlink(struct inode *, const char *, int);
469:	void path_get(const struct path *);
2586:	int path_pts(struct path *);
482:	void path_put(const struct path *);
250:	void putname(struct filename *);
4699:	int readlink_copy(char *, int, const char *);
2512:	struct dentry *try_lookup_one_len(const char *, struct dentry *, int);
2896:	void unlock_rename(struct dentry *, struct dentry *);
2613:	int user_path_at_empty(int, const char *, unsigned int, struct path *, int *);
3700:	struct dentry *user_path_create(int, const char *, struct path *, unsigned int);
2752:	int user_path_mountpoint_at(int, const char *, unsigned int, struct path *);
2906:	int vfs_create(struct inode *, struct dentry *, umode_t, bool);
4766:	const char *vfs_get_link(struct dentry *, struct delayed_call *);
4204:	int vfs_link(struct dentry *, struct inode *, struct dentry *, struct inode **);
3807:	int vfs_mkdir(struct inode *, struct dentry *, umode_t);
3707:	int vfs_mknod(struct inode *, struct dentry *, umode_t, dev_t);
2927:	int vfs_mkobj(struct dentry *, umode_t, int (*)(struct dentry *, umode_t, void *), void *);
2455:	int vfs_path_lookup(struct dentry *, struct vfsmount *, const char *, unsigned int, struct path *);
4724:	int vfs_readlink(struct dentry *, char *, int);
4400:	int vfs_rename(struct inode *, struct dentry *, struct inode *, struct dentry *, struct inode **, unsigned int);
3868:	int vfs_rmdir(struct inode *, struct dentry *);
4122:	int vfs_symlink(struct inode *, struct dentry *, const char *);
3445:	struct dentry *vfs_tmpfile(struct dentry *, umode_t, int);
3989:	int vfs_unlink(struct inode *, struct dentry *, struct inode **);
4685:	int vfs_whiteout(struct inode *, struct dentry *);
1312:	static bool __follow_mount_rcu(struct path *, struct inode **, unsigned int *, struct nameidata *, struct nameidata *);
1529:	static struct dentry *__lookup_hash(const struct qstr *, struct dentry *, unsigned int);
1650:	static struct dentry *__lookup_slow(const struct qstr *, struct dentry *, unsigned int);
535:	static int __nd_alloc_stack(struct nameidata *);
782:	static int complete_walk(struct nameidata *);
764:	static int d_revalidate(struct dentry *, unsigned int);
4525:	static int do_renameat2(int, const char *, int, const char *, unsigned int);
3612:	static struct dentry *filename_create(int, struct filename *, struct path *, unsigned int);
2717:	static int filename_mountpoint(int, struct filename *, struct path *, unsigned int);
2386:	static struct filename *filename_parentat(int, struct filename *, unsigned int, struct path *, struct qstr *, int *);
1352:	static int follow_dotdot_rcu(struct nameidata *);
1221:	static int follow_managed(struct path *, struct nameidata *);
1458:	static void follow_mount(struct path *);
632:	static bool legitimize_links(struct nameidata *);
615:	static bool legitimize_path(struct path *, unsigned int, struct nameidata *);
2076:	static int link_path_walk(const char *, struct nameidata *);
1505:	static struct dentry *lookup_dcache(const struct qstr *, struct dentry *, unsigned int);
1555:	static int lookup_fast(struct nameidata *, struct path *, struct inode **, unsigned int *);
2466:	static int lookup_one_len_common(const char *, struct dentry *, int, struct qstr *);
1689:	static struct dentry *lookup_slow(const struct qstr *, struct dentry *, unsigned int);
2798:	static int may_delete(struct inode *, struct dentry *, bool);
2954:	static int may_open(const struct path *, int, int);
846:	static int nd_jump_root(struct nameidata *);
562:	static bool path_connected(const struct path *);
2180:	static const char *path_init(struct nameidata *, unsigned int);
2314:	static int path_lookupat(struct nameidata *, unsigned int, struct path *);
2697:	static int path_mountpoint(struct nameidata *, unsigned int, struct path *);
3527:	static struct file *path_openat(struct nameidata *, const struct open_flags *, unsigned int);
1471:	static int path_parent_directory(struct path *);
2370:	static int path_parentat(struct nameidata *, unsigned int, struct path *);
1726:	static int pick_link(struct nameidata *, struct path *, struct inode *, unsigned int);
524:	static void restore_nameidata(void);
810:	static void set_root(struct nameidata *);
593:	static void terminate_walk(struct nameidata *);
2263:	static const char *trailing_symlink(struct nameidata *);
668:	static int unlazy_walk(struct nameidata *);
1797:	static int walk_component(struct nameidata *, int);

File fs/namespace.c:
1645:	void __detach_mounts(struct dentry *);
3112:	long __ia32_sys_mount(const struct pt_regs *);
1745:	long __ia32_sys_oldumount(const struct pt_regs *);
3168:	long __ia32_sys_pivot_root(const struct pt_regs *);
1735:	long __ia32_sys_umount(const struct pt_regs *);
687:	bool __is_local_mountpoint(struct dentry *);
569:	int __legitimize_mnt(struct vfsmount *, unsigned int);
614:	struct mount *__lookup_mnt(struct vfsmount *, struct dentry *);
435:	void __mnt_drop_write(struct vfsmount *);
457:	void __mnt_drop_write_file(struct file *);
249:	int __mnt_is_readonly(struct vfsmount *);
318:	int __mnt_want_write(struct vfsmount *);
400:	int __mnt_want_write_file(struct file *);
3112:	long __x64_sys_mount(const struct pt_regs *);
1745:	long __x64_sys_oldumount(const struct pt_regs *);
3168:	long __x64_sys_pivot_root(const struct pt_regs *);
1735:	long __x64_sys_umount(const struct pt_regs *);
1891:	struct vfsmount *clone_private_mount(const struct path *);
1844:	struct vfsmount *collect_mounts(const struct path *);
2955:	struct mnt_namespace *copy_mnt_ns(unsigned long, struct mnt_namespace *, struct user_namespace *, struct fs_struct *);
2749:	void *copy_mount_options(const void *);
2781:	char *copy_mount_string(const void *);
1777:	struct mount *copy_tree(struct mount *, struct dentry *, int);
1962:	int count_mounts(struct mnt_namespace *, struct mount *);
3369:	bool current_chrooted(void);
2800:	long do_mount(const char *, const char *, const char *, unsigned long, void *);
1859:	void drop_collected_mounts(struct vfsmount *);
2569:	int finish_automount(struct vfsmount *, struct path *);
3123:	bool is_path_reachable(struct mount *, struct dentry *, const struct path *);
1920:	int iterate_mounts(int (*)(struct vfsmount *, void *), void *, struct vfsmount *);
3338:	struct vfsmount *kern_mount_data(struct file_system_type *, void *);
3353:	void kern_unmount(struct vfsmount *);
3078:	int ksys_mount(char *, char *, char *, unsigned long, void *);
1695:	int ksys_umount(char *, int);
597:	bool legitimize_mnt(struct vfsmount *, unsigned int);
641:	struct vfsmount *lookup_mnt(const struct path *);
2619:	void mark_mounts_for_expiry(struct list_head *);
1402:	int may_umount(struct vfsmount *);
1365:	int may_umount_tree(struct vfsmount *);
884:	void mnt_change_mountpoint(struct mount *, struct mountpoint *, struct mount *);
1251:	struct vfsmount *mnt_clone_internal(const struct path *);
381:	int mnt_clone_write(struct vfsmount *);
1343:	void mnt_cursor_del(struct mnt_namespace *, struct mount *);
450:	void mnt_drop_write(struct vfsmount *);
462:	void mnt_drop_write_file(struct file *);
153:	unsigned int mnt_get_count(struct mount *);
3296:	void mnt_init(void);
3487:	bool mnt_may_suid(struct vfsmount *);
130:	void mnt_release_group_id(struct mount *);
2604:	void mnt_set_expiry(struct vfsmount *, struct list_head *);
854:	void mnt_set_mountpoint(struct mount *, struct mountpoint *, struct mount *);
357:	int mnt_want_write(struct vfsmount *);
415:	int mnt_want_write_file(struct file *);
1214:	struct vfsmount *mntget(struct vfsmount *);
1202:	void mntput(struct vfsmount *);
3048:	struct dentry *mount_subtree(struct vfsmount *, const char *);
3364:	bool our_mnt(struct vfsmount *);
1232:	bool path_is_mountpoint(const struct path *);
3133:	bool path_is_under(const struct path *, const struct path *);
3330:	void put_mnt_ns(struct mnt_namespace *);
518:	int sb_prepare_remount_readonly(struct super_block *);
1759:	struct mnt_namespace *to_mnt_ns(struct ns_common *);
968:	struct vfsmount *vfs_kern_mount(struct file_system_type *, int, const char *, void *);
1002:	struct vfsmount *vfs_submount(const struct dentry *, struct file_system_type *, const char *, void *);
866:	static void __attach_mnt(struct mount *, struct mount *);
1125:	static void __cleanup_mnt(struct callback_head *);
2916:	static struct mnt_namespace *alloc_mnt_ns(struct user_namespace *);
177:	static struct mount *alloc_vfsmnt(const char *);
2047:	static int attach_recursive_mnt(struct mount *, struct mount *, struct mountpoint *, struct path *);
1935:	static void cleanup_group_ids(struct mount *, struct mount *);
1103:	static void cleanup_mnt(struct mount *);
1016:	static struct mount *clone_mnt(struct mount *, struct dentry *, int);
919:	static void commit_tree(struct mount *);
3033:	static struct mnt_namespace *create_mnt_ns(struct vfsmount *);
563:	static void delayed_free_vfsmnt(struct callback_head *);
1131:	static void delayed_mntput(struct work_struct *);
2488:	static int do_add_mount(struct mount *, struct path *, int);
169:	static void drop_mountpoint(struct fs_pin *);
2896:	static void free_mnt_ns(struct mnt_namespace *);
554:	static void free_vfsmnt(struct mount *);
727:	static struct mountpoint *get_mountpoint(struct dentry *);
2168:	static int graft_tree(struct mount *, struct mount *, struct mountpoint *);
1868:	static bool has_locked_children(struct mount *, struct dentry *);
1945:	static int invent_group_ids(struct mount *, bool);
2127:	static struct mountpoint *lock_mount(struct path *);
713:	static struct mountpoint *lookup_mountpoint(struct dentry *);
1303:	static void *m_next(struct seq_file *, void *, loff_t *);
1329:	static int m_show(struct seq_file *, void *);
1284:	static void *m_start(struct seq_file *, loff_t *);
1312:	static void m_stop(struct seq_file *, void *);
277:	static unsigned int mnt_get_writers(struct mount *);
1262:	static struct mount *mnt_list_next(struct mnt_namespace *, struct list_head *);
3500:	static struct ns_common *mntns_get(struct task_struct *);
3521:	static int mntns_install(struct nsproxy *, struct ns_common *);
3560:	static struct user_namespace *mntns_owner(struct ns_common *);
3516:	static void mntns_put(struct ns_common *);
1141:	static void mntput_no_expire(struct mount *);
1418:	static void namespace_unlock(void);
777:	static void put_mountpoint(struct mountpoint *);
42:	static int set_mhash_entries(char *);
52:	static int set_mphash_entries(char *);
798:	static void touch_mnt_namespace(struct mnt_namespace *);
1478:	static void umount_tree(struct mount *, enum umount_tree_flags);
820:	static void unhash_mnt(struct mount *);
2156:	static void unlock_mount(struct mountpoint *);

File fs/nls/nls_ascii.c:
137:	static int char2uni(const unsigned char *, int, wchar_t *);
158:	static void exit_nls_ascii(void);
153:	static int init_nls_ascii(void);
120:	static int uni2char(wchar_t, unsigned char *, int);

File fs/nls/nls_base.c:
235:	int __register_nls(struct nls_table *, struct module *);
291:	struct nls_table *load_nls(char *);
532:	struct nls_table *load_nls_default(void);
296:	void unload_nls(struct nls_table *);
258:	int unregister_nls(struct nls_table *);
186:	int utf16s_to_utf8s(const wchar_t *, int, enum utf16_endian, u8 *, int);
86:	int utf32_to_utf8(unicode_t, u8 *, int);
55:	int utf8_to_utf32(const u8 *, int, unicode_t *);
132:	int utf8s_to_utf16s(const u8 *, int, enum utf16_endian, wchar_t *, int);
515:	static int char2uni(const unsigned char *, int, wchar_t *);
275:	static struct nls_table *find_nls(char *);
498:	static int uni2char(wchar_t, unsigned char *, int);

File fs/nls/nls_cp437.c:
358:	static int char2uni(const unsigned char *, int, wchar_t *);
379:	static void exit_nls_cp437(void);
374:	static int init_nls_cp437(void);
341:	static int uni2char(wchar_t, unsigned char *, int);

File fs/notify/dnotify/dnotify.c:
149:	void dnotify_flush(struct file *, fl_owner_t);
257:	int fcntl_dirnotify(int, struct file *, unsigned long);
126:	static void dnotify_free_mark(struct fsnotify_mark *);
81:	static int dnotify_handle_event(struct fsnotify_group *, struct inode *, u32, const void *, int, const unsigned char *, u32, struct fsnotify_iter_info *);
386:	static int dnotify_init(void);
54:	static void dnotify_recalc_inode_mask(struct fsnotify_mark *);

File fs/notify/fanotify/fanotify.c:
146:	struct fanotify_event_info *fanotify_alloc_event(struct fsnotify_group *, struct inode *, u32, const struct path *);
273:	static void fanotify_free_event(struct fsnotify_event *);
264:	static void fanotify_free_group_priv(struct fsnotify_group *);
288:	static void fanotify_free_mark(struct fsnotify_mark *);
195:	static int fanotify_handle_event(struct fsnotify_group *, struct inode *, u32, const void *, int, const unsigned char *, u32, struct fsnotify_iter_info *);
36:	static int fanotify_merge(struct list_head *, struct fsnotify_event *);

File fs/notify/fanotify/fanotify_user.c:
921:	long __ia32_compat_sys_fanotify_mark(const struct pt_regs *);
688:	long __ia32_sys_fanotify_init(const struct pt_regs *);
913:	long __ia32_sys_fanotify_mark(const struct pt_regs *);
688:	long __x64_sys_fanotify_init(const struct pt_regs *);
913:	long __x64_sys_fanotify_mark(const struct pt_regs *);
806:	static int do_fanotify_mark(int, unsigned int, __u64, int, const char *);
634:	static int fanotify_add_mark(struct fsnotify_group *, fsnotify_connp_t *, unsigned int, __u32, unsigned int);
423:	static long fanotify_ioctl(struct file *, unsigned int, unsigned long);
249:	static __poll_t fanotify_poll(struct file *, poll_table *);
263:	static ssize_t fanotify_read(struct file *, char *, size_t, loff_t *);
370:	static int fanotify_release(struct inode *, struct file *);
534:	static int fanotify_remove_mark(struct fsnotify_group *, fsnotify_connp_t *, __u32, unsigned int);
941:	static int fanotify_user_setup(void);
344:	static ssize_t fanotify_write(struct file *, const char *, size_t, loff_t *);

File fs/notify/fdinfo.c:
138:	void fanotify_show_fdinfo(struct seq_file *, struct file *);
103:	void inotify_show_fdinfo(struct seq_file *, struct file *);
112:	static void fanotify_fdinfo(struct seq_file *, struct fsnotify_mark *);
76:	static void inotify_fdinfo(struct seq_file *, struct fsnotify_mark *);
25:	static void show_fdinfo(struct seq_file *, void (*)(struct seq_file *, struct fsnotify_mark *), struct file *);
42:	static void show_mark_fhandle(struct seq_file *, struct inode *);

File fs/notify/fsnotify.c:
33:	void __fsnotify_inode_delete(struct inode *);
150:	int __fsnotify_parent(const struct path *, struct dentry *, __u32);
112:	void __fsnotify_update_child_dentry_flags(struct inode *);
39:	void __fsnotify_vfsmount_delete(struct vfsmount *);
322:	int fsnotify(struct inode *, __u32, const void *, int, const unsigned char *, u32);
51:	void fsnotify_unmount_inodes(struct super_block *);
392:	static int fsnotify_init(void);

File fs/notify/group.c:
128:	struct fsnotify_group *fsnotify_alloc_group(const struct fsnotify_ops *);
62:	void fsnotify_destroy_group(struct fsnotify_group *);
154:	int fsnotify_fasync(int, struct file *, int);
111:	void fsnotify_get_group(struct fsnotify_group *);
49:	void fsnotify_group_stop_queueing(struct fsnotify_group *);
119:	void fsnotify_put_group(struct fsnotify_group *);

File fs/notify/inotify/inotify_fsnotify.c:
67:	int inotify_handle_event(struct fsnotify_group *, struct inode *, u32, const void *, int, const unsigned char *, u32, struct fsnotify_iter_info *);
152:	static int idr_callback(int, void *, void *);
189:	static void inotify_free_event(struct fsnotify_event *);
180:	static void inotify_free_group_priv(struct fsnotify_group *);
195:	static void inotify_free_mark(struct fsnotify_mark *);
140:	static void inotify_freeing_mark(struct fsnotify_mark *, struct fsnotify_group *);
58:	static int inotify_merge(struct list_head *, struct fsnotify_event *);

File fs/notify/inotify/inotify_user.c:
698:	long __ia32_sys_inotify_add_watch(const struct pt_regs *);
688:	long __ia32_sys_inotify_init1(const struct pt_regs *);
761:	long __ia32_sys_inotify_rm_watch(const struct pt_regs *);
698:	long __x64_sys_inotify_add_watch(const struct pt_regs *);
693:	long __x64_sys_inotify_init(const struct pt_regs *);
688:	long __x64_sys_inotify_init1(const struct pt_regs *);
761:	long __x64_sys_inotify_rm_watch(const struct pt_regs *);
485:	void inotify_ignored_and_remove_idr(struct fsnotify_mark *, struct fsnotify_group *);
663:	static int do_inotify_init(int);
345:	static int inotify_find_inode(const char *, struct path *, unsigned int);
400:	static struct inotify_inode_mark *inotify_idr_find(struct fsnotify_group *, int);
379:	static struct inotify_inode_mark *inotify_idr_find_locked(struct fsnotify_group *, int);
286:	static long inotify_ioctl(struct file *, unsigned int, unsigned long);
111:	static __poll_t inotify_poll(struct file *, poll_table *);
222:	static ssize_t inotify_read(struct file *, char *, size_t, loff_t *);
274:	static int inotify_release(struct inode *, struct file *);
417:	static void inotify_remove_from_idr(struct fsnotify_group *, struct inotify_inode_mark *);
609:	static int inotify_update_watch(struct fsnotify_group *, struct inode *, u32);
801:	static int inotify_user_setup(void);

File fs/notify/mark.c:
646:	int fsnotify_add_mark(struct fsnotify_mark *, fsnotify_connp_t *, unsigned int, int);
603:	int fsnotify_add_mark_locked(struct fsnotify_mark *, fsnotify_connp_t *, unsigned int, int);
685:	void fsnotify_clear_marks_by_group(struct fsnotify_group *, unsigned int);
462:	int fsnotify_compare_groups(struct fsnotify_group *, struct fsnotify_group *);
121:	__u32 fsnotify_conn_mask(struct fsnotify_mark_connector *);
434:	void fsnotify_destroy_mark(struct fsnotify_mark *, struct fsnotify_group *);
730:	void fsnotify_destroy_marks(fsnotify_connp_t *);
379:	void fsnotify_detach_mark(struct fsnotify_mark *);
662:	struct fsnotify_mark *fsnotify_find_mark(fsnotify_connp_t *, struct fsnotify_group *);
360:	void fsnotify_finish_user_wait(struct fsnotify_iter_info *);
412:	void fsnotify_free_mark(struct fsnotify_mark *);
106:	void fsnotify_get_mark(struct fsnotify_mark *);
771:	void fsnotify_init_mark(struct fsnotify_mark *, struct fsnotify_group *);
335:	bool fsnotify_prepare_user_wait(struct fsnotify_iter_info *);
235:	void fsnotify_put_mark(struct fsnotify_mark *);
151:	void fsnotify_recalc_mask(struct fsnotify_mark_connector *);
804:	void fsnotify_wait_marks_destroyed(void);
129:	static void __fsnotify_recalc_mask(struct fsnotify_mark_connector *);
165:	static void fsnotify_connector_destroy_workfn(struct work_struct *);
182:	static void *fsnotify_detach_connector_from_object(struct fsnotify_mark_connector *, unsigned int *);
218:	static void fsnotify_drop_object(unsigned int, void *);
207:	static void fsnotify_final_mark_destroy(struct fsnotify_mark *);
514:	static struct fsnotify_mark_connector *fsnotify_grab_connector(fsnotify_connp_t *);
785:	static void fsnotify_mark_destroy_workfn(struct work_struct *);
320:	static void fsnotify_put_mark_wake(struct fsnotify_mark *);

File fs/notify/notification.c:
97:	int fsnotify_add_event(struct fsnotify_group *, struct fsnotify_event *, int (*)(struct list_head *, struct fsnotify_event *));
70:	void fsnotify_destroy_event(struct fsnotify_group *, struct fsnotify_event *);
184:	void fsnotify_flush_notify(struct fsnotify_group *);
57:	u32 fsnotify_get_cookie(void);
210:	void fsnotify_init_event(struct fsnotify_event *, struct inode *, u32);
64:	bool fsnotify_notify_queue_is_empty(struct fsnotify_group *);
172:	struct fsnotify_event *fsnotify_peek_first_event(struct fsnotify_group *);
148:	struct fsnotify_event *fsnotify_remove_first_event(struct fsnotify_group *);

File fs/nsfs.c:
217:	int ns_get_name(char *, size_t, struct task_struct *, const struct proc_ns_operations *);
134:	void *ns_get_path(struct path *, struct task_struct *, const struct proc_ns_operations *);
105:	void *ns_get_path_cb(struct path *, ns_get_path_helper_t *, void *);
276:	void nsfs_init(void);
145:	int open_related_ns(struct ns_common *, struct ns_common *(*)(struct ns_common *));
232:	struct file *proc_ns_fget(int);
54:	static void *__ns_get_path(struct path *, struct ns_common *);
22:	static char *ns_dname(struct dentry *, char *, int);
127:	static struct ns_common *ns_get_path_task(void *);
188:	static long ns_ioctl(struct file *, unsigned int, unsigned long);
31:	static void ns_prune_dentry(struct dentry *);
47:	static void nsfs_evict(struct inode *);
264:	static struct dentry *nsfs_mount(struct file_system_type *, int, const char *, void *);
250:	static int nsfs_show_path(struct seq_file *, struct dentry *);

File fs/open.c:
1120:	long __ia32_compat_sys_open(const struct pt_regs *);
1129:	long __ia32_compat_sys_openat(const struct pt_regs *);
148:	long __ia32_compat_sys_truncate(const struct pt_regs *);
447:	long __ia32_sys_access(const struct pt_regs *);
478:	long __ia32_sys_chdir(const struct pt_regs *);
614:	long __ia32_sys_chmod(const struct pt_regs *);
699:	long __ia32_sys_chown(const struct pt_regs *);
538:	long __ia32_sys_chroot(const struct pt_regs *);
1179:	long __ia32_sys_close(const struct pt_regs *);
1141:	long __ia32_sys_creat(const struct pt_regs *);
442:	long __ia32_sys_faccessat(const struct pt_regs *);
337:	long __ia32_sys_fallocate(const struct pt_regs *);
483:	long __ia32_sys_fchdir(const struct pt_regs *);
585:	long __ia32_sys_fchmod(const struct pt_regs *);
608:	long __ia32_sys_fchmodat(const struct pt_regs *);
730:	long __ia32_sys_fchown(const struct pt_regs *);
693:	long __ia32_sys_fchownat(const struct pt_regs *);
202:	long __ia32_sys_ftruncate(const struct pt_regs *);
704:	long __ia32_sys_lchown(const struct pt_regs *);
1098:	long __ia32_sys_open(const struct pt_regs *);
1106:	long __ia32_sys_openat(const struct pt_regs *);
142:	long __ia32_sys_truncate(const struct pt_regs *);
447:	long __x64_sys_access(const struct pt_regs *);
478:	long __x64_sys_chdir(const struct pt_regs *);
614:	long __x64_sys_chmod(const struct pt_regs *);
699:	long __x64_sys_chown(const struct pt_regs *);
538:	long __x64_sys_chroot(const struct pt_regs *);
1179:	long __x64_sys_close(const struct pt_regs *);
1141:	long __x64_sys_creat(const struct pt_regs *);
442:	long __x64_sys_faccessat(const struct pt_regs *);
337:	long __x64_sys_fallocate(const struct pt_regs *);
483:	long __x64_sys_fchdir(const struct pt_regs *);
585:	long __x64_sys_fchmod(const struct pt_regs *);
608:	long __x64_sys_fchmodat(const struct pt_regs *);
730:	long __x64_sys_fchown(const struct pt_regs *);
693:	long __x64_sys_fchownat(const struct pt_regs *);
202:	long __x64_sys_ftruncate(const struct pt_regs *);
704:	long __x64_sys_lchown(const struct pt_regs *);
1098:	long __x64_sys_open(const struct pt_regs *);
1106:	long __x64_sys_openat(const struct pt_regs *);
142:	long __x64_sys_truncate(const struct pt_regs *);
1197:	long __x64_sys_vhangup(const struct pt_regs *);
946:	int build_open_flags(int, umode_t, struct open_flags *);
905:	struct file *dentry_open(const struct path *, int, const struct cred *);
347:	long do_faccessat(int, const char *, int);
590:	int do_fchmodat(int, const char *, umode_t);
661:	int do_fchownat(int, const char *, uid_t, gid_t, int);
154:	long do_sys_ftruncate(unsigned int, loff_t, int);
1070:	long do_sys_open(int, const char *, int, umode_t);
120:	long do_sys_truncate(const char *, loff_t);
37:	int do_truncate(struct dentry *, loff_t, unsigned int, struct file *);
1028:	struct file *file_open_name(struct filename *, int, umode_t);
1059:	struct file *file_open_root(struct dentry *, struct vfsmount *, const char *, int, umode_t);
887:	char *file_path(struct file *, char *, int);
1152:	int filp_close(struct file *, fl_owner_t);
1046:	struct file *filp_open(const char *, int, umode_t);
880:	int finish_no_open(struct file *, struct dentry *);
856:	int finish_open(struct file *, struct dentry *, int (*)(struct inode *, struct file *));
1212:	int generic_file_open(struct inode *, struct file *);
452:	int ksys_chdir(const char *);
505:	int ksys_chroot(const char *);
325:	int ksys_fallocate(int, int, loff_t, loff_t);
572:	int ksys_fchmod(unsigned int, umode_t);
710:	int ksys_fchown(unsigned int, uid_t, gid_t);
1227:	int nonseekable_open(struct inode *, struct file *);
928:	struct file *open_with_fake_path(const struct path *, int, struct inode *, const struct cred *);
1244:	int stream_open(struct inode *, struct file *);
228:	int vfs_fallocate(struct file *, int, loff_t, loff_t);
899:	int vfs_open(const struct path *, struct file *);
68:	long vfs_truncate(const struct path *, loff_t);
543:	static int chmod_common(const struct path *, umode_t);
619:	static int chown_common(uid_t, gid_t, const struct path *);
735:	static int do_dentry_open(struct file *, struct inode *, int (*)(struct inode *, struct file *));

File fs/pipe.c:
878:	long __ia32_sys_pipe(const struct pt_regs *);
873:	long __ia32_sys_pipe2(const struct pt_regs *);
878:	long __x64_sys_pipe(const struct pt_regs *);
873:	long __x64_sys_pipe2(const struct pt_regs *);
653:	struct pipe_inode_info *alloc_pipe_info(void);
770:	int create_pipe_files(struct file **, int);
836:	int do_pipe_flags(int *, int);
698:	void free_pipe_info(struct pipe_inode_info *);
221:	int generic_pipe_buf_confirm(struct pipe_inode_info *, struct pipe_buffer *);
206:	bool generic_pipe_buf_get(struct pipe_inode_info *, struct pipe_buffer *);
236:	void generic_pipe_buf_release(struct pipe_inode_info *, struct pipe_buffer *);
177:	int generic_pipe_buf_steal(struct pipe_inode_info *, struct pipe_buffer *);
1145:	struct pipe_inode_info *get_pipe_info(struct file *);
267:	void pipe_buf_mark_unmergeable(struct pipe_buffer *);
106:	void pipe_double_lock(struct pipe_inode_info *, struct pipe_inode_info *);
1150:	long pipe_fcntl(struct file *, unsigned int, unsigned long);
80:	void pipe_lock(struct pipe_inode_info *);
89:	void pipe_unlock(struct pipe_inode_info *);
121:	void pipe_wait(struct pipe_inode_info *);
1040:	unsigned int round_pipe_size(unsigned long);
801:	static int __do_pipe_flags(int *, struct file **, int);
136:	static void anon_pipe_buf_release(struct pipe_inode_info *, struct pipe_buffer *);
152:	static int anon_pipe_buf_steal(struct pipe_inode_info *, struct pipe_buffer *);
851:	static int do_pipe2(int *, int);
900:	static int fifo_open(struct inode *, struct file *);
1201:	static int init_pipe_fs(void);
648:	static bool is_unprivileged_user(void);
610:	static int pipe_fasync(int, struct file *, int);
517:	static long pipe_ioctl(struct file *, unsigned int, unsigned long);
542:	static __poll_t pipe_poll(struct file *, poll_table *);
274:	static ssize_t pipe_read(struct kiocb *, struct iov_iter *);
588:	static int pipe_release(struct inode *, struct file *);
381:	static ssize_t pipe_write(struct kiocb *, struct iov_iter *);
720:	static char *pipefs_dname(struct dentry *, char *, int);
1188:	static struct dentry *pipefs_mount(struct file_system_type *, int, const char *, void *);
572:	static void put_pipe_info(struct inode *, struct pipe_inode_info *);
883:	static int wait_for_partner(struct pipe_inode_info *, unsigned int *);

File fs/pnode.c:
122:	void change_mnt_propagation(struct mount *, int);
60:	int get_dominating_id(struct mount *, const struct path *);
293:	int propagate_mnt(struct mount *, struct mountpoint *, struct mount *, struct hlist_head *);
375:	int propagate_mount_busy(struct mount *, int);
418:	void propagate_mount_unlock(struct mount *);
541:	int propagate_umount(struct list_head *);
183:	static struct mount *next_group(struct mount *, struct mount *);
226:	static int propagate_one(struct mount *);
149:	static struct mount *propagation_next(struct mount *, struct mount *);

File fs/posix_acl.c:
536:	int __posix_acl_chmod(struct posix_acl **, gfp_t, umode_t);
518:	int __posix_acl_create(struct posix_acl **, gfp_t, umode_t *);
88:	void forget_all_cached_acls(struct inode *);
82:	void forget_cached_acl(struct inode *, int);
95:	struct posix_acl *get_acl(struct inode *, int);
37:	struct posix_acl *get_cached_acl(struct inode *, int);
56:	struct posix_acl *get_cached_acl_rcu(struct inode *, int);
176:	struct posix_acl *posix_acl_alloc(int, gfp_t);
554:	int posix_acl_chmod(struct inode *, umode_t);
581:	int posix_acl_create(struct inode *, umode_t *, struct posix_acl **, struct posix_acl **);
278:	int posix_acl_equiv_mode(const struct posix_acl *, umode_t *);
704:	void posix_acl_fix_xattr_from_user(void *, size_t);
712:	void posix_acl_fix_xattr_to_user(void *, size_t);
324:	struct posix_acl *posix_acl_from_mode(umode_t, gfp_t);
724:	struct posix_acl *posix_acl_from_xattr(struct user_namespace *, const void *, size_t);
165:	void posix_acl_init(struct posix_acl *, int);
347:	int posix_acl_permission(struct inode *, const struct posix_acl *, int);
793:	int posix_acl_to_xattr(struct user_namespace *, const struct posix_acl *, void *, size_t);
643:	int posix_acl_update_mode(struct inode *, umode_t *, struct posix_acl **);
209:	int posix_acl_valid(struct user_namespace *, const struct posix_acl *);
62:	void set_cached_acl(struct inode *, int, struct posix_acl *);
857:	int set_posix_acl(struct inode *, int, struct posix_acl *);
937:	int simple_acl_create(struct inode *, struct inode *);
921:	int simple_set_acl(struct inode *, struct posix_acl *, int);
25:	static struct posix_acl **acl_by_type(int, struct inode *);
191:	static struct posix_acl *posix_acl_clone(const struct posix_acl *, gfp_t);
415:	static int posix_acl_create_masq(struct posix_acl *, umode_t *);
665:	static void posix_acl_fix_xattr_userns(struct user_namespace *, struct user_namespace *, void *, size_t);
832:	static int posix_acl_xattr_get(const struct xattr_handler *, struct dentry *, struct inode *, const char *, void *, size_t);
898:	static bool posix_acl_xattr_list(struct dentry *);
879:	static int posix_acl_xattr_set(const struct xattr_handler *, struct dentry *, struct inode *, const char *, const void *, size_t, int);

File fs/proc/array.c:
625:	int proc_pid_statm(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
395:	int proc_pid_status(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
99:	void proc_task_name(struct seq_file *, struct task_struct *, bool);
619:	int proc_tgid_stat(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
613:	int proc_tid_stat(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
229:	void render_sigset_t(struct seq_file *, const char *, sigset_t *);
723:	static void *children_seq_next(struct seq_file *, void *, loff_t *);
746:	static int children_seq_open(struct inode *, struct file *);
710:	static int children_seq_show(struct seq_file *, void *);
718:	static void *children_seq_start(struct seq_file *, loff_t *);
734:	static void children_seq_stop(struct seq_file *, void *);
420:	static int do_task_stat(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *, int);
655:	static struct pid *get_children_pid(struct inode *, struct pid *, loff_t);
305:	static void render_cap_t(struct seq_file *, const char *, kernel_cap_t *);

File fs/proc/base.c:
883:	loff_t mem_lseek(struct file *, loff_t, int);
1852:	int pid_delete_dentry(const struct dentry *);
1782:	int pid_getattr(const struct path *, struct kstat *, u32, unsigned int);
1815:	void pid_update_inode(struct task_struct *, struct inode *);
1881:	bool proc_fill_cache(struct file *, struct dir_context *, const char *, unsigned int, instantiate_t *, struct task_struct *, const void *);
3159:	void proc_flush_task(struct task_struct *);
775:	struct mm_struct *proc_mem_open(struct inode *, unsigned int);
3195:	struct dentry *proc_pid_lookup(struct inode *, struct dentry *, unsigned int);
1745:	struct inode *proc_pid_make_inode(struct super_block *, struct task_struct *, umode_t);
3267:	int proc_pid_readdir(struct file *, struct dir_context *);
677:	int proc_setattr(struct dentry *, struct iattr *);
3670:	void set_proc_pid_nlink(void);
1687:	void task_dump_owner(struct task_struct *, umode_t, kuid_t *, kgid_t *);
1037:	static int __set_oom_adj(struct file *, int, bool);
990:	static int auxv_open(struct inode *, struct file *);
995:	static ssize_t auxv_read(struct file *, char *, size_t, loff_t *);
1578:	static int comm_open(struct inode *, struct file *);
1561:	static int comm_show(struct seq_file *, void *);
1535:	static ssize_t comm_write(struct file *, const char *, size_t, loff_t *);
1921:	static int dname_to_vma_addr(unsigned long *, unsigned long *, struct dentry *);
2745:	static int do_io_accounting(struct task_struct *, struct seq_file *, int);
915:	static int environ_open(struct inode *, struct file *);
920:	static ssize_t environ_read(struct file *, char *, size_t, loff_t *);
401:	static int lock_trace(struct task_struct *);
1959:	static int map_files_d_revalidate(struct dentry *, unsigned int);
2010:	static int map_files_get_link(struct dentry *, struct path *);
806:	static int mem_open(struct inode *, struct file *);
871:	static ssize_t mem_read(struct file *, char *, size_t, loff_t *);
899:	static int mem_release(struct inode *, struct file *);
816:	static ssize_t mem_rw(char *, size_t, loff_t *, int, struct file *);
877:	static ssize_t mem_write(struct file *, const char *, size_t, loff_t *);
3229:	static struct tgid_iter next_tgid(struct pid_namespace *, struct tgid_iter);
1017:	static ssize_t oom_adj_read(struct file *, char *, size_t, loff_t *);
1130:	static ssize_t oom_adj_write(struct file *, const char *, size_t, loff_t *);
1174:	static ssize_t oom_score_adj_read(struct file *, char *, size_t, loff_t *);
1190:	static ssize_t oom_score_adj_write(struct file *, const char *, size_t, loff_t *);
1828:	static int pid_revalidate(struct dentry *, unsigned int);
2652:	static struct dentry *proc_attr_dir_lookup(struct inode *, struct dentry *, unsigned int);
2640:	static int proc_attr_dir_readdir(struct file *, struct dir_context *);
2668:	static ssize_t proc_coredump_filter_read(struct file *, char *, size_t, loff_t *);
2695:	static ssize_t proc_coredump_filter_write(struct file *, const char *, size_t, loff_t *);
180:	static int proc_cwd_link(struct dentry *, struct path *);
1591:	static int proc_exe_link(struct dentry *, struct path *);
661:	static int proc_fd_access_allowed(struct inode *);
2850:	static int proc_gid_map_open(struct inode *, struct file *);
2805:	static int proc_id_map_open(struct inode *, struct file *, const struct seq_operations *);
2837:	static int proc_id_map_release(struct inode *, struct file *);
1227:	static ssize_t proc_loginuid_read(struct file *, char *, size_t, loff_t *);
1244:	static ssize_t proc_loginuid_write(struct file *, const char *, size_t, loff_t *);
2063:	static const char *proc_map_files_get_link(struct dentry *, struct inode *, struct delayed_call *);
2083:	static struct dentry *proc_map_files_instantiate(struct dentry *, struct task_struct *, const void *);
2106:	static struct dentry *proc_map_files_lookup(struct inode *, struct dentry *, unsigned int);
2162:	static int proc_map_files_readdir(struct file *, struct dir_context *);
549:	static int proc_oom_score(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
2539:	static int proc_pid_attr_open(struct inode *, struct file *);
2546:	static ssize_t proc_pid_attr_read(struct file *, char *, size_t, loff_t *);
2567:	static ssize_t proc_pid_attr_write(struct file *, const char *, size_t, loff_t *);
352:	static ssize_t proc_pid_cmdline_read(struct file *, char *, size_t, loff_t *);
1610:	static const char *proc_pid_get_link(struct dentry *, struct inode *, struct delayed_call *);
3175:	static struct dentry *proc_pid_instantiate(struct dentry *, struct task_struct *, const void *);
587:	static int proc_pid_limits(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
2948:	static int proc_pid_patch_state(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
710:	static int proc_pid_permission(struct inode *, int);
2936:	static int proc_pid_personality(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
1658:	static int proc_pid_readlink(struct dentry *, char *, int);
474:	static int proc_pid_schedstat(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
422:	static int proc_pid_stack(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
629:	static int proc_pid_syscall(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
380:	static int proc_pid_wchan(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
2458:	static struct dentry *proc_pident_instantiate(struct dentry *, struct task_struct *, const void *);
2482:	static struct dentry *proc_pident_lookup(struct inode *, struct dentry *, const struct pid_entry *, unsigned int);
2512:	static int proc_pident_readdir(struct file *, struct dir_context *, const struct pid_entry *, unsigned int);
2855:	static int proc_projid_map_open(struct inode *, struct file *);
197:	static int proc_root_link(struct dentry *, struct path *);
1289:	static ssize_t proc_sessionid_read(struct file *, char *, size_t, loff_t *);
2884:	static int proc_setgroups_open(struct inode *, struct file *);
2918:	static int proc_setgroups_release(struct inode *, struct file *);
762:	static int proc_single_open(struct inode *, struct file *);
744:	static int proc_single_show(struct seq_file *, void *);
3642:	static int proc_task_getattr(const struct path *, struct kstat *, u32, unsigned int);
3471:	static struct dentry *proc_task_instantiate(struct dentry *, struct task_struct *, const void *);
3490:	static struct dentry *proc_task_lookup(struct inode *, struct dentry *, unsigned int);
3603:	static int proc_task_readdir(struct file *, struct dir_context *);
3076:	static struct dentry *proc_tgid_base_lookup(struct inode *, struct dentry *, unsigned int);
3064:	static int proc_tgid_base_readdir(struct file *, struct dir_context *);
2797:	static int proc_tgid_io_accounting(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
3453:	static struct dentry *proc_tid_base_lookup(struct inode *, struct dentry *, unsigned int);
3447:	static int proc_tid_base_readdir(struct file *, struct dir_context *);
3324:	static int proc_tid_comm_permission(struct inode *, int);
2791:	static int proc_tid_io_accounting(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
2350:	static int proc_timers_open(struct inode *, struct file *);
2845:	static int proc_uid_map_open(struct inode *, struct file *);
1512:	static int sched_autogroup_open(struct inode *, struct file *);
1464:	static int sched_autogroup_show(struct seq_file *, void *);
1480:	static ssize_t sched_autogroup_write(struct file *, const char *, size_t, loff_t *);
1445:	static int sched_open(struct inode *, struct file *);
1412:	static int sched_show(struct seq_file *, void *);
1429:	static ssize_t sched_write(struct file *, const char *, size_t, loff_t *);
2316:	static int show_timer(struct seq_file *, void *);
2295:	static void *timers_next(struct seq_file *, void *, loff_t *);
2280:	static void *timers_start(struct seq_file *, loff_t *);
2301:	static void timers_stop(struct seq_file *, void *);
2445:	static int timerslack_ns_open(struct inode *, struct file *);
2414:	static int timerslack_ns_show(struct seq_file *, void *);
2372:	static ssize_t timerslack_ns_write(struct file *, const char *, size_t, loff_t *);

File fs/proc/cmdline.c:
7:	static int cmdline_proc_show(struct seq_file *, void *);
14:	static int proc_cmdline_init(void);

File fs/proc/consoles.c:
75:	static void *c_next(struct seq_file *, void *, loff_t *);
62:	static void *c_start(struct seq_file *, loff_t *);
82:	static void c_stop(struct seq_file *, void *);
94:	static int proc_consoles_init(void);
16:	static int show_console_dev(struct seq_file *, void *);

File fs/proc/cpuinfo.c:
8:	void arch_freq_prepare_all(void);
13:	static int cpuinfo_open(struct inode *, struct file *);
26:	static int proc_cpuinfo_init(void);

File fs/proc/devices.c:
34:	static void *devinfo_next(struct seq_file *, void *, loff_t *);
7:	static int devinfo_show(struct seq_file *, void *);
27:	static void *devinfo_start(struct seq_file *, loff_t *);
42:	static void devinfo_stop(struct seq_file *, void *);
54:	static int proc_devices_init(void);

File fs/proc/fd.c:
297:	int proc_fd_permission(struct inode *, int);
182:	static struct dentry *proc_fd_instantiate(struct dentry *, struct task_struct *, const void *);
147:	static int proc_fd_link(struct dentry *, struct path *);
321:	static struct dentry *proc_fdinfo_instantiate(struct dentry *, struct task_struct *, const void *);
287:	static struct dentry *proc_lookupfd(struct inode *, struct dentry *, unsigned int);
206:	static struct dentry *proc_lookupfd_common(struct inode *, struct dentry *, instantiate_t *);
343:	static struct dentry *proc_lookupfdinfo(struct inode *, struct dentry *, unsigned int);
276:	static int proc_readfd(struct file *, struct dir_context *);
228:	static int proc_readfd_common(struct file *, struct dir_context *, instantiate_t *);
348:	static int proc_readfdinfo(struct file *, struct dir_context *);
72:	static int seq_fdinfo_open(struct inode *, struct file *);
20:	static int seq_show(struct seq_file *, void *);
84:	static bool tid_fd_mode(struct task_struct *, unsigned int, fmode_t *);
117:	static int tid_fd_revalidate(struct dentry *, unsigned int);
101:	static void tid_fd_update_inode(struct task_struct *, struct inode *, fmode_t);

File fs/proc/generic.c:
768:	void *PDE_DATA(const struct inode *);
476:	struct proc_dir_entry *_proc_mkdir(const char *, umode_t, struct proc_dir_entry *, void *, bool);
36:	void pde_free(struct proc_dir_entry *);
662:	void pde_put(struct proc_dir_entry *);
208:	int proc_alloc_inum(unsigned int *);
571:	struct proc_dir_entry *proc_create(const char *, umode_t, struct proc_dir_entry *, const struct file_operations *);
555:	struct proc_dir_entry *proc_create_data(const char *, umode_t, struct proc_dir_entry *, const struct file_operations *, void *);
519:	struct proc_dir_entry *proc_create_mount_point(const char *);
535:	struct proc_dir_entry *proc_create_reg(const char *, umode_t, struct proc_dir_entry **, void *);
604:	struct proc_dir_entry *proc_create_seq_private(const char *, umode_t, struct proc_dir_entry *, const struct seq_operations *, unsigned int, void *);
634:	struct proc_dir_entry *proc_create_single_data(const char *, umode_t, struct proc_dir_entry *, int (*)(struct seq_file *, void *), void *);
221:	void proc_free_inum(unsigned int);
754:	void *proc_get_parent_data(const struct inode *);
270:	struct dentry *proc_lookup(struct inode *, struct dentry *, unsigned int);
250:	struct dentry *proc_lookup_de(struct inode *, struct dentry *, struct proc_dir_entry *);
512:	struct proc_dir_entry *proc_mkdir(const char *, struct proc_dir_entry *);
498:	struct proc_dir_entry *proc_mkdir_data(const char *, umode_t, struct proc_dir_entry *, void *);
505:	struct proc_dir_entry *proc_mkdir_mode(const char *, umode_t, struct proc_dir_entry *);
326:	int proc_readdir(struct file *, struct dir_context *);
285:	int proc_readdir_de(struct file *, struct dir_context *, struct proc_dir_entry *);
364:	struct proc_dir_entry *proc_register(struct proc_dir_entry *, struct proc_dir_entry *);
761:	void proc_remove(struct proc_dir_entry *);
649:	void proc_set_size(struct proc_dir_entry *, loff_t);
655:	void proc_set_user(struct proc_dir_entry *, kuid_t, kgid_t);
779:	ssize_t proc_simple_write(struct file *, const char *, size_t, loff_t *);
453:	struct proc_dir_entry *proc_symlink(const char *, struct proc_dir_entry *, const char *);
673:	void remove_proc_entry(const char *, struct proc_dir_entry *);
708:	int remove_proc_subtree(const char *, struct proc_dir_entry *);
389:	static struct proc_dir_entry *__proc_create(struct proc_dir_entry **, const char *, umode_t, nlink_t);
160:	static int __xlate_proc_name(const char *, struct proc_dir_entry **, const char **);
67:	static struct proc_dir_entry *pde_subdir_find(struct proc_dir_entry *, const char *, unsigned int);
135:	static int proc_getattr(const struct path *, struct kstat *, u32, unsigned int);
45:	static int proc_match(const char *, struct proc_dir_entry *, unsigned int);
236:	static int proc_misc_d_delete(const struct dentry *);
226:	static int proc_misc_d_revalidate(struct dentry *, unsigned int);
344:	static int proc_net_d_revalidate(struct dentry *, unsigned int);
117:	static int proc_notify_change(struct dentry *, struct iattr *);
579:	static int proc_seq_open(struct inode *, struct file *);
588:	static int proc_seq_release(struct inode *, struct file *);
620:	static int proc_single_open(struct inode *, struct file *);

File fs/proc/inode.c:
188:	void proc_entry_rundown(struct proc_dir_entry *);
494:	int proc_fill_super(struct super_block *, void *, int);
452:	struct inode *proc_get_inode(struct super_block *, struct proc_dir_entry *);
96:	void proc_init_kmemcache(void);
151:	static void close_pdeo(struct proc_dir_entry *, struct pde_opener *);
89:	static void init_once(void *);
59:	static struct inode *proc_alloc_inode(struct super_block *);
84:	static void proc_destroy_inode(struct inode *);
33:	static void proc_evict_inode(struct inode *);
437:	static const char *proc_get_link(struct dentry *, struct inode *, struct delayed_call *);
78:	static void proc_i_callback(struct callback_head *);
432:	static void proc_put_link(void *);
280:	static long proc_reg_compat_ioctl(struct file *, unsigned int, unsigned long);
310:	static unsigned long proc_reg_get_unmapped_area(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);
208:	static loff_t proc_reg_llseek(struct file *, loff_t, int);
295:	static int proc_reg_mmap(struct file *, struct vm_area_struct *);
335:	static int proc_reg_open(struct inode *, struct file *);
251:	static __poll_t proc_reg_poll(struct file *, struct poll_table_struct *);
223:	static ssize_t proc_reg_read(struct file *, char *, size_t, loff_t *);
388:	static int proc_reg_release(struct inode *, struct file *);
265:	static long proc_reg_unlocked_ioctl(struct file *, unsigned int, unsigned long);
237:	static ssize_t proc_reg_write(struct file *, const char *, size_t, loff_t *);
114:	static int proc_show_options(struct seq_file *, struct dentry *);
144:	static void unuse_pde(struct proc_dir_entry *);

File fs/proc/interrupts.c:
17:	static void *int_seq_next(struct seq_file *, void *, loff_t *);
12:	static void *int_seq_start(struct seq_file *, loff_t *);
25:	static void int_seq_stop(struct seq_file *, void *);
37:	static int proc_interrupts_init(void);

File fs/proc/kcore.c:
80:	void kclist_add(struct kcore_list *, void *, size_t, int);
63:	int register_mem_pfn_is_ram(int (*)(unsigned long));
296:	static void append_kcore_note(char *, size_t *, const char *, unsigned int, const void *, size_t);
90:	static size_t get_kcore_size(int *, size_t *, size_t *, size_t *);
185:	static int kclist_add_private(unsigned long, unsigned long, void *);
579:	static int kcore_callback(struct notifier_block *, unsigned long, void *);
257:	static int kcore_update_ram(void);
546:	static int open_kcore(struct inode *, struct file *);
632:	static int proc_kcore_init(void);
313:	static ssize_t read_kcore(struct file *, char *, size_t, loff_t *);
565:	static int release_kcore(struct inode *, struct file *);

File fs/proc/kmsg.c:
23:	static int kmsg_open(struct inode *, struct file *);
43:	static __poll_t kmsg_poll(struct file *, poll_table *);
34:	static ssize_t kmsg_read(struct file *, char *, size_t, loff_t *);
28:	static int kmsg_release(struct inode *, struct file *);
60:	static int proc_kmsg_init(void);

File fs/proc/loadavg.c:
16:	static int loadavg_proc_show(struct seq_file *, void *);
31:	static int proc_loadavg_init(void);

File fs/proc/meminfo.c:
24:	void arch_report_meminfo(struct seq_file *);
34:	static int meminfo_proc_show(struct seq_file *, void *);
154:	static int proc_meminfo_init(void);
28:	static void show_val_kb(struct seq_file *, const char *, unsigned long);

File fs/proc/namespaces.c:
143:	static struct dentry *proc_ns_dir_lookup(struct inode *, struct dentry *, unsigned int);
110:	static int proc_ns_dir_readdir(struct file *, struct dir_context *);
38:	static const char *proc_ns_get_link(struct dentry *, struct inode *, struct delayed_call *);
90:	static struct dentry *proc_ns_instantiate(struct dentry *, struct task_struct *, const void *);
63:	static int proc_ns_readlink(struct dentry *, char *, int);

File fs/proc/page.c:
90:	u64 stable_page_flags(struct page *);
251:	static ssize_t kpagecgroup_read(struct file *, char *, size_t, loff_t *);
29:	static ssize_t kpagecount_read(struct file *, char *, size_t, loff_t *);
206:	static ssize_t kpageflags_read(struct file *, char *, size_t, loff_t *);
302:	static int proc_page_init(void);

File fs/proc/proc_net.c:
84:	struct proc_dir_entry *proc_create_net_data(const char *, umode_t, struct proc_dir_entry *, const struct seq_operations *, unsigned int, void *);
126:	struct proc_dir_entry *proc_create_net_data_write(const char *, umode_t, struct proc_dir_entry *, const struct seq_operations *, proc_write_t, unsigned int, void *);
177:	struct proc_dir_entry *proc_create_net_single(const char *, umode_t, struct proc_dir_entry *, int (*)(struct seq_file *, void *), void *);
218:	struct proc_dir_entry *proc_create_net_single_write(const char *, umode_t, struct proc_dir_entry *, int (*)(struct seq_file *, void *), proc_write_t, void *);
371:	int proc_net_init(void);
237:	static struct net *get_proc_task_net(struct inode *);
360:	static void proc_net_ns_exit(struct net *);
315:	static int proc_net_ns_init(struct net *);
272:	static int proc_tgid_net_getattr(const struct path *, struct kstat *, u32, unsigned int);
257:	static struct dentry *proc_tgid_net_lookup(struct inode *, struct dentry *, unsigned int);
295:	static int proc_tgid_net_readdir(struct file *, struct dir_context *);
41:	static int seq_open_net(struct inode *, struct file *);
67:	static int seq_release_net(struct inode *, struct file *);
146:	static int single_open_net(struct inode *, struct file *);
162:	static int single_release_net(struct inode *, struct file *);

File fs/proc/proc_sysctl.c:
1496:	struct ctl_table_header *__register_sysctl_paths(struct ctl_table_set *, const struct ctl_path *, struct ctl_table *);
1295:	struct ctl_table_header *__register_sysctl_table(struct ctl_table_set *, const char *, struct ctl_table *);
509:	void proc_sys_evict_inode(struct inode *, struct ctl_table_header *);
1696:	int proc_sys_init(void);
46:	void proc_sys_poll_notify(struct ctl_table_poll *);
1372:	struct ctl_table_header *register_sysctl(const char *, struct ctl_table *);
1567:	struct ctl_table_header *register_sysctl_paths(const struct ctl_path *, struct ctl_table *);
1584:	struct ctl_table_header *register_sysctl_table(struct ctl_table *);
1691:	void retire_sysctl_set(struct ctl_table_set *);
1682:	void setup_sysctl_set(struct ctl_table_set *, struct ctl_table_root *, int (*)(struct ctl_table_set *));
1652:	void unregister_sysctl_table(struct ctl_table_header *);
1379:	static char *append_path(const char *, char *, const char *);
1392:	static int count_subheaders(struct ctl_table *);
1626:	static void drop_sysctl_table(struct ctl_table_header *);
203:	static void erase_header(struct ctl_table_header *);
104:	static struct ctl_table *find_entry(struct ctl_table_header **, const char *, int, struct ctl_dir *);
929:	static struct ctl_dir *find_subdir(struct ctl_dir *, const char *, int);
379:	static struct ctl_node *first_usable_entry(struct rb_node *);
1184:	static bool get_links(struct ctl_dir *, struct ctl_table *, struct ctl_table_root *);
210:	static int insert_header(struct ctl_dir *, struct ctl_table_header *);
88:	static int namecmp(const char *, int, const char *, int);
570:	static ssize_t proc_sys_call_handler(struct file *, void *, size_t, loff_t *, int);
903:	static int proc_sys_compare(const struct dentry *, unsigned int, const char *, const struct qstr *);
883:	static int proc_sys_delete(const struct dentry *);
667:	static bool proc_sys_fill_cache(struct dir_context *, struct ctl_table_header *, struct ctl_table *, struct file *);
831:	static int proc_sys_getattr(const struct path *, struct kstat *, u32, unsigned int);
526:	static struct dentry *proc_sys_lookup(struct inode *, struct dentry *, unsigned int);
458:	static struct inode *proc_sys_make_inode(struct super_block *, struct ctl_table_header *, struct ctl_table *);
618:	static int proc_sys_open(struct inode *, struct file *);
786:	static int proc_sys_permission(struct inode *, int);
635:	static __poll_t proc_sys_poll(struct file *, poll_table *);
606:	static ssize_t proc_sys_read(struct file *, char *, size_t, loff_t *);
757:	static int proc_sys_readdir(struct file *, struct dir_context *);
876:	static int proc_sys_revalidate(struct dentry *, unsigned int);
814:	static int proc_sys_setattr(struct dentry *, struct iattr *);
612:	static ssize_t proc_sys_write(struct file *, const char *, size_t, loff_t *);
1592:	static void put_links(struct ctl_table_header *);
1411:	static int register_leaf_sysctl_tables(const char *, char *, struct ctl_table_header ***, struct ctl_table_set *, struct ctl_table *);
1078:	static int sysctl_err(const char *, struct ctl_table *, char *, ...);
1044:	static int sysctl_follow_link(struct ctl_table_header **, struct ctl_table **);
344:	static void sysctl_head_finish(struct ctl_table_header *);
334:	static struct ctl_table_header *sysctl_head_grab(struct ctl_table_header *);
445:	static int sysctl_perm(struct ctl_table_header *, struct ctl_table *, int);
81:	static void sysctl_print_dir(struct ctl_dir *, struct ctl_dir *);
258:	static void unuse_table(struct ctl_table_header *, struct ctl_table_header *);
1031:	static struct ctl_dir *xlate_dir(struct ctl_table_set *, struct ctl_dir *, struct ctl_dir *);

File fs/proc/proc_tty.c:
165:	void proc_tty_init(void);
133:	void proc_tty_register_driver(struct tty_driver *);
149:	void proc_tty_unregister_driver(struct tty_driver *);
69:	static int show_tty_driver(struct seq_file *, void *);
28:	static void show_tty_range(struct seq_file *, struct tty_driver *, dev_t, int);
112:	static void *t_next(struct seq_file *, void *, loff_t *);
106:	static void *t_start(struct seq_file *, loff_t *);
117:	static void t_stop(struct seq_file *, void *);

File fs/proc/root.c:
212:	int pid_ns_prepare_proc(struct pid_namespace *);
224:	void pid_ns_release_proc(struct pid_namespace *);
40:	int proc_parse_options(char *, struct pid_namespace *);
82:	int proc_remount(struct super_block *, int *, char *);
125:	void proc_root_init(void);
105:	static void proc_kill_sb(struct super_block *);
90:	static struct dentry *proc_mount(struct file_system_type *, int, const char *, void *);
149:	static int proc_root_getattr(const struct path *, struct kstat *, u32, unsigned int);
157:	static struct dentry *proc_root_lookup(struct inode *, struct dentry *, unsigned int);
165:	static int proc_root_readdir(struct file *, struct dir_context *);

File fs/proc/self.c:
77:	void proc_self_init(void);
43:	int proc_setup_self(struct super_block *);
11:	static const char *proc_self_get_link(struct dentry *, struct inode *, struct delayed_call *);

File fs/proc/softirqs.c:
28:	static int proc_softirqs_init(void);
10:	static int show_softirqs(struct seq_file *, void *);

File fs/proc/stat.c:
48:	u64 get_idle_time(int);
66:	static u64 get_iowait_time(int);
216:	static int proc_stat_init(void);
84:	static int show_stat(struct seq_file *, void *);
200:	static int stat_open(struct inode *, struct file *);

File fs/proc/task_mmu.c:
30:	void task_mem(struct seq_file *, struct mm_struct *);
87:	unsigned long task_statm(struct mm_struct *, unsigned long *, unsigned long *, unsigned long *, unsigned long *);
82:	unsigned long task_vsize(struct mm_struct *);
767:	static void __show_smap(struct seq_file *, const struct mem_size_stats *);
1011:	static int clear_refs_pte_range(pmd_t *, unsigned long, unsigned long, struct mm_walk *);
1070:	static int clear_refs_test_walk(unsigned long, unsigned long, struct mm_walk *);
1092:	static ssize_t clear_refs_write(struct file *, const char *, size_t, loff_t *);
1994:	static int gather_hugetlb_stats(pte_t *, unsigned long, unsigned long, unsigned long, struct mm_walk *);
1956:	static int gather_pte_stats(pmd_t *, unsigned long, unsigned long, struct mm_walk *);
1880:	static void gather_stats(struct page *, struct numa_maps *, int, unsigned long);
104:	static void hold_task_mempolicy(struct proc_maps_private *, struct proc_maps_private *);
143:	static void m_cache_vma(struct seq_file *, struct vm_area_struct *);
202:	static void *m_next(struct seq_file *, void *, loff_t *);
149:	static void *m_start(struct seq_file *, loff_t *);
214:	static void m_stop(struct seq_file *, void *);
1766:	static int mm_idle_open(struct inode *, struct file *);
1749:	static ssize_t mm_idle_read(struct file *, char *, size_t, loff_t *);
1785:	static int mm_idle_release(struct inode *, struct file *);
1822:	static int mm_swap_open(struct inode *, struct file *);
1841:	static int mm_swap_release(struct inode *, struct file *);
1813:	static ssize_t mm_swap_write(struct file *, const char *, size_t, loff_t *);
1416:	static int pagemap_hugetlb_range(pte_t *, unsigned long, unsigned long, unsigned long, struct mm_walk *);
1717:	static int pagemap_open(struct inode *, struct file *);
1322:	static int pagemap_pmd_range(pmd_t *, unsigned long, unsigned long, struct mm_walk *);
1243:	static int pagemap_pte_hole(unsigned long, unsigned long, struct mm_walk *);
1487:	static ssize_t pagemap_read(struct file *, char *, size_t, loff_t *);
1728:	static int pagemap_release(struct inode *, struct file *);
377:	static int pid_maps_open(struct inode *, struct file *);
2115:	static int pid_numa_maps_open(struct inode *, struct file *);
879:	static int pid_smaps_open(struct inode *, struct file *);
246:	static int proc_map_release(struct inode *, struct file *);
226:	static int proc_maps_open(struct inode *, struct file *, const struct seq_operations *, int);
363:	static int show_map(struct seq_file *, void *);
300:	static void show_map_vma(struct seq_file *, struct vm_area_struct *);
2024:	static int show_numa_map(struct seq_file *, void *);
791:	static int show_smap(struct seq_file *, void *);
820:	static int show_smaps_rollup(struct seq_file *, void *);
279:	static void show_vma_header_prefix(struct seq_file *, unsigned long, unsigned long, vm_flags_t, unsigned long long, dev_t, unsigned long);
721:	static void smap_gather_stats(struct vm_area_struct *, struct mem_size_stats *);
429:	static void smaps_account(struct mem_size_stats *, struct page *, bool, bool, bool, bool);
691:	static int smaps_hugetlb_range(pte_t *, unsigned long, unsigned long, unsigned long, struct mm_walk *);
487:	static int smaps_pte_hole(unsigned long, unsigned long, struct mm_walk *);
580:	static int smaps_pte_range(pmd_t *, unsigned long, unsigned long, struct mm_walk *);
884:	static int smaps_rollup_open(struct inode *, struct file *);
913:	static int smaps_rollup_release(struct inode *, struct file *);
126:	static void vma_stop(struct proc_maps_private *);

File fs/proc/thread_self.c:
36:	int proc_setup_thread_self(struct super_block *);
70:	void proc_thread_self_init(void);
11:	static const char *proc_thread_self_get_link(struct dentry *, struct inode *, struct delayed_call *);

File fs/proc/uptime.c:
33:	static int proc_uptime_init(void);
10:	static int uptime_proc_show(struct seq_file *, void *);

File fs/proc/util.c:
3:	unsigned int name_to_int(const struct qstr *);

File fs/proc/version.c:
18:	static int proc_version_init(void);
9:	static int version_proc_show(struct seq_file *, void *);

File fs/proc/vmcore.c:
183:	ssize_t copy_oldmem_page_encrypted(unsigned long, char *, size_t, unsigned long, int);
142:	int elfcorehdr_alloc(unsigned long long *, unsigned long long *);
150:	void elfcorehdr_free(unsigned long long);
156:	ssize_t elfcorehdr_read(char *, size_t, u64 *);
164:	ssize_t elfcorehdr_read_notes(char *, size_t, u64 *);
65:	int register_oldmem_pfn_is_ram(int (*)(unsigned long));
172:	int remap_oldmem_pfn_range(struct vm_area_struct *, unsigned long, unsigned long, unsigned long, pgprot_t);
74:	void unregister_oldmem_pfn_is_ram(void);
1436:	int vmcore_add_device_dump(struct vmcoredd_data *);
1545:	void vmcore_cleanup(void);
192:	static int copy_to(void *, void *, size_t, int);
1164:	static void free_elfcorebuf(void);
660:	static struct vmcore *get_new_element(void);
999:	static int merge_note_headers_elf32(char *, size_t *, char **, size_t *);
808:	static int merge_note_headers_elf64(char *, size_t *, char **, size_t *);
534:	static int mmap_vmcore(struct file *, struct vm_area_struct *);
395:	static vm_fault_t mmap_vmcore_fault(struct vm_fault *);
100:	static ssize_t read_from_oldmem(char *, size_t, u64 *, int);
382:	static ssize_t read_vmcore(struct file *, char *, size_t, loff_t *);
1515:	static int vmcore_init(void);

File fs/proc_namespace.c:
310:	static int mountinfo_open(struct inode *, struct file *);
305:	static int mounts_open(struct inode *, struct file *);
238:	static int mounts_open_common(struct inode *, struct file *, int (*)(struct seq_file *, struct vfsmount *));
21:	static __poll_t mounts_poll(struct file *, poll_table *);
295:	static int mounts_release(struct inode *, struct file *);
315:	static int mountstats_open(struct inode *, struct file *);
64:	static void show_mnt_opts(struct seq_file *, struct vfsmount *);
131:	static int show_mountinfo(struct seq_file *, struct vfsmount *);
45:	static int show_sb_opts(struct seq_file *, struct super_block *);
88:	static void show_type(struct seq_file *, struct super_block *, struct super_block *);
97:	static int show_vfsmnt(struct seq_file *, struct vfsmount *);
193:	static int show_vfsstat(struct seq_file *, struct vfsmount *);

File fs/pstore/inode.c:
502:	void pstore_exit_fs(void);
420:	void pstore_get_records(int);
485:	int pstore_init_fs(void);
292:	bool pstore_is_mounted(void);
302:	int pstore_mkfile(struct dentry *, struct pstore_record *);
61:	static void free_pstore_private(struct pstore_private *);
239:	static void parse_options(char *);
201:	static void pstore_evict_inode(struct inode *);
166:	static loff_t pstore_file_llseek(struct file *, loff_t, int);
146:	static int pstore_file_open(struct inode *, struct file *);
134:	static ssize_t pstore_file_read(struct file *, char *, size_t, loff_t *);
435:	static int pstore_fill_super(struct super_block *, void *, int);
97:	static void *pstore_ftrace_seq_next(struct seq_file *, void *, loff_t *);
110:	static int pstore_ftrace_seq_show(struct seq_file *, void *);
72:	static void *pstore_ftrace_seq_start(struct seq_file *, loff_t *);
92:	static void pstore_ftrace_seq_stop(struct seq_file *, void *);
220:	static struct inode *pstore_get_inode(struct super_block *);
472:	static void pstore_kill_sb(struct super_block *);
466:	static struct dentry *pstore_mount(struct file_system_type *, int, const char *, void *);
274:	static int pstore_remount(struct super_block *, int *, char *);
267:	static int pstore_show_options(struct seq_file *, struct dentry *);
186:	static int pstore_unlink(struct inode *, struct dentry *);

File fs/pstore/platform.c:
775:	void pstore_choose_compression(void);
698:	void pstore_get_backend_records(struct pstore_info *, struct dentry *, int);
362:	void pstore_record_init(struct pstore_record *, struct pstore_info *);
543:	int pstore_register(struct pstore_info *);
99:	void pstore_set_kmsg_bytes(int);
622:	void pstore_unregister(struct pstore_info *);
276:	static void allocate_buf_for_compression(void);
758:	static void pstore_dowork(struct work_struct *);
378:	static void pstore_dump(struct kmsg_dumper *, enum kmsg_dump_reason);
811:	static void pstore_exit(void);
790:	static int pstore_init(void);
763:	static void pstore_timefunc(struct timer_list *);
513:	static int pstore_write_user_compat(struct pstore_record *, const char *);
150:	static int zbufsize_deflate(size_t);

File fs/quota/compat.c:
44:	long __ia32_compat_sys_quotactl32(const struct pt_regs *);

File fs/quota/dquot.c:
1641:	int __dquot_alloc_space(struct inode *, qsize_t, int);
1842:	void __dquot_free_space(struct inode *, qsize_t, int);
1942:	int __dquot_transfer(struct inode *, struct dquot **);
135:	void __quota_error(struct super_block *, const char *, const char *, ...);
842:	struct dquot *dqget(struct super_block *, struct kqid);
748:	void dqput(struct dquot *);
421:	int dquot_acquire(struct dquot *);
807:	struct dquot *dquot_alloc(struct super_block *, int);
1714:	int dquot_alloc_inode(struct inode *);
1758:	int dquot_claim_space_nodirty(struct inode *, qsize_t);
464:	int dquot_commit(struct dquot *);
2110:	int dquot_commit_info(struct super_block *, int);
513:	void dquot_destroy(struct dquot *);
2162:	int dquot_disable(struct super_block *, int, unsigned int);
1571:	void dquot_drop(struct inode *);
2463:	int dquot_enable(struct inode *, int, int, unsigned int);
2148:	int dquot_file_open(struct inode *, struct file *);
1897:	void dquot_free_inode(struct inode *);
2622:	int dquot_get_dqblk(struct super_block *, struct kqid, struct qc_dqblk *);
2637:	int dquot_get_next_dqblk(struct super_block *, struct kqid *, struct qc_dqblk *);
2118:	int dquot_get_next_id(struct super_block *, struct kqid *);
2774:	int dquot_get_state(struct super_block *, struct qc_state *);
1526:	int dquot_initialize(struct inode *);
1532:	bool dquot_initialize_needed(struct inode *);
345:	int dquot_mark_dquot_dirty(struct dquot *);
2285:	int dquot_quota_off(struct super_block *, int);
2442:	int dquot_quota_on(struct super_block *, int, int, const struct path *);
2498:	int dquot_quota_on_mount(struct super_block *, char *, int, int);
675:	int dquot_quota_sync(struct super_block *, int);
1800:	void dquot_reclaim_space_nodirty(struct inode *, qsize_t);
487:	int dquot_release(struct dquot *);
2406:	int dquot_resume(struct super_block *, int);
574:	int dquot_scan_active(struct super_block *, int (*)(struct dquot *, unsigned long), unsigned long);
2755:	int dquot_set_dqblk(struct super_block *, struct kqid, struct qc_dqblk *);
2807:	int dquot_set_dqinfo(struct super_block *, int, struct qc_info *);
2068:	int dquot_transfer(struct inode *, struct iattr *);
618:	int dquot_writeback_dquots(struct super_block *, int);
409:	void mark_info_dirty(struct super_block *, int);
164:	int register_quota_format(struct quota_format_type *);
174:	void unregister_quota_format(struct quota_format_type *);
1556:	static void __dquot_drop(struct inode *);
1421:	static int __dquot_initialize(struct inode *, int);
2605:	static void do_get_dqblk(struct dquot *, struct qc_dqblk *);
2854:	static int do_proc_dqstats(struct ctl_table *, int, void *, size_t *, loff_t *);
733:	static unsigned long dqcache_shrink_count(struct shrinker *, struct shrink_control *);
713:	static unsigned long dqcache_shrink_scan(struct shrinker *, struct shrink_control *);
1257:	static int dquot_add_inodes(struct dquot *, qsize_t, struct dquot_warn *);
1302:	static int dquot_add_space(struct dquot *, qsize_t, qsize_t, unsigned int, struct dquot_warn *);
1109:	static void dquot_decr_inodes(struct dquot *, qsize_t);
1121:	static void dquot_decr_space(struct dquot *, qsize_t);
2957:	static int dquot_init(void);
2561:	static int dquot_quota_disable(struct super_block *, unsigned int);
2524:	static int dquot_quota_enable(struct super_block *, unsigned int);
1233:	static void flush_warnings(struct dquot_warn *);
1248:	static int ignore_hardlimit(struct dquot *, struct dquot *);
1370:	static int info_idq_free(struct dquot *, qsize_t);
1616:	static qsize_t inode_get_rsv_space(struct inode *);
1601:	static qsize_t *inode_reserved_space(struct inode *);
1218:	static void prepare_warning(struct dquot_warn *, struct dquot *, int);
2300:	static int vfs_load_quota_inode(struct inode *, int, int, unsigned int);

File fs/quota/kqid.c:
68:	qid_t from_kqid(struct user_namespace *, struct kqid);
101:	qid_t from_kqid_munged(struct user_namespace *, struct kqid);
13:	bool qid_eq(struct kqid, struct kqid);
37:	bool qid_lt(struct kqid, struct kqid);
120:	bool qid_valid(struct kqid);

File fs/quota/netlink.c:
37:	void quota_send_warning(struct kqid, dev_t, const char);
96:	static int quota_init(void);

File fs/quota/quota.c:
890:	long __ia32_sys_quotactl(const struct pt_regs *);
890:	long __x64_sys_quotactl(const struct pt_regs *);
837:	int kernel_quotactl(unsigned int, const char *, qid_t, void *);
71:	unsigned int qtype_enforce_flag(int);
185:	static void copy_to_if_dqblk(struct if_dqblk *, struct qc_dqblk *);
607:	static void copy_to_xfs_dqblk(struct fs_disk_quota *, struct qc_dqblk *, int, qid_t);
117:	static int quota_getinfo(struct super_block *, int, void *);
225:	static int quota_getnextquota(struct super_block *, int, qid_t, void *);
662:	static int quota_getnextxquota(struct super_block *, int, qid_t, void *);
199:	static int quota_getquota(struct super_block *, int, qid_t, void *);
334:	static int quota_getstate(struct super_block *, struct fs_quota_stat *);
407:	static int quota_getstatev(struct super_block *, struct fs_quota_statv *);
636:	static int quota_getxquota(struct super_block *, int, qid_t, void *);
458:	static int quota_getxstatev(struct super_block *, void *);
275:	static int quota_setquota(struct super_block *, int, qid_t, void *);
574:	static int quota_setxquota(struct super_block *, int, qid_t, void *);
315:	static int quota_state_to_flags(struct qc_state *, struct qc_state *, struct qc_state *);
50:	static void quota_sync_one(struct super_block *, void *);

File fs/quota/quota_tree.c:
529:	int qtree_delete_dquot(struct qtree_mem_dqinfo *, struct dquot *);
212:	int qtree_entry_unused(struct qtree_mem_dqinfo *, char *);
737:	int qtree_get_next_id(struct qtree_mem_dqinfo *, struct kqid *);
620:	int qtree_read_dquot(struct qtree_mem_dqinfo *, struct dquot *);
684:	int qtree_release_dquot(struct qtree_mem_dqinfo *, struct dquot *);
372:	int qtree_write_dquot(struct qtree_mem_dqinfo *, struct dquot *);
297:	static int do_insert_tree(struct qtree_mem_dqinfo *, struct dquot *, uint *, int);
693:	static int find_next_id(struct qtree_mem_dqinfo *, qid_t *, unsigned int, int);
578:	static loff_t find_tree_dqentry(struct qtree_mem_dqinfo *, struct dquot *, uint, int);
83:	static int get_free_dqblk(struct qtree_mem_dqinfo *);
35:	static int get_index(struct qtree_mem_dqinfo *, struct kqid, int);
49:	static char *getdqbuf(size_t);
114:	static int put_free_dqblk(struct qtree_mem_dqinfo *, char *, uint);
58:	static ssize_t read_blk(struct qtree_mem_dqinfo *, uint, char *);
131:	static int remove_free_dqentry(struct qtree_mem_dqinfo *, char *, uint);
474:	static int remove_tree(struct qtree_mem_dqinfo *, struct dquot *, uint *, int);
67:	static ssize_t write_blk(struct qtree_mem_dqinfo *, uint, char *);

File fs/quota/quota_v2.c:
430:	static void exit_v2_quota_format(void);
420:	static int init_v2_quota_format(void);
76:	static int v2_check_quota_file(struct super_block *, int);
380:	static int v2_free_file_info(struct super_block *, int);
386:	static int v2_get_next_id(struct super_block *, struct kqid *);
327:	static int v2_read_dquot(struct dquot *);
91:	static int v2_read_file_info(struct super_block *, int);
58:	static int v2_read_header(struct super_block *, int, struct v2_disk_dqheader *);
368:	static int v2_release_dquot(struct dquot *);
340:	static int v2_write_dquot(struct dquot *);
192:	static int v2_write_file_info(struct super_block *, int);
221:	static void v2r0_disk2memdqb(struct dquot *, void *);
261:	static int v2r0_is_id(void *, struct dquot *);
241:	static void v2r0_mem2diskdqb(void *, struct dquot *);
274:	static void v2r1_disk2memdqb(struct dquot *, void *);
314:	static int v2r1_is_id(void *, struct dquot *);
294:	static void v2r1_mem2diskdqb(void *, struct dquot *);

File fs/ramfs/file-mmu.c:
34:	static unsigned long ramfs_mmu_get_unmapped_area(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);

File fs/ramfs/inode.c:
269:	int init_ramfs_fs(void);
220:	int ramfs_fill_super(struct super_block *, void *, int);
61:	struct inode *ramfs_get_inode(struct super_block *, const struct inode *, umode_t, dev_t);
250:	struct dentry *ramfs_mount(struct file_system_type *, int, const char *, void *);
124:	static int ramfs_create(struct inode *, struct dentry *, umode_t, bool);
256:	static void ramfs_kill_sb(struct super_block *);
116:	static int ramfs_mkdir(struct inode *, struct dentry *, umode_t);
102:	static int ramfs_mknod(struct inode *, struct dentry *, umode_t, dev_t);
163:	static int ramfs_show_options(struct seq_file *, struct dentry *);
129:	static int ramfs_symlink(struct inode *, struct dentry *, const char *);

File fs/read_write.c:
330:	long __ia32_compat_sys_lseek(const struct pt_regs *);
1230:	long __ia32_compat_sys_preadv(const struct pt_regs *);
1251:	long __ia32_compat_sys_preadv2(const struct pt_regs *);
1222:	long __ia32_compat_sys_preadv64(const struct pt_regs *);
1240:	long __ia32_compat_sys_preadv64v2(const struct pt_regs *);
1339:	long __ia32_compat_sys_pwritev(const struct pt_regs *);
1360:	long __ia32_compat_sys_pwritev2(const struct pt_regs *);
1331:	long __ia32_compat_sys_pwritev64(const struct pt_regs *);
1349:	long __ia32_compat_sys_pwritev64v2(const struct pt_regs *);
1195:	long __ia32_compat_sys_readv(const struct pt_regs *);
1511:	long __ia32_compat_sys_sendfile(const struct pt_regs *);
1531:	long __ia32_compat_sys_sendfile64(const struct pt_regs *);
1304:	long __ia32_compat_sys_writev(const struct pt_regs *);
1633:	long __ia32_sys_copy_file_range(const struct pt_regs *);
337:	long __ia32_sys_llseek(const struct pt_regs *);
324:	long __ia32_sys_lseek(const struct pt_regs *);
636:	long __ia32_sys_pread64(const struct pt_regs *);
1115:	long __ia32_sys_preadv(const struct pt_regs *);
1123:	long __ia32_sys_preadv2(const struct pt_regs *);
662:	long __ia32_sys_pwrite64(const struct pt_regs *);
1135:	long __ia32_sys_pwritev(const struct pt_regs *);
1143:	long __ia32_sys_pwritev2(const struct pt_regs *);
589:	long __ia32_sys_read(const struct pt_regs *);
1103:	long __ia32_sys_readv(const struct pt_regs *);
1474:	long __ia32_sys_sendfile(const struct pt_regs *);
1493:	long __ia32_sys_sendfile64(const struct pt_regs *);
610:	long __ia32_sys_write(const struct pt_regs *);
1109:	long __ia32_sys_writev(const struct pt_regs *);
494:	ssize_t __kernel_write(struct file *, const void *, size_t, loff_t *);
414:	ssize_t __vfs_read(struct file *, char *, size_t, loff_t *);
483:	ssize_t __vfs_write(struct file *, const char *, size_t, loff_t *);
1633:	long __x64_sys_copy_file_range(const struct pt_regs *);
337:	long __x64_sys_llseek(const struct pt_regs *);
324:	long __x64_sys_lseek(const struct pt_regs *);
636:	long __x64_sys_pread64(const struct pt_regs *);
1115:	long __x64_sys_preadv(const struct pt_regs *);
1123:	long __x64_sys_preadv2(const struct pt_regs *);
662:	long __x64_sys_pwrite64(const struct pt_regs *);
1135:	long __x64_sys_pwritev(const struct pt_regs *);
1143:	long __x64_sys_pwritev2(const struct pt_regs *);
589:	long __x64_sys_read(const struct pt_regs *);
1103:	long __x64_sys_readv(const struct pt_regs *);
1474:	long __x64_sys_sendfile(const struct pt_regs *);
1493:	long __x64_sys_sendfile64(const struct pt_regs *);
610:	long __x64_sys_write(const struct pt_regs *);
1109:	long __x64_sys_writev(const struct pt_regs *);
829:	ssize_t compat_rw_copy_check_uvector(int, const struct compat_iovec *, unsigned long, unsigned long, struct iovec *, struct iovec **);
238:	loff_t default_llseek(struct file *, loff_t, int);
1860:	int do_clone_file_range(struct file *, loff_t, struct file *, loff_t, u64);
164:	loff_t fixed_size_llseek(struct file *, loff_t, int, loff_t);
2186:	void fs_file_read_update_args_by_trace(struct kiocb *);
146:	loff_t generic_file_llseek(struct file *, loff_t, int);
88:	loff_t generic_file_llseek_size(struct file *, loff_t, int, loff_t, loff_t);
425:	ssize_t kernel_read(struct file *, void *, size_t, loff_t *);
519:	ssize_t kernel_write(struct file *, const void *, size_t, loff_t *);
306:	off_t ksys_lseek(unsigned int, off_t, unsigned int);
616:	ssize_t ksys_pread64(unsigned int, char *, size_t, loff_t);
642:	ssize_t ksys_pwrite64(unsigned int, const char *, size_t, loff_t);
574:	ssize_t ksys_read(unsigned int, char *, size_t);
594:	ssize_t ksys_write(unsigned int, const char *, size_t);
232:	loff_t no_llseek(struct file *, loff_t, int);
183:	loff_t no_seek_end_llseek(struct file *, loff_t, int);
203:	loff_t no_seek_end_llseek_size(struct file *, loff_t, int, loff_t);
226:	loff_t noop_llseek(struct file *, loff_t, int);
753:	ssize_t rw_copy_check_uvector(int, const struct iovec *, unsigned long, unsigned long, struct iovec *, struct iovec **);
367:	int rw_verify_area(int, struct file *, const loff_t *, size_t);
1754:	int vfs_clone_file_prep_inodes(struct inode *, loff_t, struct inode *, loff_t, u64 *, bool);
1910:	int vfs_clone_file_range(struct file *, loff_t, struct file *, loff_t, u64);
1555:	ssize_t vfs_copy_file_range(struct file *, loff_t, struct file *, loff_t, size_t, unsigned int);
2090:	int vfs_dedupe_file_range(struct file *, struct file_dedupe_range *);
1969:	int vfs_dedupe_file_range_compare(struct inode *, loff_t, struct inode *, loff_t, loff_t, bool *);
2052:	int vfs_dedupe_file_range_one(struct file *, loff_t, struct file *, loff_t, u64);
931:	ssize_t vfs_iter_read(struct file *, struct iov_iter *, loff_t *, rwf_t);
967:	ssize_t vfs_iter_write(struct file *, struct iov_iter *, loff_t *, rwf_t);
293:	loff_t vfs_llseek(struct file *, loff_t, int);
439:	ssize_t vfs_read(struct file *, char *, size_t, loff_t *);
976:	ssize_t vfs_readv(struct file *, const struct iovec *, unsigned long, loff_t *, rwf_t);
56:	loff_t vfs_setpos(struct file *, loff_t, loff_t);
535:	ssize_t vfs_write(struct file *, const char *, size_t, loff_t *);
1156:	static size_t compat_readv(struct file *, const struct compat_iovec *, unsigned long, loff_t *, rwf_t);
1264:	static size_t compat_writev(struct file *, const struct compat_iovec *, unsigned long, loff_t *, rwf_t);
1202:	static long do_compat_preadv64(unsigned long, const struct compat_iovec *, unsigned long, loff_t, rwf_t);
1311:	static long do_compat_pwritev64(unsigned long, const struct compat_iovec *, unsigned long, loff_t, rwf_t);
1176:	static size_t do_compat_readv(compat_ulong_t, const struct compat_iovec *, compat_ulong_t, rwf_t);
1286:	static size_t do_compat_writev(compat_ulong_t, const struct compat_iovec *, compat_ulong_t, rwf_t);
903:	static ssize_t do_iter_read(struct file *, struct iov_iter *, loff_t *, rwf_t);
668:	static ssize_t do_iter_readv_writev(struct file *, struct iov_iter *, loff_t *, int, rwf_t);
940:	static ssize_t do_iter_write(struct file *, struct iov_iter *, loff_t *, rwf_t);
1057:	static ssize_t do_preadv(unsigned long, const struct iovec *, unsigned long, loff_t, rwf_t);
1080:	static ssize_t do_pwritev(unsigned long, const struct iovec *, unsigned long, loff_t, rwf_t);
1011:	static ssize_t do_readv(unsigned long, const struct iovec *, unsigned long, rwf_t);
1374:	static ssize_t do_sendfile(int, int, loff_t *, size_t, loff_t);
1031:	static ssize_t do_writev(unsigned long, const struct iovec *, unsigned long, rwf_t);
1924:	static struct page *vfs_dedupe_get_page(loff_t, struct inode *);
993:	static ssize_t vfs_writev(struct file *, const struct iovec *, unsigned long, loff_t *, rwf_t);

File fs/readdir.c:
530:	long __ia32_compat_sys_getdents(const struct pt_regs *);
448:	long __ia32_compat_sys_old_readdir(const struct pt_regs *);
269:	long __ia32_sys_getdents(const struct pt_regs *);
391:	long __ia32_sys_getdents64(const struct pt_regs *);
175:	long __ia32_sys_old_readdir(const struct pt_regs *);
269:	long __x64_sys_getdents(const struct pt_regs *);
391:	long __x64_sys_getdents64(const struct pt_regs *);
175:	long __x64_sys_old_readdir(const struct pt_regs *);
40:	int iterate_dir(struct file *, struct dir_context *);
356:	int ksys_getdents64(unsigned int, struct linux_dirent64 *, unsigned int);
484:	static int compat_filldir(struct dir_context *, const char *, int, loff_t, u64, unsigned int);
411:	static int compat_fillonedir(struct dir_context *, const char *, int, loff_t, u64, unsigned int);
217:	static int filldir(struct dir_context *, const char *, int, loff_t, u64, unsigned int);
310:	static int filldir64(struct dir_context *, const char *, int, loff_t, u64, unsigned int);
139:	static int fillonedir(struct dir_context *, const char *, int, loff_t, u64, unsigned int);
106:	static int verify_dirent_name(const char *, int);

File fs/select.c:
1281:	long __ia32_compat_sys_old_select(const struct pt_regs *);
1371:	long __ia32_compat_sys_ppoll(const struct pt_regs *);
1397:	long __ia32_compat_sys_ppoll_time64(const struct pt_regs *);
1348:	long __ia32_compat_sys_pselect6(const struct pt_regs *);
1326:	long __ia32_compat_sys_pselect6_time64(const struct pt_regs *);
1266:	long __ia32_compat_sys_select(const struct pt_regs *);
1046:	long __ia32_sys_poll(const struct pt_regs *);
1079:	long __ia32_sys_ppoll(const struct pt_regs *);
769:	long __ia32_sys_pselect6(const struct pt_regs *);
722:	long __ia32_sys_select(const struct pt_regs *);
1046:	long __x64_sys_poll(const struct pt_regs *);
1079:	long __x64_sys_ppoll(const struct pt_regs *);
769:	long __x64_sys_pselect6(const struct pt_regs *);
722:	long __x64_sys_select(const struct pt_regs *);
621:	int core_sys_select(int, fd_set *, fd_set *, fd_set *, struct timespec64 *);
138:	void poll_freewait(struct poll_wqueues *);
121:	void poll_initwait(struct poll_wqueues *);
273:	int poll_select_set_timeout(struct timespec64 *, time64_t, long);
75:	u64 select_estimate_accuracy(struct timespec64 *);
221:	static void __pollwait(struct file *, wait_queue_head_t *, poll_table *);
1172:	static int compat_core_sys_select(int, compat_ulong_t *, compat_ulong_t *, compat_ulong_t *, struct timespec64 *);
1138:	static int compat_get_fd_set(unsigned long, compat_ulong_t *, unsigned long *);
1291:	static long do_compat_pselect(int, compat_ulong_t *, compat_ulong_t *, compat_ulong_t *, void *, compat_sigset_t *, compat_size_t, enum poll_time_type);
1243:	static int do_compat_select(int, compat_ulong_t *, compat_ulong_t *, compat_ulong_t *, struct compat_timeval *);
1025:	static long do_restart_poll(struct restart_block *);
476:	static int do_select(int, fd_set_bits *, struct timespec64 *);
960:	static int do_sys_poll(struct pollfd *, unsigned int, struct timespec64 *);
700:	static int kern_select(int, fd_set *, fd_set *, fd_set *, struct timeval *);
236:	static int poll_schedule_timeout(struct poll_wqueues *, ktime_t *, unsigned long, int);
297:	static int poll_select_finish(struct timespec64 *, void *, enum poll_time_type, int);
210:	static int pollwake(wait_queue_entry_t *, unsigned int, int, void *);
400:	static unsigned long set_fd_set(unsigned long, void *, unsigned long *);

File fs/seq_file.c:
615:	void *__seq_open_private(struct file *, const struct seq_operations *, int);
425:	char *mangle_path(char *, const char *, const char *);
522:	int seq_dentry(struct seq_file *, struct dentry *, const char *);
378:	void seq_escape(struct seq_file *, const char *, const char *);
1099:	void seq_file_init(void);
483:	int seq_file_path(struct seq_file *, struct file *, const char *);
848:	void seq_hex_dump(struct seq_file *, const char *, int, int, int, const void *, size_t, bool);
961:	struct hlist_node *seq_hlist_next(void *, struct hlist_head *, loff_t *);
1078:	struct hlist_node *seq_hlist_next_percpu(void *, struct hlist_head *, int *, loff_t *);
1031:	struct hlist_node *seq_hlist_next_rcu(void *, struct hlist_head *, loff_t *);
925:	struct hlist_node *seq_hlist_start(struct hlist_head *, loff_t);
944:	struct hlist_node *seq_hlist_start_head(struct hlist_head *, loff_t);
1009:	struct hlist_node *seq_hlist_start_head_rcu(struct hlist_head *, loff_t);
1054:	struct hlist_node *seq_hlist_start_percpu(struct hlist_head *, int *, loff_t);
985:	struct hlist_node *seq_hlist_start_rcu(struct hlist_head *, loff_t);
908:	struct list_head *seq_list_next(void *, struct list_head *, loff_t *);
887:	struct list_head *seq_list_start(struct list_head *, loff_t);
899:	struct list_head *seq_list_start_head(struct list_head *, loff_t);
313:	loff_t seq_lseek(struct file *, loff_t, int);
54:	int seq_open(struct file *, const struct seq_operations *);
641:	int seq_open_private(struct file *, const struct seq_operations *, int);
831:	void seq_pad(struct seq_file *, char);
455:	int seq_path(struct seq_file *, const struct path *, const char *);
492:	int seq_path_root(struct seq_file *, const struct path *, const struct path *, const char *);
404:	void seq_printf(struct seq_file *, const char *, ...);
767:	void seq_put_decimal_ll(struct seq_file *, const char *, long long);
714:	void seq_put_decimal_ull(struct seq_file *, const char *, unsigned long long);
682:	void seq_put_decimal_ull_width(struct seq_file *, const char *, unsigned long long, unsigned int);
733:	void seq_put_hex_ll(struct seq_file *, const char *, unsigned long long, unsigned int);
648:	void seq_putc(struct seq_file *, char);
657:	void seq_puts(struct seq_file *, const char *);
156:	ssize_t seq_read(struct file *, char *, size_t, loff_t *);
359:	int seq_release(struct inode *, struct file *);
605:	int seq_release_private(struct inode *, struct file *);
389:	void seq_vprintf(struct seq_file *, const char *, struct __va_list_tag *);
814:	int seq_write(struct seq_file *, const void *, size_t);
557:	int single_open(struct file *, int (*)(struct seq_file *, void *), void *);
578:	int single_open_size(struct file *, int (*)(struct seq_file *, void *), void *, size_t);
596:	int single_release(struct inode *, struct file *);
547:	static void *single_next(struct seq_file *, void *, loff_t *);
542:	static void *single_start(struct seq_file *, loff_t *);
553:	static void single_stop(struct seq_file *, void *);
94:	static int traverse(struct seq_file *, loff_t);

File fs/signalfd.c:
357:	long __ia32_compat_sys_signalfd(const struct pt_regs *);
349:	long __ia32_compat_sys_signalfd4(const struct pt_regs *);
323:	long __ia32_sys_signalfd(const struct pt_regs *);
311:	long __ia32_sys_signalfd4(const struct pt_regs *);
323:	long __x64_sys_signalfd(const struct pt_regs *);
311:	long __x64_sys_signalfd4(const struct pt_regs *);
36:	void signalfd_cleanup(struct sighand_struct *);
262:	static int do_signalfd4(int, sigset_t *, int);
81:	static int signalfd_copyinfo(struct signalfd_siginfo *, const siginfo_t *);
61:	static __poll_t signalfd_poll(struct file *, poll_table *);
211:	static ssize_t signalfd_read(struct file *, char *, size_t, loff_t *);
55:	static int signalfd_release(struct inode *, struct file *);
241:	static void signalfd_show_fdinfo(struct seq_file *, struct file *);

File fs/splice.c:
1377:	long __ia32_compat_sys_vmsplice(const struct pt_regs *);
1403:	long __ia32_sys_splice(const struct pt_regs *);
1750:	long __ia32_sys_tee(const struct pt_regs *);
1351:	long __ia32_sys_vmsplice(const struct pt_regs *);
617:	ssize_t __splice_from_pipe(struct pipe_inode_info *, struct splice_desc *, splice_actor *);
1403:	long __x64_sys_splice(const struct pt_regs *);
1750:	long __x64_sys_tee(const struct pt_regs *);
1351:	long __x64_sys_vmsplice(const struct pt_regs *);
230:	ssize_t add_to_pipe(struct pipe_inode_info *, struct pipe_buffer *);
1102:	long do_splice(struct file *, loff_t *, struct file *, loff_t *, size_t, unsigned int);
1045:	long do_splice_direct(struct file *, loff_t *, struct file *, loff_t *, size_t, unsigned int);
1720:	long do_tee(struct file *, struct file *, size_t, unsigned int);
296:	ssize_t generic_file_splice_read(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int);
336:	int generic_pipe_buf_nosteal(struct pipe_inode_info *, struct pipe_buffer *);
830:	ssize_t generic_splice_sendpage(struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int);
683:	ssize_t iter_file_splice_write(struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int);
897:	ssize_t splice_direct_to_actor(struct file *, struct splice_desc *, splice_direct_actor *);
649:	ssize_t splice_from_pipe(struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int, splice_actor *);
254:	int splice_grow_spd(const struct pipe_inode_info *, struct splice_pipe_desc *);
274:	void splice_shrink_spd(struct splice_pipe_desc *);
185:	ssize_t splice_to_pipe(struct pipe_inode_info *, struct splice_pipe_desc *);
1377:	static long __do_compat_sys_vmsplice(int, const struct compat_iovec *, unsigned int, unsigned int);
1351:	static long __do_sys_vmsplice(int, const struct iovec *, unsigned long, unsigned int);
368:	static ssize_t default_file_splice_read(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int);
804:	static ssize_t default_file_splice_write(struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int);
1020:	static int direct_splice_actor(struct pipe_inode_info *, struct splice_desc *);
858:	static long do_splice_to(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int);
1337:	static long do_vmsplice(struct file *, struct iov_iter *, unsigned int);
1434:	static int ipipe_prep(struct pipe_inode_info *, unsigned int);
1197:	static int iter_to_pipe(struct iov_iter *, struct pipe_inode_info *, unsigned int);
1472:	static int opipe_prep(struct pipe_inode_info *, unsigned int);
102:	static int page_cache_pipe_buf_confirm(struct pipe_inode_info *, struct pipe_buffer *);
91:	static void page_cache_pipe_buf_release(struct pipe_inode_info *, struct pipe_buffer *);
46:	static int page_cache_pipe_buf_steal(struct pipe_inode_info *, struct pipe_buffer *);
437:	static int pipe_to_sendpage(struct pipe_inode_info *, struct pipe_buffer *, struct splice_desc *);
1243:	static int pipe_to_user(struct pipe_inode_info *, struct pipe_buffer *, struct splice_desc *);
540:	static int splice_from_pipe_next(struct pipe_inode_info *, struct splice_desc *);
148:	static int user_page_pipe_buf_steal(struct pipe_inode_info *, struct pipe_buffer *);
1306:	static int vmsplice_type(int *);
1076:	static int wait_for_space(struct pipe_inode_info *, unsigned int);
166:	static void wakeup_pipe_readers(struct pipe_inode_info *);
456:	static void wakeup_pipe_writers(struct pipe_inode_info *);
790:	static int write_pipe_buf(struct pipe_inode_info *, struct pipe_buffer *, struct splice_desc *);

File fs/stack.c:
63:	void fsstack_copy_attr_all(struct inode *, const struct inode *);
10:	void fsstack_copy_inode_size(struct inode *, struct inode *);

File fs/stat.c:
676:	long __ia32_compat_sys_newfstat(const struct pt_regs *);
662:	long __ia32_compat_sys_newfstatat(const struct pt_regs *);
649:	long __ia32_compat_sys_newlstat(const struct pt_regs *);
637:	long __ia32_compat_sys_newstat(const struct pt_regs *);
281:	long __ia32_sys_fstat(const struct pt_regs *);
268:	long __ia32_sys_lstat(const struct pt_regs *);
382:	long __ia32_sys_newfstat(const struct pt_regs *);
369:	long __ia32_sys_newfstatat(const struct pt_regs *);
355:	long __ia32_sys_newlstat(const struct pt_regs *);
344:	long __ia32_sys_newstat(const struct pt_regs *);
435:	long __ia32_sys_readlink(const struct pt_regs *);
429:	long __ia32_sys_readlinkat(const struct pt_regs *);
255:	long __ia32_sys_stat(const struct pt_regs *);
595:	long __ia32_sys_statx(const struct pt_regs *);
689:	void __inode_add_bytes(struct inode *, loff_t);
710:	void __inode_sub_bytes(struct inode *, loff_t);
281:	long __x64_sys_fstat(const struct pt_regs *);
268:	long __x64_sys_lstat(const struct pt_regs *);
382:	long __x64_sys_newfstat(const struct pt_regs *);
369:	long __x64_sys_newfstatat(const struct pt_regs *);
355:	long __x64_sys_newlstat(const struct pt_regs *);
344:	long __x64_sys_newstat(const struct pt_regs *);
435:	long __x64_sys_readlink(const struct pt_regs *);
429:	long __x64_sys_readlinkat(const struct pt_regs *);
255:	long __x64_sys_stat(const struct pt_regs *);
595:	long __x64_sys_statx(const struct pt_regs *);
566:	int do_statx(int, const char *, unsigned int, unsigned int, struct statx *);
35:	void generic_fillattr(struct inode *, struct kstat *);
701:	void inode_add_bytes(struct inode *, loff_t);
732:	loff_t inode_get_bytes(struct inode *);
744:	void inode_set_bytes(struct inode *, loff_t);
723:	void inode_sub_bytes(struct inode *, loff_t);
110:	int vfs_getattr(const struct path *, struct kstat *, u32, unsigned int);
71:	int vfs_getattr_nosec(const struct path *, struct kstat *, u32, unsigned int);
186:	int vfs_statx(int, const char *, int, struct kstat *, u32);
134:	int vfs_statx_fd(unsigned int, struct kstat *, u32, unsigned int);
676:	static long __do_compat_sys_newfstat(unsigned int, struct compat_stat *);
662:	static long __do_compat_sys_newfstatat(unsigned int, const char *, struct compat_stat *, int);
649:	static long __do_compat_sys_newlstat(const char *, struct compat_stat *);
637:	static long __do_compat_sys_newstat(const char *, struct compat_stat *);
281:	static long __do_sys_fstat(unsigned int, struct __old_kernel_stat *);
268:	static long __do_sys_lstat(const char *, struct __old_kernel_stat *);
382:	static long __do_sys_newfstat(unsigned int, struct stat *);
369:	static long __do_sys_newfstatat(int, const char *, struct stat *, int);
355:	static long __do_sys_newlstat(const char *, struct stat *);
344:	static long __do_sys_newstat(const char *, struct stat *);
255:	static long __do_sys_stat(const char *, struct __old_kernel_stat *);
604:	static int cp_compat_stat(struct kstat *, struct compat_stat *);
307:	static int cp_new_stat(struct kstat *, struct stat *);
218:	static int cp_old_stat(struct kstat *, struct __old_kernel_stat *);
533:	static int cp_statx(const struct kstat *, struct statx *);
393:	static int do_readlinkat(int, const char *, char *, int);

File fs/statfs.c:
295:	long __ia32_compat_sys_fstatfs(const struct pt_regs *);
362:	long __ia32_compat_sys_fstatfs64(const struct pt_regs *);
286:	long __ia32_compat_sys_statfs(const struct pt_regs *);
343:	long __ia32_compat_sys_statfs64(const struct pt_regs *);
372:	long __ia32_compat_sys_ustat(const struct pt_regs *);
197:	long __ia32_sys_fstatfs(const struct pt_regs *);
206:	long __ia32_sys_fstatfs64(const struct pt_regs *);
176:	long __ia32_sys_statfs(const struct pt_regs *);
185:	long __ia32_sys_statfs64(const struct pt_regs *);
232:	long __ia32_sys_ustat(const struct pt_regs *);
197:	long __x64_sys_fstatfs(const struct pt_regs *);
206:	long __x64_sys_fstatfs64(const struct pt_regs *);
176:	long __x64_sys_statfs(const struct pt_regs *);
185:	long __x64_sys_statfs64(const struct pt_regs *);
232:	long __x64_sys_ustat(const struct pt_regs *);
99:	int fd_statfs(int, struct kstatfs *);
348:	int kcompat_sys_fstatfs64(unsigned int, compat_size_t, struct compat_statfs64 *);
329:	int kcompat_sys_statfs64(const char *, compat_size_t, struct compat_statfs64 *);
81:	int user_statfs(const char *, struct kstatfs *);
70:	int vfs_statfs(const struct path *, struct kstatfs *);
295:	static long __do_compat_sys_fstatfs(unsigned int, struct compat_statfs *);
286:	static long __do_compat_sys_statfs(const char *, struct compat_statfs *);
372:	static long __do_compat_sys_ustat(unsigned int, struct compat_ustat *);
197:	static long __do_sys_fstatfs(unsigned int, struct statfs *);
206:	static long __do_sys_fstatfs64(unsigned int, size_t, struct statfs64 *);
176:	static long __do_sys_statfs(const char *, struct statfs *);
185:	static long __do_sys_statfs64(const char *, size_t, struct statfs64 *);
232:	static long __do_sys_ustat(unsigned int, struct ustat *);
152:	static int do_statfs64(struct kstatfs *, struct statfs64 *);
110:	static int do_statfs_native(struct kstatfs *, struct statfs *);
248:	static int put_compat_statfs(struct compat_statfs *, struct kstatfs *);
304:	static int put_compat_statfs64(struct compat_statfs64 *, struct kstatfs *);
53:	static int statfs_by_dentry(struct dentry *, struct kstatfs *);
220:	static int vfs_ustat(dev_t, struct kstatfs *);

File fs/super.c:
1351:	void __sb_end_write(struct super_block *, int);
1361:	int __sb_start_write(struct super_block *, int, bool);
323:	void deactivate_locked_super(struct super_block *);
356:	void deactivate_super(struct super_block *);
845:	int do_remount_sb(struct super_block *, int, void *, int);
575:	void drop_super(struct super_block *);
583:	void drop_super_exclusive(struct super_block *);
939:	void emergency_remount(void);
973:	void emergency_thaw_all(void);
1017:	void free_anon_bdev(dev_t);
1448:	int freeze_super(struct super_block *);
436:	void generic_shutdown_super(struct super_block *);
786:	struct super_block *get_active_super(struct block_device *);
997:	int get_anon_bdev(dev_t *);
725:	struct super_block *get_super(struct block_device *);
772:	struct super_block *get_super_exclusive_thawed(struct block_device *);
757:	struct super_block *get_super_thawed(struct block_device *);
620:	void iterate_supers(void (*)(struct super_block *, void *), void *);
655:	void iterate_supers_type(struct file_system_type *, void (*)(struct super_block *, void *), void *);
1029:	void kill_anon_super(struct super_block *);
1179:	void kill_block_super(struct super_block *);
1037:	void kill_litter_super(struct super_block *);
1104:	struct dentry *mount_bdev(struct file_system_type *, int, const char *, void *, int (*)(struct super_block *, void *, int));
1244:	struct dentry *mount_fs(struct file_system_type *, int, const char *, void *);
1194:	struct dentry *mount_nodev(struct file_system_type *, int, void *, int (*)(struct super_block *, void *, int));
1056:	struct dentry *mount_ns(struct file_system_type *, int, void *, void *, struct user_namespace *, int (*)(struct super_block *, void *, int));
1219:	struct dentry *mount_single(struct file_system_type *, int, void *, int (*)(struct super_block *, void *, int));
1023:	int set_anon_super(struct super_block *, void *);
551:	struct super_block *sget(struct file_system_type *, int (*)(struct super_block *, void *), int (*)(struct super_block *, void *), int, void *);
486:	struct super_block *sget_userns(struct file_system_type *, int (*)(struct super_block *, void *), int (*)(struct super_block *, void *), int, struct user_namespace *, void *);
1338:	int super_setup_bdi(struct super_block *);
1308:	int super_setup_bdi_name(struct super_block *, char *, ...);
1552:	int thaw_super(struct super_block *);
410:	bool trylock_super(struct super_block *);
809:	struct super_block *user_get_super(dev_t);
682:	static struct super_block *__get_super(struct block_device *, bool);
731:	static struct super_block *__get_super_thawed(struct block_device *, bool);
590:	static void __iterate_supers(void (*)(struct super_block *));
283:	static void __put_super(struct super_block *);
1214:	static int compare_single(struct super_block *, void *);
165:	static void destroy_super_rcu(struct callback_head *);
154:	static void destroy_super_work(struct work_struct *);
173:	static void destroy_unused_super(struct super_block *);
932:	static void do_emergency_remount(struct work_struct *);
919:	static void do_emergency_remount_callback(struct super_block *);
961:	static void do_thaw_all(struct work_struct *);
950:	static void do_thaw_all_callback(struct super_block *);
379:	static int grab_super(struct super_block *);
1050:	static int ns_set_super(struct super_block *, void *);
1045:	static int ns_test_super(struct super_block *, void *);
304:	static void put_super(struct super_block *);
1090:	static int set_bdev_super(struct super_block *, void *);
115:	static unsigned long super_cache_count(struct shrinker *, struct shrink_control *);
58:	static unsigned long super_cache_scan(struct shrinker *, struct shrink_control *);
1099:	static int test_bdev_super(struct super_block *, void *);
1517:	static int thaw_super_locked(struct super_block *);

File fs/sync.c:
232:	long __ia32_sys_fdatasync(const struct pt_regs *);
227:	long __ia32_sys_fsync(const struct pt_regs *);
379:	long __ia32_sys_sync_file_range(const struct pt_regs *);
387:	long __ia32_sys_sync_file_range2(const struct pt_regs *);
160:	long __ia32_sys_syncfs(const struct pt_regs *);
232:	long __x64_sys_fdatasync(const struct pt_regs *);
227:	long __x64_sys_fsync(const struct pt_regs *);
122:	long __x64_sys_sync(const struct pt_regs *);
379:	long __x64_sys_sync_file_range(const struct pt_regs *);
387:	long __x64_sys_sync_file_range2(const struct pt_regs *);
160:	long __x64_sys_syncfs(const struct pt_regs *);
146:	void emergency_sync(void);
108:	void ksys_sync(void);
364:	int ksys_sync_file_range(int, loff_t, loff_t, unsigned int);
237:	int sync_file_range(struct file *, loff_t, loff_t, unsigned int);
48:	int sync_filesystem(struct super_block *);
209:	int vfs_fsync(struct file *, int);
189:	int vfs_fsync_range(struct file *, loff_t, loff_t, int);
215:	static int do_fsync(unsigned int, int);
128:	static void do_sync_work(struct work_struct *);
88:	static void fdatawait_one_bdev(struct block_device *, void *);
83:	static void fdatawrite_one_bdev(struct block_device *, void *);
77:	static void sync_fs_one_sb(struct super_block *, void *);
71:	static void sync_inodes_one_sb(struct super_block *, void *);

File fs/sysfs/dir.c:
40:	int sysfs_create_dir_ns(struct kobject *, const void *);
135:	int sysfs_create_mount_point(struct kobject *, const char *);
118:	int sysfs_move_dir_ns(struct kobject *, struct kobject *, const void *);
80:	void sysfs_remove_dir(struct kobject *);
156:	void sysfs_remove_mount_point(struct kobject *, const char *);
106:	int sysfs_rename_dir_ns(struct kobject *, const char *, const void *);
21:	void sysfs_warn_dup(struct kernfs_node *, const char *);

File fs/sysfs/file.c:
246:	int sysfs_add_file_mode_ns(struct kernfs_node *, const struct attribute *, bool, umode_t, kuid_t, kgid_t, const void *);
358:	int sysfs_add_file_to_group(struct kobject *, const struct attribute *, const char *);
423:	struct kernfs_node *sysfs_break_active_protection(struct kobject *, const struct attribute *);
392:	int sysfs_chmod_file(struct kobject *, const struct attribute *, umode_t);
535:	int sysfs_create_bin_file(struct kobject *, const struct bin_attribute *);
322:	int sysfs_create_file_ns(struct kobject *, const struct attribute *, const void *);
338:	int sysfs_create_files(struct kobject *, const struct attribute **);
572:	int sysfs_emit(char *, const char *, ...);
600:	int sysfs_emit_at(char *, int, const char *, ...);
173:	void sysfs_notify(struct kobject *, const char *, const char *);
555:	void sysfs_remove_bin_file(struct kobject *, const struct bin_attribute *);
511:	void sysfs_remove_file_from_group(struct kobject *, const struct attribute *, const char *);
465:	void sysfs_remove_file_ns(struct kobject *, const struct attribute *, const void *);
481:	bool sysfs_remove_file_self(struct kobject *, const struct attribute *);
497:	void sysfs_remove_files(struct kobject *, const struct attribute **);
447:	void sysfs_unbreak_active_protection(struct kernfs_node *);
164:	static int sysfs_kf_bin_mmap(struct kernfs_open_file *, struct vm_area_struct *);
80:	static ssize_t sysfs_kf_bin_read(struct kernfs_open_file *, char *, size_t, loff_t);
143:	static ssize_t sysfs_kf_bin_write(struct kernfs_open_file *, char *, size_t, loff_t);
104:	static ssize_t sysfs_kf_read(struct kernfs_open_file *, char *, size_t, loff_t);
40:	static int sysfs_kf_seq_show(struct seq_file *, void *);
130:	static ssize_t sysfs_kf_write(struct kernfs_open_file *, char *, size_t, loff_t);

File fs/sysfs/group.c:
424:	int __compat_only_sysfs_link_entry_to_kobj(struct kobject *, struct kobject *, const char *);
381:	int sysfs_add_link_to_group(struct kobject *, const char *, struct kobject *, const char *);
171:	int sysfs_create_group(struct kobject *, const struct attribute_group *);
211:	int sysfs_create_groups(struct kobject *, const struct attribute_group **);
325:	int sysfs_merge_group(struct kobject *, const struct attribute_group *);
269:	void sysfs_remove_group(struct kobject *, const struct attribute_group *);
304:	void sysfs_remove_groups(struct kobject *, const struct attribute_group **);
404:	void sysfs_remove_link_from_group(struct kobject *, const char *, const char *);
359:	void sysfs_unmerge_group(struct kobject *, const struct attribute_group *);
254:	int sysfs_update_group(struct kobject *, const struct attribute_group *);
229:	int sysfs_update_groups(struct kobject *, const struct attribute_group **);
107:	static int internal_create_group(struct kobject *, int, const struct attribute_group *);
178:	static int internal_create_groups(struct kobject *, int, const struct attribute_group **);
19:	static void remove_files(struct kernfs_node *, const struct attribute_group *, const struct attribute_group *);

File fs/sysfs/mount.c:
61:	int sysfs_init(void);
46:	static void sysfs_kill_sb(struct super_block *);
23:	static struct dentry *sysfs_mount(struct file_system_type *, int, const char *, void *);

File fs/sysfs/symlink.c:
89:	int sysfs_create_link(struct kobject *, struct kobject *, const char *);
105:	int sysfs_create_link_nowarn(struct kobject *, struct kobject *, const char *);
61:	int sysfs_create_link_sd(struct kernfs_node *, struct kobject *, const char *);
121:	void sysfs_delete_link(struct kobject *, struct kobject *, const char *);
143:	void sysfs_remove_link(struct kobject *, const char *);
166:	int sysfs_rename_link_ns(struct kobject *, struct kobject *, const char *, const char *, const void *);
20:	static int sysfs_do_create_link_sd(struct kernfs_node *, const char *, int, struct kobject *);

File fs/timerfd.c:
580:	long __ia32_compat_sys_timerfd_gettime(const struct pt_regs *);
563:	long __ia32_compat_sys_timerfd_settime(const struct pt_regs *);
387:	long __ia32_sys_timerfd_create(const struct pt_regs *);
553:	long __ia32_sys_timerfd_gettime(const struct pt_regs *);
535:	long __ia32_sys_timerfd_settime(const struct pt_regs *);
387:	long __x64_sys_timerfd_create(const struct pt_regs *);
553:	long __x64_sys_timerfd_gettime(const struct pt_regs *);
535:	long __x64_sys_timerfd_settime(const struct pt_regs *);
96:	void timerfd_clock_was_set(void);
117:	static void __timerfd_remove_cancel(struct timerfd_ctx *);
503:	static int do_timerfd_gettime(int, struct itimerspec64 *);
435:	static int do_timerfd_settime(int, int, const struct itimerspec64 *, struct itimerspec64 *);
81:	static enum alarmtimer_restart timerfd_alarmproc(struct alarm *, ktime_t);
374:	static int timerfd_fget(int, struct fd *);
160:	static ktime_t timerfd_get_remaining(struct timerfd_ctx *);
331:	static long timerfd_ioctl(struct file *, unsigned int, unsigned long);
230:	static __poll_t timerfd_poll(struct file *, poll_table *);
246:	static ssize_t timerfd_read(struct file *, char *, size_t, loff_t *);
216:	static int timerfd_release(struct inode *, struct file *);
302:	static void timerfd_show(struct seq_file *, struct file *);
73:	static enum hrtimer_restart timerfd_tmrproc(struct hrtimer *);
62:	static void timerfd_triggered(struct timerfd_ctx *);

File fs/tracefs/inode.c:
462:	struct dentry *tracefs_create_dir(const char *, struct dentry *);
393:	struct dentry *tracefs_create_file(const char *, umode_t, struct dentry *, void *, const struct file_operations *);
484:	struct dentry *tracefs_create_instance_dir(const char *, struct dentry *, int (*)(const char *), int (*)(const char *));
531:	bool tracefs_initialized(void);
518:	void tracefs_remove(struct dentry *);
420:	static struct dentry *__create_dir(const char *, struct dentry *, const struct inode_operations *);
34:	static ssize_t default_read_file(struct file *, char *, size_t, loff_t *);
40:	static ssize_t default_write_file(struct file *, const char *, size_t, loff_t *);
58:	static char *get_dname(struct dentry *, struct dentry *);
505:	static void remove_one(struct dentry *);
315:	static struct dentry *start_creating(const char *, struct dentry *);
267:	static int trace_fill_super(struct super_block *, void *, int);
300:	static struct dentry *trace_mount(struct file_system_type *, int, const char *, void *);
131:	static struct inode *tracefs_get_inode(struct super_block *);
536:	static int tracefs_init(void);
165:	static int tracefs_parse_options(char *, struct tracefs_mount_opts *);
228:	static int tracefs_remount(struct super_block *, int *, char *);
244:	static int tracefs_show_options(struct seq_file *, struct dentry *);
73:	static int tracefs_syscall_mkdir(struct inode *, struct dentry *, umode_t);
96:	static int tracefs_syscall_rmdir(struct inode *, struct dentry *);

File fs/userfaultfd.c:
1976:	long __ia32_sys_userfaultfd(const struct pt_regs *);
1976:	long __x64_sys_userfaultfd(const struct pt_regs *);
680:	int dup_userfaultfd(struct vm_area_struct *, struct list_head *);
741:	void dup_userfaultfd_complete(struct list_head *);
361:	vm_fault_t handle_userfault(struct vm_fault *, unsigned long);
773:	void mremap_userfaultfd_complete(struct vm_userfaultfd_ctx *, unsigned long, unsigned long, unsigned long);
752:	void mremap_userfaultfd_prep(struct vm_area_struct *, struct vm_userfaultfd_ctx *);
798:	bool userfaultfd_remove(struct vm_area_struct *, unsigned long, unsigned long);
864:	void userfaultfd_unmap_complete(struct mm_struct *, struct list_head *);
837:	int userfaultfd_unmap_prep(struct vm_area_struct *, unsigned long, unsigned long, struct list_head *);
1238:	static void __wake_userfault(struct userfaultfd_ctx *, struct userfaultfd_wake_range *);
2013:	static int enable_userswap_setup(char *);
1965:	static void init_once_userfaultfd_ctx(void *);
155:	static void userfaultfd_ctx_get(struct userfaultfd_ctx *);
169:	static void userfaultfd_ctx_put(struct userfaultfd_ctx *);
593:	static void userfaultfd_event_wait_completion(struct userfaultfd_ctx *, struct userfaultfd_wait_queue *);
2021:	static int userfaultfd_init(void);
1893:	static long userfaultfd_ioctl(struct file *, unsigned int, unsigned long);
989:	static __poll_t userfaultfd_poll(struct file *, poll_table *);
1208:	static ssize_t userfaultfd_read(struct file *, char *, size_t, loff_t *);
883:	static int userfaultfd_release(struct inode *, struct file *);
1926:	static void userfaultfd_show_fdinfo(struct seq_file *, struct file *);
110:	static int userfaultfd_wake_function(wait_queue_entry_t *, unsigned int, int, void *);

File fs/utimes.c:
283:	long __ia32_compat_sys_futimesat(const struct pt_regs *);
233:	long __ia32_compat_sys_utime(const struct pt_regs *);
248:	long __ia32_compat_sys_utimensat(const struct pt_regs *);
290:	long __ia32_compat_sys_utimes(const struct pt_regs *);
216:	long __ia32_sys_futimesat(const struct pt_regs *);
24:	long __ia32_sys_utime(const struct pt_regs *);
168:	long __ia32_sys_utimensat(const struct pt_regs *);
222:	long __ia32_sys_utimes(const struct pt_regs *);
216:	long __x64_sys_futimesat(const struct pt_regs *);
24:	long __x64_sys_utime(const struct pt_regs *);
168:	long __x64_sys_utimensat(const struct pt_regs *);
222:	long __x64_sys_utimes(const struct pt_regs *);
119:	long do_utimes(int, const char *, struct timespec64 *, int);
263:	static long do_compat_futimesat(unsigned int, const char *, struct compat_timeval *);
187:	static long do_futimesat(int, const char *, struct timeval *);
48:	static int utimes_common(const struct path *, struct timespec64 *);

File fs/xattr.c:
656:	long __ia32_sys_fgetxattr(const struct pt_regs *);
732:	long __ia32_sys_flistxattr(const struct pt_regs *);
797:	long __ia32_sys_fremovexattr(const struct pt_regs *);
564:	long __ia32_sys_fsetxattr(const struct pt_regs *);
644:	long __ia32_sys_getxattr(const struct pt_regs *);
650:	long __ia32_sys_lgetxattr(const struct pt_regs *);
720:	long __ia32_sys_listxattr(const struct pt_regs *);
726:	long __ia32_sys_llistxattr(const struct pt_regs *);
791:	long __ia32_sys_lremovexattr(const struct pt_regs *);
557:	long __ia32_sys_lsetxattr(const struct pt_regs *);
785:	long __ia32_sys_removexattr(const struct pt_regs *);
550:	long __ia32_sys_setxattr(const struct pt_regs *);
337:	ssize_t __vfs_getxattr(struct dentry *, struct inode *, const char *, void *, size_t);
403:	int __vfs_removexattr(struct dentry *, const char *);
427:	int __vfs_removexattr_locked(struct dentry *, const char *, struct inode **);
137:	int __vfs_setxattr(struct dentry *, struct inode *, const char *, const void *, size_t, int);
219:	int __vfs_setxattr_locked(struct dentry *, const char *, const void *, size_t, int, struct inode **);
169:	int __vfs_setxattr_noperm(struct dentry *, const char *, const void *, size_t, int);
656:	long __x64_sys_fgetxattr(const struct pt_regs *);
732:	long __x64_sys_flistxattr(const struct pt_regs *);
797:	long __x64_sys_fremovexattr(const struct pt_regs *);
564:	long __x64_sys_fsetxattr(const struct pt_regs *);
644:	long __x64_sys_getxattr(const struct pt_regs *);
650:	long __x64_sys_lgetxattr(const struct pt_regs *);
720:	long __x64_sys_listxattr(const struct pt_regs *);
726:	long __x64_sys_llistxattr(const struct pt_regs *);
791:	long __x64_sys_lremovexattr(const struct pt_regs *);
557:	long __x64_sys_lsetxattr(const struct pt_regs *);
785:	long __x64_sys_removexattr(const struct pt_regs *);
550:	long __x64_sys_setxattr(const struct pt_regs *);
819:	ssize_t generic_listxattr(struct dentry *, char *, size_t);
879:	struct simple_xattr *simple_xattr_alloc(const void *, size_t);
901:	int simple_xattr_get(struct simple_xattrs *, const char *, void *, size_t);
1012:	ssize_t simple_xattr_list(struct inode *, struct simple_xattrs *, char *, size_t);
1055:	void simple_xattr_list_add(struct simple_xattrs *, struct simple_xattr *);
939:	int simple_xattr_set(struct simple_xattrs *, const char *, const void *, size_t, int);
352:	ssize_t vfs_getxattr(struct dentry *, const char *, void *, size_t);
303:	ssize_t vfs_getxattr_alloc(struct dentry *, const char *, char **, size_t, gfp_t);
383:	ssize_t vfs_listxattr(struct dentry *, char *, size_t);
458:	int vfs_removexattr(struct dentry *, const char *);
246:	int vfs_setxattr(struct dentry *, const char *, const void *, size_t, int);
867:	const char *xattr_full_name(const struct xattr_handler *, const char *);
586:	static ssize_t getxattr(struct dentry *, const char *, void *, size_t);
674:	static ssize_t listxattr(struct dentry *, char *, size_t);
625:	static ssize_t path_getxattr(const char *, const char *, void *, size_t, unsigned int);
702:	static ssize_t path_listxattr(const char *, char *, size_t, unsigned int);
763:	static int path_removexattr(const char *, const char *, unsigned int);
527:	static int path_setxattr(const char *, const char *, const void *, size_t, int, unsigned int);
749:	static long removexattr(struct dentry *, const char *);
483:	static long setxattr(struct dentry *, const char *, const void *, size_t, int);
995:	static int xattr_list_one(char **, ssize_t *, const char *);
85:	static int xattr_permission(struct inode *, const char *, int);
53:	static const struct xattr_handler *xattr_resolve_name(struct inode *, const char **);

File init/calibrate.c:
275:	void calibrate_delay(void);
261:	unsigned long calibrate_delay_is_known(void);
271:	void calibration_delay_done(void);
17:	static int lpj_setup(char *);

File init/do_mounts.c:
618:	int init_rootfs(void);
371:	void mount_block_root(char *, int);
501:	void mount_root(void);
200:	dev_t name_to_dev_t(const char *);
538:	void prepare_namespace(void);
309:	static int fs_names_setup(char *);
37:	static int load_ramdisk(char *);
76:	static int match_dev_by_uuid(struct device *, const void *);
44:	static int readonly(char *);
52:	static int readwrite(char *);
302:	static int root_data_setup(char *);
316:	static int root_delay_setup(char *);
283:	static int root_dev_setup(char *);
597:	static struct dentry *rootfs_mount(struct file_system_type *, int, const char *, void *);
291:	static int rootwait_setup(char *);

File init/do_mounts.h:
23:	static u32 bstat(char *);

File init/do_mounts_initrd.c:
110:	bool initrd_load(void);
19:	static int no_initrd(char *);

File init/do_mounts_md.c:
295:	void md_run_setup(void);
54:	static int md_setup(char *);
117:	static void md_setup_drive(void);
245:	static int raid_setup(char *);

File init/initramfs.c:
294:	static void clean_path(char *, umode_t);
229:	static int do_collect(void);
363:	static int do_copy(void);
243:	static int do_header(void);
320:	static int do_name(void);
285:	static int do_reset(void);
273:	static int do_skip(void);
223:	static int do_start(void);
383:	static int do_symlink(void);
102:	static long do_utime(char *, time64_t);
195:	static void eat(unsigned int);
38:	static void error(char *);
416:	static long flush_buffer(void *, unsigned long);
306:	static int maybe_link(void);
154:	static void parse_header(char *);
602:	static int populate_rootfs(void);
507:	static int retain_initrd_param(char *);
443:	static char *unpack_to_rootfs(char *, unsigned long);
406:	static long write_buffer(char *, unsigned long);
14:	static ssize_t xwrite(int, const char *, size_t);

File init/main.c:
485:	void arch_post_acpi_subsys_init(void);
872:	int do_one_initcall(initcall_t);
994:	void load_default_modules(void);
497:	void mem_encrypt_init(void);
464:	void parse_early_options(char *);
471:	void parse_early_param(void);
487:	void smp_setup_processor_id(void);
530:	void start_kernel(void);
492:	void thread_stack_cache_init(void);
214:	static int debug_kernel(char *);
446:	static int do_early_param(char *, char *, const char *, void *);
334:	static int init_setup(char *);
758:	static int initcall_blacklist(char *);
778:	static bool initcall_blacklisted(initcall_t);
1056:	static int kernel_init(void *);
1110:	static void kernel_init_freeable(void);
229:	static int loglevel(char *);
220:	static int quiet_kernel(char *);
351:	static int rdinit_setup(char *);
249:	static int repair_env_string(char *, char *, const char *, void *);
397:	static void rest_init(void);
999:	static int run_init_process(const char *);
1026:	static int set_debug_rodata(char *);
267:	static int set_init_arg(char *, char *, const char *, void *);
164:	static int set_reset_devices(char *);
829:	static void trace_initcall_finish_cb(void *, initcall_t, int);
820:	static void trace_initcall_start_cb(void *, initcall_t);
1008:	static int try_to_run_init_process(const char *);
292:	static int unknown_bootoption(char *, char *, const char *, void *);

File ipc/compat.c:
38:	int get_compat_ipc64_perm(struct ipc64_perm *, struct compat_ipc64_perm *);
50:	int get_compat_ipc_perm(struct ipc64_perm *, struct compat_ipc_perm *);
62:	void to_compat_ipc64_perm(struct compat_ipc64_perm *, struct ipc64_perm *);
73:	void to_compat_ipc_perm(struct compat_ipc_perm *, struct ipc64_perm *);

File ipc/ipc_sysctl.c:
218:	static int ipc_sysctl_init(void);
76:	static int proc_ipc_auto_msgmni(struct ctl_table *, int, void *, size_t *, loff_t *);
30:	static int proc_ipc_dointvec(struct ctl_table *, int, void *, size_t *, loff_t *);
41:	static int proc_ipc_dointvec_minmax(struct ctl_table *, int, void *, size_t *, loff_t *);
52:	static int proc_ipc_dointvec_minmax_orphans(struct ctl_table *, int, void *, size_t *, loff_t *);
65:	static int proc_ipc_doulongvec_minmax(struct ctl_table *, int, void *, size_t *, loff_t *);

File ipc/mq_sysctl.c:
121:	struct ctl_table_header *mq_register_sysctl_table(void);
25:	static int proc_mq_dointvec(struct ctl_table *, int, void *, size_t *, loff_t *);
35:	static int proc_mq_dointvec_minmax(struct ctl_table *, int, void *, size_t *, loff_t *);

File ipc/mqueue.c:
1462:	long __ia32_compat_sys_mq_getsetattr(const struct pt_regs *);
1448:	long __ia32_compat_sys_mq_notify(const struct pt_regs *);
1435:	long __ia32_compat_sys_mq_open(const struct pt_regs *);
1514:	long __ia32_compat_sys_mq_timedreceive(const struct pt_regs *);
1499:	long __ia32_compat_sys_mq_timedsend(const struct pt_regs *);
1369:	long __ia32_sys_mq_getsetattr(const struct pt_regs *);
1313:	long __ia32_sys_mq_notify(const struct pt_regs *);
817:	long __ia32_sys_mq_open(const struct pt_regs *);
1167:	long __ia32_sys_mq_timedreceive(const struct pt_regs *);
1153:	long __ia32_sys_mq_timedsend(const struct pt_regs *);
827:	long __ia32_sys_mq_unlink(const struct pt_regs *);
1369:	long __x64_sys_mq_getsetattr(const struct pt_regs *);
1313:	long __x64_sys_mq_notify(const struct pt_regs *);
817:	long __x64_sys_mq_open(const struct pt_regs *);
1167:	long __x64_sys_mq_timedreceive(const struct pt_regs *);
1153:	long __x64_sys_mq_timedsend(const struct pt_regs *);
827:	long __x64_sys_mq_unlink(const struct pt_regs *);
1575:	void mq_clear_sbinfo(struct ipc_namespace *);
1557:	int mq_init_ns(struct ipc_namespace *);
1580:	void mq_put_mnt(struct ipc_namespace *);
1462:	static long __do_compat_sys_mq_getsetattr(mqd_t, const struct compat_mq_attr *, struct compat_mq_attr *);
657:	static void __do_notify(struct mqueue_inode_info *);
1369:	static long __do_sys_mq_getsetattr(mqd_t, const struct mq_attr *, struct mq_attr *);
1325:	static int do_mq_getsetattr(int, struct mq_attr *, struct mq_attr *);
1186:	static int do_mq_notify(mqd_t, const struct sigevent *);
768:	static int do_mq_open(const char *, int, umode_t, struct mq_attr *);
1051:	static int do_mq_timedreceive(mqd_t, char *, size_t, unsigned int *, struct timespec64 *);
933:	static int do_mq_timedsend(mqd_t, const char *, size_t, unsigned int, struct timespec64 *);
1585:	static int init_mqueue_fs(void);
361:	static void init_once(void *);
368:	static struct inode *mqueue_alloc_inode(struct super_block *);
489:	static int mqueue_create(struct inode *, struct dentry *, umode_t, bool);
444:	static int mqueue_create_attr(struct dentry *, umode_t, void *);
384:	static void mqueue_destroy_inode(struct inode *);
389:	static void mqueue_evict_inode(struct inode *);
326:	static int mqueue_fill_super(struct super_block *, void *, int);
541:	static int mqueue_flush_file(struct file *, fl_owner_t);
216:	static struct inode *mqueue_get_inode(struct super_block *, struct ipc_namespace *, umode_t, struct mq_attr *);
378:	static void mqueue_i_callback(struct callback_head *);
347:	static struct dentry *mqueue_mount(struct file_system_type *, int, const char *, void *);
553:	static __poll_t mqueue_poll_file(struct file *, struct poll_table_struct *);
513:	static ssize_t mqueue_read_file(struct file *, char *, size_t, loff_t *);
495:	static int mqueue_unlink(struct inode *, struct dentry *);
124:	static int msg_insert(struct msg_msg *, struct mqueue_inode_info *);
728:	static void remove_notification(struct mqueue_inode_info *);
593:	static int wq_sleep(struct mqueue_inode_info *, int, ktime_t *, struct ext_wait_queue *);

File ipc/msg.c:
736:	long __ia32_compat_sys_msgctl(const struct pt_regs *);
1234:	long __ia32_compat_sys_msgrcv(const struct pt_regs *);
939:	long __ia32_compat_sys_msgsnd(const struct pt_regs *);
615:	long __ia32_sys_msgctl(const struct pt_regs *);
293:	long __ia32_sys_msgget(const struct pt_regs *);
1206:	long __ia32_sys_msgrcv(const struct pt_regs *);
915:	long __ia32_sys_msgsnd(const struct pt_regs *);
615:	long __x64_sys_msgctl(const struct pt_regs *);
293:	long __x64_sys_msgget(const struct pt_regs *);
1206:	long __x64_sys_msgrcv(const struct pt_regs *);
915:	long __x64_sys_msgsnd(const struct pt_regs *);
693:	long compat_ksys_msgctl(int, int, void *);
1227:	long compat_ksys_msgrcv(int, compat_uptr_t, compat_ssize_t, compat_long_t, int);
928:	long compat_ksys_msgsnd(int, compat_uptr_t, compat_ssize_t, int);
570:	long ksys_msgctl(int, int, struct msqid_ds *);
276:	long ksys_msgget(key_t, int);
1200:	long ksys_msgrcv(int, struct msgbuf *, size_t, long, int);
905:	long ksys_msgsnd(int, struct msgbuf *, size_t, int);
1254:	void msg_exit_ns(struct ipc_namespace *);
1291:	void msg_init(void);
1242:	void msg_init_ns(struct ipc_namespace *);
1213:	static long compat_do_msg_fill(void *, struct msg_msg *, size_t);
658:	static int copy_compat_msqid_to_user(void *, struct msqid64_ds *, int);
344:	static unsigned long copy_msqid_from_user(struct msqid64_ds *, void *, int);
299:	static unsigned long copy_msqid_to_user(void *, struct msqid64_ds *, int);
970:	static long do_msg_fill(void *, struct msg_msg *, size_t);
1042:	static long do_msgrcv(int, void *, size_t, long, int, long (*)(void *, struct msg_msg *, size_t));
792:	static long do_msgsnd(int, long, void *, size_t, int);
253:	static void freeque(struct ipc_namespace *, struct kern_ipc_perm *);
117:	static void msg_rcu_free(struct callback_head *);
379:	static int msgctl_down(struct ipc_namespace *, int, int, struct ipc64_perm *, int);
455:	static int msgctl_info(struct ipc_namespace *, int, struct msginfo *, int);
491:	static int msgctl_stat(struct ipc_namespace *, int, int, struct msqid64_ds *);
133:	static int newque(struct ipc_namespace *, struct ipc_params *);
197:	static void ss_wakeup(struct msg_queue *, struct wake_q_head *, bool);
1263:	static int sysvipc_msg_proc_show(struct seq_file *, void *);
742:	static int testmsg(long, int, struct msg_msg *);

File ipc/msgutil.c:
122:	struct msg_msg *copy_msg(struct msg_msg *, struct msg_msg *);
173:	void free_msg(struct msg_msg *);
88:	struct msg_msg *load_msg(const void *, size_t);
154:	int store_msg(void *, struct msg_msg *, size_t);

File ipc/namespace.c:
79:	struct ipc_namespace *copy_ipcs(unsigned long, struct user_namespace *, struct ipc_namespace *);
95:	void free_ipcs(struct ipc_namespace *, struct ipc_ids *, void (*)(struct ipc_namespace *, struct kern_ipc_perm *));
146:	void put_ipc_ns(struct ipc_namespace *);
161:	static struct ns_common *ipcns_get(struct task_struct *);
180:	static int ipcns_install(struct nsproxy *, struct ns_common *);
194:	static struct user_namespace *ipcns_owner(struct ns_common *);
175:	static void ipcns_put(struct ns_common *);

File ipc/sem.c:
1793:	long __ia32_compat_sys_semctl(const struct pt_regs *);
2229:	long __ia32_compat_sys_semtimedop(const struct pt_regs *);
1692:	long __ia32_sys_semctl(const struct pt_regs *);
607:	long __ia32_sys_semget(const struct pt_regs *);
2237:	long __ia32_sys_semop(const struct pt_regs *);
2209:	long __ia32_sys_semtimedop(const struct pt_regs *);
1692:	long __x64_sys_semctl(const struct pt_regs *);
607:	long __x64_sys_semget(const struct pt_regs *);
2237:	long __x64_sys_semop(const struct pt_regs *);
2209:	long __x64_sys_semtimedop(const struct pt_regs *);
1747:	long compat_ksys_semctl(int, int, int, int);
2216:	long compat_ksys_semtimedop(int, struct sembuf *, unsigned int, const struct compat_timespec *);
2247:	int copy_semundo(unsigned long, struct task_struct *);
2276:	void exit_sem(struct task_struct *);
1637:	long ksys_semctl(int, int, int, unsigned long);
585:	long ksys_semget(key_t, int, int);
2197:	long ksys_semtimedop(int, struct sembuf *, unsigned int, const struct timespec *);
235:	void sem_exit_ns(struct ipc_namespace *);
243:	void sem_init(void);
224:	void sem_init_ns(struct ipc_namespace *);
1057:	static int check_qop(int, struct sem_queue *, bool, struct sem_array *);
311:	static void complexmode_enter(struct sem_array *);
1723:	static int copy_compat_semid_to_user(void *, struct semid64_ds *, int);
1557:	static unsigned long copy_semid_from_user(struct semid64_ds *, void *, int);
1180:	static unsigned long copy_semid_to_user(void *, struct semid64_ds *, int);
1091:	static int count_semcnt(struct sem_array *, ushort, bool);
1943:	static long do_semtimedop(int, struct sembuf *, unsigned int, const struct timespec64 *);
1014:	static void do_smart_update(struct sem_array *, struct sembuf *, int, int, struct wake_q_head *);
878:	static int do_smart_wakeup_zero(struct sem_array *, struct sembuf *, int, struct wake_q_head *);
1865:	static struct sem_undo *find_alloc_undo(struct ipc_namespace *, int);
1128:	static void freeary(struct ipc_namespace *, struct kern_ipc_perm *);
1840:	static struct sem_undo *lookup_undo(struct sem_undo_list *, int);
513:	static int newary(struct ipc_namespace *, struct ipc_params *);
702:	static int perform_atomic_semop(struct sem_array *, struct sem_queue *);
573:	static int sem_more_checks(struct kern_ipc_perm *, struct ipc_params *);
298:	static void sem_rcu_free(struct callback_head *);
438:	static void sem_unlock(struct sem_array *, int);
1587:	static int semctl_down(struct ipc_namespace *, int, int, struct semid64_ds *);
1293:	static int semctl_info(struct ipc_namespace *, int, void *, int);
1390:	static int semctl_main(struct ipc_namespace *, int, int, int, void *);
1328:	static int semctl_setval(struct ipc_namespace *, int, int, int);
1219:	static int semctl_stat(struct ipc_namespace *, int, int, struct semid64_ds *);
2390:	static int sysvipc_sem_proc_show(struct seq_file *, void *);
934:	static int update_queue(struct sem_array *, int, struct wake_q_head *);
839:	static int wake_const_ops(struct sem_array *, int, struct wake_q_head *);

File ipc/shm.c:
1583:	long __ia32_compat_sys_shmat(const struct pt_regs *);
1379:	long __ia32_compat_sys_shmctl(const struct pt_regs *);
1565:	long __ia32_sys_shmat(const struct pt_regs *);
1195:	long __ia32_sys_shmctl(const struct pt_regs *);
1707:	long __ia32_sys_shmdt(const struct pt_regs *);
745:	long __ia32_sys_shmget(const struct pt_regs *);
1565:	long __x64_sys_shmat(const struct pt_regs *);
1195:	long __x64_sys_shmctl(const struct pt_regs *);
1707:	long __x64_sys_shmdt(const struct pt_regs *);
745:	long __x64_sys_shmget(const struct pt_regs *);
1322:	long compat_ksys_shmctl(int, int, void *);
1392:	long do_shmat(int, char *, int, ulong *, unsigned long);
383:	void exit_shm(struct task_struct *);
576:	bool is_file_shm_hugepages(struct file *);
1140:	long ksys_shmctl(int, int, struct shmid_ds *);
1600:	long ksys_shmdt(char *);
726:	long ksys_shmget(key_t, size_t, int);
374:	void shm_destroy_orphaned(struct ipc_namespace *);
129:	void shm_exit_ns(struct ipc_namespace *);
145:	void shm_init(void);
99:	void shm_init_ns(struct ipc_namespace *);
235:	static int __shm_open(struct vm_area_struct *);
1275:	static int copy_compat_shmid_to_user(void *, struct shmid64_ds *, int);
113:	static void do_shm_rmid(struct ipc_namespace *, struct kern_ipc_perm *);
137:	static int ipc_ns_init(void);
600:	static int newseg(struct ipc_namespace *, struct ipc_params *);
832:	static void shm_add_rss_swap(unsigned long *, unsigned long *, struct shmid_kernel *);
322:	static void shm_close(struct vm_area_struct *);
279:	static void shm_destroy(struct ipc_namespace *, struct shmid_kernel *);
534:	static long shm_fallocate(struct file *, int, loff_t, loff_t);
429:	static vm_fault_t shm_fault(struct vm_fault *);
525:	static int shm_fsync(struct file *, loff_t, loff_t, int);
471:	static struct mempolicy *shm_get_policy(struct vm_area_struct *, unsigned long);
544:	static unsigned long shm_get_unmapped_area(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);
487:	static int shm_mmap(struct file *, struct vm_area_struct *);
714:	static int shm_more_checks(struct kern_ipc_perm *, struct ipc_params *);
260:	static void shm_open(struct vm_area_struct *);
448:	static unsigned long shm_pagesize(struct vm_area_struct *);
218:	static void shm_rcu_free(struct callback_head *);
514:	static int shm_release(struct inode *, struct file *);
460:	static int shm_set_policy(struct vm_area_struct *, struct mempolicy *);
437:	static int shm_split(struct vm_area_struct *, unsigned long);
352:	static int shm_try_destroy_orphaned(int, void *, void *);
1064:	static int shmctl_do_lock(struct ipc_namespace *, int, int);
891:	static int shmctl_down(struct ipc_namespace *, int, int, struct shmid64_ds *);
941:	static int shmctl_ipc_info(struct ipc_namespace *, struct shminfo64 *);
960:	static int shmctl_shm_info(struct ipc_namespace *, struct shm_info *);
980:	static int shmctl_stat(struct ipc_namespace *, int, int, struct shmid64_ds *);
1713:	static int sysvipc_shm_proc_show(struct seq_file *, void *);

File ipc/syscall.c:
124:	long __ia32_compat_sys_ipc(const struct pt_regs *);

File ipc/util.c:
543:	void ipc64_perm_to_ipc_perm(struct ipc64_perm *, struct ipc_perm *);
248:	int ipc_addid(struct ipc_ids *, struct kern_ipc_perm *, int);
115:	void ipc_init_ids(struct ipc_ids *);
137:	void ipc_init_proc_interface(const char *, const char *, int, int (*)(struct seq_file *, void *));
587:	struct kern_ipc_perm *ipc_obtain_object_check(struct ipc_ids *, int);
564:	struct kern_ipc_perm *ipc_obtain_object_idr(struct ipc_ids *, int);
465:	bool ipc_rcu_getref(struct kern_ipc_perm *);
470:	void ipc_rcu_putref(struct kern_ipc_perm *, void (*)(struct callback_head *));
432:	void ipc_rmid(struct ipc_ids *, struct kern_ipc_perm *);
716:	struct pid_namespace *ipc_seq_pid_ns(struct seq_file *);
459:	void ipc_set_key_private(struct ipc_ids *, struct kern_ipc_perm *);
624:	int ipc_update_perm(struct ipc64_perm *, struct kern_ipc_perm *);
659:	struct kern_ipc_perm *ipcctl_obtain_check(struct ipc_namespace *, struct ipc_ids *, int, int, struct ipc64_perm *, int);
610:	int ipcget(struct ipc_namespace *, struct ipc_ids *, const struct ipc_ops *, struct ipc_params *);
490:	int ipcperms(struct ipc_namespace *, struct kern_ipc_perm *, short);
524:	void kernel_to_ipc64_perm(struct kern_ipc_perm *, struct ipc64_perm *);
89:	static int ipc_init(void);
417:	static void ipc_kht_remove(struct ipc_ids *, struct kern_ipc_perm *);
725:	static struct kern_ipc_perm *sysvipc_find_ipc(struct ipc_ids *, loff_t, loff_t *);
748:	static void *sysvipc_proc_next(struct seq_file *, void *, loff_t *);
827:	static int sysvipc_proc_open(struct inode *, struct file *);
842:	static int sysvipc_proc_release(struct inode *, struct file *);
807:	static int sysvipc_proc_show(struct seq_file *, void *);
765:	static void *sysvipc_proc_start(struct seq_file *, loff_t *);
791:	static void sysvipc_proc_stop(struct seq_file *, void *);

File ipc/util.h:
190:	static void ipc_assert_locked_object(struct kern_ipc_perm *);

File kernel/acct.c:
273:	long __ia32_sys_acct(const struct pt_regs *);
273:	long __x64_sys_acct(const struct pt_regs *);
533:	void acct_collect(long, int);
297:	void acct_exit_ns(struct pid_namespace *);
591:	void acct_process(void);
193:	static int acct_on(struct filename *);
170:	static void acct_pin_kill(struct fs_pin *);
133:	static void acct_put(struct bsd_acct_struct *);
101:	static int check_free_space(struct bsd_acct_struct *);
183:	static void close_work(struct work_struct *);
471:	static void do_acct_process(struct bsd_acct_struct *);

File kernel/async.c:
211:	async_cookie_t async_schedule(async_func_t, void *);
229:	async_cookie_t async_schedule_domain(async_func_t, void *, struct async_domain *);
316:	void async_synchronize_cookie(async_cookie_t);
287:	void async_synchronize_cookie_domain(async_cookie_t, struct async_domain *);
241:	void async_synchronize_full(void);
272:	void async_synchronize_full_domain(struct async_domain *);
256:	void async_unregister_domain(struct async_domain *);
327:	bool current_is_async(void);
152:	static async_cookie_t __async_schedule(async_func_t, void *, struct async_domain *);
113:	static void async_run_entry_fn(struct work_struct *);
85:	static async_cookie_t lowest_in_progress(struct async_domain *);

File kernel/audit.c:
2127:	void audit_copy_inode(struct audit_names *, const struct dentry *, struct inode *);
242:	void audit_ctl_lock(void);
251:	void audit_ctl_unlock(void);
2278:	struct tty_struct *audit_get_tty(struct task_struct *);
2400:	void audit_log(struct audit_context *, gfp_t, int, const char *, ...);
2085:	void audit_log_cap(struct audit_buffer *, char *, kernel_cap_t *);
2045:	void audit_log_d_path(struct audit_buffer *, const char *, const struct path *);
2259:	void audit_log_d_path_exe(struct audit_buffer *, struct mm_struct *);
2362:	void audit_log_end(struct audit_buffer *);
1910:	void audit_log_format(struct audit_buffer *, const char *, ...);
2076:	void audit_log_key(struct audit_buffer *, char *);
2336:	void audit_log_link_denied(const char *);
362:	void audit_log_lost(const char *);
1932:	void audit_log_n_hex(struct audit_buffer *, const unsigned char *, size_t);
1965:	void audit_log_n_string(struct audit_buffer *, const char *, size_t);
2022:	void audit_log_n_untrustedstring(struct audit_buffer *, const char *, size_t);
2148:	void audit_log_name(struct audit_context *, struct audit_names *, const struct path *, int, int *);
2068:	void audit_log_session_info(struct audit_buffer *);
1770:	struct audit_buffer *audit_log_start(struct audit_context *, gfp_t, int);
2231:	int audit_log_task_context(struct audit_buffer *);
2295:	void audit_log_task_info(struct audit_buffer *, struct task_struct *);
2039:	void audit_log_untrustedstring(struct audit_buffer *, const char *);
913:	struct sk_buff *audit_make_reply(int, int, int, int, const void *, int);
310:	void audit_panic(const char *);
2290:	void audit_put_tty(struct tty_struct *);
894:	int audit_send_list_thread(void *);
1739:	unsigned int audit_serial(void);
1998:	bool audit_string_contains_control(const char *, size_t);
226:	int auditd_test_task(struct task_struct *);
1081:	int is_audit_feature_set(int);
1670:	static int audit_backlog_limit_set(char *);
1548:	static int audit_bind(struct net *, int);
413:	static int audit_do_config_change(char *, u32 *, u32);
1644:	static int audit_enable(char *);
938:	static void audit_free_reply(struct audit_reply *);
1599:	static int audit_init(void);
1063:	static void audit_log_common_recv_msg(struct audit_buffer **, u16);
394:	static int audit_log_config_change(char *, u32, u32, int);
1098:	static void audit_log_feature_change(int, u32, u32, u32, u32, int);
1864:	static void audit_log_vformat(struct audit_buffer *, const char *, struct __va_list_tag *);
1578:	static void audit_net_exit(struct net *);
1556:	static int audit_net_init(struct net *);
1508:	static void audit_receive(struct sk_buff *);
1183:	static int audit_receive_msg(struct sk_buff *, struct nlmsghdr *);
977:	static void audit_send_reply(struct sk_buff *, int, int, const void *, int, int, int);
950:	static int audit_send_reply_thread(void *);
455:	static int audit_set_enabled(u32);
486:	static void auditd_conn_free(struct callback_head *);
627:	static void auditd_reset(const struct auditd_connection *);
575:	static void kauditd_hold_skb(struct sk_buff *);
557:	static void kauditd_rehold_skb(struct sk_buff *);
608:	static void kauditd_retry_skb(struct sk_buff *);
782:	static void kauditd_send_multicast_skb(struct sk_buff *);
721:	static int kauditd_send_queue(struct sock *, u32, struct sk_buff_head *, unsigned int, void (*)(struct sk_buff *), void (*)(struct sk_buff *));
817:	static int kauditd_thread(void *);

File kernel/audit_fsnotify.c:
83:	struct audit_fsnotify_mark *audit_alloc_mark(struct audit_krule *, char *, int);
69:	int audit_mark_compare(struct audit_fsnotify_mark *, unsigned long, dev_t);
64:	char *audit_mark_path(struct audit_fsnotify_mark *);
143:	void audit_remove_mark(struct audit_fsnotify_mark *);
149:	void audit_remove_mark_rule(struct audit_krule *);
56:	static void audit_fsnotify_free_mark(struct fsnotify_mark *);
207:	static int audit_fsnotify_init(void);
166:	static int audit_mark_handle_event(struct fsnotify_group *, struct inode *, u32, const void *, int, const unsigned char *, u32, struct fsnotify_iter_info *);

File kernel/audit_tree.c:
742:	int audit_add_tree_rule(struct audit_krule *);
917:	void audit_kill_trees(struct list_head *);
668:	int audit_make_tree(struct audit_krule *, char *, u32);
123:	void audit_put_chunk(struct audit_chunk *);
682:	void audit_put_tree(struct audit_tree *);
589:	int audit_remove_tree_rule(struct audit_krule *);
812:	int audit_tag_tree(char *, char *);
195:	struct audit_chunk *audit_tree_lookup(const struct inode *);
210:	bool audit_tree_match(struct audit_chunk *, struct audit_tree *);
107:	const char *audit_tree_path(struct audit_tree *);
619:	void audit_trim_trees(void);
129:	static void __put_chunk(struct callback_head *);
141:	static struct audit_chunk *alloc_chunk(int);
135:	static void audit_tree_destroy_watch(struct fsnotify_mark *);
991:	static void audit_tree_freeing_mark(struct fsnotify_mark *, struct fsnotify_group *);
982:	static int audit_tree_handle_event(struct fsnotify_group *, struct inode *, u32, const void *, int, const unsigned char *, u32, struct fsnotify_iter_info *);
1010:	static int audit_tree_init(void);
613:	static int compare_root(struct vfsmount *, void *);
503:	static void kill_rules(struct audit_tree *);
528:	static void prune_one(struct audit_tree *);
696:	static int prune_tree_thread(void *);
100:	static void put_tree(struct audit_tree *);
687:	static int tag_mount(struct vfsmount *, void *);
544:	static void trim_marked(struct audit_tree *);
228:	static void untag_chunk(struct node *);

File kernel/audit_watch.c:
414:	int audit_add_watch(struct audit_krule *, struct list_head **);
535:	int audit_dupe_exe(struct audit_krule *, struct audit_krule *);
554:	int audit_exe_compare(struct task_struct *, struct audit_fsnotify_mark *);
113:	void audit_get_watch(struct audit_watch *);
118:	void audit_put_watch(struct audit_watch *);
461:	void audit_remove_watch_rule(struct audit_krule *);
191:	int audit_to_watch(struct audit_krule *, char *, int, u32);
141:	int audit_watch_compare(struct audit_watch *, unsigned long, dev_t);
136:	char *audit_watch_path(struct audit_watch *);
71:	static void audit_free_parent(struct audit_parent *);
173:	static struct audit_watch *audit_init_watch(char *);
128:	static void audit_remove_watch(struct audit_watch *);
259:	static void audit_update_watch(struct audit_parent *, const char *, dev_t, unsigned long, unsigned int);
77:	static void audit_watch_free_mark(struct fsnotify_mark *);
482:	static int audit_watch_handle_event(struct fsnotify_group *, struct inode *, u32, const void *, int, const unsigned char *, u32, struct fsnotify_iter_info *);
524:	static int audit_watch_init(void);

File kernel/auditfilter.c:
1191:	int audit_comparator(u32, u32, u32);
1300:	int audit_compare_dname_path(const char *, const char *, int);
1009:	int audit_del_rule(struct audit_entry *);
807:	struct audit_entry *audit_dupe_rule(struct audit_krule *);
1319:	int audit_filter(int, unsigned int);
110:	void audit_free_rule_rcu(struct callback_head *);
1239:	int audit_gid_comparator(kgid_t, u32, kgid_t);
1158:	int audit_list_rules_send(struct sk_buff *, int);
199:	int audit_match_class(int, unsigned int);
178:	int audit_register_class(int, unsigned int *);
1119:	int audit_rule_change(int, int, void *, size_t);
1216:	int audit_uid_comparator(kuid_t, u32, kuid_t);
138:	char *audit_unpack_string(void **, size_t *, size_t);
1429:	int audit_update_lsm_rules(void);
1266:	int parent_len(const char *);
692:	static int audit_compare_rule(struct audit_krule *, struct audit_krule *);
437:	static struct audit_entry *audit_data_to_entry(struct audit_rule_data *, size_t);
887:	static struct audit_entry *audit_find_rule(struct audit_entry *, struct list_head **);
1094:	static void audit_log_rule_change(char *, int, struct audit_krule *, struct audit_krule *);
221:	static int audit_match_signal(struct audit_entry *);

File kernel/auditsc.c:
2203:	void __audit_bprm(struct linux_binprm *);
2424:	void __audit_fanotify(unsigned int);
2236:	void __audit_fd_pair(int, int);
1852:	void __audit_file(const struct file *);
1481:	void __audit_free(struct task_struct *);
1746:	void __audit_getname(struct filename *);
1773:	void __audit_inode(struct filename *, const struct dentry *, unsigned int);
1871:	void __audit_inode_child(struct inode *, const struct dentry *, const unsigned char);
2172:	void __audit_ipc_obj(struct kern_ipc_perm *);
2192:	void __audit_ipc_set_perm(unsigned long, uid_t, gid_t, umode_t);
2353:	int __audit_log_bprm_fcaps(struct linux_binprm *, const struct cred *, const struct cred *);
2395:	void __audit_log_capset(const struct cred *, const struct cred *);
2414:	void __audit_log_kern_module(char *);
2406:	void __audit_mmap_fd(int, int);
2159:	void __audit_mq_getsetattr(mqd_t, struct mq_attr *);
2140:	void __audit_mq_notify(mqd_t, const struct sigevent *);
2092:	void __audit_mq_open(int, umode_t, struct mq_attr *);
2115:	void __audit_mq_sendrecv(mqd_t, size_t, unsigned int, const struct timespec64 *);
2266:	void __audit_ptrace(struct task_struct *);
1723:	struct filename *__audit_reusename(const char *);
2250:	int __audit_sockaddr(int, void *);
2218:	int __audit_socketcall(int, unsigned long *);
1518:	void __audit_syscall_entry(int, unsigned long, unsigned long, unsigned long, unsigned long);
1564:	void __audit_syscall_exit(int, long);
938:	int audit_alloc(struct task_struct *);
2459:	void audit_core_dumps(long);
823:	void audit_filter_inodes(struct task_struct *, struct audit_context *);
2523:	struct list_head *audit_killed_trees(void);
2489:	void audit_seccomp(unsigned long, long, int);
2503:	void audit_seccomp_actions_logged(const char *, const char *, int);
2057:	int audit_set_loginuid(kuid_t);
2286:	int audit_signal_info(int, struct task_struct *);
1983:	int auditsc_get_stamp(struct audit_context *, struct timespec64 *, unsigned int *);
1691:	static struct audit_names *audit_alloc_name(struct audit_context *, unsigned char);
336:	static int audit_compare_gid(kgid_t, struct audit_names *, struct audit_context *, struct audit_field *);
312:	static int audit_compare_uid(kuid_t, struct audit_names *, struct audit_context *, struct audit_field *);
444:	static int audit_filter_rules(struct task_struct *, struct audit_krule *, struct audit_context *, struct audit_names *, enum audit_state *, bool);
766:	static enum audit_state audit_filter_syscall(struct task_struct *, struct audit_context *, struct list_head *);
1009:	static void audit_log_execve_info(struct audit_context *, struct audit_buffer **);
1346:	static void audit_log_exit(struct audit_context *, struct task_struct *);
977:	static int audit_log_pid_context(struct audit_context *, pid_t, kuid_t, kuid_t, unsigned int, u32, char *);
2430:	static void audit_log_task(struct audit_buffer *);
233:	static int grow_tree_refs(struct audit_context *);
250:	static void unroll_tree_refs(struct audit_context *, struct audit_tree_refs *, int);

File kernel/bpf/arraymap.c:
57:	int array_map_alloc_check(union bpf_attr *);
432:	int bpf_fd_array_map_lookup_elem(struct bpf_map *, void *, u32 *);
452:	int bpf_fd_array_map_update_elem(struct bpf_map *, struct file *, void *, void *, u64);
205:	int bpf_percpu_array_copy(struct bpf_map *, void *, void *);
279:	int bpf_percpu_array_update(struct bpf_map *, void *, void *, u64);
561:	static void __bpf_event_entry_free(struct callback_head *);
78:	static struct bpf_map *array_map_alloc(union bpf_attr *);
361:	static int array_map_check_btf(const struct bpf_map *, const struct btf_type *, const struct btf_type *);
318:	static int array_map_delete_elem(struct bpf_map *, void *);
324:	static void array_map_free(struct bpf_map *);
164:	static u32 array_map_gen_lookup(struct bpf_map *, struct bpf_insn *);
232:	static int array_map_get_next_key(struct bpf_map *, void *, void *);
152:	static void *array_map_lookup_elem(struct bpf_map *, void *);
341:	static void array_map_seq_show_elem(struct bpf_map *, void *, struct seq_file *);
251:	static int array_map_update_elem(struct bpf_map *, void *, void *, u64);
668:	static struct bpf_map *array_of_map_alloc(union bpf_attr *);
687:	static void array_of_map_free(struct bpf_map *);
707:	static u32 array_of_map_gen_lookup(struct bpf_map *, struct bpf_insn *);
697:	static void *array_of_map_lookup_elem(struct bpf_map *, void *);
523:	static void bpf_fd_array_map_clear(struct bpf_map *);
649:	static void cgroup_fd_array_free(struct bpf_map *);
636:	static void *cgroup_fd_array_get_ptr(struct bpf_map *, struct file *, int);
643:	static void cgroup_fd_array_put_ptr(void *);
404:	static int fd_array_map_alloc_check(union bpf_attr *);
477:	static int fd_array_map_delete_elem(struct bpf_map *, void *);
412:	static void fd_array_map_free(struct bpf_map *);
426:	static void *fd_array_map_lookup_elem(struct bpf_map *, void *);
194:	static void *percpu_array_map_lookup_elem(struct bpf_map *, void *);
575:	static void *perf_event_fd_array_get_ptr(struct bpf_map *, struct file *, int);
601:	static void perf_event_fd_array_put_ptr(void *);
606:	static void perf_event_fd_array_release(struct bpf_map *, struct file *);
495:	static void *prog_fd_array_get_ptr(struct bpf_map *, struct file *, int);
512:	static void prog_fd_array_put_ptr(void *);
517:	static u32 prog_fd_array_sys_lookup_elem(void *);

File kernel/bpf/bpf_lru_list.c:
691:	void bpf_lru_destroy(struct bpf_lru *);
648:	int bpf_lru_init(struct bpf_lru *, bool, u32, del_from_htab_func, void *);
497:	struct bpf_lru_node *bpf_lru_pop_free(struct bpf_lru *, u32);
610:	void bpf_lru_populate(struct bpf_lru *, void *, u32, u32, u32);
553:	void bpf_lru_push_free(struct bpf_lru *, struct bpf_lru_node *);
142:	static void __bpf_lru_list_rotate_active(struct bpf_lru_list *, struct bpf_lru *);
169:	static void __bpf_lru_list_rotate_inactive(struct bpf_lru_list *, struct bpf_lru *);
258:	static unsigned int __bpf_lru_list_shrink(struct bpf_lru *, struct bpf_lru_list *, unsigned int, struct list_head *, enum bpf_lru_list_type);
103:	static void __bpf_lru_node_move(struct bpf_lru_list *, struct bpf_lru_node *, enum bpf_lru_list_type);
85:	static void __bpf_lru_node_move_in(struct bpf_lru_list *, struct bpf_lru_node *, enum bpf_lru_list_type);
64:	static void __bpf_lru_node_move_to_free(struct bpf_lru_list *, struct bpf_lru_node *, struct list_head *, enum bpf_lru_list_type);

File kernel/bpf/btf.c:
2363:	struct btf *btf_get_by_fd(int);
2417:	int btf_get_fd_by_id(u32);
2385:	int btf_get_info_by_fd(const struct btf *, const union bpf_attr *, union bpf_attr *);
2438:	u32 btf_id(const struct btf *);
2332:	int btf_new_fd(const union bpf_attr *);
709:	void btf_put(struct btf *);
846:	const struct btf_type *btf_type_id_size(const struct btf *, u32 *, u32 *);
2309:	void btf_type_seq_show(const struct btf *, u32, void *, struct seq_file *);
494:	static void __btf_verifier_log(struct bpf_verifier_log *, const char *, ...);
518:	static void __btf_verifier_log_type(struct btf_verifier_env *, const struct btf_type *, bool, const char *, ...);
1364:	static int btf_array_check_member(struct btf_verifier_env *, const struct btf_type *, const struct btf_member *, const struct btf_type *);
1393:	static s32 btf_array_check_meta(struct btf_verifier_env *, const struct btf_type *, u32);
1504:	static void btf_array_log(struct btf_verifier_env *, const struct btf_type *);
1441:	static int btf_array_resolve(struct btf_verifier_env *, const struct resolve_vertex *);
1513:	static void btf_array_seq_show(const struct btf *, const struct btf_type *, u32, void *, u8, struct seq_file *);
881:	static int btf_df_check_member(struct btf_verifier_env *, const struct btf_type *, const struct btf_member *, const struct btf_type *);
891:	static int btf_df_resolve(struct btf_verifier_env *, const struct resolve_vertex *);
898:	static void btf_df_seq_show(const struct btf *, const struct btf_type *, u32, void *, u8, struct seq_file *);
1775:	static s32 btf_enum_check_meta(struct btf_verifier_env *, const struct btf_type *, u32);
1838:	static void btf_enum_seq_show(const struct btf *, const struct btf_type *, u32, void *, u8, struct seq_file *);
693:	static void btf_free(struct btf *);
702:	static void btf_free_rcu(struct callback_head *);
1330:	static s32 btf_fwd_check_meta(struct btf_verifier_env *, const struct btf_type *, u32);
1014:	static void btf_int_bits_seq_show(const struct btf_type *, void *, u8, struct seq_file *, const struct btf *);
905:	static int btf_int_check_member(struct btf_verifier_env *, const struct btf_type *, const struct btf_member *, const struct btf_type *);
943:	static s32 btf_int_check_meta(struct btf_verifier_env *, const struct btf_type *, u32);
1002:	static void btf_int_log(struct btf_verifier_env *, const struct btf_type *);
1053:	static void btf_int_seq_show(const struct btf *, const struct btf_type *, u32, void *, u8, struct seq_file *);
1106:	static int btf_modifier_check_member(struct btf_verifier_env *, const struct btf_type *, const struct btf_member *, const struct btf_type *);
1192:	static int btf_modifier_resolve(struct btf_verifier_env *, const struct resolve_vertex *);
1290:	static void btf_modifier_seq_show(const struct btf *, const struct btf_type *, u32, void *, u8, struct seq_file *);
433:	static bool btf_name_valid_identifier(u32, const struct btf *);
1131:	static int btf_ptr_check_member(struct btf_verifier_env *, const struct btf_type *, const struct btf_member *, const struct btf_type *);
1233:	static int btf_ptr_resolve(struct btf_verifier_env *, const struct resolve_vertex *);
1300:	static void btf_ptr_seq_show(const struct btf *, const struct btf_type *, u32, void *, u8, struct seq_file *);
1157:	static int btf_ref_type_check_meta(struct btf_verifier_env *, const struct btf_type *, u32);
1308:	static void btf_ref_type_log(struct btf_verifier_env *, const struct btf_type *);
2317:	static int btf_release(struct inode *, struct file *);
2091:	static int btf_sec_info_cmp(const void *, const void *);
1545:	static int btf_struct_check_member(struct btf_verifier_env *, const struct btf_type *, const struct btf_member *, const struct btf_type *);
1570:	static s32 btf_struct_check_meta(struct btf_verifier_env *, const struct btf_type *, u32);
1709:	static void btf_struct_log(struct btf_verifier_env *, const struct btf_type *);
1649:	static int btf_struct_resolve(struct btf_verifier_env *, const struct resolve_vertex *);
1715:	static void btf_struct_seq_show(const struct btf *, const struct btf_type *, u32, void *, u8, struct seq_file *);
476:	static bool btf_type_int_is_regular(const struct btf_type *);
504:	static void btf_verifier_log(struct btf_verifier_env *, const char *, ...);
556:	static void btf_verifier_log_member(struct btf_verifier_env *, const struct btf_type *, const struct btf_member *, const char *, ...);
787:	static int env_stack_push(struct btf_verifier_env *, const struct btf_type *, u32);
760:	static bool env_type_is_resolve_sink(const struct btf_type *, const struct btf_verifier_env *);

File kernel/bpf/cgroup.c:
230:	int __cgroup_bpf_attach(struct cgroup *, struct bpf_prog *, enum bpf_attach_type, u32);
645:	int __cgroup_bpf_check_dev_permission(short, u32, u32, short, enum bpf_attach_type);
338:	int __cgroup_bpf_detach(struct cgroup *, struct bpf_prog *, enum bpf_attach_type, u32);
406:	int __cgroup_bpf_query(struct cgroup *, const union bpf_attr *, union bpf_attr *);
560:	int __cgroup_bpf_run_filter_sk(struct sock *, enum bpf_attach_type);
520:	int __cgroup_bpf_run_filter_skb(struct sock *, struct sk_buff *, enum bpf_attach_type);
584:	int __cgroup_bpf_run_filter_sock_addr(struct sock *, struct sockaddr *, enum bpf_attach_type, void *);
632:	int __cgroup_bpf_run_filter_sock_ops(struct sock *, struct bpf_sock_ops_kern *, enum bpf_attach_type);
154:	int cgroup_bpf_inherit(struct cgroup *);
451:	int cgroup_bpf_prog_attach(const union bpf_attr *, enum bpf_prog_type, struct bpf_prog *);
467:	int cgroup_bpf_prog_detach(const union bpf_attr *, enum bpf_prog_type);
489:	int cgroup_bpf_prog_query(const union bpf_attr *, union bpf_attr *);
26:	void cgroup_bpf_put(struct cgroup *);
667:	static const struct bpf_func_proto *cgroup_dev_func_proto(enum bpf_func_id, const struct bpf_prog *);
688:	static bool cgroup_dev_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
96:	static int compute_effective_progs(struct cgroup *, enum bpf_attach_type, struct bpf_prog_array **);
180:	static int update_effective_progs(struct cgroup *, enum bpf_attach_type);

File kernel/bpf/core.c:
518:	const char *__bpf_address_lookup(unsigned long, unsigned long *, unsigned long *, char *);
932:	u64 __bpf_call_base(u64, u64, u64, u64, u64);
146:	void __bpf_prog_free(struct bpf_prog *);
1926:	u64 bpf_event_output(struct bpf_map *, u64, void *, u64, void *, u64, bpf_ctx_copy_t);
553:	int bpf_get_kallsym(unsigned int, unsigned long *, char *, char *);
1920:	const struct bpf_func_proto *bpf_get_trace_printk_proto(void);
1959:	bool bpf_helper_changes_pkt_data(void *);
1947:	struct bpf_prog *bpf_int_jit_compile(struct bpf_prog *);
65:	void *bpf_internal_load_pointer_neg_helper(const struct sk_buff *, int, unsigned int);
589:	u64 bpf_jit_alloc_exec_limit(void);
626:	struct bpf_binary_header *bpf_jit_binary_alloc(unsigned int, u8 **, unsigned int, bpf_jit_fill_hole_t);
662:	void bpf_jit_binary_free(struct bpf_binary_header *);
871:	struct bpf_prog *bpf_jit_blind_constants(struct bpf_prog *);
1955:	void bpf_jit_compile(struct bpf_prog *);
674:	void bpf_jit_free(struct bpf_prog *);
688:	int bpf_jit_get_func_addr(const struct bpf_prog *, const struct bpf_insn *, bool, u64 *, bool *);
862:	void bpf_jit_prog_release_other(struct bpf_prog *, struct bpf_prog *);
1048:	bool bpf_opcode_in_insntable(u8);
297:	struct bpf_prog *bpf_patch_insn_single(struct bpf_prog *, u32, const struct bpf_insn *, u32);
80:	struct bpf_prog *bpf_prog_alloc(unsigned int, gfp_t);
1661:	struct bpf_prog_array *bpf_prog_array_alloc(u32, gfp_t);
1531:	bool bpf_prog_array_compatible(struct bpf_array *, const struct bpf_prog *);
1760:	int bpf_prog_array_copy(struct bpf_prog_array *, struct bpf_prog *, struct bpf_prog *, struct bpf_prog_array **);
1824:	int bpf_prog_array_copy_info(struct bpf_prog_array *, u32 *, u32, u32 *);
1716:	int bpf_prog_array_copy_to_user(struct bpf_prog_array *, __u32 *, u32);
1748:	void bpf_prog_array_delete_safe(struct bpf_prog_array *, struct bpf_prog *);
1672:	void bpf_prog_array_free(struct bpf_prog_array *);
1680:	int bpf_prog_array_length(struct bpf_prog_array *);
152:	int bpf_prog_calc_tag(struct bpf_prog *);
1867:	void bpf_prog_free(struct bpf_prog *);
484:	void bpf_prog_kallsyms_add(struct bpf_prog *);
495:	void bpf_prog_kallsyms_del(struct bpf_prog *);
363:	void bpf_prog_kallsyms_del_all(struct bpf_prog *);
355:	void bpf_prog_kallsyms_del_subprogs(struct bpf_prog *);
108:	struct bpf_prog *bpf_prog_realloc(struct bpf_prog *, unsigned int, gfp_t);
1590:	struct bpf_prog *bpf_prog_select_runtime(struct bpf_prog *, int *);
1879:	void bpf_user_rnd_init_once(void);
1884:	u64 bpf_user_rnd_u32(u64, u64, u64, u64, u64);
542:	bool is_bpf_text_address(unsigned long);
1967:	int skb_copy_bits(const struct sk_buff *, int, void *, int);
1520:	static unsigned int __bpf_prog_ret0_warn(const void *, const struct bpf_insn *);
1634:	static unsigned int __bpf_prog_ret1(const void *, const struct bpf_insn *);
258:	static int bpf_adj_branches(struct bpf_prog *, u32, u32, const bool);
390:	static void bpf_get_prog_name(const struct bpf_prog *, char *);
598:	static int bpf_jit_charge_init(void);
1844:	static void bpf_prog_free_deferred(struct work_struct *);
505:	static struct bpf_prog *bpf_prog_kallsyms_find(unsigned long);

File kernel/bpf/cpumap.c:
653:	void __cpu_map_flush(struct bpf_map *);
645:	void __cpu_map_insert_ctx(struct bpf_map *, u32);
523:	struct bpf_cpu_map_entry *__cpu_map_lookup_elem(struct bpf_map *, u32);
629:	int cpu_map_enqueue(struct bpf_cpu_map_entry *, struct xdp_buff *, struct net_device *);
368:	static void __cpu_map_entry_free(struct callback_head *);
411:	static void __cpu_map_entry_replace(u32, struct bpf_cpu_map_entry *, struct bpf_cpu_map *);
570:	static int bq_flush_to_queue(struct bpf_cpu_map_entry *, struct xdp_bulk_queue *, bool);
79:	static struct bpf_map *cpu_map_alloc(union bpf_attr *);
424:	static int cpu_map_delete_elem(struct bpf_map *, void *);
475:	static void cpu_map_free(struct bpf_map *);
543:	static int cpu_map_get_next_key(struct bpf_map *, void *, void *);
243:	static int cpu_map_kthread_run(void *);
147:	static void cpu_map_kthread_stop(struct work_struct *);
535:	static void *cpu_map_lookup_elem(struct bpf_map *, void *);
437:	static int cpu_map_update_elem(struct bpf_map *, void *, void *, u64);
232:	static void put_cpu_map_entry(struct bpf_cpu_map_entry *);

File kernel/bpf/devmap.c:
279:	void __dev_map_flush(struct bpf_map *);
216:	void __dev_map_insert_ctx(struct bpf_map *, u32);
308:	struct bpf_dtab_netdev *__dev_map_lookup_elem(struct bpf_map *, u32);
343:	int dev_map_enqueue(struct bpf_dtab_netdev *, struct xdp_buff *, struct net_device *);
364:	int dev_map_generic_redirect(struct bpf_dtab_netdev *, struct sk_buff *, struct bpf_prog *);
406:	static void __dev_map_entry_free(struct callback_head *);
224:	static int bq_xmit_all(struct bpf_dtab_netdev *, struct xdp_bulk_queue *, u32, bool);
88:	static struct bpf_map *dev_map_alloc(union bpf_attr *);
417:	static int dev_map_delete_elem(struct bpf_map *, void *);
147:	static void dev_map_free(struct bpf_map *);
199:	static int dev_map_get_next_key(struct bpf_map *, void *, void *);
543:	static int dev_map_init(void);
378:	static void *dev_map_lookup_elem(struct bpf_map *, void *);
503:	static int dev_map_notification(struct notifier_block *, ulong, void *);
440:	static int dev_map_update_elem(struct bpf_map *, void *, void *, u64);

File kernel/bpf/disasm.c:
55:	const char *func_id_name(int);
125:	void print_bpf_insn(const struct bpf_insn_cbs *, const struct bpf_insn *, bool);
24:	static const char *__func_get_name(const struct bpf_insn_cbs *, const struct bpf_insn *, char *, size_t);

File kernel/bpf/hashtab.c:
1348:	int bpf_fd_htab_map_lookup_elem(struct bpf_map *, void *, u32 *);
1368:	int bpf_fd_htab_map_update_elem(struct bpf_map *, struct file *, void *, void *, u64);
1249:	int bpf_percpu_hash_copy(struct bpf_map *, void *, void *);
1281:	int bpf_percpu_hash_update(struct bpf_map *, void *, void *, u64);
994:	static int __htab_lru_percpu_map_update_elem(struct bpf_map *, void *, void *, u64, bool);
464:	static void *__htab_map_lookup_elem(struct bpf_map *, void *);
941:	static int __htab_percpu_map_update_elem(struct bpf_map *, void *, void *, u64, bool);
730:	static struct htab_elem *alloc_htab_elem(struct bpf_htab *, void *, void *, u32, u32, bool, bool, struct htab_elem *);
1319:	static int fd_htab_map_alloc_check(union bpf_attr *);
684:	static void free_htab_elem(struct bpf_htab *, struct htab_elem *);
665:	static void htab_elem_free_rcu(struct callback_head *);
108:	static void htab_free_elems(struct bpf_htab *);
1105:	static int htab_lru_map_delete_elem(struct bpf_map *, void *);
573:	static bool htab_lru_map_delete_node(void *, struct bpf_lru_node *);
545:	static u32 htab_lru_map_gen_lookup(struct bpf_map *, struct bpf_insn *);
535:	static void *htab_lru_map_lookup_elem(struct bpf_map *, void *);
540:	static void *htab_lru_map_lookup_elem_sys(struct bpf_map *, void *);
877:	static int htab_lru_map_update_elem(struct bpf_map *, void *, void *, u64);
1237:	static void *htab_lru_percpu_map_lookup_elem(struct bpf_map *, void *);
1065:	static int htab_lru_percpu_map_update_elem(struct bpf_map *, void *, void *, u64);
298:	static struct bpf_map *htab_map_alloc(union bpf_attr *);
234:	static int htab_map_alloc_check(union bpf_attr *);
1073:	static int htab_map_delete_elem(struct bpf_map *, void *);
1155:	static void htab_map_free(struct bpf_map *);
506:	static u32 htab_map_gen_lookup(struct bpf_map *, struct bpf_insn *);
600:	static int htab_map_get_next_key(struct bpf_map *, void *, void *);
485:	static void *htab_map_lookup_elem(struct bpf_map *, void *);
1180:	static void htab_map_seq_show_elem(struct bpf_map *, void *, struct seq_file *);
821:	static int htab_map_update_elem(struct bpf_map *, void *, void *, u64);
1386:	static struct bpf_map *htab_of_map_alloc(union bpf_attr *);
1433:	static void htab_of_map_free(struct bpf_map *);
1415:	static u32 htab_of_map_gen_lookup(struct bpf_map *, struct bpf_insn *);
1405:	static void *htab_of_map_lookup_elem(struct bpf_map *, void *);
1227:	static void *htab_percpu_map_lookup_elem(struct bpf_map *, void *);
1059:	static int htab_percpu_map_update_elem(struct bpf_map *, void *, void *, u64);
424:	static struct htab_elem *lookup_elem_raw(struct hlist_nulls_head *, u32, void *, u32);
441:	static struct htab_elem *lookup_nulls_elem_raw(struct hlist_nulls_head *, u32, void *, u32, u32);
697:	static void pcpu_copy_value(struct bpf_htab *, void *, void *, bool);
200:	static void prealloc_destroy(struct bpf_htab *);
127:	static struct htab_elem *prealloc_lru_pop(struct bpf_htab *, void *, u32);

File kernel/bpf/helpers.c:
184:	u64 bpf_get_current_cgroup_id(u64, u64, u64, u64, u64);
155:	u64 bpf_get_current_comm(u64, u64, u64, u64, u64);
119:	u64 bpf_get_current_pid_tgid(u64, u64, u64, u64, u64);
135:	u64 bpf_get_current_uid_gid(u64, u64, u64, u64, u64);
199:	u64 bpf_get_local_storage(u64, u64, u64, u64, u64);
96:	u64 bpf_get_numa_node_id(u64, u64, u64, u64, u64);
85:	u64 bpf_get_smp_processor_id(u64, u64, u64, u64, u64);
107:	u64 bpf_ktime_get_ns(u64, u64, u64, u64, u64);
64:	u64 bpf_map_delete_elem(u64, u64, u64, u64, u64);
31:	u64 bpf_map_lookup_elem(u64, u64, u64, u64, u64);
46:	u64 bpf_map_update_elem(u64, u64, u64, u64, u64);

File kernel/bpf/inode.c:
483:	int bpf_obj_get_user(const char *, int);
426:	int bpf_obj_pin_user(u32, const char *);
543:	struct bpf_prog *bpf_prog_get_type_path(const char *, enum bpf_prog_type);
49:	static void bpf_any_put(void *, enum bpf_type);
125:	static void bpf_dentry_finalize(struct dentry *, struct inode *, struct inode *);
582:	static void bpf_destroy_inode(struct inode *);
570:	static void bpf_destroy_inode_deferred(struct callback_head *);
637:	static int bpf_fill_super(struct super_block *, void *, int);
83:	static struct inode *bpf_get_inode(struct super_block *, const struct inode *, umode_t);
675:	static int bpf_init(void);
343:	static struct dentry *bpf_lookup(struct inode *, struct dentry *, unsigned int);
135:	static int bpf_mkdir(struct inode *, struct dentry *, umode_t);
333:	static int bpf_mkmap(struct dentry *, umode_t, void *);
327:	static int bpf_mkprog(struct dentry *, umode_t, void *);
662:	static struct dentry *bpf_mount(struct file_system_type *, int, const char *, void *);
561:	static int bpf_show_options(struct seq_file *, struct dentry *);
354:	static int bpf_symlink(struct inode *, struct dentry *, const char *);
253:	static int bpffs_map_open(struct inode *, struct file *);
276:	static int bpffs_map_release(struct inode *, struct file *);
301:	static int bpffs_obj_open(struct inode *, struct file *);
168:	static void map_iter_free(struct map_iter *);
195:	static void *map_seq_next(struct seq_file *, void *, loff_t *);
231:	static int map_seq_show(struct seq_file *, void *);
219:	static void *map_seq_start(struct seq_file *, loff_t *);
227:	static void map_seq_stop(struct seq_file *, void *);

File kernel/bpf/local_storage.c:
290:	struct bpf_cgroup_storage *bpf_cgroup_storage_alloc(struct bpf_prog *);
256:	int bpf_cgroup_storage_assign(struct bpf_prog *, struct bpf_map *);
327:	void bpf_cgroup_storage_free(struct bpf_cgroup_storage *);
345:	void bpf_cgroup_storage_link(struct bpf_cgroup_storage *, struct cgroup *, enum bpf_attach_type);
277:	void bpf_cgroup_storage_release(struct bpf_prog *, struct bpf_map *);
365:	void bpf_cgroup_storage_unlink(struct bpf_cgroup_storage *);
241:	static int cgroup_storage_delete_elem(struct bpf_map *, void *);
155:	static int cgroup_storage_get_next_key(struct bpf_map *, void *, void *);
46:	static struct bpf_cgroup_storage *cgroup_storage_lookup(struct bpf_cgroup_storage_map *, struct bpf_cgroup_storage_key *, bool);
112:	static void *cgroup_storage_lookup_elem(struct bpf_map *, void *);
191:	static struct bpf_map *cgroup_storage_map_alloc(union bpf_attr *);
231:	static void cgroup_storage_map_free(struct bpf_map *);
125:	static int cgroup_storage_update_elem(struct bpf_map *, void *, void *, u64);

File kernel/bpf/lpm_trie.c:
167:	static size_t longest_prefix_match(const struct lpm_trie_node *, const struct bpf_lpm_trie_key *, const struct lpm_trie *);
279:	static struct lpm_trie_node *lpm_trie_node_alloc(const struct lpm_trie *, const void *);
543:	static struct bpf_map *trie_alloc(union bpf_attr *);
736:	static int trie_check_btf(const struct bpf_map *, const struct btf_type *, const struct btf_type *);
434:	static int trie_delete_elem(struct bpf_map *, void *);
594:	static void trie_free(struct bpf_map *);
638:	static int trie_get_next_key(struct bpf_map *, void *, void *);
230:	static void *trie_lookup_elem(struct bpf_map *, void *);
303:	static int trie_update_elem(struct bpf_map *, void *, void *, u64);

File kernel/bpf/map_in_map.c:
84:	void *bpf_map_fd_get_ptr(struct bpf_map *, struct file *, int);
105:	void bpf_map_fd_put_ptr(void *);
113:	u32 bpf_map_fd_sys_lookup_elem(void *);
12:	struct bpf_map *bpf_map_meta_alloc(int);
73:	bool bpf_map_meta_equal(const struct bpf_map *, const struct bpf_map *);
68:	void bpf_map_meta_free(struct bpf_map *);

File kernel/bpf/offload.c:
433:	int bpf_map_offload_delete_elem(struct bpf_map *, void *);
446:	int bpf_map_offload_get_next_key(struct bpf_map *, void *, void *);
489:	int bpf_map_offload_info_fill(struct bpf_map_info *, struct bpf_map *);
402:	int bpf_map_offload_lookup_elem(struct bpf_map *, void *, void *);
330:	struct bpf_map *bpf_map_offload_map_alloc(union bpf_attr *);
388:	void bpf_map_offload_map_free(struct bpf_map *);
415:	int bpf_map_offload_update_elem(struct bpf_map *, void *, void *, u64);
640:	struct bpf_offload_dev *bpf_offload_dev_create(void);
664:	void bpf_offload_dev_destroy(struct bpf_offload_dev *);
535:	bool bpf_offload_dev_match(struct bpf_prog *, struct net_device *);
563:	int bpf_offload_dev_netdev_register(struct bpf_offload_dev *, struct net_device *);
596:	void bpf_offload_dev_netdev_unregister(struct bpf_offload_dev *, struct net_device *);
547:	bool bpf_offload_prog_map_match(struct bpf_prog *, struct bpf_map *);
224:	int bpf_prog_offload_compile(struct bpf_prog *);
193:	void bpf_prog_offload_destroy(struct bpf_prog *);
262:	int bpf_prog_offload_info_fill(struct bpf_prog_info *, struct bpf_prog *);
78:	int bpf_prog_offload_init(struct bpf_prog *, union bpf_attr *);
141:	int bpf_prog_offload_verifier_prep(struct bpf_verifier_env *);
160:	int bpf_prog_offload_verify_insn(struct bpf_verifier_env *, int, int);
379:	static void __bpf_map_offload_destroy(struct bpf_offloaded_map *);
514:	static bool __bpf_offload_dev_match(struct net_device *, struct bpf_prog *);
124:	static int __bpf_offload_ndo(enum bpf_netdev_command, struct netdev_bpf *, struct bpf_prog *);
175:	static void __bpf_prog_offload_destroy(struct bpf_prog *);
464:	static struct ns_common *bpf_map_offload_info_fill_ns(void *);
314:	static int bpf_map_offload_ndo(struct bpf_offloaded_map *, enum bpf_netdev_command);
69:	static struct bpf_offload_netdev *bpf_offload_find_netdev(struct net_device *);
236:	static struct ns_common *bpf_prog_offload_info_fill_ns(void *);
217:	static unsigned int bpf_prog_warn_on_exec(const void *, const struct bpf_insn *);

File kernel/bpf/percpu_freelist.c:
87:	struct pcpu_freelist_node *__pcpu_freelist_pop(struct pcpu_freelist *);
40:	void __pcpu_freelist_push(struct pcpu_freelist *, struct pcpu_freelist_node *);
26:	void pcpu_freelist_destroy(struct pcpu_freelist *);
9:	int pcpu_freelist_init(struct pcpu_freelist *);
112:	struct pcpu_freelist_node *pcpu_freelist_pop(struct pcpu_freelist *);
58:	void pcpu_freelist_populate(struct pcpu_freelist *, void *, u32, u32);
48:	void pcpu_freelist_push(struct pcpu_freelist *, struct pcpu_freelist_node *);

File kernel/bpf/reuseport_array.c:
184:	int bpf_fd_reuseport_array_lookup_elem(struct bpf_map *, void *, void *);
251:	int bpf_fd_reuseport_array_update_elem(struct bpf_map *, void *, void *, u64);
21:	void bpf_sk_reuseport_detach(struct sock *);
150:	static struct bpf_map *reuseport_array_alloc(union bpf_attr *);
40:	static int reuseport_array_alloc_check(union bpf_attr *);
61:	static int reuseport_array_delete_elem(struct bpf_map *, void *);
93:	static void reuseport_array_free(struct bpf_map *);
337:	static int reuseport_array_get_next_key(struct bpf_map *, void *, void *);
49:	static void *reuseport_array_lookup_elem(struct bpf_map *, void *);
207:	static int reuseport_array_update_check(const struct sock *, const struct sock *, const struct sock_reuseport *, u32, const struct reuseport_array *);

File kernel/bpf/sockmap.c:
2541:	struct sock *__sock_hash_lookup_elem(struct bpf_map *, void *);
1799:	struct sock *__sock_map_lookup_elem(struct bpf_map *, u32);
2612:	u64 bpf_sock_hash_update(u64, u64, u64, u64, u64);
2587:	u64 bpf_sock_map_update(u64, u64, u64, u64, u64);
2044:	int sock_map_prog(struct bpf_map *, struct bpf_prog *, u32);
2081:	int sockmap_get_from_fd(const union bpf_attr *, int, struct bpf_prog *);
2239:	static void __bpf_htab_free(struct callback_head *);
1868:	static int __sock_map_ctx_update_elem(struct bpf_sock_progs *, struct sock *, void *, struct bpf_map *);
806:	static int bpf_exec_tx_verdict(struct smap_psock *, struct sk_msg_buff *, struct sock *, int *, int);
389:	static void bpf_tcp_close(struct sock *, long);
207:	static int bpf_tcp_init(struct sock *);
473:	static int bpf_tcp_push(struct sock *, int, struct sk_msg_buff *, int, bool);
927:	static int bpf_tcp_recvmsg(struct sock *, struct msghdr *, size_t, int, int, int *);
245:	static void bpf_tcp_release(struct sock *);
312:	static void bpf_tcp_remove(struct sock *, struct smap_psock *);
1035:	static int bpf_tcp_sendmsg(struct sock *, struct msghdr *, size_t);
1158:	static int bpf_tcp_sendpage(struct sock *, struct page *, int, size_t, int);
155:	static bool bpf_tcp_stream_read(const struct sock *);
1241:	static int bpf_tcp_ulp_register(void);
370:	static void bpf_tcp_unhash(struct sock *);
595:	static int free_sg(struct sock *, int, struct sk_msg_buff *, bool);
268:	static struct htab_elem *lookup_elem_raw(struct hlist_head *, u32, void *, u32);
297:	static struct smap_psock_map_entry *psock_map_pop(struct smap_psock *, struct sock *);
1372:	static void smap_data_ready(struct sock *);
1473:	static void smap_destroy_psock(struct callback_head *);
1586:	static void smap_gc_work(struct work_struct *);
1723:	static void smap_list_hash_remove(struct smap_psock *, struct htab_elem *);
1708:	static void smap_list_map_remove(struct smap_psock *, struct sock **);
1506:	static int smap_parse_func_strparser(struct strparser *, struct sk_buff *);
1537:	static int smap_read_sock_done(struct strparser *, int);
1360:	static void smap_read_sock_strparser(struct strparser *, struct sk_buff *);
1492:	static void smap_release_sock(struct smap_psock *, struct sock *);
1386:	static void smap_tx_work(struct work_struct *);
1447:	static void smap_write_space(struct sock *);
2170:	static struct bpf_map *sock_hash_alloc(union bpf_attr *);
2377:	static int sock_hash_ctx_update_elem(struct bpf_map *, void *, u64, struct bpf_sock_ops_kern *);
2503:	static int sock_hash_delete_elem(struct bpf_map *, void *);
2248:	static void sock_hash_free(struct bpf_map *);
2325:	static int sock_hash_get_next_key(struct bpf_map *, void *, void *);
2464:	static int sock_hash_update_elem(struct bpf_map *, void *, void *, u64);
1657:	static struct bpf_map *sock_map_alloc(union bpf_attr *);
1984:	static int sock_map_ctx_update_elem(struct bpf_map *, void *, u64, struct bpf_sock_ops_kern *);
1809:	static int sock_map_delete_elem(struct bpf_map *, void *);
1740:	static void sock_map_free(struct bpf_map *);
1781:	static int sock_map_get_next_key(struct bpf_map *, void *, void *);
2099:	static void *sock_map_lookup(struct bpf_map *, void *);
2143:	static void sock_map_release(struct bpf_map *);
2104:	static int sock_map_update_elem(struct bpf_map *, void *, void *, u64);

File kernel/bpf/stackmap.c:
452:	u64 bpf_get_stack(u64, u64, u64, u64, u64);
352:	u64 bpf_get_stackid(u64, u64, u64, u64, u64);
526:	int bpf_stackmap_copy(struct bpf_map *, void *, void *);
42:	static void do_up_read(struct irq_work *);
89:	static struct bpf_map *stack_map_alloc(union bpf_attr *);
585:	static int stack_map_delete_elem(struct bpf_map *, void *);
604:	static void stack_map_free(struct bpf_map *);
288:	static void stack_map_get_build_id_offset(struct bpf_stack_build_id *, u64 *, u32, bool);
549:	static int stack_map_get_next_key(struct bpf_map *, void *, void *);
627:	static int stack_map_init(void);
520:	static void *stack_map_lookup_elem(struct bpf_map *, void *);
578:	static int stack_map_update_elem(struct bpf_map *, void *, void *, u64);

File kernel/bpf/syscall.c:
586:	struct bpf_map *__bpf_map_get(struct fd);
1032:	int __bpf_prog_charge(struct user_struct *, u32);
1048:	void __bpf_prog_uncharge(struct user_struct *, u32);
2389:	long __ia32_sys_bpf(const struct pt_regs *);
2389:	long __x64_sys_bpf(const struct pt_regs *);
71:	int bpf_check_uarg_tail_zero(void *, size_t, size_t);
417:	int bpf_get_file_flag(int);
138:	void *bpf_map_area_alloc(size_t, int);
157:	void bpf_map_area_free(void *);
222:	int bpf_map_charge_memlock(struct bpf_map *, u32);
257:	void bpf_map_free_id(struct bpf_map *, bool);
613:	struct bpf_map *bpf_map_get_with_uref(u32);
601:	struct bpf_map *bpf_map_inc(struct bpf_map *, bool);
162:	void bpf_map_init_from_attr(struct bpf_map *, union bpf_attr *);
405:	int bpf_map_new_fd(struct bpf_map *, int);
172:	int bpf_map_precharge_memlock(u32);
316:	void bpf_map_put(struct bpf_map *);
322:	void bpf_map_put_with_uref(struct bpf_map *);
233:	void bpf_map_uncharge_memlock(struct bpf_map *, u32);
1209:	struct bpf_prog *bpf_prog_add(struct bpf_prog *, int);
1096:	void bpf_prog_free_id(struct bpf_prog *, bool);
1290:	struct bpf_prog *bpf_prog_get(u32);
1255:	bool bpf_prog_get_ok(struct bpf_prog *, enum bpf_prog_type *, bool);
1295:	struct bpf_prog *bpf_prog_get_type_dev(u32, enum bpf_prog_type, bool);
1230:	struct bpf_prog *bpf_prog_inc(struct bpf_prog *);
1237:	struct bpf_prog *bpf_prog_inc_not_zero(struct bpf_prog *);
1185:	int bpf_prog_new_fd(struct bpf_prog *);
1141:	void bpf_prog_put(struct bpf_prog *);
1219:	void bpf_prog_sub(struct bpf_prog *, int);
650:	int bpf_stackmap_copy(struct bpf_map *, void *, void *);
459:	int map_check_no_btf(const struct bpf_map *, const struct btf_type *, const struct btf_type *);
305:	static void __bpf_map_put(struct bpf_map *, bool);
1270:	static struct bpf_prog *__bpf_prog_get(u32, enum bpf_prog_type *, bool);
1130:	static void __bpf_prog_put(struct bpf_prog *, bool);
1120:	static void __bpf_prog_put_rcu(struct callback_head *);
2252:	static int bpf_btf_get_fd_by_id(const union bpf_attr *);
2239:	static int bpf_btf_load(const union bpf_attr *);
185:	static int bpf_charge_memlock(struct user_struct *, u32);
378:	static ssize_t bpf_dummy_read(struct file *, char *, size_t, loff_t *);
284:	static void bpf_map_free_deferred(struct work_struct *);
1873:	static int bpf_map_get_fd_by_id(const union bpf_attr *);
294:	static void bpf_map_put_uref(struct bpf_map *);
328:	static int bpf_map_release(struct inode *, struct file *);
340:	static void bpf_map_show_fdinfo(struct seq_file *, struct file *);
1505:	static int bpf_obj_get(const union bpf_attr *);
2208:	static int bpf_obj_get_info_by_fd(const union bpf_attr *, union bpf_attr *);
1813:	static int bpf_obj_get_next_id(const union bpf_attr *, union bpf_attr *, struct idr *, spinlock_t *);
439:	static int bpf_obj_name_cpy(char *, const char *);
1497:	static int bpf_obj_pin(const union bpf_attr *);
1616:	static int bpf_prog_attach(const union bpf_attr *);
1699:	static int bpf_prog_detach(const union bpf_attr *);
1841:	static int bpf_prog_get_fd_by_id(const union bpf_attr *);
1970:	static int bpf_prog_get_info_by_fd(struct bpf_prog *, union bpf_attr *, const union bpf_attr *, const union bpf_attr *);
1364:	static int bpf_prog_load(union bpf_attr *);
1751:	static int bpf_prog_query(const union bpf_attr *, union bpf_attr *);
1147:	static int bpf_prog_release(struct inode *, struct file *);
1156:	static void bpf_prog_show_fdinfo(struct seq_file *, struct file *);
1789:	static int bpf_prog_test_run(const union bpf_attr *, union bpf_attr *);
1069:	static void bpf_prog_uncharge_memlock(struct bpf_prog *, struct bpf_prog *);
1541:	static int bpf_raw_tracepoint_open(const union bpf_attr *, const union bpf_attr *);
1520:	static int bpf_raw_tracepoint_release(struct inode *, struct file *);
2312:	static int bpf_task_fd_query(const union bpf_attr *, union bpf_attr *);
2263:	static int bpf_task_fd_query_copy(union bpf_attr *, u32, u32, const char *, u64, u64, const union bpf_attr *, const union bpf_attr *);
1019:	static void free_used_maps(struct bpf_prog_aux *);
489:	static int map_create(union bpf_attr *);
874:	static int map_delete_elem(union bpf_attr *);
925:	static int map_get_next_key(union bpf_attr *);
658:	static int map_lookup_elem(union bpf_attr *);
773:	static int map_update_elem(union bpf_attr *);

File kernel/bpf/tnum.c:
56:	struct tnum tnum_add(struct tnum, struct tnum);
80:	struct tnum tnum_and(struct tnum, struct tnum);
46:	struct tnum tnum_arshift(struct tnum, u8);
144:	struct tnum tnum_cast(struct tnum, u8);
15:	struct tnum tnum_const(u64);
158:	bool tnum_in(struct tnum, struct tnum);
135:	struct tnum tnum_intersect(struct tnum, struct tnum);
151:	bool tnum_is_aligned(struct tnum, u64);
36:	struct tnum tnum_lshift(struct tnum, u8);
122:	struct tnum tnum_mul(struct tnum, struct tnum);
90:	struct tnum tnum_or(struct tnum, struct tnum);
20:	struct tnum tnum_range(u64, u64);
41:	struct tnum tnum_rshift(struct tnum, u8);
172:	int tnum_sbin(char *, size_t, struct tnum);
166:	int tnum_strn(char *, size_t, struct tnum);
68:	struct tnum tnum_sub(struct tnum, struct tnum);
99:	struct tnum tnum_xor(struct tnum, struct tnum);

File kernel/bpf/verifier.c:
6491:	int bpf_check(struct bpf_prog **, union bpf_attr *);
219:	void bpf_verifier_log_write(struct bpf_verifier_env *, const char *, ...);
196:	void bpf_verifier_vlog(struct bpf_verifier_log *, const char *, struct __va_list_tag *);
1179:	static int __check_map_access(struct bpf_verifier_env *, u32, int, int, bool);
1798:	static int __check_stack_boundary(struct bpf_verifier_env *, u32, int, int, bool);
557:	static void __mark_reg_known(struct bpf_reg_state *, u64);
688:	static void __mark_reg_unknown(struct bpf_reg_state *);
671:	static void __reg_bound_offset(struct bpf_reg_state *);
4113:	static void __reg_combine_min_max(struct bpf_reg_state *, struct bpf_reg_state *);
636:	static void __reg_deduce_bounds(struct bpf_reg_state *);
790:	static int add_subprog(struct bpf_verifier_env *, int);
3072:	static int adjust_ptr_min_max_vals(struct bpf_verifier_env *, struct bpf_insn *, const struct bpf_reg_state *, const struct bpf_reg_state *);
3564:	static int adjust_reg_min_max_vals(struct bpf_verifier_env *, struct bpf_insn *);
5819:	static struct bpf_prog *bpf_patch_insn_data(struct bpf_verifier_env *, u32, const struct bpf_insn *, u32);
4308:	static int check_cond_jmp_op(struct bpf_verifier_env *, struct bpf_insn *, int *);
1567:	static int check_ctx_reg(struct bpf_verifier_env *, const struct bpf_reg_state *, int);
1984:	static int check_func_arg(struct bpf_verifier_env *, u32, enum bpf_arg_type, struct bpf_call_arg_meta *);
1951:	static int check_helper_mem_access(struct bpf_verifier_env *, int, int, bool, struct bpf_call_arg_meta *);
4860:	static bool check_ids(u32, u32, struct bpf_id_pair *);
1195:	static int check_map_access(struct bpf_verifier_env *, u32, int, int, bool);
1646:	static int check_mem_access(struct bpf_verifier_env *, int, u32, int, int, enum bpf_access_type, int, bool);
1295:	static int check_packet_access(struct bpf_verifier_env *, u32, int, int, bool);
909:	static int check_reg_arg(struct bpf_verifier_env *, u32, enum reg_arg_type);
2709:	static bool check_reg_sane_offset(struct bpf_verifier_env *, const struct bpf_reg_state *, enum bpf_reg_type);
772:	static int cmp_subprogs(const void *, const void *);
1620:	static void coerce_reg_to_size(struct bpf_reg_state *, int);
5862:	static int convert_ctx_accesses(struct bpf_verifier_env *);
458:	static int copy_verifier_state(struct bpf_verifier_state *, const struct bpf_verifier_state *);
5249:	static int do_check(struct bpf_verifier_env *);
2466:	static int do_refine_retval_range(struct bpf_verifier_env *, struct bpf_reg_state *, int, int, struct bpf_call_arg_meta *);
3797:	static void find_good_pkt_pointers(struct bpf_verifier_state *, struct bpf_reg_state *, enum bpf_reg_type, bool);
778:	static int find_subprog(struct bpf_verifier_env *, int);
6204:	static int fixup_bpf_calls(struct bpf_verifier_env *);
422:	static void free_func_state(struct bpf_func_state *);
430:	static void free_verifier_state(struct bpf_verifier_state *, bool);
733:	static void init_reg_state(struct bpf_verifier_env *, struct bpf_func_state *);
3893:	static int is_branch_taken(struct bpf_reg_state *, u64, u8);
4159:	static void mark_map_reg(struct bpf_reg_state *, u32, u32, bool);
4194:	static void mark_map_regs(struct bpf_verifier_state *, u32, bool);
583:	static void mark_reg_known_zero(struct bpf_verifier_env *, struct bpf_reg_state *, u32);
720:	static void mark_reg_not_init(struct bpf_verifier_env *, struct bpf_reg_state *, u32);
701:	static void mark_reg_unknown(struct bpf_verifier_env *, struct bpf_reg_state *, u32);
486:	static int pop_stack(struct bpf_verifier_env *, int *, int *);
267:	static void print_liveness(struct bpf_verifier_env *, enum bpf_reg_liveness);
286:	static void print_verifier_state(struct bpf_verifier_env *, const struct bpf_func_state *);
4680:	static int push_insn(int, int, int, struct bpf_verifier_env *);
513:	static struct bpf_verifier_state *push_stack(struct bpf_verifier_env *, int, int, bool);
388:	static int realloc_func_state(struct bpf_func_state *, int, bool);
3965:	static void reg_set_min_max(struct bpf_reg_state *, struct bpf_reg_state *, u64, u8);
4880:	static bool regsafe(struct bpf_reg_state *, struct bpf_reg_state *, struct bpf_id_pair *, struct bpf_verifier_env *);
2962:	static int sanitize_err(struct bpf_verifier_env *, const struct bpf_insn *, int, const struct bpf_reg_state *, const struct bpf_reg_state *);
2853:	static int sanitize_ptr_alu(struct bpf_verifier_env *, struct bpf_insn *, const struct bpf_reg_state *, const struct bpf_reg_state *, struct bpf_reg_state *, struct bpf_sanitize_info *, const bool);
2833:	static struct bpf_verifier_state *sanitize_speculative_path(struct bpf_verifier_env *, const struct bpf_insn *, u32, u32);
972:	static void save_register_state(int, struct bpf_reg_state *, struct bpf_func_state *);
233:	static void verbose(void *, const char *, ...);

File kernel/bpf/xskmap.c:
142:	void __xsk_map_flush(struct bpf_map *);
113:	struct xdp_sock *__xsk_map_lookup_elem(struct bpf_map *, u32);
125:	int __xsk_map_redirect(struct bpf_map *, struct xdp_buff *, struct xdp_sock *);
18:	static struct bpf_map *xsk_map_alloc(union bpf_attr *);
202:	static int xsk_map_delete_elem(struct bpf_map *, void *);
73:	static void xsk_map_free(struct bpf_map *);
96:	static int xsk_map_get_next_key(struct bpf_map *, void *, void *);
155:	static void *xsk_map_lookup_elem(struct bpf_map *, void *);
160:	static int xsk_map_update_elem(struct bpf_map *, void *, void *, u64);

File kernel/capability.c:
150:	long __ia32_sys_capget(const struct pt_regs *);
224:	long __ia32_sys_capset(const struct pt_regs *);
150:	long __x64_sys_capget(const struct pt_regs *);
224:	long __x64_sys_capset(const struct pt_regs *);
429:	bool capable(int);
483:	bool capable_wrt_inode_uidgid(const struct inode *, int);
448:	bool file_ns_capable(const struct file *, struct user_namespace *, int);
318:	bool has_capability(struct task_struct *, int);
361:	bool has_capability_noaudit(struct task_struct *, int);
296:	bool has_ns_capability(struct task_struct *, struct user_namespace *, int);
337:	bool has_ns_capability_noaudit(struct task_struct *, struct user_namespace *, int);
395:	bool ns_capable(struct user_namespace *, int);
413:	bool ns_capable_noaudit(struct user_namespace *, int);
468:	bool privileged_wrt_inode_uidgid(struct user_namespace *, const struct inode *);
499:	bool ptracer_capable(struct task_struct *, struct user_namespace *);
82:	static int cap_validate_magic(cap_user_header_t, unsigned int *);
32:	static int file_caps_disable(char *);
366:	static bool ns_capable_common(struct user_namespace *, int, bool);

File kernel/cgroup/cgroup-v1.c:
776:	void cgroup1_check_for_release(struct cgroup *);
1116:	struct dentry *cgroup1_mount(struct file_system_type *, int, void *, unsigned long, struct cgroup_namespace *);
212:	void cgroup1_pidlist_destroy_all(struct cgroup *);
806:	void cgroup1_release_agent(struct work_struct *);
42:	bool cgroup1_ssid_disabled(int);
52:	int cgroup_attach_task_all(struct task_struct *, struct task_struct *);
343:	int cgroup_task_count(const struct cgroup *);
91:	int cgroup_transfer_tasks(struct cgroup *, struct cgroup *);
721:	int cgroupstats_build(struct cgroupstats *, struct dentry *);
686:	int proc_cgroupstats_show(struct seq_file *, void *);
519:	static ssize_t __cgroup1_procs_write(struct kernfs_open_file *, char *, size_t, bool, loff_t);
561:	static ssize_t cgroup1_procs_write(struct kernfs_open_file *, char *, size_t, loff_t);
1050:	static int cgroup1_remount(struct kernfs_root *, int *, char *);
849:	static int cgroup1_rename(struct kernfs_node *, struct kernfs_node *, const char *);
885:	static int cgroup1_show_options(struct seq_file *, struct kernfs_root *);
567:	static ssize_t cgroup1_tasks_write(struct kernfs_open_file *, char *, size_t, loff_t);
1246:	static int cgroup1_wq_init(void);
624:	static u64 cgroup_clone_children_read(struct cgroup_subsys_state *, struct cftype *);
630:	static int cgroup_clone_children_write(struct cgroup_subsys_state *, struct cftype *, u64);
1259:	static int cgroup_no_v1(char *);
225:	static void cgroup_pidlist_destroy_work_fn(struct work_struct *);
293:	static struct cgroup_pidlist *cgroup_pidlist_find(struct cgroup *, enum cgroup_filetype);
492:	static void *cgroup_pidlist_next(struct seq_file *, void *, loff_t *);
512:	static int cgroup_pidlist_show(struct seq_file *, void *);
420:	static void *cgroup_pidlist_start(struct seq_file *, loff_t *);
481:	static void cgroup_pidlist_stop(struct seq_file *, void *);
608:	static u64 cgroup_read_notify_on_release(struct cgroup_subsys_state *, struct cftype *);
591:	static int cgroup_release_agent_show(struct seq_file *, void *);
573:	static ssize_t cgroup_release_agent_write(struct kernfs_open_file *, char *, size_t, loff_t);
602:	static int cgroup_sane_behavior_show(struct seq_file *, void *);
614:	static int cgroup_write_notify_on_release(struct cgroup_subsys_state *, struct cftype *, u64);
288:	static int cmppid(const void *, const void *);
914:	static int parse_cgroupfs_options(char *, struct cgroup_sb_opts *);
358:	static int pidlist_array_load(struct cgroup *, enum cgroup_filetype, struct cgroup_pidlist **);

File kernel/cgroup/cgroup.c:
3835:	int cgroup_add_dfl_cftypes(struct cgroup_subsys *, struct cftype *);
3852:	int cgroup_add_legacy_cftypes(struct cgroup_subsys *, struct cftype *);
2625:	int cgroup_attach_task(struct cgroup *, struct task_struct *, bool);
6005:	int cgroup_bpf_attach(struct cgroup *, struct bpf_prog *, enum bpf_attach_type, u32);
6015:	int cgroup_bpf_detach(struct cgroup *, struct bpf_prog *, enum bpf_attach_type, u32);
6025:	int cgroup_bpf_query(struct cgroup *, const union bpf_attr *, union bpf_attr *);
5611:	int cgroup_can_fork(struct task_struct *);
5642:	void cgroup_cancel_fork(struct task_struct *);
2007:	struct dentry *cgroup_do_mount(struct file_system_type *, int, struct cgroup_root *, unsigned long, struct cgroup_namespace *);
5730:	void cgroup_exit(struct task_struct *);
3867:	void cgroup_file_notify(struct cgroup_file *);
5597:	void cgroup_fork(struct task_struct *);
5775:	void cgroup_free(struct task_struct *);
1248:	void cgroup_free_root(struct cgroup_root *);
543:	struct cgroup_subsys_state *cgroup_get_e_css(struct cgroup *, struct cgroup_subsys *);
5902:	struct cgroup *cgroup_get_from_fd(int);
5868:	struct cgroup *cgroup_get_from_path(const char *);
5382:	int cgroup_init(void);
5346:	int cgroup_init_early(void);
381:	bool cgroup_is_thread_root(struct cgroup *);
342:	bool cgroup_is_threaded(struct cgroup *);
1530:	struct cgroup *cgroup_kn_lock_live(struct kernfs_node *, bool);
1498:	void cgroup_kn_unlock(struct kernfs_node *);
2839:	void cgroup_lock_and_drain_offline(struct cgroup *);
2593:	int cgroup_migrate(struct task_struct *, bool, struct cgroup_mgctx *);
2476:	void cgroup_migrate_add_src(struct css_set *, struct cgroup *, struct cgroup_mgctx *);
2437:	void cgroup_migrate_finish(struct cgroup_mgctx *);
2523:	int cgroup_migrate_prepare_dst(struct cgroup_mgctx *);
2402:	int cgroup_migrate_vet_dst(struct cgroup *);
5031:	int cgroup_mkdir(struct kernfs_node *, const char *, umode_t);
2723:	void cgroup_move_task_to_root(struct task_struct *);
301:	bool cgroup_on_dfl(const struct cgroup *);
5499:	void cgroup_path_from_kernfs_id(const union kernfs_node_id *, char *, size_t);
2135:	int cgroup_path_ns(struct cgroup *, char *, size_t, struct cgroup_namespace *);
2127:	int cgroup_path_ns_locked(struct cgroup *, char *, size_t, struct cgroup_namespace *);
5662:	void cgroup_post_fork(struct task_struct *);
2707:	void cgroup_procs_write_finish(struct task_struct *);
2661:	struct task_struct *cgroup_procs_write_start(char *, bool);
5758:	void cgroup_release(struct task_struct *);
3778:	int cgroup_rm_cftypes(struct cftype *);
5262:	int cgroup_rmdir(struct kernfs_node *);
1220:	struct cgroup_root *cgroup_root_from_kf(struct kernfs_root *);
1906:	int cgroup_setup_root(struct cgroup_root *, u16);
1724:	int cgroup_show_path(struct seq_file *, struct kernfs_node *, struct kernfs_root *);
5952:	void cgroup_sk_alloc(struct sock_cgroup_data *);
5938:	void cgroup_sk_alloc_disable(void);
5979:	void cgroup_sk_clone(struct sock_cgroup_data *);
5994:	void cgroup_sk_free(struct sock_cgroup_data *);
240:	bool cgroup_ssid_enabled(int);
2238:	struct task_struct *cgroup_taskset_first(struct cgroup_taskset *, struct cgroup_subsys_state **);
2255:	struct task_struct *cgroup_taskset_next(struct cgroup_taskset *, struct cgroup_subsys_state **);
5853:	struct cgroup_subsys_state *css_from_id(int, struct cgroup_subsys *);
4097:	bool css_has_online_children(struct cgroup_subsys_state *);
3903:	struct cgroup_subsys_state *css_next_child(struct cgroup_subsys_state *, struct cgroup_subsys_state *);
4065:	struct cgroup_subsys_state *css_next_descendant_post(struct cgroup_subsys_state *, struct cgroup_subsys_state *);
3971:	struct cgroup_subsys_state *css_next_descendant_pre(struct cgroup_subsys_state *, struct cgroup_subsys_state *);
4012:	struct cgroup_subsys_state *css_rightmost_descendant(struct cgroup_subsys_state *);
4364:	void css_task_iter_end(struct css_task_iter *);
4333:	struct task_struct *css_task_iter_next(struct css_task_iter *);
4300:	void css_task_iter_start(struct cgroup_subsys_state *, unsigned int, struct css_task_iter *);
5814:	struct cgroup_subsys_state *css_tryget_online_from_dir(struct dentry *, struct cgroup_subsys *);
1887:	void init_cgroup_root(struct cgroup_root *, struct cgroup_sb_opts *);
571:	struct cgroup_subsys_state *of_css(struct kernfs_open_file *);
5516:	int proc_cgroup_show(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
872:	void put_css_set_locked(struct css_set *);
1654:	int rebind_subsystems(struct cgroup_root *, u16);
1367:	struct cgroup *task_cgroup_from_root(struct task_struct *, struct cgroup_root *);
2165:	int task_cgroup_path(struct task_struct *, char *, size_t);
4399:	static void *__cgroup_procs_start(unsigned int, loff_t *, struct seq_file *);
1060:	static int allocate_cgrp_cset_links(int, struct list_head *);
1773:	static void apply_cgroup_root_flags(unsigned int);
3802:	static int cgroup_add_cftypes(struct cgroup_subsys *, struct cftype *);
3641:	static int cgroup_addrm_files(struct cgroup_subsys_state *, struct cgroup *, struct cftype *, bool);
3678:	static int cgroup_apply_cftypes(struct cftype *, bool);
3049:	static int cgroup_apply_control(struct cgroup *);
3004:	static void cgroup_apply_control_disable(struct cgroup *);
2958:	static int cgroup_apply_control_enable(struct cgroup *);
359:	static bool cgroup_can_be_thread_root(struct cgroup *);
421:	static u16 cgroup_control(struct cgroup *);
2761:	static int cgroup_controllers_show(struct seq_file *, void *);
5198:	static int cgroup_destroy_locked(struct cgroup *);
5781:	static int cgroup_disable(char *);
3404:	static int cgroup_events_show(struct seq_file *, void *);
3704:	static void cgroup_exit_cftypes(struct cftype *);
1406:	static char *cgroup_file_name(struct cgroup *, const struct cftype *, char *);
3587:	static void cgroup_file_notify_timer(struct timer_list *);
3454:	static int cgroup_file_open(struct kernfs_open_file *);
3463:	static void cgroup_file_release(struct kernfs_open_file *);
3471:	static ssize_t cgroup_file_write(struct kernfs_open_file *, char *, size_t, loff_t);
565:	static void cgroup_get_live(struct cgroup *);
307:	static int cgroup_idr_alloc(struct idr *, void *, int, int, gfp_t);
330:	static void cgroup_idr_remove(struct idr *, int);
320:	static void *cgroup_idr_replace(struct idr *, void *, int);
3720:	static int cgroup_init_cftypes(struct cgroup_subsys *, struct cftype *);
5287:	static void cgroup_init_subsys(struct cgroup_subsys *, bool);
403:	static bool cgroup_is_valid_domain(struct cgroup *);
2094:	static void cgroup_kill_sb(struct super_block *);
3574:	static int cgroup_kn_set_ugid(struct kernfs_node *);
3361:	static int cgroup_max_depth_show(struct seq_file *, void *);
3374:	static ssize_t cgroup_max_depth_write(struct kernfs_open_file *, char *, size_t, loff_t);
3318:	static int cgroup_max_descendants_show(struct seq_file *, void *);
3331:	static ssize_t cgroup_max_descendants_write(struct kernfs_open_file *, char *, size_t, loff_t);
2201:	static void cgroup_migrate_add_task(struct task_struct *, struct cgroup_mgctx *);
2302:	static int cgroup_migrate_execute(struct cgroup_mgctx *);
2046:	static struct dentry *cgroup_mount(struct file_system_type *, int, const char *, void *);
2744:	static void cgroup_print_ss_mask(struct seq_file *, u16);
4388:	static void *cgroup_procs_next(struct seq_file *, void *, loff_t *);
4380:	static void cgroup_procs_release(struct kernfs_open_file *);
4445:	static int cgroup_procs_show(struct seq_file *, void *);
4428:	static void *cgroup_procs_start(struct seq_file *, loff_t *);
4488:	static ssize_t cgroup_procs_write(struct kernfs_open_file *, char *, size_t, loff_t);
4451:	static int cgroup_procs_write_permission(struct cgroup *, struct cgroup *, struct super_block *);
2900:	static void cgroup_propagate_control(struct cgroup *);
1790:	static int cgroup_remount(struct kernfs_root *, int *, char *);
2921:	static void cgroup_restore_control(struct cgroup *);
3754:	static int cgroup_rm_cftypes_locked(struct cftype *);
2880:	static void cgroup_save_control(struct cgroup *);
3526:	static void *cgroup_seqfile_next(struct seq_file *, void *, loff_t *);
3537:	static int cgroup_seqfile_show(struct seq_file *, void *);
3521:	static void *cgroup_seqfile_start(struct seq_file *, loff_t *);
3531:	static void cgroup_seqfile_stop(struct seq_file *, void *);
1783:	static int cgroup_show_options(struct seq_file *, struct kernfs_root *);
3411:	static int cgroup_stat_show(struct seq_file *, void *);
2770:	static int cgroup_subtree_control_show(struct seq_file *, void *);
3129:	static ssize_t cgroup_subtree_control_write(struct kernfs_open_file *, char *, size_t, loff_t);
6099:	static int cgroup_sysfs_init(void);
4524:	static void *cgroup_threads_start(struct seq_file *, loff_t *);
4529:	static ssize_t cgroup_threads_write(struct kernfs_open_file *, char *, size_t, loff_t);
3280:	static int cgroup_type_show(struct seq_file *, void *);
3296:	static ssize_t cgroup_type_write(struct kernfs_open_file *, char *, size_t, loff_t);
2787:	static int cgroup_update_dfl_csses(struct cgroup *);
738:	static void cgroup_update_populated(struct cgroup *, bool);
5483:	static int cgroup_wq_init(void);
3442:	static int cpu_stat_show(struct seq_file *, void *);
1334:	static struct cgroup *cset_cgroup_from_root(struct css_set *, struct cgroup_root *);
1585:	static void css_clear_dir(struct cgroup_subsys_state *);
4660:	static void css_free_rwork_fn(struct work_struct *);
5120:	static void css_killed_ref_fn(struct percpu_ref *);
5102:	static void css_killed_work_fn(struct work_struct *);
1614:	static int css_populate_dir(struct cgroup_subsys_state *);
4769:	static void css_release(struct percpu_ref *);
4709:	static void css_release_work_fn(struct work_struct *);
816:	static void css_set_move_task(struct task_struct *, struct css_set *, struct css_set *, bool);
4236:	static void css_task_iter_advance(struct css_task_iter *);
4171:	static void css_task_iter_advance_css_set(struct css_task_iter *);
2933:	static bool css_visible(struct cgroup_subsys_state *, struct cgroup_subsys_state *);
6062:	static ssize_t delegate_show(struct kobject *, struct kobj_attribute *, char *);
6081:	static ssize_t features_show(struct kobject *, struct kobj_attribute *, char *);
1117:	static struct css_set *find_css_set(struct css_set *, struct cgroup *);
1042:	static void free_cgrp_cset_links(struct list_head *);
4778:	static void init_and_link_css(struct cgroup_subsys_state *, struct cgroup_subsys *, struct cgroup *);
1862:	static void init_cgroup_housekeeping(struct cgroup *);
5140:	static void kill_css(struct cgroup_subsys_state *);
1084:	static void link_css_set(struct list_head *, struct css_set *, struct cgroup *);
4807:	static int online_css(struct cgroup_subsys_state *);
1751:	static int parse_cgroup_root_flags(char *, unsigned int *);
6038:	static ssize_t show_delegatable_files(struct cftype *, char *, ssize_t, const char *);

File kernel/cgroup/cpuset.c:
2718:	void __cpuset_memory_pressure_bump(void);
2568:	bool __cpuset_node_allowed(int, gfp_t);
2426:	void cpuset_cpus_allowed(struct task_struct *, struct cpumask *);
2449:	void cpuset_cpus_allowed_fallback(struct task_struct *);
2278:	void cpuset_force_rebuild(void);
2120:	int cpuset_init(void);
2475:	void cpuset_init_current_mems_allowed(void);
2400:	void cpuset_init_smp(void);
2634:	int cpuset_mem_spread_node(void);
2490:	nodemask_t cpuset_mems_allowed(struct task_struct *);
2665:	int cpuset_mems_allowed_intersects(const struct task_struct *, const struct task_struct *);
2510:	int cpuset_nodemask_valid_mems_allowed(nodemask_t *);
2677:	void cpuset_print_current_mems_allowed(void);
2643:	int cpuset_slab_spread_node(void);
2766:	void cpuset_task_status_allowed(struct seq_file *, struct task_struct *);
2363:	void cpuset_update_active_cpus(void);
2373:	void cpuset_wait_for_hotplug(void);
1260:	bool current_cpuset_is_being_rebound(void);
2735:	int proc_cpuset_show(struct seq_file *, struct pid_namespace *, struct pid *, struct task_struct *);
860:	void rebuild_sched_domains(void);
427:	static struct cpuset *alloc_trial_cpuset(struct cpuset *);
1520:	static void cpuset_attach(struct cgroup_taskset *);
2067:	static void cpuset_bind(struct cgroup_subsys_state *);
1461:	static int cpuset_can_attach(struct cgroup_taskset *);
1500:	static void cpuset_cancel_attach(struct cgroup_taskset *);
1061:	static void cpuset_change_task_nodemask(struct task_struct *, nodemask_t *);
1754:	static int cpuset_common_seq_show(struct seq_file *, void *);
1942:	static struct cgroup_subsys_state *cpuset_css_alloc(struct cgroup_subsys_state *);
2058:	static void cpuset_css_free(struct cgroup_subsys_state *);
2043:	static void cpuset_css_offline(struct cgroup_subsys_state *);
1974:	static int cpuset_css_online(struct cgroup_subsys_state *);
2090:	static void cpuset_fork(struct task_struct *);
2299:	static void cpuset_hotplug_workfn(struct work_struct *);
1029:	static void cpuset_migrate_mm(struct mm_struct *, const nodemask_t *, const nodemask_t *);
1018:	static void cpuset_migrate_mm_workfn(struct work_struct *);
318:	static struct dentry *cpuset_mount(struct file_system_type *, int, const char *, void *);
1046:	static void cpuset_post_attach(void);
1814:	static s64 cpuset_read_s64(struct cgroup_subsys_state *, struct cftype *);
1783:	static u64 cpuset_read_u64(struct cgroup_subsys_state *, struct cftype *);
2383:	static int cpuset_track_online_nodes(struct notifier_block *, unsigned long, void *);
393:	static void cpuset_update_task_spread_flag(struct cpuset *, struct task_struct *);
1683:	static ssize_t cpuset_write_resmask(struct kernfs_open_file *, char *, size_t, loff_t);
1656:	static int cpuset_write_s64(struct cgroup_subsys_state *, struct cftype *, s64);
1609:	static int cpuset_write_u64(struct cgroup_subsys_state *, struct cftype *, u64);
1417:	static void fmeter_update(struct fmeter *);
349:	static void guarantee_online_cpus(struct cpuset *, struct cpumask *);
379:	static void guarantee_online_mems(struct cpuset *, nodemask_t *);
415:	static int is_cpuset_subset(const struct cpuset *, const struct cpuset *);
829:	static void rebuild_sched_domains_locked(void);
572:	static void update_domain_attr_tree(struct sched_domain_attr *, struct cpuset *);
1316:	static int update_flag(cpuset_flagbits_t, struct cpuset *, int);
875:	static void update_tasks_cpumask(struct cpuset *);
1296:	static void update_tasks_flags(struct cpuset *);
1089:	static void update_tasks_nodemask(struct cpuset *);
482:	static int validate_change(struct cpuset *, struct cpuset *);

File kernel/cgroup/freezer.c:
65:	bool cgroup_freezing(struct task_struct *);
318:	static void freeze_cgroup(struct freezer *);
349:	static void freezer_apply_state(struct freezer *, bool, unsigned int);
158:	static void freezer_attach(struct cgroup_taskset *);
86:	static struct cgroup_subsys_state *freezer_css_alloc(struct cgroup_subsys_state *);
144:	static void freezer_css_free(struct cgroup_subsys_state *);
130:	static void freezer_css_offline(struct cgroup_subsys_state *);
105:	static int freezer_css_online(struct cgroup_subsys_state *);
203:	static void freezer_fork(struct task_struct *);
445:	static u64 freezer_parent_freezing_read(struct cgroup_subsys_state *, struct cftype *);
291:	static int freezer_read(struct seq_file *, void *);
437:	static u64 freezer_self_freezing_read(struct cgroup_subsys_state *, struct cftype *);
419:	static ssize_t freezer_write(struct kernfs_open_file *, char *, size_t, loff_t);
329:	static void unfreeze_cgroup(struct freezer *);
244:	static void update_if_frozen(struct cgroup_subsys_state *);

File kernel/cgroup/namespace.c:
50:	struct cgroup_namespace *copy_cgroup_ns(unsigned long, struct user_namespace *, struct cgroup_namespace *);
40:	void free_cgroup_ns(struct cgroup_namespace *);
152:	static int cgroup_namespaces_init(void);
117:	static struct ns_common *cgroupns_get(struct task_struct *);
98:	static int cgroupns_install(struct nsproxy *, struct ns_common *);
138:	static struct user_namespace *cgroupns_owner(struct ns_common *);
133:	static void cgroupns_put(struct ns_common *);

File kernel/cgroup/pids.c:
173:	static int pids_can_attach(struct cgroup_taskset *);
220:	static int pids_can_fork(struct task_struct *);
98:	static void pids_cancel(struct pids_cgroup *, int);
198:	static void pids_cancel_attach(struct cgroup_taskset *);
241:	static void pids_cancel_fork(struct task_struct *);
71:	static struct cgroup_subsys_state *pids_css_alloc(struct cgroup_subsys_state *);
85:	static void pids_css_free(struct cgroup_subsys_state *);
302:	static s64 pids_current_read(struct cgroup_subsys_state *, struct cftype *);
310:	static int pids_events_show(struct seq_file *, void *);
288:	static int pids_max_show(struct seq_file *, void *);
258:	static ssize_t pids_max_write(struct kernfs_open_file *, char *, size_t, loff_t);
251:	static void pids_release(struct task_struct *);

File kernel/cgroup/rdma.c:
319:	int rdmacg_register_device(struct rdmacg_device *);
262:	int rdmacg_try_charge(struct rdma_cgroup **, struct rdmacg_device *, enum rdmacg_resource_type);
230:	void rdmacg_uncharge(struct rdma_cgroup *, struct rdmacg_device *, enum rdmacg_resource_type);
340:	void rdmacg_unregister_device(struct rdmacg_device *);
106:	static void free_cg_rpool_locked(struct rdmacg_resource_pool *);
132:	static struct rdmacg_resource_pool *get_cg_rpool_locked(struct rdma_cgroup *, struct rdmacg_device *);
569:	static struct cgroup_subsys_state *rdmacg_css_alloc(struct cgroup_subsys_state *);
581:	static void rdmacg_css_free(struct cgroup_subsys_state *);
597:	static void rdmacg_css_offline(struct cgroup_subsys_state *);
530:	static int rdmacg_resource_read(struct seq_file *, void *);
431:	static ssize_t rdmacg_resource_set_max(struct kernfs_open_file *, char *, size_t, loff_t);
208:	static void rdmacg_uncharge_hierarchy(struct rdma_cgroup *, struct rdmacg_device *, struct rdma_cgroup *, enum rdmacg_resource_type);

File kernel/cgroup/rstat.c:
354:	void __cgroup_account_cputime(struct cgroup *, u64);
363:	void __cgroup_account_cputime_field(struct cgroup *, enum cpu_usage_stat, u64);
387:	void cgroup_base_stat_cputime_show(struct seq_file *);
282:	void cgroup_rstat_boot(void);
263:	void cgroup_rstat_exit(struct cgroup *);
191:	void cgroup_rstat_flush(struct cgroup *);
224:	void cgroup_rstat_flush_hold(struct cgroup *);
206:	void cgroup_rstat_flush_irqsafe(struct cgroup *);
235:	void cgroup_rstat_flush_release(void);
241:	int cgroup_rstat_init(struct cgroup *);
24:	void cgroup_rstat_updated(struct cgroup *, int);
141:	static void cgroup_rstat_flush_locked(struct cgroup *, bool);

File kernel/compat.c:
299:	long __ia32_compat_sys_sched_getaffinity(const struct pt_regs *);
279:	long __ia32_compat_sys_sched_setaffinity(const struct pt_regs *);
195:	long __ia32_compat_sys_sigprocmask(const struct pt_regs *);
429:	void *compat_alloc_user_space(unsigned long);
348:	long compat_get_bitmap(unsigned long *, const compat_ulong_t *, unsigned long);
142:	int compat_get_timespec(struct timespec *, const void *);
124:	int compat_get_timeval(struct timeval *, const void *);
33:	int compat_get_timex(struct timex *, const struct compat_timex *);
377:	long compat_put_bitmap(compat_ulong_t *, unsigned long *, unsigned long);
151:	int compat_put_timespec(const struct timespec *, void *);
133:	int compat_put_timeval(const struct timeval *, void *);
65:	int compat_put_timex(struct compat_timex *, const struct timex *);
160:	int get_compat_itimerval(struct itimerval *, const struct compat_itimerval *);
334:	int get_compat_sigevent(struct sigevent *, const struct compat_sigevent *);
405:	int get_compat_sigset(sigset_t *, const compat_sigset_t *);
173:	int put_compat_itimerval(struct compat_itimerval *, const struct itimerval *);
238:	int put_compat_rusage(const struct rusage *, struct compat_rusage *);

File kernel/context_tracking.c:
61:	void __context_tracking_enter(enum ctx_state);
144:	void __context_tracking_exit(enum ctx_state);
188:	void context_tracking_cpu_set(int);
104:	void context_tracking_enter(enum ctx_state);
168:	void context_tracking_exit(enum ctx_state);
126:	void context_tracking_user_enter(void);
182:	void context_tracking_user_exit(void);
33:	static bool context_tracking_recursion_enter(void);

File kernel/cpu.c:
1872:	void __cpuhp_remove_state(enum cpuhp_state, bool);
1834:	void __cpuhp_remove_state_cpuslocked(enum cpuhp_state, bool);
1770:	int __cpuhp_setup_state(enum cpuhp_state, const char *, bool, int (*)(unsigned int), int (*)(unsigned int), bool);
1711:	int __cpuhp_setup_state_cpuslocked(enum cpuhp_state, const char *, bool, int (*)(unsigned int), int (*)(unsigned int), bool);
1682:	int __cpuhp_state_add_instance(enum cpuhp_state, struct hlist_node *, bool);
1637:	int __cpuhp_state_add_instance_cpuslocked(enum cpuhp_state, struct hlist_node *, bool);
1786:	int __cpuhp_state_remove_instance(enum cpuhp_state, struct hlist_node *, bool);
1236:	void arch_enable_nonboot_cpus_begin(void);
2301:	void boot_cpu_hotplug_init(void);
2283:	void boot_cpu_init(void);
791:	void clear_tasks_mm_cpumask(int);
1031:	int cpu_down(unsigned int);
336:	void cpu_hotplug_disable(void);
351:	void cpu_hotplug_enable(void);
267:	void cpu_maps_update_begin(void);
272:	void cpu_maps_update_done(void);
2346:	bool cpu_mitigations_auto_nosmt(void);
2339:	bool cpu_mitigations_off(void);
388:	void cpu_smt_check_topology(void);
369:	void cpu_smt_disable(bool);
1183:	int cpu_up(unsigned int);
1071:	void cpuhp_online_idle(enum cpuhp_state);
913:	void cpuhp_report_idle_dead(void);
2065:	int cpuhp_smt_disable(enum cpuhp_smt_control);
2099:	int cpuhp_smt_enable(void);
772:	void cpuhp_threads_init(void);
287:	void cpus_read_lock(void);
293:	int cpus_read_trylock(void);
299:	void cpus_read_unlock(void);
305:	void cpus_write_lock(void);
310:	void cpus_write_unlock(void);
1244:	void enable_nonboot_cpus(void);
1192:	int freeze_secondary_cpus(int);
2275:	void init_cpu_online(const struct cpumask *);
2270:	void init_cpu_possible(const struct cpumask *);
2265:	void init_cpu_present(const struct cpumask *);
315:	void lockdep_assert_cpus_held(void);
1048:	void notify_cpu_starting(unsigned int);
344:	static void __cpu_hotplug_enable(void);
457:	static void __cpuhp_kick_ap(struct cpuhp_cpu_state *);
953:	static int _cpu_down(unsigned int, int, enum cpuhp_state);
1090:	static int _cpu_up(unsigned int, int, enum cpuhp_state);
1276:	static int alloc_frozen_cpus(void);
516:	static int bringup_cpu(unsigned int);
1296:	static int cpu_hotplug_pm_callback(struct notifier_block *, unsigned long, void *);
1319:	static int cpu_hotplug_pm_sync_init(void);
906:	static void cpuhp_complete_idle_dead(void *);
598:	static void cpuhp_create(unsigned int);
144:	static int cpuhp_invoke_callback(unsigned int, enum cpuhp_state, bool, struct hlist_node *, struct hlist_node **);
1584:	static int cpuhp_issue_call(int, enum cpuhp_state, bool, struct hlist_node *);
473:	static int cpuhp_kick_ap(struct cpuhp_cpu_state *, enum cpuhp_state);
744:	static int cpuhp_kick_ap_work(unsigned int);
1618:	static void cpuhp_rollback_install(int, enum cpuhp_state, struct hlist_node *);
606:	static int cpuhp_should_run(unsigned int);
2193:	static int cpuhp_sysfs_init(void);
627:	static void cpuhp_thread_fun(unsigned int);
1021:	static int do_cpu_down(unsigned int, enum cpuhp_state);
1149:	static int do_cpu_up(unsigned int, enum cpuhp_state);
536:	static int finish_cpu(unsigned int);
2322:	static int mitigations_parse_cmdline(char *);
1977:	static ssize_t show_cpuhp_fail(struct device *, struct device_attribute *, char *);
1881:	static ssize_t show_cpuhp_state(struct device *, struct device_attribute *, char *);
2000:	static ssize_t show_cpuhp_states(struct device *, struct device_attribute *, char *);
1930:	static ssize_t show_cpuhp_target(struct device *, struct device_attribute *, char *);
2163:	static ssize_t show_smt_active(struct device *, struct device_attribute *, char *);
2042:	static ssize_t show_smt_control(struct device *, struct device_attribute *, char *);
394:	static int smt_cmdline_disable(char *);
2121:	static ssize_t store_smt_control(struct device *, struct device_attribute *, const char *, size_t);
821:	static int take_cpu_down(void *);
857:	static int takedown_cpu(unsigned int);
1940:	static ssize_t write_cpuhp_fail(struct device *, struct device_attribute *, const char *, size_t);
1890:	static ssize_t write_cpuhp_target(struct device *, struct device_attribute *, const char *, size_t);

File kernel/crash_core.c:
308:	Elf64_Word *append_elf_note(Elf64_Word *, char *, unsigned int, void *, size_t);
383:	void arch_crash_save_vmcoreinfo(void);
349:	void crash_save_vmcoreinfo(void);
341:	void crash_update_vmcoreinfo_safecopy(void *);
325:	void final_note(Elf64_Word *);
386:	phys_addr_t paddr_vmcoreinfo_note(void);
270:	int parse_crashkernel(char *, unsigned long long, unsigned long long *, unsigned long long *);
279:	int parse_crashkernel_high(char *, unsigned long long, unsigned long long *, unsigned long long *);
288:	int parse_crashkernel_low(char *, unsigned long long, unsigned long long *, unsigned long long *);
362:	void vmcoreinfo_append_str(const char *, ...);
229:	static int __parse_crashkernel(char *, unsigned long long, unsigned long long *, unsigned long long *, const char *, const char *);
392:	static int crash_save_vmcoreinfo_init(void);
330:	static void update_vmcoreinfo_note(void);

File kernel/crash_dump.c:
34:	static int setup_elfcorehdr(char *);

File kernel/cred.c:
135:	void __put_cred(struct cred *);
513:	void abort_creds(struct cred *);
427:	int commit_creds(struct cred *);
327:	int copy_creds(struct task_struct *, unsigned long);
210:	struct cred *cred_alloc_blank(void);
595:	void cred_init(void);
160:	void exit_creds(struct task_struct *);
191:	const struct cred *get_task_cred(struct task_struct *);
534:	const struct cred *override_creds(const struct cred *);
247:	struct cred *prepare_creds(void);
297:	struct cred *prepare_exec_creds(void);
620:	struct cred *prepare_kernel_cred(struct task_struct *);
575:	void revert_creds(const struct cred *);
717:	int set_create_files_as(struct cred *, struct inode *);
679:	int set_security_override(struct cred *, u32);
695:	int set_security_override_from_ctx(struct cred *, const char *);
96:	static void put_cred_rcu(struct callback_head *);

File kernel/debug/debug_core.c:
250:	int dbg_activate_sw_breakpoints(void);
315:	int dbg_deactivate_sw_breakpoints(void);
1052:	int dbg_io_get_char(void);
868:	void dbg_late_init(void);
363:	int dbg_remove_all_break(void);
337:	int dbg_remove_sw_break(unsigned long);
274:	int dbg_set_sw_break(unsigned long);
213:	int kgdb_arch_init(void);
864:	void kgdb_arch_late(void);
208:	unsigned long kgdb_arch_pc(int, struct pt_regs *);
182:	int kgdb_arch_remove_breakpoint(struct kgdb_bkpt *);
169:	int kgdb_arch_set_breakpoint(struct kgdb_bkpt *);
1072:	void kgdb_breakpoint(void);
696:	int kgdb_handle_exception(int, int, int, struct pt_regs *);
351:	int kgdb_isremovedbreak(unsigned long);
748:	int kgdb_nmicallback(int, void *);
767:	int kgdb_nmicallin(int, int, void *, int, atomic_t *);
987:	int kgdb_register_io_module(struct kgdb_io *);
962:	void kgdb_schedule_breakpoint(void);
218:	int kgdb_skipexception(int, struct pt_regs *);
1030:	void kgdb_unregister_io_module(struct kgdb_io *);
188:	int kgdb_validate_break_address(unsigned long);
877:	static int dbg_notify_reboot(struct notifier_block *, unsigned long, void *);
792:	static void kgdb_console_write(struct console *, const char *, unsigned int);
468:	static int kgdb_cpu_enter(struct kgdb_state *, struct pt_regs *, int);
840:	static int kgdb_panic_event(struct notifier_block *, unsigned long, void *);
954:	static void kgdb_tasklet_bpt(unsigned long);
738:	static int module_event(struct notifier_block *, unsigned long, void *);
98:	static int opt_kgdb_con(char *);
1082:	static int opt_kgdb_wait(char *);
152:	static int opt_nokgdbroundup(char *);
815:	static void sysrq_handle_dbg(int);

File kernel/debug/gdbstub.c:
354:	void gdb_regs_to_pt_regs(unsigned long *, struct pt_regs *);
944:	int gdb_serial_stub(struct kgdb_state *);
1114:	void gdbstub_exit(int);
198:	void gdbstub_msg_write(const char *, int);
1082:	int gdbstub_state(struct kgdb_state *, char *);
293:	int kgdb_hex2long(char **, unsigned long *);
268:	int kgdb_hex2mem(char *, char *, int);
239:	char *kgdb_mem2hex(char *, char *, int);
342:	void pt_regs_to_gdb_regs(unsigned long *, struct pt_regs *);
652:	static void gdb_cmd_detachkill(struct kgdb_state *);
494:	static void gdb_get_regs_helper(struct kgdb_state *);
60:	static int gdbstub_read_wait(void);
433:	static struct task_struct *getthread(int, struct pt_regs *);
408:	static char *pack_threadid(char *, unsigned char *);
145:	static void put_packet(char *);
368:	static int write_mem_msg(int);

File kernel/debug/kdb/kdb_bp.c:
174:	void kdb_bp_install(struct pt_regs *);
205:	void kdb_bp_remove(void);
519:	void kdb_initbptab(void);
377:	static int kdb_bc(int, const char **);
277:	static int kdb_bp(int, const char **);
238:	static void kdb_printbp(kdb_bp_t *, int);
506:	static int kdb_ss(int, const char **);

File kernel/debug/kdb/kdb_bt.c:
106:	int kdb_bt(int, const char **);
81:	static int kdb_bt1(struct task_struct *, unsigned long, int, int);
22:	static void kdb_show_stack(struct task_struct *, void *);

File kernel/debug/kdb/kdb_debugger.c:
45:	int kdb_common_deinit_state(void);
37:	int kdb_common_init_state(struct kgdb_state *);
176:	void kdb_gdb_state_pass(char *);
53:	int kdb_stub(struct kgdb_state *);

File kernel/debug/kdb/kdb_io.c:
446:	char *kdb_getstr(char *, size_t, const char *);
855:	int kdb_printf(const char *, ...);
555:	int vkdb_printf(enum kdb_msgsrc, const char *, struct __va_list_tag *);
472:	static void kdb_input_flush(void);
204:	static char *kdb_read(char *, size_t);

File kernel/debug/kdb/kdb_keyboard.c:
35:	int kdb_get_kbd_char(void);
199:	void kdb_kbd_cleanup_state(void);

File kernel/debug/kdb/kdb_main.c:
190:	struct task_struct *kdb_curr_task(int);
2925:	void kdb_init(int);
1397:	int kdb_main_loop(kdb_reason_t, kdb_reason_t, int, kdb_dbtrap_t, struct pt_regs *);
911:	int kdb_parse(const char *);
1365:	void kdb_print_state(const char *, int);
2335:	void kdb_ps1(const struct task_struct *);
2301:	void kdb_ps_suppressed(void);
2755:	int kdb_register(char *, kdb_func_t, char *, char *, short);
2679:	int kdb_register_flags(char *, kdb_func_t, char *, char *, short, kdb_cmdflags_t);
382:	int kdb_set(int, const char **);
1142:	void kdb_set_current_task(struct task_struct *);
2774:	int kdb_unregister(char *);
494:	int kdbgetaddrarg(int, const char **, int *, unsigned long *, long *, char **);
229:	char *kdbgetenv(const char *);
316:	int kdbgetintenv(const char *, int *);
359:	int kdbgetu64arg(const char *, u64 *);
337:	int kdbgetularg(const char *, unsigned long *);
2267:	static int kdb_cpu(int, const char **);
707:	static int kdb_defcmd(int, const char **);
674:	static int kdb_defcmd2(const char *, const char *);
2194:	static int kdb_disable_nmi(int, const char **);
2107:	static int kdb_dmesg(int, const char **);
2015:	static int kdb_ef(int, const char **);
2086:	static int kdb_env(int, const char **);
783:	static int kdb_exec_defcmd(int, const char **);
1808:	static int kdb_go(int, const char **);
2650:	static int kdb_grep_help(int, const char **);
2438:	static int kdb_help(int, const char **);
2430:	static int kdb_kgdb(int, const char **);
2465:	static int kdb_kill(int, const char **);
1182:	static int kdb_local(kdb_reason_t, struct pt_regs *, kdb_dbtrap_t, int);
2039:	static int kdb_lsmod(int, const char **);
1567:	static int kdb_md(int, const char **);
1487:	static void kdb_md_line(const char *, unsigned long, int, int, int, int, int, int);
1765:	static int kdb_mm(int, const char **);
2203:	static int kdb_param_enable_nmi(const char *, const struct kernel_param *);
2580:	static int kdb_per_cpu(int, const char **);
2398:	static int kdb_pid(int, const char **);
2362:	static int kdb_ps(int, const char **);
1853:	static int kdb_rd(int, const char **);
1121:	static int kdb_reboot(int, const char **);
1923:	static int kdb_rm(int, const char **);
1990:	static int kdb_sr(int, const char **);
2525:	static int kdb_summary(int, const char **);
291:	static int kdbgetulenv(const char *, unsigned long *);

File kernel/debug/kdb/kdb_support.c:
803:	void debug_kfree(void *);
745:	void *debug_kmalloc(size_t, gfp_t);
862:	void debug_kusage(void);
186:	int kallsyms_symbol_complete(char *, int);
230:	int kallsyms_symbol_next(char *, int, int);
326:	int kdb_getarea_size(void *, unsigned long, size_t);
403:	int kdb_getphysword(unsigned long *, unsigned long, size_t);
453:	int kdb_getword(unsigned long *, unsigned long, size_t);
674:	void kdb_print_nameval(const char *, unsigned long);
351:	int kdb_putarea_size(unsigned long, void *, size_t);
502:	int kdb_putword(unsigned long, unsigned long, size_t);
923:	void kdb_restore_flags(void);
917:	void kdb_save_flags(void);
307:	char *kdb_strdup(const char *, gfp_t);
258:	void kdb_symbol_print(unsigned long, const kdb_symtab_t *, unsigned int);
661:	unsigned long kdb_task_state(const struct task_struct *, unsigned long);
621:	char kdb_task_state_char(const struct task_struct *);
561:	unsigned long kdb_task_state_string(const char *);
40:	int kdbgetsymval(const char *, kdb_symtab_t *);
82:	int kdbnearsym(unsigned long, kdb_symtab_t *);
161:	void kdbnearsym_cleanup(void);
722:	static int get_dap_lock(void);
377:	static int kdb_getphys(void *, unsigned long, size_t);

File kernel/delayacct.c:
94:	int __delayacct_add_tsk(struct taskstats *, struct task_struct *);
77:	void __delayacct_blkio_end(struct task_struct *);
68:	void __delayacct_blkio_start(void);
146:	__u64 __delayacct_blkio_ticks(struct task_struct *);
163:	void __delayacct_freepages_end(void);
158:	void __delayacct_freepages_start(void);
43:	void __delayacct_tsk_init(struct task_struct *);
37:	void delayacct_init(void);
54:	static void delayacct_end(raw_spinlock_t *, u64 *, u64 *, u32 *);
30:	static int delayacct_setup_disable(char *);

File kernel/dma.c:
88:	void free_dma(unsigned int);
70:	int request_dma(unsigned int, const char *);
138:	static int proc_dma_init(void);
118:	static int proc_dma_show(struct seq_file *, void *);

File kernel/dma/direct.c:
61:	void *dma_direct_alloc(struct device *, size_t, dma_addr_t *, gfp_t, unsigned long);
127:	void dma_direct_free(struct device *, size_t, void *, dma_addr_t, unsigned long);
139:	dma_addr_t dma_direct_map_page(struct device *, struct page *, unsigned long, size_t, enum dma_data_direction, unsigned long);
150:	int dma_direct_map_sg(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long);
201:	int dma_direct_mapping_error(struct device *, dma_addr_t);
168:	int dma_direct_supported(struct device *, u64);
33:	static bool check_addr(struct device *, dma_addr_t, size_t, const char *);

File kernel/dma/mapping.c:
291:	void *dma_common_contiguous_remap(struct page *, size_t, unsigned long, pgprot_t, const void *);
318:	void dma_common_free_remap(void *, size_t, unsigned long);
204:	int dma_common_get_sgtable(struct device *, struct sg_table *, void *, dma_addr_t, size_t);
222:	int dma_common_mmap(struct device *, struct vm_area_struct *, void *, dma_addr_t, size_t);
271:	void *dma_common_pages_remap(struct page **, size_t, unsigned long, pgprot_t, const void *);
335:	int dma_configure(struct device *);
342:	void dma_deconfigure(struct device *);
119:	void *dmam_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, unsigned long);
60:	void *dmam_alloc_coherent(struct device *, size_t, dma_addr_t *, gfp_t);
95:	void dmam_free_coherent(struct device *, size_t, void *, dma_addr_t);
248:	static struct vm_struct *__dma_common_pages_remap(struct page **, size_t, unsigned long, pgprot_t, const void *);
35:	static int dmam_match(struct device *, void *, void *);
27:	static void dmam_release(struct device *, void *);

File kernel/dma/swiotlb.c:
432:	int is_swiotlb_buffer(phys_addr_t);
1012:	void *swiotlb_alloc(struct device *, size_t, dma_addr_t *, gfp_t, unsigned long);
995:	int swiotlb_dma_mapping_error(struct device *, dma_addr_t);
1007:	int swiotlb_dma_supported(struct device *, u64);
404:	void swiotlb_exit(void);
1034:	void swiotlb_free(struct device *, size_t, void *, dma_addr_t, unsigned long);
255:	void swiotlb_init(int);
204:	int swiotlb_init_with_tbl(char *, unsigned long, int);
286:	int swiotlb_late_init_with_default_size(size_t);
330:	int swiotlb_late_init_with_tbl(char *, unsigned long);
771:	dma_addr_t swiotlb_map_page(struct device *, struct page *, unsigned long, size_t, enum dma_data_direction, unsigned long);
908:	int swiotlb_map_sg_attrs(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long);
137:	unsigned int swiotlb_max_segment(void);
131:	unsigned long swiotlb_nr_tbl(void);
164:	void swiotlb_print_info(void);
143:	void swiotlb_set_max_segment(unsigned int);
153:	unsigned long swiotlb_size_or_default(void);
981:	void swiotlb_sync_sg_for_cpu(struct device *, struct scatterlist *, int, enum dma_data_direction);
988:	void swiotlb_sync_sg_for_device(struct device *, struct scatterlist *, int, enum dma_data_direction);
878:	void swiotlb_sync_single_for_cpu(struct device *, dma_addr_t, size_t, enum dma_data_direction);
885:	void swiotlb_sync_single_for_device(struct device *, dma_addr_t, size_t, enum dma_data_direction);
477:	phys_addr_t swiotlb_tbl_map_single(struct device *, dma_addr_t, phys_addr_t, size_t, enum dma_data_direction, unsigned long);
661:	void swiotlb_tbl_sync_single(struct device *, phys_addr_t, size_t, enum dma_data_direction, enum dma_sync_target);
616:	void swiotlb_tbl_unmap_single(struct device *, phys_addr_t, size_t, enum dma_data_direction, unsigned long);
840:	void swiotlb_unmap_page(struct device *, dma_addr_t, size_t, enum dma_data_direction, unsigned long);
946:	void swiotlb_unmap_sg_attrs(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long);
185:	void swiotlb_update_mem_attributes(void);
597:	static phys_addr_t map_single(struct device *, phys_addr_t, size_t, enum dma_data_direction, unsigned long);
110:	static int setup_io_tlb_npages(char *);
440:	static void swiotlb_bounce(phys_addr_t, phys_addr_t, size_t, enum dma_data_direction);
858:	static void swiotlb_sync_single(struct device *, dma_addr_t, size_t, enum dma_data_direction, enum dma_sync_target);
815:	static void unmap_single(struct device *, dma_addr_t, size_t, enum dma_data_direction, unsigned long);

File kernel/dma/virt.c:
10:	static void *dma_virt_alloc(struct device *, size_t, dma_addr_t *, gfp_t, unsigned long);
22:	static void dma_virt_free(struct device *, size_t, void *, dma_addr_t, unsigned long);
29:	static dma_addr_t dma_virt_map_page(struct device *, struct page *, unsigned long, size_t, enum dma_data_direction, unsigned long);
37:	static int dma_virt_map_sg(struct device *, struct scatterlist *, int, enum dma_data_direction, unsigned long);

File kernel/elfcore.c:
23:	size_t elf_core_extra_data_size(void);
8:	Elf64_Half elf_core_extra_phdrs(void);
18:	int elf_core_write_extra_data(struct coredump_params *);
13:	int elf_core_write_extra_phdrs(struct coredump_params *, loff_t);

File kernel/events/callchain.c:
109:	int get_callchain_buffers(int);
179:	struct perf_callchain_entry *get_perf_callchain(struct pt_regs *, u32, bool, bool, u32, bool, bool);
44:	void perf_callchain_user(struct perf_callchain_entry_ctx *, struct pt_regs *);
239:	int perf_event_max_stack_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
145:	void put_callchain_buffers(void);
49:	static void release_callchain_buffers_rcu(struct callback_head *);

File kernel/events/core.c:
8174:	void ___perf_sw_event(u32, u64, struct pt_regs *, u64);
10625:	long __ia32_sys_perf_event_open(const struct pt_regs *);
3514:	void __perf_event_task_sched_in(struct task_struct *, struct task_struct *);
3272:	void __perf_event_task_sched_out(struct task_struct *, struct task_struct *);
8185:	void __perf_sw_event(u32, u64, struct pt_regs *, u64);
10625:	long __x64_sys_perf_event_open(const struct pt_regs *);
5312:	void arch_perf_update_userpage(struct perf_event *, struct perf_event_mmap_page *, u64);
8834:	void perf_bp_event(struct perf_event *, void *);
6489:	struct perf_callchain_entry *perf_callchain(struct perf_event *, struct pt_regs *);
466:	int perf_cpu_time_max_percent_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
6182:	void perf_event__output_id_sample(struct perf_event *, struct perf_output_handle *, struct perf_sample_data *);
7896:	int perf_event_account_interrupt(struct perf_event *);
2884:	void perf_event_addr_filters_sync(struct perf_event *);
11485:	const struct perf_event_attr *perf_event_attrs(struct perf_event *);
7622:	void perf_event_aux_event(struct perf_event *, unsigned long, unsigned long, u64);
7120:	void perf_event_comm(struct task_struct *, bool);
11063:	struct perf_event *perf_event_create_kernel_counter(struct perf_event_attr *, int, struct task_struct *, perf_overflow_handler_t, void *);
11453:	void perf_event_delayed_put(struct task_struct *);
2240:	void perf_event_disable(struct perf_event *);
2250:	void perf_event_disable_inatomic(struct perf_event *);
2231:	void perf_event_disable_local(struct perf_event *);
2784:	void perf_event_enable(struct perf_event *);
6834:	void perf_event_exec(void);
11913:	int perf_event_exit_cpu(unsigned int);
11346:	void perf_event_exit_task(struct task_struct *);
7040:	void perf_event_fork(struct task_struct *);
11405:	void perf_event_free_task(struct task_struct *);
11461:	struct file *perf_event_get(unsigned int);
6150:	void perf_event_header__init_id(struct perf_event_header *, struct perf_sample_data *, struct perf_event *);
11939:	void perf_event_init(void);
11890:	int perf_event_init_cpu(unsigned int);
11795:	int perf_event_init_task(struct task_struct *);
7819:	void perf_event_itrace_started(struct perf_event *);
7587:	void perf_event_mmap(struct vm_area_struct *);
7217:	void perf_event_namespaces(struct task_struct *);
6673:	void perf_event_output(struct perf_event *, struct perf_sample_data *, struct pt_regs *);
6665:	void perf_event_output_backward(struct perf_event *, struct perf_sample_data *, struct pt_regs *);
6657:	void perf_event_output_forward(struct perf_event *, struct perf_sample_data *, struct pt_regs *);
7944:	int perf_event_overflow(struct perf_event *, struct perf_sample_data *, struct pt_regs *);
574:	void perf_event_print_debug(void);
3971:	int perf_event_read_local(struct perf_event *, u64 *, u64 *, u64 *);
4769:	u64 perf_event_read_value(struct perf_event *, u64 *, u64 *);
2917:	int perf_event_refresh(struct perf_event *, int);
4619:	int perf_event_release_kernel(struct perf_event *);
11965:	ssize_t perf_event_sysfs_show(struct device *, struct device_attribute *, char *);
5251:	int perf_event_task_disable(void);
5235:	int perf_event_task_enable(void);
3800:	void perf_event_task_tick(void);
5322:	void perf_event_update_userpage(struct perf_event *);
5893:	void perf_event_wakeup(struct perf_event *);
11477:	const struct perf_event *perf_get_event(struct file *);
7659:	void perf_log_lost_samples(struct perf_event *, u64);
6289:	void perf_output_sample(struct perf_output_handle *, struct perf_event_header *, struct perf_sample_data *, struct perf_event *);
1136:	void perf_pmu_disable(struct pmu *);
1143:	void perf_pmu_enable(struct pmu *);
11136:	void perf_pmu_migrate_context(struct pmu *, int, int);
576:	const char *perf_pmu_name(void);
9769:	int perf_pmu_register(struct pmu *, const char *, int);
9888:	void perf_pmu_unregister(struct pmu *);
6506:	void perf_prepare_sample(struct perf_event_header *, struct perf_sample_data *, struct perf_event *, struct pt_regs *);
441:	int perf_proc_update_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
5968:	int perf_register_guest_info_callbacks(struct perf_guest_info_callbacks *);
510:	void perf_sample_event_took(u64);
3200:	void perf_sched_cb_dec(struct pmu *);
3211:	void perf_sched_cb_inc(struct pmu *);
8159:	int perf_swevent_get_recursion_context(void);
11836:	void perf_swevent_init_cpu(unsigned int);
8167:	void perf_swevent_put_recursion_context(int);
7973:	u64 perf_swevent_set_period(struct perf_event *);
8445:	void perf_tp_event(u16, u64, void *, int, struct pt_regs *, struct hlist_head *, int, struct task_struct *);
8428:	void perf_trace_run_bpf_submit(void *, int, int, struct trace_event_call *, u64, struct pt_regs *, struct hlist_head *, struct task_struct *);
5975:	int perf_unregister_guest_info_callbacks(struct perf_guest_info_callbacks *);
9695:	int pmu_attr_update_register_notifier(struct notifier_block *);
9702:	int pmu_attr_update_unregister_notifier(struct notifier_block *);
5480:	struct ring_buffer *ring_buffer_get(struct perf_event *);
5495:	void ring_buffer_put(struct ring_buffer *);
10625:	static long __do_sys_perf_event_open(struct perf_event_attr *, pid_t, int, int, unsigned long);
7530:	static void __perf_addr_filters_adjust(struct perf_event *, void *);
12033:	static int __perf_cgroup_move(void *);
6158:	static void __perf_event__output_id_sample(struct perf_output_handle *, struct perf_sample_data *);
7861:	static int __perf_event_account_interrupt(struct perf_event *, int);
2182:	static void __perf_event_disable(struct perf_event *, struct perf_cpu_context *, struct perf_event_context *, void *);
2697:	static void __perf_event_enable(struct perf_event *, struct perf_cpu_context *, struct perf_event_context *, void *);
11852:	static void __perf_event_exit_context(void *);
6120:	static void __perf_event_header__init_id(struct perf_event_header *, struct perf_sample_data *, struct perf_event *);
1732:	static void __perf_event_header_size(u64, struct perf_event *, struct perf_event *);
6858:	static void __perf_event_output_stop(struct perf_event *, void *);
7905:	static int __perf_event_overflow(struct perf_event *, int, struct perf_sample_data *, struct pt_regs *);
5017:	static void __perf_event_period(struct perf_event *, struct perf_cpu_context *, struct perf_event_context *, void *);
3901:	static void __perf_event_read(void *);
4740:	static u64 __perf_event_read_value(struct perf_event *, u64 *, u64 *);
2799:	static int __perf_event_stop(void *);
2538:	static int __perf_install_in_context(void *);
6887:	static int __perf_pmu_output_stop(void *);
4782:	static int __perf_read_group_add(struct perf_event *, u64, u64 *);
2094:	static void __perf_remove_from_context(struct perf_event *, struct perf_cpu_context *, struct perf_event_context *, void *);
4486:	static void _free_event(struct perf_event *);
2217:	static void _perf_event_disable(struct perf_event *);
2747:	static void _perf_event_enable(struct perf_event *);
2900:	static int _perf_event_refresh(struct perf_event *, int);
4975:	static void _perf_event_reset(struct perf_event *);
5106:	static long _perf_ioctl(struct perf_event *, unsigned int, unsigned long);
10034:	static void account_event_cpu(int, struct perf_event *);
4131:	static struct perf_event_context *alloc_perf_context(struct pmu *, struct task_struct *);
8667:	static void bpf_overflow_handler(struct perf_event *, struct perf_sample_data *, struct pt_regs *);
5278:	static void calc_timer_values(struct perf_event *, u64 *, u64 *, u64 *);
9382:	static int cpu_clock_event_add(struct perf_event *, int);
9391:	static void cpu_clock_event_del(struct perf_event *, int);
9401:	static int cpu_clock_event_init(struct perf_event *);
9396:	static void cpu_clock_event_read(struct perf_event *);
9370:	static void cpu_clock_event_start(struct perf_event *, int);
9376:	static void cpu_clock_event_stop(struct perf_event *, int);
2496:	static void ctx_resched(struct perf_cpu_context *, struct perf_event_context *, enum event_type_t);
3417:	static void ctx_sched_in(struct perf_event_context *, struct perf_cpu_context *, enum event_type_t, struct task_struct *);
2960:	static void ctx_sched_out(struct perf_event_context *, struct perf_cpu_context *, enum event_type_t);
209:	static int event_function(void *);
255:	static void event_function_call(struct perf_event *, event_f, void *);
308:	static void event_function_local(struct perf_event *, void *, event_f);
2297:	static int event_sched_in(struct perf_event *, struct perf_event_context *, struct perf_cpu_context *, struct perf_cpu_context *);
2017:	static void event_sched_out(struct perf_event *, struct perf_event_context *, struct perf_cpu_context *, struct perf_cpu_context *);
4440:	static void exclusive_event_destroy(struct perf_event *, struct perf_event *);
4464:	static bool exclusive_event_installable(struct perf_event *, struct perf_event_context *);
4173:	static struct perf_event_context *find_get_context(struct pmu *, struct task_struct *, struct perf_event *, struct perf_event *);
3366:	static int flexible_sched_in(struct perf_event *, void *);
1183:	static void free_ctx(struct callback_head *);
4543:	static void free_event(struct perf_event *);
4273:	static void free_event_rcu(struct callback_head *);
8865:	static void free_filters_list(struct list_head *);
1178:	static void get_ctx(struct perf_event_context *);
2357:	static int group_sched_in(struct perf_event *, struct perf_cpu_context *, struct perf_event_context *);
2060:	static void group_sched_out(struct perf_event *, struct perf_cpu_context *, struct perf_event_context *);
11502:	static struct perf_event *inherit_event(struct perf_event *, struct task_struct *, struct perf_event *, struct perf_event_context *, struct perf_event_context *, struct task_struct *);
11657:	static int inherit_task_group(struct perf_event *, struct task_struct *, int, int *, struct perf_event_context *, struct task_struct *);
1670:	static void list_add_event(struct perf_event *, struct perf_event_context *);
1858:	static void list_del_event(struct perf_event *, struct perf_event_context *);
9609:	static ssize_t nr_addr_filters_show(struct device *, struct device_attribute *, char *);
7508:	static bool perf_addr_filter_vma_adjust(struct perf_addr_filter *, struct vm_area_struct *, struct perf_addr_filter_range *);
8879:	static void perf_addr_filters_splice(struct perf_event *, struct list_head *);
3621:	static void perf_adjust_period(struct perf_event *, u64, u64, bool);
12042:	static void perf_cgroup_attach(struct cgroup_taskset *);
12008:	static struct cgroup_subsys_state *perf_cgroup_css_alloc(struct cgroup_subsys_state *);
12025:	static void perf_cgroup_css_free(struct cgroup_subsys_state *);
799:	static void perf_cgroup_switch(struct task_struct *, int);
5214:	static long perf_compat_ioctl(struct file *, unsigned int, unsigned long);
10337:	static int perf_copy_attr(struct perf_event_attr *, struct perf_event_attr *);
166:	static void perf_ctx_unlock(struct perf_cpu_context *, struct perf_event_context *);
499:	static void perf_duration_warn(struct irq_work *);
1768:	static void perf_event__header_size(struct perf_event *);
1775:	static void perf_event__id_header_size(struct perf_event *, struct perf_event *);
8927:	static void perf_event_addr_filters_apply(struct perf_event *);
6805:	static void perf_event_addr_filters_exec(struct perf_event *, void *);
10129:	static struct perf_event *perf_event_alloc(struct perf_event_attr *, int, struct task_struct *, struct perf_event *, struct perf_event *, perf_overflow_handler_t, void *, int);
7068:	static void perf_event_comm_output(struct perf_event *, void *);
1270:	static struct perf_event_context *perf_event_ctx_lock_nested(struct perf_event *, int);
11865:	static void perf_event_exit_cpu_context(int);
4988:	static void perf_event_for_each_child(struct perf_event *, void (*)(struct perf_event *));
1594:	static void perf_event_groups_delete(struct perf_event_groups *, struct perf_event *);
1552:	static void perf_event_groups_insert(struct perf_event_groups *, struct perf_event *);
7311:	static void perf_event_mmap_output(struct perf_event *, void *);
9631:	static ssize_t perf_event_mux_interval_ms_show(struct device *, struct device_attribute *, char *);
9643:	static ssize_t perf_event_mux_interval_ms_store(struct device *, struct device_attribute *, const char *, size_t);
7167:	static void perf_event_namespaces_output(struct perf_event *, void *);
9527:	static int perf_event_nop_int(struct perf_event *, u64);
9034:	static int perf_event_parse_addr_filter(struct perf_event *, char *, struct list_head *);
1325:	static u32 perf_event_pid_type(struct perf_event *, struct task_struct *, enum pid_type);
4037:	static int perf_event_read(struct perf_event *, bool);
6692:	static void perf_event_read_event(struct perf_event *, struct task_struct *);
2469:	static void perf_event_sched_in(struct perf_cpu_context *, struct perf_event_context *, struct task_struct *);
10473:	static int perf_event_set_output(struct perf_event *, struct perf_event *);
657:	static void perf_event_set_state(struct perf_event *, enum perf_event_state);
2835:	static int perf_event_stop(struct perf_event *, int);
7709:	static void perf_event_switch_output(struct perf_event *, void *);
11978:	static int perf_event_sysfs_init(void);
7007:	static void perf_event_task(struct task_struct *, struct perf_event_context *, int);
6964:	static void perf_event_task_output(struct perf_event *, void *);
648:	static void perf_event_update_sibling_time(struct perf_event *);
639:	static void perf_event_update_time(struct perf_event *);
8051:	static int perf_exclude_event(struct perf_event *, struct pt_regs *);
5851:	static int perf_fasync(int, struct file *, int);
7200:	static void perf_fill_ns_link_info(struct perf_ns_link_info *, struct task_struct *, const struct proc_ns_operations *);
1823:	static void perf_group_attach(struct perf_event *);
1915:	static void perf_group_detach(struct perf_event *);
2606:	static void perf_install_in_context(struct perf_event_context *, struct perf_event *, int);
5200:	static long perf_ioctl(struct file *, unsigned int, unsigned long);
6723:	static void perf_iterate_ctx(struct perf_event_context *, perf_iterate_f *, void *, bool);
6770:	static void perf_iterate_sb(perf_iterate_f *, void *, struct perf_event_context *);
8581:	static int perf_kprobe_event_init(struct perf_event *);
1373:	static struct perf_event_context *perf_lock_task_context(struct task_struct *, int, unsigned long *);
7824:	static void perf_log_itrace_start(struct perf_event *);
7782:	static void perf_log_throttle(struct perf_event *, int);
5646:	static int perf_mmap(struct file *, struct vm_area_struct *);
5529:	static void perf_mmap_close(struct vm_area_struct *);
5373:	static vm_fault_t perf_mmap_fault(struct vm_fault *);
5505:	static void perf_mmap_open(struct vm_area_struct *);
1070:	static enum hrtimer_restart perf_mux_hrtimer_handler(struct hrtimer *);
1115:	static int perf_mux_hrtimer_restart(struct perf_cpu_context *);
6265:	static void perf_output_read(struct perf_output_handle *, struct perf_event *);
5983:	static void perf_output_sample_regs(struct perf_output_handle *, struct pt_regs *, u64);
5939:	static void perf_pending_event(struct irq_work *);
1429:	static struct perf_event_context *perf_pin_task_context(struct task_struct *, int);
9557:	static void perf_pmu_cancel_txn(struct pmu *);
9544:	static int perf_pmu_commit_txn(struct pmu *);
9522:	static int perf_pmu_nop_int(struct pmu *);
9518:	static void perf_pmu_nop_txn(struct pmu *, unsigned int);
3229:	static void perf_pmu_sched_task(struct task_struct *, struct task_struct *, bool);
9534:	static void perf_pmu_start_txn(struct pmu *, unsigned int);
4952:	static __poll_t perf_poll(struct file *, poll_table *);
4939:	static ssize_t perf_read(struct file *, char *, size_t, loff_t *);
11920:	static int perf_reboot(struct notifier_block *, unsigned long, void *);
4734:	static int perf_release(struct inode *, struct file *);
2130:	static void perf_remove_from_context(struct perf_event *, unsigned long);
4389:	static void perf_sched_delayed(struct work_struct *);
8205:	static int perf_swevent_add(struct perf_event *, int);
9319:	static void perf_swevent_cancel_hrtimer(struct perf_event *);
8228:	static void perf_swevent_del(struct perf_event *, int);
8022:	static void perf_swevent_event(struct perf_event *, u64, struct perf_sample_data *, struct pt_regs *);
9268:	static enum hrtimer_restart perf_swevent_hrtimer(struct hrtimer *);
8342:	static int perf_swevent_init(struct perf_event *);
9331:	static void perf_swevent_init_hrtimer(struct perf_event *);
7996:	static void perf_swevent_overflow(struct perf_event *, u64, struct perf_sample_data *, struct pt_regs *);
8201:	static void perf_swevent_read(struct perf_event *);
8233:	static void perf_swevent_start(struct perf_event *, int);
9298:	static void perf_swevent_start_hrtimer(struct perf_event *);
8238:	static void perf_swevent_stop(struct perf_event *, int);
8505:	static int perf_tp_event_init(struct perf_event *);
8410:	static int perf_tp_event_match(struct perf_event *, struct perf_sample_data *, struct pt_regs *);
9920:	static int perf_try_init_event(struct pmu *, struct perf_event *);
1442:	static void perf_unpin_context(struct perf_event_context *);
8622:	static int perf_uprobe_event_init(struct perf_event *);
3341:	static int pinned_sched_in(struct perf_event *, void *);
9723:	static int pmu_dev_alloc(struct pmu *);
9718:	static void pmu_dev_release(struct device *);
1192:	static void put_ctx(struct perf_event_context *);
4606:	static void put_event(struct perf_event *);
67:	static void remote_function(void *);
8550:	static ssize_t retprobe_show(struct device *, struct device_attribute *, char *);
5408:	static void ring_buffer_attach(struct perf_event *, struct ring_buffer *);
8332:	static void sw_perf_event_destroy(struct perf_event *);
8262:	static void swevent_hlist_put_cpu(int);
9459:	static int task_clock_event_add(struct perf_event *, int);
9468:	static void task_clock_event_del(struct perf_event *, int);
9482:	static int task_clock_event_init(struct perf_event *);
9473:	static void task_clock_event_read(struct perf_event *);
9447:	static void task_clock_event_start(struct perf_event *, int);
9453:	static void task_clock_event_stop(struct perf_event *, int);
2456:	static void task_ctx_sched_out(struct perf_cpu_context *, struct perf_event_context *, enum event_type_t);
104:	static int task_function_call(struct task_struct *, remote_function_f, void *);
8500:	static void tp_perf_event_destroy(struct perf_event *);
9622:	static ssize_t type_show(struct device *, struct device_attribute *, char *);
4320:	static void unaccount_event_cpu(int, struct perf_event *);
3304:	static int visit_groups_merge(struct perf_event_groups *, int, int (*)(struct perf_event *, void *), void *);

File kernel/events/hw_breakpoint.c:
232:	void arch_unregister_hw_breakpoint(struct perf_event *);
393:	int dbg_release_bp_slot(struct perf_event *);
385:	int dbg_reserve_bp_slot(struct perf_event *);
84:	int hw_breakpoint_weight(struct perf_event *);
674:	int init_hw_breakpoint(void);
510:	int modify_user_hw_breakpoint(struct perf_event *, struct perf_event_attr *);
474:	int modify_user_hw_breakpoint_check(struct perf_event *, struct perf_event_attr *, bool);
427:	int register_perf_hw_breakpoint(struct perf_event *);
454:	struct perf_event *register_user_hw_breakpoint(struct perf_event_attr *, perf_overflow_handler_t, void *, struct task_struct *);
554:	struct perf_event **register_wide_hw_breakpoint(struct perf_event_attr *, perf_overflow_handler_t, void *);
338:	void release_bp_slot(struct perf_event *);
315:	int reserve_bp_slot(struct perf_event *);
538:	void unregister_hw_breakpoint(struct perf_event *);
591:	void unregister_wide_hw_breakpoint(struct perf_event **);
328:	static void __release_bp_slot(struct perf_event *, u64);
281:	static int __reserve_bp_slot(struct perf_event *, u64);
608:	static void bp_perf_event_destroy(struct perf_event *);
635:	static int hw_breakpoint_add(struct perf_event *, int);
648:	static void hw_breakpoint_del(struct perf_event *, int);
613:	static int hw_breakpoint_event_init(struct perf_event *);
403:	static int hw_breakpoint_parse(struct perf_event *, const struct perf_event_attr *, struct arch_hw_breakpoint *);
653:	static void hw_breakpoint_start(struct perf_event *, int);
658:	static void hw_breakpoint_stop(struct perf_event *, int);
118:	static int task_bp_pinned(int, struct perf_event *, enum bp_type_idx);
204:	static void toggle_bp_slot(struct perf_event *, bool, int, enum bp_type_idx);

File kernel/events/internal.h:
61:	static void rb_free_rcu(struct callback_head *);

File kernel/events/ring_buffer.c:
353:	void *perf_aux_output_begin(struct perf_output_handle *, struct perf_event *);
465:	void perf_aux_output_end(struct perf_output_handle *, unsigned long);
326:	void perf_aux_output_flag(struct perf_output_handle *, u64);
516:	int perf_aux_output_skip(struct perf_output_handle *, unsigned long);
538:	void *perf_get_aux(struct perf_output_handle *);
891:	struct page *perf_mmap_to_page(struct ring_buffer *, unsigned long);
271:	int perf_output_begin(struct perf_output_handle *, struct perf_event *, unsigned int);
265:	int perf_output_begin_backward(struct perf_output_handle *, struct perf_event *, unsigned int);
259:	int perf_output_begin_forward(struct perf_output_handle *, struct perf_event *, unsigned int);
279:	unsigned int perf_output_copy(struct perf_output_handle *, const void *, unsigned int);
291:	void perf_output_end(struct perf_output_handle *);
285:	unsigned int perf_output_skip(struct perf_output_handle *, unsigned int);
742:	struct ring_buffer *rb_alloc(int, long, int, int);
612:	int rb_alloc_aux(struct ring_buffer *, struct perf_event *, unsigned long, int, long, int);
795:	void rb_free(struct ring_buffer *);
705:	void rb_free_aux(struct ring_buffer *);
585:	static void __rb_free_aux(struct ring_buffer *);
729:	static void *perf_mmap_alloc_page(int);
787:	static void perf_mmap_free_page(unsigned long);
46:	static void perf_output_put_handle(struct perf_output_handle *);

File kernel/events/uprobes.c:
1364:	void arch_uprobe_copy_ixol(struct page *, unsigned long, void *, unsigned long);
1865:	bool arch_uprobe_ignore(struct arch_uprobe *, struct pt_regs *);
1870:	bool arch_uretprobe_is_alive(struct return_instance *, enum rp_check, struct pt_regs *);
224:	bool is_swbp_insn(uprobe_opcode_t *);
238:	bool is_trap_insn(uprobe_opcode_t *);
367:	int set_orig_insn(struct arch_uprobe *, struct mm_struct *, unsigned long);
352:	int set_swbp(struct arch_uprobe *, struct mm_struct *, unsigned long);
952:	int uprobe_apply(struct inode *, loff_t, struct uprobe_consumer *, bool);
1245:	void uprobe_clear_state(struct mm_struct *);
1494:	void uprobe_copy_process(struct task_struct *, unsigned long);
1661:	bool uprobe_deny_signal(void);
1267:	void uprobe_dup_mmap(struct mm_struct *, struct mm_struct *);
1262:	void uprobe_end_dup_mmap(void);
1412:	void uprobe_free_utask(struct task_struct *);
1385:	unsigned long uprobe_get_swbp_addr(struct pt_regs *);
1390:	unsigned long uprobe_get_trap_addr(struct pt_regs *);
1069:	int uprobe_mmap(struct vm_area_struct *);
1124:	void uprobe_munmap(struct vm_area_struct *, unsigned long, unsigned long);
1992:	void uprobe_notify_resume(struct pt_regs *);
2026:	int uprobe_post_sstep_notifier(struct pt_regs *);
2009:	int uprobe_pre_sstep_notifier(struct pt_regs *);
938:	int uprobe_register(struct inode *, loff_t, struct uprobe_consumer *);
1257:	void uprobe_start_dup_mmap(void);
864:	void uprobe_unregister(struct inode *, loff_t, struct uprobe_consumer *);
302:	int uprobe_write_opcode(struct arch_uprobe *, struct mm_struct *, unsigned long, uprobe_opcode_t);
1181:	static struct xol_area *__create_xol_area(unsigned long);
402:	static struct uprobe *__find_uprobe(struct inode *, loff_t);
845:	static void __uprobe_unregister(struct uprobe *, struct uprobe_consumer *);
243:	static void copy_from_page(struct page *, unsigned long, void *, int);
250:	static void copy_to_page(struct page *, unsigned long, const void *, int);
1481:	static void dup_xol_work(struct callback_head *);
634:	static bool filter_chain(struct uprobe *, enum uprobe_filter_ctx, struct mm_struct *);
427:	static struct uprobe *find_uprobe(struct inode *, loff_t);
1440:	static struct uprobe_task *get_utask(void);
2044:	static int init_uprobes(void);
652:	static int install_breakpoint(struct uprobe *, struct mm_struct *, unsigned long, struct vm_area_struct *);
379:	static void put_uprobe(struct uprobe *);
791:	static int register_for_each_vma(struct uprobe *, struct uprobe_consumer *);
1103:	static bool vma_has_uprobes(struct vm_area_struct *, unsigned long, unsigned long);
1330:	static void xol_free_insn_slot(struct task_struct *);

File kernel/exec_domain.c:
38:	long __ia32_sys_personality(const struct pt_regs *);
38:	long __x64_sys_personality(const struct pt_regs *);
24:	static int execdomains_proc_show(struct seq_file *, void *);
30:	static int proc_execdomains_init(void);

File kernel/exit.c:
1619:	long __ia32_compat_sys_wait4(const struct pt_regs *);
1634:	long __ia32_compat_sys_waitid(const struct pt_regs *);
863:	long __ia32_sys_exit(const struct pt_regs *);
905:	long __ia32_sys_exit_group(const struct pt_regs *);
1592:	long __ia32_sys_wait4(const struct pt_regs *);
1516:	long __ia32_sys_waitid(const struct pt_regs *);
1611:	long __ia32_sys_waitpid(const struct pt_regs *);
1410:	void __wake_up_parent(struct task_struct *, struct task_struct *);
863:	long __x64_sys_exit(const struct pt_regs *);
905:	long __x64_sys_exit_group(const struct pt_regs *);
1592:	long __x64_sys_wait4(const struct pt_regs *);
1516:	long __x64_sys_waitid(const struct pt_regs *);
1611:	long __x64_sys_waitpid(const struct pt_regs *);
1677:	void abort(void);
854:	void complete_and_exit(struct completion *, long);
702:	void do_exit(long);
873:	void do_group_exit(int);
279:	int is_current_pgrp_orphaned(void);
1549:	long kernel_wait4(pid_t, int *, int, struct rusage *);
337:	void mm_update_next_owner(struct mm_struct *);
175:	void put_task_struct_rcu_user(struct task_struct *);
227:	void rcuwait_wake_up(struct rcuwait *);
181:	void release_task(struct task_struct *);
1619:	static long __do_compat_sys_wait4(compat_pid_t, compat_uint_t *, int, struct compat_rusage *);
1634:	static long __do_compat_sys_waitid(int, compat_pid_t, struct compat_siginfo *, int, struct compat_rusage *);
1592:	static long __do_sys_wait4(pid_t, int *, int, struct rusage *);
1516:	static long __do_sys_waitid(int, pid_t, struct siginfo *, int, struct rusage *);
1394:	static int child_wait_callback(wait_queue_entry_t *, unsigned int, int, void *);
166:	static void delayed_put_task_struct(struct callback_head *);
1416:	static long do_wait(struct wait_opts *);
1470:	static long kernel_waitid(int, pid_t, struct waitid_info *, int, struct rusage *);
308:	static void kill_orphaned_pgrp(struct task_struct *, struct task_struct *);
1100:	static int *task_stopped_code(struct task_struct *, bool);
1254:	static int wait_consider_task(struct wait_opts *, int, struct task_struct *);
260:	static int will_become_orphaned_pgrp(struct pid *, struct task_struct *);

File kernel/extable.c:
105:	int __kernel_text_address(unsigned long);
97:	int core_kernel_data(unsigned long);
75:	int core_kernel_text(unsigned long);
169:	int func_ptr_is_kernel_text(void *);
67:	int init_kernel_text(unsigned long);
122:	int kernel_text_address(unsigned long);
56:	const struct exception_table_entry *search_exception_tables(unsigned long);
47:	void sort_main_extable(void);

File kernel/fork.c:
1519:	void __cleanup_sighand(struct sighand_struct *);
2407:	long __ia32_sys_clone(const struct pt_regs *);
1637:	long __ia32_sys_set_tid_address(const struct pt_regs *);
2695:	long __ia32_sys_unshare(const struct pt_regs *);
671:	void __mmdrop(struct mm_struct *);
721:	void __put_task_struct(struct task_struct *);
2407:	long __x64_sys_clone(const struct pt_regs *);
2370:	long __x64_sys_fork(const struct pt_regs *);
1637:	long __x64_sys_set_tid_address(const struct pt_regs *);
2695:	long __x64_sys_unshare(const struct pt_regs *);
2382:	long __x64_sys_vfork(const struct pt_regs *);
2275:	long _do_fork(unsigned long, unsigned long, unsigned long, int *, int *, unsigned long);
826:	int arch_dup_task_struct(struct task_struct *, struct task_struct *);
149:	void arch_release_task_struct(struct task_struct *);
741:	void arch_task_cache_init(void);
1333:	void exec_mm_release(struct task_struct *, struct mm_struct *);
1327:	void exit_mm_release(struct task_struct *, struct mm_struct *);
2256:	struct task_struct *fork_idle(int);
786:	void fork_init(void);
441:	void free_task(struct task_struct *);
1152:	struct file *get_mm_exe_file(struct mm_struct *);
1172:	struct file *get_task_exe_file(struct task_struct *);
1197:	struct mm_struct *get_task_mm(struct task_struct *);
2363:	pid_t kernel_thread(int (*)(void *), void *, unsigned long);
2579:	int ksys_unshare(unsigned long);
1227:	struct mm_struct *mm_access(struct task_struct *, unsigned int);
1047:	struct mm_struct *mm_alloc(void);
1086:	void mmput(struct mm_struct *);
1107:	void mmput_async(struct mm_struct *);
138:	int nr_processes(void);
2461:	void proc_caches_init(void);
434:	void put_task_stack(struct task_struct *);
1128:	void set_mm_exe_file(struct mm_struct *, struct file *);
833:	void set_task_stack_end_magic(struct task_struct *);
2724:	int sysctl_max_threads(struct ctl_table *, int, void *, size_t *, loff_t *);
2706:	int unshare_files(struct files_struct **);
333:	struct vm_area_struct *vm_area_alloc(struct mm_struct *);
343:	struct vm_area_struct *vm_area_dup(struct vm_area_struct *);
354:	void vm_area_free(struct vm_area_struct *);
2417:	void walk_process_tree(struct task_struct *, proc_visitor, void *);
1705:	static void __delayed_free_task(struct callback_head *);
359:	static void account_kernel_stack(struct task_struct *, int);
1749:	static struct task_struct *copy_process(unsigned long, unsigned long, unsigned long, int *, struct pid *, int, unsigned long, int);
943:	static int coredump_filter_setup(char *);
183:	static int free_vm_stack_cache(unsigned int);
986:	static struct mm_struct *mm_init(struct mm_struct *, struct task_struct *, struct user_namespace *);
1293:	static void mm_release(struct task_struct *, struct mm_struct *);
686:	static void mmdrop_async_fn(struct work_struct *);
1099:	static void mmput_async_fn(struct work_struct *);
2453:	static void sighand_ctor(void *);
2556:	static int unshare_fd(unsigned long, struct files_struct **);

File kernel/freezer.c:
61:	bool __refrigerator(bool);
151:	void __thaw_task(struct task_struct *);
120:	bool freeze_task(struct task_struct *);
42:	bool freezing_slow_path(struct task_struct *);
166:	bool set_freezable(void);

File kernel/futex.c:
4115:	long __ia32_compat_sys_futex(const struct pt_regs *);
4076:	long __ia32_compat_sys_get_robust_list(const struct pt_regs *);
4061:	long __ia32_compat_sys_set_robust_list(const struct pt_regs *);
3923:	long __ia32_sys_futex(const struct pt_regs *);
3516:	long __ia32_sys_get_robust_list(const struct pt_regs *);
3494:	long __ia32_sys_set_robust_list(const struct pt_regs *);
3923:	long __x64_sys_futex(const struct pt_regs *);
3516:	long __x64_sys_get_robust_list(const struct pt_regs *);
3494:	long __x64_sys_set_robust_list(const struct pt_regs *);
3864:	long do_futex(u32 *, int, u32, ktime_t *, u32 *, u32, u32);
3839:	void futex_exec_release(struct task_struct *);
3791:	void futex_exit_recursive(struct task_struct *);
3857:	void futex_exit_release(struct task_struct *);
1527:	static void __unqueue_futex(struct futex_q *);
1292:	static int attach_to_pi_owner(u32 *, u32, union futex_key *, struct futex_pi_state **, struct task_struct **);
1084:	static int attach_to_pi_state(u32 *, u32, struct futex_pi_state *, struct futex_pi_state **);
787:	static int cmpxchg_futex_value_locked(u32 *, u32 *, u32, u32);
469:	static void drop_futex_key_refs(union futex_key *, union futex_key *);
755:	static int fault_in_user_writeable(u32 *);
2657:	static int fixup_owner(u32 *, struct futex_q *, int);
2626:	static int fixup_pi_state_owner(u32 *, struct futex_q *, struct task_struct *);
3756:	static void futex_cleanup(struct task_struct *);
4165:	static int futex_init(void);
2907:	static int futex_lock_pi(u32 *, unsigned int, ktime_t *, int);
1443:	static int futex_lock_pi_atomic(u32 *, struct futex_hash_bucket *, union futex_key *, struct futex_pi_state **, struct task_struct *, struct task_struct **, int);
2013:	static int futex_requeue(u32 *, unsigned int, u32 *, int, int, u32 *, int);
775:	static struct futex_q *futex_top_waiter(struct futex_hash_bucket *, union futex_key *);
2808:	static int futex_wait(u32 *, unsigned int, u32, ktime_t *, u32);
2700:	static void futex_wait_queue_me(struct futex_hash_bucket *, struct futex_q *, struct hrtimer_sleeper *);
3316:	static int futex_wait_requeue_pi(u32 *, unsigned int, u32, ktime_t *, u32 *, u32);
2882:	static long futex_wait_restart(struct restart_block *);
2749:	static int futex_wait_setup(u32 *, u32, unsigned int, struct futex_q *, struct futex_hash_bucket **);
1670:	static int futex_wake(u32 *, unsigned int, int, u32);
1770:	static int futex_wake_op(u32 *, unsigned int, u32 *, int, int, int);
559:	static int get_futex_key(u32 *, int, union futex_key *, enum futex_access);
431:	static void get_futex_key_refs(union futex_key *, union futex_key *);
799:	static int get_futex_value_locked(u32 *, u32 *);
870:	static void get_pi_state(struct futex_pi_state *);
3563:	static int handle_futex_death(u32 *, struct task_struct *, bool, bool);
402:	static struct futex_hash_bucket *hash_futex(union futex_key *);
1546:	static void mark_wake_futex(struct wake_q_head *, struct futex_q *);
847:	static void pi_state_update_owner(struct futex_pi_state *, struct task_struct *);
879:	static void put_pi_state(struct futex_pi_state *);
814:	static int refill_pi_state_cache(void);
2442:	static void unqueue_me_pi(struct futex_q *);
1208:	static void wait_for_owner_exiting(int, struct task_struct *);

File kernel/groups.c:
153:	long __ia32_sys_getgroups(const struct pt_regs *);
190:	long __ia32_sys_setgroups(const struct pt_regs *);
153:	long __x64_sys_getgroups(const struct pt_regs *);
190:	long __x64_sys_setgroups(const struct pt_regs *);
15:	struct group_info *groups_alloc(int);
34:	void groups_free(struct group_info *);
97:	int groups_search(const struct group_info *, kgid_t);
89:	void groups_sort(struct group_info *);
231:	int in_egroup_p(kgid_t);
219:	int in_group_p(kgid_t);
177:	bool may_setgroups(void);
139:	int set_current_groups(struct group_info *);
123:	void set_groups(struct cred *, struct group_info *);
81:	static int gid_cmp(const void *, const void *);
42:	static int groups_to_user(gid_t *, const struct group_info *);

File kernel/hung_task.c:
235:	int proc_dohung_task_timeout_secs(struct ctl_table *, int, void *, size_t *, loff_t *);
254:	void reset_hung_task_detector(void);
313:	static int hung_task_init(void);
84:	static int hung_task_panic(struct notifier_block *, unsigned long, void *);
73:	static int hung_task_panic_setup(char *);
262:	static int hungtask_pm_notify(struct notifier_block *, unsigned long, void *);
285:	static int watchdog(void *);

File kernel/iomem.c:
139:	void *devm_memremap(struct device *, resource_size_t, size_t, unsigned long);
162:	void devm_memunmap(struct device *, void *);
71:	void *memremap(resource_size_t, size_t, unsigned long);
122:	void memunmap(void *);
134:	static int devm_memremap_match(struct device *, void *, void *);
129:	static void devm_memremap_release(struct device *, void *);

File kernel/irq/affinity.c:
256:	int irq_calc_affinity_vectors(int, int, const struct irq_affinity *);
176:	struct cpumask *irq_create_affinity_masks(int, const struct irq_affinity *);
97:	static int irq_build_affinity_masks(const struct irq_affinity *, int, int, cpumask_var_t *, const struct cpumask *, struct cpumask *, struct cpumask *);

File kernel/irq/autoprobe.c:
117:	unsigned int probe_irq_mask(unsigned long);
157:	int probe_irq_off(unsigned long);
30:	unsigned long probe_irq_on(void);

File kernel/irq/chip.c:
1055:	void __irq_set_handler(unsigned int, irq_flow_handler_t, int, const char *);
788:	void handle_edge_irq(struct irq_desc *);
702:	void handle_fasteoi_irq(struct irq_desc *);
753:	void handle_fasteoi_nmi(struct irq_desc *);
633:	void handle_level_irq(struct irq_desc *);
461:	void handle_nested_irq(unsigned int);
968:	void handle_percpu_devid_fasteoi_nmi(struct irq_desc *);
925:	void handle_percpu_devid_irq(struct irq_desc *);
895:	void handle_percpu_irq(struct irq_desc *);
541:	void handle_simple_irq(struct irq_desc *);
576:	void handle_untracked_irq(struct irq_desc *);
289:	int irq_activate(struct irq_desc *);
298:	int irq_activate_and_startup(struct irq_desc *, bool);
1335:	void irq_chip_ack_parent(struct irq_data *);
1472:	int irq_chip_compose_msi_msg(struct irq_data *, struct msi_msg *);
1321:	void irq_chip_disable_parent(struct irq_data *);
1306:	void irq_chip_enable_parent(struct irq_data *);
1368:	void irq_chip_eoi_parent(struct irq_data *);
1346:	void irq_chip_mask_parent(struct irq_data *);
1496:	int irq_chip_pm_get(struct irq_data *);
1519:	int irq_chip_pm_put(struct irq_data *);
1419:	int irq_chip_retrigger_hierarchy(struct irq_data *);
1383:	int irq_chip_set_affinity_parent(struct irq_data *, const struct cpumask *, bool);
1401:	int irq_chip_set_type_parent(struct irq_data *, unsigned int);
1433:	int irq_chip_set_vcpu_affinity_parent(struct irq_data *, void *);
1449:	int irq_chip_set_wake_parent(struct irq_data *, unsigned int);
1357:	void irq_chip_unmask_parent(struct irq_data *);
1170:	void irq_cpu_offline(void);
1140:	void irq_cpu_online(void);
386:	void irq_disable(struct irq_desc *);
335:	void irq_enable(struct irq_desc *);
158:	struct irq_data *irq_get_irq_data(unsigned int);
1095:	void irq_modify_status(unsigned int, unsigned long, unsigned long);
400:	void irq_percpu_disable(struct irq_desc *, unsigned int);
391:	void irq_percpu_enable(struct irq_desc *, unsigned int);
1070:	void irq_set_chained_handler_and_data(unsigned int, irq_flow_handler_t, void *);
41:	int irq_set_chip(unsigned int, struct irq_chip *);
1087:	void irq_set_chip_and_handler_name(unsigned int, struct irq_chip *, irq_flow_handler_t, const char *);
145:	int irq_set_chip_data(unsigned int, void *);
90:	int irq_set_handler_data(unsigned int, void *);
68:	int irq_set_irq_type(unsigned int, unsigned int);
133:	int irq_set_msi_desc(unsigned int, struct msi_desc *);
111:	int irq_set_msi_desc_off(unsigned int, unsigned int, struct msi_desc *);
307:	void irq_shutdown(struct irq_desc *);
323:	void irq_shutdown_and_deactivate(struct irq_desc *);
255:	int irq_startup(struct irq_desc *, bool, bool);
421:	void mask_irq(struct irq_desc *);
432:	void unmask_irq(struct irq_desc *);
443:	void unmask_threaded_irq(struct irq_desc *);
350:	static void __irq_disable(struct irq_desc *, bool);
985:	static void __irq_do_set_handler(struct irq_desc *, irq_flow_handler_t, int, const char *);
236:	static int __irq_startup(struct irq_desc *);
22:	static irqreturn_t bad_chained_irq(int, void *);
505:	static bool irq_may_run(struct irq_desc *);

File kernel/irq/cpuhotplug.c:
201:	int irq_affinity_online_cpu(unsigned int);
154:	void irq_migrate_all_off_this_cpu(void);

File kernel/irq/devres.c:
180:	int __devm_irq_alloc_descs(struct device *, int, unsigned int, unsigned int, int, struct module *, const struct cpumask *);
141:	void devm_free_irq(struct device *, unsigned int, void *);
101:	int devm_request_any_context_irq(struct device *, unsigned int, irq_handler_t, unsigned long, const char *, void *);
51:	int devm_request_threaded_irq(struct device *, unsigned int, irq_handler_t, irq_handler_t, unsigned long, const char *, void *);
156:	static void devm_irq_desc_release(struct device *, void *);
25:	static int devm_irq_match(struct device *, void *, void *);
18:	static void devm_irq_release(struct device *, void *);

File kernel/irq/dummychip.c:
18:	static void ack_bad(struct irq_data *);
29:	static void noop(struct irq_data *);
31:	static unsigned int noop_ret(struct irq_data *);

File kernel/irq/handle.c:
137:	irqreturn_t __handle_irq_event_percpu(struct irq_desc *, unsigned int *);
59:	void __irq_wake_thread(struct irq_desc *, struct irqaction *);
31:	void handle_bad_irq(struct irq_desc *);
198:	irqreturn_t handle_irq_event(struct irq_desc *);
184:	irqreturn_t handle_irq_event_percpu(struct irq_desc *);
44:	irqreturn_t no_action(int, void *);

File kernel/irq/irqdesc.c:
767:	int __irq_alloc_descs(int, unsigned int, unsigned int, int, struct module *, const struct cpumask *);
871:	struct irq_desc *__irq_get_desc_lock(unsigned int, unsigned long *, bool, unsigned int);
894:	void __irq_put_desc_unlock(struct irq_desc *, unsigned long, bool);
514:	int early_irq_init(void);
633:	int generic_handle_irq(unsigned int);
737:	void irq_free_descs(unsigned int, unsigned int);
865:	unsigned int irq_get_next_irq(unsigned int);
931:	int irq_get_percpu_devid_partition(unsigned int, struct cpumask *);
376:	void irq_lock_sparse(void);
926:	int irq_set_percpu_devid(unsigned int);
901:	int irq_set_percpu_devid_partition(unsigned int, const struct cpumask *);
350:	struct irq_desc *irq_to_desc(unsigned int);
381:	void irq_unlock_sparse(void);
945:	void kstat_incr_irq_this_cpu(unsigned int);
975:	unsigned int kstat_irqs(unsigned int);
959:	unsigned int kstat_irqs_cpu(unsigned int, int);
1001:	unsigned int kstat_irqs_usr(unsigned int);
245:	static ssize_t actions_show(struct kobject *, struct kobj_attribute *, char *);
386:	static struct irq_desc *alloc_desc(int, int, unsigned int, const struct cpumask *, struct module *);
166:	static ssize_t chip_name_show(struct kobject *, struct kobj_attribute *, char *);
430:	static void delayed_free_desc(struct callback_head *);
437:	static void free_desc(unsigned int);
183:	static ssize_t hwirq_show(struct kobject *, struct kobj_attribute *, char *);
28:	static int irq_affinity_setup(char *);
421:	static void irq_kobj_release(struct kobject *);
285:	static void irq_sysfs_add(int, struct irq_desc *);
309:	static int irq_sysfs_init(void);
230:	static ssize_t name_show(struct kobject *, struct kobj_attribute *, char *);
146:	static ssize_t per_cpu_count_show(struct kobject *, struct kobj_attribute *, char *);
198:	static ssize_t type_show(struct kobject *, struct kobj_attribute *, char *);
214:	static ssize_t wakeup_show(struct kobject *, struct kobj_attribute *, char *);

File kernel/irq/irqdomain.c:
129:	struct irq_domain *__irq_domain_add(struct fwnode_handle *, int, irq_hw_number_t, int, const struct irq_domain_ops *, void *);
64:	struct fwnode_handle *__irq_domain_alloc_fwnode(unsigned int, int, const char *, void *);
1295:	int __irq_domain_alloc_irqs(struct irq_domain *, int, unsigned int, int, void *, bool, const struct cpumask *);
594:	unsigned int irq_create_direct_mapping(struct irq_domain *);
745:	unsigned int irq_create_fwspec_mapping(struct irq_fwspec *);
635:	unsigned int irq_create_mapping(struct irq_domain *, irq_hw_number_t);
836:	unsigned int irq_create_of_mapping(struct of_phandle_args *);
698:	int irq_create_strict_mappings(struct irq_domain *, unsigned int, irq_hw_number_t, int);
849:	void irq_dispose_mapping(unsigned int);
1618:	int irq_domain_activate_irq(struct irq_data *, bool);
360:	struct irq_domain *irq_domain_add_legacy(struct device_node *, unsigned int, unsigned int, irq_hw_number_t, const struct irq_domain_ops *, void *);
317:	struct irq_domain *irq_domain_add_simple(struct device_node *, unsigned int, unsigned int, const struct irq_domain_ops *, void *);
972:	int irq_domain_alloc_descs(int, unsigned int, irq_hw_number_t, int, const struct cpumask *);
1261:	int irq_domain_alloc_irqs_hierarchy(struct irq_domain *, unsigned int, unsigned int, void *);
1547:	int irq_domain_alloc_irqs_parent(struct irq_domain *, unsigned int, unsigned int, void *);
518:	int irq_domain_associate(struct irq_domain *, unsigned int, irq_hw_number_t);
568:	void irq_domain_associate_many(struct irq_domain *, unsigned int, irq_hw_number_t, int);
427:	bool irq_domain_check_msi_remap(void);
1011:	struct irq_domain *irq_domain_create_hierarchy(struct irq_domain *, unsigned int, unsigned int, struct fwnode_handle *, const struct irq_domain_ops *, void *);
1637:	void irq_domain_deactivate_irq(struct irq_data *);
487:	void irq_domain_disassociate(struct irq_domain *, unsigned int);
103:	void irq_domain_free_fwnode(struct fwnode_handle *);
1519:	void irq_domain_free_irqs(unsigned int, unsigned int);
1213:	void irq_domain_free_irqs_common(struct irq_domain *, unsigned int, unsigned int);
1567:	void irq_domain_free_irqs_parent(struct irq_domain *, unsigned int, unsigned int);
1234:	void irq_domain_free_irqs_top(struct irq_domain *, unsigned int, unsigned int);
1134:	struct irq_data *irq_domain_get_irq_data(struct irq_domain *, unsigned int);
1657:	bool irq_domain_hierarchical_is_msi_remap(struct irq_domain *);
1453:	int irq_domain_pop_irq(struct irq_domain *, int);
1371:	int irq_domain_push_irq(struct irq_domain *, int, void *);
242:	void irq_domain_remove(struct irq_domain *);
1199:	void irq_domain_reset_irq_data(struct irq_data *);
1156:	int irq_domain_set_hwirq_and_chip(struct irq_domain *, unsigned int, irq_hw_number_t, struct irq_chip *, void *);
1184:	void irq_domain_set_info(struct irq_domain *, unsigned int, irq_hw_number_t, struct irq_chip *, void *, irq_flow_handler_t, void *, const char *);
268:	void irq_domain_update_bus_token(struct irq_domain *, enum irq_domain_bus_token);
909:	int irq_domain_xlate_onecell(struct irq_domain *, struct device_node *, const u32 *, unsigned int, unsigned long *, unsigned int *);
951:	int irq_domain_xlate_onetwocell(struct irq_domain *, struct device_node *, const u32 *, unsigned int, unsigned long *, unsigned int *);
928:	int irq_domain_xlate_twocell(struct irq_domain *, struct device_node *, const u32 *, unsigned int, irq_hw_number_t *, unsigned int *);
875:	unsigned int irq_find_mapping(struct irq_domain *, irq_hw_number_t);
383:	struct irq_domain *irq_find_matching_fwspec(struct irq_fwspec *, enum irq_domain_bus_token);
454:	void irq_set_default_host(struct irq_domain *);
1589:	static int __irq_domain_activate_irq(struct irq_data *, bool);
1577:	static void __irq_domain_deactivate_irq(struct irq_data *);
462:	static void irq_domain_clear_mapping(struct irq_domain *, irq_hw_number_t);
1345:	static void irq_domain_fix_revmap(struct irq_data *);
1086:	static void irq_domain_free_irq_data(unsigned int, unsigned int);
1246:	static void irq_domain_free_irqs_hierarchy(struct irq_domain *, unsigned int, unsigned int);
474:	static void irq_domain_set_mapping(struct irq_domain *, irq_hw_number_t, struct irq_data *);

File kernel/irq/manage.c:
534:	void __disable_irq(struct irq_desc *);
629:	void __enable_irq(struct irq_desc *);
2496:	int __irq_get_irqchip_state(struct irq_data *, enum irqchip_irq_state, bool *);
334:	int __irq_set_affinity(unsigned int, const struct cpumask *, bool);
792:	int __irq_set_trigger(struct irq_desc *, unsigned long);
2451:	int __request_percpu_irq(unsigned int, irq_handler_t, unsigned long, const char *, void *);
774:	int can_request_irq(unsigned int, unsigned long);
605:	bool disable_hardirq(unsigned int);
581:	void disable_irq(unsigned int);
563:	void disable_irq_nosync(unsigned int);
2289:	void disable_percpu_irq(unsigned int);
2303:	void disable_percpu_nmi(unsigned int);
668:	void enable_irq(unsigned int);
694:	void enable_nmi(unsigned int);
2225:	void enable_percpu_irq(unsigned int, unsigned int);
2259:	void enable_percpu_nmi(unsigned int, unsigned int);
1883:	const void *free_irq(unsigned int, void *);
1935:	const void *free_nmi(unsigned int, void *);
2381:	void free_percpu_irq(unsigned int, void *);
2394:	void free_percpu_nmi(unsigned int, void *);
159:	int irq_can_set_affinity(unsigned int);
171:	bool irq_can_set_affinity_usr(unsigned int);
220:	int irq_do_set_affinity(struct irq_data *, const struct cpumask *, bool);
2683:	int irq_get_irqchip_state(unsigned int, enum irqchip_irq_state, bool *);
2271:	bool irq_percpu_is_enabled(unsigned int);
349:	int irq_set_affinity_hint(unsigned int, const struct cpumask *);
301:	int irq_set_affinity_locked(struct irq_data *, const struct cpumask *, bool);
402:	int irq_set_affinity_notifier(unsigned int, struct irq_affinity_notify *);
725:	int irq_set_irq_wake(unsigned int, unsigned int);
2716:	int irq_set_irqchip_state(unsigned int, enum irqchip_irq_state, bool);
847:	int irq_set_parent(int, int);
188:	void irq_set_thread_affinity(struct irq_desc *);
503:	int irq_set_vcpu_affinity(unsigned int, void *);
442:	int irq_setup_affinity(struct irq_desc *);
1149:	void irq_wake_thread(unsigned int, void *);
2607:	int prepare_percpu_nmi(unsigned int);
1858:	void remove_irq(unsigned int, struct irqaction *);
2361:	void remove_percpu_irq(unsigned int, struct irqaction *);
2106:	int request_any_context_irq(unsigned int, irq_handler_t, unsigned long, const char *, void *);
2156:	int request_nmi(unsigned int, irq_handler_t, unsigned long, const char *, void *);
2539:	int request_percpu_nmi(unsigned int, irq_handler_t, const char *, void *);
2003:	int request_threaded_irq(unsigned int, irq_handler_t, irq_handler_t, unsigned long, const char *, void *);
1690:	int setup_irq(unsigned int, struct irqaction *);
2414:	int setup_percpu_irq(unsigned int, struct irqaction *);
98:	bool synchronize_hardirq(unsigned int);
126:	void synchronize_irq(unsigned int);
2650:	void teardown_percpu_nmi(unsigned int);
1909:	static const void *__cleanup_nmi(unsigned int, struct irq_desc *);
540:	static int __disable_irq_nosync(unsigned int);
1715:	static struct irqaction *__free_irq(struct irq_desc *, void *);
2311:	static struct irqaction *__free_percpu_irq(unsigned int, void *);
1316:	static int __setup_irq(unsigned int, struct irq_desc *, struct irqaction *);
38:	static void __synchronize_hardirq(struct irq_desc *, bool);
365:	static void irq_affinity_notify(struct work_struct *);
868:	static irqreturn_t irq_default_primary_handler(int, void *);
919:	static void irq_finalize_oneshot(struct irq_desc *, struct irqaction *);
883:	static irqreturn_t irq_forced_secondary_handler(int, void *);
1022:	static irqreturn_t irq_forced_thread_fn(struct irq_desc *, struct irqaction *);
877:	static irqreturn_t irq_nested_primary_handler(int, void *);
1226:	static bool irq_supports_nmi(struct irq_desc *);
1102:	static int irq_thread(void *);
974:	static void irq_thread_check_affinity(struct irq_desc *, struct irqaction *);
1060:	static void irq_thread_dtor(struct callback_head *);
1041:	static irqreturn_t irq_thread_fn(struct irq_desc *, struct irqaction *);
699:	static int set_irq_wake_real(unsigned int, unsigned int);
30:	static int setup_forced_irqthreads(char *);
1260:	static int setup_irq_thread(struct irqaction *, unsigned int, bool);
1054:	static void wake_threads_waitq(struct irq_desc *);

File kernel/irq/matrix.c:
49:	struct irq_matrix *irq_alloc_matrix(unsigned int, unsigned int, unsigned int);
377:	int irq_matrix_alloc(struct irq_matrix *, const struct cpumask *, bool, unsigned int *);
285:	int irq_matrix_alloc_managed(struct irq_matrix *, const struct cpumask *, unsigned int *);
467:	unsigned int irq_matrix_allocated(struct irq_matrix *);
321:	void irq_matrix_assign(struct irq_matrix *, unsigned int);
181:	void irq_matrix_assign_system(struct irq_matrix *, unsigned int, bool);
443:	unsigned int irq_matrix_available(struct irq_matrix *, bool);
411:	void irq_matrix_free(struct irq_matrix *, unsigned int, unsigned int, bool);
99:	void irq_matrix_offline(struct irq_matrix *);
78:	void irq_matrix_online(struct irq_matrix *);
251:	void irq_matrix_remove_managed(struct irq_matrix *, const struct cpumask *);
364:	void irq_matrix_remove_reserved(struct irq_matrix *);
345:	void irq_matrix_reserve(struct irq_matrix *);
210:	int irq_matrix_reserve_managed(struct irq_matrix *, const struct cpumask *);
456:	unsigned int irq_matrix_reserved(struct irq_matrix *);
110:	static unsigned int matrix_alloc_area(struct irq_matrix *, struct cpumap *, bool, unsigned int);

File kernel/irq/migration.c:
94:	void __irq_move_irq(struct irq_data *);
18:	bool irq_fixup_move_pending(struct irq_desc *, bool);
38:	void irq_move_masked_irq(struct irq_data *);

File kernel/irq/msi.c:
59:	void __get_cached_msi_msg(struct msi_desc *, struct msi_msg *);
30:	struct msi_desc *alloc_msi_entry(struct device *, int, const struct cpumask *);
53:	void free_msi_entry(struct msi_desc *);
64:	void get_cached_msi_msg(unsigned int, struct msi_msg *);
281:	struct irq_domain *msi_create_irq_domain(struct fwnode_handle *, struct msi_domain_info *, struct irq_domain *);
399:	int msi_domain_alloc_irqs(struct irq_domain *, struct device *, int);
490:	void msi_domain_free_irqs(struct irq_domain *, struct device *);
315:	int msi_domain_populate_irqs(struct irq_domain *, struct device *, int, int, msi_alloc_info_t *);
301:	int msi_domain_prepare_irqs(struct irq_domain *, struct device *, int, msi_alloc_info_t *);
101:	int msi_domain_set_affinity(struct irq_data *, const struct cpumask *, bool);
522:	struct msi_domain_info *msi_get_domain_info(struct irq_domain *);
79:	static void msi_check_level(struct irq_domain *, struct msi_msg *);
118:	static int msi_domain_activate(struct irq_domain *, struct irq_data *, bool);
138:	static int msi_domain_alloc(struct irq_domain *, unsigned int, unsigned int, void *);
129:	static void msi_domain_deactivate(struct irq_domain *, struct irq_data *);
170:	static void msi_domain_free(struct irq_domain *, unsigned int, unsigned int);
230:	static int msi_domain_ops_check(struct irq_domain *, struct msi_domain_info *, struct device *);
215:	static int msi_domain_ops_init(struct irq_domain *, struct msi_domain_info *, unsigned int, irq_hw_number_t, msi_alloc_info_t *);

File kernel/irq/pm.c:
16:	bool irq_pm_check_wakeup(struct irq_desc *);
33:	void irq_pm_install_action(struct irq_desc *, struct irqaction *);
57:	void irq_pm_remove_action(struct irq_desc *, struct irqaction *);
208:	void resume_device_irqs(void);
117:	void suspend_device_irqs(void);
193:	static int irq_pm_init_ops(void);
184:	static void irq_pm_syscore_resume(void);
158:	static void resume_irqs(bool);

File kernel/irq/proc.c:
465:	int arch_show_interrupts(struct seq_file *, int);
444:	void init_irq_proc(void);
333:	void register_handler_proc(unsigned int, struct irqaction *);
352:	void register_irq_proc(unsigned int, struct irq_desc *);
474:	int show_interrupts(struct seq_file *, void *);
431:	void unregister_handler_proc(unsigned int, struct irqaction *);
407:	void unregister_irq_proc(unsigned int, struct irq_desc *);
280:	static int default_affinity_open(struct inode *, struct file *);
238:	static int default_affinity_show(struct seq_file *, void *);
244:	static ssize_t default_affinity_write(struct file *, const char *, size_t, loff_t *);
83:	static int irq_affinity_hint_proc_show(struct seq_file *, void *);
205:	static int irq_affinity_list_proc_open(struct inode *, struct file *);
113:	static int irq_affinity_list_proc_show(struct seq_file *, void *);
194:	static ssize_t irq_affinity_list_proc_write(struct file *, const char *, size_t, loff_t *);
200:	static int irq_affinity_proc_open(struct inode *, struct file *);
108:	static int irq_affinity_proc_show(struct seq_file *, void *);
188:	static ssize_t irq_affinity_proc_write(struct file *, const char *, size_t, loff_t *);
232:	static int irq_effective_aff_list_proc_show(struct seq_file *, void *);
227:	static int irq_effective_aff_proc_show(struct seq_file *, void *);
293:	static int irq_node_proc_show(struct seq_file *, void *);
302:	static int irq_spurious_proc_show(struct seq_file *, void *);
141:	static ssize_t write_irq_affinity(int, struct file *, const char *, size_t, loff_t *);

File kernel/irq/resend.c:
106:	int check_irq_resend(struct irq_desc *, bool);
154:	int irq_inject_interrupt(unsigned int);
30:	static void resend_irqs(unsigned long);

File kernel/irq/spurious.c:
36:	bool irq_wait_for_poll(struct irq_desc *);
431:	int noirqdebug_setup(char *);
271:	void note_interrupt(struct irq_desc *, irqreturn_t);
191:	static void __report_bad_irq(struct irq_desc *, irqreturn_t);
443:	static int irqfixup_setup(char *);
455:	static int irqpoll_setup(char *);
143:	static void poll_spurious_irqs(struct timer_list *);
61:	static int try_one_irq(struct irq_desc *, bool);

File kernel/irq_work.c:
52:	void arch_irq_work_raise(void);
124:	bool irq_work_needs_cpu(void);
74:	bool irq_work_queue(struct irq_work *);
95:	bool irq_work_queue_on(struct irq_work *, int);
177:	void irq_work_run(void);
197:	void irq_work_sync(struct irq_work *);
184:	void irq_work_tick(void);
60:	static void __irq_work_queue_local(struct irq_work *);
141:	static void irq_work_run_list(struct llist_head *);

File kernel/jump_label.c:
300:	void arch_jump_label_transform_static(struct jump_entry *, enum jump_label_type);
537:	void jump_label_apply_nops(struct module *);
391:	void jump_label_init(void);
434:	void jump_label_invalidate_initmem(void);
24:	void jump_label_lock(void);
261:	void jump_label_rate_limit(struct static_key_deferred *, unsigned long);
721:	int jump_label_register(struct module *);
752:	int jump_label_text_reserved(void *, void *);
29:	void jump_label_unlock(void);
69:	int static_key_count(struct static_key *);
254:	void static_key_deferred_flush(struct static_key_deferred *);
177:	void static_key_disable(struct static_key *);
160:	void static_key_disable_cpuslocked(struct static_key *);
152:	void static_key_enable(struct static_key *);
129:	void static_key_enable_cpuslocked(struct static_key *);
234:	void static_key_slow_dec(struct static_key *);
241:	void static_key_slow_dec_cpuslocked(struct static_key *);
247:	void static_key_slow_dec_deferred(struct static_key_deferred *);
121:	void static_key_slow_inc(struct static_key *);
81:	void static_key_slow_inc_cpuslocked(struct static_key *);
372:	static void __jump_label_update(struct static_key *, struct jump_entry *, struct jump_entry *);
185:	static void __static_key_slow_dec_cpuslocked(struct static_key *, unsigned long, struct delayed_work *);
34:	static int jump_label_cmp(const void *, const void *);
618:	static void jump_label_del_module(struct module *);
731:	static int jump_label_init_module(void);
685:	static int jump_label_module_notify(struct notifier_block *, unsigned long, void *);
766:	static void jump_label_update(struct static_key *);
227:	static void jump_label_update_timeout(struct work_struct *);
351:	static void static_key_set_entries(struct jump_entry *, struct static_key *);
476:	static void static_key_set_mod(struct static_key_mod *, struct static_key *);

File kernel/kallsyms.c:
449:	int arch_get_kallsym(unsigned int, unsigned long *, char *, char *);
280:	const char *kallsyms_lookup(unsigned long, unsigned long *, unsigned long *, char **, char *);
162:	unsigned long kallsyms_lookup_name(const char *);
260:	int kallsyms_lookup_size_offset(unsigned long, unsigned long *, unsigned long *);
178:	int kallsyms_on_each_symbol(int (*)(void *, const char *, struct module *, unsigned long), void *);
647:	int kallsyms_show_value(void);
681:	const char *kdb_walk_kallsyms(loff_t *);
333:	int lookup_symbol_attrs(unsigned long, unsigned long *, unsigned long *, char *, char *);
315:	int lookup_symbol_name(unsigned long, char *);
429:	int sprint_backtrace(char *, unsigned long);
392:	int sprint_symbol(char *, unsigned long);
409:	int sprint_symbol_no_offset(char *, unsigned long);
354:	static int __sprint_symbol(char *, unsigned long, int, int);
197:	static unsigned long get_symbol_pos(unsigned long, unsigned long *, unsigned long *);
56:	static unsigned int kallsyms_expand_symbol(unsigned int, char *, size_t);
707:	static int kallsyms_init(void);
663:	static int kallsyms_open(struct inode *, struct file *);
574:	static void *s_next(struct seq_file *, void *, loff_t *);
594:	static int s_show(struct seq_file *, void *);
583:	static void *s_start(struct seq_file *, loff_t *);
590:	static void s_stop(struct seq_file *, void *);
558:	static int update_iter(struct kallsym_iter *, loff_t);

File kernel/kcmp.c:
152:	long __ia32_sys_kcmp(const struct pt_regs *);
152:	long __x64_sys_kcmp(const struct pt_regs *);
62:	static struct file *get_file_raw_ptr(struct task_struct *, unsigned int);
245:	static int kcmp_cookies_init(void);
103:	static int kcmp_epoll_target(struct task_struct *, struct task_struct *, unsigned long, struct kcmp_epoll_slot *);

File kernel/kexec.c:
269:	long __ia32_compat_sys_kexec_load(const struct pt_regs *);
236:	long __ia32_sys_kexec_load(const struct pt_regs *);
236:	long __x64_sys_kexec_load(const struct pt_regs *);
118:	static int do_kexec_load(unsigned long, unsigned long, struct kexec_segment *, unsigned long);

File kernel/kexec_core.c:
1018:	void __crash_kexec(struct pt_regs *);
1291:	void arch_kexec_protect_crashkres(void);
1077:	void crash_free_reserved_phys_range(unsigned long, unsigned long);
1066:	size_t crash_get_memory_size(void);
1042:	void crash_kexec(struct pt_regs *);
1135:	void crash_save_cpu(struct pt_regs *, int);
1086:	int crash_shrink_memory(unsigned long);
321:	struct kimage *do_kimage_alloc_init(void);
1199:	int kernel_kexec(void);
105:	int kexec_crash_loaded(void);
87:	int kexec_should_crash(struct task_struct *);
551:	struct page *kimage_alloc_control_pages(struct kimage *, unsigned int);
575:	int kimage_crash_copy_vmcoreinfo(struct kimage *);
688:	void kimage_free(struct kimage *);
407:	void kimage_free_page_list(struct list_head *);
348:	int kimage_is_destination_range(struct kimage *, unsigned long, unsigned long);
987:	int kimage_load_segment(struct kimage *, struct kexec_segment *);
667:	void kimage_terminate(struct kimage *);
111:	int reserve_crashkernel_low(void);
216:	int sanity_check_segment_list(struct kimage *);
1161:	static int crash_notes_memory_init(void);
609:	static int kimage_add_entry(struct kimage *, kimage_entry_t);
753:	static struct page *kimage_alloc_page(struct kimage *, gfp_t, unsigned long);
366:	static struct page *kimage_alloc_pages(gfp_t, unsigned int);
393:	static void kimage_free_pages(struct page *);

File kernel/kexec_file.c:
320:	long __ia32_sys_kexec_file_load(const struct pt_regs *);
320:	long __x64_sys_kexec_file_load(const struct pt_regs *);
140:	int arch_kexec_apply_relocations(struct purgatory_info *, Elf64_Shdr *, const Elf64_Shdr *, const Elf64_Shdr *);
123:	int arch_kexec_apply_relocations_add(struct purgatory_info *, Elf64_Shdr *, const Elf64_Shdr *, const Elf64_Shdr *);
76:	void *arch_kexec_kernel_image_load(struct kimage *);
59:	int arch_kexec_kernel_image_probe(struct kimage *, void *, unsigned long);
106:	int arch_kexec_kernel_verify_sig(struct kimage *, void *, unsigned long);
513:	int arch_kexec_walk_mem(struct kexec_buf *, int (*)(struct resource *, void *));
89:	int arch_kimage_file_post_load_cleanup(struct kimage *);
1063:	int crash_exclude_mem_range(struct crash_mem *, unsigned long long, unsigned long long);
1134:	int crash_prepare_elf64_headers(struct crash_mem *, int, void **, unsigned long *);
552:	int kexec_add_buffer(struct kexec_buf *);
41:	int kexec_image_probe_default(struct kimage *, void *, unsigned long);
916:	int kexec_load_purgatory(struct kimage *, struct kexec_buf *);
533:	int kexec_locate_mem_hole(struct kexec_buf *);
1026:	int kexec_purgatory_get_set_symbol(struct kimage *, const char *, void *, unsigned int, bool);
1003:	void *kexec_purgatory_get_symbol_addr(struct kimage *, const char *);
152:	void kimage_file_post_load_cleanup(struct kimage *);
597:	static int kexec_calculate_store_digests(struct kimage *);
955:	static const Elf64_Sym *kexec_purgatory_find_symbol(const char *, struct purgatory_info *);
264:	static int kimage_file_alloc_init(struct kimage **, int, int, const char *, unsigned long, unsigned long);
482:	static int locate_mem_hole_callback(struct resource *, void *);

File kernel/kmod.c:
125:	int __request_module(bool, const char *, ...);
64:	static void free_modprobe_argv(struct subprocess_info *);

File kernel/kprobes.c:
248:	void __free_insn_slot(struct kprobe_insn_cache *, kprobe_opcode_t *, int);
144:	kprobe_opcode_t *__get_insn_slot(struct kprobe_insn_cache *);
288:	bool __is_insn_slot_addr(struct kprobe_insn_cache *, unsigned long);
120:	void *alloc_insn_page(void);
1541:	int arch_check_ftrace_location(struct kprobe *);
1860:	unsigned long arch_deref_entry_point(void *);
1921:	bool arch_kprobe_on_func_entry(unsigned long);
2228:	int arch_populate_kprobe_blacklist(void);
1449:	bool arch_within_kprobe_blacklist(unsigned long);
2130:	int disable_kprobe(struct kprobe *);
2184:	void dump_kprobe(struct kprobe *);
2148:	int enable_kprobe(struct kprobe *);
125:	void free_insn_page(void *);
336:	struct kprobe *get_kprobe(void *);
2213:	int kprobe_add_area_blacklist(unsigned long, unsigned long);
2192:	int kprobe_add_ksym_blacklist(unsigned long);
1244:	void kprobe_busy_begin(void);
1254:	void kprobe_busy_end(void);
1848:	int kprobe_exceptions_notify(struct notifier_block *, unsigned long, void *);
1266:	void kprobe_flush_task(struct task_struct *);
75:	kprobe_opcode_t *kprobe_lookup_name(const char *, unsigned int);
1939:	int kprobe_on_func_entry(kprobe_opcode_t *, const char *, unsigned long);
1166:	void kprobes_inc_nmissed_count(struct kprobe *);
1197:	void kretprobe_hash_lock(struct task_struct *, struct hlist_head **, unsigned long *);
1219:	void kretprobe_hash_unlock(struct task_struct *, unsigned long *);
383:	void opt_pre_handler(struct kprobe *, struct pt_regs *);
908:	int proc_kprobes_optimization_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
1179:	void recycle_rp_inst(struct kretprobe_instance *, struct hlist_head *);
1609:	int register_kprobe(struct kprobe *);
1805:	int register_kprobes(struct kprobe **, int);
1955:	int register_kretprobe(struct kretprobe *);
2018:	int register_kretprobes(struct kretprobe **, int);
1823:	void unregister_kprobe(struct kprobe *);
1829:	void unregister_kprobes(struct kprobe **, int);
2036:	void unregister_kretprobe(struct kretprobe *);
2042:	void unregister_kretprobes(struct kretprobe **, int);
610:	void wait_for_kprobe_optimizer(void);
1456:	bool within_kprobe_blacklist(unsigned long);
1695:	static struct kprobe *__disable_kprobe(struct kprobe *);
1506:	static struct kprobe *__get_valid_kprobe(struct kprobe *);
1789:	static void __unregister_kprobe_bottom(struct kprobe *);
1734:	static int __unregister_kprobe_top(struct kprobe *);
1148:	static int aggr_fault_handler(struct kprobe *, struct pt_regs *, int);
1133:	static void aggr_post_handler(struct kprobe *, struct pt_regs *, unsigned long);
1117:	static int aggr_pre_handler(struct kprobe *, struct pt_regs *);
794:	static struct kprobe *alloc_aggr_kprobe(struct kprobe *);
1084:	static int arm_kprobe(struct kprobe *);
1308:	static void cleanup_rp_inst(struct kretprobe *);
227:	static int collect_garbage_slots(struct kprobe_insn_cache *);
205:	static int collect_one_slot(struct kprobe_insn_page *, int);
2667:	static int debugfs_kprobe_init(void);
1099:	static int disarm_kprobe(struct kprobe *, bool);
1048:	static int disarm_kprobe_ftrace(struct kprobe *);
679:	static void force_unoptimize_kprobe(struct optimized_kprobe *);
452:	static struct kprobe *get_optimized_kprobe(unsigned long);
1348:	static void init_aggr_kprobe(struct kprobe *, struct kprobe *);
2321:	static int init_kprobes(void);
1500:	static kprobe_opcode_t *kprobe_addr(struct kprobe *);
2505:	static int kprobe_blacklist_open(struct inode *, struct file *);
2475:	static void *kprobe_blacklist_seq_next(struct seq_file *, void *, loff_t *);
2480:	static int kprobe_blacklist_seq_show(struct seq_file *, void *);
2470:	static void *kprobe_blacklist_seq_start(struct seq_file *, loff_t *);
568:	static void kprobe_optimizer(struct work_struct *);
2413:	static void *kprobe_seq_next(struct seq_file *, void *, loff_t *);
2408:	static void *kprobe_seq_start(struct seq_file *, loff_t *);
2421:	static void kprobe_seq_stop(struct seq_file *, void *);
2265:	static int kprobes_module_callback(struct notifier_block *, unsigned long, void *);
2457:	static int kprobes_open(struct inode *, struct file *);
1210:	static void kretprobe_table_lock(unsigned long, unsigned long *);
1231:	static void kretprobe_table_unlock(unsigned long, unsigned long *);
641:	static void optimize_kprobe(struct kprobe *);
1870:	static int pre_handler_kretprobe(struct kprobe *, struct pt_regs *);
2614:	static ssize_t read_enabled_file_bool(struct file *, char *, size_t, loff_t *);
2377:	static void report_probe(struct seq_file *, struct kprobe *, const char *, int, char *, struct kprobe *);
2426:	static int show_kprobe_addr(struct seq_file *, void *);
689:	static void unoptimize_kprobe(struct kprobe *, bool);
2628:	static ssize_t write_enabled_file_bool(struct file *, const char *, size_t, loff_t *);

File kernel/ksysfs.c:
144:	static ssize_t fscaps_show(struct kobject *, struct kobj_attribute *, char *);
101:	static ssize_t kexec_crash_loaded_show(struct kobject *, struct kobj_attribute *, char *);
108:	static ssize_t kexec_crash_size_show(struct kobject *, struct kobj_attribute *, char *);
113:	static ssize_t kexec_crash_size_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
94:	static ssize_t kexec_loaded_show(struct kobject *, struct kobj_attribute *, char *);
241:	static int ksysfs_init(void);
194:	static ssize_t notes_read(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
63:	static ssize_t profiling_show(struct kobject *, struct kobj_attribute *, char *);
68:	static ssize_t profiling_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
153:	static ssize_t rcu_expedited_show(struct kobject *, struct kobj_attribute *, char *);
158:	static ssize_t rcu_expedited_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
170:	static ssize_t rcu_normal_show(struct kobject *, struct kobj_attribute *, char *);
175:	static ssize_t rcu_normal_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
33:	static ssize_t uevent_seqnum_show(struct kobject *, struct kobj_attribute *, char *);
132:	static ssize_t vmcoreinfo_show(struct kobject *, struct kobj_attribute *, char *);

File kernel/ktask.c:
642:	void *ktask_iter_range(void *, size_t);

File kernel/kthread.c:
651:	void __kthread_init_worker(struct kthread_worker *, const char *, struct lock_class_key *);
914:	void __kthread_queue_delayed_work(struct kthread_worker *, struct kthread_delayed_work *, unsigned long);
95:	void free_kthread_struct(struct task_struct *);
1274:	void kthread_associate_blkcg(struct cgroup_subsys_state *);
450:	void kthread_bind(struct task_struct *, unsigned int);
436:	void kthread_bind_mask(struct task_struct *, const struct cpumask *);
1300:	struct cgroup_subsys_state *kthread_blkcg(void);
1215:	bool kthread_cancel_delayed_work_sync(struct kthread_delayed_work *);
1200:	bool kthread_cancel_work_sync(struct kthread_work *);
467:	struct task_struct *kthread_create_on_cpu(int (*)(void *), void *, unsigned int, const char *);
399:	struct task_struct *kthread_create_on_node(int (*)(void *), void *, int, const char *, ...);
771:	struct kthread_worker *kthread_create_worker(unsigned int, const char *, ...);
802:	struct kthread_worker *kthread_create_worker_on_cpu(int, unsigned int, const char *, ...);
173:	void *kthread_data(struct task_struct *);
887:	void kthread_delayed_work_timer_fn(struct timer_list *);
1248:	void kthread_destroy_worker(struct kthread_worker *);
996:	void kthread_flush_work(struct kthread_work *);
1228:	void kthread_flush_worker(struct kthread_worker *);
149:	bool kthread_freezable_should_stop(bool *);
500:	bool kthread_is_per_cpu(struct task_struct *);
1105:	bool kthread_mod_delayed_work(struct kthread_worker *, struct kthread_delayed_work *, unsigned long);
548:	int kthread_park(struct task_struct *);
228:	void kthread_parkme(void);
196:	void *kthread_probe_data(struct task_struct *);
958:	bool kthread_queue_delayed_work(struct kthread_worker *, struct kthread_delayed_work *, unsigned long);
863:	bool kthread_queue_work(struct kthread_worker *, struct kthread_work *);
483:	void kthread_set_per_cpu(struct task_struct *, int);
134:	bool kthread_should_park(void);
117:	bool kthread_should_stop(void);
592:	int kthread_stop(struct task_struct *);
517:	void kthread_unpark(struct task_struct *);
678:	int kthread_worker_fn(void *);
613:	int kthreadd(void *);
182:	void set_kthreadd_affinity(void);
281:	int tsk_fork_get_node(struct task_struct *);
415:	static void __kthread_bind_mask(struct task_struct *, const struct cpumask *, long);
1068:	static bool __kthread_cancel_work(struct kthread_work *);
1147:	static bool __kthread_cancel_work_sync(struct kthread_work *, bool);
313:	static struct task_struct *__kthread_create_on_node(int (*)(void *), void *, int, const char *, struct __va_list_tag *);
727:	static struct kthread_worker *__kthread_create_worker(int, unsigned int, const char *, struct __va_list_tag *);
206:	static void __kthread_parkme(struct kthread *);
234:	static int kthread(void *);
1035:	static void kthread_cancel_delayed_work_timer(struct kthread_work *, unsigned long *);
983:	static void kthread_flush_work_fn(struct kthread_work *);
839:	static void kthread_insert_work(struct kthread_worker *, struct kthread_work *, struct list_head *);
829:	static void kthread_insert_work_sanity_check(struct kthread_worker *, struct kthread_work *);

File kernel/livepatch/core.c:
435:	void arch_klp_code_modify_prepare(void);
1001:	int arch_klp_func_can_patch(struct klp_func *);
1042:	void arch_klp_init_object_loaded(struct klp_patch *, struct klp_object *);
75:	struct kprobe *klp_check_patch_kprobed(struct klp_patch *);
481:	int klp_disable_patch(struct klp_patch *);
689:	int klp_enable_patch(struct klp_patch *);
1298:	int klp_register_patch(struct klp_patch *);
402:	int klp_try_disable_patch(void *);
611:	int klp_try_enable_patch(void *);
1248:	int klp_unregister_patch(struct klp_patch *);
444:	static int __klp_disable_patch(struct klp_patch *);
644:	static int __klp_enable_patch(struct klp_patch *);
784:	static ssize_t enabled_show(struct kobject *, struct kobj_attribute *, char *);
721:	static ssize_t enabled_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
175:	static int klp_find_callback(void *, const char *, struct module *, unsigned long);
203:	static int klp_find_object_symbol(const char *, const char *, unsigned long, unsigned long *);
978:	static void klp_free_objects_limited(struct klp_object *, struct klp_patch *);
1466:	static int klp_init(void);
1176:	static int klp_init_patch(struct klp_patch *);
930:	static void klp_kobj_release_object(struct kobject *);
916:	static void klp_kobj_release_patch(struct kobject *);
244:	static int klp_resolve_symbols(struct module *, struct module *, Elf64_Shdr *, Elf64_Shdr *);
904:	static int klp_state_open(struct inode *, struct file *);
880:	static int state_show(struct seq_file *, void *);

File kernel/livepatch/patch.c:
283:	int klp_patch_object(struct klp_object *);
272:	void klp_unpatch_object(struct klp_object *);
303:	void klp_unpatch_objects(struct klp_patch *);

File kernel/locking/mutex.c:
39:	void __mutex_init(struct mutex *, const char *, struct lock_class_key *);
1436:	int atomic_dec_and_mutex_lock(atomic_t *, struct mutex *);
262:	void mutex_lock(struct mutex *);
1281:	int mutex_lock_interruptible(struct mutex *);
1326:	void mutex_lock_io(struct mutex *);
1305:	int mutex_lock_killable(struct mutex *);
1385:	int mutex_trylock(struct mutex *);
717:	void mutex_unlock(struct mutex *);
1398:	int ww_mutex_lock(struct ww_mutex *, struct ww_acquire_ctx *);
1413:	int ww_mutex_lock_interruptible(struct ww_mutex *, struct ww_acquire_ctx *);
738:	void ww_mutex_unlock(struct ww_mutex *);
181:	static void __mutex_add_waiter(struct mutex *, struct mutex_waiter *, struct list_head *);
1075:	static int __mutex_lock(struct mutex *, long, unsigned long, struct lockdep_map *, unsigned int);
1349:	static int __mutex_lock_interruptible_slowpath(struct mutex *);
1343:	static int __mutex_lock_killable_slowpath(struct mutex *);
1337:	static void __mutex_lock_slowpath(struct mutex *);
192:	static void __mutex_remove_waiter(struct mutex *, struct mutex_waiter *);
1197:	static void __mutex_unlock_slowpath(struct mutex *, unsigned long);
427:	static void __ww_mutex_check_waiters(struct mutex *, struct ww_acquire_ctx *);
1082:	static int __ww_mutex_lock(struct mutex *, long, struct ww_acquire_ctx *, unsigned long, struct lockdep_map *, unsigned int);
1362:	static int __ww_mutex_lock_interruptible_slowpath(struct ww_mutex *, struct ww_acquire_ctx *);
1355:	static int __ww_mutex_lock_slowpath(struct ww_mutex *, struct ww_acquire_ctx *);
372:	static bool __ww_mutex_wound(struct mutex *, struct ww_acquire_ctx *, struct ww_acquire_ctx *);
533:	static bool mutex_spin_on_owner(struct mutex *, struct task_struct *, struct ww_acquire_ctx *, struct mutex_waiter *);

File kernel/locking/osq_lock.c:
90:	bool osq_lock(struct optimistic_spin_queue *);
203:	void osq_unlock(struct optimistic_spin_queue *);

File kernel/locking/percpu-rwsem.c:
41:	int __percpu_down_read(struct percpu_rw_semaphore *, int);
10:	int __percpu_init_rwsem(struct percpu_rw_semaphore *, const char *, struct lock_class_key *);
94:	void __percpu_up_read(struct percpu_rw_semaphore *);
140:	void percpu_down_write(struct percpu_rw_semaphore *);
26:	void percpu_free_rwsem(struct percpu_rw_semaphore *);
166:	void percpu_up_write(struct percpu_rw_semaphore *);

File kernel/locking/qrwlock.c:
30:	void queued_read_lock_slowpath(struct qrwlock *);
71:	void queued_write_lock_slowpath(struct qrwlock *);

File kernel/locking/qspinlock.c:
354:	void __pv_queued_spin_lock_slowpath(struct qspinlock *, u32);
354:	void native_queued_spin_lock_slowpath(struct qspinlock *, u32);
635:	static int parse_nopvspin(char *);

File kernel/locking/qspinlock_paravirt.h:
188:	void __pv_init_lock_hash(void);
492:	void __pv_queued_spin_unlock_slowpath(struct qspinlock *, u8);
212:	static struct qspinlock **pv_hash(struct qspinlock *, struct pv_node *);

File kernel/locking/rtmutex.c:
1535:	int __rt_mutex_futex_trylock(struct rt_mutex *);
1613:	bool __rt_mutex_futex_unlock(struct rt_mutex *, struct wake_q_head *);
1676:	void __rt_mutex_init(struct rt_mutex *, const char *, struct lock_class_key *);
1747:	int __rt_mutex_start_proxy_lock(struct rt_mutex *, struct rt_mutex_waiter *, struct task_struct *);
1126:	void rt_mutex_adjust_pi(struct task_struct *);
1888:	bool rt_mutex_cleanup_proxy_lock(struct rt_mutex *, struct rt_mutex_waiter *);
1658:	void rt_mutex_destroy(struct rt_mutex *);
1530:	int rt_mutex_futex_trylock(struct rt_mutex *);
1636:	void rt_mutex_futex_unlock(struct rt_mutex *);
1702:	void rt_mutex_init_proxy_locked(struct rt_mutex *, struct task_struct *);
1149:	void rt_mutex_init_waiter(struct rt_mutex_waiter *);
1496:	void rt_mutex_lock(struct rt_mutex *);
1512:	int rt_mutex_lock_interruptible(struct rt_mutex *);
1823:	struct task_struct *rt_mutex_next_owner(struct rt_mutex *);
1446:	void rt_mutex_postunlock(struct wake_q_head *);
1722:	void rt_mutex_proxy_unlock(struct rt_mutex *);
1796:	int rt_mutex_start_proxy_lock(struct rt_mutex *, struct rt_mutex_waiter *, struct task_struct *);
1554:	int rt_mutex_timed_lock(struct rt_mutex *, struct hrtimer_sleeper *);
1582:	int rt_mutex_trylock(struct rt_mutex *);
1602:	void rt_mutex_unlock(struct rt_mutex *);
1848:	int rt_mutex_wait_proxy_lock(struct rt_mutex *, struct hrtimer_sleeper *, struct rt_mutex_waiter *);
1168:	static int __rt_mutex_slowlock(struct rt_mutex *, int, struct hrtimer_sleeper *, struct rt_mutex_waiter *);
68:	static void fixup_rt_mutex_waiters(struct rt_mutex *);
1018:	static void mark_wakeup_next_waiter(struct wake_q_head *, struct rt_mutex *);
1068:	static void remove_waiter(struct rt_mutex *, struct rt_mutex_waiter *);
448:	static int rt_mutex_adjust_prio_chain(struct task_struct *, enum rtmutex_chainwalk, struct rt_mutex *, struct rt_mutex *, struct rt_mutex_waiter *, struct task_struct *);
272:	static void rt_mutex_enqueue(struct rt_mutex *, struct rt_mutex_waiter *);
305:	static void rt_mutex_enqueue_pi(struct task_struct *, struct rt_mutex_waiter *);
1231:	static int rt_mutex_slowlock(struct rt_mutex *, int, struct hrtimer_sleeper *, enum rtmutex_chainwalk);
1339:	static bool rt_mutex_slowunlock(struct rt_mutex *, struct wake_q_head *);
929:	static int task_blocks_on_rt_mutex(struct rt_mutex *, struct rt_mutex_waiter *, struct task_struct *, enum rtmutex_chainwalk);
808:	static int try_to_take_rt_mutex(struct rt_mutex *, struct task_struct *, struct rt_mutex_waiter *);

File kernel/locking/rtmutex_common.h:
53:	static struct rt_mutex_waiter *rt_mutex_top_waiter(struct rt_mutex *);

File kernel/locking/rwsem-xadd.c:
76:	void __init_rwsem(struct rw_semaphore *, const char *, struct lock_class_key *);
309:	struct rw_semaphore *rwsem_down_read_failed(struct rw_semaphore *);
316:	struct rw_semaphore *rwsem_down_read_failed_killable(struct rw_semaphore *);
618:	struct rw_semaphore *rwsem_down_write_failed(struct rw_semaphore *);
625:	struct rw_semaphore *rwsem_down_write_failed_killable(struct rw_semaphore *);
717:	struct rw_semaphore *rwsem_downgrade_wake(struct rw_semaphore *);
636:	struct rw_semaphore *rwsem_wake(struct rw_semaphore *);
127:	static void __rwsem_mark_wake(struct rw_semaphore *, enum rwsem_wake_type, struct wake_q_head *);
407:	static bool rwsem_spin_on_owner(struct rw_semaphore *);

File kernel/locking/rwsem.c:
21:	void down_read(struct rw_semaphore *);
32:	int down_read_killable(struct rw_semaphore *);
51:	int down_read_trylock(struct rw_semaphore *);
67:	void down_write(struct rw_semaphore *);
81:	int down_write_killable(struct rw_semaphore *);
100:	int down_write_trylock(struct rw_semaphore *);
144:	void downgrade_write(struct rw_semaphore *);
117:	void up_read(struct rw_semaphore *);
130:	void up_write(struct rw_semaphore *);

File kernel/locking/semaphore.c:
54:	void down(struct semaphore *);
76:	int down_interruptible(struct semaphore *);
102:	int down_killable(struct semaphore *);
156:	int down_timeout(struct semaphore *, long);
131:	int down_trylock(struct semaphore *);
179:	void up(struct semaphore *);
236:	static void __down(struct semaphore *);
241:	static int __down_interruptible(struct semaphore *);
246:	static int __down_killable(struct semaphore *);
251:	static int __down_timeout(struct semaphore *, long);
256:	static void __up(struct semaphore *);

File kernel/locking/spinlock.c:
214:	void _raw_read_lock(rwlock_t *);
238:	void _raw_read_lock_bh(rwlock_t *);
230:	void _raw_read_lock_irq(rwlock_t *);
222:	unsigned long _raw_read_lock_irqsave(rwlock_t *);
206:	int _raw_read_trylock(rwlock_t *);
270:	void _raw_read_unlock_bh(rwlock_t *);
254:	void _raw_read_unlock_irqrestore(rwlock_t *, unsigned long);
142:	void _raw_spin_lock(raw_spinlock_t *);
166:	void _raw_spin_lock_bh(raw_spinlock_t *);
158:	void _raw_spin_lock_irq(raw_spinlock_t *);
150:	unsigned long _raw_spin_lock_irqsave(raw_spinlock_t *);
126:	int _raw_spin_trylock(raw_spinlock_t *);
134:	int _raw_spin_trylock_bh(raw_spinlock_t *);
198:	void _raw_spin_unlock_bh(raw_spinlock_t *);
182:	void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);
286:	void _raw_write_lock(rwlock_t *);
310:	void _raw_write_lock_bh(rwlock_t *);
302:	void _raw_write_lock_irq(rwlock_t *);
294:	unsigned long _raw_write_lock_irqsave(rwlock_t *);
278:	int _raw_write_trylock(rwlock_t *);
342:	void _raw_write_unlock_bh(rwlock_t *);
326:	void _raw_write_unlock_irqrestore(rwlock_t *, unsigned long);
384:	int in_lock_functions(unsigned long);

File kernel/memremap.c:
386:	void __put_devmap_managed_page(struct page *);
372:	void dev_pagemap_get_ops(void);
379:	void dev_pagemap_put_ops(void);
46:	vm_fault_t device_private_entry_fault(struct vm_area_struct *, unsigned long, swp_entry_t, unsigned int, pmd_t *);
177:	void *devm_memremap_pages(struct device *, struct dev_pagemap *);
338:	struct dev_pagemap *get_dev_pagemap(unsigned long, struct dev_pagemap *);
325:	void vmem_altmap_free(struct vmem_altmap *, unsigned long);
319:	unsigned long vmem_altmap_offset(struct vmem_altmap *);
117:	static void devm_memremap_pages_release(void *);
20:	static unsigned long order_at(struct resource *, unsigned long);
73:	static void pgmap_radix_release(struct resource *, unsigned long);

File kernel/module.c:
964:	long __ia32_sys_delete_module(const struct pt_regs *);
3927:	long __ia32_sys_finit_module(const struct pt_regs *);
3907:	long __ia32_sys_init_module(const struct pt_regs *);
682:	bool __is_module_percpu_address(unsigned long, unsigned long *);
4376:	struct module *__module_address(unsigned long);
1108:	void __module_get(struct module *);
341:	void __module_put_and_exit(struct module *, long);
4421:	struct module *__module_text_address(unsigned long);
2220:	void *__symbol_get(const char *);
1066:	void __symbol_put(const char *);
964:	long __x64_sys_delete_module(const struct pt_regs *);
3927:	long __x64_sys_finit_module(const struct pt_regs *);
3907:	long __x64_sys_init_module(const struct pt_regs *);
2393:	unsigned int arch_mod_section_prepend(struct module *, unsigned int);
4022:	void *dereference_module_function_descriptor(struct module *, void *);
427:	bool each_symbol_section(bool (*)(const struct symsearch *, struct module *, void *), void *);
625:	struct module *find_module(const char *);
580:	const struct kernel_symbol *find_symbol(const char *, struct module **, const s32 **, bool, bool);
3305:	void flush_module_icache(const struct module *);
4358:	bool is_module_address(unsigned long);
724:	bool is_module_percpu_address(unsigned long);
287:	bool is_module_sig_enforced(void);
4403:	bool is_module_text_address(unsigned long);
4080:	int lookup_module_symbol_attrs(unsigned long, unsigned long *, unsigned long *, char *, char *);
4056:	int lookup_module_symbol_name(unsigned long, char *);
4030:	const char *module_address_lookup(unsigned long, unsigned long *, unsigned long *, char **, char *);
2788:	void *module_alloc(unsigned long);
2158:	void module_arch_cleanup(struct module *);
1953:	void module_disable_ro(const struct module *);
1965:	void module_enable_ro(const struct module *, bool);
3411:	int module_finalize(const Elf64_Ehdr *, const Elf64_Shdr *, struct module *);
3328:	int module_frob_arch_sections(Elf64_Ehdr *, Elf64_Shdr *, char *, struct module *);
4108:	int module_get_kallsym(unsigned int, unsigned long *, char *, char *, char *, int *);
4148:	unsigned long module_kallsyms_lookup_name(const char *);
4171:	int module_kallsyms_on_each_symbol(int (*)(void *, const char *, struct module *, unsigned long), void *);
4457:	void module_layout(struct module *, struct modversion_info *, struct kernel_param *, struct kernel_symbol *, struct tracepoint * const *);
2153:	void module_memfree(void *);
1138:	void module_put(struct module *);
955:	int module_refcount(struct module *);
4435:	void print_modules(void);
863:	int ref_module(struct module *, struct module *);
302:	int register_module_notifier(struct notifier_block *);
4325:	const struct exception_table_entry *search_module_extables(unsigned long);
2018:	void set_all_modules_text_ro(void);
1999:	void set_all_modules_text_rw(void);
275:	void set_module_sig_enforced(void);
1079:	void symbol_put_addr(void *);
1119:	bool try_module_get(struct module *);
308:	int unregister_module_notifier(struct notifier_block *);
3927:	static long __do_sys_finit_module(int, const char *, int);
3907:	static long __do_sys_init_module(void *, unsigned long, const char *);
160:	static void __mod_tree_insert(struct mod_tree_node *);
165:	static void __mod_tree_remove(struct mod_tree_node *);
330:	static void add_taint_module(struct module *, unsigned int, enum lockdep_ok);
1291:	static int check_version(const struct load_info *, const char *, struct module *, const s32 *);
554:	static int cmp_name(const void *, const void *);
1676:	static void del_usage_links(struct module *);
2042:	static void disable_ro_nx(const struct module_layout *);
3471:	static void do_free_init(struct callback_head *);
3484:	static int do_init_module(struct module *);
609:	static struct module *find_module_all(const char *, size_t, bool);
349:	static unsigned int find_sec(const struct load_info *, const char *);
562:	static bool find_symbol_in_section(const struct symsearch *, struct module *, void *);
3435:	static bool finished_loading(const char *);
795:	static void free_modinfo_srcversion(struct module *);
794:	static void free_modinfo_version(struct module *);
2167:	static void free_module(struct module *);
1579:	static void free_notes_attrs(struct module_notes_attrs *, unsigned int);
1932:	static void frob_ro_after_init(const struct module_layout *, int (*)(unsigned long, int));
1922:	static void frob_rodata(const struct module_layout *, int (*)(unsigned long, int));
1912:	static void frob_text(int (*)(unsigned long, int), const struct module_layout *, const struct module_layout *);
1942:	static void frob_writable_data(const struct module_layout *, int (*)(unsigned long, int));
3977:	static const char *get_ksymbol(struct module *, unsigned long, unsigned long *, unsigned long *);
2537:	static char *get_modinfo(struct load_info *, const char *);
2401:	static long get_offset(struct module *, unsigned int *, unsigned int, Elf64_Shdr *, Elf64_Shdr *);
3357:	static struct module *layout_and_allocate(struct load_info *, int);
3708:	static int load_module(struct load_info *, const char *, int);
4237:	static void *m_next(struct seq_file *, void *, loff_t *);
4247:	static int m_show(struct seq_file *, void *);
4231:	static void *m_start(struct seq_file *, loff_t *);
4242:	static void m_stop(struct seq_file *, void *);
4135:	static unsigned long mod_find_symname(struct module *, const char *);
1764:	static void mod_kobject_put(struct module *);
1888:	static void mod_sysfs_teardown(struct module *);
795:	static int modinfo_srcversion_exists(struct module *);
794:	static int modinfo_version_exists(struct module *);
4206:	static char *module_flags(struct module *, char *);
1175:	static size_t module_flags_taint(struct module *, char *);
1568:	static ssize_t module_notes_read(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
1746:	static void module_remove_modinfo_attrs(struct module *, int);
1474:	static ssize_t module_sect_show(struct module_attribute *, struct module_kobject *, char *);
885:	static void module_unload_free(struct module *);
4297:	static int modules_open(struct inode *, struct file *);
4316:	static int proc_modules_init(void);
1391:	static const struct kernel_symbol *resolve_symbol(struct module *, const struct load_info *, const char *, char *);
795:	static void setup_modinfo_srcversion(struct module *, const char *);
794:	static void setup_modinfo_version(struct module *, const char *);
1225:	static ssize_t show_coresize(struct module_attribute *, struct module_kobject *, char *);
1234:	static ssize_t show_initsize(struct module_attribute *, struct module_kobject *, char *);
1188:	static ssize_t show_initstate(struct module_attribute *, struct module_kobject *, char *);
795:	static ssize_t show_modinfo_srcversion(struct module_attribute *, struct module_kobject *, char *);
794:	static ssize_t show_modinfo_version(struct module_attribute *, struct module_kobject *, char *);
1099:	static ssize_t show_refcnt(struct module_attribute *, struct module_kobject *, char *);
1243:	static ssize_t show_taint(struct module_attribute *, struct module_kobject *, char *);
1212:	static ssize_t store_uevent(struct module_attribute *, struct module_kobject *, const char *, size_t);
917:	static int try_release_module_ref(struct module *);
1272:	static int try_to_force_load(struct module *, const char *);
3688:	static int unknown_module_param_cb(char *, char *, const char *, void *);

File kernel/module_signing.c:
48:	int mod_verify_sig(const void *, struct load_info *);

File kernel/notifier.c:
181:	int __atomic_notifier_call_chain(struct atomic_notifier_head *, unsigned long, void *, int, int *);
309:	int __blocking_notifier_call_chain(struct blocking_notifier_head *, unsigned long, void *, int, int *);
395:	int __raw_notifier_call_chain(struct raw_notifier_head *, unsigned long, void *, int, int *);
495:	int __srcu_notifier_call_chain(struct srcu_notifier_head *, unsigned long, void *, int, int *);
195:	int atomic_notifier_call_chain(struct atomic_notifier_head *, unsigned long, void *);
126:	int atomic_notifier_chain_register(struct atomic_notifier_head *, struct notifier_block *);
148:	int atomic_notifier_chain_unregister(struct atomic_notifier_head *, struct notifier_block *);
330:	int blocking_notifier_call_chain(struct blocking_notifier_head *, unsigned long, void *);
249:	int blocking_notifier_chain_cond_register(struct blocking_notifier_head *, struct notifier_block *);
218:	int blocking_notifier_chain_register(struct blocking_notifier_head *, struct notifier_block *);
271:	int blocking_notifier_chain_unregister(struct blocking_notifier_head *, struct notifier_block *);
541:	int notify_die(enum die_val, const char *, struct pt_regs *, long, int, int);
403:	int raw_notifier_call_chain(struct raw_notifier_head *, unsigned long, void *);
352:	int raw_notifier_chain_register(struct raw_notifier_head *, struct notifier_block *);
369:	int raw_notifier_chain_unregister(struct raw_notifier_head *, struct notifier_block *);
558:	int register_die_notifier(struct notifier_block *);
528:	void srcu_init_notifier_head(struct srcu_notifier_head *);
509:	int srcu_notifier_call_chain(struct srcu_notifier_head *, unsigned long, void *);
426:	int srcu_notifier_chain_register(struct srcu_notifier_head *, struct notifier_block *);
456:	int srcu_notifier_chain_unregister(struct srcu_notifier_head *, struct notifier_block *);
565:	int unregister_die_notifier(struct notifier_block *);
79:	static int notifier_call_chain(struct notifier_block **, unsigned long, void *, int, int *);
21:	static int notifier_chain_register(struct notifier_block *, struct notifier_block **);

File kernel/nsproxy.c:
237:	long __ia32_sys_setns(const struct pt_regs *);
237:	long __x64_sys_setns(const struct pt_regs *);
138:	int copy_namespaces(unsigned long, struct task_struct *);
232:	void exit_task_namespaces(struct task_struct *);
173:	void free_nsproxy(struct nsproxy *);
273:	int nsproxy_cache_init(void);
217:	void switch_task_namespaces(struct task_struct *, struct nsproxy *);
192:	int unshare_nsproxy_namespaces(unsigned long, struct nsproxy **, struct cred *, struct fs_struct *);
64:	static struct nsproxy *create_new_namespaces(unsigned long, struct task_struct *, struct user_namespace *, struct fs_struct *);

File kernel/padata.c:
988:	struct padata_instance *padata_alloc_possible(struct workqueue_struct *);
106:	int padata_do_parallel(struct padata_instance *, struct padata_priv *, int);
325:	void padata_do_serial(struct padata_priv *);
1000:	void padata_free(struct padata_instance *);
512:	int padata_register_cpumask_notifier(struct padata_instance *, struct notifier_block *);
716:	int padata_remove_cpu(struct padata_instance *, int, int);
592:	int padata_set_cpumask(struct padata_instance *, int, cpumask_var_t);
629:	int padata_start(struct padata_instance *);
651:	void padata_stop(struct padata_instance *);
527:	int padata_unregister_cpumask_notifier(struct padata_instance *, struct notifier_block *);
681:	static int __padata_remove_cpu(struct padata_instance *, int);
273:	static void invoke_padata_reorder(struct work_struct *);
410:	static struct parallel_data *padata_alloc_pd(struct padata_instance *, const struct cpumask *, const struct cpumask *);
746:	static int padata_cpu_online(unsigned int, struct hlist_node *);
761:	static int padata_cpu_prep_down(unsigned int, struct hlist_node *);
1022:	static void padata_driver_exit(void);
1008:	static int padata_driver_init(void);
452:	static void padata_free_pd(struct parallel_data *);
67:	static void padata_parallel_worker(struct work_struct *);
204:	static void padata_reorder(struct parallel_data *);
477:	static void padata_replace(struct padata_instance *, struct parallel_data *);
283:	static void padata_serial_worker(struct work_struct *);
797:	static void padata_sysfs_release(struct kobject *);
876:	static ssize_t padata_sysfs_show(struct kobject *, struct attribute *, char *);
891:	static ssize_t padata_sysfs_store(struct kobject *, struct attribute *, const char *, size_t);
538:	static bool padata_validate_cpumask(const struct cpumask *, struct padata_instance *);
810:	static ssize_t show_cpumask(struct padata_instance *, struct attribute *, char *);
828:	static ssize_t store_cpumask(struct padata_instance *, struct attribute *, const char *, size_t);

File kernel/panic.c:
691:	void __stack_chk_fail(void);
568:	void __warn(const char *, int, void *, unsigned int, struct pt_regs *, struct warn_args *);
645:	void __warn_printk(const char *, ...);
441:	void add_taint(unsigned int, enum lockdep_ok);
93:	void crash_smp_send_stop(void);
428:	unsigned long get_taint(void);
121:	void nmi_panic(struct pt_regs *, const char *);
82:	void nmi_panic_self_stop(struct pt_regs *);
522:	void oops_enter(void);
556:	void oops_exit(void);
503:	int oops_may_print(void);
161:	void panic(const char *, ...);
72:	void panic_smp_self_stop(void);
546:	void print_oops_end_marker(void);
399:	const char *print_tainted(void);
701:	void refcount_error_report(struct pt_regs *, const char *);
422:	int test_taint(unsigned int);
669:	static int clear_warn_once_fops_open(struct inode *, struct file *);
662:	static int clear_warn_once_set(void *, u64);
464:	static void do_oops_enter_exit(void);
535:	static int init_oops_id(void);
60:	static long no_blink(int);
717:	static int oops_setup(char *);
674:	static int register_warn_debugfs(void);

File kernel/params.c:
837:	ssize_t __modver_version_show(struct module_attribute *, struct module_kobject *, char *);
734:	void destroy_params(const struct kernel_param *, unsigned int);
584:	void kernel_param_lock(struct module *);
589:	void kernel_param_unlock(struct module *);
723:	void module_param_sysfs_remove(struct module *);
688:	int module_param_sysfs_setup(struct module *, const struct kernel_param *, unsigned int);
277:	void param_free_charp(void *);
301:	int param_get_bool(char *, const struct kernel_param *);
239:	int param_get_byte(char *, const struct kernel_param *);
271:	int param_get_charp(char *, const struct kernel_param *);
242:	int param_get_int(char *, const struct kernel_param *);
361:	int param_get_invbool(char *, const struct kernel_param *);
244:	int param_get_long(char *, const struct kernel_param *);
240:	int param_get_short(char *, const struct kernel_param *);
508:	int param_get_string(char *, const struct kernel_param *);
243:	int param_get_uint(char *, const struct kernel_param *);
246:	int param_get_ullong(char *, const struct kernel_param *);
245:	int param_get_ulong(char *, const struct kernel_param *);
241:	int param_get_ushort(char *, const struct kernel_param *);
373:	int param_set_bint(const char *, const struct kernel_param *);
291:	int param_set_bool(const char *, const struct kernel_param *);
315:	int param_set_bool_enable_only(const char *, const struct kernel_param *);
239:	int param_set_byte(const char *, const struct kernel_param *);
248:	int param_set_charp(const char *, const struct kernel_param *);
494:	int param_set_copystring(const char *, const struct kernel_param *);
242:	int param_set_int(const char *, const struct kernel_param *);
347:	int param_set_invbool(const char *, const struct kernel_param *);
244:	int param_set_long(const char *, const struct kernel_param *);
240:	int param_set_short(const char *, const struct kernel_param *);
243:	int param_set_uint(const char *, const struct kernel_param *);
245:	int param_set_ulong(const char *, const struct kernel_param *);
241:	int param_set_ushort(const char *, const struct kernel_param *);
106:	bool parameq(const char *, const char *);
95:	bool parameqn(const char *, const char *, size_t);
164:	char *parse_args(const char *, char *, const struct kernel_param *, unsigned int, s16, s16, void *, int (*)(char *, char *, const char *, void *));
607:	static int add_sysfs_param(const struct kernel_param *, const char *, struct module_kobject *);
671:	static void free_module_param_attrs(struct module_kobject *);
743:	static struct module_kobject *locate_module_kobject(const char *);
73:	static void maybe_kfree_parameter(void *);
870:	static ssize_t module_attr_show(struct kobject *, struct attribute *, char *);
889:	static ssize_t module_attr_store(struct kobject *, struct attribute *, const char *, size_t);
929:	static void module_kobj_release(struct kobject *);
477:	static void param_array_free(void *);
456:	static int param_array_get(char *, const struct kernel_param *);
446:	static int param_array_set(const char *, const struct kernel_param *);
541:	static ssize_t param_attr_show(struct module_attribute *, struct module_kobject *, char *);
557:	static ssize_t param_attr_store(struct module_attribute *, struct module_kobject *, const char *, size_t);
943:	static int param_sysfs_init(void);
913:	static int uevent_filter(struct kset *, struct kobject *);

File kernel/pid.c:
449:	pid_t __task_pid_nr_ns(struct task_struct *, enum pid_type, struct pid_namespace *);
162:	struct pid *alloc_pid(struct pid_namespace *);
306:	void attach_pid(struct task_struct *, enum pid_type);
336:	void change_pid(struct task_struct *, enum pid_type, struct pid *);
331:	void detach_pid(struct task_struct *, enum pid_type);
277:	void disable_pid_allocation(struct pid_namespace *);
476:	struct pid *find_ge_pid(int, struct pid_namespace *);
417:	struct pid *find_get_pid(pid_t);
381:	struct task_struct *find_get_task_by_vpid(pid_t);
284:	struct pid *find_pid_ns(int, struct pid_namespace *);
369:	struct task_struct *find_task_by_pid_ns(pid_t, struct pid_namespace *);
376:	struct task_struct *find_task_by_vpid(pid_t);
290:	struct pid *find_vpid(int);
126:	void free_pid(struct pid *);
405:	struct task_struct *get_pid_task(struct pid *, enum pid_type);
395:	struct pid *get_task_pid(struct task_struct *, enum pid_type);
507:	void pid_idr_init(void);
429:	pid_t pid_nr_ns(struct pid *, struct pid_namespace *);
352:	struct task_struct *pid_task(struct pid *, enum pid_type);
443:	pid_t pid_vnr(struct pid *);
104:	void put_pid(struct pid *);
465:	struct pid_namespace *task_active_pid_ns(struct task_struct *);
344:	void transfer_pid(struct task_struct *, struct task_struct *, enum pid_type);
312:	static void __change_pid(struct task_struct *, enum pid_type, struct pid *);
120:	static void delayed_put_pid(struct callback_head *);
481:	static int proc_dointvec_pidmax(struct ctl_table *, int, void *, size_t *, loff_t *);

File kernel/pid_namespace.c:
151:	struct pid_namespace *copy_pid_ns(unsigned long, struct user_namespace *, struct pid_namespace *);
169:	void put_pid_ns(struct pid_namespace *);
311:	int reboot_pid_ns(struct pid_namespace *, int);
182:	void zap_pid_ns_processes(struct pid_namespace *);
133:	static void delayed_free_pidns(struct callback_head *);
143:	static void destroy_pid_namespace(struct pid_namespace *);
461:	static int pid_namespaces_init(void);
268:	static int pid_ns_ctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
358:	static struct ns_common *pidns_for_children_get(struct task_struct *);
345:	static struct ns_common *pidns_get(struct task_struct *);
417:	static struct ns_common *pidns_get_parent(struct ns_common *);
386:	static int pidns_install(struct nsproxy *, struct ns_common *);
435:	static struct user_namespace *pidns_owner(struct ns_common *);
381:	static void pidns_put(struct ns_common *);
62:	static void proc_cleanup_work(struct work_struct *);

File kernel/power/console.c:
130:	void pm_prepare_console(void);
143:	void pm_restore_console(void);
46:	void pm_vt_switch_required(struct device *, bool);
78:	void pm_vt_switch_unregister(struct device *);
107:	static bool pm_vt_switch(void);

File kernel/power/hibernate.c:
270:	int arch_resume_nosmt(void);
705:	int hibernate(void);
436:	int hibernate_resume_nonboot_cpu_disable(void);
71:	bool hibernation_available(void);
552:	int hibernation_platform_enter(void);
525:	int hibernation_restore(int);
80:	void hibernation_set_ops(const struct platform_hibernation_ops *);
361:	int hibernation_snapshot(int);
249:	void swsusp_show_speed(ktime_t, ktime_t, unsigned int, char *);
101:	bool system_entering_hibernation(void);
110:	bool system_in_hibernation(void);
971:	static ssize_t disk_show(struct kobject *, struct kobj_attribute *, char *);
1006:	static ssize_t disk_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
1204:	static int hibernate_setup(char *);
117:	static void hibernation_debug_sleep(void);
1116:	static ssize_t image_size_show(struct kobject *, struct kobj_attribute *, char *);
1122:	static ssize_t image_size_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
676:	static int load_image_and_restore(void);
1241:	static int nohibernate_setup(char *);
1220:	static int noresume_setup(char *);
1174:	static int pm_disk_init(void);
1137:	static ssize_t reserved_size_show(struct kobject *, struct kobj_attribute *, char *);
1143:	static ssize_t reserved_size_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
1191:	static int resume_offset_setup(char *);
1093:	static ssize_t resume_offset_show(struct kobject *, struct kobj_attribute *, char *);
1099:	static ssize_t resume_offset_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
1182:	static int resume_setup(char *);
1057:	static ssize_t resume_show(struct kobject *, struct kobj_attribute *, char *);
1064:	static ssize_t resume_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
1232:	static int resumedelay_setup(char *);
1226:	static int resumewait_setup(char *);
816:	static int software_resume(void);

File kernel/power/main.c:
70:	int __pm_notifier_call_chain(unsigned long, int, int *);
427:	void __pm_pr_dbg(bool, const char *, ...);
24:	void lock_system_sleep(void);
79:	int pm_notifier_call_chain(unsigned long);
58:	int register_pm_notifier(struct notifier_block *);
31:	void unlock_system_sleep(void);
64:	int unregister_pm_notifier(struct notifier_block *);
111:	static ssize_t mem_sleep_show(struct kobject *, struct kobj_attribute *, char *);
153:	static ssize_t mem_sleep_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
87:	static ssize_t pm_async_show(struct kobject *, struct kobj_attribute *, char *);
93:	static ssize_t pm_async_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
395:	static ssize_t pm_debug_messages_show(struct kobject *, struct kobj_attribute *, char *);
401:	static ssize_t pm_debug_messages_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
334:	static int pm_debugfs_init(void);
737:	static ssize_t pm_freeze_timeout_show(struct kobject *, struct kobj_attribute *, char *);
743:	static ssize_t pm_freeze_timeout_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
806:	static int pm_init(void);
355:	static ssize_t pm_print_times_show(struct kobject *, struct kobj_attribute *, char *);
361:	static ssize_t pm_print_times_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
194:	static ssize_t pm_test_show(struct kobject *, struct kobj_attribute *, char *);
215:	static ssize_t pm_test_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
384:	static ssize_t pm_wakeup_irq_show(struct kobject *, struct kobj_attribute *, char *);
465:	static ssize_t state_show(struct kobject *, struct kobj_attribute *, char *);
512:	static ssize_t state_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
322:	static int suspend_stats_open(struct inode *, struct file *);
266:	static int suspend_stats_show(struct seq_file *, void *);
575:	static ssize_t wakeup_count_show(struct kobject *, struct kobj_attribute *, char *);
585:	static ssize_t wakeup_count_store(struct kobject *, struct kobj_attribute *, const char *, size_t);

File kernel/power/poweroff.c:
20:	static void do_poweroff(struct work_struct *);
27:	static void handle_poweroff(int);
40:	static int pm_sysrq_init(void);

File kernel/power/process.c:
170:	int freeze_kernel_threads(void);
123:	int freeze_processes(void);
227:	void thaw_kernel_threads(void);
189:	void thaw_processes(void);
31:	static int try_to_freeze_tasks(bool);

File kernel/power/qos.c:
557:	int pm_qos_add_notifier(int, struct notifier_block *);
447:	void pm_qos_add_request(struct pm_qos_request *, int, s32);
177:	s32 pm_qos_read_value(struct pm_qos_constraints *);
577:	int pm_qos_remove_notifier(int, struct notifier_block *);
528:	void pm_qos_remove_request(struct pm_qos_request *);
396:	int pm_qos_request(int);
402:	int pm_qos_request_active(struct pm_qos_request *);
353:	bool pm_qos_update_flags(struct pm_qos_flags *, struct pm_qos_flags_request *, enum pm_qos_req_action, s32);
475:	void pm_qos_update_request(struct pm_qos_request *, s32);
499:	void pm_qos_update_request_timeout(struct pm_qos_request *, s32, unsigned long);
272:	int pm_qos_update_target(struct pm_qos_constraints *, struct plist_node *, enum pm_qos_req_action, int);
248:	static int pm_qos_dbg_open(struct inode *, struct file *);
187:	static int pm_qos_dbg_show_requests(struct seq_file *, void *);
330:	static void pm_qos_flags_remove_req(struct pm_qos_flags *, struct pm_qos_flags_request *);
149:	static int pm_qos_get_value(struct pm_qos_constraints *);
690:	static int pm_qos_power_init(void);
617:	static int pm_qos_power_open(struct inode *, struct file *);
647:	static ssize_t pm_qos_power_read(struct file *, char *, size_t, loff_t *);
635:	static int pm_qos_power_release(struct inode *, struct file *);
666:	static ssize_t pm_qos_power_write(struct file *, const char *, size_t, loff_t *);
425:	static void pm_qos_work_fn(struct work_struct *);

File kernel/power/snapshot.c:
950:	void __register_nosave_region(unsigned long, unsigned long, int);
1146:	void clear_free_pages(void);
1077:	int create_basic_memory_bitmaps(void);
49:	void enable_restore_image_protection(void);
1127:	void free_basic_memory_bitmaps(void);
189:	unsigned long get_safe_page(gfp_t);
106:	void hibernate_image_size_init(void);
1692:	int hibernate_preallocate_memory(void);
93:	void hibernate_reserved_size_init(void);
1176:	unsigned int snapshot_additional_pages(struct zone *);
2034:	unsigned long snapshot_get_image_size(void);
2675:	int snapshot_image_loaded(struct snapshot_handle *);
2087:	int snapshot_read_next(struct snapshot_handle *);
2661:	void snapshot_write_finalize(struct snapshot_handle *);
2583:	int snapshot_write_next(struct snapshot_handle *);
1457:	void swsusp_free(void);
1022:	int swsusp_page_is_forbidden(struct page *);
1967:	int swsusp_save(void);
998:	void swsusp_set_page_free(struct page *);
1010:	void swsusp_unset_page_free(struct page *);
177:	static void *__get_safe_page(gfp_t);
194:	static struct page *alloc_image_page(gfp_t);
404:	static struct rtree_node *alloc_rtree_node(gfp_t, int, struct chain_allocator *, struct list_head *);
277:	static void *chain_alloc(struct chain_allocator *, unsigned int);
1308:	static unsigned int count_data_pages(void);
2134:	static void duplicate_memory_bitmap(struct memory_bitmap *, struct memory_bitmap *);
572:	static void free_mem_extents(struct list_head *);
538:	static void free_zone_bm_rtree(struct mem_zone_bm_rtree *, int);
2530:	static void *get_buffer(struct chain_allocator *, struct memory_bitmap *);
158:	static void *get_image_page(gfp_t, int);
799:	static void memory_bm_clear_bit(struct memory_bitmap *, unsigned long);
810:	static void memory_bm_clear_current(struct memory_bitmap *, struct memory_bitmap *);
645:	static int memory_bm_create(struct memory_bitmap *, gfp_t, int);
709:	static int memory_bm_find_bit(struct memory_bitmap *, unsigned long, void **, unsigned int *);
688:	static void memory_bm_free(struct memory_bitmap *, int);
884:	static unsigned long memory_bm_next_pfn(struct memory_bitmap *);
775:	static void memory_bm_set_bit(struct memory_bitmap *, unsigned long);
818:	static int memory_bm_test_bit(struct memory_bitmap *, unsigned long);
1513:	static unsigned long preallocate_image_pages(unsigned long, gfp_t);
1279:	static struct page *saveable_page(struct zone *, unsigned long);

File kernel/power/suspend.c:
379:	void arch_suspend_disable_irqs(void);
385:	void arch_suspend_enable_irqs(void);
185:	void pm_states_init(void);
613:	int pm_suspend(suspend_state_t);
66:	bool pm_suspend_via_s2idle(void);
72:	void s2idle_set_ops(const struct platform_s2idle_ops *);
162:	void s2idle_wake(void);
482:	int suspend_devices_and_enter(suspend_state_t);
216:	void suspend_set_ops(const struct platform_suspend_ops *);
245:	int suspend_valid_only_mem(suspend_state_t);
197:	static int mem_sleep_default_setup(char *);
329:	static int suspend_test(int);

File kernel/power/swap.c:
178:	sector_t alloc_swapdev_block(int);
198:	void free_all_swap_pages(int);
1512:	int swsusp_check(void);
1557:	void swsusp_close(fmode_t);
1477:	int swsusp_read(unsigned int *);
215:	int swsusp_swap_in_use(void);
1572:	int swsusp_unmark(void);
903:	int swsusp_write(unsigned int);
593:	static int crc32_threadfn(void *);
240:	static void hib_end_io(struct bio *);
265:	static int hib_submit_io(int, int, unsigned long, void *, struct hib_bio_batch *);
297:	static blk_status_t hib_wait_io(struct hib_bio_batch *);
1052:	static int load_image(struct swap_map_handle *, struct snapshot_handle *, unsigned int);
1157:	static int load_image_lzo(struct swap_map_handle *, struct snapshot_handle *, unsigned int);
637:	static int lzo_compress_threadfn(void *);
1122:	static int lzo_decompress_threadfn(void *);
949:	static void release_swap_reader(struct swap_map_handle *, struct swap_map_handle *);
532:	static int save_image(struct swap_map_handle *, struct snapshot_handle *, unsigned int);
668:	static int save_image_lzo(struct swap_map_handle *, struct snapshot_handle *, unsigned int);
1010:	static int swap_read_page(struct swap_map_handle *, void *, struct hib_bio_batch *);
442:	static int swap_write_page(struct swap_map_handle *, void *, struct hib_bio_batch *);
1597:	static int swsusp_header_init(void);
370:	static int write_page(void *, sector_t, struct hib_bio_batch *);

File kernel/power/user.c:
410:	static long snapshot_compat_ioctl(struct file *, unsigned int, unsigned long);
480:	static int snapshot_device_init(void);
204:	static long snapshot_ioctl(struct file *, unsigned int, unsigned long);
47:	static int snapshot_open(struct inode *, struct file *);
137:	static ssize_t snapshot_read(struct file *, char *, size_t, loff_t *);
112:	static int snapshot_release(struct inode *, struct file *);
170:	static ssize_t snapshot_write(struct file *, const char *, size_t, loff_t *);

File kernel/printk/printk.c:
1600:	long __ia32_sys_syslog(const struct pt_regs *);
3023:	int __printk_ratelimit(const char *);
1600:	long __x64_sys_syslog(const struct pt_regs *);
2225:	int add_preferred_console(char *, int, char *);
2528:	void console_conditional_schedule(void);
2580:	struct tty_driver *console_device(int *);
2562:	void console_flush_on_panic(void);
2868:	void console_init(void);
2295:	void console_lock(void);
2610:	void console_start(struct console *);
2602:	void console_stop(struct console *);
2315:	int console_trylock(void);
2535:	void console_unblank(void);
2377:	void console_unlock(void);
2982:	void defer_console_output(void);
156:	int devkmsg_sysctl_set_loglvl(struct ctl_table *, int, void *, size_t *, loff_t *);
1485:	int do_syslog(int, char *, int, int);
2107:	void early_printk(const char *, ...);
2329:	int is_console_locked(void);
3120:	void kmsg_dump(enum kmsg_dump_reason);
3253:	bool kmsg_dump_get_buffer(struct kmsg_dumper *, bool, char *, size_t, size_t *);
3220:	bool kmsg_dump_get_line(struct kmsg_dumper *, bool, char *, size_t, size_t *);
3171:	bool kmsg_dump_get_line_nolock(struct kmsg_dumper *, bool, char *, size_t, size_t *);
3062:	int kmsg_dump_register(struct kmsg_dumper *);
3353:	void kmsg_dump_rewind(struct kmsg_dumper *);
3337:	void kmsg_dump_rewind_nolock(struct kmsg_dumper *);
3091:	int kmsg_dump_unregister(struct kmsg_dumper *);
460:	char *log_buf_addr_get(void);
467:	u32 log_buf_len_get(void);
1034:	void log_buf_vmcoreinfo_setup(void);
2057:	int printk(const char *, ...);
3003:	int printk_deferred(const char *, ...);
2004:	int printk_emit(int, int, const char *, size_t, const char *, ...);
454:	bool printk_percpu_data_ready(void);
3038:	bool printk_timed_ratelimit(unsigned long *, unsigned int);
2649:	void register_console(struct console *);
2259:	void resume_console(void);
1127:	void setup_log_buf(int);
2249:	void suspend_console(void);
2816:	int unregister_console(struct console *);
1998:	int vprintk(const char *, struct __va_list_tag *);
2019:	int vprintk_default(const char *, struct __va_list_tag *);
2993:	int vprintk_deferred(const char *, struct __va_list_tag *);
1950:	int vprintk_emit(int, int, const char *, size_t, const char *, struct __va_list_tag *);
1897:	int vprintk_store(int, int, const char *, size_t, const char *, struct __va_list_tag *);
2969:	void wake_up_klogd(void);
1620:	void zap_locks(void);
2124:	static int __add_preferred_console(char *, int, char *, char *);
110:	static int __control_devkmsg(char *);
216:	static int __down_trylock_console_sem(unsigned long);
237:	static void __up_console_sem(unsigned long);
1202:	static int boot_delay_setup(char *);
674:	static int check_syslog_permissions(int, int);
2277:	static int console_cpu_notify(unsigned int);
2155:	static int console_msg_format_setup(char *);
2169:	static int console_setup(char *);
2233:	static int console_suspend_disable(char *);
1831:	static bool cont_add(int, int, enum log_flags, const char *, size_t);
1821:	static void cont_flush(void);
128:	static int control_devkmsg(char *);
907:	static loff_t devkmsg_llseek(struct file *, loff_t, int);
968:	static int devkmsg_open(struct inode *, struct file *);
945:	static __poll_t devkmsg_poll(struct file *, poll_table *);
841:	static ssize_t devkmsg_read(struct file *, char *, size_t, loff_t *);
1002:	static int devkmsg_release(struct inode *, struct file *);
778:	static ssize_t devkmsg_write(struct kiocb *, struct iov_iter *);
1179:	static int ignore_loglevel_setup(char *);
2620:	static int keep_bootcon_setup(char *);
1071:	static int log_buf_len_setup(char *);
1057:	static void log_buf_len_update(u64);
542:	static int log_make_free_space(u32);
602:	static int log_store(int, int, enum log_flags, u64, const char *, u16, const char *, u16);
721:	static ssize_t msg_print_ext_body(char *, size_t, char *, size_t, char *, size_t);
1291:	static size_t msg_print_text(const struct printk_log *, bool, bool, char *, size_t);
1266:	static size_t print_prefix(const struct printk_log *, bool, bool, char *);
2906:	static int printk_late_init(void);
2950:	static void wake_up_klogd_work_func(struct irq_work *);

File kernel/printk/printk_safe.c:
337:	void printk_nmi_direct_enter(void);
343:	void printk_nmi_direct_exit(void);
317:	void printk_nmi_enter(void);
322:	void printk_nmi_exit(void);
370:	void printk_safe_enter(void);
377:	void printk_safe_exit(void);
255:	void printk_safe_flush(void);
277:	void printk_safe_flush_on_panic(void);
411:	void printk_safe_init(void);
383:	int vprintk_func(const char *, struct __va_list_tag *);
193:	static void __printk_safe_flush(struct irq_work *);
81:	static int printk_safe_log_store(struct printk_safe_seq_buf *, const char *, struct __va_list_tag *);

File kernel/profile.c:
526:	int create_proc_profile(void);
453:	void create_prof_cpu_mask(void);
170:	int profile_event_register(enum profile_type, struct notifier_block *);
189:	int profile_event_unregister(enum profile_type, struct notifier_block *);
146:	int profile_handoff_task(struct task_struct *);
394:	void profile_hits(int, void *, unsigned int);
103:	int profile_init(void);
153:	void profile_munmap(unsigned long);
56:	int profile_setup(char *);
141:	void profile_task_exit(struct task_struct *);
402:	void profile_tick(int);
158:	int task_handoff_register(struct notifier_block *);
164:	int task_handoff_unregister(struct notifier_block *);
240:	static void __profile_flip_buffers(void *);
285:	static void do_profile_hits(void *, unsigned int, int);
422:	static int prof_cpu_mask_proc_open(struct inode *, struct file *);
416:	static int prof_cpu_mask_proc_show(struct seq_file *, void *);
427:	static ssize_t prof_cpu_mask_proc_write(struct file *, const char *, size_t, loff_t *);
334:	static int profile_dead_cpu(unsigned int);
374:	static int profile_online_cpu(unsigned int);
352:	static int profile_prepare_cpu(unsigned int);
466:	static ssize_t read_profile(struct file *, char *, size_t, loff_t *);
499:	static ssize_t write_profile(struct file *, const char *, size_t, loff_t *);

File kernel/ptrace.c:
1324:	long __ia32_compat_sys_ptrace(const struct pt_regs *);
1157:	long __ia32_sys_ptrace(const struct pt_regs *);
64:	void __ptrace_link(struct task_struct *, struct task_struct *, const struct cred *);
112:	void __ptrace_unlink(struct task_struct *);
1157:	long __x64_sys_ptrace(const struct pt_regs *);
1226:	int compat_ptrace_request(struct task_struct *, compat_long_t, compat_ulong_t, compat_ulong_t);
585:	void exit_ptrace(struct task_struct *, struct list_head *);
1202:	int generic_ptrace_peekdata(struct task_struct *, unsigned long, unsigned long);
1214:	int generic_ptrace_pokedata(struct task_struct *, unsigned long, unsigned long);
39:	int ptrace_access_vm(struct task_struct *, unsigned long, void *, int, unsigned int);
359:	bool ptrace_may_access(struct task_struct *, unsigned int);
598:	int ptrace_readdata(struct task_struct *, unsigned long, char *, int);
930:	int ptrace_request(struct task_struct *, long, unsigned long, unsigned long);
624:	int ptrace_writedata(struct task_struct *, char *, unsigned long, int);
529:	static bool __ptrace_detach(struct task_struct *, struct task_struct *);
286:	static int __ptrace_may_access(struct task_struct *, unsigned int);
368:	static int ptrace_attach(struct task_struct *, long, unsigned long, unsigned long);
239:	static int ptrace_check_attach(struct task_struct *, bool);
679:	static int ptrace_getsiginfo(struct task_struct *, siginfo_t *);
277:	static int ptrace_has_cap(struct user_namespace *, unsigned int);
711:	static int ptrace_peek_siginfo(struct task_struct *, unsigned long, unsigned long);
884:	static int ptrace_regset(struct task_struct *, int, unsigned int, struct iovec *);
811:	static int ptrace_resume(struct task_struct *, long, unsigned long);
695:	static int ptrace_setsiginfo(struct task_struct *, const siginfo_t *);
478:	static int ptrace_traceme(void);
201:	static void ptrace_unfreeze_traced(struct task_struct *);

File kernel/range.c:
11:	int add_range(struct range *, int, int, u64, u64);
28:	int add_range_with_merge(struct range *, int, int, u64, u64);
125:	int clean_sort_range(struct range *, int);
160:	void sort_range(struct range *, int);
64:	void subtract_range(struct range *, int, u64, u64);
113:	static int cmp_range(const void *, const void *);

File kernel/rcu/rcu_segcblist.c:
46:	struct callback_head *rcu_cblist_dequeue(struct rcu_cblist *);
31:	void rcu_cblist_init(struct rcu_cblist *);
355:	bool rcu_segcblist_accelerate(struct rcu_segcblist *, unsigned long);
300:	void rcu_segcblist_advance(struct rcu_segcblist *, unsigned long);
80:	void rcu_segcblist_disable(struct rcu_segcblist *);
142:	void rcu_segcblist_enqueue(struct rcu_segcblist *, struct callback_head *, bool);
164:	bool rcu_segcblist_entrain(struct rcu_segcblist *, struct callback_head *, bool);
194:	void rcu_segcblist_extract_count(struct rcu_segcblist *, struct rcu_cblist *);
208:	void rcu_segcblist_extract_done_cbs(struct rcu_segcblist *, struct rcu_cblist *);
231:	void rcu_segcblist_extract_pend_cbs(struct rcu_segcblist *, struct rcu_cblist *);
112:	struct callback_head *rcu_segcblist_first_cb(struct rcu_segcblist *);
126:	struct callback_head *rcu_segcblist_first_pend_cb(struct rcu_segcblist *);
63:	void rcu_segcblist_init(struct rcu_segcblist *);
249:	void rcu_segcblist_insert_count(struct rcu_segcblist *, struct rcu_cblist *);
263:	void rcu_segcblist_insert_done_cbs(struct rcu_segcblist *, struct rcu_cblist *);
285:	void rcu_segcblist_insert_pend_cbs(struct rcu_segcblist *, struct rcu_cblist *);
413:	void rcu_segcblist_merge(struct rcu_segcblist *, struct rcu_segcblist *);
102:	bool rcu_segcblist_pend_cbs(struct rcu_segcblist *);
92:	bool rcu_segcblist_ready_cbs(struct rcu_segcblist *);

File kernel/rcu/srcutree.c:
855:	void __call_srcu(struct srcu_struct *, struct callback_head *, rcu_callback_t, bool);
411:	int __srcu_read_lock(struct srcu_struct *);
427:	void __srcu_read_unlock(struct srcu_struct *, int);
374:	void _cleanup_srcu_struct(struct srcu_struct *, bool);
915:	void call_srcu(struct srcu_struct *, struct callback_head *, rcu_callback_t);
219:	int init_srcu_struct(struct srcu_struct *);
1042:	void srcu_barrier(struct srcu_struct *);
1100:	unsigned long srcu_batches_completed(struct srcu_struct *);
475:	void srcu_offline_cpu(unsigned int);
470:	void srcu_online_cpu(unsigned int);
1272:	void srcu_torture_stats_print(struct srcu_struct *, char *, char *);
1261:	void srcutorture_get_gp_data(enum rcutorture_type, struct srcu_struct *, int *, unsigned long *);
1015:	void synchronize_srcu(struct srcu_struct *);
965:	void synchronize_srcu_expedited(struct srcu_struct *);
925:	static void __synchronize_srcu(struct srcu_struct *, bool);
236:	static void check_init_srcu_struct(struct srcu_struct *);
175:	static int init_srcu_struct_fields(struct srcu_struct *, bool);
1251:	static void process_srcu(struct work_struct *);
1027:	static void srcu_barrier_cb(struct callback_head *);
1311:	static int srcu_bootup_announce(void);
622:	static void srcu_funnel_exp_start(struct srcu_struct *, struct srcu_node *, unsigned long);
446:	static void srcu_gp_start(struct srcu_struct *);
1177:	static void srcu_invoke_callbacks(struct work_struct *);
485:	static bool srcu_queue_delayed_work_on(int, struct workqueue_struct *, struct delayed_work *, unsigned long);
343:	static bool srcu_readers_active(struct srcu_struct *);
1228:	static void srcu_reschedule(struct srcu_struct *, unsigned long);
718:	static bool try_check_zero(struct srcu_struct *, int, int);

File kernel/rcu/sync.c:
223:	void rcu_sync_dtor(struct rcu_sync *);
117:	void rcu_sync_enter(struct rcu_sync *);
96:	void rcu_sync_enter_start(struct rcu_sync *);
205:	void rcu_sync_exit(struct rcu_sync *);
80:	void rcu_sync_init(struct rcu_sync *, enum rcu_sync_type);
163:	static void rcu_sync_func(struct callback_head *);

File kernel/rcu/tree.c:
3081:	void call_rcu_bh(struct callback_head *, rcu_callback_t);
3053:	void call_rcu_sched(struct callback_head *, rcu_callback_t);
3230:	void cond_synchronize_rcu(unsigned long);
3205:	unsigned long get_state_synchronize_rcu(void);
3094:	void kfree_call_rcu(struct callback_head *, rcu_callback_t);
466:	void rcu_all_qs(void);
3507:	void rcu_barrier_bh(void);
614:	void rcu_bh_force_quiescent_state(void);
574:	unsigned long rcu_bh_get_gp_seq(void);
247:	void rcu_bh_qs(void);
2638:	void rcu_check_callbacks(int);
1570:	void rcu_cpu_stall_reset(void);
3734:	void rcu_cpu_starting(unsigned int);
346:	bool rcu_dynticks_curr_cpu_in_eqs(void);
357:	int rcu_dynticks_snap(struct rcu_dynticks *);
390:	bool rcu_eqs_special_set(int);
586:	unsigned long rcu_exp_batches_completed(void);
605:	void rcu_force_quiescent_state(void);
187:	int rcu_get_gp_kthreads_prio(void);
556:	unsigned long rcu_get_gp_seq(void);
748:	void rcu_idle_enter(void);
898:	void rcu_idle_exit(void);
4152:	void rcu_init(void);
985:	void rcu_irq_enter(void);
1003:	void rcu_irq_enter_irqson(void);
832:	void rcu_irq_exit(void);
850:	void rcu_irq_exit_irqson(void);
1020:	bool rcu_is_watching(void);
935:	void rcu_nmi_enter(void);
784:	void rcu_nmi_exit(void);
432:	void rcu_note_context_switch(bool);
3811:	void rcu_report_dead(unsigned int);
1038:	void rcu_request_urgent_qs_task(struct task_struct *);
210:	unsigned long rcu_rnp_online_cpus(struct rcu_node *);
231:	void rcu_sched_qs(void);
3957:	void rcu_scheduler_starting(void);
766:	void rcu_user_enter(void);
917:	void rcu_user_exit(void);
668:	void rcutorture_get_gp_data(enum rcutorture_type, int *, unsigned long *);
3710:	int rcutree_dead_cpu(unsigned int);
3698:	int rcutree_dying_cpu(unsigned int);
3866:	void rcutree_migrate_callbacks(int);
3674:	int rcutree_offline_cpu(unsigned int);
3647:	int rcutree_online_cpu(unsigned int);
3620:	int rcutree_prepare_cpu(unsigned int);
632:	void show_rcu_gp_kthreads(void);
3183:	void synchronize_rcu_bh(void);
3156:	void synchronize_sched(void);
2967:	static void __call_rcu(struct callback_head *, rcu_callback_t, struct rcu_state *, int, bool);
1823:	static bool __note_gp_changes(struct rcu_state *, struct rcu_node *, struct rcu_data *);
3420:	static void _rcu_barrier(struct rcu_state *);
1127:	static int dyntick_save_progress_counter(struct rcu_data *);
2694:	static void force_qs_rnp(struct rcu_state *, int (*)(struct rcu_data *));
2742:	static void force_quiescent_state(struct rcu_state *);
1866:	static void note_gp_changes(struct rcu_state *, struct rcu_data *);
508:	static int param_set_first_fqs_jiffies(const char *, const struct kernel_param *);
518:	static int param_set_next_fqs_jiffies(const char *, const struct kernel_param *);
1726:	static bool rcu_accelerate_cbs(struct rcu_state *, struct rcu_node *, struct rcu_data *);
1767:	static void rcu_accelerate_cbs_unlocked(struct rcu_state *, struct rcu_node *, struct rcu_data *);
1798:	static bool rcu_advance_cbs(struct rcu_state *, struct rcu_node *, struct rcu_data *);
3382:	static void rcu_barrier_callback(struct callback_head *);
3399:	static void rcu_barrier_func(void *);
1301:	static void rcu_check_gp_kthread_starvation(struct rcu_state *);
2497:	static void rcu_cleanup_dead_rnp(struct rcu_node *);
1330:	static void rcu_dump_cpu_stacks(struct rcu_state *);
301:	static void rcu_dynticks_eqs_exit(void);
709:	static void rcu_eqs_enter(bool);
2155:	static int rcu_gp_kthread(void *);
1704:	static void rcu_gp_kthread_wake(struct rcu_state *);
1886:	static void rcu_gp_slow(int, struct rcu_state *);
1165:	static int rcu_implicit_dynticks_qs(struct rcu_data *);
3969:	static void rcu_init_one(struct rcu_state *);
1144:	static void rcu_iw_handler(struct irq_work *);
416:	static void rcu_momentary_dyntick_idle(void);
3879:	static int rcu_pm_notify(struct notifier_block *, unsigned long, void *);
2872:	static void rcu_process_callbacks(struct softirq_action *);
2282:	static void rcu_report_qs_rnp(unsigned long, struct rcu_state *, struct rcu_node *, unsigned long, unsigned long);
3902:	static int rcu_spawn_gp_kthread(void);
1350:	static void rcu_stall_kick_kthreads(struct rcu_state *);
1602:	static bool rcu_start_this_gp(struct rcu_node *, unsigned long, struct rcu_data *, struct rcu_data *);

File kernel/rcu/tree_exp.h:
805:	void synchronize_rcu_expedited(void);
710:	void synchronize_sched_expedited(void);
651:	static void _synchronize_rcu_expedited(smp_call_func_t, struct rcu_state *);
593:	static void rcu_exp_wait_wake(struct rcu_state *, unsigned long);
245:	static void rcu_report_exp_cpu_mult(struct rcu_state *, struct rcu_node *, unsigned long, bool);
472:	static void sync_rcu_exp_select_cpus(struct rcu_state *, smp_call_func_t);
383:	static void sync_rcu_exp_select_node_cpus(struct work_struct *);
174:	static bool sync_rcu_preempt_exp_done_unlocked(struct rcu_node *);
341:	static void sync_sched_exp_handler(void *);
639:	static void wait_rcu_exp_gp(struct work_struct *);

File kernel/rcu/tree_plugin.h:
1011:	void exit_rcu(void);
994:	void rcu_barrier(void);
2393:	void rcu_init_nohz(void);
1903:	bool rcu_is_nocb_cpu(int);
1418:	int rcu_needs_cpu(u64, u64 *);
2020:	static void __call_rcu_nocb_enqueue(struct rcu_data *, struct callback_head *, struct callback_head **, int, int, unsigned long);
1914:	static void __wake_nocb_leader(struct rcu_data *, bool, unsigned long);
2358:	static void do_nocb_deferred_wakeup_common(struct rcu_data *);
2375:	static void do_nocb_deferred_wakeup_timer(struct timer_list *);
2568:	static bool init_nocb_callback_list(struct rcu_data *);
1875:	static int parse_rcu_nocb_poll(char *);
1781:	static void print_cpu_stall_info(struct rcu_state *, int);
2291:	static int rcu_nocb_kthread(void *);
1867:	static int rcu_nocb_setup(char *);
2500:	static void rcu_spawn_all_nocb_kthreads(int);
1953:	static void wake_nocb_leader_defer(struct rcu_data *, int, const char *);

File kernel/rcu/update.c:
335:	void __wait_rcu_gp(bool, int, call_rcu_func_t *, struct rcu_synchronize *);
433:	void do_trace_rcu_torture_read(const char *, struct callback_head *, unsigned long, unsigned long, unsigned long);
955:	void rcu_early_boot_tests(void);
188:	void rcu_end_inkernel_boot(void);
164:	void rcu_expedite_gp(void);
150:	bool rcu_gp_is_expedited(void);
134:	bool rcu_gp_is_normal(void);
460:	int rcu_jiffies_till_stall_check(void);
484:	void rcu_sysrq_end(void);
478:	void rcu_sysrq_start(void);
179:	void rcu_unexpedite_gp(void);
963:	void rcupdate_announce_bootup_oddness(void);
326:	void wakeme_after_rcu(struct callback_head *);
500:	static int check_cpu_stall_init(void);
490:	static int rcu_panic(struct notifier_block *, unsigned long, void *);
219:	static int rcu_set_runtime_mode(void);

File kernel/reboot.c:
307:	long __ia32_sys_reboot(const struct pt_regs *);
307:	long __x64_sys_reboot(const struct pt_regs *);
406:	void ctrl_alt_del(void);
112:	int devm_register_reboot_notifier(struct device *, struct notifier_block *);
210:	void do_kernel_restart(char *);
61:	void emergency_restart(void);
268:	void kernel_halt(void);
284:	void kernel_power_off(void);
241:	void kernel_restart(char *);
68:	void kernel_restart_prepare(char *);
215:	void migrate_to_reboot_cpu(void);
491:	void orderly_poweroff(bool);
512:	void orderly_reboot(void);
86:	int register_reboot_notifier(struct notifier_block *);
178:	int register_restart_handler(struct notifier_block *);
101:	int unregister_reboot_notifier(struct notifier_block *);
193:	int unregister_restart_handler(struct notifier_block *);
307:	static long __do_sys_reboot(int, int, unsigned int, void *);
396:	static void deferred_cad(struct work_struct *);
107:	static void devm_unregister_reboot_notifier(struct device *, void *);
477:	static void poweroff_work_func(struct work_struct *);
518:	static int reboot_setup(char *);
499:	static void reboot_work_func(struct work_struct *);
419:	static int run_cmd(const char *);

File kernel/relay.c:
256:	int relay_buf_full(struct rchan_buf *);
839:	void relay_close(struct rchan *);
872:	void relay_flush(struct rchan *);
654:	int relay_late_setup_files(struct rchan *, const char *, struct dentry *);
564:	struct rchan *relay_open(const char *, struct dentry *, size_t, size_t, struct rchan_callbacks *, void *);
523:	int relay_prepare_cpu(unsigned int);
388:	void relay_reset(struct rchan *);
813:	void relay_subbufs_consumed(struct rchan *, unsigned int, size_t);
746:	size_t relay_switch_subbuf(struct rchan_buf *, size_t);
352:	static void __relay_reset(struct rchan_buf *, unsigned int);
632:	static void __relay_set_buf_dentry(void *);
289:	static void buf_mapped_default_callback(struct rchan_buf *, struct file *);
305:	static struct dentry *create_buf_file_default_callback(const char *, struct dentry *, umode_t, struct rchan_buf *, int *);
42:	static vm_fault_t relay_buf_fault(struct vm_fault *);
494:	static void relay_close_buf(struct rchan_buf *);
416:	static struct dentry *relay_create_buf_file(struct rchan *, struct rchan_buf *, unsigned int);
208:	static void relay_destroy_buf(struct rchan_buf *);
197:	static void relay_destroy_channel(struct kref *);
916:	static int relay_file_mmap(struct file *, struct vm_area_struct *);
33:	static void relay_file_mmap_close(struct vm_area_struct *);
900:	static int relay_file_open(struct inode *, struct file *);
929:	static __poll_t relay_file_poll(struct file *, poll_table *);
1122:	static ssize_t relay_file_read(struct file *, char *, size_t, loff_t *);
965:	static void relay_file_read_consume(struct rchan_buf *, size_t, size_t);
954:	static int relay_file_release(struct inode *, struct file *);
1291:	static ssize_t relay_file_splice_read(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int);
445:	static struct rchan_buf *relay_open_buf(struct rchan *, unsigned int);
1192:	static void relay_page_release(struct splice_pipe_desc *, unsigned int);
1175:	static void relay_pipe_buf_release(struct pipe_inode_info *, struct pipe_buffer *);
233:	static void relay_remove_buf(struct kref *);
317:	static int remove_buf_file_default_callback(struct dentry *);
1199:	static ssize_t subbuf_splice_actor(struct pipe_inode_info *, size_t, int *, unsigned int, loff_t *, struct file *);
275:	static int subbuf_start_default_callback(struct rchan_buf *, void *, void *, size_t);
337:	static void wakeup_readers(struct irq_work *);

File kernel/resource.c:
1439:	void __devm_release_region(struct device *, struct resource *, resource_size_t, resource_size_t);
1413:	struct resource *__devm_request_region(struct device *, struct resource *, resource_size_t, resource_size_t, const char *);
1174:	void __release_region(struct resource *, resource_size_t, resource_size_t);
1106:	struct resource *__request_region(struct resource *, resource_size_t, resource_size_t, const char *, int);
965:	int adjust_resource(struct resource *, resource_size_t, resource_size_t);
702:	int allocate_resource(struct resource *, struct resource *, resource_size_t, resource_size_t, resource_size_t, resource_size_t, resource_size_t (*)(void *, const struct resource *, resource_size_t, resource_size_t), void *);
550:	void arch_remove_reservations(struct resource *);
1385:	void devm_release_resource(struct device *, struct resource *);
1347:	int devm_request_resource(struct device *, struct resource *, struct resource *);
849:	int insert_resource(struct resource *, struct resource *);
829:	struct resource *insert_resource_conflict(struct resource *, struct resource *);
866:	void insert_resource_expand_to_fit(struct resource *, struct resource *);
1550:	bool iomem_is_exclusive(u64);
1500:	int iomem_map_sanity_check(resource_size_t, unsigned long);
746:	struct resource *lookup_resource(struct resource *, resource_size_t);
492:	int page_is_ram(unsigned long);
518:	int region_intersects(resource_size_t, size_t, unsigned long, unsigned long);
264:	void release_child_resources(struct resource *);
1236:	int release_mem_region_adjustable(struct resource *, resource_size_t, resource_size_t);
309:	int release_resource(struct resource *);
907:	int remove_resource(struct resource *);
295:	int request_resource(struct resource *, struct resource *);
278:	struct resource *request_resource_conflict(struct resource *, struct resource *);
1038:	void reserve_region_with_split(struct resource *, resource_size_t, resource_size_t, const char *);
1073:	resource_size_t resource_alignment(struct resource *);
1590:	struct resource_entry *resource_list_create_entry(struct resource *, size_t);
1605:	void resource_list_free(struct list_head *);
409:	int walk_iomem_res_desc(unsigned long, unsigned long, u64, u64, void *, int (*)(struct resource *, void *));
436:	int walk_mem_res(u64, u64, void *, int (*)(struct resource *, void *));
455:	int walk_system_ram_range(unsigned long, unsigned long, void *, int (*)(unsigned long, unsigned long, void *));
423:	int walk_system_ram_res(u64, u64, void *, int (*)(struct resource *, void *));
918:	static int __adjust_resource(struct resource *, resource_size_t, resource_size_t);
575:	static int __find_resource(struct resource *, struct resource *, struct resource *, resource_size_t, struct resource_constraint *);
764:	static struct resource *__insert_resource(struct resource *, struct resource *);
483:	static int __is_ram(unsigned long, unsigned long, void *);
241:	static void __release_child_resources(struct resource *);
212:	static int __release_resource(struct resource *, bool);
184:	static struct resource *__request_resource(struct resource *, struct resource *);
374:	static int __walk_iomem_res_desc(resource_size_t, resource_size_t, unsigned long, unsigned long, bool, void *, int (*)(struct resource *, void *));
164:	static struct resource *alloc_resource(gfp_t);
1405:	static int devm_region_match(struct device *, void *, void *);
1398:	static void devm_region_release(struct device *, void *);
1371:	static int devm_resource_match(struct device *, void *, void *);
1322:	static void devm_resource_release(struct device *, void *);
333:	static int find_next_iomem_res(resource_size_t, resource_size_t, unsigned long, unsigned long, bool, struct resource *);
149:	static void free_resource(struct resource *);
138:	static int ioresources_init(void);
63:	static struct resource *next_resource(struct resource *, bool);
76:	static void *r_next(struct seq_file *, void *, loff_t *);
104:	static int r_show(struct seq_file *, void *);
87:	static void *r_start(struct seq_file *, loff_t *);
98:	static void r_stop(struct seq_file *, void *);
651:	static int reallocate_resource(struct resource *, struct resource *, resource_size_t, struct resource_constraint *);
1454:	static int reserve_setup(char *);
554:	static resource_size_t simple_align_resource(void *, const struct resource *, resource_size_t, resource_size_t);
1614:	static int strict_iomem(char *);

File kernel/rseq.c:
308:	long __ia32_sys_rseq(const struct pt_regs *);
263:	void __rseq_handle_notify_resume(struct ksignal *, struct pt_regs *);
308:	long __x64_sys_rseq(const struct pt_regs *);

File kernel/sched/autogroup.c:
20:	void autogroup_free(struct task_group *);
12:	void autogroup_init(struct task_struct *);
263:	int autogroup_path(struct task_group *, char *, int);
208:	int proc_sched_autogroup_set_nice(struct task_struct *, int);
246:	void proc_sched_autogroup_show_task(struct task_struct *, struct seq_file *);
170:	void sched_autogroup_create_attach(struct task_struct *);
182:	void sched_autogroup_detach(struct task_struct *);
193:	void sched_autogroup_exit(struct signal_struct *);
125:	void sched_autogroup_exit_task(struct task_struct *);
188:	void sched_autogroup_fork(struct signal_struct *);
107:	bool task_wants_autogroup(struct task_struct *, struct task_group *);
136:	static void autogroup_move_group(struct task_struct *, struct autogroup *);
198:	static int setup_autogroup(char *);

File kernel/sched/clock.c:
188:	void clear_sched_clock_stable(void);
478:	u64 running_clock(void);
63:	unsigned long long sched_clock(void);
364:	u64 sched_clock_cpu(int);
425:	void sched_clock_idle_sleep_event(void);
434:	void sched_clock_idle_wakeup_event(void);
206:	void sched_clock_init(void);
107:	int sched_clock_stable(void);
388:	void sched_clock_tick(void);
405:	void sched_clock_tick_stable(void);
198:	static void __sched_clock_gtod_offset(void);
153:	static void __sched_clock_work(struct work_struct *);
225:	static int sched_clock_init_late(void);
264:	static u64 sched_clock_local(struct sched_clock_data *);

File kernel/sched/completion.c:
28:	void complete(struct completion *);
57:	void complete_all(struct completion *);
313:	bool completion_done(struct completion *);
280:	bool try_wait_for_completion(struct completion *);
134:	void wait_for_completion(struct completion *);
202:	int wait_for_completion_interruptible(struct completion *);
223:	long wait_for_completion_interruptible_timeout(struct completion *, unsigned long);
167:	void wait_for_completion_io(struct completion *);
187:	unsigned long wait_for_completion_io_timeout(struct completion *, unsigned long);
239:	int wait_for_completion_killable(struct completion *);
261:	long wait_for_completion_killable_timeout(struct completion *, unsigned long);
153:	unsigned long wait_for_completion_timeout(struct completion *, unsigned long);

File kernel/sched/core.c:
5070:	int __cond_resched_lock(spinlock_t *);
5348:	long __ia32_compat_sys_sched_rr_get_interval(const struct pt_regs *);
4026:	long __ia32_sys_nice(const struct pt_regs *);
5243:	long __ia32_sys_sched_get_priority_max(const struct pt_regs *);
5270:	long __ia32_sys_sched_get_priority_min(const struct pt_regs *);
4988:	long __ia32_sys_sched_getaffinity(const struct pt_regs *);
4785:	long __ia32_sys_sched_getattr(const struct pt_regs *);
4707:	long __ia32_sys_sched_getparam(const struct pt_regs *);
4678:	long __ia32_sys_sched_getscheduler(const struct pt_regs *);
5335:	long __ia32_sys_sched_rr_get_interval(const struct pt_regs *);
4936:	long __ia32_sys_sched_setaffinity(const struct pt_regs *);
4644:	long __ia32_sys_sched_setattr(const struct pt_regs *);
4633:	long __ia32_sys_sched_setparam(const struct pt_regs *);
4618:	long __ia32_sys_sched_setscheduler(const struct pt_regs *);
67:	struct rq *__task_rq_lock(struct task_struct *, struct rq_flags *);
4026:	long __x64_sys_nice(const struct pt_regs *);
5243:	long __x64_sys_sched_get_priority_max(const struct pt_regs *);
5270:	long __x64_sys_sched_get_priority_min(const struct pt_regs *);
4988:	long __x64_sys_sched_getaffinity(const struct pt_regs *);
4785:	long __x64_sys_sched_getattr(const struct pt_regs *);
4707:	long __x64_sys_sched_getparam(const struct pt_regs *);
4678:	long __x64_sys_sched_getscheduler(const struct pt_regs *);
5335:	long __x64_sys_sched_rr_get_interval(const struct pt_regs *);
4936:	long __x64_sys_sched_setaffinity(const struct pt_regs *);
4644:	long __x64_sys_sched_setattr(const struct pt_regs *);
4633:	long __x64_sys_sched_setparam(const struct pt_regs *);
4618:	long __x64_sys_sched_setscheduler(const struct pt_regs *);
5043:	long __x64_sys_sched_yield(const struct pt_regs *);
5050:	int _cond_resched(void);
768:	void activate_task(struct rq *, struct task_struct *, int);
4095:	int available_idle_cpu(int);
4008:	int can_nice(const int, const struct task_struct *);
863:	void check_preempt_curr(struct rq *, struct task_struct *, int);
1844:	bool cpus_share_cache(int, int);
5523:	int cpuset_cpumask_can_shrink(const struct cpumask *, const struct cpumask *);
6322:	struct task_struct *curr_task(int);
776:	void deactivate_task(struct rq *, struct task_struct *, int);
3789:	int default_wake_function(wait_queue_entry_t *, unsigned int, int, void *);
1037:	void do_set_cpus_allowed(struct task_struct *, const struct cpumask *);
3535:	void do_task_dead(void);
7258:	void dump_cpu_task(int);
2228:	void force_schedstat_enabled(void);
2951:	void get_iowait_load(unsigned long *, unsigned long *);
525:	int get_nohz_timer_target(void);
281:	void hrtick_start(struct rq *, u64);
4071:	int idle_cpu(int);
4112:	struct task_struct *idle_task(int);
5618:	void idle_task_exit(void);
5987:	int in_sched_functions(unsigned long);
5459:	void init_idle(struct task_struct *, int);
5225:	void io_schedule(void);
5203:	void io_schedule_finish(int);
5193:	int io_schedule_prepare(void);
5212:	long io_schedule_timeout(long);
1446:	void kick_process(struct task_struct *);
1288:	int migrate_swap(struct task_struct *, struct task_struct *, int, int);
5567:	int migrate_task_to(struct task_struct *, int);
6266:	void normalize_rt_tasks(void);
2887:	unsigned long long nr_context_switches(void);
2928:	unsigned long nr_iowait(void);
2945:	unsigned long nr_iowait_cpu(int);
2858:	unsigned long nr_running(void);
2455:	void preempt_notifier_dec(void);
2449:	void preempt_notifier_inc(void);
2465:	void preempt_notifier_register(struct preempt_notifier *);
2480:	void preempt_notifier_unregister(struct preempt_notifier *);
3769:	void preempt_schedule_irq(void);
504:	void resched_cpu(int);
480:	void resched_curr(struct rq *);
3824:	void rt_mutex_setprio(struct task_struct *, struct task_struct *);
635:	bool sched_can_stop_tick(struct rq *);
5830:	int sched_cpu_activate(unsigned int);
5870:	int sched_cpu_deactivate(unsigned int);
5920:	int sched_cpu_dying(unsigned int);
5912:	int sched_cpu_starting(unsigned int);
6406:	struct task_group *sched_create_group(struct task_group *);
6457:	void sched_destroy_group(struct task_group *);
2964:	void sched_exec(void);
2296:	int sched_fork(unsigned long, struct task_struct *);
4952:	long sched_getaffinity(pid_t, struct cpumask *);
6020:	void sched_init(void);
5946:	void sched_init_smp(void);
6380:	void sched_move_offline_task(struct task_struct *);
6525:	void sched_move_task(struct task_struct *);
6463:	void sched_offline_group(struct task_group *);
6432:	void sched_online_group(struct task_group *, struct task_group *);
2357:	void sched_post_fork(struct task_struct *);
1584:	void sched_set_stop_task(int, struct task_struct *);
4828:	long sched_setaffinity(pid_t, const struct cpumask *);
4487:	int sched_setattr(struct task_struct *, const struct sched_attr *);
4493:	int sched_setattr_nocheck(struct task_struct *, const struct sched_attr *);
5588:	void sched_setnuma(struct task_struct *, int);
4480:	int sched_setscheduler(struct task_struct *, int, const struct sched_param *);
4511:	int sched_setscheduler_nocheck(struct task_struct *, int, const struct sched_param *);
5361:	void sched_show_task(struct task_struct *);
3213:	int sched_tick_offload_init(void);
1749:	void sched_ttwu_pending(void);
3590:	void schedule(void);
3614:	void schedule_idle(void);
3653:	void schedule_preempt_disabled(void);
2767:	void schedule_tail(struct task_struct *);
3630:	void schedule_user(void);
1768:	void scheduler_ipi(void);
3059:	void scheduler_tick(void);
1031:	void set_cpus_allowed_common(struct task_struct *, const struct cpumask *);
1148:	int set_cpus_allowed_ptr(struct task_struct *, const struct cpumask *);
2154:	void set_numabalancing_state(bool);
5767:	void set_rq_offline(struct rq *);
5752:	void set_rq_online(struct rq *);
1154:	void set_task_cpu(struct task_struct *, unsigned int);
3948:	void set_user_nice(struct task_struct *, long);
5413:	void show_state_filter(unsigned long);
2881:	bool single_task_running(void);
2163:	int sysctl_numa_balancing(struct ctl_table *, int, void *, size_t *, loff_t *);
2269:	int sysctl_schedstats(struct ctl_table *, int, void *, size_t *, loff_t *);
5536:	int task_can_attach(struct task_struct *, const struct cpumask *);
838:	int task_curr(const struct task_struct *);
4060:	int task_prio(const struct task_struct *);
91:	struct rq *task_rq_lock(struct task_struct *, struct rq_flags *);
3016:	unsigned long long task_sched_runtime(struct task_struct *);
6803:	long tg_get_cfs_period(struct task_group *);
6777:	long tg_get_cfs_quota(struct task_group *);
714:	int tg_nop(struct task_group *, void *);
6790:	int tg_set_cfs_period(struct task_group *, long);
6762:	int tg_set_cfs_quota(struct task_group *, long);
2380:	unsigned long to_ratio(u64, u64);
200:	void update_rq_clock(struct rq *);
1341:	unsigned long wait_task_inactive(struct task_struct *, long);
426:	void wake_q_add(struct wake_q_head *, struct task_struct *);
1820:	void wake_up_if_idle(int);
2403:	void wake_up_new_task(struct task_struct *);
601:	void wake_up_nohz_cpu(int);
2094:	int wake_up_process(struct task_struct *);
451:	void wake_up_q(struct wake_q_head *);
2100:	int wake_up_state(struct task_struct *, unsigned int);
683:	int walk_tg_tree_from(struct task_group *, tg_visitor, tg_visitor, void *);
5112:	void yield(void);
5134:	int yield_to(struct task_struct *, bool);
2729:	static void __balance_callback(struct rq *);
265:	static void __hrtick_start(void *);
1207:	static void __migrate_swap_task(struct task_struct *, int);
970:	static struct rq *__migrate_task(struct rq *, struct rq_flags *, struct task_struct *, int);
2111:	static void __sched_fork(unsigned long, struct task_struct *);
4197:	static int __sched_setscheduler(struct task_struct *, const struct sched_attr *, bool, bool);
3445:	static void __schedule(bool);
3313:	static void __schedule_bug(struct task_struct *);
1075:	static int __set_cpus_allowed_ptr(struct task_struct *, const struct cpumask *, bool);
4160:	static void __setscheduler(struct task_struct *, const struct sched_attr *, bool, struct rq *);
4452:	static int _sched_setscheduler(struct task_struct *, int, const struct sched_param *, bool);
2193:	static void compute_skid(void);
6825:	static u64 cpu_cfs_period_read_u64(struct cgroup_subsys_state *, struct cftype *);
6831:	static int cpu_cfs_period_write_u64(struct cgroup_subsys_state *, struct cftype *, u64);
6813:	static s64 cpu_cfs_quota_read_s64(struct cgroup_subsys_state *, struct cftype *);
6819:	static int cpu_cfs_quota_write_s64(struct cgroup_subsys_state *, struct cftype *, s64);
6920:	static int cpu_cfs_stat_show(struct seq_file *, void *);
6652:	static void cpu_cgroup_attach(struct cgroup_taskset *);
6621:	static int cpu_cgroup_can_attach(struct cgroup_taskset *);
6559:	static struct cgroup_subsys_state *cpu_cgroup_css_alloc(struct cgroup_subsys_state *);
6594:	static void cpu_cgroup_css_free(struct cgroup_subsys_state *);
6577:	static int cpu_cgroup_css_online(struct cgroup_subsys_state *);
6587:	static void cpu_cgroup_css_released(struct cgroup_subsys_state *);
6608:	static void cpu_cgroup_fork(struct task_struct *);
7074:	static int cpu_extra_stat_show(struct seq_file *, struct cgroup_subsys_state *);
7192:	static int cpu_max_show(struct seq_file *, void *);
7200:	static ssize_t cpu_max_write(struct kernfs_open_file *, char *, size_t, loff_t);
7022:	static s64 cpu_qos_read(struct cgroup_subsys_state *, struct cftype *);
6998:	static int cpu_qos_write(struct cgroup_subsys_state *, struct cftype *, s64);
6963:	static u64 cpu_rt_period_read_uint(struct cgroup_subsys_state *, struct cftype *);
6957:	static int cpu_rt_period_write_uint(struct cgroup_subsys_state *, struct cftype *, u64);
6951:	static s64 cpu_rt_runtime_read(struct cgroup_subsys_state *, struct cftype *);
6945:	static int cpu_rt_runtime_write(struct cgroup_subsys_state *, struct cftype *, s64);
6670:	static u64 cpu_shares_read_u64(struct cgroup_subsys_state *, struct cftype *);
6662:	static int cpu_shares_write_u64(struct cgroup_subsys_state *, struct cftype *, u64);
7124:	static s64 cpu_weight_nice_read_s64(struct cgroup_subsys_state *, struct cftype *);
7142:	static int cpu_weight_nice_write_s64(struct cgroup_subsys_state *, struct cftype *, s64);
7097:	static u64 cpu_weight_read_u64(struct cgroup_subsys_state *, struct cftype *);
7106:	static int cpu_weight_write_u64(struct cgroup_subsys_state *, struct cftype *, u64);
4519:	static int do_sched_setscheduler(pid_t, int, struct sched_param *);
5024:	static void do_sched_yield(void);
2645:	static struct rq *finish_task_switch(struct task_struct *);
4917:	static int get_user_cpu_mask(unsigned long *, unsigned int, struct cpumask *);
238:	static enum hrtimer_restart hrtick(struct hrtimer *);
1244:	static int migrate_swap_stop(void *);
988:	static int migration_cpu_stop(void *);
5973:	static int migration_init(void);
935:	static struct rq *move_queued_task(struct rq *, struct rq_flags *, struct task_struct *, int);
5649:	static void put_prev_task_fake(struct rq *, struct task_struct *);
6476:	static void sched_change_group(struct task_struct *, int);
4543:	static int sched_copy_attr(struct sched_attr *, struct sched_attr *);
6397:	static void sched_free_group(struct task_group *);
6451:	static void sched_free_group_rcu(struct callback_head *);
6369:	static void sched_move_work(struct work_struct *);
4742:	static int sched_read_attr(struct sched_attr *, struct sched_attr *, unsigned int);
5288:	static int sched_rr_get_interval(pid_t, struct timespec64 *);
3122:	static void sched_tick_remote(struct work_struct *);
1480:	static int select_fallback_rq(int, struct task_struct *);
720:	static void set_load_weight(struct task_struct *, bool);
134:	static int setup_account_irqtime(char *);
2237:	static int setup_schedstats(char *);
6866:	static int tg_cfs_schedulable_down(struct task_group *, void *);
6971:	static int tg_change_scheduler(struct task_group *, void *);
6686:	static int tg_set_cfs_bandwidth(struct task_group *, u64, u64);
1972:	static int try_to_wake_up(struct task_struct *, unsigned int, int);
1705:	static void ttwu_do_activate(struct rq *, struct task_struct *, int, struct rq_flags *);
1672:	static void ttwu_do_wakeup(struct rq *, struct task_struct *, int, struct rq_flags *);

File kernel/sched/cpuacct.c:
360:	void cpuacct_account_field(struct task_struct *, int, u64);
338:	void cpuacct_charge(struct task_struct *, u64);
203:	static int __cpuacct_percpu_seq_show(struct seq_file *, enum cpuacct_stat_index);
155:	static u64 __cpuusage_read(struct cgroup_subsys_state *, enum cpuacct_stat_index);
233:	static int cpuacct_all_seq_show(struct seq_file *, void *);
98:	static u64 cpuacct_cpuusage_read(struct cpuacct *, enum cpuacct_stat_index, int);
59:	static struct cgroup_subsys_state *cpuacct_css_alloc(struct cgroup_subsys_state *);
89:	static void cpuacct_css_free(struct cgroup_subsys_state *);
228:	static int cpuacct_percpu_seq_show(struct seq_file *, void *);
223:	static int cpuacct_percpu_sys_seq_show(struct seq_file *, void *);
218:	static int cpuacct_percpu_user_seq_show(struct seq_file *, void *);
269:	static int cpuacct_stats_show(struct seq_file *, void *);
180:	static u64 cpuusage_read(struct cgroup_subsys_state *, struct cftype *);
174:	static u64 cpuusage_sys_read(struct cgroup_subsys_state *, struct cftype *);
168:	static u64 cpuusage_user_read(struct cgroup_subsys_state *, struct cftype *);
185:	static int cpuusage_write(struct cgroup_subsys_state *, struct cftype *, u64);

File kernel/sched/cpudeadline.c:
272:	void cpudl_cleanup(struct cpudl *);
154:	void cpudl_clear(struct cpudl *, int);
235:	void cpudl_clear_freecpu(struct cpudl *, int);
121:	int cpudl_find(struct cpudl *, struct task_struct *, struct cpumask *);
244:	int cpudl_init(struct cpudl *);
194:	void cpudl_set(struct cpudl *, int, u64);
225:	void cpudl_set_freecpu(struct cpudl *, int);
99:	static void cpudl_heapify(struct cpudl *, int);
73:	static void cpudl_heapify_up(int, struct cpudl *);

File kernel/sched/cpufreq.c:
35:	void cpufreq_add_update_util_hook(int, struct update_util_data *, void (*)(struct update_util_data *, u64, unsigned int));
60:	void cpufreq_remove_update_util_hook(int);
75:	bool cpufreq_this_cpu_can_update(struct cpufreq_policy *);

File kernel/sched/cpupri.c:
234:	void cpupri_cleanup(struct cpupri *);
63:	int cpupri_find(struct cpupri *, struct task_struct *, struct cpumask *);
203:	int cpupri_init(struct cpupri *);
135:	void cpupri_set(struct cpupri *, int, int);

File kernel/sched/cputime.c:
144:	void account_guest_time(struct task_struct *, u64);
513:	void account_idle_ticks(unsigned long);
223:	void account_idle_time(u64);
480:	void account_process_tick(struct task_struct *, int);
212:	void account_steal_time(u64);
169:	void account_system_index_time(struct task_struct *, u64, enum cpu_usage_stat);
189:	void account_system_time(struct task_struct *, int, u64);
122:	void account_user_time(struct task_struct *, u64);
907:	void arch_vtime_task_switch(struct task_struct *);
691:	void cputime_adjust(struct task_cputime *, struct prev_cputime *, u64 *, u64 *);
28:	void disable_sched_clock_irqtime(void);
23:	void enable_sched_clock_irqtime(void);
49:	void irqtime_account_irq(struct task_struct *);
647:	unsigned long long sched_get_idle_time(int);
587:	int sched_idle_time_adjust(int, u64 *, u64 *);
962:	void task_cputime(struct task_struct *, u64 *, u64 *);
763:	void task_cputime_adjusted(struct task_struct *, u64 *, u64 *);
936:	u64 task_gtime(struct task_struct *);
298:	void thread_group_cputime(struct task_struct *, struct task_cputime *);
774:	void thread_group_cputime_adjusted(struct task_struct *, u64 *, u64 *);
902:	void vtime_account_idle(struct task_struct *);
834:	void vtime_account_system(struct task_struct *);
415:	void vtime_common_task_switch(struct task_struct *);
874:	void vtime_guest_enter(struct task_struct *);
891:	void vtime_guest_exit(struct task_struct *);
923:	void vtime_init_idle(struct task_struct *, int);
850:	void vtime_user_enter(struct task_struct *);
860:	void vtime_user_exit(struct task_struct *);
814:	static void __vtime_account_system(struct task_struct *, struct vtime *);
795:	static u64 get_vtime_delta(struct vtime *);
362:	static void irqtime_account_process_tick(struct task_struct *, int, int, struct rq *);
536:	static u64 scale_stime(u64, u64, u64);
579:	static int sched_idle_time_setup(char *);
824:	static void vtime_account_guest(struct task_struct *, struct vtime *);

File kernel/sched/deadline.c:
2651:	bool __checkparam_dl(const struct sched_attr *);
2688:	void __dl_clear_params(struct task_struct *);
2629:	void __getparam_dl(struct task_struct *, struct sched_attr *);
2617:	void __setparam_dl(struct task_struct *, const struct sched_attr *);
156:	void dl_change_utilization(struct task_struct *, u64);
2774:	bool dl_cpu_busy(unsigned int);
2753:	int dl_cpuset_cpumask_can_shrink(const struct cpumask *, const struct cpumask *);
2706:	bool dl_param_changed(struct task_struct *, const struct sched_attr *);
2720:	int dl_task_can_attach(struct task_struct *, const struct cpumask *);
337:	void init_dl_bandwidth(struct dl_bandwidth *, u64, u64);
344:	void init_dl_bw(struct dl_bw *);
1324:	void init_dl_inactive_task_timer(struct sched_dl_entity *);
356:	void init_dl_rq(struct dl_rq *);
2504:	void init_dl_rq_bw_ratio(struct dl_rq *);
1085:	void init_dl_task_timer(struct sched_dl_entity *);
2317:	void init_sched_dl_class(void);
2794:	void print_dl_stats(struct seq_file *, int);
2517:	void sched_dl_do_global(void);
2467:	int sched_dl_global_validate(void);
2554:	int sched_dl_overflow(struct task_struct *, int, const struct sched_attr *);
1429:	static void __dequeue_dl_entity(struct sched_dl_entity *);
116:	static void __sub_rq_bw(u64, struct dl_rq *, struct dl_rq *);
1701:	static void check_preempt_curr_dl(struct rq *, struct task_struct *, int);
475:	static void dequeue_pushable_dl_task(struct rq *, struct task_struct *);
1544:	static void dequeue_task_dl(struct rq *, struct task_struct *, int);
978:	static enum hrtimer_restart dl_task_timer(struct hrtimer *);
445:	static void enqueue_pushable_dl_task(struct rq *, struct task_struct *);
1472:	static void enqueue_task_dl(struct rq *, struct task_struct *, int);
1893:	static int find_later_rq(struct task_struct *);
2001:	static struct rq *find_lock_later_rq(struct task_struct *, struct rq *);
1282:	static enum hrtimer_restart inactive_task_timer(struct hrtimer *);
1642:	static void migrate_task_rq_dl(struct task_struct *, int);
1980:	static struct task_struct *pick_next_pushable_dl_task(struct rq *);
1743:	static struct task_struct *pick_next_task_dl(struct rq *, struct task_struct *, struct rq_flags *);
2404:	static void prio_changed_dl(struct rq *, struct task_struct *, int);
2162:	static void pull_dl_task(struct rq *);
2068:	static int push_dl_task(struct rq *);
2155:	static void push_dl_tasks(struct rq *);
1802:	static void put_prev_task_dl(struct rq *, struct task_struct *);
698:	static void replenish_dl_entity(struct sched_dl_entity *, struct sched_dl_entity *);
2308:	static void rq_offline_dl(struct rq *);
2297:	static void rq_online_dl(struct rq *);
1602:	static int select_task_rq_dl(struct task_struct *, int, int, int);
2263:	static void set_cpus_allowed_dl(struct task_struct *, const struct cpumask *);
1842:	static void set_curr_task_dl(struct rq *);
920:	static int start_dl_timer(struct task_struct *);
2328:	static void switched_from_dl(struct rq *, struct task_struct *);
2376:	static void switched_to_dl(struct rq *, struct task_struct *);
293:	static void task_contending(struct sched_dl_entity *, int);
1834:	static void task_fork_dl(struct task_struct *);
237:	static void task_non_contending(struct task_struct *);
1819:	static void task_tick_dl(struct rq *, struct task_struct *, int);
2251:	static void task_woken_dl(struct rq *, struct task_struct *);
1179:	static void update_curr_dl(struct rq *);
408:	static void update_dl_migration(struct dl_rq *);
1577:	static void yield_task_dl(struct rq *);

File kernel/sched/debug.c:
374:	void dirty_sched_domain_sysctl(int);
519:	void print_cfs_rq(struct seq_file *, int, struct cfs_rq *);
627:	void print_dl_rq(struct seq_file *, int, struct dl_rq *);
890:	void print_numa_stats(struct seq_file *, int, unsigned long, unsigned long, unsigned long, unsigned long);
597:	void print_rt_rq(struct seq_file *, int, struct rt_rq *);
1050:	void proc_sched_set_task(struct task_struct *);
925:	void proc_sched_show_task(struct task_struct *, struct pid_namespace *, struct seq_file *);
312:	void register_sched_domain_sysctl(void);
789:	void sysrq_sched_debug_show(void);
815:	void sysrq_sched_debug_tidy(void);
381:	void unregister_sched_domain_sysctl(void);
874:	static int init_sched_debug_procfs(void);
390:	static void print_cfs_group_stats(struct seq_file *, int, struct task_group *);
650:	static void print_cpu(struct seq_file *, int);
498:	static void print_rq(struct seq_file *, struct rq *, int);
470:	static void print_task(struct seq_file *, struct task_struct *, struct rq *);
725:	static void sched_debug_header(struct seq_file *);
857:	static void *sched_debug_next(struct seq_file *, void *, loff_t *);
777:	static int sched_debug_show(struct seq_file *, void *);
835:	static void *sched_debug_start(struct seq_file *, loff_t *);
863:	static void sched_debug_stop(struct seq_file *, void *);
160:	static int sched_feat_open(struct inode *, struct file *);
60:	static int sched_feat_show(struct seq_file *, void *);
128:	static ssize_t sched_feat_write(struct file *, const char *, size_t, loff_t *);
175:	static int sched_init_debug(void);
216:	static void sd_free_ctl_entry(struct ctl_table **);
438:	static void task_group_path(struct task_group *, char *, int);

File kernel/sched/fair.c:
608:	struct sched_entity *__pick_first_entity(struct cfs_rq *);
629:	struct sched_entity *__pick_last_entity(struct cfs_rq *);
4427:	void __refill_cfs_bandwidth_runtime(struct cfs_bandwidth *);
6184:	void __update_idle_core(struct rq *);
10666:	int alloc_fair_sched_group(struct task_group *, struct task_group *);
98:	int arch_asym_cpu_priority(int);
4392:	void cfs_bandwidth_usage_dec(void);
4387:	void cfs_bandwidth_usage_inc(void);
5680:	void cpu_load_update_active(struct rq *);
5631:	void cpu_load_update_nohz_start(void);
5646:	void cpu_load_update_nohz_stop(void);
10645:	void free_fair_sched_group(struct task_group *);
5043:	void init_cfs_bandwidth(struct cfs_bandwidth *);
10586:	void init_cfs_rq(struct cfs_rq *);
740:	void init_entity_runnable_average(struct sched_entity *);
1201:	void init_numa_balancing(unsigned long, struct task_struct *);
7066:	void init_qos_hrtimer(int);
10929:	void init_sched_fair_class(void);
10750:	void init_tg_cfs_entry(struct task_group *, struct cfs_rq *, struct sched_entity *, int, struct sched_entity *);
9795:	void nohz_balance_enter_idle(int);
9761:	void nohz_balance_exit_idle(struct rq *);
10707:	void online_fair_sched_group(struct task_group *);
789:	void post_init_entity_util_avg(struct sched_entity *);
10894:	void print_cfs_stats(struct seq_file *, int);
3684:	void remove_entity_load_avg(struct sched_entity *);
2936:	void reweight_task(struct task_struct *, int);
10783:	int sched_group_set_shares(struct task_group *, unsigned long);
195:	void sched_init_granularity(void);
643:	int sched_proc_update_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
7038:	int sched_qos_cpu_overload(void);
7024:	void sched_qos_offline_wait(void);
3198:	void set_task_rq_fair(struct sched_entity *, struct cfs_rq *, struct cfs_rq *);
1460:	bool should_numa_migrate_memory(struct task_struct *, struct page *, int, int);
10905:	void show_numa_stats(struct task_struct *, struct seq_file *);
5064:	void start_cfs_bandwidth(struct cfs_bandwidth *);
3671:	void sync_entity_load_avg(struct sched_entity *);
2471:	void task_numa_fault(int, int, int, int);
2435:	void task_numa_free(struct task_struct *, bool);
1263:	pid_t task_numa_group_id(struct task_struct *);
2561:	void task_numa_work(struct callback_head *);
2707:	void task_tick_numa(struct rq *, struct task_struct *);
10169:	void trigger_load_balance(struct rq *);
10725:	void unregister_fair_sched_group(struct task_group *);
4630:	void unthrottle_cfs_rq(struct cfs_rq *);
8171:	void update_group_capacity(struct sched_domain *, int);
9481:	void update_max_interval(void);
4476:	static void __account_cfs_rq_runtime(struct cfs_rq *, u64);
232:	static u64 __calc_delta(u64, unsigned long, struct load_weight *);
573:	static void __enqueue_entity(struct cfs_rq *, struct sched_entity *);
6981:	static int __unthrottle_qos_cfs_rqs(int);
9858:	static bool _nohz_idle_balance(struct rq *, unsigned int, enum cpu_idle_type);
2809:	static void account_entity_dequeue(struct cfs_rq *, struct sched_entity *);
2792:	static void account_entity_enqueue(struct cfs_rq *, struct sched_entity *);
9390:	static int active_load_balance_cpu_stop(void *);
10499:	static void attach_entity_cfs_rq(struct sched_entity *);
3547:	static void attach_entity_load_avg(struct cfs_rq *, struct sched_entity *, int);
7815:	static void attach_task(struct rq *, struct task_struct *);
10535:	static void attach_task_cfs_rq(struct task_struct *);
7563:	static int can_migrate_task(struct task_struct *, struct lb_env *);
4958:	static bool check_cfs_rq_runtime(struct cfs_rq *);
6803:	static void check_preempt_wakeup(struct rq *, struct task_struct *, int);
3928:	static void check_spread(struct sched_entity *, struct cfs_rq *, struct cfs_rq *);
4112:	static void clear_buddies(struct cfs_rq *, struct sched_entity *);
5530:	static void cpu_load_update(struct rq *, unsigned long, unsigned long);
4127:	static void dequeue_entity(struct cfs_rq *, struct sched_entity *, int);
5343:	static void dequeue_task_fair(struct rq *, struct task_struct *, int);
10488:	static void detach_entity_cfs_rq(struct sched_entity *);
10518:	static void detach_task_cfs_rq(struct task_struct *);
4685:	static u64 distribute_cfs_runtime(struct cfs_bandwidth *, u64);
4027:	static void enqueue_entity(struct cfs_rq *, struct sched_entity *, int);
5255:	static void enqueue_task_fair(struct rq *, struct task_struct *, int);
8839:	static struct sched_group *find_busiest_group(struct lb_env *);
10835:	static unsigned int get_rr_interval_fair(struct rq *, struct task_struct *);
162:	static unsigned int get_update_sysctl_factor(void);
1440:	static unsigned long group_weight(struct task_struct *, int, int);
5202:	static void hrtick_start_fair(struct rq *, struct task_struct *);
5228:	static void hrtick_update(struct rq *);
9625:	static void kick_ilb(unsigned int);
299:	static bool list_add_leaf_cfs_rq(struct cfs_rq *);
9082:	static int load_balance(int, struct rq *, struct sched_domain *, enum cpu_idle_type, int *);
6658:	static void migrate_task_rq_fair(struct task_struct *, int);
3849:	static void overload_clear(struct rq *);
3866:	static void overload_set(struct rq *);
4261:	static struct sched_entity *pick_next_entity(struct cfs_rq *, struct sched_entity *);
7076:	static struct task_struct *pick_next_task_fair(struct rq *, struct task_struct *, struct rq_flags *);
2117:	static int preferred_group_nid(struct task_struct *, int);
10412:	static void prio_changed_fair(struct rq *, struct task_struct *, int);
10462:	static void propagate_entity_cfs_rq(struct sched_entity *);
4313:	static void put_prev_entity(struct cfs_rq *, struct sched_entity *);
7247:	static void put_prev_task_fair(struct rq *, struct task_struct *);
7043:	static enum hrtimer_restart qos_overload_timer_handler(struct hrtimer *);
9492:	static void rebalance_domains(struct rq *, enum cpu_idle_type);
2904:	static void reweight_entity(struct cfs_rq *, struct sched_entity *, unsigned long, unsigned long);
10339:	static void rq_offline_fair(struct rq *);
10332:	static void rq_online_fair(struct rq *);
10144:	static void run_rebalance_domains(struct softirq_action *);
4989:	static enum hrtimer_restart sched_cfs_period_timer(struct hrtimer *);
4977:	static enum hrtimer_restart sched_cfs_slack_timer(struct hrtimer *);
700:	static u64 sched_slice(struct sched_entity *, struct cfs_rq *);
1351:	static unsigned long score_nearby_nodes(struct task_struct *, int, int, bool);
6351:	static int select_idle_sibling(struct task_struct *, int, int);
6593:	static int select_task_rq_fair(struct task_struct *, int, int, int);
10573:	static void set_curr_task_fair(struct rq *);
6782:	static void set_next_buddy(struct sched_entity *);
4219:	static void set_next_entity(struct cfs_rq *, struct sched_entity *);
10212:	static int steal_from(struct rq *, struct rq_flags *, bool *, int);
10546:	static void switched_from_fair(struct rq *, struct task_struct *);
10551:	static void switched_to_fair(struct rq *, struct task_struct *);
10619:	static void task_change_group_fair(struct task_struct *, int);
6715:	static void task_dead_fair(struct task_struct *);
10376:	static void task_fork_fair(struct task_struct *);
1117:	static unsigned int task_nr_scan_windows(struct task_struct *);
1787:	static void task_numa_find_cpu(struct task_numa_env *, long, long);
1814:	static int task_numa_migrate(struct task_struct *);
272:	static struct task_struct *task_of(struct sched_entity *);
1175:	static unsigned int task_scan_max(struct task_struct *);
1139:	static unsigned int task_scan_min(struct task_struct *);
1153:	static unsigned int task_scan_start(struct task_struct *);
10357:	static void task_tick_fair(struct rq *, struct task_struct *, int);
1421:	static unsigned long task_weight(struct task_struct *, int, int);
4550:	static int tg_throttle_down(struct task_group *, void *);
4531:	static int tg_unthrottle_up(struct task_group *, void *);
4565:	static void throttle_cfs_rq(struct cfs_rq *);
6931:	static void unthrottle_qos_cfs_rq(struct cfs_rq *);
7908:	static void update_blocked_averages(int);
3107:	static void update_cfs_group(struct sched_entity *);
7967:	static void update_cfs_rq_h_load(struct cfs_rq *);
844:	static void update_curr(struct cfs_rq *);
879:	static void update_curr_fair(struct rq *);
3613:	static void update_load_avg(struct cfs_rq *, struct sched_entity *, int);
538:	static void update_min_vruntime(struct cfs_rq *);
8356:	static bool update_nohz_stats(struct rq *, bool);
1547:	static void update_numa_stats(struct numa_stats *, int);
183:	static void update_sysctl(void);
6756:	static int wakeup_preempt_entity(struct sched_entity *, struct sched_entity *);
7263:	static void yield_task_fair(struct rq *);
7294:	static bool yield_to_task_fair(struct rq *, struct task_struct *, bool);

File kernel/sched/idle.c:
76:	void arch_cpu_idle(void);
72:	void arch_cpu_idle_prepare(void);
26:	void cpu_idle_poll_ctrl(bool);
293:	bool cpu_in_idle(unsigned long);
349:	void cpu_startup_entry(enum cpuhp_state);
87:	void default_idle_call(void);
314:	void play_idle(unsigned long);
19:	void sched_idle_set_state(struct cpuidle_state *);
98:	static int call_cpuidle(struct cpuidle_driver *, struct cpuidle_device *, int);
387:	static void check_preempt_curr_idle(struct rq *, struct task_struct *, int);
54:	static int cpu_idle_poll(void);
407:	static void dequeue_task_idle(struct rq *, struct task_struct *, int);
224:	static void do_idle(void);
446:	static unsigned int get_rr_interval_idle(struct rq *, struct task_struct *);
304:	static enum hrtimer_restart idle_inject_timer_fn(struct hrtimer *);
393:	static struct task_struct *pick_next_task_idle(struct rq *, struct task_struct *, struct rq_flags *);
441:	static void prio_changed_idle(struct rq *, struct task_struct *, int);
415:	static void put_prev_task_idle(struct rq *, struct task_struct *);
378:	static int select_task_rq_idle(struct task_struct *, int, int, int);
431:	static void set_curr_task_idle(struct rq *);
435:	static void switched_to_idle(struct rq *, struct task_struct *);
427:	static void task_tick_idle(struct rq *, struct task_struct *, int);

File kernel/sched/isolation.c:
34:	void housekeeping_affine(struct task_struct *, enum hk_flags);
16:	int housekeeping_any_cpu(enum hk_flags);
25:	const struct cpumask *housekeeping_cpumask(enum hk_flags);
51:	void housekeeping_init(void);
42:	bool housekeeping_test_cpu(int, enum hk_flags);
126:	static int housekeeping_isolcpus_setup(char *);
116:	static int housekeeping_nohz_full_setup(char *);
65:	static int housekeeping_setup(char *, enum hk_flags);

File kernel/sched/loadavg.c:
352:	void calc_global_load(unsigned long);
388:	void calc_global_load_tick(struct rq *);
79:	long calc_load_fold_active(struct rq *, long);
180:	void calc_load_nohz_start(void);
197:	void calc_load_nohz_stop(void);
72:	void get_avenrun(unsigned long *, unsigned long, int);
291:	static unsigned long calc_load_n(unsigned long, unsigned long, unsigned long, unsigned int);

File kernel/sched/membarrier.c:
349:	long __ia32_sys_membarrier(const struct pt_regs *);
349:	long __x64_sys_membarrier(const struct pt_regs *);
59:	void membarrier_exec_mmap(struct mm_struct *);
37:	static void ipi_mb(void *);
42:	static void ipi_sync_rq_state(void *);
75:	static int membarrier_global_expedited(void);
141:	static int membarrier_private_expedited(int);
268:	static int membarrier_register_global_expedited(void);
287:	static int membarrier_register_private_expedited(int);
209:	static int sync_runqueues_membarrier_state(struct mm_struct *);

File kernel/sched/pelt.c:
270:	int __update_load_avg_blocked_se(u64, int, struct sched_entity *);
299:	int __update_load_avg_cfs_rq(u64, int, struct cfs_rq *);
283:	int __update_load_avg_se(u64, int, struct cfs_rq *, struct sched_entity *);
347:	int update_dl_rq_load_avg(u64, struct rq *, int);
371:	int update_irq_load_avg(struct rq *, u64);
324:	int update_rt_rq_load_avg(u64, struct rq *, int);
62:	static u32 __accumulate_pelt_segments(u64, u32, u32);

File kernel/sched/rt.c:
182:	int alloc_rt_sched_group(struct task_group *, struct task_group *);
137:	void free_rt_sched_group(struct task_group *);
41:	void init_rt_bandwidth(struct rt_bandwidth *, u64, u64);
75:	void init_rt_rq(struct rt_rq *);
2211:	void init_sched_rt_class(void);
155:	void init_tg_rt_entry(struct task_group *, struct rt_rq *, struct sched_rt_entity *, int, struct sched_rt_entity *);
2725:	void print_rt_stats(struct seq_file *, int);
2021:	void rto_push_irq_work_func(struct irq_work *);
2592:	long sched_group_rt_period(struct task_group *);
2567:	long sched_group_rt_runtime(struct task_group *);
2579:	int sched_group_set_rt_period(struct task_group *, u64);
2553:	int sched_group_set_rt_runtime(struct task_group *, long);
2701:	int sched_rr_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
626:	bool sched_rt_bandwidth_account(struct rt_rq *);
2614:	int sched_rt_can_attach(struct task_group *, struct task_struct *);
2661:	int sched_rt_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
1219:	static void __delist_rt_entity(struct sched_rt_entity *, struct rt_prio_array *);
1229:	static void __enqueue_rt_entity(struct sched_rt_entity *, unsigned int);
796:	static void balance_runtime(struct rt_rq *);
1475:	static void check_preempt_curr_rt(struct rq *, struct task_struct *, int);
1308:	static void dequeue_rt_entity(struct sched_rt_entity *, unsigned int);
1281:	static void dequeue_rt_stack(struct sched_rt_entity *, unsigned int);
1340:	static void dequeue_task_rt(struct rq *, struct task_struct *, int);
994:	static void dequeue_top_rt_rq(struct rt_rq *);
1298:	static void enqueue_rt_entity(struct sched_rt_entity *, unsigned int);
1327:	static void enqueue_task_rt(struct rq *, struct task_struct *, int);
1011:	static void enqueue_top_rt_rq(struct rt_rq *);
1641:	static int find_lowest_rq(struct task_struct *);
2365:	static unsigned int get_rr_interval_rt(struct rq *, struct task_struct *);
1716:	static struct task_struct *pick_next_pushable_task(struct rq *);
1536:	static struct task_struct *pick_next_task_rt(struct rq *, struct task_struct *, struct rq_flags *);
2251:	static void prio_changed_rt(struct rq *, struct task_struct *, int);
2057:	static void pull_rt_task(struct rq *);
1798:	static int push_rt_task(struct rq *);
1880:	static void push_rt_tasks(struct rq *);
1591:	static void put_prev_task_rt(struct rq *, struct task_struct *);
1355:	static void requeue_rt_entity(struct rt_rq *, struct sched_rt_entity *, int);
2182:	static void rq_offline_rt(struct rq *);
2171:	static void rq_online_rt(struct rq *);
1930:	static int rto_next_cpu(struct root_domain *);
17:	static enum hrtimer_restart sched_rt_period_timer(struct hrtimer *);
485:	static void sched_rt_rq_enqueue(struct rt_rq *);
1388:	static int select_task_rq_rt(struct task_struct *, int, int, int);
2355:	static void set_curr_task_rt(struct rq *);
2196:	static void switched_from_rt(struct rq *, struct task_struct *);
2227:	static void switched_to_rt(struct rq *, struct task_struct *);
2321:	static void task_tick_rt(struct rq *, struct task_struct *, int);
2159:	static void task_woken_rt(struct rq *, struct task_struct *);
2439:	static int tg_rt_schedulable(struct task_group *, void *);
2512:	static int tg_set_rt_bandwidth(struct task_group *, u64, u64);
953:	static void update_curr_rt(struct rq *);
302:	static void update_rt_migration(struct rt_rq *);
1379:	static void yield_task_rt(struct rq *);

File kernel/sched/sched.h:
1054:	static void assert_clock_updated(struct rq *);
1744:	static void sched_update_tick_dependency(struct rq *);
1870:	static void task_rq_unlock(struct rq *, struct task_struct *, struct rq_flags *);

File kernel/sched/stats.c:
138:	static int proc_schedstat_init(void);
120:	static void *schedstat_next(struct seq_file *, void *, loff_t *);
98:	static void *schedstat_start(struct seq_file *, loff_t *);
127:	static void schedstat_stop(struct seq_file *, void *);
19:	static int show_schedstat(struct seq_file *, void *);

File kernel/sched/stop_task.c:
21:	static void check_preempt_curr_stop(struct rq *, struct task_struct *, int);
48:	static void dequeue_task_stop(struct rq *, struct task_struct *, int);
42:	static void enqueue_task_stop(struct rq *, struct task_struct *, int);
108:	static unsigned int get_rr_interval_stop(struct rq *, struct task_struct *);
27:	static struct task_struct *pick_next_task_stop(struct rq *, struct task_struct *, struct rq_flags *);
102:	static void prio_changed_stop(struct rq *, struct task_struct *, int);
58:	static void put_prev_task_stop(struct rq *, struct task_struct *);
14:	static int select_task_rq_stop(struct task_struct *, int, int, int);
89:	static void set_curr_task_stop(struct rq *);
96:	static void switched_to_stop(struct rq *, struct task_struct *);
113:	static void update_curr_stop(struct rq *);
53:	static void yield_task_stop(struct rq *);

File kernel/sched/swait.c:
113:	void __finish_swait(struct swait_queue_head *, struct swait_queue *);
7:	void __init_swait_queue_head(struct swait_queue_head *, const char *, struct lock_class_key *);
120:	void finish_swait(struct swait_queue_head *, struct swait_queue *);
90:	long prepare_to_swait_event(struct swait_queue_head *, struct swait_queue *, int);
79:	void prepare_to_swait_exclusive(struct swait_queue_head *, struct swait_queue *, int);
49:	void swake_up_all(struct swait_queue_head *);
22:	void swake_up_locked(struct swait_queue_head *);
35:	void swake_up_one(struct swait_queue_head *);
72:	static void __prepare_to_swait(struct swait_queue_head *, struct swait_queue *);

File kernel/sched/topology.c:
1945:	cpumask_var_t *alloc_sched_domains(unsigned int);
1940:	int arch_update_cpu_topology(void);
1350:	bool find_numa_distance(int);
1962:	void free_sched_domains(cpumask_var_t *, unsigned int);
531:	int group_balance_cpu(struct sched_group *);
327:	void init_defrootdomain(void);
2052:	void partition_sched_domains(int, cpumask_var_t *, struct sched_domain_attr *);
232:	void rq_attach_root(struct rq *, struct root_domain *);
1606:	void sched_domains_numa_masks_clear(unsigned int);
1593:	void sched_domains_numa_masks_set(unsigned int);
269:	void sched_get_rd(struct root_domain *);
1975:	int sched_init_domains(const struct cpumask *);
1448:	void sched_init_numa(void);
274:	void sched_put_rd(struct root_domain *);
1314:	void set_sched_topology(struct sched_domain_topology_level *);
1832:	static int build_sched_domains(const struct cpumask *, struct sched_domain_attr *);
460:	static void cpu_attach_domain(struct sched_domain *, struct root_domain *, int);
2010:	static int dattrs_equal(struct sched_domain_attr *, int, struct sched_domain_attr *, int);
370:	static void destroy_sched_domain(struct sched_domain *);
386:	static void destroy_sched_domains_rcu(struct callback_head *);
219:	static void free_rootdomain(struct callback_head *);
350:	static void free_sched_groups(struct sched_group *, int);
282:	static int init_rootdomain(struct root_domain *);
30:	static int sched_debug_setup(char *);
1329:	static void sched_numa_warn(const char *);
163:	static int sd_degenerate(struct sched_domain *);
1324:	static const struct cpumask *sd_numa_mask(int);
1042:	static int setup_relax_domain_level(char *);
1422:	static int steal_node_limit_setup(char *);

File kernel/sched/wait.c:
8:	void __init_waitqueue_head(struct wait_queue_head *, const char *, struct lock_class_key *);
240:	bool __prepare_to_wait_exclusive(struct wait_queue_head *, struct wait_queue_entry *, int);
142:	void __wake_up(struct wait_queue_head *, unsigned int, int, void *);
152:	void __wake_up_locked(struct wait_queue_head *, unsigned int, int);
158:	void __wake_up_locked_key(struct wait_queue_head *, unsigned int, void *);
164:	void __wake_up_locked_key_bookmark(struct wait_queue_head *, unsigned int, void *, wait_queue_entry_t *);
206:	void __wake_up_sync(struct wait_queue_head *, unsigned int, int);
188:	void __wake_up_sync_key(struct wait_queue_head *, unsigned int, int, void *);
17:	void add_wait_queue(struct wait_queue_head *, struct wait_queue_entry *);
28:	void add_wait_queue_exclusive(struct wait_queue_head *, struct wait_queue_entry *);
386:	int autoremove_wake_function(struct wait_queue_entry *, unsigned int, int, void *);
317:	int do_wait_intr(wait_queue_head_t *, wait_queue_entry_t *);
334:	int do_wait_intr_irq(wait_queue_head_t *, wait_queue_entry_t *);
360:	void finish_wait(struct wait_queue_head *, struct wait_queue_entry *);
265:	void init_wait_entry(struct wait_queue_entry *, int);
225:	void prepare_to_wait(struct wait_queue_head *, struct wait_queue_entry *, int);
274:	long prepare_to_wait_event(struct wait_queue_head *, struct wait_queue_entry *, int);
259:	void prepare_to_wait_exclusive(struct wait_queue_head *, struct wait_queue_entry *, int);
39:	void remove_wait_queue(struct wait_queue_head *, struct wait_queue_entry *);
422:	long wait_woken(struct wait_queue_entry *, unsigned int, long);
447:	int woken_wake_function(struct wait_queue_entry *, unsigned int, int, void *);
65:	static int __wake_up_common(struct wait_queue_head *, unsigned int, int, int, void *, wait_queue_entry_t *);
109:	static void __wake_up_common_lock(struct wait_queue_head *, unsigned int, int, int, void *);

File kernel/sched/wait_bit.c:
152:	wait_queue_head_t *__var_waitqueue(void *);
40:	int __wait_on_bit(struct wait_queue_head *, struct wait_bit_queue_entry *, wait_bit_action_f *, unsigned int);
81:	int __wait_on_bit_lock(struct wait_queue_head *, struct wait_bit_queue_entry *, wait_bit_action_f *, unsigned int);
120:	void __wake_up_bit(struct wait_queue_head *, void *, int);
195:	int bit_wait(struct wait_bit_key *, int);
205:	int bit_wait_io(struct wait_bit_key *, int);
229:	int bit_wait_io_timeout(struct wait_bit_key *, int);
215:	int bit_wait_timeout(struct wait_bit_key *, int);
11:	struct wait_queue_head *bit_waitqueue(void *, int);
173:	void init_wait_var_entry(struct wait_bit_queue_entry *, void *, int);
57:	int out_of_line_wait_on_bit(void *, int, wait_bit_action_f *, unsigned int);
110:	int out_of_line_wait_on_bit_lock(void *, int, wait_bit_action_f *, unsigned int);
67:	int out_of_line_wait_on_bit_timeout(void *, int, wait_bit_action_f *, unsigned int, unsigned long);
243:	void wait_bit_init(void);
20:	int wake_bit_function(struct wait_queue_entry *, unsigned int, int, void *);
146:	void wake_up_bit(void *, int);
189:	void wake_up_var(void *);
159:	static int var_wake_function(struct wait_queue_entry *, unsigned int, int, void *);

File kernel/seccomp.c:
946:	long __ia32_sys_seccomp(const struct pt_regs *);
778:	int __secure_computing(const struct seccomp_data *);
946:	long __x64_sys_seccomp(const struct pt_regs *);
232:	void arch_seccomp_spec_mitigate(struct task_struct *);
493:	void get_seccomp_filter(struct task_struct *);
802:	long prctl_get_seccomp(void);
959:	long prctl_set_seccomp(unsigned long, char *);
520:	void put_seccomp_filter(struct task_struct *);
1033:	long seccomp_get_filter(struct task_struct *, unsigned long, void *);
1071:	long seccomp_get_metadata(struct task_struct *, unsigned long, void *);
486:	static void __get_seccomp_filter(struct seccomp_filter *);
509:	static void __put_seccomp_filter(struct seccomp_filter *);
655:	static int __seccomp_filter(int, const struct seccomp_data *, const bool);
1256:	static void audit_actions_logged(u32, u32, int);
926:	static long do_seccomp(unsigned int, unsigned int, const char *);
987:	static struct seccomp_filter *get_nth_filter(struct task_struct *, unsigned long);
78:	static void populate_seccomp_data(struct seccomp_data *);
1209:	static int read_actions_logged(struct ctl_table *, void *, size_t *, loff_t *);
1288:	static int seccomp_actions_logged_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
108:	static int seccomp_check_filter(struct sock_filter *, unsigned int);
525:	static void seccomp_init_siginfo(siginfo_t *, int, int);
1143:	static bool seccomp_names_from_actions_logged(char *, u32, const char *, size_t);
188:	static u32 seccomp_run_filters(const struct seccomp_data *, struct seccomp_filter **);
543:	static void seccomp_send_sigsys(int, int);
1329:	static int seccomp_sysctl_init(void);
1227:	static int write_actions_logged(struct ctl_table *, void *, size_t *, loff_t *, u32 *);

File kernel/signal.c:
3720:	int __compat_save_altstack(compat_stack_t *, unsigned long);
3042:	int __copy_siginfo_to_user32(struct compat_siginfo *, const struct siginfo *, bool);
1255:	int __group_send_sig_info(int, struct siginfo *, struct task_struct *);
3854:	long __ia32_compat_sys_rt_sigaction(const struct pt_regs *);
2969:	long __ia32_compat_sys_rt_sigpending(const struct pt_regs *);
2912:	long __ia32_compat_sys_rt_sigprocmask(const struct pt_regs *);
3467:	long __ia32_compat_sys_rt_sigqueueinfo(const struct pt_regs *);
4066:	long __ia32_compat_sys_rt_sigsuspend(const struct pt_regs *);
3307:	long __ia32_compat_sys_rt_sigtimedwait(const struct pt_regs *);
3510:	long __ia32_compat_sys_rt_tgsigqueueinfo(const struct pt_regs *);
3937:	long __ia32_compat_sys_sigaction(const struct pt_regs *);
3706:	long __ia32_compat_sys_sigaltstack(const struct pt_regs *);
3758:	long __ia32_compat_sys_sigpending(const struct pt_regs *);
3343:	long __ia32_sys_kill(const struct pt_regs *);
3829:	long __ia32_sys_rt_sigaction(const struct pt_regs *);
2953:	long __ia32_sys_rt_sigpending(const struct pt_regs *);
2881:	long __ia32_sys_rt_sigprocmask(const struct pt_regs *);
3457:	long __ia32_sys_rt_sigqueueinfo(const struct pt_regs *);
4052:	long __ia32_sys_rt_sigsuspend(const struct pt_regs *);
3275:	long __ia32_sys_rt_sigtimedwait(const struct pt_regs *);
3498:	long __ia32_sys_rt_tgsigqueueinfo(const struct pt_regs *);
3638:	long __ia32_sys_sigaltstack(const struct pt_regs *);
4005:	long __ia32_sys_signal(const struct pt_regs *);
3742:	long __ia32_sys_sigpending(const struct pt_regs *);
3781:	long __ia32_sys_sigprocmask(const struct pt_regs *);
4089:	long __ia32_sys_sigsuspend(const struct pt_regs *);
3989:	long __ia32_sys_ssetmask(const struct pt_regs *);
3411:	long __ia32_sys_tgkill(const struct pt_regs *);
3427:	long __ia32_sys_tkill(const struct pt_regs *);
1400:	int __kill_pgrp_info(int, struct siginfo *, struct pid *);
1345:	struct sighand_struct *__lock_task_sighand(struct task_struct *, unsigned long *);
3663:	int __save_altstack(stack_t *, unsigned long);
2775:	void __set_current_blocked(const sigset_t *);
3343:	long __x64_sys_kill(const struct pt_regs *);
4022:	long __x64_sys_pause(const struct pt_regs *);
2739:	long __x64_sys_restart_syscall(const struct pt_regs *);
3829:	long __x64_sys_rt_sigaction(const struct pt_regs *);
2953:	long __x64_sys_rt_sigpending(const struct pt_regs *);
2881:	long __x64_sys_rt_sigprocmask(const struct pt_regs *);
3457:	long __x64_sys_rt_sigqueueinfo(const struct pt_regs *);
4052:	long __x64_sys_rt_sigsuspend(const struct pt_regs *);
3275:	long __x64_sys_rt_sigtimedwait(const struct pt_regs *);
3498:	long __x64_sys_rt_tgsigqueueinfo(const struct pt_regs *);
3983:	long __x64_sys_sgetmask(const struct pt_regs *);
3638:	long __x64_sys_sigaltstack(const struct pt_regs *);
4005:	long __x64_sys_signal(const struct pt_regs *);
3742:	long __x64_sys_sigpending(const struct pt_regs *);
3781:	long __x64_sys_sigprocmask(const struct pt_regs *);
4089:	long __x64_sys_sigsuspend(const struct pt_regs *);
3989:	long __x64_sys_ssetmask(const struct pt_regs *);
3411:	long __x64_sys_tgkill(const struct pt_regs *);
3427:	long __x64_sys_tkill(const struct pt_regs *);
4097:	const char *arch_vma_name(struct vm_area_struct *);
187:	void calculate_sigpending(void);
3713:	int compat_restore_altstack(const compat_stack_t *);
3127:	int copy_siginfo_from_user32(struct siginfo *, const struct compat_siginfo *);
3028:	int copy_siginfo_to_user(siginfo_t *, const siginfo_t *);
3036:	int copy_siginfo_to_user32(struct compat_siginfo *, const struct siginfo *);
624:	int dequeue_signal(struct task_struct *, sigset_t *, siginfo_t *);
2745:	long do_no_restart_syscall(struct restart_block *);
1825:	bool do_notify_parent(struct task_struct *, int);
1266:	int do_send_sig_info(int, struct siginfo *, struct task_struct *, enum pid_type);
3550:	int do_sigaction(int, struct k_sigaction *, struct k_sigaction *);
2674:	void exit_signals(struct task_struct *);
507:	void flush_itimer_signals(void);
534:	void flush_signal_handlers(struct task_struct *, int);
472:	void flush_signals(struct task_struct *);
457:	void flush_sigqueue(struct sigpending *);
1567:	void force_sig(int, struct task_struct *);
1664:	int force_sig_bnderr(void *, void *, void *);
1589:	int force_sig_fault(int, int, void *, struct task_struct *);
1292:	int force_sig_info(int, struct siginfo *, struct task_struct *);
1635:	int force_sig_mceerr(int, void *, short, struct task_struct *);
1679:	int force_sig_pkuerr(void *, u32);
1696:	int force_sig_ptrace_errno_trap(int, void *);
1578:	void force_sigsegv(int, struct task_struct *);
2398:	bool get_signal(struct ksignal *);
1380:	int group_send_sig_info(int, struct siginfo *, struct task_struct *, enum pid_type);
519:	void ignore_signals(struct task_struct *);
4120:	void kdb_send_sig(struct task_struct *, int);
3527:	void kernel_sigaction(int, __sighandler_t);
1708:	int kill_pgrp(struct pid *, int, int);
1720:	int kill_pid(struct pid *, int, int);
1415:	int kill_pid_info(int, struct siginfo *, struct pid *);
1458:	int kill_pid_info_as_cred(int, struct siginfo *, struct pid *, const struct cred *);
204:	int next_signal(struct sigpending *, sigset_t *);
2181:	void ptrace_notify(int);
179:	void recalc_sigpending(void);
173:	void recalc_sigpending_and_wake(struct task_struct *);
3652:	int restore_altstack(const stack_t *);
1562:	int send_sig(int, struct task_struct *, int);
1612:	int send_sig_fault(int, int, void *, struct task_struct *);
1546:	int send_sig_info(int, struct siginfo *, struct task_struct *);
1649:	int send_sig_mceerr(int, void *, short, struct task_struct *);
1770:	int send_sigqueue(struct sigqueue *, struct pid *, enum pid_type);
2854:	int set_compat_user_sigmask(const compat_sigset_t *, size_t);
2769:	void set_current_blocked(sigset_t *);
2835:	int set_user_sigmask(const sigset_t *, size_t);
3545:	void sigaction_compat_abi(struct k_sigaction *, struct k_sigaction *);
2983:	enum siginfo_layout siginfo_layout(unsigned int, int);
2634:	void signal_setup_done(int, struct ksignal *, int);
754:	void signal_wake_up_state(struct task_struct *, unsigned int);
4102:	void signals_init(void);
2799:	int sigprocmask(int, sigset_t *, sigset_t *);
1735:	struct sigqueue *sigqueue_alloc(void);
1745:	void sigqueue_free(struct sigqueue *);
333:	void task_clear_jobctl_pending(struct task_struct *, unsigned long);
309:	void task_clear_jobctl_trapping(struct task_struct *);
388:	void task_join_group_stop(struct task_struct *);
281:	bool task_set_jobctl_pending(struct task_struct *, unsigned long);
550:	bool unhandled_signal(struct task_struct *, int);
1324:	int zap_other_threads(struct task_struct *);
608:	static int __dequeue_signal(struct sigpending *, sigset_t *, siginfo_t *, bool *);
3467:	static long __do_compat_sys_rt_sigqueueinfo(compat_pid_t, int, struct compat_siginfo *);
3307:	static long __do_compat_sys_rt_sigtimedwait(compat_sigset_t *, struct compat_siginfo *, struct compat_timespec *, compat_size_t);
3510:	static long __do_compat_sys_rt_tgsigqueueinfo(compat_pid_t, compat_pid_t, int, struct compat_siginfo *);
3937:	static long __do_compat_sys_sigaction(int, const struct compat_old_sigaction *, struct compat_old_sigaction *);
3343:	static long __do_sys_kill(pid_t, int);
3457:	static long __do_sys_rt_sigqueueinfo(pid_t, int, siginfo_t *);
3275:	static long __do_sys_rt_sigtimedwait(const sigset_t *, siginfo_t *, const struct timespec *, size_t);
3498:	static long __do_sys_rt_tgsigqueueinfo(pid_t, pid_t, int, siginfo_t *);
484:	static void __flush_itimer_signals(struct sigpending *);
1088:	static int __send_signal(int, struct siginfo *, struct task_struct *, enum pid_type, int);
2750:	static void __set_task_blocked(struct task_struct *, const sigset_t *);
409:	static struct sigqueue *__sigqueue_alloc(int, struct task_struct *, gfp_t, int);
448:	static void __sigqueue_free(struct sigqueue *);
822:	static int check_kill_permission(int, struct siginfo *, struct task_struct *);
983:	static void complete_signal(int, struct task_struct *, enum pid_type);
3677:	static int do_compat_sigaltstack(const compat_stack_t *, compat_stack_t *);
1929:	static void do_notify_parent_cldstop(struct task_struct *, bool, int);
3436:	static int do_rt_sigqueueinfo(pid_t, int, siginfo_t *);
3480:	static int do_rt_tgsigqueueinfo(pid_t, pid_t, int, siginfo_t *);
3358:	static int do_send_specific(pid_t, pid_t, int, struct siginfo *);
3596:	static int do_sigaltstack(const stack_t *, stack_t *, unsigned long, size_t);
2214:	static bool do_signal_stop(int);
2936:	static void do_sigpending(sigset_t *);
3217:	static int do_sigtimedwait(const sigset_t *, siginfo_t *, const struct timespec *);
3387:	static int do_tkill(pid_t, pid_t, int);
774:	static void flush_sigqueue_mask(sigset_t *, struct sigpending *);
893:	static bool prepare_signal(int, struct task_struct *, bool);
2167:	static void ptrace_do_notify(int, int, int);
2032:	static void ptrace_stop(int, int, int, siginfo_t *);
874:	static void ptrace_trap_notify(struct task_struct *);
152:	static bool recalc_sigpending_tsk(struct task_struct *);
2647:	static void retarget_shared_pending(struct task_struct *, sigset_t *);
1208:	static int send_signal(int, struct siginfo *, struct task_struct *, enum pid_type);
1245:	static int setup_print_fatal_signals(char *);
4033:	static int sigsuspend(sigset_t *);
362:	static bool task_participate_group_stop(struct task_struct *);

File kernel/smp.c:
515:	void arch_disable_smp_support(void);
89:	void call_function_init(void);
190:	void generic_smp_call_function_single_interrupt(void);
719:	void kick_all_cpus_sync(void);
596:	int on_each_cpu(void (*)(void *), void *, int);
670:	void on_each_cpu_cond(bool (*)(int, void *), smp_call_func_t, void *, bool, gfp_t);
627:	void on_each_cpu_mask(const struct cpumask *, smp_call_func_t, void *, bool);
557:	void setup_nr_cpu_ids(void);
489:	int smp_call_function(smp_call_func_t, void *, int);
360:	int smp_call_function_any(const struct cpumask *, smp_call_func_t, void *, int);
403:	void smp_call_function_many(const struct cpumask *, smp_call_func_t, void *, bool);
268:	int smp_call_function_single(int, smp_call_func_t, void *, int);
326:	int smp_call_function_single_async(int, call_single_data_t *);
778:	int smp_call_on_cpu(unsigned int, int (*)(void *), void *, bool);
563:	void smp_init(void);
64:	int smpcfd_dead_cpu(unsigned int);
74:	int smpcfd_dying_cpu(unsigned int);
42:	int smpcfd_prepare_cpu(unsigned int);
733:	void wake_up_all_idle_cpus(void);
704:	static void do_nothing(void *);
209:	static void flush_smp_call_function_queue(bool);
141:	static int generic_exec_single(int, call_single_data_t *, smp_call_func_t, void *);
541:	static int maxcpus(char *);
517:	static int nosmp(char *);
528:	static int nrcpus(char *);
764:	static void smp_call_on_cpu_callback(struct work_struct *);

File kernel/smpboot.c:
352:	int cpu_check_up_prepare(int);
465:	bool cpu_report_death(void);
335:	int cpu_report_state(int);
408:	void cpu_set_state_online(int);
418:	bool cpu_wait_death(unsigned int, int);
29:	struct task_struct *idle_thread_get(unsigned int);
39:	void idle_thread_set_boot_cpu(void);
66:	void idle_threads_init(void);
213:	int smpboot_create_threads(unsigned int);
255:	int smpboot_park_threads(unsigned int);
289:	int smpboot_register_percpu_thread(struct smp_hotplug_thread *);
236:	int smpboot_unpark_threads(unsigned int);
318:	void smpboot_unregister_percpu_thread(struct smp_hotplug_thread *);
170:	static int __smpboot_create_thread(struct smp_hotplug_thread *, unsigned int);
266:	static void smpboot_destroy_threads(struct smp_hotplug_thread *);
106:	static int smpboot_thread_fn(void *);

File kernel/softirq.c:
249:	void __do_softirq(void);
166:	void __local_bh_enable_ip(unsigned long, unsigned int);
448:	void __raise_softirq_irqoff(unsigned int);
493:	void __tasklet_hi_schedule(struct tasklet_struct *);
486:	void __tasklet_schedule(struct tasklet_struct *);
159:	void _local_bh_enable(void);
760:	unsigned int arch_dynirq_lower_bound(unsigned int);
755:	int arch_early_irq_init(void);
750:	int arch_probe_nr_irqs(void);
323:	void do_softirq(void);
745:	int early_irq_init(void);
344:	void irq_enter(void);
402:	void irq_exit(void);
454:	void open_softirq(int, void (*)(struct softirq_action *));
439:	void raise_softirq(unsigned int);
422:	void raise_softirq_irqoff(unsigned int);
625:	void softirq_init(void);
613:	void tasklet_hrtimer_init(struct tasklet_hrtimer *, enum hrtimer_restart (*)(struct hrtimer *), clockid_t, enum hrtimer_mode);
548:	void tasklet_init(struct tasklet_struct *, void (*)(unsigned long), unsigned long);
559:	void tasklet_kill(struct tasklet_struct *);
671:	void tasklet_kill_immediate(struct tasklet_struct *, unsigned int);
583:	static enum hrtimer_restart __hrtimer_tasklet_trampoline(struct hrtimer *);
596:	static void __tasklet_hrtimer_trampoline(unsigned long);
470:	static void __tasklet_schedule_common(struct tasklet_struct *, struct tasklet_head *, unsigned int);
640:	static int ksoftirqd_should_run(unsigned int);
645:	static void run_ksoftirqd(unsigned int);
730:	static int spawn_ksoftirqd(void);
694:	static int takeover_tasklets(unsigned int);
538:	static void tasklet_action(struct softirq_action *);
500:	static void tasklet_action_common(struct tasklet_head *, unsigned int, struct softirq_action *);
543:	static void tasklet_hi_action(struct softirq_action *);

File kernel/stacktrace.c:
14:	void print_stack_trace(struct stack_trace *, int);
68:	void save_stack_trace_regs(struct pt_regs *, struct stack_trace *);
62:	void save_stack_trace_tsk(struct task_struct *, struct stack_trace *);
74:	int save_stack_trace_tsk_reliable(struct task_struct *, struct stack_trace *);
26:	int snprint_stack_trace(char *, size_t, struct stack_trace *, int);

File kernel/stop_machine.c:
447:	int stop_cpus(const struct cpumask *, cpu_stop_fn_t, void *);
634:	int stop_machine(cpu_stop_fn_t, void *, const struct cpumask *);
598:	int stop_machine_cpuslocked(cpu_stop_fn_t, void *, const struct cpumask *);
668:	int stop_machine_from_inactive_cpu(cpu_stop_fn_t, void *, const struct cpumask *);
536:	void stop_machine_park(int);
562:	void stop_machine_unpark(int);
129:	int stop_one_cpu(unsigned int, cpu_stop_fn_t, void *);
371:	bool stop_one_cpu_nowait(unsigned int, cpu_stop_fn_t, void *, struct cpu_stop_work *);
322:	int stop_two_cpus(unsigned int, unsigned int, cpu_stop_fn_t, void *);
476:	int try_stop_cpus(const struct cpumask *, cpu_stop_fn_t, void *);
74:	static void __cpu_stop_queue_work(struct cpu_stopper *, struct cpu_stop_work *, struct wake_q_head *);
407:	static int __stop_cpus(const struct cpumask *, cpu_stop_fn_t, void *);
550:	static void cpu_stop_create(unsigned int);
580:	static int cpu_stop_init(void);
60:	static void cpu_stop_init_done(struct cpu_stop_done *, unsigned int);
555:	static void cpu_stop_park(unsigned int);
83:	static bool cpu_stop_queue_work(unsigned int, struct cpu_stop_work *);
488:	static int cpu_stop_should_run(unsigned int);
68:	static void cpu_stop_signal_done(struct cpu_stop_done *);
500:	static void cpu_stopper_thread(unsigned int);
188:	static int multi_cpu_stop(void *);
378:	static bool queue_stop_cpus_work(const struct cpumask *, cpu_stop_fn_t, void *, struct cpu_stop_done *);

File kernel/sys.c:
1415:	long __ia32_compat_sys_getrlimit(const struct pt_regs *);
1800:	long __ia32_compat_sys_getrusage(const struct pt_regs *);
1465:	long __ia32_compat_sys_old_getrlimit(const struct pt_regs *);
1395:	long __ia32_compat_sys_setrlimit(const struct pt_regs *);
2597:	long __ia32_compat_sys_sysinfo(const struct pt_regs *);
972:	long __ia32_compat_sys_times(const struct pt_regs *);
2488:	long __ia32_sys_getcpu(const struct pt_regs *);
1330:	long __ia32_sys_gethostname(const struct pt_regs *);
1102:	long __ia32_sys_getpgid(const struct pt_regs *);
263:	long __ia32_sys_getpriority(const struct pt_regs *);
767:	long __ia32_sys_getresgid(const struct pt_regs *);
688:	long __ia32_sys_getresuid(const struct pt_regs *);
1381:	long __ia32_sys_getrlimit(const struct pt_regs *);
1787:	long __ia32_sys_getrusage(const struct pt_regs *);
1116:	long __ia32_sys_getsid(const struct pt_regs *);
1235:	long __ia32_sys_newuname(const struct pt_regs *);
1446:	long __ia32_sys_old_getrlimit(const struct pt_regs *);
1276:	long __ia32_sys_olduname(const struct pt_regs *);
2263:	long __ia32_sys_prctl(const struct pt_regs *);
1614:	long __ia32_sys_prlimit64(const struct pt_regs *);
1356:	long __ia32_sys_setdomainname(const struct pt_regs *);
873:	long __ia32_sys_setfsgid(const struct pt_regs *);
830:	long __ia32_sys_setfsuid(const struct pt_regs *);
441:	long __ia32_sys_setgid(const struct pt_regs *);
1303:	long __ia32_sys_sethostname(const struct pt_regs *);
1003:	long __ia32_sys_setpgid(const struct pt_regs *);
193:	long __ia32_sys_setpriority(const struct pt_regs *);
399:	long __ia32_sys_setregid(const struct pt_regs *);
762:	long __ia32_sys_setresgid(const struct pt_regs *);
683:	long __ia32_sys_setresuid(const struct pt_regs *);
550:	long __ia32_sys_setreuid(const struct pt_regs *);
1661:	long __ia32_sys_setrlimit(const struct pt_regs *);
608:	long __ia32_sys_setuid(const struct pt_regs *);
2567:	long __ia32_sys_sysinfo(const struct pt_regs *);
953:	long __ia32_sys_times(const struct pt_regs *);
1813:	long __ia32_sys_umask(const struct pt_regs *);
1256:	long __ia32_sys_uname(const struct pt_regs *);
838:	long __sys_setfsgid(gid_t);
794:	long __sys_setfsuid(uid_t);
409:	long __sys_setgid(gid_t);
347:	long __sys_setregid(gid_t, gid_t);
710:	long __sys_setresgid(gid_t, gid_t, gid_t);
618:	long __sys_setresuid(uid_t, uid_t, uid_t);
490:	long __sys_setreuid(uid_t, uid_t);
566:	long __sys_setuid(uid_t);
2488:	long __x64_sys_getcpu(const struct pt_regs *);
934:	long __x64_sys_getegid(const struct pt_regs *);
922:	long __x64_sys_geteuid(const struct pt_regs *);
928:	long __x64_sys_getgid(const struct pt_regs *);
1330:	long __x64_sys_gethostname(const struct pt_regs *);
1102:	long __x64_sys_getpgid(const struct pt_regs *);
1109:	long __x64_sys_getpgrp(const struct pt_regs *);
888:	long __x64_sys_getpid(const struct pt_regs *);
905:	long __x64_sys_getppid(const struct pt_regs *);
263:	long __x64_sys_getpriority(const struct pt_regs *);
767:	long __x64_sys_getresgid(const struct pt_regs *);
688:	long __x64_sys_getresuid(const struct pt_regs *);
1381:	long __x64_sys_getrlimit(const struct pt_regs *);
1787:	long __x64_sys_getrusage(const struct pt_regs *);
1116:	long __x64_sys_getsid(const struct pt_regs *);
894:	long __x64_sys_gettid(const struct pt_regs *);
916:	long __x64_sys_getuid(const struct pt_regs *);
1235:	long __x64_sys_newuname(const struct pt_regs *);
1446:	long __x64_sys_old_getrlimit(const struct pt_regs *);
1276:	long __x64_sys_olduname(const struct pt_regs *);
2263:	long __x64_sys_prctl(const struct pt_regs *);
1614:	long __x64_sys_prlimit64(const struct pt_regs *);
1356:	long __x64_sys_setdomainname(const struct pt_regs *);
873:	long __x64_sys_setfsgid(const struct pt_regs *);
830:	long __x64_sys_setfsuid(const struct pt_regs *);
441:	long __x64_sys_setgid(const struct pt_regs *);
1303:	long __x64_sys_sethostname(const struct pt_regs *);
1003:	long __x64_sys_setpgid(const struct pt_regs *);
193:	long __x64_sys_setpriority(const struct pt_regs *);
399:	long __x64_sys_setregid(const struct pt_regs *);
762:	long __x64_sys_setresgid(const struct pt_regs *);
683:	long __x64_sys_setresuid(const struct pt_regs *);
550:	long __x64_sys_setreuid(const struct pt_regs *);
1661:	long __x64_sys_setrlimit(const struct pt_regs *);
1188:	long __x64_sys_setsid(const struct pt_regs *);
608:	long __x64_sys_setuid(const struct pt_regs *);
2567:	long __x64_sys_sysinfo(const struct pt_regs *);
953:	long __x64_sys_times(const struct pt_regs *);
1813:	long __x64_sys_umask(const struct pt_regs *);
1256:	long __x64_sys_uname(const struct pt_regs *);
2252:	int arch_prctl_spec_ctrl_get(struct task_struct *, unsigned long);
2257:	int arch_prctl_spec_ctrl_set(struct task_struct *, unsigned long, unsigned long);
1525:	int do_prlimit(struct task_struct *, unsigned int, struct rlimit *, struct rlimit *);
1713:	void getrusage(struct task_struct *, int, struct rusage *);
1155:	int ksys_setsid(void);
1800:	static long __do_compat_sys_getrusage(int, struct compat_rusage *);
2597:	static long __do_compat_sys_sysinfo(struct compat_sysinfo *);
1787:	static long __do_sys_getrusage(int, struct rusage *);
1235:	static long __do_sys_newuname(struct new_utsname *);
2567:	static long __do_sys_sysinfo(struct sysinfo *);
1256:	static long __do_sys_uname(struct old_utsname *);
1592:	static int check_prlimit_permission(struct task_struct *, unsigned int);
1074:	static int do_getpgid(pid_t);
940:	static void do_sys_times(struct tms *);
2505:	static int do_sysinfo(struct sysinfo *);
1209:	static int override_release(char *, size_t);
2056:	static int prctl_set_auxv(struct mm_struct *, unsigned long, unsigned long);
2086:	static int prctl_set_mm(int, unsigned long, unsigned long, unsigned long);
1819:	static int prctl_set_mm_exe_file(struct mm_struct *, unsigned int);
1966:	static int prctl_set_mm_map(int, const void *, unsigned long);
2234:	static int propagate_has_child_subreaper(struct task_struct *, void *);
169:	static int set_one_prio(struct task_struct *, int, int);
449:	static int set_user(struct cred *, struct cred *);
1885:	static int validate_prctl_map(struct prctl_mm_map *);

File kernel/sys_ni.c:
20:	long sys_ni_syscall(void);

File kernel/sysctl.c:
3293:	int proc_do_large_bitmap(struct ctl_table *, int, void *, size_t *, loff_t *);
2698:	int proc_dointvec(struct ctl_table *, int, void *, size_t *, loff_t *);
3202:	int proc_dointvec_jiffies(struct ctl_table *, int, void *, size_t *, loff_t *);
2833:	int proc_dointvec_minmax(struct ctl_table *, int, void *, size_t *, loff_t *);
3247:	int proc_dointvec_ms_jiffies(struct ctl_table *, int, void *, size_t *, loff_t *);
3224:	int proc_dointvec_userhz_jiffies(struct ctl_table *, int, void *, size_t *, loff_t *);
2238:	int proc_dostring(struct ctl_table *, int, void *, size_t *, loff_t *);
2717:	int proc_douintvec(struct ctl_table *, int, void *, size_t *, loff_t *);
2902:	int proc_douintvec_minmax(struct ctl_table *, int, void *, size_t *, loff_t *);
3084:	int proc_doulongvec_minmax(struct ctl_table *, int, void *, size_t *, loff_t *);
3107:	int proc_doulongvec_ms_jiffies_minmax(struct ctl_table *, int, void *, size_t *, loff_t *);
2103:	int sysctl_init(void);
2453:	static int __do_proc_dointvec(void *, struct ctl_table *, int, void *, size_t *, loff_t *, int (*)(bool *, unsigned long *, int *, int, void *), void *);
2638:	static int __do_proc_douintvec(void *, struct ctl_table *, int, void *, size_t *, loff_t *, int (*)(unsigned long *, unsigned int *, int, void *), void *);
2974:	static int __do_proc_doulongvec_minmax(void *, struct ctl_table *, int, void *, size_t *, loff_t *, unsigned long, unsigned long);
2409:	static int do_proc_dointvec_conv(bool *, unsigned long *, int *, int, void *);
3116:	static int do_proc_dointvec_jiffies_conv(bool *, unsigned long *, int *, int, void *);
2784:	static int do_proc_dointvec_minmax_conv(bool *, unsigned long *, int *, int, void *);
3162:	static int do_proc_dointvec_ms_jiffies_conv(bool *, unsigned long *, int *, int, void *);
3139:	static int do_proc_dointvec_userhz_jiffies_conv(bool *, unsigned long *, int *, int, void *);
2913:	static int do_proc_dopipe_max_size_conv(unsigned long *, unsigned int *, int, void *);
2436:	static int do_proc_douintvec_conv(unsigned long *, unsigned int *, int, void *);
2858:	static int do_proc_douintvec_minmax_conv(unsigned long *, unsigned int *, int, void *);
3254:	static int proc_do_cad_pid(struct ctl_table *, int, void *, size_t *, loff_t *);
2954:	static int proc_dointvec_minmax_coredump(struct ctl_table *, int, void *, size_t *, loff_t *);
2760:	static int proc_dointvec_minmax_sysadmin(struct ctl_table *, int, void *, size_t *, loff_t *);
2933:	static int proc_dopipe_max_size(struct ctl_table *, int, void *, size_t *, loff_t *);
2964:	static int proc_dostring_coredump(struct ctl_table *, int, void *, size_t *, loff_t *);
2204:	static bool proc_first_pos_non_zero_ignore(struct ctl_table *, loff_t *);
2319:	static int proc_get_long(char **, size_t *, unsigned long *, bool *, const char *, char *, unsigned int);
2379:	static int proc_put_long(void **, size_t *, unsigned long, bool);
2728:	static int proc_taint(struct ctl_table *, int, void *, size_t *, loff_t *);
241:	static int sysrq_sysctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
2940:	static void validate_coredump_safety(void);

File kernel/sysctl_binary.c:
1444:	long __ia32_compat_sys_sysctl(const struct pt_regs *);
1402:	long __ia32_sys_sysctl(const struct pt_regs *);
1402:	long __x64_sys_sysctl(const struct pt_regs *);
1383:	static ssize_t do_sysctl(int *, int, size_t, void *, size_t, void *);

File kernel/task_work.c:
28:	int task_work_add(struct task_struct *, struct callback_head *, int);
68:	struct callback_head *task_work_cancel(struct task_struct *, task_work_func_t);
102:	void task_work_run(void);

File kernel/taskstats.c:
597:	void taskstats_exit(struct task_struct *, int);
681:	void taskstats_init_early(void);
288:	static int add_del_listener(pid_t, const struct cpumask *, int);
399:	static int cgroupstats_user_cmd(struct sk_buff *, struct genl_info *);
169:	static void fill_stats(struct user_namespace *, struct pid_namespace *, struct task_struct *, struct taskstats *);
369:	static struct taskstats *mk_reply(struct sk_buff *, int, u32);
347:	static int parse(struct nlattr *, struct cpumask *);
79:	static int prepare_reply(struct genl_info *, u8, struct sk_buff **, size_t);
110:	static int send_reply(struct sk_buff *, struct genl_info *);
692:	static int taskstats_init(void);
550:	static int taskstats_user_cmd(struct sk_buff *, struct genl_info *);

File kernel/time/alarmtimer.c:
435:	int alarm_cancel(struct alarm *);
230:	ktime_t alarm_expires_remaining(const struct alarm *);
447:	u64 alarm_forward(struct alarm *, ktime_t, ktime_t);
479:	u64 alarm_forward_now(struct alarm *, ktime_t);
348:	void alarm_init(struct alarm *, enum alarmtimer_type, enum alarmtimer_restart (*)(struct alarm *, ktime_t));
391:	void alarm_restart(struct alarm *);
362:	void alarm_start(struct alarm *, ktime_t);
382:	void alarm_start_relative(struct alarm *, ktime_t);
411:	int alarm_try_to_cancel(struct alarm *);
75:	struct rtc_device *alarmtimer_get_rtcdev(void);
659:	static int alarm_clock_get(clockid_t, struct timespec64 *);
642:	static int alarm_clock_getres(const clockid_t, struct timespec64 *);
539:	static enum alarmtimer_restart alarm_handle_timer(struct alarm *, ktime_t);
621:	static void alarm_timer_arm(struct k_itimer *, ktime_t, bool, bool);
676:	static int alarm_timer_create(struct k_itimer *);
586:	static s64 alarm_timer_forward(struct k_itimer *, ktime_t);
789:	static int alarm_timer_nsleep(const clockid_t, int, const struct timespec64 *);
769:	static long alarm_timer_nsleep_restart(struct restart_block *);
573:	static void alarm_timer_rearm(struct k_itimer *);
598:	static ktime_t alarm_timer_remaining(struct k_itimer *, ktime_t);
609:	static int alarm_timer_try_to_cancel(struct k_itimer *);
715:	static int alarmtimer_do_nsleep(struct alarm *, ktime_t, enum alarmtimer_type);
165:	static void alarmtimer_enqueue(struct alarm_base *, struct alarm *);
202:	static enum hrtimer_restart alarmtimer_fired(struct hrtimer *);
867:	static int alarmtimer_init(void);
697:	static enum alarmtimer_restart alarmtimer_nsleep_wakeup(struct alarm *, ktime_t);
309:	static int alarmtimer_resume(struct device *);
88:	static int alarmtimer_rtc_add_device(struct device *, struct class_interface *);
248:	static int alarmtimer_suspend(struct device *);

File kernel/time/clockevents.c:
526:	int __clockevents_update_freq(struct clock_event_device *, u32);
91:	u64 clockevent_delta2ns(unsigned long, struct clock_event_device *);
515:	void clockevents_config_and_register(struct clock_event_device *, u32, unsigned long, unsigned long);
579:	void clockevents_exchange_device(struct clock_event_device *, struct clock_event_device *);
567:	void clockevents_handle_noop(struct clock_event_device *);
311:	int clockevents_program_event(struct clock_event_device *, ktime_t, bool);
454:	void clockevents_register_device(struct clock_event_device *);
614:	void clockevents_resume(void);
179:	void clockevents_shutdown(struct clock_event_device *);
602:	void clockevents_suspend(void);
153:	void clockevents_switch_state(struct clock_event_device *, enum clock_event_state);
189:	int clockevents_tick_resume(struct clock_event_device *);
439:	int clockevents_unbind_device(struct clock_event_device *, int);
551:	int clockevents_update_freq(struct clock_event_device *, u32);
643:	void tick_cleanup_dead_cpu(int);
632:	void tick_offline_cpu(unsigned int);
411:	static void __clockevents_unbind(void *);
36:	static u64 cev_delta2ns(unsigned long, struct clock_event_device *, bool);
482:	static void clockevents_config(struct clock_event_device *, u32);
779:	static int clockevents_init_sysfs(void);
241:	static int clockevents_program_min_delta(struct clock_event_device *);
681:	static ssize_t sysfs_show_current_tick_dev(struct device *, struct device_attribute *, char *);
698:	static ssize_t sysfs_unbind_tick_dev(struct device *, struct device_attribute *, const char *, size_t);

File kernel/time/clocksource.c:
943:	int __clocksource_register_scale(struct clocksource *, u32, u32);
876:	void __clocksource_update_freq_scale(struct clocksource *, u32, u32);
684:	u64 clocks_calc_max_nsecs(u32, u32, u32, u64, u64 *);
63:	void clocks_calc_mult_shift(u32 *, u32 *, u32, u32, u32);
978:	void clocksource_change_rating(struct clocksource *, int);
192:	void clocksource_mark_unstable(struct clocksource *);
630:	void clocksource_resume(void);
543:	void clocksource_start_suspend_timing(struct clocksource *, u64);
581:	u64 clocksource_stop_suspend_timing(struct clocksource *, u64);
618:	void clocksource_suspend(void);
648:	void clocksource_touch_watchdog(void);
1036:	int clocksource_unregister(struct clocksource *);
1070:	ssize_t sysfs_get_uname(const char *, char *, size_t);
750:	static void __clocksource_select(bool);
486:	static void __clocksource_suspend_select(struct clocksource *);
163:	static void __clocksource_unstable(struct clocksource *);
422:	static int __clocksource_watchdog_kthread(void);
1158:	static ssize_t available_clocksource_show(struct device *, struct device_attribute *, char *);
1243:	static int boot_override_clock(char *);
1225:	static int boot_override_clocksource(char *);
832:	static int clocksource_done_booting(void);
850:	static void clocksource_enqueue(struct clocksource *);
373:	static void clocksource_select_watchdog(bool);
513:	static void clocksource_suspend_select(bool);
997:	static int clocksource_unbind(struct clocksource *);
205:	static void clocksource_watchdog(struct timer_list *);
447:	static int clocksource_watchdog_kthread(void *);
145:	static void clocksource_watchdog_work(struct work_struct *);
1057:	static ssize_t current_clocksource_show(struct device *, struct device_attribute *, char *);
1097:	static ssize_t current_clocksource_store(struct device *, struct device_attribute *, const char *, size_t);
1205:	static int init_clocksource_sysfs(void);
1124:	static ssize_t unbind_clocksource_store(struct device *, struct device_attribute *, const char *, size_t);

File kernel/time/hrtimer.c:
1251:	ktime_t __hrtimer_get_remaining(const struct hrtimer *, bool);
1850:	long __ia32_compat_sys_nanosleep(const struct pt_regs *);
1830:	long __ia32_sys_nanosleep(const struct pt_regs *);
1830:	long __x64_sys_nanosleep(const struct pt_regs *);
875:	void clock_was_set(void);
762:	void clock_was_set_delayed(void);
1387:	bool hrtimer_active(const struct hrtimer *);
1234:	int hrtimer_cancel(struct hrtimer *);
925:	u64 hrtimer_forward(struct hrtimer *, ktime_t, ktime_t);
1273:	u64 hrtimer_get_next_event(void);
1372:	void hrtimer_init(struct hrtimer *, clockid_t, enum hrtimer_mode);
1718:	void hrtimer_init_sleeper(struct hrtimer_sleeper *, struct task_struct *);
1555:	void hrtimer_interrupt(struct clock_event_device *);
1795:	long hrtimer_nanosleep(const struct timespec64 *, const enum hrtimer_mode, const clockid_t);
1296:	u64 hrtimer_next_event_without(const struct hrtimer *);
1668:	void hrtimer_run_queues(void);
1168:	void hrtimer_start_range_ns(struct hrtimer *, ktime_t, u64, const enum hrtimer_mode);
1199:	int hrtimer_try_to_cancel(struct hrtimer *);
1923:	int hrtimers_dead_cpu(unsigned int);
1970:	void hrtimers_init(void);
1870:	int hrtimers_prepare_cpu(unsigned int);
890:	void hrtimers_resume(void);
323:	ktime_t ktime_add_safe(const ktime_t, const ktime_t);
1725:	int nanosleep_copyout(struct restart_block *, struct timespec64 *);
2090:	int schedule_hrtimeout(ktime_t *, const enum hrtimer_mode);
2056:	int schedule_hrtimeout_range(ktime_t *, u64, const enum hrtimer_mode);
1984:	int schedule_hrtimeout_range_clock(ktime_t *, u64, const enum hrtimer_mode, clockid_t);
559:	static ktime_t __hrtimer_get_next_event(struct hrtimer_cpu_base *, unsigned int);
1335:	static void __hrtimer_init(struct hrtimer *, clockid_t, enum hrtimer_mode);
492:	static ktime_t __hrtimer_next_event_base(struct hrtimer_cpu_base *, const struct hrtimer *, unsigned int, ktime_t);
1495:	static void __hrtimer_run_queues(struct hrtimer_cpu_base *, ktime_t, unsigned long, unsigned int);
992:	static void __remove_hrtimer(struct hrtimer *, struct hrtimer_clock_base *, u8, int);
751:	static void clock_was_set_work(struct work_struct *);
1744:	static int do_nanosleep(struct hrtimer_sleeper *, enum hrtimer_mode);
968:	static int enqueue_hrtimer(struct hrtimer *, struct hrtimer_clock_base *, enum hrtimer_mode);
651:	static void hrtimer_force_reprogram(struct hrtimer_cpu_base *, int);
1781:	static long hrtimer_nanosleep_restart(struct restart_block *);
782:	static void hrtimer_reprogram(struct hrtimer *, bool);
1532:	static void hrtimer_run_softirq(struct softirq_action *);
584:	static ktime_t hrtimer_update_next_event(struct hrtimer_cpu_base *);
1076:	static void hrtimer_update_softirq_timer(struct hrtimer_cpu_base *, bool);
1705:	static enum hrtimer_restart hrtimer_wakeup(struct hrtimer *);
166:	static struct hrtimer_clock_base *lock_hrtimer_base(unsigned long *, const struct hrtimer *);
718:	static void retrigger_next_event(void *);
698:	static int setup_hrtimer_hres(char *);

File kernel/time/itimer.c:
122:	long __ia32_compat_sys_getitimer(const struct pt_regs *);
315:	long __ia32_compat_sys_setitimer(const struct pt_regs *);
282:	long __ia32_sys_alarm(const struct pt_regs *);
107:	long __ia32_sys_getitimer(const struct pt_regs *);
289:	long __ia32_sys_setitimer(const struct pt_regs *);
282:	long __x64_sys_alarm(const struct pt_regs *);
107:	long __x64_sys_getitimer(const struct pt_regs *);
289:	long __x64_sys_setitimer(const struct pt_regs *);
83:	int do_getitimer(int, struct itimerval *);
188:	int do_setitimer(int, struct itimerval *, struct itimerval *);
138:	enum hrtimer_restart it_real_fn(struct hrtimer *);
253:	static unsigned int alarm_setitimer(unsigned int);
49:	static void get_cpu_itimer(struct task_struct *, unsigned int, struct itimerval * const);
31:	static struct timeval itimer_get_remtime(struct hrtimer *);
150:	static void set_cpu_itimer(struct task_struct *, unsigned int, const struct itimerval * const, struct itimerval * const);

File kernel/time/jiffies.c:
103:	struct clocksource *clocksource_default_clock(void);
110:	int register_refined_jiffies(long);
96:	static int init_jiffies_clocksource(void);
51:	static u64 jiffies_read(struct clocksource *);

File kernel/time/ntp.c:
723:	int __do_adjtimex(struct timex *, const struct timespec64 *, s32 *);
351:	void ntp_clear(void);
380:	ktime_t ntp_get_next_leap(void);
1037:	void ntp_init(void);
633:	void ntp_notify_cmos_timer(void);
369:	u64 ntp_tick_length(void);
400:	int second_overflow(time64_t);
559:	int update_persistent_clock(struct timespec);
564:	int update_persistent_clock64(struct timespec64);
1025:	static int ntp_tick_adj_setup(char *);
259:	static void ntp_update_frequency(void);
622:	static void sync_hw_clock(struct work_struct *);

File kernel/time/posix-clock.c:
175:	int posix_clock_register(struct posix_clock *, struct device *);
195:	void posix_clock_unregister(struct posix_clock *);
212:	static int get_clock_desc(const clockid_t, struct posix_clock_desc *);
239:	static int pc_clock_adjtime(clockid_t, struct timex *);
282:	static int pc_clock_getres(clockid_t, struct timespec64 *);
263:	static int pc_clock_gettime(clockid_t, struct timespec64 *);
301:	static int pc_clock_settime(clockid_t, const struct timespec64 *);
85:	static long posix_clock_ioctl(struct file *, unsigned int, unsigned long);
121:	static int posix_clock_open(struct inode *, struct file *);
69:	static __poll_t posix_clock_poll(struct file *, poll_table *);
52:	static ssize_t posix_clock_read(struct file *, char *, size_t, loff_t *);
147:	static int posix_clock_release(struct inode *, struct file *);

File kernel/time/posix-cpu-timers.c:
433:	void posix_cpu_timers_exit(struct task_struct *);
437:	void posix_cpu_timers_exit_group(struct task_struct *);
1143:	void run_posix_cpu_timers(struct task_struct *);
1207:	void set_process_cpu_timer(struct task_struct *, unsigned int, u64 *, u64 *);
212:	void thread_group_cputimer(struct task_struct *, struct task_cputime *);
29:	void update_rlimit_cpu(struct task_struct *, unsigned long);
451:	static void arm_timer(struct k_itimer *);
65:	static void bump_cpu_timer(struct k_itimer *, u64);
38:	static int check_clock(const clockid_t);
887:	static void check_cpu_itimer(struct task_struct *, struct cpu_itimer *, u64 *, u64, int);
777:	static unsigned long long check_timers_list(struct list_head *, struct list_head *, unsigned long long);
421:	static void cleanup_timers(struct list_head *);
162:	static int cpu_clock_sample(const clockid_t, struct task_struct *, u64 *);
510:	static void cpu_timer_fire(struct k_itimer *);
547:	static int cpu_timer_sample_group(const clockid_t, struct task_struct *, u64 *);
1256:	static int do_cpu_nanosleep(const clockid_t, int, const struct timespec64 *);
291:	static int posix_cpu_clock_get(const clockid_t, struct timespec64 *);
269:	static int posix_cpu_clock_get_task(struct task_struct *, const clockid_t, struct timespec64 *);
126:	static int posix_cpu_clock_getres(const clockid_t, struct timespec64 *);
145:	static int posix_cpu_clock_set(const clockid_t, const struct timespec64 *);
1353:	static int posix_cpu_nsleep(const clockid_t, int, const struct timespec64 *);
1380:	static long posix_cpu_nsleep_restart(struct restart_block *);
323:	static int posix_cpu_timer_create(struct k_itimer *);
371:	static int posix_cpu_timer_del(struct k_itimer *);
719:	static void posix_cpu_timer_get(struct k_itimer *, struct itimerspec64 *);
1008:	static void posix_cpu_timer_rearm(struct k_itimer *);
575:	static int posix_cpu_timer_set(struct k_itimer *, int, struct itimerspec64 *, struct itimerspec64 *);
1398:	static int process_cpu_clock_get(const clockid_t, struct timespec64 *);
1393:	static int process_cpu_clock_getres(const clockid_t, struct timespec64 *);
1408:	static int process_cpu_nsleep(const clockid_t, int, const struct timespec64 *);
1403:	static int process_cpu_timer_create(struct k_itimer *);
1418:	static int thread_cpu_clock_get(const clockid_t, struct timespec64 *);
1413:	static int thread_cpu_clock_getres(const clockid_t, struct timespec64 *);
1423:	static int thread_cpu_timer_create(struct k_itimer *);

File kernel/time/posix-timers.c:
1151:	long __ia32_compat_sys_clock_adjtime(const struct pt_regs *);
1179:	long __ia32_compat_sys_clock_getres(const struct pt_regs *);
1129:	long __ia32_compat_sys_clock_gettime(const struct pt_regs *);
1236:	long __ia32_compat_sys_clock_nanosleep(const struct pt_regs *);
1114:	long __ia32_compat_sys_clock_settime(const struct pt_regs *);
587:	long __ia32_compat_sys_timer_create(const struct pt_regs *);
754:	long __ia32_compat_sys_timer_gettime(const struct pt_regs *);
927:	long __ia32_compat_sys_timer_settime(const struct pt_regs *);
1071:	long __ia32_sys_clock_adjtime(const struct pt_regs *);
1094:	long __ia32_sys_clock_getres(const struct pt_regs *);
1053:	long __ia32_sys_clock_gettime(const struct pt_regs *);
1209:	long __ia32_sys_clock_nanosleep(const struct pt_regs *);
1038:	long __ia32_sys_clock_settime(const struct pt_regs *);
572:	long __ia32_sys_timer_create(const struct pt_regs *);
970:	long __ia32_sys_timer_delete(const struct pt_regs *);
778:	long __ia32_sys_timer_getoverrun(const struct pt_regs *);
739:	long __ia32_sys_timer_gettime(const struct pt_regs *);
904:	long __ia32_sys_timer_settime(const struct pt_regs *);
1071:	long __x64_sys_clock_adjtime(const struct pt_regs *);
1094:	long __x64_sys_clock_getres(const struct pt_regs *);
1053:	long __x64_sys_clock_gettime(const struct pt_regs *);
1209:	long __x64_sys_clock_nanosleep(const struct pt_regs *);
1038:	long __x64_sys_clock_settime(const struct pt_regs *);
572:	long __x64_sys_timer_create(const struct pt_regs *);
970:	long __x64_sys_timer_delete(const struct pt_regs *);
778:	long __x64_sys_timer_getoverrun(const struct pt_regs *);
739:	long __x64_sys_timer_gettime(const struct pt_regs *);
904:	long __x64_sys_timer_settime(const struct pt_regs *);
949:	int common_timer_del(struct k_itimer *);
665:	void common_timer_get(struct k_itimer *, struct itimerspec64 *);
830:	int common_timer_set(struct k_itimer *, int, struct itimerspec64 *, struct itimerspec64 *);
1028:	void exit_itimers(struct signal_struct *);
331:	int posix_timer_event(struct k_itimer *, int);
308:	void posixtimer_rearm(struct siginfo *);
1151:	static long __do_compat_sys_clock_adjtime(clockid_t, struct compat_timex *);
1071:	static long __do_sys_clock_adjtime(const clockid_t, struct timex *);
609:	static struct k_itimer *__lock_timer(timer_t, unsigned long *);
1354:	static const struct k_clock *clockid_to_kclock(const clockid_t);
794:	static void common_hrtimer_arm(struct k_itimer *, ktime_t, bool, bool);
642:	static s64 common_hrtimer_forward(struct k_itimer *, ktime_t);
288:	static void common_hrtimer_rearm(struct k_itimer *);
635:	static ktime_t common_hrtimer_remaining(struct k_itimer *, ktime_t);
824:	static int common_hrtimer_try_to_cancel(struct k_itimer *);
1201:	static int common_nsleep(const clockid_t, int, const struct timespec64 *);
486:	static int common_timer_create(struct k_itimer *);
493:	static int do_timer_create(clockid_t, struct sigevent *, timer_t *);
716:	static int do_timer_gettime(timer_t, struct itimerspec64 *);
868:	static int do_timer_settime(timer_t, int, struct itimerspec64 *, struct itimerspec64 *);
268:	static int init_posix_timers(void);
464:	static void k_itimer_rcu_free(struct callback_head *);
202:	static int posix_clock_realtime_adj(const clockid_t, struct timex *);
189:	static int posix_clock_realtime_get(clockid_t, struct timespec64 *);
196:	static int posix_clock_realtime_set(const clockid_t, const struct timespec64 *);
246:	static int posix_get_boottime(const clockid_t, struct timespec64 *);
240:	static int posix_get_coarse_res(const clockid_t, struct timespec64 *);
258:	static int posix_get_hrtimer_res(clockid_t, struct timespec64 *);
233:	static int posix_get_monotonic_coarse(clockid_t, struct timespec64 *);
220:	static int posix_get_monotonic_raw(clockid_t, struct timespec64 *);
227:	static int posix_get_realtime_coarse(clockid_t, struct timespec64 *);
252:	static int posix_get_tai(clockid_t, struct timespec64 *);
211:	static int posix_ktime_get_ts(clockid_t, struct timespec64 *);
361:	static enum hrtimer_restart posix_timer_fn(struct hrtimer *);
473:	static void release_posix_timer(struct k_itimer *, int);

File kernel/time/tick-broadcast-hrtimer.c:
108:	void tick_setup_hrtimer_broadcast(void);
101:	static enum hrtimer_restart bc_handler(struct hrtimer *);
45:	static int bc_set_next(ktime_t, struct clock_event_device *);
22:	static int bc_shutdown(struct clock_event_device *);

File kernel/time/tick-broadcast.c:
711:	int __tick_broadcast_oneshot_control(enum tick_broadcast_state);
946:	void hotplug_cpu__broadcast_tick_pull(int);
356:	void tick_broadcast_control(enum tick_broadcast_mode);
1006:	void tick_broadcast_init(void);
456:	void tick_broadcast_offline(unsigned int);
979:	int tick_broadcast_oneshot_active(void);
987:	bool tick_broadcast_oneshot_available(void);
930:	void tick_broadcast_switch_to_oneshot(void);
130:	int tick_broadcast_update_freq(struct clock_event_device *, u32);
545:	int tick_check_broadcast_expired(void);
585:	void tick_check_oneshot_broadcast_this_cpu(void);
163:	int tick_device_uses_broadcast(struct clock_event_device *, int);
54:	struct tick_device *tick_get_broadcast_device(void);
59:	struct cpumask *tick_get_broadcast_mask(void);
533:	struct cpumask *tick_get_broadcast_oneshot_mask(void);
94:	void tick_install_broadcast_device(struct clock_event_device *);
125:	int tick_is_broadcast_device(struct clock_event_device *);
245:	int tick_receive_broadcast(void);
498:	void tick_resume_broadcast(void);
490:	bool tick_resume_check_broadcast(void);
434:	void tick_set_periodic_handler(struct clock_event_device *, int);
468:	void tick_suspend_broadcast(void);
143:	static void err_broadcast(const struct cpumask *);
862:	static void tick_broadcast_clear_oneshot(int);
566:	static void tick_broadcast_set_event(struct clock_event_device *, int, ktime_t);
884:	static void tick_broadcast_setup_oneshot(struct clock_event_device *);
264:	static bool tick_do_broadcast(struct cpumask *);
605:	static void tick_handle_oneshot_broadcast(struct clock_event_device *);
318:	static void tick_handle_periodic_broadcast(struct clock_event_device *);

File kernel/time/tick-common.c:
355:	int tick_broadcast_oneshot_control(enum tick_broadcast_state);
301:	void tick_check_new_device(struct clock_event_device *);
288:	bool tick_check_replacement(struct clock_event_device *, struct clock_event_device *);
486:	void tick_freeze(void);
58:	struct tick_device *tick_get_device(int);
100:	void tick_handle_periodic(struct clock_event_device *);
373:	void tick_handover_do_timer(void);
537:	void tick_init(void);
237:	void tick_install_replacement(struct clock_event_device *);
66:	int tick_is_oneshot_available(void);
467:	void tick_resume(void);
430:	void tick_resume_local(void);
145:	void tick_setup_periodic(struct clock_event_device *, int);
390:	void tick_shutdown(unsigned int);
453:	void tick_suspend(void);
416:	void tick_suspend_local(void);
513:	void tick_unfreeze(void);
248:	static bool tick_check_percpu(struct clock_event_device *, int, struct clock_event_device *, struct clock_event_device *);
264:	static bool tick_check_preferred(struct clock_event_device *, struct clock_event_device *);
80:	static void tick_periodic(int);
178:	static void tick_setup_device(struct tick_device *, struct clock_event_device *, int, const struct cpumask *);

File kernel/time/tick-oneshot.c:
128:	int tick_init_highres(void);
110:	int tick_oneshot_mode_active(void);
27:	int tick_program_event(ktime_t, int);
54:	void tick_resume_oneshot(void);
65:	void tick_setup_oneshot(struct clock_event_device *, void (*)(struct clock_event_device *), ktime_t);
77:	int tick_switch_to_oneshot(void (*)(struct clock_event_device *));

File kernel/time/tick-sched.c:
369:	void __tick_nohz_task_switch(void);
556:	u64 get_cpu_idle_time_us(int, u64 *);
597:	u64 get_cpu_iowait_time_us(int, u64 *);
1329:	void tick_cancel_sched_timer(int);
1371:	int tick_check_oneshot_change(int);
1345:	void tick_clock_notify(void);
43:	struct tick_sched *tick_get_tick_sched(int);
1246:	void tick_irq_enter(void);
294:	void tick_nohz_dep_clear(enum tick_dep_bits);
325:	void tick_nohz_dep_clear_cpu(int, enum tick_dep_bits);
359:	void tick_nohz_dep_clear_signal(struct signal_struct *, enum tick_dep_bits);
345:	void tick_nohz_dep_clear_task(struct task_struct *, enum tick_dep_bits);
289:	void tick_nohz_dep_set(enum tick_dep_bits);
303:	void tick_nohz_dep_set_cpu(int, enum tick_dep_bits);
354:	void tick_nohz_dep_set_signal(struct signal_struct *, enum tick_dep_bits);
336:	void tick_nohz_dep_set_task(struct task_struct *, enum tick_dep_bits);
250:	void tick_nohz_full_kick_cpu(int);
391:	void tick_nohz_full_setup(cpumask_var_t);
1085:	unsigned long tick_nohz_get_idle_calls(void);
1073:	unsigned long tick_nohz_get_idle_calls_cpu(int);
1034:	ktime_t tick_nohz_get_sleep_length(ktime_t *);
978:	void tick_nohz_idle_enter(void);
1134:	void tick_nohz_idle_exit(void);
1017:	bool tick_nohz_idle_got_tick(void);
1119:	void tick_nohz_idle_restart_tick(void);
963:	void tick_nohz_idle_retain_tick(void);
958:	void tick_nohz_idle_stop_tick(void);
410:	void tick_nohz_init(void);
1004:	void tick_nohz_irq_exit(void);
468:	bool tick_nohz_tick_stopped(void);
475:	bool tick_nohz_tick_stopped_cpu(int);
1356:	void tick_oneshot_notify(void);
1300:	void tick_setup_sched_timer(void);
862:	static bool can_stop_idle_tick(int, struct tick_sched *, struct tick_sched *);
174:	static bool check_tick_dependency(atomic_t *);
223:	static void nohz_full_kick_func(struct irq_work *);
461:	static int setup_tick_nohz(char *);
1289:	static int skew_tick(char *);
57:	static void tick_do_update_jiffies64(ktime_t);
103:	static ktime_t tick_init_jiffy_update(void);
1092:	static void tick_nohz_account_idle_ticks(struct tick_sched *);
398:	static int tick_nohz_cpu_down(unsigned int);
275:	static void tick_nohz_dep_set_all(atomic_t *, enum tick_dep_bits);
238:	static void tick_nohz_full_kick(void);
1164:	static void tick_nohz_handler(struct clock_event_device *);
648:	static ktime_t tick_nohz_next_event(struct tick_sched *, int);
821:	static void tick_nohz_restart_sched_tick(struct tick_sched *, ktime_t);
732:	static void tick_nohz_stop_tick(struct tick_sched *, int);
116:	static void tick_sched_do_timer(struct tick_sched *, ktime_t);
141:	static void tick_sched_handle(struct tick_sched *, struct pt_regs *);
1260:	static enum hrtimer_restart tick_sched_timer(struct hrtimer *);
509:	static void update_ts_time_stats(int, struct tick_sched *, ktime_t, u64 *);

File kernel/time/time.c:
894:	int __compat_get_timespec64(struct timespec64 *, const struct compat_timespec *);
910:	int __compat_put_timespec64(const struct timespec64 *, struct compat_timespec *);
290:	long __ia32_compat_sys_adjtimex(const struct pt_regs *);
228:	long __ia32_compat_sys_gettimeofday(const struct pt_regs *);
247:	long __ia32_compat_sys_settimeofday(const struct pt_regs *);
122:	long __ia32_compat_sys_stime(const struct pt_regs *);
108:	long __ia32_compat_sys_time(const struct pt_regs *);
273:	long __ia32_sys_adjtimex(const struct pt_regs *);
143:	long __ia32_sys_gettimeofday(const struct pt_regs *);
202:	long __ia32_sys_settimeofday(const struct pt_regs *);
84:	long __ia32_sys_stime(const struct pt_regs *);
65:	long __ia32_sys_time(const struct pt_regs *);
593:	unsigned long __msecs_to_jiffies(const unsigned int);
604:	unsigned long __usecs_to_jiffies(const unsigned int);
273:	long __x64_sys_adjtimex(const struct pt_regs *);
143:	long __x64_sys_gettimeofday(const struct pt_regs *);
202:	long __x64_sys_settimeofday(const struct pt_regs *);
84:	long __x64_sys_stime(const struct pt_regs *);
65:	long __x64_sys_time(const struct pt_regs *);
724:	unsigned long clock_t_to_jiffies(unsigned long);
920:	int compat_get_timespec64(struct timespec64 *, const void *);
929:	int compat_put_timespec64(const struct timespec64 *, void *);
172:	int do_sys_settimeofday64(const struct timespec64 *, const struct timezone *);
968:	int get_compat_itimerspec64(struct itimerspec64 *, const struct compat_itimerspec *);
938:	int get_itimerspec64(struct itimerspec64 *, const struct itimerspec *);
860:	int get_timespec64(struct timespec64 *, const struct timespec *);
779:	u64 jiffies64_to_nsecs(u64);
741:	u64 jiffies_64_to_clock_t(u64);
710:	clock_t jiffies_to_clock_t(unsigned long);
315:	unsigned int jiffies_to_msecs(const unsigned long);
656:	void jiffies_to_timespec64(const unsigned long, struct timespec64 *);
693:	void jiffies_to_timeval(const unsigned long, struct timeval *);
332:	unsigned int jiffies_to_usecs(const unsigned long);
396:	time64_t mktime64(const unsigned int, const unsigned int, const unsigned int, const unsigned int, const unsigned int, const unsigned int);
496:	struct __kernel_old_timeval ns_to_kernel_old_timeval(const s64);
459:	struct timespec ns_to_timespec(const s64);
550:	struct timespec64 ns_to_timespec64(const s64);
484:	struct timeval ns_to_timeval(const s64);
763:	u64 nsec_to_clock_t(u64);
833:	unsigned long nsecs_to_jiffies(u64);
802:	u64 nsecs_to_jiffies64(u64);
979:	int put_compat_itimerspec64(const struct itimerspec64 *, struct compat_itimerspec *);
953:	int put_itimerspec64(const struct itimerspec64 *, struct itimerspec *);
882:	int put_timespec64(const struct timespec64 *, struct timespec *);
431:	void set_normalized_timespec(struct timespec *, time_t, s64);
522:	void set_normalized_timespec64(struct timespec64 *, time64_t, s64);
844:	struct timespec64 timespec64_add_safe(const struct timespec64, const struct timespec64);
649:	unsigned long timespec64_to_jiffies(const struct timespec64 *);
360:	struct timespec timespec_trunc(struct timespec, unsigned int);
686:	unsigned long timeval_to_jiffies(const struct timeval *);
290:	static long __do_compat_sys_adjtimex(struct compat_timex *);
273:	static long __do_sys_adjtimex(struct timex *);

File kernel/time/timeconv.c:
77:	void time64_to_tm(time64_t, int, struct tm *);

File kernel/time/timecounter.c:
92:	u64 timecounter_cyc2time(struct timecounter *, u64);
21:	void timecounter_init(struct timecounter *, const struct cyclecounter *, u64);
65:	u64 timecounter_read(struct timecounter *);

File kernel/time/timekeeping.c:
955:	time64_t __ktime_get_real_seconds(void);
2315:	int do_adjtimex(struct timex *);
1222:	int do_settimeofday64(const struct timespec64 *);
2196:	void do_timer(unsigned long);
1115:	int get_device_system_crosststamp(int (*)(ktime_t *, struct system_counterval_t *, void *), void *, struct system_time_snapshot *, struct system_device_crosststamp *);
2153:	void getboottime64(struct timespec64 *);
746:	ktime_t ktime_get(void);
504:	u64 ktime_get_boot_fast_ns(void);
2162:	void ktime_get_coarse_real_ts64(struct timespec64 *);
2175:	void ktime_get_coarse_ts64(struct timespec64 *);
810:	ktime_t ktime_get_coarse_with_offset(enum tk_offsets);
471:	u64 ktime_get_mono_fast_ns(void);
853:	ktime_t ktime_get_raw(void);
477:	u64 ktime_get_raw_fast_ns(void);
1413:	void ktime_get_raw_ts64(struct timespec64 *);
540:	u64 ktime_get_real_fast_ns(void);
725:	void ktime_get_real_ts64(struct timespec64 *);
766:	u32 ktime_get_resolution_ns(void);
911:	time64_t ktime_get_seconds(void);
966:	void ktime_get_snapshot(struct system_time_snapshot *);
879:	void ktime_get_ts64(struct timespec64 *);
2215:	ktime_t ktime_get_update_offsets_now(unsigned int *, ktime_t *, ktime_t *, ktime_t *);
789:	ktime_t ktime_get_with_offset(enum tk_offsets);
835:	ktime_t ktime_mono_to_any(ktime_t, enum tk_offsets);
583:	int pvclock_gtod_register_notifier(struct notifier_block *);
602:	int pvclock_gtod_unregister_notifier(struct notifier_block *);
1479:	void read_persistent_clock(struct timespec *);
1485:	void read_persistent_clock64(struct timespec64 *);
1506:	void read_persistent_wall_and_boot_offset(struct timespec64 *, struct timespec64 *);
1534:	void timekeeping_init(void);
1651:	void timekeeping_inject_sleeptime64(const struct timespec64 *);
1454:	u64 timekeeping_max_deferment(void);
1396:	int timekeeping_notify(struct clocksource *);
1678:	void timekeeping_resume(void);
1621:	bool timekeeping_rtc_skipresume(void);
1635:	bool timekeeping_rtc_skipsuspend(void);
1738:	int timekeeping_suspend(void);
1435:	int timekeeping_valid_for_hres(void);
1327:	void timekeeping_warp_clock(void);
2137:	void update_wall_time(void);
2393:	void xtime_update(unsigned long);
1589:	static void __timekeeping_inject_sleeptime(const struct timespec64 *, struct timekeeper *);
1354:	static int change_clocksource(void *);
77:	static u64 dummy_clock_read(struct clocksource *);
997:	static int scale64_check_overflow(u64, u64, u64 *);
2050:	static void timekeeping_advance(enum timekeeping_adv_mode);
696:	static void timekeeping_forward_now(struct timekeeper *);
1813:	static int timekeeping_init_ops(void);
1267:	static int timekeeping_inject_offset(const struct timespec64 *);
660:	static void timekeeping_update(struct timekeeper *, unsigned int);
133:	static void tk_set_wall_to_mono(struct timekeeper *, struct timespec64);
286:	static void tk_setup_internals(struct clocksource *, struct timekeeper *);
126:	static void tk_xtime_add(const struct timespec64 *, struct timekeeper *);
400:	static void update_fast_timekeeper(const struct tk_read_base *, struct tk_fast *);

File kernel/time/timekeeping_debug.c:
73:	void tk_debug_account_sleep_time(const struct timespec64 *);
31:	static int tk_debug_show_sleep_time(struct seq_file *, void *);
58:	static int tk_debug_sleep_time_init(void);
46:	static int tk_debug_sleep_time_open(struct inode *, struct file *);

File kernel/time/timer.c:
331:	unsigned long __round_jiffies(unsigned long, int);
357:	unsigned long __round_jiffies_relative(unsigned long, int);
418:	unsigned long __round_jiffies_up(unsigned long, int);
434:	unsigned long __round_jiffies_up_relative(unsigned long, int);
1148:	void add_timer(struct timer_list *);
1162:	void add_timer_on(struct timer_list *, int);
1205:	int del_timer(struct timer_list *);
1286:	int del_timer_sync(struct timer_list *);
1532:	u64 get_next_timer_interrupt(unsigned long, u64);
811:	void init_timer_key(struct timer_list *, void (*)(struct timer_list *), unsigned int, const char *, struct lock_class_key *);
1956:	void init_timers(void);
1113:	int mod_timer(struct timer_list *, unsigned long);
1087:	int mod_timer_pending(struct timer_list *, unsigned long);
1966:	void msleep(unsigned int);
1980:	unsigned long msleep_interruptible(unsigned int);
381:	unsigned long round_jiffies(unsigned long);
402:	unsigned long round_jiffies_relative(unsigned long);
452:	unsigned long round_jiffies_up(unsigned long);
467:	unsigned long round_jiffies_up_relative(unsigned long);
1718:	void run_local_timers(void);
1780:	long schedule_timeout(long);
1861:	long schedule_timeout_idle(long);
1836:	long schedule_timeout_interruptible(long);
1843:	long schedule_timeout_killable(long);
1850:	long schedule_timeout_uninterruptible(long);
1590:	void timer_clear_idle(void);
249:	int timer_migration_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
1128:	int timer_reduce(struct timer_list *, unsigned long);
1897:	int timers_dead_cpu(unsigned int);
1882:	int timers_prepare_cpu(unsigned int);
244:	void timers_update_nohz(void);
1230:	int try_to_del_timer_sync(struct timer_list *);
1644:	void update_process_times(int);
2002:	void usleep_range(unsigned long, unsigned long);
544:	static void __internal_add_timer(struct timer_base *, struct timer_list *);
1431:	static unsigned long __next_timer_interrupt(struct timer_base *);
495:	static int calc_wheel_index(unsigned long, unsigned long);
1315:	static void call_timer_fn(struct timer_list *, void (*)(struct timer_list *));
832:	static int detach_if_pending(struct timer_list *, struct timer_base *, bool);
933:	static struct timer_base *lock_timer_base(struct timer_list *, unsigned long *);
1744:	static void process_timeout(struct timer_list *);
1706:	static void run_timer_softirq(struct softirq_action *);
236:	static void timer_update_keys(struct work_struct *);
225:	static void timers_update_migration(void);
553:	static void trigger_dyntick_cpu(struct timer_base *, struct timer_list *, struct timer_list *);

File kernel/time/timer_list.c:
290:	void sysrq_timer_list_show(void);
36:	static void SEQ_printf(struct seq_file *, const char *, ...);
378:	static int init_timer_list_procfs(void);
330:	static void *move_iter(struct timer_list_iter *, loff_t);
135:	static void print_cpu(struct seq_file *, int, u64);
50:	static void print_name_offset(struct seq_file *, void *);
198:	static void print_tickdevice(struct seq_file *, struct tick_device *, int);
360:	static void *timer_list_next(struct seq_file *, void *, loff_t *);
313:	static int timer_list_show(struct seq_file *, void *);
267:	static void timer_list_show_tickdevices_header(struct seq_file *);
349:	static void *timer_list_start(struct seq_file *, loff_t *);
367:	static void timer_list_stop(struct seq_file *, void *);

File kernel/trace/blktrace.c:
146:	void __trace_note_message(struct blk_trace *, struct blkcg *, const char *, ...);
1118:	void blk_add_driver_data(struct request_queue *, struct request *, void *, size_t);
1962:	void blk_fill_rwbs(char *, unsigned int, int);
1948:	int blk_trace_init_sysfs(struct device *);
720:	int blk_trace_ioctl(struct block_device *, unsigned int, char *);
358:	int blk_trace_remove(struct request_queue *);
1953:	void blk_trace_remove_sysfs(struct device *);
605:	int blk_trace_setup(struct request_queue *, char *, dev_t, struct block_device *, char *);
765:	void blk_trace_shutdown(struct request_queue *);
695:	int blk_trace_startstop(struct request_queue *, int);
213:	static void __blk_add_trace(struct blk_trace *, sector_t, int, int, int, u32, int, int, void *, union kernfs_node_id *);
344:	static int __blk_trace_remove(struct request_queue *);
584:	static int __blk_trace_setup(struct request_queue *, char *, dev_t, struct block_device *, char *);
653:	static int __blk_trace_startstop(int, struct request_queue *);
888:	static void blk_add_trace_bio(struct request_queue *, struct bio *, u32, int);
919:	static void blk_add_trace_bio_backmerge(void *, struct request_queue *, struct request *, struct bio *);
906:	static void blk_add_trace_bio_bounce(void *, struct request_queue *, struct bio *);
912:	static void blk_add_trace_bio_complete(void *, struct request_queue *, struct bio *, int);
927:	static void blk_add_trace_bio_frontmerge(void *, struct request_queue *, struct request *, struct bio *);
935:	static void blk_add_trace_bio_queue(void *, struct request_queue *, struct bio *);
1045:	static void blk_add_trace_bio_remap(void *, struct request_queue *, struct bio *, dev_t, sector_t);
941:	static void blk_add_trace_getrq(void *, struct request_queue *, struct bio *, int);
980:	static void blk_add_trace_plug(void *, struct request_queue *);
825:	static void blk_add_trace_rq(struct request *, int, unsigned int, u32, union kernfs_node_id *);
870:	static void blk_add_trace_rq_complete(void *, struct request *, int, unsigned int);
848:	static void blk_add_trace_rq_insert(void *, struct request_queue *, struct request *);
855:	static void blk_add_trace_rq_issue(void *, struct request_queue *, struct request *);
1082:	static void blk_add_trace_rq_remap(void *, struct request_queue *, struct request *, dev_t, sector_t);
862:	static void blk_add_trace_rq_requeue(void *, struct request_queue *, struct request *);
961:	static void blk_add_trace_sleeprq(void *, struct request_queue *, struct bio *, int);
1013:	static void blk_add_trace_split(void *, struct request_queue *, struct bio *, unsigned int);
992:	static void blk_add_trace_unplug(void *, struct request_queue *, unsigned int, bool);
439:	static struct dentry *blk_create_buf_file_callback(const char *, struct dentry *, umode_t, struct rchan_buf *, int *);
370:	static ssize_t blk_dropped_read(struct file *, char *, size_t, loff_t *);
1321:	static void blk_log_action(struct trace_iterator *, const char *, bool);
1304:	static void blk_log_action_classic(struct trace_iterator *, const char *, bool);
1349:	static void blk_log_dump_pdu(struct trace_seq *, const struct trace_entry *, bool);
1388:	static void blk_log_generic(struct trace_seq *, const struct trace_entry *, bool);
1435:	static void blk_log_plug(struct trace_seq *, const struct trace_entry *, bool);
1424:	static void blk_log_remap(struct trace_seq *, const struct trace_entry *, bool);
1453:	static void blk_log_split(struct trace_seq *, const struct trace_entry *, bool);
1444:	static void blk_log_unplug(struct trace_seq *, const struct trace_entry *, bool);
1407:	static void blk_log_with_error(struct trace_seq *, const struct trace_entry *, bool);
388:	static ssize_t blk_msg_write(struct file *, const char *, size_t, loff_t *);
432:	static int blk_remove_buf_file_callback(struct dentry *);
419:	static int blk_subbuf_start_callback(struct rchan_buf *, void *, void *, size_t);
1561:	static enum print_line_t blk_trace_event_print(struct trace_iterator *, int, struct trace_event *);
1583:	static enum print_line_t blk_trace_event_print_binary(struct trace_iterator *, int, struct trace_event *);
310:	static void blk_trace_free(struct blk_trace *);
1677:	static int blk_trace_setup_queue(struct request_queue *, struct block_device *);
1489:	static int blk_tracer_init(struct trace_array *);
1476:	static void blk_tracer_print_header(struct seq_file *);
1591:	static enum print_line_t blk_tracer_print_line(struct trace_iterator *);
1600:	static int blk_tracer_set_flag(struct trace_array *, u32, u32, int);
1484:	static void blk_tracer_start(struct trace_array *);
1496:	static void blk_tracer_stop(struct trace_array *);
620:	static int compat_blk_trace_setup(struct request_queue *, char *, dev_t, struct block_device *, char *);
475:	static int do_blk_trace_setup(struct request_queue *, char *, dev_t, struct block_device *, struct blk_user_trace_setup *);
1202:	static void fill_rwbs(char *, const struct blk_io_trace *, const struct blk_io_trace *);
321:	static void get_probe_ref(void);
1634:	static int init_blk_tracer(void);
1528:	static enum print_line_t print_one_line(struct trace_iterator *, bool);
329:	static void put_probe_ref(void);
1824:	static ssize_t sysfs_blk_trace_attr_show(struct device *, struct device_attribute *, char *);
1870:	static ssize_t sysfs_blk_trace_attr_store(struct device *, struct device_attribute *, const char *, size_t);
66:	static void trace_note(pid_t, int, const void *, size_t, union kernfs_node_id *, struct blk_trace *, struct blk_trace *);

File kernel/trace/bpf_trace.c:
534:	u64 bpf_current_task_under_cgroup(u64, u64, u64, u64, u64);
1394:	int bpf_event_init(void);
1355:	int bpf_event_notify(struct notifier_block *, unsigned long, void *);
496:	u64 bpf_event_output(struct bpf_map *, u64, void *, u64, void *, u64, bpf_ctx_copy_t);
523:	u64 bpf_get_current_task(u64, u64, u64, u64, u64);
1307:	int bpf_get_perf_event_info(const struct perf_event *, u32 *, u32 *, const char **, u64 *, u64 *);
1205:	struct bpf_raw_event_map *bpf_get_raw_tracepoint(const char *);
917:	u64 bpf_get_stack_raw_tp(u64, u64, u64, u64, u64);
733:	u64 bpf_get_stack_tp(u64, u64, u64, u64, u64);
891:	u64 bpf_get_stackid_raw_tp(u64, u64, u64, u64, u64);
710:	u64 bpf_get_stackid_tp(u64, u64, u64, u64, u64);
321:	const struct bpf_func_proto *bpf_get_trace_printk_proto(void);
446:	u64 bpf_perf_event_output(u64, u64, u64, u64, u64);
864:	u64 bpf_perf_event_output_raw_tp(u64, u64, u64, u64, u64);
686:	u64 bpf_perf_event_output_tp(u64, u64, u64, u64, u64);
355:	u64 bpf_perf_event_read(u64, u64, u64, u64, u64);
378:	u64 bpf_perf_event_read_value(u64, u64, u64, u64, u64);
790:	u64 bpf_perf_prog_read_value(u64, u64, u64, u64, u64);
136:	u64 bpf_probe_read(u64, u64, u64, u64, u64);
557:	u64 bpf_probe_read_str(u64, u64, u64, u64, u64);
1297:	int bpf_probe_register(struct bpf_raw_event_map *, struct bpf_prog *);
1302:	int bpf_probe_unregister(struct bpf_raw_event_map *, struct bpf_prog *);
156:	u64 bpf_probe_write_user(u64, u64, u64, u64, u64);
1217:	void bpf_put_raw_tracepoint(struct bpf_raw_event_map *);
200:	u64 bpf_trace_printk(u64, u64, u64, u64, u64);
1267:	void bpf_trace_run1(struct bpf_prog *, u64);
1276:	void bpf_trace_run10(struct bpf_prog *, u64, u64, u64, u64, u64, u64, u64, u64, u64, u64);
1277:	void bpf_trace_run11(struct bpf_prog *, u64, u64, u64, u64, u64, u64, u64, u64, u64, u64, u64);
1278:	void bpf_trace_run12(struct bpf_prog *, u64, u64, u64, u64, u64, u64, u64, u64, u64, u64, u64, u64);
1268:	void bpf_trace_run2(struct bpf_prog *, u64, u64);
1269:	void bpf_trace_run3(struct bpf_prog *, u64, u64, u64);
1270:	void bpf_trace_run4(struct bpf_prog *, u64, u64, u64, u64);
1271:	void bpf_trace_run5(struct bpf_prog *, u64, u64, u64, u64, u64);
1272:	void bpf_trace_run6(struct bpf_prog *, u64, u64, u64, u64, u64, u64);
1273:	void bpf_trace_run7(struct bpf_prog *, u64, u64, u64, u64, u64, u64, u64);
1274:	void bpf_trace_run8(struct bpf_prog *, u64, u64, u64, u64, u64, u64, u64, u64);
1275:	void bpf_trace_run9(struct bpf_prog *, u64, u64, u64, u64, u64, u64, u64, u64, u64);
1089:	int perf_event_attach_bpf_prog(struct perf_event *, struct bpf_prog *);
1131:	void perf_event_detach_bpf_prog(struct perf_event *);
1160:	int perf_event_query_prog_array(struct perf_event *, void *);
74:	unsigned int trace_call_bpf(struct trace_event_call *, void *);
846:	static struct pt_regs *get_bpf_raw_tp_regs(void);
637:	static const struct bpf_func_proto *kprobe_prog_func_proto(enum bpf_func_id, const struct bpf_prog *);
658:	static bool kprobe_prog_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
1040:	static u32 pe_prog_convert_ctx_access(enum bpf_access_type, const struct bpf_insn *, struct bpf_insn *, struct bpf_prog *, u32 *);
817:	static const struct bpf_func_proto *pe_prog_func_proto(enum bpf_func_id, const struct bpf_prog *);
1002:	static bool pe_prog_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
944:	static const struct bpf_func_proto *raw_tp_prog_func_proto(enum bpf_func_id, const struct bpf_prog *);
958:	static bool raw_tp_prog_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
981:	static bool raw_tp_writable_prog_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
753:	static const struct bpf_func_proto *tp_prog_func_proto(enum bpf_func_id, const struct bpf_prog *);
767:	static bool tp_prog_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
588:	static const struct bpf_func_proto *tracing_func_proto(enum bpf_func_id, const struct bpf_prog *);

File kernel/trace/ftrace.c:
4141:	struct ftrace_func_mapper *allocate_ftrace_func_mapper(void);
3697:	char *arch_ftrace_match_adjust(char *, const char *);
2690:	void arch_ftrace_trampoline_free(struct ftrace_ops *);
3452:	void *arch_ftrace_trampoline_func(struct ftrace_ops *, struct dyn_ftrace *);
2649:	void arch_ftrace_update_code(int);
4577:	void clear_ftrace_function_probes(struct trace_array *);
4247:	void free_ftrace_func_mapper(struct ftrace_func_mapper *, ftrace_mapper_func);
2563:	int ftrace_arch_code_modify_prepare(void);
2029:	void ftrace_bug(int, struct dyn_ftrace *);
6506:	void ftrace_clear_pids(struct trace_array *);
5496:	void ftrace_create_filter_files(struct ftrace_ops *, struct dentry *);
5517:	void ftrace_destroy_filter_files(struct ftrace_ops *);
6775:	int ftrace_enable_sysctl(struct ctl_table *, int, void *, size_t *, loff_t *);
4711:	ssize_t ftrace_filter_write(struct file *, const char *, size_t, loff_t *);
1293:	void ftrace_free_filter(struct ftrace_ops *);
6183:	void ftrace_free_init_mem(void);
6113:	void ftrace_free_mem(struct module *, void *, void *);
4187:	int ftrace_func_mapper_add_ip(struct ftrace_func_mapper *, unsigned long, void *);
4165:	void **ftrace_func_mapper_find_ip(struct ftrace_func_mapper *, unsigned long);
4219:	void *ftrace_func_mapper_remove_ip(struct ftrace_func_mapper *, unsigned long);
2389:	unsigned long ftrace_get_addr_curr(struct dyn_ftrace *);
2357:	unsigned long ftrace_get_addr_new(struct dyn_ftrace *);
6839:	int ftrace_graph_entry_stub(struct ftrace_graph_ent *);
7150:	void ftrace_graph_exit_task(struct task_struct *);
6834:	void ftrace_graph_graph_time_control(bool);
7102:	void ftrace_graph_init_idle_task(struct task_struct *, int);
7131:	void ftrace_graph_init_task(struct task_struct *);
6829:	void ftrace_graph_sleep_time_control(bool);
6191:	void ftrace_init(void);
6299:	void ftrace_init_array_ops(struct trace_array *, ftrace_func_t);
6292:	void ftrace_init_global_array_ops(struct trace_array *);
6236:	void ftrace_init_trace_array(struct trace_array *);
6691:	void ftrace_init_tracefs(struct trace_array *, struct dentry *);
6697:	void ftrace_init_tracefs_toplevel(struct trace_array *, struct dentry *);
6724:	int ftrace_is_dead(void);
6714:	void ftrace_kill(void);
1605:	unsigned long ftrace_location(unsigned long);
1573:	unsigned long ftrace_location_range(unsigned long, unsigned long);
1177:	struct ftrace_func_entry *ftrace_lookup_ip(struct ftrace_hash *, unsigned long);
5988:	const char *ftrace_mod_address_lookup(unsigned long, unsigned long *, unsigned long *, char **, char *);
6009:	int ftrace_mod_get_kallsym(unsigned int, unsigned long *, char *, char *, char *, int *);
2577:	void ftrace_modify_all_code(int);
5822:	void ftrace_module_enable(struct module *);
5894:	void ftrace_module_init(struct module *);
4718:	ssize_t ftrace_notrace_write(struct file *, const char *, size_t, loff_t *);
6420:	ftrace_func_t ftrace_ops_get_func(struct ftrace_ops *);
4824:	void ftrace_ops_set_global_filter(struct ftrace_ops *);
1084:	struct ftrace_ops *ftrace_ops_trampoline(unsigned long);
6468:	void ftrace_pid_follow_fork(struct trace_array *, bool);
618:	int ftrace_profile_pages_init(struct ftrace_profile_stat *);
2512:	struct ftrace_rec_iter *ftrace_rec_iter_next(struct ftrace_rec_iter *);
2537:	struct dyn_ftrace *ftrace_rec_iter_record(struct ftrace_rec_iter *);
2484:	struct ftrace_rec_iter *ftrace_rec_iter_start(void);
3579:	int ftrace_regex_open(struct ftrace_ops *, int, struct inode *, struct file *);
5015:	int ftrace_regex_release(struct inode *, struct file *);
5756:	void ftrace_release_mod(struct module *);
2447:	void ftrace_replace_code(int);
6311:	void ftrace_reset_array_ops(struct trace_array *);
2637:	void ftrace_run_stop_machine(int);
4989:	void ftrace_set_early_filter(struct ftrace_ops *, char *, int);
4851:	int ftrace_set_filter(struct ftrace_ops *, unsigned char *, int, int);
4809:	int ftrace_set_filter_ip(struct ftrace_ops *, unsigned long, int, int);
4886:	void ftrace_set_global_filter(unsigned char *, int, int);
4902:	void ftrace_set_global_notrace(unsigned char *, int, int);
4870:	int ftrace_set_notrace(struct ftrace_ops *, unsigned char *, int, int);
2203:	int ftrace_test_record(struct dyn_ftrace *, int);
1620:	int ftrace_text_reserved(const void *, const void *);
2189:	int ftrace_update_record(struct dyn_ftrace *, int);
1118:	bool is_ftrace_trampoline(unsigned long);
4592:	int register_ftrace_command(struct ftrace_func_command *);
6740:	int register_ftrace_function(struct ftrace_ops *);
4306:	int register_ftrace_function_probe(char *, struct trace_array *, struct ftrace_probe_ops *, void *);
7027:	int register_ftrace_graph(trace_func_graph_ret_t, trace_func_graph_ent_t);
4615:	int unregister_ftrace_command(struct ftrace_func_command *);
6762:	int unregister_ftrace_function(struct ftrace_ops *);
4449:	int unregister_ftrace_function_probe_func(char *, struct trace_array *, struct ftrace_probe_ops *);
7067:	void unregister_ftrace_graph(void);
1185:	static void __add_hash_entry(struct ftrace_hash *, struct ftrace_func_entry *);
1278:	static void __free_ftrace_hash_rcu(struct callback_head *);
5219:	static int __ftrace_graph_open(struct file *, struct ftrace_graph_data *, struct inode *);
1398:	static struct ftrace_hash *__ftrace_hash_move(struct ftrace_hash *);
1657:	static bool __ftrace_hash_rec_update(struct ftrace_ops *, int, bool);
1871:	static int __ftrace_hash_update_ipmodify(struct ftrace_hash *, struct ftrace_hash *, struct ftrace_ops *);
2621:	static int __ftrace_modify_code(void *);
2412:	static int __ftrace_replace_code(struct dyn_ftrace *, int);
5125:	static void *__g_next(loff_t *, struct seq_file *);
379:	static int __unregister_ftrace_function(struct ftrace_ops *);
1197:	static int add_hash_entry(struct ftrace_hash *, unsigned long);
1352:	static struct ftrace_hash *alloc_and_copy_ftrace_hash(struct ftrace_hash *, int);
1300:	static struct ftrace_hash *alloc_ftrace_hash(int);
6483:	static void clear_ftrace_pids(struct trace_array *);
6063:	static void clear_func_from_hash(struct ftrace_hash *, struct ftrace_init_func *);
5701:	static void clear_mod_from_hash(struct ftrace_hash *, struct ftrace_page *, struct ftrace_page *);
6546:	static void *fpid_next(struct seq_file *, void *, loff_t *);
6564:	static int fpid_show(struct seq_file *, void *);
6529:	static void *fpid_start(struct seq_file *, loff_t *);
6557:	static void fpid_stop(struct seq_file *, void *);
1269:	static void free_ftrace_hash(struct ftrace_hash *);
1247:	static void free_ftrace_mod(struct ftrace_mod_load *);
3529:	static int ftrace_avail_open(struct inode *, struct file *);
2085:	static int ftrace_check_record(int, int, struct dyn_ftrace *);
5550:	static int ftrace_cmp_ips(const void *, const void *);
1549:	static int ftrace_cmp_recs(const void *, const void *);
3547:	static int ftrace_enabled_open(struct inode *, struct file *);
3667:	static int ftrace_filter_open(struct inode *, struct file *);
6434:	static void ftrace_filter_pid_sched_switch_probe(void *, bool, struct task_struct *, struct task_struct *);
2209:	static struct ftrace_ops *ftrace_find_tramp_ops_any(struct dyn_ftrace *);
2245:	static struct ftrace_ops *ftrace_find_tramp_ops_next(struct ftrace_ops *, struct dyn_ftrace *);
5740:	static void ftrace_free_mod_map(struct callback_head *);
6983:	static int ftrace_graph_entry_test(struct ftrace_graph_ent *);
5300:	static int ftrace_graph_notrace_open(struct inode *, struct file *);
5272:	static int ftrace_graph_open(struct inode *, struct file *);
6897:	static void ftrace_graph_probe_sched_switch(void *, bool, struct task_struct *, struct task_struct *);
5328:	static int ftrace_graph_release(struct inode *, struct file *);
5390:	static int ftrace_graph_set_hash(struct ftrace_hash *, char *);
5445:	static ssize_t ftrace_graph_write(struct file *, const char *, size_t, loff_t *);
3885:	static int ftrace_hash_move_and_update_ops(struct ftrace_ops *, struct ftrace_hash **, struct ftrace_hash *, int);
1827:	static void ftrace_hash_rec_update_modify(struct ftrace_ops *, int, int);
3702:	static int ftrace_match(char *, struct ftrace_glob *);
3761:	static int ftrace_match_record(struct ftrace_glob *, struct ftrace_glob *, int, struct dyn_ftrace *);
4069:	static int ftrace_mod_callback(struct trace_array *, struct ftrace_hash *, char *, char *, char *, int);
4102:	static int ftrace_mod_cmd_init(void);
3677:	static int ftrace_notrace_open(struct inode *, struct file *);
6390:	static void ftrace_ops_assist_func(unsigned long, unsigned long, struct ftrace_ops *, struct pt_regs *);
151:	static void ftrace_ops_init(struct ftrace_ops *);
6371:	static void ftrace_ops_list_func(unsigned long, unsigned long, struct ftrace_ops *, struct pt_regs *);
1508:	static int ftrace_ops_test(unsigned long, void *, struct ftrace_ops *, struct ftrace_ops *);
6459:	static void ftrace_pid_follow_sched_process_exit(void *, struct task_struct *);
6447:	static void ftrace_pid_follow_sched_process_fork(void *, struct task_struct *, struct task_struct *);
162:	static void ftrace_pid_func(unsigned long, unsigned long, struct ftrace_ops *, struct pt_regs *);
6582:	static int ftrace_pid_open(struct inode *, struct file *);
6674:	static int ftrace_pid_release(struct inode *, struct file *);
6624:	static ssize_t ftrace_pid_write(struct file *, const char *, size_t, loff_t *);
5562:	static int ftrace_process_locs(struct module *, unsigned long *, unsigned long *);
4634:	static int ftrace_process_regex(char *, int, int, struct ftrace_iterator *, struct ftrace_iterator *);
952:	static ssize_t ftrace_profile_read(struct file *, char *, size_t, loff_t *);
907:	static ssize_t ftrace_profile_write(struct file *, const char *, size_t, loff_t *);
4672:	static ssize_t ftrace_regex_write(const char *, size_t, loff_t *, int, struct file *, struct file *);
2654:	static void ftrace_run_update_code(int);
4744:	static int ftrace_set_hash(struct ftrace_ops *, unsigned char *, int, unsigned long, int, int, int);
2756:	static int ftrace_shutdown(struct ftrace_ops *, int);
2714:	static int ftrace_startup(struct ftrace_ops *, int);
2694:	static void ftrace_startup_enable(int);
6968:	static int ftrace_suspend_notifier_call(struct notifier_block *, unsigned long, void *);
173:	static void ftrace_sync(struct work_struct *);
184:	static void ftrace_sync_ipi(void *);
399:	static void ftrace_update_pid_func(void);
496:	static int function_stat_cmp(void *, void *);
524:	static int function_stat_headers(struct seq_file *);
460:	static void *function_stat_next(void *, int);
538:	static int function_stat_show(struct seq_file *, void *);
483:	static void *function_stat_start(struct tracer_stat *);
4108:	static void function_trace_probe_call(unsigned long, unsigned long, struct ftrace_ops *, struct pt_regs *);
5156:	static void *g_next(struct seq_file *, void *, loff_t *);
5189:	static int g_show(struct seq_file *, void *);
5162:	static void *g_start(struct seq_file *, loff_t *);
5184:	static void g_stop(struct seq_file *, void *);
1480:	static bool hash_contains_ip(unsigned long, struct ftrace_ops_hash *, struct ftrace_ops_hash *);
6607:	static void ignore_task_cpu(void *);
3799:	static int match_records(struct ftrace_hash *, char *, int, char *);
1978:	static void print_ip_ins(const char *, const unsigned char *);
3971:	static void process_mod_list(struct list_head *, struct ftrace_ops *, char *, bool);
819:	static int profile_graph_entry(struct ftrace_graph_ent *);
835:	static void profile_graph_return(struct ftrace_graph_ret *);
4271:	static void release_probe(struct ftrace_func_probe *);
5903:	static void save_ftrace_mod_rec(struct ftrace_mod_map *, struct dyn_ftrace *);
4962:	static void set_ftrace_early_graph(char *, int);
4926:	static int set_ftrace_filter(char *);
4918:	static int set_ftrace_notrace(char *);
4939:	static int set_graph_function(char *);
4953:	static int set_graph_max_depth_function(char *);
4946:	static int set_graph_notrace_function(char *);
3318:	static void *t_func_next(loff_t *, struct seq_file *);
3263:	static void *t_mod_start(struct seq_file *, loff_t *);
3355:	static void *t_next(struct seq_file *, void *, loff_t *);
3111:	static void *t_probe_next(loff_t *, struct seq_file *);
3467:	static int t_show(struct seq_file *, void *);
3391:	static void *t_start(struct seq_file *, loff_t *);
3446:	static void t_stop(struct seq_file *, void *);
215:	static void update_ftrace_function(void);
6997:	static void update_function_graph_func(void);

File kernel/trace/ring_buffer.c:
1354:	struct ring_buffer *__ring_buffer_alloc(unsigned long, unsigned int, struct lock_class_key *);
4605:	void *ring_buffer_alloc_read_page(struct ring_buffer *, int);
3395:	unsigned long ring_buffer_bytes_cpu(struct ring_buffer *, int);
1871:	void ring_buffer_change_overwrite(struct ring_buffer *, int);
3457:	unsigned long ring_buffer_commit_overrun_cpu(struct ring_buffer *, int);
4156:	struct ring_buffer_event *ring_buffer_consume(struct ring_buffer *, int, u64 *, unsigned long *);
3059:	void ring_buffer_discard_commit(struct ring_buffer *, struct ring_buffer_event *);
3479:	unsigned long ring_buffer_dropped_events_cpu(struct ring_buffer *, int);
4463:	bool ring_buffer_empty(struct ring_buffer *);
4493:	bool ring_buffer_empty_cpu(struct ring_buffer *, int);
3519:	unsigned long ring_buffer_entries(struct ring_buffer *);
3415:	unsigned long ring_buffer_entries_cpu(struct ring_buffer *, int);
272:	void *ring_buffer_event_data(struct ring_buffer_event *);
237:	unsigned int ring_buffer_event_length(struct ring_buffer_event *);
295:	u64 ring_buffer_event_time_stamp(struct ring_buffer_event *);
1427:	void ring_buffer_free(struct ring_buffer *);
4652:	void ring_buffer_free_read_page(struct ring_buffer *, int, void *);
3602:	int ring_buffer_iter_empty(struct ring_buffer_iter *);
4127:	struct ring_buffer_event *ring_buffer_iter_peek(struct ring_buffer_iter *, u64 *);
3582:	void ring_buffer_iter_reset(struct ring_buffer_iter *);
2958:	struct ring_buffer_event *ring_buffer_lock_reserve(struct ring_buffer *, unsigned long);
2750:	void ring_buffer_nest_end(struct ring_buffer *);
2730:	void ring_buffer_nest_start(struct ring_buffer *);
741:	void ring_buffer_normalize_time_stamp(struct ring_buffer *, int, u64 *);
3362:	u64 ring_buffer_oldest_event_ts(struct ring_buffer *, int);
3434:	unsigned long ring_buffer_overrun_cpu(struct ring_buffer *, int);
3542:	unsigned long ring_buffer_overruns(struct ring_buffer *);
362:	size_t ring_buffer_page_len(void *);
4092:	struct ring_buffer_event *ring_buffer_peek(struct ring_buffer *, int, u64 *, unsigned long *);
665:	__poll_t ring_buffer_poll_wait(struct ring_buffer *, int, struct file *, poll_table *);
35:	int ring_buffer_print_entry_header(struct trace_seq *);
395:	int ring_buffer_print_page_header(struct trace_seq *);
4320:	struct ring_buffer_event *ring_buffer_read(struct ring_buffer_iter *, u64 *);
3500:	unsigned long ring_buffer_read_events_cpu(struct ring_buffer *, int);
4291:	void ring_buffer_read_finish(struct ring_buffer_iter *);
4712:	int ring_buffer_read_page(struct ring_buffer *, void **, size_t, int, int);
4216:	struct ring_buffer_iter *ring_buffer_read_prepare(struct ring_buffer *, int, gfp_t);
4247:	void ring_buffer_read_prepare_sync(void);
4265:	void ring_buffer_read_start(struct ring_buffer_iter *);
3210:	void ring_buffer_record_disable(struct ring_buffer *);
3312:	void ring_buffer_record_disable_cpu(struct ring_buffer *, int);
3223:	void ring_buffer_record_enable(struct ring_buffer *);
3332:	void ring_buffer_record_enable_cpu(struct ring_buffer *, int);
3281:	bool ring_buffer_record_is_on(struct ring_buffer *);
3297:	bool ring_buffer_record_is_set_on(struct ring_buffer *);
3240:	void ring_buffer_record_off(struct ring_buffer *);
3263:	void ring_buffer_record_on(struct ring_buffer *);
4450:	void ring_buffer_reset(struct ring_buffer *);
4409:	void ring_buffer_reset_cpu(struct ring_buffer *, int);
1692:	int ring_buffer_resize(struct ring_buffer *, unsigned long, int);
1443:	void ring_buffer_set_clock(struct ring_buffer *, u64 (*)(void));
1449:	void ring_buffer_set_time_stamp_abs(struct ring_buffer *, bool);
4347:	unsigned long ring_buffer_size(struct ring_buffer *, int);
4525:	int ring_buffer_swap_cpu(struct ring_buffer *, struct ring_buffer *, int);
729:	u64 ring_buffer_time_stamp(struct ring_buffer *, int);
1454:	bool ring_buffer_time_stamp_abs(struct ring_buffer *);
2772:	int ring_buffer_unlock_commit(struct ring_buffer *, struct ring_buffer_event *);
561:	int ring_buffer_wait(struct ring_buffer *, int, bool);
3110:	int ring_buffer_write(struct ring_buffer *, unsigned long, void *);
4881:	int trace_rb_cpu_prepare(unsigned int, struct hlist_node *);
1166:	static int __rb_allocate_pages(long, struct list_head *, int);
2810:	static struct ring_buffer_event *__rb_reserve_next(struct ring_buffer_per_cpu *, struct rb_event_info *);
2285:	static struct ring_buffer_event *rb_add_time_stamp(struct ring_buffer_event *, u64, bool);
3841:	static void rb_advance_iter(struct ring_buffer_iter *);
3818:	static void rb_advance_reader(struct ring_buffer_per_cpu *);
1263:	static struct ring_buffer_per_cpu *rb_allocate_cpu_buffer(struct ring_buffer *, long, int);
3889:	static struct ring_buffer_event *rb_buffer_peek(struct ring_buffer_per_cpu *, u64 *, unsigned long *);
1114:	static int rb_check_list(struct list_head *, struct ring_buffer_per_cpu *);
1131:	static int rb_check_pages(struct ring_buffer_per_cpu *);
2580:	static void rb_commit(struct ring_buffer_per_cpu *, struct ring_buffer_event *);
186:	static unsigned int rb_event_length(struct ring_buffer_event *);
1323:	static void rb_free_cpu_buffer(struct ring_buffer_per_cpu *);
3686:	static struct buffer_page *rb_get_reader_page(struct ring_buffer_per_cpu *);
2793:	static void rb_handle_timestamp(struct rb_event_info *, struct ring_buffer_per_cpu *);
1925:	static void rb_inc_iter(struct ring_buffer_iter *);
3962:	static struct ring_buffer_event *rb_iter_peek(struct ring_buffer_iter *, u64 *);
2181:	static struct ring_buffer_event *rb_move_tail(struct ring_buffer_per_cpu *, unsigned long, struct rb_event_info *);
3165:	static bool rb_per_cpu_empty(struct ring_buffer_per_cpu *);
985:	static struct buffer_page *rb_set_head_page(struct ring_buffer_per_cpu *);
1660:	static void rb_update_pages(struct ring_buffer_per_cpu *);
540:	static void rb_wake_up_waiters(struct irq_work *);
1674:	static void update_pages_handler(struct work_struct *);

File kernel/trace/trace.c:
864:	int __trace_bputs(unsigned long, const char *);
814:	int __trace_puts(unsigned long, const char *, int);
2674:	void __trace_stack(struct trace_array *, unsigned long, int, int);
305:	int call_filter_check_discard(struct trace_event_call *, void *, struct ring_buffer *, struct ring_buffer_event *);
1082:	void disable_trace_on_warning(void);
8603:	void early_trace_init(void);
8285:	void ftrace_dump(enum ftrace_dump_mode);
2442:	void ftrace_exports(struct ring_buffer_event *);
585:	u64 ftrace_now(int);
2722:	void ftrace_trace_userstack(struct ring_buffer *, unsigned long, int, struct trace_array *);
1797:	int is_tracing_stopped(void);
241:	unsigned long long ns2usecs(u64);
1140:	unsigned long nsecs_to_usecs(unsigned long);
3388:	void print_trace_header(struct seq_file *, struct trace_iterator *);
3619:	enum print_line_t print_trace_line(struct trace_iterator *);
2508:	int register_ftrace_export(struct trace_export *);
1594:	int register_tracer(struct tracer *);
4351:	int set_tracer_flag(struct trace_array *, unsigned int, int);
274:	int trace_array_get(struct trace_array *);
3015:	int trace_array_printk(struct trace_array *, unsigned long, const char *, ...);
3031:	int trace_array_printk_buf(struct ring_buffer *, unsigned long, const char *, ...);
298:	void trace_array_put(struct trace_array *);
3008:	int trace_array_vprintk(struct trace_array *, unsigned long, const char *, struct __va_list_tag *);
2140:	struct ring_buffer_event *trace_buffer_lock_reserve(struct ring_buffer *, int, unsigned long, unsigned long, int);
2408:	void trace_buffer_unlock_commit_nostack(struct ring_buffer *, struct ring_buffer_event *);
2386:	void trace_buffer_unlock_commit_regs(struct trace_array *, struct ring_buffer *, struct ring_buffer_event *, unsigned long, int, struct pt_regs *);
2221:	void trace_buffered_event_disable(void);
2166:	void trace_buffered_event_enable(void);
1176:	bool trace_clock_in_ns(struct trace_array *);
7471:	struct dentry *trace_create_file(const char *, umode_t, struct dentry *, void *, const struct file_operations *);
3681:	void trace_default_header(struct seq_file *);
2702:	void trace_dump_stack(int);
3585:	int trace_empty(struct trace_iterator *);
2366:	void trace_event_buffer_commit(struct trace_event_buffer *);
2262:	struct ring_buffer_event *trace_event_buffer_lock_reserve(struct ring_buffer **, struct trace_event_file *, int, unsigned long, unsigned long, int);
378:	void trace_filter_add_remove_task(struct trace_pid_list *, struct task_struct *, struct task_struct *);
1993:	void trace_find_cmdline(int, char *);
332:	bool trace_find_filtered_pid(struct trace_pid_list *, pid_t);
3144:	struct trace_entry *trace_find_next_entry(struct trace_iterator *, int *, u64 *);
3151:	void *trace_find_next_entry_inc(struct trace_iterator *);
2004:	int trace_find_tgid(int);
318:	void trace_free_pid_list(struct trace_pid_list *);
2538:	void trace_function(struct trace_array *, unsigned long, unsigned long, unsigned long, int);
1219:	int trace_get_user(struct trace_parser *, const char *, size_t, loff_t *);
2110:	enum print_line_t trace_handle_return(struct trace_seq *);
354:	bool trace_ignore_this_task(struct trace_pid_list *, struct task_struct *);
8616:	void trace_init(void);
8266:	void trace_init_global_iter(struct trace_iterator *);
4343:	int trace_keep_overwrite(struct tracer *, u32, int);
3665:	void trace_latency_header(struct seq_file *);
8415:	ssize_t trace_parse_run_command(struct file *, const char *, size_t, loff_t *, int (*)(int, char **));
1187:	int trace_parser_get_init(struct trace_parser *, int);
1202:	void trace_parser_put(struct trace_parser *);
414:	void *trace_pid_next(struct trace_pid_list *, void *, loff_t *);
465:	int trace_pid_show(struct seq_file *, void *);
441:	void *trace_pid_start(struct trace_pid_list *, loff_t *);
476:	int trace_pid_write(struct trace_pid_list *, struct trace_pid_list **, const char *, size_t);
2830:	void trace_printk_init_buffers(void);
8244:	void trace_printk_seq(struct trace_seq *);
2870:	void trace_printk_start_comm(void);
8394:	int trace_run_command(const char *, int (*)(int, char **));
2893:	int trace_vbprintk(unsigned long, const char *, struct __va_list_tag *);
3047:	int trace_vprintk(unsigned long, const char *, struct __va_list_tag *);
2333:	int tracepoint_printk_sysctl(struct ctl_table *, int, void *, size_t *, loff_t *);
5162:	int tracer_init(struct tracer *, struct trace_array *);
1094:	bool tracer_tracing_is_on(struct trace_array *);
1051:	void tracer_tracing_off(struct trace_array *);
763:	void tracer_tracing_on(struct trace_array *);
997:	int tracing_alloc_snapshot(void);
956:	int tracing_alloc_snapshot_instance(struct trace_array *);
2118:	void tracing_generic_entry_update(struct trace_entry *, unsigned long, int);
8035:	struct dentry *tracing_init_dentry(void);
3929:	bool tracing_is_disabled(void);
599:	int tracing_is_enabled(void);
1104:	int tracing_is_on(void);
3195:	void tracing_iter_reset(struct trace_iterator *, int);
4167:	loff_t tracing_lseek(struct file *, loff_t, int);
1076:	void tracing_off(void);
786:	void tracing_on(void);
3920:	int tracing_open_generic(struct inode *, struct file *);
2095:	void tracing_record_cmdline(struct task_struct *);
2041:	void tracing_record_taskinfo(struct task_struct *, int);
2070:	void tracing_record_taskinfo_sched_switch(struct task_struct *, struct task_struct *, int);
2100:	void tracing_record_tgid(struct task_struct *);
1677:	void tracing_reset(struct trace_buffer *, int);
1715:	void tracing_reset_all_online_cpus(void);
1693:	void tracing_reset_online_cpus(struct trace_buffer *);
6243:	int tracing_set_clock(struct trace_array *, const char *);
6357:	int tracing_set_time_stamp_abs(struct trace_array *, bool);
944:	void tracing_snapshot(void);
1020:	void tracing_snapshot_alloc(void);
900:	void tracing_snapshot_instance(struct trace_array *);
1808:	void tracing_start(void);
1882:	void tracing_stop(void);
5306:	int tracing_update_buffers(void);
2523:	int unregister_ftrace_export(struct trace_export *);
1365:	void update_max_tr(struct trace_array *, struct task_struct *, int);
1401:	void update_max_tr_single(struct trace_array *, struct task_struct *, int);
3084:	static struct trace_entry *__find_next_entry(struct trace_iterator *, int *, unsigned long *, u64 *);
2572:	static void __ftrace_trace_stack(struct ring_buffer *, unsigned long, int, int, struct pt_regs *);
4306:	static int __set_tracer_option(struct trace_array *, int, struct tracer_opt *, struct tracer_flags *, struct tracer_flags *);
292:	static void __trace_array_put(struct trace_array *);
2954:	static int __trace_array_vprintk(struct ring_buffer *, unsigned long, const char *, struct __va_list_tag *);
1966:	static void __trace_find_cmdline(int, char *);
3824:	static struct trace_iterator *__tracing_open(struct inode *, struct file *, bool);
5204:	static int __tracing_resize_ring_buffer(struct trace_array *, unsigned long, int);
1322:	static void __update_max_tr(struct trace_array *, struct task_struct *, int);
7769:	static void __update_tracer_options(struct trace_array *);
1754:	static int allocate_cmdlines_buffer(unsigned int, struct saved_cmdlines_buffer *);
7683:	static int allocate_trace_buffer(struct trace_array *, struct trace_buffer *, int);
7709:	static int allocate_trace_buffers(struct trace_array *, int);
4445:	static void apply_trace_boot_options(void);
203:	static int boot_alloc_snapshot(char *);
571:	static u64 buffer_ftrace_now(int, struct trace_buffer *);
6832:	static bool buffer_pipe_buf_get(struct pipe_inode_info *, struct pipe_buffer *);
6823:	static void buffer_pipe_buf_release(struct pipe_inode_info *, struct pipe_buffer *);
6815:	static void buffer_ref_release(struct buffer_ref *);
6857:	static void buffer_spd_release(struct splice_pipe_desc *, unsigned int);
8621:	static int clear_boot_tracer(void);
7529:	static void create_trace_option_files(struct trace_array *, struct tracer *);
2208:	static void disable_trace_buffered_event(void *);
82:	static int dummy_set_flag(struct trace_array *, u32, u32, int);
2201:	static void enable_trace_buffered_event(void *);
974:	static void free_snapshot(struct trace_array *);
7748:	static void free_trace_buffers(struct trace_array *);
7088:	static void ftrace_count_snapshot(unsigned long, unsigned long, struct trace_array *, struct ftrace_probe_ops *, void *);
7080:	static void ftrace_snapshot(unsigned long, unsigned long, struct trace_array *, struct ftrace_probe_ops *, void *);
7148:	static void ftrace_snapshot_free(struct ftrace_probe_ops *, struct trace_array *, unsigned long, void *);
7132:	static int ftrace_snapshot_init(struct ftrace_probe_ops *, struct trace_array *, unsigned long, void *, void **);
7110:	static int ftrace_snapshot_print(struct seq_file *, unsigned long, struct ftrace_probe_ops *, void *);
7176:	static int ftrace_trace_snapshot_callback(struct trace_array *, struct ftrace_hash *, char *, char *, char *, int);
3301:	static void get_total_entries(unsigned long *, unsigned long *, struct trace_buffer *, struct trace_buffer *);
7932:	static void init_tracer_tracefs(struct trace_array *, struct dentry *);
7784:	static int instance_mkdir(const char *);
7864:	static int instance_rmdir(const char *);
3063:	static struct trace_entry *peek_next_entry(struct trace_iterator *, int, u64 *, unsigned long *);
3340:	static void print_event_info(struct trace_buffer *, struct seq_file *);
7622:	static ssize_t rb_simple_read(struct file *, char *, size_t, loff_t *);
7636:	static ssize_t rb_simple_write(struct file *, const char *, size_t, loff_t *);
5178:	static int resize_buffer_duplicate_size(int, struct trace_buffer *, struct trace_buffer *, struct trace_buffer *);
3168:	static void *s_next(struct seq_file *, void *, loff_t *);
3761:	static int s_show(struct seq_file *, void *);
3229:	static void *s_start(struct seq_file *, loff_t *);
3287:	static void s_stop(struct seq_file *, void *);
4822:	static void *saved_cmdlines_next(struct seq_file *, void *, loff_t *);
4866:	static int saved_cmdlines_show(struct seq_file *, void *);
4842:	static void *saved_cmdlines_start(struct seq_file *, loff_t *);
4860:	static void saved_cmdlines_stop(struct seq_file *, void *);
4752:	static void *saved_tgids_next(struct seq_file *, void *, loff_t *);
4791:	static int saved_tgids_show(struct seq_file *, void *);
4769:	static void *saved_tgids_start(struct seq_file *, loff_t *);
4787:	static void saved_tgids_stop(struct seq_file *, void *);
1110:	static int set_buf_size(char *);
5168:	static void set_buffer_entries(unsigned long, struct trace_buffer *);
169:	static int set_cmdline_ftrace(char *);
179:	static int set_ftrace_dump_on_oops(char *);
225:	static int set_trace_boot_clock(char *);
215:	static int set_trace_boot_options(char *);
233:	static int set_tracepoint_printk(char *);
1125:	static int set_tracing_thresh(char *);
4128:	static int show_traces_open(struct inode *, struct file *);
4152:	static int show_traces_release(struct inode *, struct file *);
6537:	static int snapshot_raw_open(struct inode *, struct file *);
195:	static int stop_trace_on_warning(char *);
4072:	static void *t_next(struct seq_file *, void *, loff_t *);
4105:	static int t_show(struct seq_file *, void *);
4085:	static void *t_start(struct seq_file *, loff_t *);
4100:	static void t_stop(struct seq_file *, void *);
8006:	static struct vfsmount *trace_automount(struct dentry *, void *);
8210:	static int trace_die_handler(struct notifier_block *, unsigned long, void *);
8123:	static int trace_module_notify(struct notifier_block *, unsigned long, void *);
7413:	static ssize_t trace_options_core_read(struct file *, char *, size_t, loff_t *);
7432:	static ssize_t trace_options_core_write(struct file *, const char *, size_t, loff_t *);
7487:	static struct dentry *trace_options_init_dentry(struct trace_array *);
7328:	static ssize_t trace_options_read(struct file *, char *, size_t, loff_t *);
7343:	static ssize_t trace_options_write(struct file *, const char *, size_t, loff_t *);
8196:	static int trace_panic_handler(struct notifier_block *, unsigned long, void *);
5647:	static __poll_t trace_poll(struct trace_iterator *, struct file *, poll_table *);
2415:	static void trace_process_export(struct trace_export *, struct ring_buffer_event *);
1931:	static int trace_save_cmdline(struct task_struct *);
4408:	static int trace_set_options(struct trace_array *, char *);
8146:	static int tracer_init_tracefs(void);
6663:	static int tracing_buffers_open(struct inode *, struct file *);
6705:	static __poll_t tracing_buffers_poll(struct file *, poll_table *);
6714:	static ssize_t tracing_buffers_read(struct file *, char *, size_t, loff_t *);
6787:	static int tracing_buffers_release(struct inode *, struct file *);
6867:	static ssize_t tracing_buffers_splice_read(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int);
6305:	static int tracing_clock_open(struct inode *, struct file *);
6228:	static int tracing_clock_show(struct seq_file *, void *);
6277:	static ssize_t tracing_clock_write(struct file *, const char *, size_t, loff_t *);
4195:	static ssize_t tracing_cpumask_read(struct file *, char *, size_t, loff_t *);
4223:	static ssize_t tracing_cpumask_write(struct file *, const char *, size_t, loff_t *);
5957:	static ssize_t tracing_entries_read(struct file *, char *, size_t, loff_t *);
6005:	static ssize_t tracing_entries_write(struct file *, const char *, size_t, loff_t *);
6071:	static int tracing_free_buffer_release(struct inode *, struct file *);
6057:	static ssize_t tracing_free_buffer_write(struct file *, const char *, size_t, loff_t *);
7236:	static struct dentry *tracing_get_dentry(struct trace_array *, struct trace_array *);
6168:	static ssize_t tracing_mark_raw_write(struct file *, const char *, size_t, loff_t *);
6087:	static ssize_t tracing_mark_write(struct file *, const char *, size_t, loff_t *);
5545:	static ssize_t tracing_max_lat_read(struct file *, char *, size_t, loff_t *);
5552:	static ssize_t tracing_max_lat_write(struct file *, const char *, size_t, loff_t *);
5481:	static ssize_t tracing_nsecs_read(char *, size_t, loff_t *, unsigned long *);
4011:	static int tracing_open(struct inode *, struct file *);
3938:	static int tracing_open_generic_tr(struct inode *, struct file *);
5560:	static int tracing_open_pipe(struct inode *, struct file *);
5666:	static __poll_t tracing_poll_pipe(struct file *, poll_table *);
7058:	static ssize_t tracing_read_dyn_info(struct file *, char *, size_t, loff_t *);
5714:	static ssize_t tracing_read_pipe(struct file *, char *, size_t, loff_t *);
4739:	static ssize_t tracing_readme_read(struct file *, char *, size_t, loff_t *);
3953:	static int tracing_release(struct inode *, struct file *);
3994:	static int tracing_release_generic_tr(struct inode *, struct file *);
5623:	static int tracing_release_pipe(struct inode *, struct file *);
4883:	static int tracing_saved_cmdlines_open(struct inode *, struct file *);
4899:	static ssize_t tracing_saved_cmdlines_size_read(struct file *, char *, size_t, loff_t *);
4942:	static ssize_t tracing_saved_cmdlines_size_write(struct file *, const char *, size_t, loff_t *);
4806:	static int tracing_saved_tgids_open(struct inode *, struct file *);
8644:	static int tracing_set_default_clock(void);
5148:	static ssize_t tracing_set_trace_read(struct file *, char *, size_t, loff_t *);
5448:	static ssize_t tracing_set_trace_write(struct file *, const char *, size_t, loff_t *);
5350:	static int tracing_set_tracer(struct trace_array *, const char *);
4002:	static int tracing_single_release_tr(struct inode *, struct file *);
6396:	static int tracing_snapshot_open(struct inode *, struct file *);
6512:	static int tracing_snapshot_release(struct inode *, struct file *);
6437:	static ssize_t tracing_snapshot_write(struct file *, const char *, size_t, loff_t *);
5809:	static void tracing_spd_release_pipe(struct splice_pipe_desc *, unsigned int);
5870:	static ssize_t tracing_splice_read_pipe(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int);
6985:	static ssize_t tracing_stats_read(struct file *, char *, size_t, loff_t *);
5511:	static ssize_t tracing_thresh_read(struct file *, char *, size_t, loff_t *);
5518:	static ssize_t tracing_thresh_write(struct file *, const char *, size_t, loff_t *);
6339:	static int tracing_time_stamp_mode_open(struct inode *, struct file *);
6323:	static int tracing_time_stamp_mode_show(struct seq_file *, void *);
6033:	static ssize_t tracing_total_entries_read(struct file *, char *, size_t, loff_t *);
4491:	static int tracing_trace_options_open(struct inode *, struct file *);
4277:	static int tracing_trace_options_show(struct seq_file *, void *);
4466:	static ssize_t tracing_trace_options_write(struct file *, const char *, size_t, loff_t *);
5674:	static int tracing_wait_pipe(struct file *, struct file *);
4161:	static ssize_t tracing_write_stub(struct file *, const char *, size_t, loff_t *);
1437:	static int wait_on_pipe(struct trace_iterator *, bool);

File kernel/trace/trace.h:
301:	static struct trace_array *top_trace_array(void);

File kernel/trace/trace_clock.c:
57:	u64 trace_clock(void);
155:	u64 trace_clock_counter(void);
94:	u64 trace_clock_global(void);
70:	u64 trace_clock_jiffies(void);
32:	u64 trace_clock_local(void);

File kernel/trace/trace_entries.h:
217:	static int ftrace_define_fields_bprint(struct trace_event_call *);
265:	static int ftrace_define_fields_bputs(struct trace_event_call *);
325:	static int ftrace_define_fields_branch(struct trace_event_call *);
128:	static int ftrace_define_fields_context_switch(struct trace_event_call *);
76:	static int ftrace_define_fields_funcgraph_entry(struct trace_event_call *);
92:	static int ftrace_define_fields_funcgraph_exit(struct trace_event_call *);
59:	static int ftrace_define_fields_function(struct trace_event_call *);
346:	static int ftrace_define_fields_hwlat(struct trace_event_call *);
176:	static int ftrace_define_fields_kernel_stack(struct trace_event_call *);
301:	static int ftrace_define_fields_mmiotrace_map(struct trace_event_call *);
280:	static int ftrace_define_fields_mmiotrace_rw(struct trace_event_call *);
233:	static int ftrace_define_fields_print(struct trace_event_call *);
250:	static int ftrace_define_fields_raw_data(struct trace_event_call *);
195:	static int ftrace_define_fields_user_stack(struct trace_event_call *);
148:	static int ftrace_define_fields_wakeup(struct trace_event_call *);

File kernel/trace/trace_event_perf.c:
490:	int perf_ftrace_event_register(struct trace_event_call *, enum trace_reg, void *);
285:	void perf_kprobe_destroy(struct perf_event *);
243:	int perf_kprobe_init(struct perf_event *, bool);
349:	int perf_trace_add(struct perf_event *, int);
389:	void *perf_trace_buf_alloc(int, struct pt_regs **, int *);
415:	void perf_trace_buf_update(void *, u16);
376:	void perf_trace_del(struct perf_event *, int);
234:	void perf_trace_destroy(struct perf_event *);
212:	int perf_trace_init(struct perf_event *);
339:	void perf_uprobe_destroy(struct perf_event *);
297:	int perf_uprobe_init(struct perf_event *, bool);
429:	static void perf_ftrace_function_call(unsigned long, unsigned long, struct ftrace_ops *, struct pt_regs *);
190:	static int perf_trace_event_init(struct trace_event_call *, struct perf_event *);
149:	static void perf_trace_event_unreg(struct perf_event *);

File kernel/trace/trace_events.c:
2501:	struct trace_event_file *__find_event_file(struct trace_array *, const char *, const char *);
3003:	int event_trace_add_tracer(struct dentry *, struct trace_array *);
3047:	int event_trace_del_tracer(struct trace_array *);
3170:	int event_trace_init(void);
2524:	struct trace_event_file *find_event_file(struct trace_array *, const char *, const char *);
2322:	int trace_add_event_call(struct trace_event_call *);
2306:	int trace_add_event_call_nolock(struct trace_event_call *);
139:	int trace_define_field(struct trace_event_call *, const char *, const char *, int, int, int, int);
253:	void *trace_event_buffer_reserve(struct trace_event_buffer *, struct trace_event_file *, unsigned long);
325:	void trace_event_enable_cmd_record(bool);
487:	int trace_event_enable_disable(struct trace_event_file *, int, int);
347:	void trace_event_enable_tgid_record(bool);
2211:	void trace_event_eval_update(struct trace_eval_map **, int);
532:	void trace_event_follow_fork(struct trace_array *, bool);
211:	int trace_event_get_offsets(struct trace_event_call *);
237:	bool trace_event_ignore_this_pid(struct trace_event_file *);
3208:	void trace_event_init(void);
225:	int trace_event_raw_init(struct trace_event_call *);
287:	int trace_event_reg(struct trace_event_call *, enum trace_reg, void *);
95:	struct ftrace_event_field *trace_find_event_field(struct trace_event_call *, char *);
2394:	int trace_remove_event_call(struct trace_event_call *);
2378:	int trace_remove_event_call_nolock(struct trace_event_call *);
848:	int trace_set_clr_event(const char *, const char *, int);
607:	static void __ftrace_clear_event_pids(struct trace_array *);
369:	static int __ftrace_event_enable_disable(struct trace_event_file *, int, int);
739:	static int __ftrace_set_clr_event_nolock(struct trace_array *, const char *, const char *, const char *, int);
670:	static void __get_system(struct event_subsystem *);
652:	static void __put_system(struct event_subsystem *);
683:	static void __put_system_dir(struct trace_subsystem_dir *);
2274:	static int __trace_add_new_event(struct trace_event_call *, struct trace_array *);
112:	static int __trace_define_field(struct list_head *, const char *, const char *, int, int, int, int);
2940:	static int create_event_toplevel_files(struct dentry *, struct trace_array *);
3081:	static void early_enable_events(struct trace_array *, bool);
1958:	static int event_create_dir(struct dentry *, struct trace_event_file *);
2575:	static void event_enable_count_probe(unsigned long, unsigned long, struct trace_array *, struct ftrace_probe_ops *, void *);
2671:	static void event_enable_free(struct ftrace_probe_ops *, struct trace_array *, unsigned long, void *);
2724:	static int event_enable_func(struct trace_array *, struct ftrace_hash *, char *, char *, char *, int);
2633:	static int event_enable_init(struct ftrace_probe_ops *, struct trace_array *, unsigned long, void *, void **);
2603:	static int event_enable_print(struct seq_file *, unsigned long, struct ftrace_probe_ops *, void *);
2558:	static void event_enable_probe(unsigned long, unsigned long, struct trace_array *, struct ftrace_probe_ops *, void *);
1032:	static ssize_t event_enable_read(struct file *, char *, size_t, loff_t *);
1062:	static ssize_t event_enable_write(struct file *, const char *, size_t, loff_t *);
511:	static void event_filter_pid_sched_process_exit(void *, struct task_struct *);
521:	static void event_filter_pid_sched_process_fork(void *, struct task_struct *, struct task_struct *);
562:	static void event_filter_pid_sched_switch_probe_post(void *, bool, struct task_struct *, struct task_struct *);
548:	static void event_filter_pid_sched_switch_probe_pre(void *, bool, struct task_struct *, struct task_struct *);
591:	static void event_filter_pid_sched_wakeup_probe_post(void *, struct task_struct *);
575:	static void event_filter_pid_sched_wakeup_probe_pre(void *, struct task_struct *);
1331:	static ssize_t event_filter_read(struct file *, char *, size_t, loff_t *);
1364:	static ssize_t event_filter_write(struct file *, const char *, size_t, loff_t *);
1316:	static ssize_t event_id_read(struct file *, char *, size_t, loff_t *);
2080:	static int event_init(struct trace_event_call *);
2052:	static void event_remove(struct trace_event_call *);
3155:	static int event_trace_enable_again(void);
1190:	static void *f_next(struct seq_file *, void *, loff_t *);
1222:	static int f_show(struct seq_file *, void *);
1272:	static void *f_start(struct seq_file *, loff_t *);
2656:	static int free_probe_data(void *);
1802:	static int ftrace_event_avail_open(struct inode *, struct file *);
1591:	static ssize_t ftrace_event_pid_write(struct file *, const char *, size_t, loff_t *);
1792:	static int ftrace_event_release(struct inode *, struct file *);
1810:	static int ftrace_event_set_open(struct inode *, struct file *);
1830:	static int ftrace_event_set_pid_open(struct inode *, struct file *);
863:	static ssize_t ftrace_event_write(struct file *, const char *, size_t, loff_t *);
798:	static int ftrace_set_clr_event(struct trace_array *, char *, int);
1574:	static void ignore_task_cpu(void *);
993:	static void *p_next(struct seq_file *, void *, loff_t *);
1001:	static void *p_start(struct seq_file *, loff_t *);
1024:	static void p_stop(struct seq_file *, void *);
694:	static void put_system(struct trace_subsystem_dir *);
713:	static void remove_event_file_dir(struct trace_event_file *);
943:	static void *s_next(struct seq_file *, void *, loff_t *);
958:	static void *s_start(struct seq_file *, loff_t *);
2928:	static int setup_trace_event(char *);
1550:	static ssize_t show_header(struct file *, char *, size_t, loff_t *);
1498:	static ssize_t subsystem_filter_read(struct file *, char *, size_t, loff_t *);
1525:	static ssize_t subsystem_filter_write(struct file *, const char *, size_t, loff_t *);
1395:	static int subsystem_open(struct inode *, struct file *);
1478:	static int subsystem_release(struct inode *, struct file *);
1098:	static ssize_t system_enable_read(struct file *, char *, size_t, loff_t *);
1145:	static ssize_t system_enable_write(struct file *, const char *, size_t, loff_t *);
1445:	static int system_tr_open(struct inode *, struct file *);
903:	static void *t_next(struct seq_file *, void *, loff_t *);
975:	static int t_show(struct seq_file *, void *);
925:	static void *t_start(struct seq_file *, loff_t *);
987:	static void t_stop(struct seq_file *, void *);
2253:	static struct trace_event_file *trace_create_new_event(struct trace_event_call *, struct trace_array *);
195:	static void trace_destroy_fields(struct trace_event_call *);
1300:	static int trace_format_open(struct inode *, struct file *);
2457:	static int trace_module_notify(struct notifier_block *, unsigned long, void *);
2549:	static void update_event_probe(struct event_probe_data *, struct event_probe_data *);

File kernel/trace/trace_events_filter.c:
1777:	int apply_event_filter(struct trace_event_file *, char *);
1828:	int apply_subsystem_event_filter(struct trace_subsystem_dir *, char *);
1737:	int create_event_filter(struct trace_event_call *, char *, bool, struct event_filter **);
1066:	int filter_assign_type(const char *);
888:	int filter_match_preds(struct event_filter *, void *);
818:	enum regex_type filter_parse_regex(char *, int, char **, int *);
1025:	void free_event_filter(struct event_filter *);
1873:	void ftrace_profile_free_filter(struct perf_event *);
2036:	int ftrace_profile_set_filter(struct perf_event *, int, char *);
967:	void print_event_filter(struct trace_event_file *, struct trace_seq *);
977:	void print_subsystem_event_filter(struct event_subsystem *, struct trace_seq *);
1015:	static void __free_filter(struct event_filter *);
921:	static void append_filter_err(struct filter_parse_error *, struct event_filter *);
1714:	static int create_filter(struct trace_event_call *, char *, bool, struct event_filter **);
1659:	static int create_filter_start(char *, bool, struct filter_parse_error **, struct event_filter **);
651:	static int filter_pred_16(struct filter_pred *, void *);
650:	static int filter_pred_32(struct filter_pred *, void *);
649:	static int filter_pred_64(struct filter_pred *, void *);
652:	static int filter_pred_8(struct filter_pred *, void *);
644:	static int filter_pred_BAND_s16(struct filter_pred *, void *);
642:	static int filter_pred_BAND_s32(struct filter_pred *, void *);
640:	static int filter_pred_BAND_s64(struct filter_pred *, void *);
646:	static int filter_pred_BAND_s8(struct filter_pred *, void *);
645:	static int filter_pred_BAND_u16(struct filter_pred *, void *);
643:	static int filter_pred_BAND_u32(struct filter_pred *, void *);
641:	static int filter_pred_BAND_u64(struct filter_pred *, void *);
647:	static int filter_pred_BAND_u8(struct filter_pred *, void *);
644:	static int filter_pred_GE_s16(struct filter_pred *, void *);
642:	static int filter_pred_GE_s32(struct filter_pred *, void *);
640:	static int filter_pred_GE_s64(struct filter_pred *, void *);
646:	static int filter_pred_GE_s8(struct filter_pred *, void *);
645:	static int filter_pred_GE_u16(struct filter_pred *, void *);
643:	static int filter_pred_GE_u32(struct filter_pred *, void *);
641:	static int filter_pred_GE_u64(struct filter_pred *, void *);
647:	static int filter_pred_GE_u8(struct filter_pred *, void *);
644:	static int filter_pred_GT_s16(struct filter_pred *, void *);
642:	static int filter_pred_GT_s32(struct filter_pred *, void *);
640:	static int filter_pred_GT_s64(struct filter_pred *, void *);
646:	static int filter_pred_GT_s8(struct filter_pred *, void *);
645:	static int filter_pred_GT_u16(struct filter_pred *, void *);
643:	static int filter_pred_GT_u32(struct filter_pred *, void *);
641:	static int filter_pred_GT_u64(struct filter_pred *, void *);
647:	static int filter_pred_GT_u8(struct filter_pred *, void *);
644:	static int filter_pred_LE_s16(struct filter_pred *, void *);
642:	static int filter_pred_LE_s32(struct filter_pred *, void *);
640:	static int filter_pred_LE_s64(struct filter_pred *, void *);
646:	static int filter_pred_LE_s8(struct filter_pred *, void *);
645:	static int filter_pred_LE_u16(struct filter_pred *, void *);
643:	static int filter_pred_LE_u32(struct filter_pred *, void *);
641:	static int filter_pred_LE_u64(struct filter_pred *, void *);
647:	static int filter_pred_LE_u8(struct filter_pred *, void *);
644:	static int filter_pred_LT_s16(struct filter_pred *, void *);
642:	static int filter_pred_LT_s32(struct filter_pred *, void *);
640:	static int filter_pred_LT_s64(struct filter_pred *, void *);
646:	static int filter_pred_LT_s8(struct filter_pred *, void *);
645:	static int filter_pred_LT_u16(struct filter_pred *, void *);
643:	static int filter_pred_LT_u32(struct filter_pred *, void *);
641:	static int filter_pred_LT_u64(struct filter_pred *, void *);
647:	static int filter_pred_LT_u8(struct filter_pred *, void *);
733:	static int filter_pred_comm(struct filter_pred *, void *);
707:	static int filter_pred_cpu(struct filter_pred *, void *);
742:	static int filter_pred_none(struct filter_pred *, void *);
668:	static int filter_pred_pchar(struct filter_pred *, void *);
655:	static int filter_pred_string(struct filter_pred *, void *);
691:	static int filter_pred_strloc(struct filter_pred *, void *);
1134:	static int parse_pred(const char *, void *, int, struct filter_parse_error *, struct filter_pred **);
1487:	static int process_preds(struct trace_event_call *, const char *, struct event_filter *, struct filter_parse_error *);
784:	static int regex_match_end(char *, struct regex *, int);
768:	static int regex_match_front(char *, struct regex *, int);
759:	static int regex_match_full(char *, struct regex *, int);
794:	static int regex_match_glob(char *, struct regex *, int);
776:	static int regex_match_middle(char *, struct regex *, int);

File kernel/trace/trace_events_hist.c:
5717:	int register_trigger_hist_cmd(void);
5846:	int register_trigger_hist_enable_disable_cmds(void);
3895:	static int __create_val_field(struct hist_trigger_data *, unsigned int, struct trace_event_file *, char *, char *, unsigned long);
705:	static int __set_synth_event_print_fmt(char *, int, struct synth_event *, struct synth_event *);
1017:	static void action_trace(struct hist_trigger_data *, struct tracing_map_elt *, void *, struct ring_buffer_event *, struct action_data *, u64 *);
1032:	static void add_or_delete_synth_event(struct synth_event *, int);
1295:	static struct hist_field *check_field_for_var_refs(struct hist_trigger_data *, struct hist_field *, struct hist_trigger_data *, unsigned int, unsigned int);
1371:	static bool check_var_refs(struct hist_trigger_data *);
2148:	static int contains_operator(char *);
4356:	static int create_actions(struct hist_trigger_data *, struct trace_event_file *);
3224:	static struct field_var *create_field_var(struct hist_trigger_data *, struct trace_event_file *, char *);
2195:	static struct hist_field *create_hist_field(struct hist_trigger_data *, struct ftrace_event_field *, unsigned long, char *);
1044:	static int create_synth_event(int, char **);
3183:	static struct hist_field *create_var(struct hist_trigger_data *, struct trace_event_file *, char *, int, const char *);
2379:	static struct hist_field *create_var_ref(struct hist_field *, char *, char *);
4504:	static void destroy_hist_data(struct hist_trigger_data *);
2174:	static void destroy_hist_field(struct hist_field *, unsigned int);
1803:	static void destroy_hist_trigger_attrs(struct hist_trigger_attrs *);
5193:	static struct event_trigger_ops *event_hist_get_trigger_ops(char *, char *);
4952:	static int event_hist_open(struct inode *, struct file *);
4694:	static void event_hist_trigger(struct event_trigger_data *, void *, struct ring_buffer_event *);
5129:	static void event_hist_trigger_free(struct event_trigger_ops *, struct event_trigger_data *);
5529:	static int event_hist_trigger_func(struct event_command *, struct trace_event_file *, char *, char *, char *);
5101:	static int event_hist_trigger_init(struct event_trigger_ops *, struct event_trigger_data *);
5171:	static void event_hist_trigger_named_free(struct event_trigger_ops *, struct event_trigger_data *);
5159:	static int event_hist_trigger_named_init(struct event_trigger_ops *, struct event_trigger_data *);
4992:	static int event_hist_trigger_print(struct seq_file *, struct event_trigger_ops *, struct event_trigger_data *);
2079:	static void expr_field_str(struct hist_field *, char *);
2096:	static char *expr_str(struct hist_field *, unsigned int);
1405:	static bool field_has_hist_vars(struct hist_field *, unsigned int);
1612:	static struct hist_field *find_event_var(struct hist_trigger_data *, char *, char *, char *);
1561:	static struct hist_field *find_file_var(struct trace_event_file *, const char *);
890:	static struct synth_event *find_synth_event(const char *);
2938:	static struct hist_field *find_synthetic_field_var(struct hist_trigger_data *, char *, char *, char *);
1506:	static struct hist_field *find_var(struct trace_event_file *, const char *, struct hist_trigger_data *);
1488:	static struct hist_field *find_var_field(struct hist_trigger_data *, const char *);
1530:	static struct trace_event_file *find_var_file(struct trace_array *, char *, char *, char *);
965:	static void free_synth_event(struct synth_event *);
755:	static void free_synth_field(struct synth_field *);
4111:	static void free_var_defs(struct hist_trigger_data *);
2057:	static const char *get_hist_field_flags(struct hist_field *);
1983:	static void hist_elt_data_free(struct hist_elt_data *);
5745:	static void hist_enable_count_trigger(struct event_trigger_data *, void *, struct ring_buffer_event *);
5786:	static struct event_trigger_ops *hist_enable_get_trigger_ops(char *, char *);
5728:	static void hist_enable_trigger(struct event_trigger_data *, void *, struct ring_buffer_event *);
5803:	static void hist_enable_unreg_all(struct trace_event_file *);
358:	static void hist_err(char *, char *);
378:	static void hist_err_event(char *, char *, char *, char *);
76:	static u64 hist_field_counter(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
1267:	static u64 hist_field_cpu(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
94:	static u64 hist_field_dynstring(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
116:	static u64 hist_field_log2(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
142:	static u64 hist_field_minus(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
1707:	static const char *hist_field_name(struct hist_field *, unsigned int);
68:	static u64 hist_field_none(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
128:	static u64 hist_field_plus(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
4964:	static void hist_field_print(struct seq_file *, struct hist_field *);
106:	static u64 hist_field_pstring(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
184:	static u64 hist_field_s16(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
182:	static u64 hist_field_s32(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
180:	static u64 hist_field_s64(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
186:	static u64 hist_field_s8(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
84:	static u64 hist_field_string(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
1251:	static u64 hist_field_timestamp(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
185:	static u64 hist_field_u16(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
183:	static u64 hist_field_u32(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
181:	static u64 hist_field_u64(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
187:	static u64 hist_field_u8(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
156:	static u64 hist_field_unary_minus(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
1644:	static u64 hist_field_var_ref(struct hist_field *, struct tracing_map_elt *, struct ring_buffer_event *, void *);
5304:	static int hist_register_trigger(char *, struct event_trigger_ops *, struct event_trigger_data *, struct trace_event_file *);
4922:	static int hist_show(struct seq_file *, void *);
2001:	static int hist_trigger_elt_data_alloc(struct tracing_map_elt *);
1994:	static void hist_trigger_elt_data_free(struct tracing_map_elt *);
2043:	static void hist_trigger_elt_data_init(struct tracing_map_elt *);
4773:	static void hist_trigger_entry_print(struct seq_file *, struct hist_trigger_data *, void *, struct tracing_map_elt *);
5233:	static bool hist_trigger_match(struct event_trigger_data *, struct event_trigger_data *, struct event_trigger_data *, bool);
4754:	static void hist_trigger_stacktrace_print(struct seq_file *, unsigned long *, unsigned int);
5497:	static void hist_unreg_all(struct trace_event_file *);
5449:	static void hist_unregister_trigger(char *, struct event_trigger_ops *, struct event_trigger_data *, struct trace_event_file *);
2323:	static int init_var_ref(struct hist_field *, struct hist_field *, char *, char *);
4200:	static int is_descending(const char *);
2396:	static bool is_var_ref(char *);
3543:	static void onmatch_destroy(struct action_data *);
3362:	static void onmax_destroy(struct action_data *);
3341:	static void onmax_save(struct hist_trigger_data *, struct tracing_map_elt *, void *, struct ring_buffer_event *, struct action_data *, u64 *);
3452:	static int parse_action_params(char *, struct action_data *);
2562:	static struct hist_field *parse_atom(struct hist_trigger_data *, struct trace_event_file *, char *, unsigned long *, char *);
2738:	static struct hist_field *parse_expr(struct hist_trigger_data *, struct trace_event_file *, char *, unsigned long, char *, unsigned int);
1778:	static int parse_map_size(char *);
577:	static enum print_line_t print_synth_event(struct trace_iterator *, int, struct trace_event *);
1469:	static void remove_hist_vars(struct hist_trigger_data *);
1661:	static bool resolve_var_refs(struct hist_trigger_data *, void *, u64 *, bool);
413:	static int synth_event_define_fields(struct trace_event_call *);
1222:	static int synth_events_open(struct inode *, struct file *);
1184:	static void *synth_events_seq_next(struct seq_file *, void *, loff_t *);
1194:	static int synth_events_seq_show(struct seq_file *, void *);
1177:	static void *synth_events_seq_start(struct seq_file *, loff_t *);
1189:	static void synth_events_seq_stop(struct seq_file *, void *);
1235:	static ssize_t synth_events_write(struct file *, const char *, size_t, loff_t *);
537:	static const char *synth_field_fmt(char *);
629:	static void trace_event_raw_event_synth(void *, u64 *, unsigned int);
5860:	static int trace_events_hist_init(void);

File kernel/trace/trace_events_trigger.c:
468:	void clear_event_triggers(struct trace_array *);
838:	void del_named_trigger(struct event_trigger_data *);
1479:	int event_enable_register_trigger(char *, struct event_trigger_ops *, struct event_trigger_data *, struct trace_event_file *);
1287:	void event_enable_trigger_free(struct event_trigger_ops *, struct event_trigger_data *);
1333:	int event_enable_trigger_func(struct event_command *, struct trace_event_file *, char *, char *, char *);
1261:	int event_enable_trigger_print(struct seq_file *, struct event_trigger_ops *, struct event_trigger_data *);
1519:	void event_enable_unregister_trigger(char *, struct event_trigger_ops *, struct event_trigger_data *, struct trace_event_file *);
405:	int event_trigger_init(struct event_trigger_ops *, struct event_trigger_data *);
55:	enum event_trigger_type event_triggers_call(struct trace_event_file *, void *, struct ring_buffer_event *);
98:	void event_triggers_post_call(struct trace_event_file *, enum event_trigger_type);
781:	struct event_trigger_data *find_named_trigger(const char *);
908:	struct event_trigger_data *get_named_trigger_data(struct event_trigger_data *);
804:	bool is_named_trigger(struct event_trigger_data *);
871:	void pause_named_trigger(struct event_trigger_data *);
316:	int register_event_command(struct event_command *);
1623:	int register_trigger_cmds(void);
823:	int save_named_trigger(const char *, struct event_trigger_data *);
901:	void set_named_trigger_data(struct event_trigger_data *, struct event_trigger_data *);
713:	int set_trigger_filter(char *, struct event_trigger_data *, struct trace_event_file *);
434:	int trace_event_trigger_enable_disable(struct trace_event_file *, int);
19:	void trigger_data_free(struct event_trigger_data *);
885:	void unpause_named_trigger(struct event_trigger_data *);
339:	int unregister_event_command(struct event_command *);
493:	void update_cond_flag(struct trace_event_file *);
846:	static void __pause_named_trigger(struct event_trigger_data *, bool);
1243:	static void event_enable_count_trigger(struct event_trigger_data *, void *, struct ring_buffer_event *);
1548:	static struct event_trigger_ops *event_enable_get_trigger_ops(char *, char *);
1231:	static void event_enable_trigger(struct event_trigger_data *, void *, struct ring_buffer_event *);
609:	static int event_trigger_callback(struct event_command *, struct trace_event_file *, char *, char *, char *);
423:	static void event_trigger_free(struct event_trigger_ops *, struct event_trigger_data *);
293:	static int event_trigger_open(struct inode *, struct file *);
373:	static int event_trigger_print(const char *, struct seq_file *, void *, char *);
299:	static int event_trigger_release(struct inode *, struct file *);
286:	static ssize_t event_trigger_write(struct file *, const char *, size_t, loff_t *);
1010:	static struct event_trigger_ops *onoff_get_trigger_ops(char *, char *);
1073:	static int register_snapshot_trigger(char *, struct event_trigger_ops *, struct event_trigger_data *, struct trace_event_file *);
526:	static int register_trigger(char *, struct event_trigger_ops *, struct event_trigger_data *, struct trace_event_file *);
1060:	static void snapshot_count_trigger(struct event_trigger_data *, void *, struct ring_buffer_event *);
1106:	static struct event_trigger_ops *snapshot_get_trigger_ops(char *, char *);
1048:	static void snapshot_trigger(struct event_trigger_data *, void *, struct ring_buffer_event *);
1084:	static int snapshot_trigger_print(struct seq_file *, struct event_trigger_ops *, struct event_trigger_data *);
1160:	static void stacktrace_count_trigger(struct event_trigger_data *, void *, struct ring_buffer_event *);
1195:	static struct event_trigger_ops *stacktrace_get_trigger_ops(char *, char *);
1153:	static void stacktrace_trigger(struct event_trigger_data *, void *, struct ring_buffer_event *);
1173:	static int stacktrace_trigger_print(struct seq_file *, struct event_trigger_ops *, struct event_trigger_data *);
950:	static void traceoff_count_trigger(struct event_trigger_data *, void *, struct ring_buffer_event *);
940:	static void traceoff_trigger(struct event_trigger_data *, void *, struct ring_buffer_event *);
974:	static int traceoff_trigger_print(struct seq_file *, struct event_trigger_ops *, struct event_trigger_data *);
924:	static void traceon_count_trigger(struct event_trigger_data *, void *, struct ring_buffer_event *);
914:	static void traceon_trigger(struct event_trigger_data *, void *, struct ring_buffer_event *);
966:	static int traceon_trigger_print(struct seq_file *, struct event_trigger_ops *, struct event_trigger_data *);
114:	static void *trigger_next(struct seq_file *, void *, loff_t *);
145:	static int trigger_show(struct seq_file *, void *);
124:	static void *trigger_start(struct seq_file *, loff_t *);
140:	static void trigger_stop(struct seq_file *, void *);
571:	static void unregister_trigger(char *, struct event_trigger_ops *, struct event_trigger_data *, struct trace_event_file *);

File kernel/trace/trace_export.c:
198:	bool ftrace_event_is_function(struct trace_event_call *);
18:	static int ftrace_event_register(struct trace_event_call *, enum trace_reg, void *);

File kernel/trace/trace_functions.c:
55:	int ftrace_create_function_files(struct trace_array *, struct dentry *);
76:	void ftrace_destroy_function_files(struct trace_array *);
810:	int init_function_trace(void);
575:	static void ftrace_count_free(struct ftrace_probe_ops *, struct trace_array *, unsigned long, void *);
559:	static int ftrace_count_init(struct ftrace_probe_ops *, struct trace_array *, unsigned long, void *, void **);
726:	static int ftrace_cpudump_callback(struct trace_array *, struct ftrace_hash *, char *, char *, char *, int);
551:	static int ftrace_cpudump_print(struct seq_file *, unsigned long, struct ftrace_probe_ops *, void *);
492:	static void ftrace_cpudump_probe(unsigned long, unsigned long, struct trace_array *, struct ftrace_probe_ops *, void *);
710:	static int ftrace_dump_callback(struct trace_array *, struct ftrace_hash *, char *, char *, char *, int);
544:	static int ftrace_dump_print(struct seq_file *, unsigned long, struct ftrace_probe_ops *, void *);
482:	static void ftrace_dump_probe(unsigned long, unsigned long, struct trace_array *, struct ftrace_probe_ops *, void *);
501:	static int ftrace_probe_print(const char *, struct seq_file *, unsigned long, void *, struct ftrace_probe_ops *);
414:	static void ftrace_stacktrace(unsigned long, unsigned long, struct trace_array *, struct ftrace_probe_ops *, void *);
695:	static int ftrace_stacktrace_callback(struct trace_array *, struct ftrace_hash *, char *, char *, char *, int);
422:	static void ftrace_stacktrace_count(unsigned long, unsigned long, struct trace_array *, struct ftrace_probe_ops *, void *);
537:	static int ftrace_stacktrace_print(struct seq_file *, unsigned long, struct ftrace_probe_ops *, void *);
676:	static int ftrace_trace_onoff_callback(struct trace_array *, struct ftrace_hash *, char *, char *, char *, int);
637:	static int ftrace_trace_probe_callback(struct trace_array *, struct ftrace_probe_ops *, char *, char *, int, char *, struct ftrace_hash *);
370:	static void ftrace_traceoff(unsigned long, unsigned long, struct trace_array *, struct ftrace_probe_ops *, void *);
351:	static void ftrace_traceoff_count(unsigned long, unsigned long, struct trace_array *, struct ftrace_probe_ops *, void *);
530:	static int ftrace_traceoff_print(struct seq_file *, unsigned long, struct ftrace_probe_ops *, void *);
359:	static void ftrace_traceon(unsigned long, unsigned long, struct trace_array *, struct ftrace_probe_ops *, void *);
343:	static void ftrace_traceon_count(unsigned long, unsigned long, struct trace_array *, struct ftrace_probe_ops *, void *);
522:	static int ftrace_traceon_print(struct seq_file *, unsigned long, struct ftrace_probe_ops *, void *);
236:	static int func_set_flag(struct trace_array *, u32, u32, int);
176:	static void function_stack_trace_call(unsigned long, unsigned long, struct ftrace_ops *, struct pt_regs *);
125:	static void function_trace_call(unsigned long, unsigned long, struct ftrace_ops *, struct pt_regs *);
83:	static int function_trace_init(struct trace_array *);
112:	static void function_trace_reset(struct trace_array *);
119:	static void function_trace_start(struct trace_array *);
281:	static void update_traceon_count(unsigned long, struct trace_array *, bool, void *, struct ftrace_probe_ops *);

File kernel/trace/trace_functions_graph.c:
372:	int __trace_graph_entry(struct trace_array *, struct ftrace_graph_ent *, unsigned long, int);
483:	void __trace_graph_return(struct trace_array *, struct ftrace_graph_ret *, unsigned long, int);
28:	bool ftrace_graph_is_dead(void);
330:	unsigned long ftrace_graph_ret_addr(struct task_struct *, int *, unsigned long, unsigned long *);
41:	void ftrace_graph_stop(void);
279:	unsigned long ftrace_return_to_handler(unsigned long);
183:	int function_graph_enter(unsigned long, unsigned long, unsigned long, unsigned long *);
1469:	void graph_trace_close(struct trace_iterator *);
1427:	void graph_trace_open(struct trace_iterator *);
1272:	enum print_line_t print_graph_function_flags(struct trace_iterator *, u32);
1408:	void print_graph_headers_flags(struct seq_file *, u32);
526:	void set_graph_array(struct trace_array *);
402:	int trace_graph_entry(struct ftrace_graph_ent *);
476:	void trace_graph_function(struct trace_array *, unsigned long, unsigned long, unsigned long, int);
503:	void trace_graph_return(struct ftrace_graph_ret *);
790:	void trace_print_graph_duration(unsigned long long, struct trace_seq *);
1480:	static int func_graph_set_flag(struct trace_array *, u32, u32, int);
1546:	static ssize_t graph_depth_read(struct file *, char *, size_t, loff_t *);
1528:	static ssize_t graph_depth_write(struct file *, const char *, size_t, loff_t *);
546:	static int graph_trace_init(struct trace_array *);
564:	static void graph_trace_reset(struct trace_array *);
570:	static int graph_trace_update_thresh(struct trace_array *);
1579:	static int init_graph_trace(void);
1564:	static int init_graph_tracefs(void);
823:	static void print_graph_duration(unsigned long long, struct trace_seq *, u32, struct trace_array *);
1098:	static enum print_line_t print_graph_entry(struct ftrace_graph_ent_entry *, struct trace_seq *, struct trace_iterator *, u32);
1333:	static enum print_line_t print_graph_function(struct trace_iterator *);
1339:	static enum print_line_t print_graph_function_event(struct trace_iterator *, int, struct trace_event *);
1403:	static void print_graph_headers(struct seq_file *);
746:	static void print_graph_irq(struct trace_iterator *, unsigned long, enum trace_type, int, pid_t, u32);
590:	static void print_graph_proc(struct trace_seq *, pid_t);
956:	static void print_graph_prologue(struct trace_iterator *, struct trace_seq *, int, unsigned long, u32);
535:	static void trace_graph_thresh_return(struct ftrace_graph_ret *);

File kernel/trace/trace_hwlat.c:
140:	void trace_hwlat_callback(bool);
407:	static ssize_t hwlat_read(struct file *, char *, size_t, loff_t *);
576:	static int hwlat_tracer_init(struct trace_array *);
601:	static void hwlat_tracer_reset(struct trace_array *);
560:	static void hwlat_tracer_start(struct trace_array *);
569:	static void hwlat_tracer_stop(struct trace_array *);
444:	static ssize_t hwlat_width_write(struct file *, const char *, size_t, loff_t *);
483:	static ssize_t hwlat_window_write(struct file *, const char *, size_t, loff_t *);
622:	static int init_hwlat_tracer(void);
316:	static int kthread_fn(void *);
351:	static int start_kthread(struct trace_array *);

File kernel/trace/trace_kdb.c:
103:	static int kdb_ftdump(int, const char **);
134:	static int kdb_ftrace_register(void);

File kernel/trace/trace_kprobe.c:
160:	struct symbol_cache *alloc_symbol_cache(const char *, long);
1366:	int bpf_get_kprobe_info(const struct perf_event *, u32 *, const char **, u64 *, u64 *, bool);
1526:	struct trace_event_call *create_local_trace_kprobe(char *, void *, unsigned long, bool);
1569:	void destroy_local_trace_kprobe(struct trace_event_call *);
280:	void fetch_symbol_string(struct pt_regs *, void *, void *);
281:	void fetch_symbol_string_size(struct pt_regs *, void *, void *);
279:	void fetch_symbol_u16(struct pt_regs *, void *, void *);
279:	void fetch_symbol_u32(struct pt_regs *, void *, void *);
279:	void fetch_symbol_u64(struct pt_regs *, void *, void *);
279:	void fetch_symbol_u8(struct pt_regs *, void *, void *);
154:	void free_symbol_cache(struct symbol_cache *);
120:	bool trace_kprobe_error_injectable(struct trace_event_call *);
111:	bool trace_kprobe_on_func_entry(struct trace_event_call *);
144:	unsigned long update_symbol_cache(struct symbol_cache *);
565:	static int __register_trace_kprobe(struct trace_kprobe *);
603:	static void __unregister_trace_kprobe(struct trace_kprobe *);
522:	static bool __within_notrace_func(unsigned long);
318:	static struct trace_kprobe *alloc_trace_kprobe(const char *, const char *, void *, const char *, unsigned long, int, int, bool);
718:	static int create_trace_kprobe(int, char **);
466:	static int disable_trace_kprobe(struct trace_kprobe *, struct trace_event_file *);
428:	static int enable_trace_kprobe(struct trace_kprobe *, struct trace_event_file *);
216:	static void fetch_memory_string(struct pt_regs *, void *, void *);
242:	static void fetch_memory_string_size(struct pt_regs *, void *, void *);
211:	static void fetch_memory_u16(struct pt_regs *, void *, void *);
211:	static void fetch_memory_u32(struct pt_regs *, void *, void *);
211:	static void fetch_memory_u64(struct pt_regs *, void *, void *);
211:	static void fetch_memory_u8(struct pt_regs *, void *, void *);
194:	static void fetch_stack_u16(struct pt_regs *, void *, void *);
194:	static void fetch_stack_u32(struct pt_regs *, void *, void *);
194:	static void fetch_stack_u64(struct pt_regs *, void *, void *);
194:	static void fetch_stack_u8(struct pt_regs *, void *, void *);
397:	static struct trace_kprobe *find_trace_kprobe(const char *, const char *);
383:	static void free_trace_kprobe(struct trace_kprobe *);
1588:	static int init_kprobe_trace(void);
1429:	static int kprobe_dispatcher(struct kprobe *, struct pt_regs *);
1233:	static int kprobe_event_define_fields(struct trace_event_call *);
1284:	static int kprobe_perf_func(struct trace_kprobe *, struct pt_regs *);
1402:	static int kprobe_register(struct trace_event_call *, enum trace_reg, void *);
1104:	static void kprobe_trace_func(struct trace_kprobe *, struct pt_regs *);
1447:	static int kretprobe_dispatcher(struct kretprobe_instance *, struct pt_regs *);
1256:	static int kretprobe_event_define_fields(struct trace_event_call *);
1333:	static void kretprobe_perf_func(struct trace_kprobe *, struct kretprobe_instance *, struct pt_regs *);
1153:	static void kretprobe_trace_func(struct trace_kprobe *, struct kretprobe_instance *, struct pt_regs *);
1165:	static enum print_line_t print_kprobe_event(struct trace_iterator *, int, struct trace_event *);
1196:	static enum print_line_t print_kretprobe_event(struct trace_iterator *, int, struct trace_event *);
1004:	static int probes_open(struct inode *, struct file *);
1034:	static int probes_profile_seq_show(struct seq_file *, void *);
963:	static void *probes_seq_next(struct seq_file *, void *, loff_t *);
973:	static int probes_seq_show(struct seq_file *, void *);
957:	static void *probes_seq_start(struct seq_file *, loff_t *);
968:	static void probes_seq_stop(struct seq_file *, void *);
1017:	static ssize_t probes_write(struct file *, const char *, size_t, loff_t *);
1053:	static int profile_open(struct inode *, struct file *);
677:	static int trace_kprobe_module_callback(struct notifier_block *, unsigned long, void *);
618:	static int unregister_trace_kprobe(struct trace_kprobe *);
539:	static bool within_notrace_func(struct trace_kprobe *);

File kernel/trace/trace_nop.c:
64:	static int nop_set_flag(struct trace_array *, u32, u32, int);
47:	static int nop_trace_init(struct trace_array *);
54:	static void nop_trace_reset(struct trace_array *);

File kernel/trace/trace_output.c:
807:	int __unregister_trace_event(struct trace_event *);
668:	struct trace_event *ftrace_find_event(int);
738:	int register_trace_event(struct trace_event *);
420:	int seq_print_ip_sym(struct trace_seq *, unsigned long, unsigned long);
713:	void trace_event_read_lock(void);
718:	void trace_event_read_unlock(void);
529:	char trace_find_mark(unsigned long long);
832:	enum print_line_t trace_nop_print(struct trace_iterator *, int, struct trace_event *);
311:	int trace_output_call(struct trace_iterator *, char *, char *, ...);
233:	const char *trace_print_array_seq(struct trace_seq *, const void *, int, size_t);
193:	const char *trace_print_bitmask_seq(struct trace_seq *, void *, unsigned int);
38:	enum print_line_t trace_print_bprintk_msg_only(struct trace_iterator *);
25:	enum print_line_t trace_print_bputs_msg_only(struct trace_iterator *);
587:	int trace_print_context(struct trace_iterator *);
65:	const char *trace_print_flags_seq(struct trace_seq *, const char *, unsigned long, const struct trace_print_flags *);
217:	const char *trace_print_hex_seq(struct trace_seq *, const unsigned char *, int, bool);
625:	int trace_print_lat_context(struct trace_iterator *);
447:	int trace_print_lat_fmt(struct trace_seq *, struct trace_entry *);
51:	enum print_line_t trace_print_printk_msg_only(struct trace_iterator *);
103:	const char *trace_print_symbols_seq(struct trace_seq *, unsigned long, const struct trace_print_flags *);
277:	int trace_raw_output_prep(struct trace_iterator *, struct trace_event *);
818:	int unregister_trace_event(struct trace_event *);
1398:	static int init_events(void);
362:	static void seq_print_sym_offset(struct trace_seq *, unsigned long, const char *);
342:	static void seq_print_sym_short(struct trace_seq *, unsigned long, const char *);
1275:	static enum print_line_t trace_bprint_print(struct trace_iterator *, int, struct trace_event *);
1293:	static enum print_line_t trace_bprint_raw(struct trace_iterator *, int, struct trace_event *);
1231:	static enum print_line_t trace_bputs_print(struct trace_iterator *, int, struct trace_event *);
1249:	static enum print_line_t trace_bputs_raw(struct trace_iterator *, int, struct trace_event *);
1012:	static enum print_line_t trace_ctx_hex(struct trace_iterator *, int, struct trace_event *);
942:	static enum print_line_t trace_ctx_print(struct trace_iterator *, int, struct trace_event *);
976:	static enum print_line_t trace_ctx_raw(struct trace_iterator *, int, struct trace_event *);
1024:	static enum print_line_t trace_ctxwake_bin(struct trace_iterator *, int, struct trace_event *);
989:	static int trace_ctxwake_hex(struct trace_iterator *, char);
916:	static enum print_line_t trace_ctxwake_print(struct trace_iterator *, char *);
954:	static int trace_ctxwake_raw(struct trace_iterator *, char);
889:	static enum print_line_t trace_fn_bin(struct trace_iterator *, int, struct trace_event *);
875:	static enum print_line_t trace_fn_hex(struct trace_iterator *, int, struct trace_event *);
861:	static enum print_line_t trace_fn_raw(struct trace_iterator *, int, struct trace_event *);
841:	static enum print_line_t trace_fn_trace(struct trace_iterator *, int, struct trace_event *);
1166:	static enum print_line_t trace_hwlat_print(struct trace_iterator *, int, struct trace_event *);
1201:	static enum print_line_t trace_hwlat_raw(struct trace_iterator *, int, struct trace_event *);
1318:	static enum print_line_t trace_print_print(struct trace_iterator *, int, struct trace_event *);
1332:	static enum print_line_t trace_print_raw(struct trace_iterator *, int, struct trace_event *);
1354:	static enum print_line_t trace_raw_data(struct trace_iterator *, int, struct trace_event *);
1069:	static enum print_line_t trace_stack_print(struct trace_iterator *, int, struct trace_event *);
1105:	static enum print_line_t trace_user_stack_print(struct trace_iterator *, int, struct trace_event *);
1018:	static enum print_line_t trace_wake_hex(struct trace_iterator *, int, struct trace_event *);
948:	static enum print_line_t trace_wake_print(struct trace_iterator *, int, struct trace_event *);
982:	static enum print_line_t trace_wake_raw(struct trace_iterator *, int, struct trace_event *);

File kernel/trace/trace_printk.c:
217:	int __ftrace_vbprintk(unsigned long, const char *, struct __va_list_tag *);
244:	int __ftrace_vprintk(unsigned long, const char *, struct __va_list_tag *);
199:	int __trace_bprintk(unsigned long, const char *, ...);
229:	int __trace_printk(unsigned long, const char *, ...);
189:	void trace_printk_control(bool);
253:	static const char **find_next(void *, loff_t *);
349:	static int ftrace_formats_open(struct inode *, struct file *);
377:	static int init_trace_printk(void);
361:	static int init_trace_printk_function_export(void);
87:	static int module_trace_bprintk_format_notify(struct notifier_block *, unsigned long, void *);
293:	static void *t_next(struct seq_file *, void *, loff_t *);
299:	static int t_show(struct seq_file *, void *);
287:	static void *t_start(struct seq_file *, loff_t *);
336:	static void t_stop(struct seq_file *, void *);

File kernel/trace/trace_probe.c:
182:	void fetch_bitfield_u16(struct pt_regs *, void *, void *);
182:	void fetch_bitfield_u32(struct pt_regs *, void *, void *);
182:	void fetch_bitfield_u64(struct pt_regs *, void *, void *);
182:	void fetch_bitfield_u8(struct pt_regs *, void *, void *);
214:	void fetch_comm_string(struct pt_regs *, void *, void *);
229:	void fetch_comm_string_size(struct pt_regs *, void *, void *);
127:	void fetch_deref_string_size(struct pt_regs *, void *, void *);
124:	void fetch_deref_u16(struct pt_regs *, void *, void *);
124:	void fetch_deref_u32(struct pt_regs *, void *, void *);
124:	void fetch_deref_u64(struct pt_regs *, void *, void *);
124:	void fetch_deref_u8(struct pt_regs *, void *, void *);
85:	void fetch_reg_u16(struct pt_regs *, void *, void *);
85:	void fetch_reg_u32(struct pt_regs *, void *, void *);
85:	void fetch_reg_u64(struct pt_regs *, void *, void *);
85:	void fetch_reg_u8(struct pt_regs *, void *, void *);
97:	void fetch_retval_u16(struct pt_regs *, void *, void *);
97:	void fetch_retval_u32(struct pt_regs *, void *, void *);
97:	void fetch_retval_u64(struct pt_regs *, void *, void *);
97:	void fetch_retval_u8(struct pt_regs *, void *, void *);
43:	int print_type_s16(struct trace_seq *, const char *, void *, void *);
44:	int print_type_s32(struct trace_seq *, const char *, void *, void *);
45:	int print_type_s64(struct trace_seq *, const char *, void *, void *);
42:	int print_type_s8(struct trace_seq *, const char *, void *, void *);
52:	int print_type_string(struct trace_seq *, const char *, void *, void *);
39:	int print_type_u16(struct trace_seq *, const char *, void *, void *);
40:	int print_type_u32(struct trace_seq *, const char *, void *, void *);
41:	int print_type_u64(struct trace_seq *, const char *, void *, void *);
38:	int print_type_u8(struct trace_seq *, const char *, void *, void *);
47:	int print_type_x16(struct trace_seq *, const char *, void *, void *);
48:	int print_type_x32(struct trace_seq *, const char *, void *, void *);
49:	int print_type_x64(struct trace_seq *, const char *, void *, void *);
46:	int print_type_x8(struct trace_seq *, const char *, void *, void *);
656:	int set_print_fmt(struct trace_probe *, bool);
573:	int traceprobe_conflict_field_name(const char *, struct probe_arg *, int);
599:	void traceprobe_free_probe_arg(struct probe_arg *);
522:	int traceprobe_parse_probe_arg(char *, ssize_t *, struct probe_arg *, bool, bool, const struct fetch_type *);
311:	int traceprobe_split_symbol_offset(char *, long *);
589:	void traceprobe_update_arg(struct probe_arg *);
612:	static int __set_print_fmt(struct trace_probe *, char *, int, bool);
280:	static void fetch_kernel_stack_address(struct pt_regs *, void *, void *);
236:	static const struct fetch_type *find_fetch_type(const char *, const struct fetch_type *);
151:	static void free_deref_fetch_param(struct deref_fetch_param *);
292:	static fetch_func_t get_fetch_size_function(const struct fetch_type *, fetch_func_t, const struct fetch_type *);
376:	static int parse_probe_arg(char *, const struct fetch_type *, struct fetch_param *, bool, bool, const struct fetch_type *);
142:	static void update_deref_fetch_param(struct deref_fetch_param *);

File kernel/trace/trace_sched_switch.c:
129:	void tracing_start_cmdline_record(void);
139:	void tracing_start_tgid_record(void);
134:	void tracing_stop_cmdline_record(void);
144:	void tracing_stop_tgid_record(void);
24:	static void probe_sched_switch(void *, bool, struct task_struct *, struct task_struct *);
38:	static void probe_sched_wakeup(void *, struct task_struct *);
83:	static void tracing_sched_unregister(void);
90:	static void tracing_start_sched_switch(int);

File kernel/trace/trace_sched_wakeup.c:
323:	static void __trace_function(struct trace_array *, unsigned long, unsigned long, int, unsigned long);
510:	static void __wakeup_reset(struct trace_array *);
679:	static int __wakeup_tracer_init(struct trace_array *);
75:	static int func_prolog_preempt_disable(struct trace_array_cpu **, int *, struct trace_array *);
812:	static int init_wakeup_tracer(void);
536:	static void probe_wakeup(void *, struct task_struct *);
377:	static void probe_wakeup_migrate_task(void *, struct task_struct *, int);
442:	static void probe_wakeup_sched_switch(void *, bool, struct task_struct *, struct task_struct *);
130:	static int register_wakeup_function(int, struct trace_array *, struct trace_array *, int);
201:	static int start_func_tracer(struct trace_array *, int);
150:	static void unregister_wakeup_function(int, struct trace_array *);
716:	static int wakeup_dl_tracer_init(struct trace_array *);
186:	static int wakeup_flag_changed(struct trace_array *, u32, int);
236:	static int wakeup_graph_entry(struct ftrace_graph_ent *);
266:	static void wakeup_graph_return(struct ftrace_graph_ret *);
314:	static void wakeup_print_header(struct seq_file *);
302:	static enum print_line_t wakeup_print_line(struct trace_iterator *);
522:	static void wakeup_reset(struct trace_array *);
706:	static int wakeup_rt_tracer_init(struct trace_array *);
292:	static void wakeup_trace_close(struct trace_iterator *);
286:	static void wakeup_trace_open(struct trace_iterator *);
111:	static void wakeup_tracer_call(unsigned long, unsigned long, struct ftrace_ops *, struct pt_regs *);
696:	static int wakeup_tracer_init(struct trace_array *);
726:	static void wakeup_tracer_reset(struct trace_array *);
741:	static void wakeup_tracer_start(struct trace_array *);
747:	static void wakeup_tracer_stop(struct trace_array *);

File kernel/trace/trace_seq.c:
54:	int trace_print_seq(struct seq_file *, struct trace_seq *);
114:	void trace_seq_bitmask(struct trace_seq *, const unsigned long *, int);
178:	void trace_seq_bprintf(struct trace_seq *, const char *, const u32 *);
327:	int trace_seq_path(struct trace_seq *, const struct path *);
84:	void trace_seq_printf(struct trace_seq *, const char *, ...);
236:	void trace_seq_putc(struct trace_seq *, unsigned char);
262:	void trace_seq_putmem(struct trace_seq *, const void *, unsigned int);
288:	void trace_seq_putmem_hex(struct trace_seq *, const void *, unsigned int);
208:	void trace_seq_puts(struct trace_seq *, const char *);
373:	int trace_seq_to_user(struct trace_seq *, char *, int);
144:	void trace_seq_vprintf(struct trace_seq *, const char *, struct __va_list_tag *);

File kernel/trace/trace_stack.c:
77:	void check_stack(unsigned long, unsigned long *);
45:	void stack_trace_print(void);
421:	int stack_trace_sysctl(struct ctl_table *, int, void *, size_t *, loff_t *);
449:	static int enable_stacktrace(char *);
233:	static ssize_t stack_max_size_read(struct file *, char *, size_t, loff_t *);
247:	static ssize_t stack_max_size_write(struct file *, const char *, size_t, loff_t *);
200:	static void stack_trace_call(unsigned long, unsigned long, struct ftrace_ops *, struct pt_regs *);
402:	static int stack_trace_filter_open(struct inode *, struct file *);
460:	static int stack_trace_init(void);
387:	static int stack_trace_open(struct inode *, struct file *);
297:	static void *t_next(struct seq_file *, void *, loff_t *);
344:	static int t_show(struct seq_file *, void *);
303:	static void *t_start(struct seq_file *, loff_t *);
317:	static void t_stop(struct seq_file *, void *);

File kernel/trace/trace_stat.c:
302:	int register_stat_tracer(struct tracer_stat *);
346:	void unregister_stat_tracer(struct tracer_stat *);
47:	static void __reset_stat_session(struct stat_session *);
115:	static int dummy_cmp(void *, void *);
77:	static int insert_stat(struct rb_root *, void *, cmp_stat_t);
197:	static void *stat_seq_next(struct seq_file *, void *, loff_t *);
216:	static int stat_seq_show(struct seq_file *, void *);
173:	static void *stat_seq_start(struct seq_file *, loff_t *);
210:	static void stat_seq_stop(struct seq_file *, void *);
235:	static int tracing_stat_open(struct inode *, struct file *);
259:	static int tracing_stat_release(struct inode *, struct file *);

File kernel/trace/trace_syscalls.c:
527:	unsigned long arch_syscall_addr(int);
110:	const char *get_syscall_name(int);
532:	void init_ftrace_syscalls(void);
208:	static int __set_enter_print_fmt(char *, int, struct syscall_metadata *, struct syscall_metadata *);
81:	static struct syscall_metadata *find_syscall_meta(unsigned long);
308:	static void ftrace_syscall_enter(void *, struct pt_regs *, long);
356:	static void ftrace_syscall_exit(void *, struct pt_regs *, long);
478:	static int init_syscall_trace(struct trace_event_call *);
581:	static void perf_syscall_enter(void *, struct pt_regs *, long);
680:	static void perf_syscall_exit(void *, struct pt_regs *, long);
122:	static enum print_line_t print_syscall_enter(struct trace_iterator *, int, struct trace_event *);
169:	static enum print_line_t print_syscall_exit(struct trace_iterator *, int, struct trace_event *);
268:	static int syscall_enter_define_fields(struct trace_event_call *);
763:	static int syscall_enter_register(struct trace_event_call *, enum trace_reg, void *);
292:	static int syscall_exit_define_fields(struct trace_event_call *);
791:	static int syscall_exit_register(struct trace_event_call *, enum trace_reg, void *);
23:	static struct list_head *syscall_get_enter_fields(struct trace_event_call *);

File kernel/trace/trace_uprobe.c:
1160:	int bpf_get_uprobe_info(const struct perf_event *, u32 *, const char **, u64 *, bool);
1350:	struct trace_event_call *create_local_trace_uprobe(char *, unsigned long, bool);
1396:	void destroy_local_trace_uprobe(struct trace_event_call *);
997:	static bool __uprobe_perf_filter(struct trace_uprobe_filter *, struct mm_struct *);
1088:	static void __uprobe_perf_func(struct trace_uprobe *, unsigned long, struct pt_regs *, int, struct uprobe_cpu_buffer *);
764:	static void __uprobe_trace_func(struct trace_uprobe *, unsigned long, struct pt_regs *, int, struct trace_event_file *, struct uprobe_cpu_buffer *);
243:	static struct trace_uprobe *alloc_trace_uprobe(const char *, const char *, int, bool);
359:	static int create_trace_uprobe(int, char **);
195:	static void fetch_file_offset_string(struct pt_regs *, void *, void *);
196:	static void fetch_file_offset_string_size(struct pt_regs *, void *, void *);
194:	static void fetch_file_offset_u16(struct pt_regs *, void *, void *);
194:	static void fetch_file_offset_u32(struct pt_regs *, void *, void *);
194:	static void fetch_file_offset_u64(struct pt_regs *, void *, void *);
194:	static void fetch_file_offset_u8(struct pt_regs *, void *, void *);
130:	static void fetch_memory_string(struct pt_regs *, void *, void *);
161:	static void fetch_memory_string_size(struct pt_regs *, void *, void *);
125:	static void fetch_memory_u16(struct pt_regs *, void *, void *);
125:	static void fetch_memory_u32(struct pt_regs *, void *, void *);
125:	static void fetch_memory_u64(struct pt_regs *, void *, void *);
125:	static void fetch_memory_u8(struct pt_regs *, void *, void *);
108:	static void fetch_stack_u16(struct pt_regs *, void *, void *);
108:	static void fetch_stack_u32(struct pt_regs *, void *, void *);
108:	static void fetch_stack_u64(struct pt_regs *, void *, void *);
108:	static void fetch_stack_u8(struct pt_regs *, void *, void *);
295:	static struct trace_uprobe *find_probe_event(const char *, const char *);
281:	static void free_trace_uprobe(struct trace_uprobe *);
1410:	static int init_uprobe_trace(void);
837:	static enum print_line_t print_uprobe_event(struct trace_iterator *, int, struct trace_event *);
936:	static void probe_event_disable(struct trace_uprobe *, struct trace_event_file *);
878:	static int probe_event_enable(struct trace_uprobe *, struct trace_event_file *, filter_func_t);
614:	static int probes_open(struct inode *, struct file *);
643:	static int probes_profile_seq_show(struct seq_file *, void *);
580:	static void *probes_seq_next(struct seq_file *, void *, loff_t *);
590:	static int probes_seq_show(struct seq_file *, void *);
574:	static void *probes_seq_start(struct seq_file *, loff_t *);
585:	static void probes_seq_stop(struct seq_file *, void *);
627:	static ssize_t probes_write(struct file *, const char *, size_t, loff_t *);
659:	static int profile_open(struct inode *, struct file *);
1184:	static int trace_uprobe_register(struct trace_event_call *, enum trace_reg, void *);
308:	static int unregister_trace_uprobe(struct trace_uprobe *);
726:	static void uprobe_buffer_disable(void);
1219:	static int uprobe_dispatcher(struct uprobe_consumer *, struct pt_regs *);
966:	static int uprobe_event_define_fields(struct trace_event_call *);
1018:	static int uprobe_perf_close(struct trace_uprobe *, struct perf_event *);
1074:	static bool uprobe_perf_filter(struct uprobe_consumer *, enum uprobe_filter_ctx, struct mm_struct *);
1256:	static int uretprobe_dispatcher(struct uprobe_consumer *, unsigned long, struct pt_regs *);

File kernel/trace/tracing_map.c:
269:	int tracing_map_add_key_field(struct tracing_map *, unsigned int, tracing_map_cmp_fn_t);
226:	int tracing_map_add_sum_field(struct tracing_map *);
243:	int tracing_map_add_var(struct tracing_map *);
319:	struct tracing_map_array *tracing_map_array_alloc(unsigned int, unsigned int);
286:	void tracing_map_array_clear(struct tracing_map_array *);
297:	void tracing_map_array_free(struct tracing_map_array *);
690:	void tracing_map_clear(struct tracing_map *);
135:	int tracing_map_cmp_none(void *, void *);
166:	tracing_map_cmp_fn_t tracing_map_cmp_num(int, int);
127:	int tracing_map_cmp_string(void *, void *);
760:	struct tracing_map *tracing_map_create(unsigned int, unsigned int, const struct tracing_map_ops *, void *);
668:	void tracing_map_destroy(struct tracing_map *);
923:	void tracing_map_destroy_sort_entries(struct tracing_map_sort_entry **, unsigned int);
821:	int tracing_map_init(struct tracing_map *);
631:	struct tracing_map_elt *tracing_map_insert(struct tracing_map *, void *);
653:	struct tracing_map_elt *tracing_map_lookup(struct tracing_map *, void *);
55:	u64 tracing_map_read_sum(struct tracing_map_elt *, unsigned int);
102:	u64 tracing_map_read_var(struct tracing_map_elt *, unsigned int);
121:	u64 tracing_map_read_var_once(struct tracing_map_elt *, unsigned int);
70:	void tracing_map_set_var(struct tracing_map_elt *, unsigned int, u64);
1059:	int tracing_map_sort_entries(struct tracing_map *, struct tracing_map_sort_key *, unsigned int, struct tracing_map_sort_entry ***);
38:	void tracing_map_update_sum(struct tracing_map_elt *, unsigned int, u64);
85:	bool tracing_map_var_set(struct tracing_map_elt *, unsigned int);
837:	static int cmp_entries_dup(const struct tracing_map_sort_entry **, const struct tracing_map_sort_entry **);
876:	static int cmp_entries_key(const struct tracing_map_sort_entry **, const struct tracing_map_sort_entry **);
848:	static int cmp_entries_sum(const struct tracing_map_sort_entry **, const struct tracing_map_sort_entry **);
140:	static int tracing_map_cmp_atomic64(void *, void *);
161:	static int tracing_map_cmp_s16(void *, void *);
159:	static int tracing_map_cmp_s32(void *, void *);
157:	static int tracing_map_cmp_s64(void *, void *);
163:	static int tracing_map_cmp_s8(void *, void *);
162:	static int tracing_map_cmp_u16(void *, void *);
160:	static int tracing_map_cmp_u32(void *, void *);
158:	static int tracing_map_cmp_u64(void *, void *);
164:	static int tracing_map_cmp_u8(void *, void *);
355:	static void tracing_map_elt_clear(struct tracing_map_elt *);
386:	static void tracing_map_elt_free(struct tracing_map_elt *);
464:	static void tracing_map_free_elts(struct tracing_map *, struct tracing_map *);

File kernel/tracepoint.c:
611:	void for_each_kernel_tracepoint(void (*)(struct tracepoint *, void *), void *);
453:	int register_tracepoint_module_notifier(struct notifier_block *);
624:	int syscall_regfunc(void);
640:	void syscall_unregfunc(void);
436:	bool trace_module_has_bad_taint(struct module *);
394:	int tracepoint_probe_register(struct tracepoint *, void *, void *);
366:	int tracepoint_probe_register_prio(struct tracepoint *, void *, void *, int);
408:	int tracepoint_probe_unregister(struct tracepoint *, void *, void *);
477:	int unregister_tracepoint_module_notifier(struct notifier_block *);
593:	static int init_tracepoints(void);
87:	static void rcu_free_old_probes(struct callback_head *);
92:	static int release_early_probes(void);
82:	static void srcu_free_old_probes(struct callback_head *);
499:	static void tp_module_going_check_quiescent(struct tracepoint *, void *);
70:	static void tp_stub_func(void);
567:	static int tracepoint_module_notify(struct notifier_block *, unsigned long, void *);

File kernel/tsacct.c:
170:	void acct_account_cputime(struct task_struct *);
179:	void acct_clear_integrals(struct task_struct *);
155:	void acct_update_integrals(struct task_struct *);
31:	void bacct_add_tsk(struct user_namespace *, struct pid_namespace *, struct taskstats *, struct task_struct *);
94:	void xacct_add_tsk(struct taskstats *, struct task_struct *);
127:	static void __acct_update_integrals(struct task_struct *, u64, u64);

File kernel/ucount.c:
219:	void dec_ucount(struct ucounts *, enum ucount_type);
196:	struct ucounts *inc_ucount(struct user_namespace *, kuid_t, enum ucount_type);
109:	void retire_userns_sysctls(struct user_namespace *);
87:	bool setup_userns_sysctls(struct user_namespace *);
167:	static void put_ucounts(struct ucounts *);
34:	static int set_is_seen(struct ctl_table_set *);
29:	static struct ctl_table_set *set_lookup(struct ctl_table_root *);
39:	static int set_permissions(struct ctl_table_header *, struct ctl_table *);
229:	static int user_namespace_sysctl_init(void);

File kernel/uid16.c:
23:	long __ia32_sys_chown16(const struct pt_regs *);
33:	long __ia32_sys_fchown16(const struct pt_regs *);
154:	long __ia32_sys_getgroups16(const struct pt_regs *);
87:	long __ia32_sys_getresgid16(const struct pt_regs *);
64:	long __ia32_sys_getresuid16(const struct pt_regs *);
28:	long __ia32_sys_lchown16(const struct pt_regs *);
109:	long __ia32_sys_setfsgid16(const struct pt_regs *);
104:	long __ia32_sys_setfsuid16(const struct pt_regs *);
43:	long __ia32_sys_setgid16(const struct pt_regs *);
177:	long __ia32_sys_setgroups16(const struct pt_regs *);
38:	long __ia32_sys_setregid16(const struct pt_regs *);
81:	long __ia32_sys_setresgid16(const struct pt_regs *);
58:	long __ia32_sys_setresuid16(const struct pt_regs *);
48:	long __ia32_sys_setreuid16(const struct pt_regs *);
53:	long __ia32_sys_setuid16(const struct pt_regs *);
23:	long __x64_sys_chown16(const struct pt_regs *);
33:	long __x64_sys_fchown16(const struct pt_regs *);
218:	long __x64_sys_getegid16(const struct pt_regs *);
208:	long __x64_sys_geteuid16(const struct pt_regs *);
213:	long __x64_sys_getgid16(const struct pt_regs *);
154:	long __x64_sys_getgroups16(const struct pt_regs *);
87:	long __x64_sys_getresgid16(const struct pt_regs *);
64:	long __x64_sys_getresuid16(const struct pt_regs *);
203:	long __x64_sys_getuid16(const struct pt_regs *);
28:	long __x64_sys_lchown16(const struct pt_regs *);
109:	long __x64_sys_setfsgid16(const struct pt_regs *);
104:	long __x64_sys_setfsuid16(const struct pt_regs *);
43:	long __x64_sys_setgid16(const struct pt_regs *);
177:	long __x64_sys_setgroups16(const struct pt_regs *);
38:	long __x64_sys_setregid16(const struct pt_regs *);
81:	long __x64_sys_setresgid16(const struct pt_regs *);
58:	long __x64_sys_setresuid16(const struct pt_regs *);
48:	long __x64_sys_setreuid16(const struct pt_regs *);
53:	long __x64_sys_setuid16(const struct pt_regs *);
132:	static int groups16_from_user(struct group_info *, old_gid_t *);
114:	static int groups16_to_user(old_gid_t *, struct group_info *);

File kernel/umh.c:
337:	int __usermodehelper_disable(enum umh_disable_depth);
323:	void __usermodehelper_set_disable_depth(enum umh_disable_depth);
638:	int call_usermodehelper(const char *, char **, char **, int);
568:	int call_usermodehelper_exec(struct subprocess_info *, int);
399:	struct subprocess_info *call_usermodehelper_setup(const char *, char **, char **, gfp_t, int (*)(struct subprocess_info *, struct cred *), void (*)(struct subprocess_info *), void *);
428:	struct subprocess_info *call_usermodehelper_setup_file(struct file *, int (*)(struct subprocess_info *, struct cred *), void (*)(struct subprocess_info *), void *);
518:	int fork_usermode_blob(void *, size_t, struct umh_info *);
283:	long usermodehelper_read_lock_wait(long);
253:	int usermodehelper_read_trylock(void);
310:	void usermodehelper_read_unlock(void);
70:	static int call_usermodehelper_exec_async(void *);
201:	static void call_usermodehelper_exec_work(struct work_struct *);
652:	static int proc_cap_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
494:	static void umh_clean_and_save_pid(struct subprocess_info *);
53:	static void umh_complete(struct subprocess_info *);
455:	static int umh_pipe_setup(struct subprocess_info *, struct cred *);

File kernel/user-return-notifier.c:
34:	void fire_user_return_notifiers(void);
14:	void user_return_notifier_register(struct user_return_notifier *);
25:	void user_return_notifier_unregister(struct user_return_notifier *);

File kernel/user.c:
176:	struct user_struct *alloc_uid(kuid_t);
154:	struct user_struct *find_user(kuid_t);
165:	void free_uid(struct user_struct *);
218:	static int uid_cache_init(void);
120:	static struct user_struct *uid_hash_find(kuid_t, struct hlist_head *);

File kernel/user_namespace.c:
209:	void __put_user_ns(struct user_namespace *);
74:	int create_user_ns(struct cred *);
1235:	bool current_in_userns(const struct user_namespace *);
479:	gid_t from_kgid(struct user_namespace *, kgid_t);
503:	gid_t from_kgid_munged(struct user_namespace *, kgid_t);
546:	projid_t from_kprojid(struct user_namespace *, kprojid_t);
571:	projid_t from_kprojid_munged(struct user_namespace *, kprojid_t);
411:	uid_t from_kuid(struct user_namespace *, kuid_t);
436:	uid_t from_kuid_munged(struct user_namespace *, kuid_t);
1226:	bool in_userns(const struct user_namespace *, const struct user_namespace *);
460:	kgid_t make_kgid(struct user_namespace *, gid_t);
527:	kprojid_t make_kprojid(struct user_namespace *, projid_t);
392:	kuid_t make_kuid(struct user_namespace *, uid_t);
1293:	struct ns_common *ns_get_owner(struct ns_common *);
1055:	ssize_t proc_gid_map_write(struct file *, const char *, size_t, loff_t *);
1072:	ssize_t proc_projid_map_write(struct file *, const char *, size_t, loff_t *);
1128:	int proc_setgroups_show(struct seq_file *, void *);
1139:	ssize_t proc_setgroups_write(struct file *, const char *, size_t, loff_t *);
1038:	ssize_t proc_uid_map_write(struct file *, const char *, size_t, loff_t *);
158:	int unshare_userns(unsigned long, struct cred **);
1206:	bool userns_may_setgroups(const struct user_namespace *);
794:	static int cmp_extents_forward(const void *, const void *);
809:	static int cmp_extents_reverse(const void *, const void *);
229:	static int cmp_map_id(const void *, const void *);
178:	static void free_user_ns(struct work_struct *);
604:	static int gid_m_show(struct seq_file *, void *);
669:	static void *gid_m_start(struct seq_file *, loff_t *);
683:	static void *m_next(struct seq_file *, void *, loff_t *);
689:	static void m_stop(struct seq_file *, void *);
296:	static u32 map_id_range_down(struct uid_gid_map *, u32, u32);
359:	static u32 map_id_up(struct uid_gid_map *, u32);
850:	static ssize_t map_write(struct file *, const char *, size_t, loff_t *, int, struct uid_gid_map *, struct uid_gid_map *);
625:	static int projid_m_show(struct seq_file *, void *);
676:	static void *projid_m_start(struct seq_file *, loff_t *);
583:	static int uid_m_show(struct seq_file *, void *);
662:	static void *uid_m_start(struct seq_file *, loff_t *);
1326:	static int user_namespaces_init(void);
1246:	static struct ns_common *userns_get(struct task_struct *);
1262:	static int userns_install(struct nsproxy *, struct ns_common *);
1311:	static struct user_namespace *userns_owner(struct ns_common *);
1257:	static void userns_put(struct ns_common *);

File kernel/utsname.c:
93:	struct uts_namespace *copy_utsname(unsigned long, struct user_namespace *, struct uts_namespace *);
110:	void free_uts_ns(struct kref *);
175:	void uts_ns_init(void);
126:	static struct ns_common *utsns_get(struct task_struct *);
147:	static int utsns_install(struct nsproxy *, struct ns_common *);
161:	static struct user_namespace *utsns_owner(struct ns_common *);
142:	static void utsns_put(struct ns_common *);

File kernel/utsname_sysctl.c:
134:	void uts_proc_notify(enum uts_proc);
36:	static int proc_do_uts_string(struct ctl_table *, int, void *, size_t *, loff_t *);
142:	static int utsname_sysctl_init(void);

File kernel/watchdog.c:
67:	void hardlockup_detector_disable(void);
320:	bool is_hardlockup(void);
660:	void lockup_detector_cleanup(void);
798:	void lockup_detector_init(void);
577:	int lockup_detector_offline_cpu(unsigned int);
565:	int lockup_detector_online_cpu(unsigned int);
673:	void lockup_detector_soft_poweroff(void);
737:	int proc_nmi_watchdog(struct ctl_table *, int, void *, size_t *, loff_t *);
749:	int proc_soft_watchdog(struct ctl_table *, int, void *, size_t *, loff_t *);
727:	int proc_watchdog(struct ctl_table *, int, void *, size_t *, loff_t *);
782:	int proc_watchdog_cpumask(struct ctl_table *, int, void *, size_t *, loff_t *);
759:	int proc_watchdog_thresh(struct ctl_table *, int, void *, size_t *, loff_t *);
283:	void touch_all_softlockup_watchdogs(void);
276:	void touch_softlockup_watchdog(void);
267:	void touch_softlockup_watchdog_sched(void);
301:	void touch_softlockup_watchdog_sync(void);
112:	void watchdog_nmi_disable(unsigned int);
106:	int watchdog_nmi_enable(unsigned int);
118:	int watchdog_nmi_probe(void);
131:	void watchdog_nmi_stop(void);
89:	static int hardlockup_all_cpu_backtrace_setup(char *);
72:	static int hardlockup_panic_setup(char *);
589:	static void lockup_detector_reconfigure(void);
152:	static void lockup_detector_update_enable(void);
198:	static int nosoftlockup_setup(char *);
191:	static int nowatchdog_setup(char *);
700:	static int proc_watchdog_common(int, struct ctl_table *, int, void *, size_t *, loff_t *);
681:	static void proc_watchdog_update(void);
208:	static int softlockup_all_cpu_backtrace_setup(char *);
348:	static int softlockup_fn(void *);
184:	static int softlockup_panic_setup(char *);
550:	static int softlockup_start_fn(void *);
531:	static int softlockup_stop_fn(void *);
515:	static void watchdog_disable(unsigned int);
489:	static void watchdog_enable(unsigned int);
366:	static enum hrtimer_restart watchdog_timer_fn(struct hrtimer *);

File kernel/watchdog_hld.c:
29:	void arch_touch_nmi_watchdog(void);
447:	void hardlockup_detector_perf_cleanup(void);
429:	void hardlockup_detector_perf_disable(void);
414:	void hardlockup_detector_perf_enable(void);
509:	int hardlockup_detector_perf_init(void);
489:	void hardlockup_detector_perf_restart(void);
470:	void hardlockup_detector_perf_stop(void);
290:	void refresh_hld_last_timestamp(void);
305:	void watchdog_hardlockup_check(struct pt_regs *);
245:	void watchdog_update_hrtimer_threshold(u64);
388:	static int hardlockup_detector_event_create(void);
378:	static void watchdog_overflow_callback(struct perf_event *, struct perf_sample_data *, struct pt_regs *);

File kernel/workqueue.c:
4160:	struct workqueue_struct *__alloc_workqueue_key(const char *, unsigned int, int, struct lock_class_key *, const char *, ...);
3321:	struct workqueue_attrs *alloc_workqueue_attrs(gfp_t);
3982:	int apply_workqueue_attrs(struct workqueue_struct *, const struct workqueue_attrs *);
3214:	bool cancel_delayed_work(struct delayed_work *);
3229:	bool cancel_delayed_work_sync(struct delayed_work *);
3133:	bool cancel_work_sync(struct work_struct *);
4406:	bool current_is_workqueue_rescuer(void);
4390:	struct work_struct *current_work(void);
1493:	void delayed_work_timer_fn(struct timer_list *);
4262:	void destroy_workqueue(struct workqueue_struct *);
2818:	void drain_workqueue(struct workqueue_struct *);
3284:	int execute_in_process_context(work_func_t, struct execute_work *);
3151:	bool flush_delayed_work(struct delayed_work *);
3169:	bool flush_rcu_work(struct rcu_work *);
3009:	bool flush_work(struct work_struct *);
3032:	bool flush_work_at_nice(struct work_struct *, long);
2656:	void flush_workqueue(struct workqueue_struct *);
3304:	void free_workqueue_attrs(struct workqueue_attrs *);
5068:	void freeze_workqueues_begin(void);
5101:	bool freeze_workqueues_busy(void);
1583:	bool mod_delayed_work_on(int, struct workqueue_struct *, struct delayed_work *, unsigned long);
4523:	void print_worker_info(const char *, struct task_struct *);
1545:	bool queue_delayed_work_on(int, struct workqueue_struct *, struct delayed_work *, unsigned long);
1623:	bool queue_rcu_work(struct workqueue_struct *, struct rcu_work *);
1475:	bool queue_work_on(int, struct workqueue_struct *, struct work_struct *);
3246:	int schedule_on_each_cpu(work_func_t);
4497:	void set_worker_desc(const char *, ...);
4659:	void show_workqueue_state(void);
5143:	void thaw_workqueues(void);
4464:	unsigned int work_busy(struct work_struct *);
5020:	long work_on_cpu(int, long (*)(void *), void *);
5043:	long work_on_cpu_safe(int, long (*)(void *), void *);
4431:	bool workqueue_congested(int, struct workqueue_struct *);
5903:	int workqueue_init(void);
5823:	int workqueue_init_early(void);
4976:	int workqueue_offline_cpu(unsigned int);
4949:	int workqueue_online_cpu(unsigned int);
4936:	int workqueue_prepare_cpu(unsigned int);
4360:	void workqueue_set_max_active(struct workqueue_struct *, int);
5214:	int workqueue_set_unbound_cpumask(cpumask_var_t);
5545:	int workqueue_sysfs_register(struct workqueue_struct *);
4735:	void wq_worker_comm(char *, size_t, struct task_struct *);
849:	void wq_worker_running(struct task_struct *);
867:	void wq_worker_sleeping(struct task_struct *);
3051:	static bool __cancel_work_timer(struct work_struct *, bool);
2970:	static bool __flush_work(struct work_struct *, int, long);
1502:	static void __queue_delayed_work(int, struct workqueue_struct *, struct delayed_work *, unsigned long);
1359:	static void __queue_work(int, struct workqueue_struct *, struct work_struct *);
3712:	static struct pool_workqueue *alloc_unbound_pwq(struct workqueue_struct *, const struct workqueue_attrs *);
1698:	static struct worker *alloc_worker(int);
3938:	static int apply_workqueue_attrs_locked(struct workqueue_struct *, const struct workqueue_attrs *);
3814:	static void apply_wqattrs_cleanup(struct apply_wqattrs_ctx *);
3904:	static void apply_wqattrs_commit(struct apply_wqattrs_ctx *);
3831:	static struct apply_wqattrs_ctx *apply_wqattrs_prepare(struct workqueue_struct *, const struct workqueue_attrs *);
2481:	static void check_flush_dependency(struct workqueue_struct *, struct work_struct *);
1785:	static struct worker *create_worker(struct worker_pool *);
3042:	static int cwt_wakefn(wait_queue_entry_t *, unsigned int, int, void *);
1845:	static void destroy_worker(struct worker *);
2609:	static bool flush_workqueue_prep_pwqs(struct workqueue_struct *, int, int);
1057:	static void get_pwq(struct pool_workqueue *);
709:	static struct worker_pool *get_work_pool(struct work_struct *);
1865:	static void idle_worker_timeout(struct timer_list *);
3673:	static void init_pwq(struct pool_workqueue *, struct workqueue_struct *, struct worker_pool *);
4133:	static int init_rescuer(struct workqueue_struct *);
3383:	static int init_worker_pool(struct worker_pool *);
1289:	static void insert_work(struct pool_workqueue *, struct work_struct *, struct list_head *, unsigned int);
3691:	static void link_pwq(struct pool_workqueue *);
5285:	static ssize_t max_active_show(struct device *, struct device_attribute *, char *);
5293:	static ssize_t max_active_store(struct device *, struct device_attribute *, const char *, size_t);
1026:	static void move_linked_works(struct work_struct *, struct list_head *, struct work_struct **);
2867:	static void nice_work_func(struct work_struct *);
5276:	static ssize_t per_cpu_show(struct device *, struct device_attribute *, char *);
1913:	static void pool_mayday_timeout(struct timer_list *);
4559:	static void pr_cont_pool_info(struct worker_pool *);
4567:	static void pr_cont_work(bool, struct work_struct *);
2041:	static void process_one_work(struct worker *, struct work_struct *);
1071:	static void put_pwq(struct pool_workqueue *);
1095:	static void put_pwq_unlocked(struct pool_workqueue *);
3446:	static void put_unbound_pool(struct worker_pool *);
1108:	static void pwq_activate_delayed_work(struct work_struct *);
3625:	static void pwq_adjust_max_active(struct pool_workqueue *);
1139:	static void pwq_dec_nr_in_flight(struct pool_workqueue *, int);
3581:	static void pwq_unbound_release_workfn(struct work_struct *);
3426:	static void rcu_free_pool(struct callback_head *);
3571:	static void rcu_free_pwq(struct callback_head *);
3412:	static void rcu_free_wq(struct callback_head *);
1603:	static void rcu_work_rcufn(struct callback_head *);
2349:	static int rescuer_thread(void *);
2223:	static void set_pf_worker(bool);
636:	static void set_work_pool_and_clear_pending(struct work_struct *, int);
1202:	static int try_to_grab_pending(struct work_struct *, bool, unsigned long *);
5002:	static void work_for_cpu_fn(struct work_struct *);
1722:	static void worker_attach_to_pool(struct worker *, struct worker_pool *);
1752:	static void worker_detach_from_pool(struct worker *);
1647:	static void worker_enter_idle(struct worker *);
2245:	static int worker_thread(void *);
2508:	static void wq_barrier_func(struct work_struct *);
3756:	static bool wq_calc_node_cpumask(int, int, cpumask_t *, const struct workqueue_attrs *, const struct workqueue_attrs *);
4117:	static int wq_clamp_max_active(int, unsigned int, const char *);
5388:	static ssize_t wq_cpumask_show(struct device *, struct device_attribute *, char *);
5401:	static ssize_t wq_cpumask_store(struct device *, struct device_attribute *, const char *, size_t);
5523:	static void wq_device_release(struct device *);
5335:	static ssize_t wq_nice_show(struct device *, struct device_attribute *, char *);
5363:	static ssize_t wq_nice_store(struct device *, struct device_attribute *, const char *, size_t);
5771:	static void wq_numa_init(void);
5425:	static ssize_t wq_numa_show(struct device *, struct device_attribute *, char *);
5439:	static ssize_t wq_numa_store(struct device *, struct device_attribute *, const char *, size_t);
5315:	static ssize_t wq_pool_ids_show(struct device *, struct device_attribute *, char *);
5511:	static int wq_sysfs_init(void);
5349:	static struct workqueue_attrs *wq_sysfs_prep_attrs(struct workqueue_struct *);
5477:	static ssize_t wq_unbound_cpumask_show(struct device *, struct device_attribute *, char *);
5490:	static ssize_t wq_unbound_cpumask_store(struct device *, struct device_attribute *, const char *, size_t);
4017:	static void wq_update_unbound_numa(struct workqueue_struct *, int, bool);

File lib/argv_split.c:
35:	void argv_free(char **);
60:	char **argv_split(gfp_t, const char *, int *);

File lib/asn1_decoder.c:
171:	int asn1_ber_decoder(const struct asn1_decoder *, void *, const unsigned char *, size_t);

File lib/assoc_array.c:
1349:	void assoc_array_apply_edit(struct assoc_array_edit *);
1413:	void assoc_array_cancel_edit(struct assoc_array_edit *);
1278:	struct assoc_array_edit *assoc_array_clear(struct assoc_array *, const struct assoc_array_ops *);
1083:	struct assoc_array_edit *assoc_array_delete(struct assoc_array *, const struct assoc_array_ops *, const void *);
445:	void assoc_array_destroy(struct assoc_array *, const struct assoc_array_ops *);
308:	void *assoc_array_find(const struct assoc_array *, const struct assoc_array_ops *, const void *);
1457:	int assoc_array_gc(struct assoc_array *, const struct assoc_array_ops *, bool (*)(void *, void *), void *);
968:	struct assoc_array_edit *assoc_array_insert(struct assoc_array *, const struct assoc_array_ops *, const void *, void *);
1035:	void assoc_array_insert_set_object(struct assoc_array_edit *, void *);
137:	int assoc_array_iterate(const struct assoc_array *, int (*)(const void *, void *), void *);
1050:	static int assoc_array_delete_collapse_iterator(const void *, void *);
347:	static void assoc_array_destroy_subtree(struct assoc_array_ptr *, const struct assoc_array_ops *);
1304:	static void assoc_array_rcu_cleanup(struct callback_head *);
23:	static int assoc_array_subtree_iterate(const struct assoc_array_ptr *, const struct assoc_array_ptr *, int (*)(const void *, void *), void *);
174:	static enum assoc_array_walk_status assoc_array_walk(const struct assoc_array *, const void *, struct assoc_array_walk_result *, const struct assoc_array_ops *);

File lib/atomic64_test.c:
108:	static void test_atomic(void);
151:	static void test_atomic64(void);
275:	static void test_atomics_exit(void);
252:	static int test_atomics_init(void);

File lib/bcd.c:
5:	unsigned int _bcd2bin(unsigned char);
11:	unsigned char _bin2bcd(unsigned int);

File lib/bitmap.c:
156:	int __bitmap_and(unsigned long *, const unsigned long *, const unsigned long *, unsigned int);
194:	int __bitmap_andnot(unsigned long *, const unsigned long *, const unsigned long *, unsigned int);
276:	void __bitmap_clear(unsigned long *, unsigned int, int);
67:	void __bitmap_complement(unsigned long *, const unsigned long *, unsigned int);
51:	int __bitmap_equal(const unsigned long *, const unsigned long *, unsigned int);
210:	int __bitmap_intersects(const unsigned long *, const unsigned long *, unsigned int);
172:	void __bitmap_or(unsigned long *, const unsigned long *, const unsigned long *, unsigned int);
361:	int __bitmap_parse(const char *, unsigned int, int, unsigned long *, int);
255:	void __bitmap_set(unsigned long *, unsigned int, int);
131:	void __bitmap_shift_left(unsigned long *, const unsigned long *, unsigned int, unsigned int);
86:	void __bitmap_shift_right(unsigned long *, const unsigned long *, unsigned int, unsigned int);
225:	int __bitmap_subset(const unsigned long *, const unsigned long *, unsigned int);
240:	int __bitmap_weight(const unsigned long *, unsigned int);
183:	void __bitmap_xor(unsigned long *, const unsigned long *, const unsigned long *, unsigned int);
1131:	unsigned long *bitmap_alloc(unsigned int, gfp_t);
1100:	int bitmap_allocate_region(unsigned long *, unsigned int, int);
796:	int bitmap_bitremap(int, const unsigned long *, const unsigned long *, int);
1058:	int bitmap_find_free_region(unsigned long *, unsigned int, int);
310:	unsigned long bitmap_find_next_zero_area_off(unsigned long *, unsigned long, unsigned long, unsigned int, unsigned long, unsigned long);
954:	void bitmap_fold(unsigned long *, const unsigned long *, unsigned int, unsigned int);
1144:	void bitmap_free(const unsigned long *);
1157:	void bitmap_from_arr32(unsigned long *, const u32 *, unsigned int);
914:	void bitmap_onto(unsigned long *, const unsigned long *, const unsigned long *, unsigned int);
704:	unsigned int bitmap_ord_to_pos(const unsigned long *, unsigned int, unsigned int);
447:	int bitmap_parse_user(const char *, unsigned int, unsigned long *, int);
623:	int bitmap_parselist(const char *, unsigned long *, int);
648:	int bitmap_parselist_user(const char *, unsigned int, unsigned long *, int);
475:	int bitmap_print_to_pagebuf(bool, char *, const unsigned long *, int);
1083:	void bitmap_release_region(unsigned long *, unsigned int, int);
748:	void bitmap_remap(unsigned long *, const unsigned long *, const unsigned long *, const unsigned long *, unsigned int);
1180:	void bitmap_to_arr32(u32 *, const unsigned long *, unsigned int);
1138:	unsigned long *bitmap_zalloc(unsigned int, gfp_t);
513:	static int __bitmap_parselist(const char *, unsigned int, int, unsigned long *, int);
992:	static int __reg_op(unsigned long *, unsigned int, int, int);
678:	static int bitmap_pos_to_ord(const unsigned long *, unsigned int, unsigned int);

File lib/bsearch.c:
34:	void *bsearch(const void *, const void *, size_t, size_t, int (*)(const void *, const void *));

File lib/btree.c:
83:	void *btree_alloc(gfp_t, void *);
201:	void btree_destroy(struct btree_head *);
89:	void btree_free(void *, void *);
313:	void *btree_get_prev(struct btree_head *, struct btree_geo *, unsigned long *);
766:	size_t btree_grim_visitor(struct btree_head *, struct btree_geo *, unsigned long, void (*)(void *, unsigned long, unsigned long *, size_t, void *), void *);
191:	int btree_init(struct btree_head *);
184:	void btree_init_mempool(struct btree_head *, mempool_t *);
512:	int btree_insert(struct btree_head *, struct btree_geo *, unsigned long *, void *, gfp_t);
209:	void *btree_last(struct btree_head *, struct btree_geo *, unsigned long *);
243:	void *btree_lookup(struct btree_head *, struct btree_geo *, unsigned long *);
641:	int btree_merge(struct btree_head *, struct btree_head *, struct btree_geo *, gfp_t);
631:	void *btree_remove(struct btree_head *, struct btree_geo *, unsigned long *);
273:	int btree_update(struct btree_head *, struct btree_geo *, unsigned long *, void *);
748:	size_t btree_visitor(struct btree_head *, struct btree_geo *, unsigned long, void (*)(void *, unsigned long, unsigned long *, size_t, void *), void *);
738:	void visitor128(void *, unsigned long, unsigned long *, size_t, void *);
718:	void visitor32(void *, unsigned long, unsigned long *, size_t, void *);
728:	void visitor64(void *, unsigned long, unsigned long *, size_t, void *);
709:	void visitorl(void *, unsigned long, unsigned long *, size_t, void *);
678:	static size_t __btree_for_each(struct btree_head *, struct btree_geo *, unsigned long *, unsigned long, void (*)(void *, unsigned long, unsigned long *, size_t, void *), void *, int, int, size_t);
450:	static int btree_insert_level(struct btree_head *, struct btree_geo *, unsigned long *, void *, int, gfp_t);
792:	static void btree_module_exit(void);
785:	static int btree_module_init(void);
95:	static unsigned long *btree_node_alloc(gfp_t, struct btree_head *);
593:	static void *btree_remove_level(struct btree_head *, struct btree_geo *, unsigned long *, int);
704:	static void empty(void *, unsigned long, unsigned long *, size_t, void *);
390:	static unsigned long *find_level(struct btree_geo *, unsigned long *, int, struct btree_head *, struct btree_head *);
365:	static int getpos(struct btree_geo *, unsigned long *, unsigned long *);
522:	static void merge(struct btree_head *, struct btree_geo *, int, unsigned long *, int, unsigned long *, int, unsigned long *, int);

File lib/bucket_locks.c:
14:	int __alloc_bucket_spinlocks(spinlock_t **, unsigned int *, size_t, unsigned int, gfp_t, const char *, struct lock_class_key *);
50:	void free_bucket_spinlocks(spinlock_t *);

File lib/bug.c:
132:	struct bug_entry *find_bug(unsigned long);
210:	void generic_bug_clear_once(void);
118:	void module_bug_cleanup(struct module *);
87:	void module_bug_finalize(const Elf64_Ehdr *, const Elf64_Shdr *, struct module *);
143:	enum bug_trap_type report_bug(unsigned long, struct pt_regs *);

File lib/bust_spinlocks.c:
20:	void bust_spinlocks(int);

File lib/chacha20.c:
19:	void chacha20_block(u32 *, u8 *);

File lib/check_signature.c:
16:	int check_signature(const volatile void *, const unsigned char *, int);

File lib/clz_ctz.c:
51:	int __clzdi2(long);
27:	int __clzsi2(int);
57:	int __ctzdi2(long);
20:	int __ctzsi2(int);

File lib/cmdline.c:
53:	int get_option(char **, int *);
90:	char *get_options(const char *, int, int *);
128:	unsigned long long memparse(const char *, char **);
199:	char *next_arg(char *, char **, char **);
175:	bool parse_option_str(const char *, const char *);

File lib/cpu_rmap.c:
28:	struct cpu_rmap *alloc_cpu_rmap(unsigned int, gfp_t);
141:	int cpu_rmap_add(void *, struct cpu_rmap *);
88:	int cpu_rmap_put(struct cpu_rmap *);
158:	int cpu_rmap_update(struct cpu_rmap *, u16, const struct cpumask *);
228:	void free_irq_cpu_rmap(struct cpu_rmap *);
288:	int irq_cpu_rmap_add(struct cpu_rmap *, int);
97:	static bool cpu_rmap_copy_neigh(struct cpu_rmap *, unsigned int, const struct cpumask *, u16);
253:	static void irq_cpu_rmap_notify(struct irq_affinity_notify *, const cpumask_t *);
268:	static void irq_cpu_rmap_release(struct kref *);

File lib/cpumask.c:
164:	void alloc_bootmem_cpumask_var(cpumask_var_t *);
143:	bool alloc_cpumask_var(cpumask_var_t *, gfp_t);
112:	bool alloc_cpumask_var_node(cpumask_var_t *, gfp_t, int);
52:	int cpumask_any_but(const struct cpumask *, unsigned int);
202:	unsigned int cpumask_local_spread(unsigned int, int);
16:	unsigned int cpumask_next(int, const struct cpumask *);
33:	int cpumask_next_and(int, const struct cpumask *, const struct cpumask *);
76:	int cpumask_next_wrap(int, const struct cpumask *, int, bool);
185:	void free_bootmem_cpumask_var(cpumask_var_t);
175:	void free_cpumask_var(cpumask_var_t);
149:	bool zalloc_cpumask_var(cpumask_var_t *, gfp_t);
127:	bool zalloc_cpumask_var_node(cpumask_var_t *, gfp_t, int);

File lib/crc-ccitt.c:
101:	u16 crc_ccitt(u16, const u8 *, size_t);
116:	u16 crc_ccitt_false(u16, const u8 *, size_t);

File lib/crc-t10dif.c:
44:	__u16 crc_t10dif(const unsigned char *, size_t);
22:	__u16 crc_t10dif_update(__u16, const unsigned char *, size_t);
60:	static void crc_t10dif_mod_fini(void);
50:	static int crc_t10dif_mod_init(void);

File lib/crc16.c:
57:	u16 crc16(u16, const u8 *, size_t);

File lib/crc32.c:
200:	u32 __crc32c_le(u32, const unsigned char *, size_t);
278:	u32 __crc32c_le_shift(u32, size_t);
340:	u32 crc32_be(u32, const unsigned char *, size_t);
195:	u32 crc32_le(u32, const unsigned char *, size_t);
273:	u32 crc32_le_shift(u32, size_t);
243:	static u32 crc32_generic_shift(u32, size_t, u32);

File lib/debug_locks.c:
38:	int debug_locks_off(void);

File lib/dec_and_lock.c:
21:	int _atomic_dec_and_lock(atomic_t *, spinlock_t *);
37:	int _atomic_dec_and_lock_irqsave(atomic_t *, spinlock_t *, unsigned long *);

File lib/decompress.c:
58:	decompress_fn decompress_method(const unsigned char *, long, const char **);

File lib/decompress_bunzip2.c:
679:	int bunzip2(unsigned char *, long, long (*)(void *, unsigned long), long (*)(void *, unsigned long), unsigned char *, long *, void (*)(char *));
116:	static unsigned int get_bits(struct bunzip_data *, char);
156:	static int get_next_block(struct bunzip_data *);
621:	static long nofill(void *, unsigned long);

File lib/decompress_inflate.c:
38:	int __gunzip(unsigned char *, long, long (*)(void *, unsigned long), long (*)(void *, unsigned long), unsigned char *, long, long *, void (*)(char *));
187:	int gunzip(unsigned char *, long, long (*)(void *, unsigned long), long (*)(void *, unsigned long), unsigned char *, long *, void (*)(char *));
32:	static long nofill(void *, unsigned long);

File lib/decompress_unlz4.c:
34:	int unlz4(u8 *, long, long (*)(void *, unsigned long), long (*)(void *, unsigned long), u8 *, long *, void (*)(char *));

File lib/decompress_unlzma.c:
537:	int unlzma(unsigned char *, long, long (*)(void *, unsigned long), long (*)(void *, unsigned long), unsigned char *, long *, void (*)(char *));
85:	static long nofill(void *, unsigned long);
298:	static uint8_t peek_old_byte(struct writer *, uint32_t);
131:	static void rc_do_normalize(struct rc *);
174:	static int rc_get_bit(struct rc *, uint16_t *, int *);
154:	static int rc_is_bit_0(struct rc *, uint16_t *);
91:	static void rc_read(struct rc *);
166:	static void rc_update_bit_1(struct rc *, uint16_t *);
316:	static int write_byte(struct writer *, uint8_t);

File lib/decompress_unlzo.c:
55:	long parse_header(u8 *, long *, long);
112:	int unlzo(u8 *, long, long (*)(void *, unsigned long), long (*)(void *, unsigned long), u8 *, long *, void (*)(char *));

File lib/decompress_unxz.c:
251:	int unxz(unsigned char *, long, long (*)(void *, unsigned long), long (*)(void *, unsigned long), unsigned char *, long *, void (*)(char *));

File lib/devres.c:
225:	void *devm_ioport_map(struct device *, unsigned long, unsigned int);
253:	void devm_ioport_unmap(struct device *, void *);
64:	void *devm_ioremap(struct device *, resource_size_t, resource_size_t);
80:	void *devm_ioremap_nocache(struct device *, resource_size_t, resource_size_t);
15:	void devm_ioremap_release(struct device *, void *);
134:	void *devm_ioremap_resource(struct device *, struct resource *);
95:	void *devm_ioremap_wc(struct device *, resource_size_t, resource_size_t);
109:	void devm_iounmap(struct device *, void *);
188:	void *devm_of_iomap(struct device *, struct device_node *, int, resource_size_t *);
321:	void *pcim_iomap(struct pci_dev *, int, unsigned long);
370:	int pcim_iomap_regions(struct pci_dev *, int, const char *);
423:	int pcim_iomap_regions_request_all(struct pci_dev *, int, const char *);
296:	void * const *pcim_iomap_table(struct pci_dev *);
343:	void pcim_iounmap(struct pci_dev *, void *);
447:	void pcim_iounmap_regions(struct pci_dev *, int);
25:	static void *__devm_ioremap(struct device *, resource_size_t, resource_size_t, enum devm_ioremap_type);
205:	static void devm_ioport_map_release(struct device *, void *);
20:	static int devm_ioremap_match(struct device *, void *, void *);
272:	static void pcim_iomap_release(struct device *, void *);

File lib/digsig.c:
202:	int digsig_verify(struct key *, const char *, int, const char *, int);
275:	static void digsig_cleanup(void);
263:	static int digsig_init(void);

File lib/div64.c:
188:	u32 iter_div_u64_rem(u64, u32, u64 *);

File lib/dump_stack.c:
88:	void dump_stack(void);
45:	void dump_stack_print_info(const char *);
28:	void dump_stack_set_arch_desc(const char *, ...);
69:	void show_regs_print_info(const char *);

File lib/dynamic_debug.c:
571:	void __dynamic_dev_dbg(struct _ddebug *, const struct device *, const char *, ...);
602:	void __dynamic_netdev_dbg(struct _ddebug *, const struct net_device *, const char *, ...);
551:	void __dynamic_pr_debug(struct _ddebug *, const char *, ...);
846:	int ddebug_add_module(struct _ddebug *, unsigned int, const char *);
907:	int ddebug_dyndbg_module_param_cb(char *, char *, const char *);
924:	int ddebug_remove_module(const char *);
89:	static char *ddebug_describe_flags(struct _ddebug *, char *, size_t);
895:	static int ddebug_dyndbg_boot_param_cb(char *, char *, const char *, void *);
874:	static int ddebug_dyndbg_param_cb(char *, char *, const char *, int);
477:	static int ddebug_exec_queries(char *, const char *);
444:	static int ddebug_exec_query(char *, const char *);
756:	static void *ddebug_proc_next(struct seq_file *, void *, loff_t *);
826:	static int ddebug_proc_open(struct inode *, struct file *);
778:	static int ddebug_proc_show(struct seq_file *, void *);
731:	static void *ddebug_proc_start(struct seq_file *, loff_t *);
806:	static void ddebug_proc_stop(struct seq_file *, void *);
659:	static ssize_t ddebug_proc_write(struct file *, const char *, size_t, loff_t *);
642:	static int ddebug_setup_query(char *);
913:	static void ddebug_table_free(struct ddebug_table *);
976:	static int dynamic_debug_init(void);
957:	static int dynamic_debug_init_debugfs(void);
519:	static char *dynamic_emit_prefix(const struct _ddebug *, char *);
112:	static void vpr_info_dq(const struct ddebug_query *, const char *);

File lib/dynamic_queue_limits.c:
18:	void dql_completed(struct dql *, unsigned int);
131:	void dql_init(struct dql *, unsigned int);
116:	void dql_reset(struct dql *);

File lib/earlycpio.c:
67:	struct cpio_data find_cpio_data(const char *, void *, size_t, long *);

File lib/error-inject.c:
39:	int get_injectable_error_type(unsigned long);
23:	bool within_error_injection_list(unsigned long);
128:	static int ei_module_callback(struct notifier_block *, unsigned long, void *);
204:	static int ei_open(struct inode *, struct file *);
169:	static void *ei_seq_next(struct seq_file *, void *, loff_t *);
188:	static int ei_seq_show(struct seq_file *, void *);
158:	static void *ei_seq_start(struct seq_file *, loff_t *);
164:	static void ei_seq_stop(struct seq_file *, void *);
233:	static int init_error_injection(void);
57:	static void populate_error_injection_list(struct error_injection_entry *, struct error_injection_entry *, void *);

File lib/errseq.c:
144:	int errseq_check(errseq_t *, errseq_t);
174:	int errseq_check_and_advance(errseq_t *, errseq_t *);
122:	errseq_t errseq_sample(errseq_t *);
58:	errseq_t errseq_set(errseq_t *, int);

File lib/extable.c:
119:	const struct exception_table_entry *search_extable(const struct exception_table_entry *, const size_t, unsigned long);
67:	void sort_extable(struct exception_table_entry *, struct exception_table_entry *);
79:	void trim_init_extable(struct module *);
98:	static int cmp_ex_search(const void *, const void *);
55:	static int cmp_ex_sort(const void *, const void *);
31:	static void swap_ex(void *, void *, int);

File lib/find_bit.c:
102:	unsigned long find_first_bit(const unsigned long *, unsigned long);
120:	unsigned long find_first_zero_bit(const unsigned long *, unsigned long);
135:	unsigned long find_last_bit(const unsigned long *, unsigned long);
89:	unsigned long find_next_and_bit(const unsigned long *, const unsigned long *, unsigned long, unsigned long);
71:	unsigned long find_next_bit(const unsigned long *, unsigned long, unsigned long);
80:	unsigned long find_next_zero_bit(const unsigned long *, unsigned long, unsigned long);

File lib/flex_array.c:
88:	struct flex_array *flex_array_alloc(int, unsigned int, gfp_t);
230:	int flex_array_clear(struct flex_array *, unsigned int);
148:	void flex_array_free(struct flex_array *);
137:	void flex_array_free_parts(struct flex_array *);
315:	void *flex_array_get(struct flex_array *, unsigned int);
345:	void *flex_array_get_ptr(struct flex_array *, unsigned int);
268:	int flex_array_prealloc(struct flex_array *, unsigned int, unsigned int, gfp_t);
198:	int flex_array_put(struct flex_array *, unsigned int, void *, gfp_t);
376:	int flex_array_shrink(struct flex_array *);
166:	static struct flex_array_part *__fa_get_part(struct flex_array *, int, gfp_t);

File lib/flex_proportions.c:
220:	void __fprop_inc_percpu(struct fprop_global *, struct fprop_local_percpu *);
259:	void __fprop_inc_percpu_max(struct fprop_global *, struct fprop_local_percpu *, int);
131:	void __fprop_inc_single(struct fprop_global *, struct fprop_local_single *);
227:	void fprop_fraction_percpu(struct fprop_global *, struct fprop_local_percpu *, unsigned long *, unsigned long *);
139:	void fprop_fraction_single(struct fprop_global *, struct fprop_local_single *, unsigned long *, unsigned long *);
51:	void fprop_global_destroy(struct fprop_global *);
38:	int fprop_global_init(struct fprop_global *, gfp_t);
184:	void fprop_local_destroy_percpu(struct fprop_local_percpu *);
102:	void fprop_local_destroy_single(struct fprop_local_single *);
172:	int fprop_local_init_percpu(struct fprop_local_percpu *, gfp_t);
94:	int fprop_local_init_single(struct fprop_local_single *);
64:	bool fprop_new_period(struct fprop_global *, int);
189:	static void fprop_reflect_period_percpu(struct fprop_local_percpu *, struct fprop_global *);
106:	static void fprop_reflect_period_single(struct fprop_local_single *, struct fprop_global *);

File lib/fonts/fonts.c:
90:	const struct font_desc *find_font(const char *);
116:	const struct font_desc *get_default_font(int, int, u32, u32);

File lib/gcd.c:
22:	unsigned long gcd(unsigned long, unsigned long);

File lib/genalloc.c:
436:	bool addr_in_gen_pool(struct gen_pool *, unsigned long, size_t);
706:	struct gen_pool *devm_gen_pool_create(struct device *, int, int, const char *);
184:	int gen_pool_add_virt(struct gen_pool *, unsigned long, phys_addr_t, size_t, int);
273:	unsigned long gen_pool_alloc(struct gen_pool *, size_t);
291:	unsigned long gen_pool_alloc_algo(struct gen_pool *, size_t, genpool_algo_t, void *);
462:	size_t gen_pool_avail(struct gen_pool *);
631:	unsigned long gen_pool_best_fit(unsigned long *, unsigned long, unsigned long, unsigned int, void *, struct gen_pool *, unsigned long);
154:	struct gen_pool *gen_pool_create(int, int);
241:	void gen_pool_destroy(struct gen_pool *);
348:	void *gen_pool_dma_alloc(struct gen_pool *, size_t, dma_addr_t *);
528:	unsigned long gen_pool_first_fit(unsigned long *, unsigned long, unsigned long, unsigned int, void *, struct gen_pool *, unsigned long);
546:	unsigned long gen_pool_first_fit_align(unsigned long *, unsigned long, unsigned long, unsigned int, void *, struct gen_pool *, unsigned long);
607:	unsigned long gen_pool_first_fit_order_align(unsigned long *, unsigned long, unsigned long, unsigned int, void *, struct gen_pool *, unsigned long);
573:	unsigned long gen_pool_fixed_alloc(unsigned long *, unsigned long, unsigned long, unsigned int, void *, struct gen_pool *, unsigned long);
414:	void gen_pool_for_each_chunk(struct gen_pool *, void (*)(struct gen_pool *, struct gen_pool_chunk *, void *), void *);
376:	void gen_pool_free(struct gen_pool *, unsigned long, size_t);
683:	struct gen_pool *gen_pool_get(struct device *, const char *);
504:	void gen_pool_set_algo(struct gen_pool *, genpool_algo_t, void *);
481:	size_t gen_pool_size(struct gen_pool *);
216:	phys_addr_t gen_pool_virt_to_phys(struct gen_pool *, unsigned long);
122:	static unsigned long bitmap_clear_ll(unsigned long *, unsigned long, unsigned long);
662:	static int devm_gen_pool_match(struct device *, void *, void *);
657:	static void devm_gen_pool_release(struct device *, void *);

File lib/glob.c:
40:	bool glob_match(const char *, const char *);

File lib/hexdump.c:
69:	char *bin2hex(char *, const void *, size_t);
48:	int hex2bin(u8 *, const char *, size_t);
109:	int hex_dump_to_buffer(const void *, size_t, int, int, char *, size_t, bool);
29:	int hex_to_bin(char);
243:	void print_hex_dump(const char *, const char *, int, int, int, const void *, size_t, bool);

File lib/hweight.c:
32:	unsigned int __sw_hweight16(unsigned int);
41:	unsigned int __sw_hweight8(unsigned int);

File lib/idr.c:
534:	int ida_alloc_range(struct ida *, unsigned int, unsigned int, gfp_t);
503:	void ida_destroy(struct ida *);
572:	void ida_free(struct ida *, unsigned int);
82:	int idr_alloc(struct idr *, void *, int, int, gfp_t);
120:	int idr_alloc_cyclic(struct idr *, void *, int, int, gfp_t);
34:	int idr_alloc_u32(struct idr *, void *, u32 *, unsigned long, gfp_t);
175:	void *idr_find(const struct idr *, unsigned long);
198:	int idr_for_each(const struct idr *, int (*)(int, void *, void *), void *);
268:	void *idr_get_next(struct idr *, int *);
230:	void *idr_get_next_ul(struct idr *, unsigned long *);
155:	void *idr_remove(struct idr *, unsigned long);
294:	void *idr_replace(struct idr *, void *, unsigned long);
452:	static void ida_remove(struct ida *, int);

File lib/int_sqrt.c:
19:	unsigned long int_sqrt(unsigned long);

File lib/interval_tree.c:
9:	void interval_tree_insert(struct interval_tree_node *, struct rb_root_cached *);
9:	struct interval_tree_node *interval_tree_iter_first(struct rb_root_cached *, unsigned long, unsigned long);
9:	struct interval_tree_node *interval_tree_iter_next(struct interval_tree_node *, unsigned long, unsigned long);
9:	void interval_tree_remove(struct interval_tree_node *, struct rb_root_cached *);
9:	static void interval_tree_augment_rotate(struct rb_node *, struct rb_node *);

File lib/iomap.c:
230:	void *ioport_map(unsigned long, unsigned int);
237:	void ioport_unmap(void *);
77:	unsigned int ioread16(void *);
200:	void ioread16_rep(void *, void *, unsigned long);
82:	unsigned int ioread16be(void *);
87:	unsigned int ioread32(void *);
204:	void ioread32_rep(void *, void *, unsigned long);
92:	unsigned int ioread32be(void *);
72:	unsigned int ioread8(void *);
196:	void ioread8_rep(void *, void *, unsigned long);
117:	void iowrite16(u16, void *);
216:	void iowrite16_rep(void *, const void *, unsigned long);
121:	void iowrite16be(u16, void *);
125:	void iowrite32(u32, void *);
220:	void iowrite32_rep(void *, const void *, unsigned long);
129:	void iowrite32be(u32, void *);
113:	void iowrite8(u8, void *);
212:	void iowrite8_rep(void *, const void *, unsigned long);
248:	void pci_iounmap(struct pci_dev *, void *);
39:	static void bad_io_access(unsigned long, const char *);

File lib/iomap_copy.c:
54:	void __ioread32_copy(void *, const void *, size_t);
31:	void __iowrite32_copy(void *, const void *, size_t);
75:	void __iowrite64_copy(void *, const void *, size_t);

File lib/iov_iter.c:
805:	size_t _copy_from_iter(void *, size_t, struct iov_iter *);
886:	size_t _copy_from_iter_flushcache(void *, size_t, struct iov_iter *);
825:	bool _copy_from_iter_full(void *, size_t, struct iov_iter *);
907:	bool _copy_from_iter_full_nocache(void *, size_t, struct iov_iter *);
852:	size_t _copy_from_iter_nocache(void *, size_t, struct iov_iter *);
671:	size_t _copy_to_iter(const void *, size_t, struct iov_iter *);
769:	size_t _copy_to_iter_mcsafe(const void *, size_t, struct iov_iter *);
1690:	ssize_t compat_import_iovec(int, const struct compat_iovec *, unsigned int, unsigned int, struct iovec **, struct iov_iter *);
991:	size_t copy_page_from_iter(struct page *, size_t, size_t, struct iov_iter *);
974:	size_t copy_page_to_iter(struct page *, size_t, size_t, struct iov_iter *);
1454:	size_t csum_and_copy_from_iter(void *, size_t, __wsum *, struct iov_iter *);
1496:	bool csum_and_copy_from_iter_full(void *, size_t, __wsum *, struct iov_iter *);
1541:	size_t csum_and_copy_to_iter(const void *, size_t, __wsum *, struct iov_iter *);
1626:	const void *dup_iter(struct iov_iter *, struct iov_iter *, gfp_t);
1667:	ssize_t import_iovec(int, const struct iovec *, unsigned int, unsigned int, struct iovec **, struct iov_iter *);
1711:	int import_single_range(int, void *, size_t, struct iovec *, struct iov_iter *);
1118:	void iov_iter_advance(struct iov_iter *, size_t);
1249:	unsigned long iov_iter_alignment(const struct iov_iter *);
1221:	void iov_iter_bvec(struct iov_iter *, int, const struct bio_vec *, unsigned long, size_t);
1048:	size_t iov_iter_copy_from_user_atomic(struct page *, struct iov_iter *, unsigned long, size_t);
526:	int iov_iter_fault_in_readable(struct iov_iter *, size_t);
1726:	int iov_iter_for_each_range(struct iov_iter *, size_t, int (*)(struct kvec *, void *), void *);
1268:	unsigned long iov_iter_gap_alignment(const struct iov_iter *);
1334:	ssize_t iov_iter_get_pages(struct iov_iter *, struct page **, size_t, unsigned int, size_t *);
1409:	ssize_t iov_iter_get_pages_alloc(struct iov_iter *, struct page ***, size_t, size_t *);
544:	void iov_iter_init(struct iov_iter *, int, const struct iovec *, unsigned long, size_t);
1208:	void iov_iter_kvec(struct iov_iter *, int, const struct kvec *, unsigned long, size_t);
1583:	int iov_iter_npages(const struct iov_iter *, int);
1234:	void iov_iter_pipe(struct iov_iter *, int, struct pipe_inode_info *, size_t);
1128:	void iov_iter_revert(struct iov_iter *, size_t);
1195:	size_t iov_iter_single_seg_count(const struct iov_iter *);
1034:	size_t iov_iter_zero(size_t, struct iov_iter *);
153:	static int copyin(void *, const void *, size_t);
144:	static int copyout(void *, const void *, size_t);
690:	static int copyout_mcsafe(void *, const void *, size_t);
563:	static void memcpy_from_page(char *, struct page *, size_t, size_t);
699:	static unsigned long memcpy_mcsafe_to_page(struct page *, size_t, const char *, size_t);
570:	static void memcpy_to_page(struct page *, size_t, const char *, size_t);
577:	static void memzero_page(struct page *, size_t, size_t);
601:	static size_t push_pipe(struct iov_iter *, size_t, int *, size_t *);
433:	static bool sanity(const struct iov_iter *);

File lib/irq_poll.c:
68:	void irq_poll_complete(struct irq_poll *);
145:	void irq_poll_disable(struct irq_poll *);
162:	void irq_poll_enable(struct irq_poll *);
179:	void irq_poll_init(struct irq_poll *, int, irq_poll_fn *);
27:	void irq_poll_sched(struct irq_poll *);
51:	static void __irq_poll_complete(struct irq_poll *);
188:	static int irq_poll_cpu_dead(unsigned int);
203:	static int irq_poll_setup(void);
78:	static void irq_poll_softirq(struct softirq_action *);

File lib/is_single_threaded.c:
19:	bool current_is_single_threaded(void);

File lib/kasprintf.c:
53:	char *kasprintf(gfp_t, const char *, ...);
15:	char *kvasprintf(gfp_t, const char *, struct __va_list_tag *);
43:	const char *kvasprintf_const(gfp_t, const char *, struct __va_list_tag *);

File lib/kfifo.c:
38:	int __kfifo_alloc(struct __kfifo *, unsigned int, size_t, gfp_t);
575:	void __kfifo_dma_in_finish_r(struct __kfifo *, unsigned int, size_t);
369:	unsigned int __kfifo_dma_in_prepare(struct __kfifo *, struct scatterlist *, int, unsigned int);
561:	unsigned int __kfifo_dma_in_prepare_r(struct __kfifo *, struct scatterlist *, int, unsigned int, size_t);
598:	void __kfifo_dma_out_finish_r(struct __kfifo *, size_t);
382:	unsigned int __kfifo_dma_out_prepare(struct __kfifo *, struct scatterlist *, int, unsigned int);
584:	unsigned int __kfifo_dma_out_prepare_r(struct __kfifo *, struct scatterlist *, int, unsigned int, size_t);
69:	void __kfifo_free(struct __kfifo *);
223:	int __kfifo_from_user(struct __kfifo *, const void *, unsigned long, unsigned int *);
512:	int __kfifo_from_user_r(struct __kfifo *, const void *, unsigned long, unsigned int *, size_t);
126:	unsigned int __kfifo_in(struct __kfifo *, const void *, unsigned int);
451:	unsigned int __kfifo_in_r(struct __kfifo *, const void *, unsigned int, size_t);
80:	int __kfifo_init(struct __kfifo *, void *, unsigned int, size_t);
445:	unsigned int __kfifo_len_r(struct __kfifo *, size_t);
395:	unsigned int __kfifo_max_r(unsigned int, size_t);
179:	unsigned int __kfifo_out(struct __kfifo *, void *, unsigned int);
165:	unsigned int __kfifo_out_peek(struct __kfifo *, void *, unsigned int);
477:	unsigned int __kfifo_out_peek_r(struct __kfifo *, void *, unsigned int, size_t);
489:	unsigned int __kfifo_out_r(struct __kfifo *, void *, unsigned int, size_t);
283:	int __kfifo_to_user(struct __kfifo *, void *, unsigned long, unsigned int *);
536:	int __kfifo_to_user_r(struct __kfifo *, void *, unsigned long, unsigned int *, size_t);
188:	static unsigned long kfifo_copy_from_user(const void *, unsigned int, unsigned int, unsigned int *, struct __kfifo *, struct __kfifo *, struct __kfifo *);
102:	static void kfifo_copy_in(const void *, unsigned int, unsigned int, struct __kfifo *, struct __kfifo *, struct __kfifo *);
141:	static void kfifo_copy_out(void *, unsigned int, unsigned int, struct __kfifo *, struct __kfifo *, struct __kfifo *);
249:	static unsigned long kfifo_copy_to_user(void *, unsigned int, unsigned int, unsigned int *, struct __kfifo *, struct __kfifo *, struct __kfifo *);
465:	static unsigned int kfifo_out_copy_r(struct __kfifo *, void *, unsigned int, size_t, unsigned int *);
347:	static unsigned int setup_sgl(struct scatterlist *, int, unsigned int, unsigned int, struct __kfifo *, struct __kfifo *, struct __kfifo *);
308:	static int setup_sgl_buf(struct scatterlist *, void *, int, unsigned int);

File lib/klist.c:
163:	void klist_add_before(struct klist_node *, struct klist_node *);
147:	void klist_add_behind(struct klist_node *, struct klist_node *);
123:	void klist_add_head(struct klist_node *, struct klist *);
135:	void klist_add_tail(struct klist_node *, struct klist *);
229:	void klist_del(struct klist_node *);
85:	void klist_init(struct klist *, void (*)(struct klist_node *), void (*)(struct klist_node *));
312:	void klist_iter_exit(struct klist_iter *);
298:	void klist_iter_init(struct klist *, struct klist_iter *);
281:	void klist_iter_init_node(struct klist *, struct klist_iter *, struct klist_node *);
376:	struct klist_node *klist_next(struct klist_iter *);
266:	int klist_node_attached(struct klist_node *);
334:	struct klist_node *klist_prev(struct klist_iter *);
239:	void klist_remove(struct klist_node *);
109:	static void klist_node_init(struct klist *, struct klist_node *);
210:	static void klist_put(struct klist_node *, bool);
184:	static void klist_release(struct kref *);

File lib/kobject.c:
1024:	const struct kobj_ns_type_operations *kobj_child_ns_ops(struct kobject *);
1039:	bool kobj_ns_current_may_mount(enum kobj_ns_type);
1092:	void kobj_ns_drop(enum kobj_ns_type, void *);
1052:	void *kobj_ns_grab_current(enum kobj_ns_type);
1079:	const void *kobj_ns_initial(enum kobj_ns_type);
1066:	const void *kobj_ns_netlink(enum kobj_ns_type, struct sock *);
1034:	const struct kobj_ns_type_operations *kobj_ns_ops(struct kobject *);
985:	int kobj_ns_type_register(const struct kobj_ns_type_operations *);
1012:	int kobj_ns_type_registered(enum kobj_ns_type);
410:	int kobject_add(struct kobject *, struct kobject *, const char *, ...);
737:	struct kobject *kobject_create(void);
762:	struct kobject *kobject_create_and_add(const char *, struct kobject *);
586:	void kobject_del(struct kobject *);
608:	struct kobject *kobject_get(struct kobject *);
48:	void kobject_get_ownership(struct kobject *, kuid_t *, kgid_t *);
163:	char *kobject_get_path(struct kobject *, gfp_t);
621:	struct kobject *kobject_get_unless_zero(struct kobject *);
341:	void kobject_init(struct kobject *, struct kobj_type *);
444:	int kobject_init_and_add(struct kobject *, struct kobj_type *, struct kobject *, const char *, ...);
534:	int kobject_move(struct kobject *, struct kobject *);
28:	const void *kobject_namespace(struct kobject *);
703:	void kobject_put(struct kobject *);
470:	int kobject_rename(struct kobject *, const char *);
316:	int kobject_set_name(struct kobject *, const char *, ...);
273:	int kobject_set_name_vargs(struct kobject *, const char *, struct __va_list_tag *);
962:	struct kset *kset_create_and_add(const char *, const struct kset_uevent_ops *, struct kobject *);
865:	struct kobject *kset_find_obj(struct kset *, const char *);
892:	void kset_get_ownership(struct kobject *, kuid_t *, kgid_t *);
785:	void kset_init(struct kset *);
827:	int kset_register(struct kset *);
847:	void kset_unregister(struct kset *);
715:	static void dynamic_kobj_release(struct kobject *);
793:	static ssize_t kobj_attr_show(struct kobject *, struct attribute *, char *);
805:	static ssize_t kobj_attr_store(struct kobject *, struct attribute *, const char *, size_t);
193:	static void kobj_kset_leave(struct kobject *);
217:	static int kobject_add_internal(struct kobject *);
682:	static void kobject_release(struct kref *);
884:	static void kset_release(struct kobject *);

File lib/kobject_uevent.c:
652:	int add_uevent_var(struct kobj_uevent_env *, const char *, ...);
192:	int kobject_synth_uevent(struct kobject *, const char *, size_t);
638:	int kobject_uevent(struct kobject *, enum kobject_action);
455:	int kobject_uevent_env(struct kobject *, enum kobject_action, char **);
278:	static struct sk_buff *alloc_uevent_skb(struct kobj_uevent_env *, const char *, const char *);
807:	static int kobject_uevent_init(void);
788:	static void uevent_net_exit(struct net *);
755:	static int uevent_net_init(struct net *);
750:	static void uevent_net_rcv(struct sk_buff *);
723:	static int uevent_net_rcv_skb(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);

File lib/kstrtox.c:
193:	int _kstrtol(const char *, unsigned int, long *);
177:	int _kstrtoul(const char *, unsigned int, unsigned long *);
87:	unsigned int _parse_integer(const char *, unsigned int, unsigned long long *);
24:	const char *_parse_integer_fixup_radix(const char *, unsigned int *);
49:	unsigned int _parse_integer_limit(const char *, unsigned int, unsigned long long *, size_t);
339:	int kstrtobool(const char *, bool *);
381:	int kstrtobool_from_user(const char *, size_t, bool *);
255:	int kstrtoint(const char *, unsigned int, int *);
413:	int kstrtoint_from_user(const char *, size_t, unsigned int, int *);
411:	int kstrtol_from_user(const char *, size_t, unsigned int, long *);
152:	int kstrtoll(const char *, unsigned int, long long *);
409:	int kstrtoll_from_user(const char *, size_t, unsigned int, long long *);
285:	int kstrtos16(const char *, unsigned int, s16 *);
415:	int kstrtos16_from_user(const char *, size_t, unsigned int, s16 *);
315:	int kstrtos8(const char *, unsigned int, s8 *);
417:	int kstrtos8_from_user(const char *, size_t, unsigned int, s8 *);
270:	int kstrtou16(const char *, unsigned int, u16 *);
414:	int kstrtou16_from_user(const char *, size_t, unsigned int, u16 *);
300:	int kstrtou8(const char *, unsigned int, u8 *);
416:	int kstrtou8_from_user(const char *, size_t, unsigned int, u8 *);
224:	int kstrtouint(const char *, unsigned int, unsigned int *);
412:	int kstrtouint_from_user(const char *, size_t, unsigned int, unsigned int *);
410:	int kstrtoul_from_user(const char *, size_t, unsigned int, unsigned long *);
128:	int kstrtoull(const char *, unsigned int, unsigned long long *);
408:	int kstrtoull_from_user(const char *, size_t, unsigned int, unsigned long long *);
92:	static int _kstrtoull(const char *, unsigned int, unsigned long long *);

File lib/lcm.c:
7:	unsigned long lcm(unsigned long, unsigned long);
16:	unsigned long lcm_not_zero(unsigned long, unsigned long);

File lib/list_debug.c:
20:	bool __list_add_valid(struct list_head *, struct list_head *, struct list_head *);
38:	bool __list_del_entry_valid(struct list_head *);

File lib/list_sort.c:
102:	void list_sort(void *, struct list_head *, int (*)(void *, struct list_head *, struct list_head *));
17:	static struct list_head *merge(void *, int (*)(void *, struct list_head *, struct list_head *), struct list_head *, struct list_head *);

File lib/llist.c:
38:	bool llist_add_batch(struct llist_node *, struct llist_node *, struct llist_head *);
65:	struct llist_node *llist_del_first(struct llist_head *);
91:	struct llist_node *llist_reverse_order(struct llist_node *);

File lib/lockref.c:
41:	void lockref_get(struct lockref *);
196:	int lockref_get_not_dead(struct lockref *);
60:	int lockref_get_not_zero(struct lockref *);
117:	int lockref_get_or_lock(struct lockref *);
184:	void lockref_mark_dead(struct lockref *);
88:	int lockref_put_not_zero(struct lockref *);
161:	int lockref_put_or_lock(struct lockref *);
143:	int lockref_put_return(struct lockref *);

File lib/logic_pio.c:
126:	struct logic_pio_hwaddr *find_io_range_by_fwnode(struct fwnode_handle *);
35:	int logic_pio_register_range(struct logic_pio_hwaddr *);
171:	resource_size_t logic_pio_to_hwaddr(unsigned long);
208:	unsigned long logic_pio_trans_cpuaddr(resource_size_t);
190:	unsigned long logic_pio_trans_hwaddr(struct fwnode_handle *, resource_size_t, resource_size_t);
110:	void logic_pio_unregister_range(struct logic_pio_hwaddr *);

File lib/lz4/lz4_decompress.c:
353:	int LZ4_decompress_fast(const char *, char *, int);
419:	int LZ4_decompress_fast_continue(LZ4_streamDecode_t *, const char *, char *, int);
489:	int LZ4_decompress_fast_usingDict(const char *, char *, int, const char *, int);
337:	int LZ4_decompress_safe(const char *, char *, int, int);
382:	int LZ4_decompress_safe_continue(LZ4_streamDecode_t *, const char *, char *, int, int);
345:	int LZ4_decompress_safe_partial(const char *, char *, int, int, int);
481:	int LZ4_decompress_safe_usingDict(const char *, char *, int, int, const char *, int);
360:	int LZ4_setStreamDecode(LZ4_streamDecode_t *, const char *, int);

File lib/lzo/lzo1x_compress.c:
216:	int lzo1x_1_compress(const unsigned char *, size_t, unsigned char *, size_t *, void *);
21:	static size_t lzo1x_1_do_compress(const unsigned char *, size_t, unsigned char *, size_t *, size_t, void *);

File lib/lzo/lzo1x_decompress_safe.c:
38:	int lzo1x_decompress_safe(const unsigned char *, size_t, unsigned char *, size_t *);

File lib/memweight.c:
11:	size_t memweight(const void *, size_t);

File lib/mpi/generic_mpih-add1.c:
34:	mpi_limb_t mpihelp_add_n(mpi_ptr_t, mpi_ptr_t, mpi_ptr_t, mpi_size_t);

File lib/mpi/generic_mpih-lshift.c:
41:	mpi_limb_t mpihelp_lshift(mpi_ptr_t, mpi_ptr_t, mpi_size_t, unsigned int);

File lib/mpi/generic_mpih-mul1.c:
33:	mpi_limb_t mpihelp_mul_1(mpi_ptr_t, mpi_ptr_t, mpi_size_t, mpi_limb_t);

File lib/mpi/generic_mpih-mul2.c:
33:	mpi_limb_t mpihelp_addmul_1(mpi_ptr_t, mpi_ptr_t, mpi_size_t, mpi_limb_t);

File lib/mpi/generic_mpih-mul3.c:
33:	mpi_limb_t mpihelp_submul_1(mpi_ptr_t, mpi_ptr_t, mpi_size_t, mpi_limb_t);

File lib/mpi/generic_mpih-rshift.c:
42:	mpi_limb_t mpihelp_rshift(mpi_ptr_t, mpi_ptr_t, mpi_size_t, unsigned int);

File lib/mpi/generic_mpih-sub1.c:
33:	mpi_limb_t mpihelp_sub_n(mpi_ptr_t, mpi_ptr_t, mpi_ptr_t, mpi_size_t);

File lib/mpi/mpi-bit.c:
39:	unsigned int mpi_get_nbits(MPI);
30:	void mpi_normalize(MPI);

File lib/mpi/mpi-cmp.c:
44:	int mpi_cmp(MPI, MPI);
23:	int mpi_cmp_ui(MPI, unsigned long);

File lib/mpi/mpi-pow.c:
37:	int mpi_powm(MPI, MPI, MPI, MPI);

File lib/mpi/mpicoder.c:
203:	void *mpi_get_buffer(MPI, unsigned int *, int *);
143:	int mpi_read_buffer(MPI, uint8_t *, unsigned int, unsigned int *, int *);
81:	MPI mpi_read_from_buffer(const void *, unsigned int *);
35:	MPI mpi_read_raw_data(const void *, size_t);
330:	MPI mpi_read_raw_from_sgl(struct scatterlist *, unsigned int);
247:	int mpi_write_to_sgl(MPI, struct scatterlist *, unsigned int, int *);

File lib/mpi/mpih-cmp.c:
38:	int mpihelp_cmp(mpi_ptr_t, mpi_ptr_t, mpi_size_t);

File lib/mpi/mpih-div.c:
58:	mpi_limb_t mpihelp_divrem(mpi_ptr_t, mpi_size_t, mpi_ptr_t, mpi_size_t, mpi_ptr_t, mpi_size_t);

File lib/mpi/mpih-mul.c:
258:	void mpih_sqr_n(mpi_ptr_t, mpi_ptr_t, mpi_size_t, mpi_ptr_t);
220:	void mpih_sqr_n_basecase(mpi_ptr_t, mpi_ptr_t, mpi_size_t);
440:	int mpihelp_mul(mpi_ptr_t, mpi_ptr_t, mpi_size_t, mpi_ptr_t, mpi_size_t, mpi_limb_t *);
334:	int mpihelp_mul_karatsuba_case(mpi_ptr_t, mpi_ptr_t, mpi_size_t, mpi_ptr_t, mpi_size_t, struct karatsuba_ctx *);
406:	void mpihelp_release_karatsuba_ctx(struct karatsuba_ctx *);
108:	static void mul_n(mpi_ptr_t, mpi_ptr_t, mpi_ptr_t, mpi_size_t, mpi_ptr_t);
68:	static mpi_limb_t mul_n_basecase(mpi_ptr_t, mpi_ptr_t, mpi_ptr_t, mpi_size_t);

File lib/mpi/mpiutil.c:
30:	MPI mpi_alloc(unsigned int);
57:	mpi_ptr_t mpi_alloc_limb_space(unsigned int);
75:	void mpi_assign_limb_space(MPI, mpi_ptr_t, unsigned int);
109:	void mpi_free(MPI);
67:	void mpi_free_limb_space(mpi_ptr_t);
86:	int mpi_resize(MPI, unsigned int);

File lib/net_utils.c:
7:	bool mac_pton(const char *, u8 *);

File lib/nlattr.c:
563:	void __nla_put(struct sk_buff *, int, int, const void *);
584:	void __nla_put_64bit(struct sk_buff *, int, int, const void *, int);
603:	void __nla_put_nohdr(struct sk_buff *, int, const void *);
429:	struct nlattr *__nla_reserve(struct sk_buff *, int, int);
457:	struct nlattr *__nla_reserve_64bit(struct sk_buff *, int, int, int);
477:	void *__nla_reserve_nohdr(struct sk_buff *, int);
688:	int nla_append(struct sk_buff *, int, const void *);
284:	struct nlattr *nla_find(const struct nlattr *, int, int);
381:	int nla_memcmp(const struct nlattr *, const void *, size_t);
363:	int nla_memcpy(void *, const struct nlattr *, int);
240:	int nla_parse(struct nlattr **, int, const struct nlattr *, int, const struct nla_policy *, struct netlink_ext_ack *);
208:	int nla_policy_len(const struct nla_policy *, int);
622:	int nla_put(struct sk_buff *, int, int, const void *);
643:	int nla_put_64bit(struct sk_buff *, int, int, const void *, int);
669:	int nla_put_nohdr(struct sk_buff *, int, const void *);
495:	struct nlattr *nla_reserve(struct sk_buff *, int, int);
518:	struct nlattr *nla_reserve_64bit(struct sk_buff *, int, int, int);
544:	void *nla_reserve_nohdr(struct sk_buff *, int);
398:	int nla_strcmp(const struct nlattr *, const char *);
335:	char *nla_strdup(const struct nlattr *, gfp_t);
309:	size_t nla_strlcpy(char *, const struct nlattr *, size_t);
175:	int nla_validate(const struct nlattr *, int, int, const struct nla_policy *, struct netlink_ext_ack *);
71:	static int validate_nla(const struct nlattr *, int, const struct nla_policy *);

File lib/nmi_backtrace.c:
88:	bool nmi_cpu_backtrace(struct pt_regs *);
36:	void nmi_trigger_cpumask_backtrace(const cpumask_t *, bool, void (*)(cpumask_t *));

File lib/nodemask.c:
6:	int __next_node_in(int, const nodemask_t *);
21:	int node_random(const nodemask_t *);

File lib/oid_registry.c:
29:	enum OID look_up_OID(const void *, size_t);
167:	int sprint_OID(enum OID, char *, size_t);
110:	int sprint_oid(const void *, size_t, char *, size_t);

File lib/once.c:
72:	void __do_once_done(bool *, struct static_key_true *, unsigned long *);
54:	bool __do_once_start(bool *, unsigned long *);
14:	static void once_deferred(struct work_struct *);

File lib/parser.c:
240:	int match_hex(substring_t *, int *);
193:	int match_int(substring_t *, int *);
225:	int match_octal(substring_t *, int *);
328:	char *match_strdup(const substring_t *);
307:	size_t match_strlcpy(char *, const substring_t *, size_t);
107:	int match_token(char *, const struct match_token *, substring_t *);
210:	int match_u64(substring_t *, u64 *);
257:	bool match_wildcard(const char *, const char *);
128:	static int match_number(substring_t *, int *, int);

File lib/pci_iomap.c:
111:	void *pci_iomap(struct pci_dev *, int, unsigned long);
28:	void *pci_iomap_range(struct pci_dev *, int, unsigned long, unsigned long);
132:	void *pci_iomap_wc(struct pci_dev *, int, unsigned long);
68:	void *pci_iomap_wc_range(struct pci_dev *, int, unsigned long, unsigned long);

File lib/percpu-refcount.c:
101:	void percpu_ref_exit(struct percpu_ref *);
59:	int percpu_ref_init(struct percpu_ref *, percpu_ref_func_t *, unsigned int, gfp_t);
328:	void percpu_ref_kill_and_confirm(struct percpu_ref *, percpu_ref_func_t *);
357:	void percpu_ref_reinit(struct percpu_ref *);
379:	void percpu_ref_resurrect(struct percpu_ref *);
251:	void percpu_ref_switch_to_atomic(struct percpu_ref *, percpu_ref_func_t *);
273:	void percpu_ref_switch_to_atomic_sync(struct percpu_ref *);
298:	void percpu_ref_switch_to_percpu(struct percpu_ref *);
212:	static void __percpu_ref_switch_mode(struct percpu_ref *, percpu_ref_func_t *);
161:	static void percpu_ref_noop_confirm_switch(struct percpu_ref *);
126:	static void percpu_ref_switch_to_atomic_rcu(struct callback_head *);

File lib/percpu_counter.c:
202:	int __percpu_counter_compare(struct percpu_counter *, s64, s32);
122:	int __percpu_counter_init(struct percpu_counter *, s64, gfp_t, struct lock_class_key *);
105:	s64 __percpu_counter_sum(struct percpu_counter *);
82:	void percpu_counter_add_batch(struct percpu_counter *, s64, s32);
146:	void percpu_counter_destroy(struct percpu_counter *);
60:	void percpu_counter_set(struct percpu_counter *, s64);
168:	static int compute_batch_value(unsigned int);
176:	static int percpu_counter_cpu_dead(unsigned int);
225:	static int percpu_counter_startup(void);

File lib/plist.c:
74:	void plist_add(struct plist_node *, struct plist_head *);
113:	void plist_del(struct plist_node *, struct plist_head *);
146:	void plist_requeue(struct plist_node *, struct plist_head *);

File lib/radix-tree.c:
811:	int __radix_tree_create(struct radix_tree_root *, unsigned long, unsigned int, struct radix_tree_node **, void ***);
1977:	void __radix_tree_delete_node(struct radix_tree_root *, struct radix_tree_node *, radix_tree_update_node_t);
985:	int __radix_tree_insert(struct radix_tree_root *, unsigned long, unsigned int, void *);
1029:	void *__radix_tree_lookup(const struct radix_tree_root *, unsigned long, struct radix_tree_node **, void ***);
1628:	void **__radix_tree_next_slot(void **, struct radix_tree_iter *, unsigned int);
1180:	void __radix_tree_replace(struct radix_tree_root *, struct radix_tree_node *, void **, void *, radix_tree_update_node_t);
2109:	int ida_pre_get(struct ida *, gfp_t);
2212:	void idr_destroy(struct idr *);
2130:	void **idr_get_free(struct radix_tree_root *, struct radix_tree_iter *, gfp_t, unsigned long);
2102:	void idr_preload(gfp_t);
2071:	void radix_tree_clear_tags(struct radix_tree_root *, struct radix_tree_node *, void **);
2065:	void *radix_tree_delete(struct radix_tree_root *, unsigned long);
2033:	void *radix_tree_delete_item(struct radix_tree_root *, unsigned long, void *);
1823:	unsigned int radix_tree_gang_lookup(const struct radix_tree_root *, void **, unsigned long, unsigned int);
1868:	unsigned int radix_tree_gang_lookup_slot(const struct radix_tree_root *, void ***, unsigned long *, unsigned long, unsigned int);
1905:	unsigned int radix_tree_gang_lookup_tag(const struct radix_tree_root *, void **, unsigned long, unsigned int, unsigned int);
1946:	unsigned int radix_tree_gang_lookup_tag_slot(const struct radix_tree_root *, void ***, unsigned long, unsigned int, unsigned int);
2274:	void radix_tree_init(void);
2014:	void radix_tree_iter_delete(struct radix_tree_root *, struct radix_tree_iter *, void **);
1240:	void radix_tree_iter_replace(struct radix_tree_root *, const struct radix_tree_iter *, void **, void *);
1689:	void **radix_tree_iter_resume(void **, struct radix_tree_iter *);
1527:	void radix_tree_iter_tag_clear(struct radix_tree_root *, const struct radix_tree_iter *, unsigned int);
1456:	void radix_tree_iter_tag_set(struct radix_tree_root *, const struct radix_tree_iter *, unsigned int);
1262:	int radix_tree_join(struct radix_tree_root *, unsigned long, unsigned int, void *);
1097:	void *radix_tree_lookup(const struct radix_tree_root *, unsigned long);
1074:	void **radix_tree_lookup_slot(const struct radix_tree_root *, unsigned long);
523:	int radix_tree_maybe_preload(gfp_t);
559:	int radix_tree_maybe_preload_order(gfp_t, int);
1711:	void **radix_tree_next_chunk(const struct radix_tree_root *, struct radix_tree_iter *, unsigned int);
510:	int radix_tree_preload(gfp_t);
1224:	void radix_tree_replace_slot(struct radix_tree_root *, void **, void *);
1297:	int radix_tree_split(struct radix_tree_root *, unsigned long, unsigned int);
538:	int radix_tree_split_preload(unsigned int, unsigned int, gfp_t);
1496:	void *radix_tree_tag_clear(struct radix_tree_root *, unsigned long, unsigned int);
1548:	int radix_tree_tag_get(const struct radix_tree_root *, unsigned long, unsigned int);
1422:	void *radix_tree_tag_set(struct radix_tree_root *, unsigned long, unsigned int);
2089:	int radix_tree_tagged(const struct radix_tree_root *, unsigned int);
1984:	static bool __radix_tree_delete(struct radix_tree_root *, struct radix_tree_node *, void **);
467:	static int __radix_tree_preload(gfp_t, unsigned int);
753:	static bool delete_node(struct radix_tree_root *, struct radix_tree_node *, radix_tree_update_node_t);
1462:	static void node_tag_clear(struct radix_tree_root *, struct radix_tree_node *, unsigned int, unsigned int);
1138:	static bool node_tag_get(const struct radix_tree_root *, const struct radix_tree_node *, unsigned int, unsigned int);
1393:	static void node_tag_set(struct radix_tree_root *, struct radix_tree_node *, unsigned int, unsigned int);
2256:	static int radix_tree_cpu_dead(unsigned int);
620:	static int radix_tree_extend(struct radix_tree_root *, gfp_t, unsigned long, unsigned int);
871:	static void radix_tree_free_nodes(struct radix_tree_node *);
378:	static struct radix_tree_node *radix_tree_node_alloc(gfp_t, struct radix_tree_node *, struct radix_tree_root *, unsigned int, unsigned int, unsigned int, unsigned int);
2223:	static void radix_tree_node_ctor(void *);
435:	static void radix_tree_node_rcu_free(struct callback_head *);
1123:	static void replace_slot(void **, void *, struct radix_tree_node *, int, int);
1612:	static void **skip_siblings(struct radix_tree_node **, void **, struct radix_tree_iter *);

File lib/random32.c:
392:	void prandom_bytes(void *, size_t);
72:	void prandom_bytes_state(struct rnd_state *, void *, size_t);
424:	void prandom_seed(u32);
108:	void prandom_seed_full_state(struct rnd_state *);
377:	u32 prandom_u32(void);
50:	u32 prandom_u32_state(struct rnd_state *);
454:	static int prandom_init_early(void);
556:	static int prandom_init_late(void);
489:	static void prandom_reseed(struct timer_list *);
547:	static void prandom_timer_start(struct random_ready_callback *);

File lib/ratelimit.c:
28:	int ___ratelimit(struct ratelimit_state *, const char *);

File lib/rational.c:
31:	void rational_best_approximation(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long *, unsigned long *);

File lib/rbtree.c:
426:	void __rb_erase_color(struct rb_node *, struct rb_root *, void (*)(struct rb_node *, struct rb_node *));
491:	void __rb_insert_augmented(struct rb_node *, struct rb_root *, bool, struct rb_node **, void (*)(struct rb_node *, struct rb_node *));
456:	void rb_erase(struct rb_node *, struct rb_root *);
474:	void rb_erase_cached(struct rb_node *, struct rb_root_cached *);
502:	struct rb_node *rb_first(const struct rb_root *);
669:	struct rb_node *rb_first_postorder(const struct rb_root *);
450:	void rb_insert_color(struct rb_node *, struct rb_root *);
466:	void rb_insert_color_cached(struct rb_node *, struct rb_root_cached *, bool);
515:	struct rb_node *rb_last(const struct rb_root *);
528:	struct rb_node *rb_next(const struct rb_node *);
650:	struct rb_node *rb_next_postorder(const struct rb_node *);
560:	struct rb_node *rb_prev(const struct rb_node *);
589:	void rb_replace_node(struct rb_node *, struct rb_node *, struct rb_root *);
606:	void rb_replace_node_cached(struct rb_node *, struct rb_node *, struct rb_root_cached *);
616:	void rb_replace_node_rcu(struct rb_node *, struct rb_node *, struct rb_root *);

File lib/reciprocal_div.c:
13:	struct reciprocal_value reciprocal_value(u32);
31:	struct reciprocal_value_adv reciprocal_value_adv(u32, u8);

File lib/refcount.c:
103:	void refcount_add_checked(unsigned int, refcount_t *);
64:	bool refcount_add_not_zero_checked(unsigned int, refcount_t *);
345:	bool refcount_dec_and_lock(refcount_t *, spinlock_t *);
373:	bool refcount_dec_and_lock_irqsave(refcount_t *, spinlock_t *, unsigned long *);
314:	bool refcount_dec_and_mutex_lock(refcount_t *, struct mutex *);
218:	bool refcount_dec_and_test_checked(refcount_t *);
234:	void refcount_dec_checked(refcount_t *);
256:	bool refcount_dec_if_one(refcount_t *);
275:	bool refcount_dec_not_one(refcount_t *);
154:	void refcount_inc_checked(refcount_t *);
121:	bool refcount_inc_not_zero_checked(refcount_t *);
180:	bool refcount_sub_and_test_checked(unsigned int, refcount_t *);

File lib/rhashtable.c:
1176:	void rhashtable_destroy(struct rhashtable *);
1138:	void rhashtable_free_and_destroy(struct rhashtable *, void (*)(void *, void *), void *);
1018:	int rhashtable_init(struct rhashtable *, const struct rhashtable_params *);
633:	void *rhashtable_insert_slow(struct rhashtable *, const void *, struct rhash_head *);
669:	void rhashtable_walk_enter(struct rhashtable *, struct rhashtable_iter *);
691:	void rhashtable_walk_exit(struct rhashtable_iter *);
863:	void *rhashtable_walk_next(struct rhashtable_iter *);
902:	void *rhashtable_walk_peek(struct rhashtable_iter *);
718:	int rhashtable_walk_start_check(struct rhashtable_iter *);
934:	void rhashtable_walk_stop(struct rhashtable_iter *);
1094:	int rhltable_init(struct rhltable *, const struct rhashtable_params *);
1182:	struct rhash_head **rht_bucket_nested(const struct bucket_table *, unsigned int);
1213:	struct rhash_head **rht_bucket_nested_insert(struct rhashtable *, struct bucket_table *, unsigned int);
791:	static void *__rhashtable_walk_find_next(struct rhashtable_iter *);
167:	static struct bucket_table *bucket_table_alloc(size_t, gfp_t, struct rhashtable *);
102:	static void bucket_table_free(const struct bucket_table *);
111:	static void bucket_table_free_rcu(struct callback_head *);
116:	static union nested_table *nested_table_alloc(union nested_table **, bool, struct rhashtable *);
68:	static void nested_table_free(union nested_table *, unsigned int);
527:	static struct bucket_table *rhashtable_insert_one(struct rhashtable *, struct bucket_table *, unsigned int, struct rhash_head *, void *);
971:	static u32 rhashtable_jhash2(const void *, u32, u32);
480:	static void *rhashtable_lookup_one(struct rhashtable *, struct bucket_table *, unsigned int, const void *, struct rhash_head *);
344:	static int rhashtable_rehash_alloc(struct rhashtable *, struct bucket_table *, unsigned int);
400:	static void rht_deferred_worker(struct work_struct *);

File lib/sbitmap.c:
372:	int __sbitmap_queue_get(struct sbitmap_queue *);
400:	int __sbitmap_queue_get_shallow(struct sbitmap_queue *, unsigned int);
188:	bool sbitmap_any_bit_clear(const struct sbitmap *);
176:	bool sbitmap_any_bit_set(const struct sbitmap *);
238:	void sbitmap_bitmap_show(struct sbitmap *, struct seq_file *);
114:	int sbitmap_get(struct sbitmap *, unsigned int, bool);
145:	int sbitmap_get_shallow(struct sbitmap *, unsigned int, unsigned long);
23:	int sbitmap_init_node(struct sbitmap *, unsigned int, int, gfp_t, int);
509:	void sbitmap_queue_clear(struct sbitmap_queue *, unsigned int, unsigned int);
304:	int sbitmap_queue_init_node(struct sbitmap_queue *, unsigned int, int, bool, gfp_t, int);
431:	void sbitmap_queue_min_shallow_depth(struct sbitmap_queue *, unsigned int);
365:	void sbitmap_queue_resize(struct sbitmap_queue *, unsigned int);
548:	void sbitmap_queue_show(struct sbitmap_queue *, struct seq_file *);
527:	void sbitmap_queue_wake_all(struct sbitmap_queue *);
502:	void sbitmap_queue_wake_up(struct sbitmap_queue *);
67:	void sbitmap_resize(struct sbitmap *, unsigned int);
217:	void sbitmap_show(struct sbitmap *, struct seq_file *);
204:	unsigned int sbitmap_weight(const struct sbitmap *);
82:	static int __sbitmap_get_word(unsigned long *, unsigned long, unsigned int, bool);
461:	static bool __sbq_wake_up(struct sbitmap_queue *);
346:	static void sbitmap_queue_update_wake_batch(struct sbitmap_queue *, unsigned int);

File lib/scatterlist.c:
263:	int __sg_alloc_table(struct sg_table *, unsigned int, unsigned int, struct scatterlist *, gfp_t, sg_alloc_fn *);
381:	int __sg_alloc_table_from_pages(struct sg_table *, struct page **, unsigned int, unsigned int, unsigned long, unsigned int, gfp_t);
193:	void __sg_free_table(struct sg_table *, unsigned int, bool, sg_free_fn *);
609:	bool __sg_page_iter_next(struct sg_page_iter *);
592:	void __sg_page_iter_start(struct sg_page_iter *, struct scatterlist *, unsigned int, unsigned long);
347:	int sg_alloc_table(struct sg_table *, unsigned int, gfp_t);
456:	int sg_alloc_table_from_pages(struct sg_table *, struct page **, unsigned int, unsigned int, unsigned long, gfp_t);
806:	size_t sg_copy_buffer(struct scatterlist *, unsigned int, void *, size_t, off_t, bool);
852:	size_t sg_copy_from_buffer(struct scatterlist *, unsigned int, const void *, size_t);
869:	size_t sg_copy_to_buffer(struct scatterlist *, unsigned int, void *, size_t);
238:	void sg_free_table(struct sg_table *);
140:	void sg_init_one(struct scatterlist *, const void *, unsigned int);
126:	void sg_init_table(struct scatterlist *, unsigned int);
103:	struct scatterlist *sg_last(struct scatterlist *, unsigned int);
729:	bool sg_miter_next(struct sg_mapping_iter *);
692:	bool sg_miter_skip(struct sg_mapping_iter *, off_t);
640:	void sg_miter_start(struct sg_mapping_iter *, struct scatterlist *, unsigned int, unsigned int);
766:	void sg_miter_stop(struct sg_mapping_iter *);
47:	int sg_nents(struct scatterlist *);
70:	int sg_nents_for_len(struct scatterlist *, u64);
25:	struct scatterlist *sg_next(struct scatterlist *);
887:	size_t sg_pcopy_from_buffer(struct scatterlist *, unsigned int, const void *, size_t, off_t);
905:	size_t sg_pcopy_to_buffer(struct scatterlist *, unsigned int, void *, size_t, off_t);
921:	size_t sg_zero_buffer(struct scatterlist *, unsigned int, size_t, off_t);
532:	struct scatterlist *sgl_alloc(unsigned long long, gfp_t, unsigned int *);
478:	struct scatterlist *sgl_alloc_order(unsigned long long, unsigned int, bool, gfp_t, unsigned int *);
584:	void sgl_free(struct scatterlist *);
552:	void sgl_free_n_order(struct scatterlist *, int, int);
574:	void sgl_free_order(struct scatterlist *, int);
151:	static struct scatterlist *sg_kmalloc(unsigned int, gfp_t);
651:	static bool sg_miter_get_next_page(struct sg_mapping_iter *);

File lib/seq_buf.c:
113:	int seq_buf_bprintf(struct seq_buf *, const char *, const u32 *);
269:	int seq_buf_path(struct seq_buf *, const struct path *, const char *);
40:	int seq_buf_print_seq(struct seq_file *, struct seq_buf *);
83:	int seq_buf_printf(struct seq_buf *, const char *, ...);
169:	int seq_buf_putc(struct seq_buf *, unsigned char);
193:	int seq_buf_putmem(struct seq_buf *, const void *, unsigned int);
221:	int seq_buf_putmem_hex(struct seq_buf *, const void *, unsigned int);
141:	int seq_buf_puts(struct seq_buf *, const char *);
310:	int seq_buf_to_user(struct seq_buf *, char *, int);
57:	int seq_buf_vprintf(struct seq_buf *, const char *, struct __va_list_tag *);

File lib/sg_pool.c:
98:	int sg_alloc_table_chained(struct sg_table *, int, struct scatterlist *);
79:	void sg_free_table_chained(struct sg_table *, bool);
61:	static struct scatterlist *sg_pool_alloc(unsigned int, gfp_t);
160:	static void sg_pool_exit(void);
53:	static void sg_pool_free(struct scatterlist *, unsigned int);
121:	static int sg_pool_init(void);

File lib/sha1.c:
194:	void sha_init(__u32 *);
82:	void sha_transform(__u32 *, const char *, __u32 *);

File lib/show_mem.c:
12:	void show_mem(unsigned int, nodemask_t *);

File lib/siphash.c:
253:	u32 __hsiphash_aligned(const void *, size_t, const hsiphash_key_t *);
52:	u64 __siphash_aligned(const void *, size_t, const siphash_key_t *);
323:	u32 hsiphash_1u32(const u32, const hsiphash_key_t *);
337:	u32 hsiphash_2u32(const u32, const u32, const hsiphash_key_t *);
355:	u32 hsiphash_3u32(const u32, const u32, const u32, const hsiphash_key_t *);
376:	u32 hsiphash_4u32(const u32, const u32, const u32, const u32, const hsiphash_key_t *);
214:	u64 siphash_1u32(const u32, const siphash_key_t *);
123:	u64 siphash_1u64(const u64, const siphash_key_t *);
140:	u64 siphash_2u64(const u64, const u64, const siphash_key_t *);
222:	u64 siphash_3u32(const u32, const u32, const u32, const siphash_key_t *);
162:	u64 siphash_3u64(const u64, const u64, const u64, const siphash_key_t *);
190:	u64 siphash_4u64(const u64, const u64, const u64, const u64, const siphash_key_t *);

File lib/sort.c:
62:	void sort(void *, size_t, size_t, int (*)(const void *, const void *), void (*)(void *, void *, int));
34:	static void generic_swap(void *, void *, int);
20:	static void u32_swap(void *, void *, int);
27:	static void u64_swap(void *, void *, int);

File lib/string.c:
669:	int __sysfs_match_string(const char * const *, size_t, const char *);
881:	int bcmp(const void *, const void *, size_t);
1069:	void fortify_panic(const char *);
643:	int match_string(const char * const *, size_t, const char *);
973:	void *memchr(const void *, int, size_t);
1006:	void *memchr_inv(const void *, int, size_t);
855:	int memcmp(const void *, const void *, size_t);
898:	void *memscan(void *, int, size_t);
720:	void memzero_explicit(void *, size_t);
439:	char *skip_spaces(const char *);
68:	int strcasecmp(const char *, const char *);
246:	char *strcat(char *, const char *);
370:	char *strchr(const char *, int);
389:	char *strchrnul(const char *, int);
322:	int strcmp(const char *, const char *);
88:	char *strcpy(char *, const char *);
539:	__kernel_size_t strcspn(const char *, const char *);
455:	char *strim(char *);
295:	size_t strlcat(char *, const char *, size_t);
140:	size_t strlcpy(char *, const char *, size_t);
478:	size_t strlen(const char *);
42:	int strncasecmp(const char *, const char *, size_t);
269:	char *strncat(char *, const char *, size_t);
423:	char *strnchr(const char *, size_t, int);
346:	int strncmp(const char *, const char *, size_t);
113:	char *strncpy(char *, const char *, size_t);
495:	__kernel_size_t strnlen(const char *, size_t);
945:	char *strnstr(const char *, const char *, size_t);
563:	char *strpbrk(const char *, const char *);
404:	char *strrchr(const char *, int);
1060:	char *strreplace(char *, char, char);
178:	ssize_t strscpy(char *, const char *, size_t);
590:	char *strsep(char **, const char *);
512:	__kernel_size_t strspn(const char *, const char *);
919:	char *strstr(const char *, const char *);
617:	bool sysfs_streq(const char *, const char *);

File lib/string_helpers.c:
546:	char *kstrdup_quotable(const char *, gfp_t);
574:	char *kstrdup_quotable_cmdline(struct task_struct *, gfp_t);
607:	char *kstrdup_quotable_file(struct file *, gfp_t);
493:	int string_escape_mem(const char *, size_t, char *, size_t, unsigned int, const char *);
33:	void string_get_size(u64, u64, const enum string_size_units, char *, int);
266:	int string_unescape(char *, char *, size_t, unsigned int);

File lib/strncpy_from_user.c:
96:	long strncpy_from_user(char *, const char *, long);

File lib/strnlen_user.c:
97:	long strnlen_user(const char *, long);

File lib/syscall.c:
64:	int task_current_syscall(struct task_struct *, long *, unsigned long *, unsigned int, unsigned long *, unsigned long *);
8:	static int collect_syscall(struct task_struct *, long *, unsigned long *, unsigned int, unsigned long *, unsigned long *);

File lib/test-kstrtox.c:
706:	static int test_kstrtox_init(void);

File lib/textsearch.c:
317:	void textsearch_destroy(struct ts_config *);
235:	unsigned int textsearch_find_continuous(struct ts_config *, struct ts_state *, const void *, unsigned int);
267:	struct ts_config *textsearch_prepare(const char *, const void *, unsigned int, gfp_t, int);
147:	int textsearch_register(struct ts_ops *);
182:	int textsearch_unregister(struct ts_ops *);
208:	static unsigned int get_linear_data(unsigned int, const u8 **, struct ts_config *, struct ts_state *);

File lib/timerqueue.c:
40:	bool timerqueue_add(struct timerqueue_head *, struct timerqueue_node *);
76:	bool timerqueue_del(struct timerqueue_head *, struct timerqueue_node *);
96:	struct timerqueue_node *timerqueue_iterate_next(struct timerqueue_node *);

File lib/ucs2_string.c:
83:	unsigned long ucs2_as_utf8(u8 *, const ucs2_char_t *, unsigned long);
18:	unsigned long ucs2_strlen(const ucs2_char_t *);
36:	int ucs2_strncmp(const ucs2_char_t *, const ucs2_char_t *, size_t);
7:	unsigned long ucs2_strnlen(const ucs2_char_t *, size_t);
29:	unsigned long ucs2_strsize(const ucs2_char_t *, unsigned long);
55:	unsigned long ucs2_utf8size(const ucs2_char_t *);

File lib/usercopy.c:
7:	unsigned long _copy_from_user(void *, const void *, unsigned long);
23:	unsigned long _copy_to_user(void *, const void *, unsigned long);

File lib/uuid.c:
41:	void generate_random_uuid(unsigned char *);
58:	void guid_gen(guid_t *);
121:	int guid_parse(const char *, guid_t *);
66:	void uuid_gen(uuid_t *);
86:	bool uuid_is_valid(const char *);
127:	int uuid_parse(const char *, uuid_t *);
103:	static int __uuid_parse(const char *, __u8 *, const u8 *);

File lib/vsprintf.c:
3010:	int bprintf(u32 *, size_t, const char *, ...);
2810:	int bstr_printf(char *, size_t, const char *, const u32 *);
366:	int num_to_str(char *, int, unsigned long long, unsigned int);
2570:	int scnprintf(char *, size_t, const char *, ...);
112:	long simple_strtol(const char *, char **, unsigned int);
144:	long long simple_strtoll(const char *, char **, unsigned int);
98:	unsigned long simple_strtoul(const char *, char **, unsigned int);
84:	unsigned long long simple_strtoull(const char *, char **, unsigned int);
2546:	int snprintf(char *, size_t, const char *, ...);
2615:	int sprintf(char *, const char *, ...);
3306:	int sscanf(const char *, const char *, ...);
2652:	int vbin_printf(u32 *, size_t, const char *, struct __va_list_tag *);
2518:	int vscnprintf(char *, size_t, const char *, struct __va_list_tag *);
2349:	int vsnprintf(char *, size_t, const char *, struct __va_list_tag *);
2597:	int vsprintf(char *, const char *, struct __va_list_tag *);
3031:	int vsscanf(const char *, const char *, struct __va_list_tag *);
1573:	static char *address_val(char *, char *, const void *, const char *);
791:	static char *bdev_name(char *, char *, struct printf_spec, const char *, struct block_device *, struct block_device *);
1058:	static char *bitmap_list_string(char *, char *, unsigned long *, struct printf_spec, const char *);
1017:	static char *bitmap_string(char *, char *, unsigned long *, struct printf_spec, const char *);
1675:	static char *clock(char *, char *, struct clk *, struct printf_spec, const char *);
1594:	static char *date_str(char *, char *, const struct rtc_time *, bool);
659:	static int debug_boot_weak_hash_enable(char *);
746:	static char *dentry_name(char *, char *, const struct dentry *, struct printf_spec, const char *);
1778:	static char *device_node_string(char *, char *, struct printf_spec, const char *, struct device_node *);
670:	static void enable_ptr_key_workfn(struct work_struct *);
1404:	static char *escaped_string(char *, char *, u8 *, struct printf_spec, const char *);
679:	static void fill_random_ptr_key(struct random_ready_callback *);
1720:	static char *flags_string(char *, char *, void *, const char *);
2127:	static int format_decode(const char *, struct printf_spec *);
965:	static char *hex_string(char *, char *, u8 *, struct printf_spec, const char *);
689:	static int initialize_ptr_random(void);
1296:	static char *ip4_addr_string(char *, char *, const u8 *, struct printf_spec, const char *);
1369:	static char *ip4_addr_string_sa(char *, char *, const struct sockaddr_in *, struct printf_spec, const char *);
1133:	static char *ip4_string(char *, const u8 *, const char *);
1282:	static char *ip6_addr_string(char *, char *, const u8 *, struct printf_spec, const char *);
1307:	static char *ip6_addr_string_sa(char *, char *, const struct sockaddr_in6 *, struct printf_spec, const char *);
1183:	static char *ip6_compressed_string(char *, const char *);
1266:	static char *ip6_string(char *, const char *, const char *);
1095:	static char *mac_address_string(char *, char *, u8 *, struct printf_spec, const char *);
1554:	static char *netdev_bits(char *, char *, const void *, struct printf_spec, const char *);
438:	static char *number(char *, char *, unsigned long long, struct printf_spec);
1980:	static char *pointer(const char *, char *, char *, void *, struct printf_spec);
643:	static char *pointer_string(char *, char *, const void *, struct printf_spec);
714:	static char *ptr_to_id(char *, char *, const void *, struct printf_spec);
277:	static char *put_dec(char *, unsigned long long);
251:	static char *put_dec_full8(char *, unsigned int);
209:	static char *put_dec_trunc8(char *, unsigned int);
867:	static char *resource_string(char *, char *, struct resource *, struct printf_spec, const char *);
1507:	static char *restricted_pointer(char *, char *, const void *, struct printf_spec);
1629:	static char *rtc_str(char *, char *, const struct rtc_time *, const char *);
2304:	static void set_field_width(struct printf_spec *, int);
2313:	static void set_precision(struct printf_spec *, int);
51:	static unsigned long long simple_strntoull(const char *, size_t, char **, unsigned int);
151:	static int skip_atoi(const char **);
561:	static char *special_hex_number(char *, char *, unsigned long long, int);
622:	static char *string(char *, char *, const char *, struct printf_spec);
810:	static char *symbol_string(char *, char *, void *, struct printf_spec, const char *);
1663:	static char *time_and_date(char *, char *, void *, struct printf_spec, const char *);
1613:	static char *time_str(char *, char *, const struct rtc_time *, bool);
1464:	static char *uuid_string(char *, char *, const u8 *, struct printf_spec, const char *);
601:	static char *widen_string(char *, int, char *, struct printf_spec);

File lib/win_minmax.c:
67:	u32 minmax_running_max(struct minmax *, u32, u32, u32);
85:	u32 minmax_running_min(struct minmax *, u32, u32, u32);
29:	static u32 minmax_subwin_update(struct minmax *, u32, const struct minmax_sample *);

File lib/xxhash.c:
102:	uint32_t xxh32(const void *, const size_t, const uint32_t);
79:	void xxh32_copy_state(struct xxh32_state *, const struct xxh32_state *);
339:	uint32_t xxh32_digest(const struct xxh32_state *);
242:	void xxh32_reset(struct xxh32_state *, const uint32_t);
270:	int xxh32_update(struct xxh32_state *, const void *, const size_t);
172:	uint64_t xxh64(const void *, const size_t, const uint64_t);
85:	void xxh64_copy_state(struct xxh64_state *, const struct xxh64_state *);
444:	uint64_t xxh64_digest(const struct xxh64_state *);
256:	void xxh64_reset(struct xxh64_state *, const uint64_t);
377:	int xxh64_update(struct xxh64_state *, const void *, const size_t);

File lib/xz/xz_dec_bcj.c:
527:	struct xz_dec_bcj *xz_dec_bcj_create(bool);
536:	enum xz_ret xz_dec_bcj_reset(struct xz_dec_bcj *, uint8_t);
417:	enum xz_ret xz_dec_bcj_run(struct xz_dec_bcj *, struct xz_dec_lzma2 *, struct xz_buf *);
345:	static void bcj_apply(struct xz_dec_bcj *, uint8_t *, size_t *, size_t);
399:	static void bcj_flush(struct xz_dec_bcj *, struct xz_buf *);

File lib/xz/xz_dec_lzma2.c:
1108:	struct xz_dec_lzma2 *xz_dec_lzma2_create(enum xz_mode, uint32_t);
1169:	void xz_dec_lzma2_end(struct xz_dec_lzma2 *);
1132:	enum xz_ret xz_dec_lzma2_reset(struct xz_dec_lzma2 *, uint8_t);
931:	enum xz_ret xz_dec_lzma2_run(struct xz_dec_lzma2 *, struct xz_buf *);
346:	static bool dict_repeat(struct dictionary *, uint32_t *, uint32_t);
619:	static void lzma_len(struct xz_dec_lzma2 *, struct lzma_len_dec *, uint32_t);
722:	static bool lzma_main(struct xz_dec_lzma2 *);

File lib/xz/xz_dec_stream.c:
828:	void xz_dec_end(struct xz_dec *);
786:	struct xz_dec *xz_dec_init(enum xz_mode, uint32_t);
816:	void xz_dec_reset(struct xz_dec *);
750:	enum xz_ret xz_dec_run(struct xz_dec *, struct xz_buf *);
175:	static enum xz_ret dec_vli(const uint8_t *, size_t *, size_t, struct xz_dec *, struct xz_dec *);
157:	static bool fill_temp(struct xz_dec *, struct xz_buf *);
281:	static void index_update(struct xz_dec *, const struct xz_buf *, const struct xz_buf *);

File lib/zlib_deflate/deflate.c:
327:	int zlib_deflate(z_streamp, int);
465:	int zlib_deflateEnd(z_streamp);
167:	int zlib_deflateInit2(z_streamp, int, int, int, int, int);
253:	int zlib_deflateReset(z_streamp);
1123:	int zlib_deflate_workspacesize(int, int);
912:	static block_state deflate_fast(deflate_state *, int);
1006:	static block_state deflate_slow(deflate_state *, int);
853:	static block_state deflate_stored(deflate_state *, int);
733:	static void fill_window(deflate_state *);
303:	static void flush_pending(z_streamp);
554:	static uInt longest_match(deflate_state *, IPos);

File lib/zlib_deflate/deftree.c:
829:	void zlib_tr_align(deflate_state *);
856:	ulg zlib_tr_flush_block(deflate_state *, char *, ulg, int);
295:	void zlib_tr_init(deflate_state *);
792:	void zlib_tr_stored_block(deflate_state *, char *, ulg, int);
808:	void zlib_tr_stored_type_only(deflate_state *);
969:	int zlib_tr_tally(deflate_state *, unsigned int, unsigned int);
538:	static void build_tree(deflate_state *, tree_desc *);
1018:	static void compress_block(deflate_state *, ct_data *, ct_data *);
495:	static void gen_codes(ct_data *, int, ush *);
371:	static void pqdownheap(deflate_state *, ct_data *, int);
626:	static void scan_tree(deflate_state *, ct_data *, int);
672:	static void send_tree(deflate_state *, ct_data *, int);

File lib/zlib_inflate/inffast.c:
67:	void inflate_fast(z_streamp, unsigned int);

File lib/zlib_inflate/inflate.c:
317:	int zlib_inflate(z_streamp, int);
742:	int zlib_inflateEnd(z_streamp);
757:	int zlib_inflateIncomp(z_stream *);
48:	int zlib_inflateInit2(z_streamp, int);
23:	int zlib_inflateReset(z_streamp);
18:	int zlib_inflate_workspacesize(void);
101:	static void zlib_updatewindow(z_streamp, unsigned int);

File lib/zlib_inflate/inftrees.c:
23:	int zlib_inflate_table(codetype, unsigned short *, unsigned int, code **, unsigned int *, unsigned short *);

File lib/zlib_inflate/infutil.c:
9:	int zlib_inflate_blob(void *, unsigned int, const void *, unsigned int);

File lib/zstd/compress.c:
90:	size_t ZSTD_CCtxWorkspaceBound(ZSTD_compressionParameters);
2845:	size_t ZSTD_CDictWorkspaceBound(ZSTD_compressionParameters);
3023:	size_t ZSTD_CStreamInSize(void);
3024:	size_t ZSTD_CStreamOutSize(void);
2973:	size_t ZSTD_CStreamWorkspaceBound(ZSTD_compressionParameters);
180:	ZSTD_compressionParameters ZSTD_adjustCParams(ZSTD_compressionParameters, unsigned long long, size_t);
148:	size_t ZSTD_checkCParams(ZSTD_compressionParameters);
2760:	size_t ZSTD_compressBegin(ZSTD_CCtx *, int);
2747:	size_t ZSTD_compressBegin_advanced(ZSTD_CCtx *, const void *, size_t, ZSTD_parameters, unsigned long long);
2914:	size_t ZSTD_compressBegin_usingCDict(ZSTD_CCtx *, const ZSTD_CDict *, unsigned long long);
2754:	size_t ZSTD_compressBegin_usingDict(ZSTD_CCtx *, const void *, size_t, int);
2546:	size_t ZSTD_compressBlock(ZSTD_CCtx *, void *, size_t, const void *, size_t);
2252:	void ZSTD_compressBlock_greedy_extDict(ZSTD_CCtx *, const void *, size_t);
38:	size_t ZSTD_compressBound(size_t);
2831:	size_t ZSTD_compressCCtx(ZSTD_CCtx *, void *, size_t, const void *, size_t, ZSTD_parameters);
2539:	size_t ZSTD_compressContinue(ZSTD_CCtx *, void *, size_t, const void *, size_t);
2806:	size_t ZSTD_compressEnd(ZSTD_CCtx *, void *, size_t, const void *, size_t);
3222:	size_t ZSTD_compressStream(ZSTD_CStream *, ZSTD_outBuffer *, ZSTD_inBuffer *);
2930:	size_t ZSTD_compress_usingCDict(ZSTD_CCtx *, void *, size_t, const void *, size_t, const ZSTD_CDict *);
2825:	size_t ZSTD_compress_usingDict(ZSTD_CCtx *, void *, size_t, const void *, size_t, const void *, size_t, ZSTD_parameters);
348:	size_t ZSTD_copyCCtx(ZSTD_CCtx *, const ZSTD_CCtx *, unsigned long long);
2982:	ZSTD_CStream *ZSTD_createCStream_advanced(ZSTD_customMem);
3250:	size_t ZSTD_endStream(ZSTD_CStream *, ZSTD_outBuffer *);
3237:	size_t ZSTD_flushStream(ZSTD_CStream *, ZSTD_outBuffer *);
132:	size_t ZSTD_freeCCtx(ZSTD_CCtx *);
2899:	size_t ZSTD_freeCDict(ZSTD_CDict *);
3002:	size_t ZSTD_freeCStream(ZSTD_CStream *);
2544:	size_t ZSTD_getBlockSizeMax(ZSTD_CCtx *);
3410:	ZSTD_compressionParameters ZSTD_getCParams(int, unsigned long long, size_t);
3436:	ZSTD_parameters ZSTD_getParams(int, unsigned long long, size_t);
141:	const seqStore_t *ZSTD_getSeqStore(const ZSTD_CCtx *);
122:	ZSTD_CCtx *ZSTD_initCCtx(void *, size_t);
2893:	ZSTD_CDict *ZSTD_initCDict(const void *, size_t, ZSTD_parameters, void *, size_t);
3092:	ZSTD_CStream *ZSTD_initCStream(ZSTD_parameters, unsigned long long, void *, size_t);
3105:	ZSTD_CStream *ZSTD_initCStream_usingCDict(const ZSTD_CDict *, unsigned long long, void *, size_t);
337:	void ZSTD_invalidateRepCodes(ZSTD_CCtx *);
3294:	int ZSTD_maxCLevel(void);
434:	size_t ZSTD_noCompressBlock(void *, size_t, const void *, size_t);
3047:	size_t ZSTD_resetCStream(ZSTD_CStream *, unsigned long long);
563:	void ZSTD_seqToCodes(const seqStore_t *);
1735:	static size_t ZSTD_BtFindBestMatch(ZSTD_CCtx *, const BYTE * const, const BYTE * const, size_t *, const U32, const U32);
1766:	static size_t ZSTD_BtFindBestMatch_extDict(ZSTD_CCtx *, const BYTE * const, const BYTE * const, size_t *, const U32, const U32);
2049:	static void ZSTD_compressBlock_btlazy2(ZSTD_CCtx *, const void *, size_t);
2264:	static void ZSTD_compressBlock_btlazy2_extDict(ZSTD_CCtx *, const void *, size_t);
2272:	static void ZSTD_compressBlock_btopt(ZSTD_CCtx *, const void *, size_t);
2284:	static void ZSTD_compressBlock_btopt2(ZSTD_CCtx *, const void *, size_t);
2308:	static void ZSTD_compressBlock_btopt2_extDict(ZSTD_CCtx *, const void *, size_t);
2296:	static void ZSTD_compressBlock_btopt_extDict(ZSTD_CCtx *, const void *, size_t);
1383:	static void ZSTD_compressBlock_doubleFast(ZSTD_CCtx *, const void *, size_t);
1543:	static void ZSTD_compressBlock_doubleFast_extDict(ZSTD_CCtx *, const void *, size_t);
1395:	static void ZSTD_compressBlock_doubleFast_extDict_generic(ZSTD_CCtx *, const void *, size_t, const U32);
1104:	static void ZSTD_compressBlock_fast(ZSTD_CCtx *, const void *, size_t);
1220:	static void ZSTD_compressBlock_fast_extDict(ZSTD_CCtx *, const void *, size_t);
1116:	static void ZSTD_compressBlock_fast_extDict_generic(ZSTD_CCtx *, const void *, size_t, const U32);
2055:	static void ZSTD_compressBlock_greedy(ZSTD_CCtx *, const void *, size_t);
2053:	static void ZSTD_compressBlock_lazy(ZSTD_CCtx *, const void *, size_t);
2051:	static void ZSTD_compressBlock_lazy2(ZSTD_CCtx *, const void *, size_t);
2259:	static void ZSTD_compressBlock_lazy2_extDict(ZSTD_CCtx *, const void *, size_t);
2254:	static void ZSTD_compressBlock_lazy_extDict(ZSTD_CCtx *, const void *, size_t);
2490:	static size_t ZSTD_compressContinue_internal(ZSTD_CCtx *, void *, size_t, const void *, size_t, U32, U32);
586:	static size_t ZSTD_compressSequences_internal(ZSTD_CCtx *, void *, size_t);
3129:	static size_t ZSTD_compressStream_generic(ZSTD_CStream *, void *, size_t *, const void *, size_t *, const ZSTD_flush_e);
907:	static size_t ZSTD_count(const BYTE *, const BYTE *, const BYTE * const);
940:	static size_t ZSTD_count_2segments(const BYTE *, const BYTE *, const BYTE *, const BYTE *, const BYTE *);
2847:	static ZSTD_CDict *ZSTD_createCDict_advanced(const void *, size_t, unsigned int, ZSTD_parameters, ZSTD_customMem);
976:	static size_t ZSTD_hashPtr(const void *, U32, U32);
1561:	static U32 ZSTD_insertBt1(ZSTD_CCtx *, const BYTE * const, const U32, const BYTE * const, U32, U32);
2557:	static size_t ZSTD_loadDictionaryContent(ZSTD_CCtx *, const void *, size_t);
2626:	static size_t ZSTD_loadZstdDictionary(ZSTD_CCtx *, const void *, size_t);
443:	static size_t ZSTD_noCompressLiterals(void *, size_t, const void *, size_t);
242:	static size_t ZSTD_resetCCtx_advanced(ZSTD_CCtx *, ZSTD_parameters, U64, const ZSTD_compResetPolicy_e);
3026:	static size_t ZSTD_resetCStream_internal(ZSTD_CStream *, unsigned long long);
861:	static void ZSTD_storeSeq(seqStore_t *, size_t, const void *, U32, size_t);
1724:	static void ZSTD_updateTree(ZSTD_CCtx *, const BYTE * const, const BYTE * const, const U32, const U32);
2431:	static size_t ZSTD_writeFrameHeader(void *, size_t, U64, U32);

File lib/zstd/decompress.c:
104:	size_t ZSTD_DCtxWorkspaceBound(void);
1988:	size_t ZSTD_DDictWorkspaceBound(void);
2276:	size_t ZSTD_DStreamInSize(void);
2277:	size_t ZSTD_DStreamOutSize(void);
2183:	size_t ZSTD_DStreamWorkspaceBound(size_t);
155:	void ZSTD_copyDCtx(ZSTD_DCtx *, const ZSTD_DCtx *);
126:	ZSTD_DCtx *ZSTD_createDCtx_advanced(ZSTD_customMem);
432:	size_t ZSTD_decodeLiteralsBlock(ZSTD_DCtx *, const void *, size_t);
794:	size_t ZSTD_decodeSeqHeaders(ZSTD_DCtx *, int *, const void *, size_t);
106:	size_t ZSTD_decompressBegin(ZSTD_DCtx *);
1968:	size_t ZSTD_decompressBegin_usingDict(ZSTD_DCtx *, const void *, size_t);
1479:	size_t ZSTD_decompressBlock(ZSTD_DCtx *, void *, size_t, const void *, size_t);
1743:	size_t ZSTD_decompressContinue(ZSTD_DCtx *, void *, size_t, const void *, size_t);
1712:	size_t ZSTD_decompressDCtx(ZSTD_DCtx *, void *, size_t, const void *, size_t);
2297:	size_t ZSTD_decompressStream(ZSTD_DStream *, ZSTD_outBuffer *, ZSTD_inBuffer *);
2146:	size_t ZSTD_decompress_usingDDict(ZSTD_DCtx *, void *, size_t, const void *, size_t, const ZSTD_DDict *);
1707:	size_t ZSTD_decompress_usingDict(ZSTD_DCtx *, void *, size_t, const void *, size_t, const void *, size_t);
319:	unsigned long long ZSTD_findDecompressedSize(const void *, size_t);
1510:	size_t ZSTD_findFrameCompressedSize(const void *, size_t);
147:	size_t ZSTD_freeDCtx(ZSTD_DCtx *);
2088:	size_t ZSTD_freeDDict(ZSTD_DDict *);
2255:	size_t ZSTD_freeDStream(ZSTD_DStream *);
1497:	size_t ZSTD_generateNxBytes(void *, size_t, BYTE, size_t);
2117:	unsigned int ZSTD_getDictID_fromDDict(const ZSTD_DDict *);
2104:	unsigned int ZSTD_getDictID_fromDict(const void *, size_t);
2134:	unsigned int ZSTD_getDictID_fromFrame(const void *, size_t);
297:	unsigned long long ZSTD_getFrameContentSize(const void *, size_t);
207:	size_t ZSTD_getFrameParams(ZSTD_frameParams *, const void *, size_t);
394:	size_t ZSTD_getcBlockSize(const void *, size_t, blockProperties_t *);
141:	ZSTD_DCtx *ZSTD_initDCtx(void *, size_t);
2082:	ZSTD_DDict *ZSTD_initDDict(const void *, size_t, void *, size_t);
2213:	ZSTD_DStream *ZSTD_initDStream(size_t, void *, size_t);
2246:	ZSTD_DStream *ZSTD_initDStream_usingDDict(size_t, const ZSTD_DDict *, void *, size_t);
1490:	size_t ZSTD_insertBlock(ZSTD_DCtx *, const void *, size_t);
172:	unsigned int ZSTD_isFrame(const void *, size_t);
1738:	int ZSTD_isSkipFrame(ZSTD_DCtx *);
1723:	ZSTD_nextInputType_e ZSTD_nextInputType(ZSTD_DCtx *);
1721:	size_t ZSTD_nextSrcSizeToDecompress(ZSTD_DCtx *);
2279:	size_t ZSTD_resetDStream(ZSTD_DStream *);
1093:	static size_t ZSTD_decompressSequences(ZSTD_DCtx *, void *, size_t, const void *, size_t);
1348:	static size_t ZSTD_decompressSequencesLong(ZSTD_DCtx *, void *, size_t, const void *, size_t);
880:	static size_t ZSTD_execSequenceLast7(BYTE *, BYTE * const, const BYTE **, const BYTE * const, const BYTE * const, const BYTE * const, const BYTE * const);
1873:	static size_t ZSTD_loadEntropy(ZSTD_entropyTables_t *, const void * const, const size_t);

File lib/zstd/entropy_common.c:
52:	unsigned int FSE_isError(size_t);
59:	size_t FSE_readNCount(short *, unsigned int *, unsigned int *, const void *, size_t);
49:	unsigned int FSE_versionNumber(void);
167:	size_t HUF_readStats_wksp(BYTE *, size_t, U32 *, U32 *, U32 *, const void *, size_t, void *, size_t);

File lib/zstd/fse_compress.c:
197:	size_t FSE_NCountWriteBound(unsigned int, unsigned int);
666:	size_t FSE_buildCTable_raw(FSE_CTable *, unsigned int);
702:	size_t FSE_buildCTable_rle(FSE_CTable *, BYTE);
92:	size_t FSE_buildCTable_wksp(FSE_CTable *, const short *, unsigned int, unsigned int, void *, size_t);
795:	size_t FSE_compressBound(size_t);
785:	size_t FSE_compress_usingCTable(void *, size_t, const void *, size_t, const FSE_CTable *);
448:	size_t FSE_countFast_wksp(unsigned int *, unsigned int *, const void *, size_t, unsigned int *);
324:	size_t FSE_count_simple(unsigned int *, unsigned int *, const void *, size_t);
458:	size_t FSE_count_wksp(unsigned int *, unsigned int *, const void *, size_t, unsigned int *);
608:	size_t FSE_normalizeCount(short *, unsigned int, const unsigned int *, size_t, unsigned int);
511:	unsigned int FSE_optimalTableLog(unsigned int, size_t, unsigned int);
493:	unsigned int FSE_optimalTableLog_internal(unsigned int, size_t, unsigned int, unsigned int);
477:	size_t FSE_sizeof_CTable(unsigned int, unsigned int);
301:	size_t FSE_writeNCount(void *, size_t, const short *, unsigned int, unsigned int);
724:	static size_t FSE_compress_usingCTable_generic(void *, size_t, const void *, size_t, const FSE_CTable *, const unsigned int);

File lib/zstd/fse_decompress.c:
187:	size_t FSE_buildDTable_raw(FSE_DTable *, unsigned int);
170:	size_t FSE_buildDTable_rle(FSE_DTable *, BYTE);
95:	size_t FSE_buildDTable_wksp(FSE_DTable *, const short *, unsigned int, unsigned int, void *, size_t);
282:	size_t FSE_decompress_usingDTable(void *, size_t, const void *, size_t, const FSE_DTable *);
294:	size_t FSE_decompress_wksp(void *, size_t, const void *, size_t, unsigned int, void *, size_t);

File lib/zstd/huf_compress.c:
420:	size_t HUF_buildCTable_wksp(HUF_CElt *, const U32 *, U32, U32, void *, size_t);
752:	size_t HUF_compress1X_repeat(void *, size_t, const void *, size_t, unsigned int, unsigned int, void *, size_t, HUF_CElt *, HUF_repeat *, int);
538:	size_t HUF_compress1X_usingCTable(void *, size_t, const void *, size_t, const HUF_CElt *);
746:	size_t HUF_compress1X_wksp(void *, size_t, const void *, size_t, unsigned int, unsigned int, void *, size_t);
765:	size_t HUF_compress4X_repeat(void *, size_t, const void *, size_t, unsigned int, unsigned int, void *, size_t, HUF_CElt *, HUF_repeat *, int);
579:	size_t HUF_compress4X_usingCTable(void *, size_t, const void *, size_t, const HUF_CElt *);
759:	size_t HUF_compress4X_wksp(void *, size_t, const void *, size_t, unsigned int, unsigned int, void *, size_t);
526:	size_t HUF_compressBound(size_t);
82:	size_t HUF_compressWeights_wksp(void *, size_t, const void *, size_t, void *, size_t);
68:	unsigned int HUF_optimalTableLog(unsigned int, size_t, unsigned int);
203:	size_t HUF_readCTable_wksp(HUF_CElt *, U32, const void *, size_t, void *, size_t);
152:	size_t HUF_writeCTable_wksp(void *, size_t, const HUF_CElt *, U32, U32, void *, size_t);
631:	static size_t HUF_compressCTable_internal(BYTE * const, BYTE *, BYTE * const, const void *, size_t, unsigned int, const HUF_CElt *);
290:	static U32 HUF_setMaxHeight(nodeElt *, U32, U32);
389:	static void HUF_sort(nodeElt *, const U32 *, U32);

File lib/zstd/huf_decompress.c:
232:	size_t HUF_decompress1X2_DCtx_wksp(HUF_DTable *, void *, size_t, const void *, size_t, void *, size_t);
224:	size_t HUF_decompress1X2_usingDTable(void *, size_t, const void *, size_t, const HUF_DTable *);
692:	size_t HUF_decompress1X4_DCtx_wksp(HUF_DTable *, void *, size_t, const void *, size_t, void *, size_t);
684:	size_t HUF_decompress1X4_usingDTable(void *, size_t, const void *, size_t, const HUF_DTable *);
939:	size_t HUF_decompress1X_DCtx_wksp(HUF_DTable *, void *, size_t, const void *, size_t, void *, size_t);
844:	size_t HUF_decompress1X_usingDTable(void *, size_t, const void *, size_t, const HUF_DTable *);
363:	size_t HUF_decompress4X2_DCtx_wksp(HUF_DTable *, void *, size_t, const void *, size_t, void *, size_t);
355:	size_t HUF_decompress4X2_usingDTable(void *, size_t, const void *, size_t, const HUF_DTable *);
825:	size_t HUF_decompress4X4_DCtx_wksp(HUF_DTable *, void *, size_t, const void *, size_t, void *, size_t);
817:	size_t HUF_decompress4X4_usingDTable(void *, size_t, const void *, size_t, const HUF_DTable *);
901:	size_t HUF_decompress4X_DCtx_wksp(HUF_DTable *, void *, size_t, const void *, size_t, void *, size_t);
924:	size_t HUF_decompress4X_hufOnly_wksp(HUF_DTable *, void *, size_t, const void *, size_t, void *, size_t);
851:	size_t HUF_decompress4X_usingDTable(void *, size_t, const void *, size_t, const HUF_DTable *);
90:	size_t HUF_readDTableX2_wksp(HUF_DTable *, const void *, size_t, void *, size_t);
482:	size_t HUF_readDTableX4_wksp(HUF_DTable *, const void *, size_t, void *, size_t);
887:	U32 HUF_selectDecoder(size_t, size_t);
603:	static U32 HUF_decodeLastSymbolX4(void *, BIT_DStream_t *, const HUF_DEltX4 *, const U32);
199:	static size_t HUF_decompress1X2_usingDTable_internal(void *, size_t, const void *, size_t, const HUF_DTable *);
655:	static size_t HUF_decompress1X4_usingDTable_internal(void *, size_t, const void *, size_t, const HUF_DTable *);
247:	static size_t HUF_decompress4X2_usingDTable_internal(void *, size_t, const void *, size_t, const HUF_DTable *);
707:	static size_t HUF_decompress4X4_usingDTable_internal(void *, size_t, const void *, size_t, const HUF_DTable *);
394:	static void HUF_fillDTableX4Level2(HUF_DEltX4 *, U32, const U32, const U32 *, const int, const sortedSymbol_t *, const U32, U32, U16);

File lib/zstd/zstd_common.c:
71:	void ZSTD_free(void *, ZSTD_customMem);
35:	ZSTD_customMem ZSTD_initStack(void *, size_t);
69:	void *ZSTD_malloc(size_t, ZSTD_customMem);
58:	void *ZSTD_stackAlloc(void *, size_t);
51:	void *ZSTD_stackAllocAll(void *, size_t *);
63:	void ZSTD_stackFree(void *, void *);

File lib/zstd/zstd_opt.h:
365:	static U32 ZSTD_BtGetAllMatches_selectMLS(ZSTD_CCtx *, const BYTE *, const BYTE * const, const U32, const U32, ZSTD_match_t *, const U32);
389:	static U32 ZSTD_BtGetAllMatches_selectMLS_extDict(ZSTD_CCtx *, const BYTE *, const BYTE * const, const U32, const U32, ZSTD_match_t *, const U32);
235:	static U32 ZSTD_insertBtAndGetAllMatches(ZSTD_CCtx *, const BYTE * const, const BYTE * const, U32, const U32, U32, ZSTD_match_t *, const U32);
38:	static void ZSTD_rescaleFreqs(seqStore_t *, const BYTE *, size_t);

File mm/backing-dev.c:
858:	struct backing_dev_info *bdi_alloc_node(gfp_t, int);
1011:	void bdi_put(struct backing_dev_info *);
929:	int bdi_register(struct backing_dev_info *, const char *, ...);
941:	int bdi_register_owner(struct backing_dev_info *, struct device *);
882:	int bdi_register_va(struct backing_dev_info *, const char *, struct __va_list_tag *);
974:	void bdi_unregister(struct backing_dev_info *);
1023:	void clear_wb_congested(struct bdi_writeback_congested *, int);
1056:	long congestion_wait(int, long);
1037:	void set_wb_congested(struct bdi_writeback_congested *, int);
1087:	long wait_iff_congested(int, long);
752:	void wb_blkcg_offline(struct blkcg *);
415:	struct bdi_writeback_congested *wb_congested_get_create(struct backing_dev_info *, int, gfp_t);
472:	void wb_congested_put(struct bdi_writeback_congested *);
654:	struct bdi_writeback *wb_get_create(struct backing_dev_info *, struct cgroup_subsys_state *, gfp_t);
734:	void wb_memcg_offline(struct mem_cgroup *);
277:	void wb_wakeup_delayed(struct bdi_writeback *);
233:	static int bdi_class_init(void);
103:	static int bdi_debug_stats_open(struct inode *, struct file *);
44:	static int bdi_debug_stats_show(struct seq_file *, void *);
875:	static void bdi_device_release(struct device *);
968:	static void bdi_put_device_rcu(struct callback_head *);
685:	static int cgwb_bdi_init(struct backing_dev_info *);
785:	static int cgwb_init(void);
519:	static void cgwb_kill(struct bdi_writeback *);
512:	static void cgwb_release(struct percpu_ref *);
490:	static void cgwb_release_workfn(struct work_struct *);
248:	static int default_bdi_init(void);
211:	static ssize_t max_ratio_show(struct device *, struct device_attribute *, char *);
194:	static ssize_t max_ratio_store(struct device *, struct device_attribute *, const char *, size_t);
192:	static ssize_t min_ratio_show(struct device *, struct device_attribute *, char *);
175:	static ssize_t min_ratio_store(struct device *, struct device_attribute *, const char *, size_t);
173:	static ssize_t read_ahead_kb_show(struct device *, struct device_attribute *, char *);
144:	static ssize_t read_ahead_kb_store(struct device *, struct device_attribute *, const char *, size_t);
998:	static void release_bdi(struct kref *);
213:	static ssize_t stable_pages_required_show(struct device *, struct device_attribute *, char *);
377:	static void wb_exit(struct bdi_writeback *);
293:	static int wb_init(struct bdi_writeback *, struct backing_dev_info *, int, gfp_t);
356:	static void wb_shutdown(struct bdi_writeback *);

File mm/balloon_compaction.c:
22:	struct page *balloon_page_alloc(void);
71:	struct page *balloon_page_dequeue(struct balloon_dev_info *);
41:	void balloon_page_enqueue(struct balloon_dev_info *, struct page *);
123:	bool balloon_page_isolate(struct page *, isolate_mode_t);
150:	int balloon_page_migrate(struct address_space *, struct page *, struct page *, enum migrate_mode);
137:	void balloon_page_putback(struct page *);

File mm/cleancache.c:
177:	int __cleancache_get_page(struct page *);
114:	void __cleancache_init_fs(struct super_block *);
128:	void __cleancache_init_shared_fs(struct super_block *);
292:	void __cleancache_invalidate_fs(struct super_block *);
274:	void __cleancache_invalidate_inode(struct address_space *);
244:	void __cleancache_invalidate_page(struct address_space *, struct page *);
216:	void __cleancache_put_page(struct page *);
52:	int cleancache_register_ops(const struct cleancache_ops *);
145:	static int cleancache_get_key(struct inode *, struct cleancache_filekey *);
37:	static void cleancache_register_ops_sb(struct super_block *, void *);
304:	static int init_cleancache(void);

File mm/compaction.c:
95:	int PageMovable(struct page *);
119:	void __ClearPageMovable(struct page *);
111:	void __SetPageMovable(struct page *, struct address_space *);
180:	void compaction_defer_reset(struct zone *, int, bool);
156:	bool compaction_deferred(struct zone *, int);
1907:	int compaction_register_node(struct node *);
194:	bool compaction_restarting(struct zone *, int);
1470:	enum compact_result compaction_suitable(struct zone *, int, unsigned int, int);
1912:	void compaction_unregister_node(struct node *);
1508:	bool compaction_zonelist_suitable(struct alloc_context *, int, int);
141:	void defer_compaction(struct zone *, int);
592:	unsigned long isolate_freepages_range(struct compact_control *, unsigned long, unsigned long);
976:	unsigned long isolate_migratepages_range(struct compact_control *, unsigned long, unsigned long);
2080:	int kcompactd_run(int);
2101:	void kcompactd_stop(int);
272:	void reset_isolation_suitable(pg_data_t *);
1872:	int sysctl_compaction_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
1881:	int sysctl_extfrag_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
1754:	enum compact_result try_to_compact_pages(gfp_t, unsigned int, unsigned int, const struct alloc_context *, enum compact_priority);
2020:	void wakeup_kcompactd(pg_data_t *, int, int);
1427:	static enum compact_result __compaction_suitable(struct zone *, int, unsigned int, int, unsigned long);
244:	static void __reset_isolation_suitable(struct zone *);
1824:	static void compact_node(int);
350:	static bool compact_trylock_irqsave(spinlock_t *, unsigned long *, struct compact_control *, struct compact_control *);
380:	static bool compact_unlock_should_abort(spinlock_t *, unsigned long, bool *, struct compact_control *, struct compact_control *);
1540:	static enum compact_result compact_zone(struct zone *, struct compact_control *);
1715:	static enum compact_result compact_zone_order(struct zone *, int, gfp_t, enum compact_priority, unsigned int, int);
1172:	static struct page *compaction_alloc(struct page *, unsigned long);
1202:	static void compaction_free(struct page *, unsigned long);
433:	static unsigned long isolate_freepages_block(struct compact_control *, unsigned long *, unsigned long, struct list_head *, bool);
692:	static unsigned long isolate_migratepages_block(struct compact_control *, unsigned long, unsigned long, isolate_mode_t);
2050:	static int kcompactd(void *);
2117:	static int kcompactd_cpu_online(unsigned int);
1943:	static void kcompactd_do_work(pg_data_t *);
2134:	static int kcompactd_init(void);
68:	static void map_pages(struct list_head *);
52:	static unsigned long release_freepages(struct list_head *);
1890:	static ssize_t sysfs_compact_node(struct device *, struct device_attribute *, const char *, size_t);
291:	static void update_pageblock_skip(struct compact_control *, struct page *, unsigned long, bool);

File mm/debug.c:
44:	void __dump_page(struct page *, const char *);
90:	void dump_page(struct page *, const char *);

File mm/dmapool.c:
320:	void *dma_pool_alloc(struct dma_pool *, gfp_t, dma_addr_t *);
131:	struct dma_pool *dma_pool_create(const char *, struct device *, size_t, size_t, size_t);
270:	void dma_pool_destroy(struct dma_pool *);
411:	void dma_pool_free(struct dma_pool *, void *, dma_addr_t);
502:	struct dma_pool *dmam_pool_create(const char *, struct device *, size_t, size_t, size_t);
527:	void dmam_pool_destroy(struct dma_pool *);
486:	static int dmam_pool_match(struct device *, void *, void *);
479:	static void dmam_pool_release(struct device *, void *);
68:	static ssize_t show_pools(struct device *, struct device_attribute *, char *);

File mm/early_ioremap.c:
254:	void copy_from_early_mem(void *, phys_addr_t, unsigned long);
217:	void *early_ioremap(resource_size_t, unsigned long);
45:	void early_ioremap_reset(void);
75:	void early_ioremap_setup(void);
41:	void early_ioremap_shutdown(void);
168:	void early_iounmap(void *, unsigned long);
224:	void *early_memremap(resource_size_t, unsigned long);
34:	pgprot_t early_memremap_pgprot_adjust(resource_size_t, unsigned long, pgprot_t);
244:	void *early_memremap_prot(resource_size_t, unsigned long, unsigned long);
233:	void *early_memremap_ro(resource_size_t, unsigned long);
300:	void early_memunmap(void *, unsigned long);
106:	static void *__early_ioremap(resource_size_t, unsigned long, pgprot_t);
87:	static int check_early_ioremap_leak(void);
24:	static int early_ioremap_debug_setup(char *);

File mm/fadvise.c:
215:	long __ia32_sys_fadvise64(const struct pt_regs *);
208:	long __ia32_sys_fadvise64_64(const struct pt_regs *);
215:	long __x64_sys_fadvise64(const struct pt_regs *);
208:	long __x64_sys_fadvise64_64(const struct pt_regs *);
30:	int generic_fadvise(struct file *, loff_t, loff_t, int);
194:	int ksys_fadvise64_64(int, loff_t, loff_t, int);
183:	int vfs_fadvise(struct file *, loff_t, loff_t, int);

File mm/filemap.c:
319:	void __delete_from_page_cache(struct page *, void *);
493:	int __filemap_fdatawrite_range(struct address_space *, loff_t, loff_t, int);
761:	void __filemap_set_wb_err(struct address_space *, int);
3337:	ssize_t __generic_file_write_iter(struct kiocb *, struct iov_iter *);
1378:	void __lock_page(struct page *);
1386:	int __lock_page_killable(struct page *);
1405:	int __lock_page_or_retry(struct page *, struct mm_struct *, unsigned int);
1040:	struct page *__page_cache_alloc(gfp_t);
1260:	void add_page_wait_queue(struct page *, wait_queue_entry_t *);
989:	int add_to_page_cache(struct page *, struct address_space *, unsigned long, gfp_t);
976:	int add_to_page_cache_locked(struct page *, struct address_space *, unsigned long, gfp_t);
1006:	int add_to_page_cache_lru(struct page *, struct address_space *, unsigned long, gfp_t);
355:	void delete_from_page_cache(struct page *);
430:	void delete_from_page_cache_batch(struct address_space *, struct pagevec *);
1324:	void end_page_writeback(struct page *);
791:	int file_check_and_advance_wb_err(struct file *);
664:	int file_fdatawait_range(struct file *, loff_t, loff_t);
833:	int file_write_and_wait_range(struct file *, loff_t, loff_t);
454:	int filemap_check_errors(struct address_space *);
2615:	vm_fault_t filemap_fault(struct vm_fault *);
685:	int filemap_fdatawait_keep_errors(struct address_space *);
620:	int filemap_fdatawait_range(struct address_space *, loff_t, loff_t);
642:	int filemap_fdatawait_range_keep_errors(struct address_space *, loff_t, loff_t);
520:	int filemap_fdatawrite(struct address_space *);
526:	int filemap_fdatawrite_range(struct address_space *, loff_t, loff_t);
540:	int filemap_flush(struct address_space *);
2736:	void filemap_map_pages(struct vm_fault *, unsigned long, unsigned long);
2821:	vm_fault_t filemap_page_mkwrite(struct vm_fault *);
555:	bool filemap_range_has_page(struct address_space *, loff_t, loff_t);
698:	int filemap_write_and_wait(struct address_space *);
736:	int filemap_write_and_wait_range(struct address_space *, loff_t, loff_t);
1735:	unsigned int find_get_entries(struct address_space *, unsigned long, unsigned int, struct page **, unsigned long *);
2070:	unsigned int find_get_entries_tag(struct address_space *, unsigned long, int, unsigned int, struct page **, unsigned long *);
1532:	struct page *find_get_entry(struct address_space *, unsigned long);
1898:	unsigned int find_get_pages_contig(struct address_space *, unsigned long, unsigned int, struct page **);
1812:	unsigned int find_get_pages_range(struct address_space *, unsigned long *, unsigned long, unsigned int, struct page **);
1977:	unsigned int find_get_pages_range_tag(struct address_space *, unsigned long *, unsigned long, int, unsigned int, struct page **);
1599:	struct page *find_lock_entry(struct address_space *, unsigned long);
3137:	ssize_t generic_file_direct_write(struct kiocb *, struct iov_iter *);
2855:	int generic_file_mmap(struct file *, struct vm_area_struct *);
2431:	ssize_t generic_file_read_iter(struct kiocb *, struct iov_iter *);
2869:	int generic_file_readonly_mmap(struct file *, struct vm_area_struct *);
3421:	ssize_t generic_file_write_iter(struct kiocb *, struct iov_iter *);
3236:	ssize_t generic_perform_write(struct file *, struct iov_iter *, loff_t);
3060:	ssize_t generic_write_checks(struct kiocb *, struct iov_iter *);
3218:	struct page *grab_cache_page_write_begin(struct address_space *, unsigned long, unsigned int);
1458:	unsigned long page_cache_next_hole(struct address_space *, unsigned long, unsigned long);
1499:	unsigned long page_cache_prev_hole(struct address_space *, unsigned long, unsigned long);
1350:	void page_endio(struct page *, bool, int);
1644:	struct page *pagecache_get_page(struct address_space *, unsigned long, int, gfp_t);
1079:	void pagecache_init(void);
3115:	int pagecache_write_begin(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page **, void **);
3126:	int pagecache_write_end(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *);
3023:	struct page *read_cache_page(struct address_space *, unsigned long, int (*)(void *, struct page *), void *);
3043:	struct page *read_cache_page_gfp(struct address_space *, unsigned long, gfp_t);
867:	int replace_page_cache_page(struct page *, struct page *, gfp_t);
3456:	int try_to_release_page(struct page *, gfp_t);
1310:	void unlock_page(struct page *);
1239:	void wait_on_page_bit(struct page *, int);
1246:	int wait_on_page_bit_killable(struct page *, int);
912:	static int __add_to_page_cache_locked(struct page *, struct address_space *, unsigned long, gfp_t, void **);
575:	static void __filemap_fdatawait_range(struct address_space *, loff_t, loff_t);
2906:	static struct page *do_read_cache_page(struct address_space *, unsigned long, int (*)(void *, struct page *), void *, gfp_t);
56:	static void free_page_ref(struct percpu_ref *);
692:	static bool mapping_needs_writeback(struct address_space *);
92:	static void page_cache_exit(struct page *);
330:	static void page_cache_free_page(struct page *, struct address_space *);
70:	static void page_cache_init(struct page *, struct address_space *);
174:	static int page_cache_tree_insert(struct address_space *, struct page *, void **);
245:	static void unaccount_page_cache_page(struct address_space *, struct page *);
1183:	static int wait_on_page_bit_common(wait_queue_head_t *, struct page *, int, int, bool);
1102:	static int wake_page_function(wait_queue_entry_t *, unsigned int, int, void *);
1122:	static void wake_up_page_bit(struct page *, int);

File mm/frame_vector.c:
201:	struct frame_vector *frame_vector_create(unsigned int);
233:	void frame_vector_destroy(struct frame_vector *);
152:	int frame_vector_to_pages(struct frame_vector *);
178:	void frame_vector_to_pfns(struct frame_vector *);
34:	int get_vaddr_frames(unsigned long, unsigned int, unsigned int, struct frame_vector *);
121:	void put_vaddr_frames(struct frame_vector *);

File mm/frontswap.c:
191:	void __frontswap_init(unsigned int, unsigned long *);
354:	void __frontswap_invalidate_area(unsigned int);
332:	void __frontswap_invalidate_page(unsigned int, unsigned long);
295:	int __frontswap_load(struct page *);
246:	int __frontswap_store(struct page *);
216:	bool __frontswap_test(struct swap_info_struct *, unsigned long);
471:	unsigned long frontswap_curr_pages(void);
114:	void frontswap_register_ops(struct frontswap_ops *);
447:	void frontswap_shrink(unsigned long);
182:	void frontswap_tmem_exclusive_gets(bool);
173:	void frontswap_writethrough(bool);
372:	static unsigned long __frontswap_curr_pages(void);
483:	static int init_frontswap(void);

File mm/gup.c:
1846:	int __get_user_pages_fast(unsigned long, int, int, struct page **);
1331:	int __mm_populate(unsigned long, unsigned long, int);
1271:	int do_mm_populate(struct mm_struct *, unsigned long, unsigned long, int);
833:	int fixup_user_fault(struct task_struct *, struct mm_struct *, unsigned long, unsigned int, bool *);
404:	struct page *follow_page_mask(struct vm_area_struct *, unsigned long, unsigned int, unsigned int *);
1351:	struct page *get_dump_page(unsigned long);
1133:	long get_user_pages(unsigned long, unsigned long, unsigned int, struct page **, struct vm_area_struct **);
1898:	int get_user_pages_fast(unsigned long, int, int, struct page **);
1018:	long get_user_pages_locked(unsigned long, unsigned long, unsigned int, struct page **, int *);
1156:	long get_user_pages_longterm(unsigned long, unsigned long, unsigned int, struct page **, struct vm_area_struct **);
1115:	long get_user_pages_remote(struct task_struct *, struct mm_struct *, unsigned long, unsigned long, unsigned int, struct page **, struct vm_area_struct **, int *);
1043:	long get_user_pages_unlocked(unsigned long, unsigned long, struct page **, unsigned int);
1226:	long populate_vma_page_range(struct vm_area_struct *, unsigned long, unsigned long, int *);
674:	static long __get_user_pages(struct task_struct *, struct mm_struct *, unsigned long, unsigned long, unsigned int, struct page **, struct vm_area_struct **, int *);
1515:	static int __gup_device_huge(unsigned long, unsigned long, unsigned long, struct page **, int *);
74:	static struct page *follow_page_pte(struct vm_area_struct *, unsigned long, pmd_t *, unsigned int);
215:	static struct page *follow_pmd_mask(struct vm_area_struct *, unsigned long, pud_t *, unsigned int, unsigned int *);
1799:	static void gup_pgd_range(unsigned long, unsigned long, int, struct page **, int *);
1411:	static void undo_dev_pagemap(int *, int, struct page **);

File mm/hmm.c:
1293:	struct hmm_device *hmm_device_new(void *);
1323:	void hmm_device_put(struct hmm_device *);
1143:	struct hmm_devmem *hmm_devmem_add(const struct hmm_devmem_ops *, struct device *, unsigned long);
1215:	struct hmm_devmem *hmm_devmem_add_resource(const struct hmm_devmem_ops *, struct device *, struct resource *);
229:	int hmm_mirror_register(struct hmm_mirror *, struct mm_struct *);
265:	void hmm_mirror_unregister(struct hmm_mirror *);
124:	void hmm_mm_destroy(struct mm_struct *);
919:	struct page *hmm_vma_alloc_locked_page(struct vm_area_struct *, unsigned long);
837:	int hmm_vma_fault(struct hmm_range *, bool);
667:	int hmm_vma_get_pfns(struct hmm_range *);
766:	bool hmm_vma_range_done(struct hmm_range *);
1281:	static void hmm_device_release(struct device *);
960:	static int hmm_devmem_fault(struct vm_area_struct *, unsigned long, const struct page *, unsigned int, pmd_t *);
971:	static void hmm_devmem_free(struct page *, void *);
1021:	static int hmm_devmem_pages_create(struct hmm_devmem *);
983:	static void hmm_devmem_radix_release(struct resource *, struct resource *);
941:	static void hmm_devmem_ref_exit(void *);
950:	static void hmm_devmem_ref_kill(void *);
933:	static void hmm_devmem_ref_release(struct percpu_ref *);
995:	static void hmm_devmem_release(void *);
1329:	static int hmm_init(void);
200:	static void hmm_invalidate_range_end(struct mmu_notifier *, struct mm_struct *, unsigned long, unsigned long);
185:	static int hmm_invalidate_range_start(struct mmu_notifier *, struct mm_struct *, unsigned long, unsigned long, bool);
413:	static void hmm_range_need_fault(const struct hmm_vma_walk *, const uint64_t *, unsigned long, uint64_t, bool *, bool *);
70:	static struct hmm *hmm_register(struct mm_struct *);
159:	static void hmm_release(struct mmu_notifier *, struct mm_struct *);
433:	static int hmm_vma_walk_hole(unsigned long, unsigned long, struct mm_walk *);
354:	static int hmm_vma_walk_hole_(unsigned long, unsigned long, bool, bool, struct mm_walk *);
573:	static int hmm_vma_walk_pmd(pmd_t *, unsigned long, unsigned long, struct mm_walk *);

File mm/huge_memory.c:
2040:	spinlock_t *__pmd_trans_huge_lock(pmd_t *, struct vm_area_struct *);
2057:	spinlock_t *__pud_trans_huge_lock(pud_t *, struct vm_area_struct *);
2343:	void __split_huge_pmd(struct vm_area_struct *, pmd_t *, unsigned long, bool, struct page *);
2110:	void __split_huge_pud(struct vm_area_struct *, pud_t *, unsigned long);
2725:	bool can_split_huge_page(struct page *, int *);
1952:	int change_huge_pmd(struct vm_area_struct *, pmd_t *, unsigned long, pgprot_t, int);
1009:	int copy_huge_pmd(struct mm_struct *, struct mm_struct *, pmd_t *, pmd_t *, unsigned long, struct vm_area_struct *);
1151:	int copy_huge_pud(struct mm_struct *, struct mm_struct *, pud_t *, pud_t *, unsigned long, struct vm_area_struct *);
2899:	void deferred_split_huge_page(struct page *);
737:	vm_fault_t do_huge_pmd_anonymous_page(struct vm_fault *);
1572:	vm_fault_t do_huge_pmd_numa_page(struct vm_fault *, pmd_t);
1350:	vm_fault_t do_huge_pmd_wp_page(struct vm_fault *, pmd_t);
964:	struct page *follow_devmap_pmd(struct vm_area_struct *, unsigned long, pmd_t *, int);
1112:	struct page *follow_devmap_pud(struct vm_area_struct *, unsigned long, pud_t *, int);
1503:	struct page *follow_trans_huge_pmd(struct vm_area_struct *, unsigned long, pmd_t *, unsigned int);
2884:	void free_transhuge_page(struct page *);
1210:	void huge_pmd_set_accessed(struct vm_fault *, pmd_t);
1188:	void huge_pud_set_accessed(struct vm_fault *, pud_t);
1722:	bool madvise_free_huge_pmd(struct mmu_gather *, struct vm_area_struct *, pmd_t *, unsigned long, unsigned long);
483:	pmd_t maybe_pmd_mkwrite(pmd_t, struct vm_area_struct *);
114:	struct page *mm_get_huge_zero_page(struct mm_struct *);
128:	void mm_put_huge_zero_page(struct mm_struct *);
1892:	bool move_huge_pmd(struct vm_area_struct *, unsigned long, unsigned long, unsigned long, pmd_t *, pmd_t *);
2690:	int page_trans_huge_mapcount(struct page *, int *);
550:	void prep_transhuge_page(struct page *);
3097:	void remove_migration_pmd(struct page_vma_mapped_walk *, struct page *);
3071:	void set_pmd_migration_entry(struct page_vma_mapped_walk *, struct page *);
201:	ssize_t single_hugepage_flag_show(struct kobject *, struct kobj_attribute *, char *, enum transparent_hugepage_flag);
209:	ssize_t single_hugepage_flag_store(struct kobject *, struct kobj_attribute *, const char *, size_t, enum transparent_hugepage_flag);
2758:	int split_huge_page_to_list(struct page *, struct list_head *);
2421:	void split_huge_pmd_address(struct vm_area_struct *, unsigned long, bool, struct page *);
597:	unsigned long thp_get_unmapped_area(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);
2643:	int total_mapcount(struct page *);
67:	bool transparent_hugepage_enabled(struct vm_area_struct *);
2446:	void vma_adjust_trans_huge(struct vm_area_struct *, unsigned long, unsigned long, long);
845:	vm_fault_t vmf_insert_pfn_pmd(struct vm_fault *, pfn_t, bool);
923:	vm_fault_t vmf_insert_pfn_pud(struct vm_fault *, pfn_t, bool);
1801:	int zap_huge_pmd(struct mmu_gather *, struct vm_area_struct *, pmd_t *, unsigned long);
2069:	int zap_huge_pud(struct mmu_gather *, struct vm_area_struct *, pud_t *, unsigned long);
2168:	static void __split_huge_pmd_locked(struct vm_area_struct *, pmd_t *, unsigned long, bool);
2937:	static unsigned long deferred_split_count(struct shrinker *, struct shrink_control *);
2953:	static unsigned long deferred_split_scan(struct shrinker *, struct shrink_control *);
231:	static ssize_t defrag_show(struct kobject *, struct kobj_attribute *, char *);
245:	static ssize_t defrag_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
1231:	static vm_fault_t do_huge_pmd_wp_page_fallback(struct vm_fault *, pmd_t, struct page *);
162:	static ssize_t enabled_show(struct kobject *, struct kobj_attribute *, char *);
173:	static ssize_t enabled_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
297:	static ssize_t hpage_pmd_size_show(struct kobject *, struct kobj_attribute *, char *);
389:	static int hugepage_init(void);
105:	static void put_huge_zero_page(void);
2502:	static void remap_page(struct page *);
721:	static bool set_huge_zero_page(pgtable_t, struct mm_struct *, pmd_t *, struct page *, unsigned long, struct vm_area_struct *);
452:	static int setup_transparent_hugepage(char *);
134:	static unsigned long shrink_huge_zero_page_count(struct shrinker *, struct shrink_control *);
141:	static unsigned long shrink_huge_zero_page_scan(struct shrinker *, struct shrink_control *);
3057:	static int split_huge_pages_debugfs(void);
3054:	static int split_huge_pages_fops_open(struct inode *, struct file *);
3014:	static int split_huge_pages_set(void *, u64);
951:	static void touch_pmd(struct vm_area_struct *, unsigned long, pmd_t *, int);
282:	static ssize_t use_zero_page_show(struct kobject *, struct kobj_attribute *, char *);
288:	static ssize_t use_zero_page_store(struct kobject *, struct kobj_attribute *, const char *, size_t);

File mm/hugetlb.c:
1424:	int PageHeadHuge(struct page *);
1410:	int PageHuge(struct page *);
2246:	int __alloc_bootmem_huge_page(struct hstate *);
3584:	void __unmap_hugepage_range(struct mmu_gather *, struct vm_area_struct *, unsigned long, unsigned long, struct page *);
3708:	void __unmap_hugepage_range_final(struct mmu_gather *, struct vm_area_struct *, unsigned long, unsigned long, struct page *);
4950:	void adjust_range_if_pmd_sharing_possible(struct vm_area_struct *, unsigned long *, unsigned long *);
2141:	struct page *alloc_huge_page(struct vm_area_struct *, unsigned long, int);
1775:	struct page *alloc_huge_page_node(struct hstate *, int);
1799:	struct page *alloc_huge_page_nodemask(struct hstate *, int, nodemask_t *);
1821:	struct page *alloc_huge_page_vma(struct hstate *, struct vm_area_struct *, unsigned long);
3485:	int copy_hugetlb_page_range(struct mm_struct *, struct mm_struct *, struct vm_area_struct *);
1601:	int dissolve_free_huge_page(struct page *);
1670:	int dissolve_free_huge_pages(unsigned long, unsigned long);
5157:	struct page *follow_huge_addr(struct mm_struct *, unsigned long, int);
5164:	struct page *follow_huge_pd(struct vm_area_struct *, unsigned long, hugepd_t, int, int);
5219:	struct page *follow_huge_pgd(struct mm_struct *, unsigned long, pgd_t *, int);
5172:	struct page *follow_huge_pmd(struct mm_struct *, unsigned long, pmd_t *, int);
5209:	struct page *follow_huge_pud(struct mm_struct *, unsigned long, pud_t *, int);
4492:	long follow_hugetlb_page(struct mm_struct *, struct vm_area_struct *, struct page **, struct vm_area_struct **, unsigned long *, unsigned long *, long, unsigned int, int *);
1301:	void free_huge_page(struct page *);
3971:	int huge_add_to_page_cache(struct page *, struct address_space *, unsigned long);
4981:	pte_t *huge_pmd_share(struct mm_struct *, unsigned long, pud_t *);
5042:	int huge_pmd_unshare(struct mm_struct *, unsigned long *, pte_t *);
5078:	pte_t *huge_pte_alloc(struct mm_struct *, unsigned long, unsigned long);
5116:	pte_t *huge_pte_offset(struct mm_struct *, unsigned long, unsigned long);
109:	struct hugepage_subpool *hugepage_new_subpool(struct hstate *, long, long);
133:	void hugepage_put_subpool(struct hugepage_subpool *);
3028:	void hugetlb_add_hstate(unsigned int);
3023:	void hugetlb_bad_size(void);
1432:	unsigned long hugetlb_basepage_index(struct page *);
4660:	unsigned long hugetlb_change_protection(struct vm_area_struct *, unsigned long, unsigned long, pgprot_t);
4206:	vm_fault_t hugetlb_fault(struct mm_struct *, struct vm_area_struct *, unsigned long, unsigned int);
4181:	u32 hugetlb_fault_mutex_hash(struct hstate *, struct address_space *, unsigned long);
590:	void hugetlb_fix_reserve_counts(struct inode *);
4355:	int hugetlb_mcopy_atomic_pte(struct mm_struct *, pte_t *, struct vm_area_struct *, unsigned long, unsigned long, struct page **);
3177:	int hugetlb_mempolicy_sysctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
3185:	int hugetlb_overcommit_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
3217:	void hugetlb_report_meminfo(struct seq_file *);
3247:	int hugetlb_report_node_meminfo(int, char *);
3279:	void hugetlb_report_usage(struct seq_file *, struct mm_struct *);
4749:	int hugetlb_reserve_pages(struct inode *, long, long, struct vm_area_struct *, vm_flags_t);
3261:	void hugetlb_show_meminfo(void);
3155:	int hugetlb_sysctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
3286:	unsigned long hugetlb_total_pages(void);
4868:	long hugetlb_unreserve_pages(struct inode *, long, long, long);
3459:	bool is_hugetlb_entry_migration(pte_t);
5227:	bool isolate_huge_page(struct page *, struct list_head *);
652:	unsigned long linear_hugepage_index(struct vm_area_struct *, unsigned long);
5254:	void move_hugetlb_state(struct page *, struct page *, int);
1261:	bool page_huge_active(struct page *);
5244:	void putback_active_hugepage(struct page *);
818:	void reset_vma_resv_huge_pages(struct vm_area_struct *);
721:	struct resv_map *resv_map_alloc(void);
745:	void resv_map_release(struct kref *);
1267:	void set_page_huge_active(struct page *);
1244:	struct hstate *size_to_hstate(unsigned long);
3727:	void unmap_hugepage_range(struct vm_area_struct *, unsigned long, unsigned long, struct page *);
663:	unsigned long vma_kernel_pagesize(struct vm_area_struct *);
677:	unsigned long vma_mmu_pagesize(struct vm_area_struct *);
2610:	static ssize_t __nr_hugepages_store_common(bool, struct hstate *, int, unsigned long, size_t);
2012:	static long __vma_reservation_common(struct hstate *, struct vm_area_struct *, unsigned long, enum vma_resv_mode);
1497:	static struct page *alloc_fresh_huge_page(struct hstate *, gfp_t, int, nodemask_t *, nodemask_t *);
1526:	static int alloc_pool_huge_page(struct hstate *, nodemask_t *, nodemask_t *);
1692:	static struct page *alloc_surplus_huge_page(struct hstate *, gfp_t, int, nodemask_t *);
918:	static struct page *dequeue_huge_page_nodemask(struct hstate *, gfp_t, int, nodemask_t *, struct mempolicy *);
2736:	static ssize_t free_hugepages_show(struct kobject *, struct kobj_attribute *, char *);
1559:	static int free_pool_huge_page(struct hstate *, nodemask_t *, bool);
1039:	static int hstate_next_node_to_alloc(nodemask_t *, struct hstate *);
149:	static long hugepage_subpool_get_pages(struct hugepage_subpool *, long);
194:	static long hugepage_subpool_put_pages(struct hugepage_subpool *, long);
3296:	static int hugetlb_acct_memory(struct hstate *, long);
3813:	static vm_fault_t hugetlb_cow(struct mm_struct *, struct vm_area_struct *, unsigned long, pte_t *, struct page *, spinlock_t *);
3097:	static int hugetlb_default_setup(char *);
2314:	static void hugetlb_hstate_alloc_pages(struct hstate *);
2975:	static int hugetlb_init(void);
3994:	static vm_fault_t hugetlb_no_page(struct mm_struct *, struct vm_area_struct *, struct address_space *, unsigned long, unsigned long, pte_t *, unsigned int);
3055:	static int hugetlb_nrpages_setup(char *);
2912:	static void hugetlb_register_node(struct node *);
3132:	static int hugetlb_sysctl_handler_common(bool, struct ctl_table *, int, void *, size_t *, loff_t *);
2794:	static int hugetlb_sysfs_add_hstate(struct hstate *, struct kobject *, struct kobject **, const struct attribute_group *);
2887:	static void hugetlb_unregister_node(struct node *);
3353:	static void hugetlb_vm_op_close(struct vm_area_struct *);
3401:	static vm_fault_t hugetlb_vm_op_fault(struct vm_fault *);
3337:	static void hugetlb_vm_op_open(struct vm_area_struct *);
3388:	static unsigned long hugetlb_vm_op_pagesize(struct vm_area_struct *);
3381:	static int hugetlb_vm_op_split(struct vm_area_struct *, unsigned long);
3955:	static bool hugetlbfs_pagecache_present(struct hstate *, struct vm_area_struct *, unsigned long);
3472:	static int is_hugetlb_entry_hwpoisoned(pte_t);
2864:	static struct hstate *kobj_to_node_hstate(struct kobject *, int *);
3426:	static pte_t make_huge_pte(struct page *, int, struct vm_area_struct *);
2698:	static ssize_t nr_hugepages_mempolicy_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
2673:	static ssize_t nr_hugepages_show(struct kobject *, struct kobj_attribute *, char *);
2594:	static ssize_t nr_hugepages_show_common(struct kobject *, char *, struct kobj_attribute *);
2679:	static ssize_t nr_hugepages_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
2656:	static ssize_t nr_hugepages_store_common(bool, struct kobject *, const char *, size_t);
2707:	static ssize_t nr_overcommit_hugepages_show(struct kobject *, struct kobj_attribute *, char *);
2714:	static ssize_t nr_overcommit_hugepages_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
1375:	static void prep_compound_gigantic_page(struct page *, unsigned int);
1363:	static void prep_new_huge_page(struct hstate *, struct page *, int);
478:	static void region_abort(struct resv_map *, long, long);
277:	static long region_add(struct resv_map *, long, long);
373:	static long region_chg(struct resv_map *, long, long);
500:	static long region_del(struct resv_map *, long, long);
2108:	static void restore_reserve_on_error(struct hstate *, struct vm_area_struct *, unsigned long, struct page *);
2753:	static ssize_t resv_hugepages_show(struct kobject *, struct kobj_attribute *, char *);
1941:	static void return_unused_surplus_pages(struct hstate *, unsigned long);
2761:	static ssize_t surplus_hugepages_show(struct kobject *, struct kobj_attribute *, char *);
1198:	static void update_and_free_page(struct hstate *, struct page *);
826:	static bool vma_has_reserves(struct vm_area_struct *, long);

File mm/hugetlb_cgroup.c:
181:	int hugetlb_cgroup_charge_cgroup(int, unsigned long, struct hugetlb_cgroup **);
214:	void hugetlb_cgroup_commit_charge(int, unsigned long, struct hugetlb_cgroup *, struct page *);
397:	void hugetlb_cgroup_file_init(void);
416:	void hugetlb_cgroup_migrate(struct page *, struct page *);
244:	void hugetlb_cgroup_uncharge_cgroup(int, unsigned long, struct hugetlb_cgroup *);
228:	void hugetlb_cgroup_uncharge_page(int, unsigned long, struct page *);
93:	static struct cgroup_subsys_state *hugetlb_cgroup_css_alloc(struct cgroup_subsys_state *);
109:	static void hugetlb_cgroup_css_free(struct cgroup_subsys_state *);
161:	static void hugetlb_cgroup_css_offline(struct cgroup_subsys_state *);
264:	static u64 hugetlb_cgroup_read_u64(struct cgroup_subsys_state *, struct cftype *);
319:	static ssize_t hugetlb_cgroup_reset(struct kernfs_open_file *, char *, size_t, loff_t);
288:	static ssize_t hugetlb_cgroup_write(struct kernfs_open_file *, char *, size_t, loff_t);

File mm/interval_tree.c:
76:	void anon_vma_interval_tree_insert(struct anon_vma_chain *, struct rb_root_cached *);
93:	struct anon_vma_chain *anon_vma_interval_tree_iter_first(struct rb_root_cached *, unsigned long, unsigned long);
100:	struct anon_vma_chain *anon_vma_interval_tree_iter_next(struct anon_vma_chain *, unsigned long, unsigned long);
86:	void anon_vma_interval_tree_remove(struct anon_vma_chain *, struct rb_root_cached *);
24:	void vma_interval_tree_insert(struct vm_area_struct *, struct rb_root_cached *);
29:	void vma_interval_tree_insert_after(struct vm_area_struct *, struct vm_area_struct *, struct rb_root_cached *);
24:	struct vm_area_struct *vma_interval_tree_iter_first(struct rb_root_cached *, unsigned long, unsigned long);
24:	struct vm_area_struct *vma_interval_tree_iter_next(struct vm_area_struct *, unsigned long, unsigned long);
24:	void vma_interval_tree_remove(struct vm_area_struct *, struct rb_root_cached *);
72:	static void __anon_vma_interval_tree_augment_rotate(struct rb_node *, struct rb_node *);
72:	static struct anon_vma_chain *__anon_vma_interval_tree_subtree_search(struct anon_vma_chain *, unsigned long, unsigned long);
24:	static void vma_interval_tree_augment_rotate(struct rb_node *, struct rb_node *);
24:	static struct vm_area_struct *vma_interval_tree_subtree_search(struct vm_area_struct *, unsigned long, unsigned long);

File mm/ioremap.c:
30:	int ioremap_page_range(unsigned long, unsigned long, phys_addr_t, pgprot_t);
20:	static int set_nohugeiomap(char *);

File mm/khugepaged.c:
423:	int __khugepaged_enter(struct mm_struct *);
475:	void __khugepaged_exit(struct mm_struct *);
309:	int hugepage_madvise(struct vm_area_struct *, unsigned long *, int);
363:	void khugepaged_destroy(void);
456:	int khugepaged_enter_vma_merge(struct vm_area_struct *, unsigned long);
348:	int khugepaged_init(void);
1989:	void khugepaged_min_free_kbytes_update(void);
1960:	int start_stop_khugepaged(void);
893:	static bool __collapse_huge_page_swapin(struct mm_struct *, struct vm_area_struct *, unsigned long, pmd_t *, int);
141:	static ssize_t alloc_sleep_millisecs_show(struct kobject *, struct kobj_attribute *, char *);
148:	static ssize_t alloc_sleep_millisecs_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
1324:	static void collapse_shmem(struct mm_struct *, struct address_space *, unsigned long, struct page **, int);
1240:	static void collect_mm_slot(struct mm_slot *);
203:	static ssize_t full_scans_show(struct kobject *, struct kobj_attribute *, char *);
403:	static bool hugepage_vma_check(struct vm_area_struct *, unsigned long);
863:	static int hugepage_vma_revalidate(struct mm_struct *, unsigned long, struct vm_area_struct **);
1895:	static int khugepaged(void *);
212:	static ssize_t khugepaged_defrag_show(struct kobject *, struct kobj_attribute *, char *);
218:	static ssize_t khugepaged_defrag_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
729:	static int khugepaged_find_target_node(void);
237:	static ssize_t khugepaged_max_ptes_none_show(struct kobject *, struct kobj_attribute *, char *);
243:	static ssize_t khugepaged_max_ptes_none_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
262:	static ssize_t khugepaged_max_ptes_swap_show(struct kobject *, struct kobj_attribute *, char *);
269:	static ssize_t khugepaged_max_ptes_swap_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
698:	static bool khugepaged_scan_abort(int);
194:	static ssize_t pages_collapsed_show(struct kobject *, struct kobj_attribute *, char *);
169:	static ssize_t pages_to_scan_show(struct kobject *, struct kobj_attribute *, char *);
175:	static ssize_t pages_to_scan_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
507:	static void release_pte_page(struct page *);
113:	static ssize_t scan_sleep_millisecs_show(struct kobject *, struct kobj_attribute *, char *);
120:	static ssize_t scan_sleep_millisecs_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
1916:	static void set_recommended_min_free_kbytes(void);

File mm/ksm.c:
2509:	int __ksm_enter(struct mm_struct *);
2548:	void __ksm_exit(struct mm_struct *);
2452:	int ksm_madvise(struct vm_area_struct *, unsigned long, unsigned long, int, unsigned long *);
2586:	struct page *ksm_might_need_to_copy(struct page *, struct vm_area_struct *, unsigned long);
2682:	void ksm_migrate_page(struct page *, struct page *);
2617:	void rmap_walk_ksm(struct page *, struct rmap_walk_control *);
1520:	static struct page *__stable_node_chain(struct stable_node **, struct stable_node **, struct rb_root *, bool);
591:	static struct stable_node *alloc_stable_node_chain(struct stable_node *, struct rb_root *);
534:	static void break_cow(struct rmap_item *);
471:	static int break_ksm(struct vm_area_struct *, unsigned long);
1024:	static u32 calc_checksum(struct page *);
520:	static struct vm_area_struct *find_mergeable_vma(struct mm_struct *, unsigned long);
3140:	static ssize_t full_scans_show(struct kobject *, struct kobj_attribute *, char *);
695:	static struct page *get_ksm_page(struct stable_node *, enum get_ksm_page_flags);
3173:	static int ksm_init(void);
2788:	static int ksm_memory_callback(struct notifier_block *, unsigned long, void *);
2427:	static int ksm_scan_thread(void *);
3021:	static ssize_t max_page_sharing_show(struct kobject *, struct kobj_attribute *, char *);
3027:	static ssize_t max_page_sharing_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
1033:	static int memcmp_pages(struct page *, struct page *);
2942:	static ssize_t merge_across_nodes_show(struct kobject *, struct kobj_attribute *, char *);
2948:	static ssize_t merge_across_nodes_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
3062:	static ssize_t pages_shared_show(struct kobject *, struct kobj_attribute *, char *);
3069:	static ssize_t pages_sharing_show(struct kobject *, struct kobj_attribute *, char *);
2870:	static ssize_t pages_to_scan_show(struct kobject *, struct kobj_attribute *, char *);
2876:	static ssize_t pages_to_scan_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
3076:	static ssize_t pages_unshared_show(struct kobject *, struct kobj_attribute *, char *);
3083:	static ssize_t pages_volatile_show(struct kobject *, struct kobj_attribute *, char *);
939:	static int remove_all_stable_nodes(void);
632:	static void remove_node_from_stable_tree(struct stable_node *);
773:	static void remove_rmap_item_from_tree(struct rmap_item *);
876:	static int remove_stable_node(struct stable_node *);
820:	static void remove_trailing_rmap_items(struct rmap_item **, struct mm_slot *);
2893:	static ssize_t run_show(struct kobject *, struct kobj_attribute *, char *);
2899:	static ssize_t run_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
2847:	static ssize_t sleep_millisecs_show(struct kobject *, struct kobj_attribute *, char *);
2853:	static ssize_t sleep_millisecs_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
3115:	static ssize_t stable_node_chains_prune_millisecs_show(struct kobject *, struct kobj_attribute *, char *);
3123:	static ssize_t stable_node_chains_prune_millisecs_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
3107:	static ssize_t stable_node_chains_show(struct kobject *, struct kobj_attribute *, char *);
3100:	static ssize_t stable_node_dups_show(struct kobject *, struct kobj_attribute *, char *);
2014:	static void stable_tree_append(struct rmap_item *, struct stable_node *, bool);
1221:	static int try_to_merge_one_page(struct vm_area_struct *, struct page *, struct page *);
1296:	static int try_to_merge_with_ksm_page(struct rmap_item *, struct page *, struct page *);
844:	static int unmerge_ksm_pages(struct vm_area_struct *, unsigned long, unsigned long);
2999:	static ssize_t use_zero_pages_show(struct kobject *, struct kobj_attribute *, char *);
3004:	static ssize_t use_zero_pages_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
2707:	static void wait_while_offlining(void);

File mm/list_lru.c:
598:	int __list_lru_init(struct list_lru *, bool, struct lock_class_key *, struct shrinker *);
123:	bool list_lru_add(struct list_lru *, struct list_head *);
198:	unsigned long list_lru_count_node(struct list_lru *, int);
182:	unsigned long list_lru_count_one(struct list_lru *, int, struct mem_cgroup *);
147:	bool list_lru_del(struct list_lru *, struct list_head *);
639:	void list_lru_destroy(struct list_lru *);
167:	void list_lru_isolate(struct list_lru_one *, struct list_head *);
174:	void list_lru_isolate_move(struct list_lru_one *, struct list_head *, struct list_head *);
296:	unsigned long list_lru_walk_node(struct list_lru *, int, list_lru_walk_cb, void *, unsigned long *);
266:	unsigned long list_lru_walk_one(struct list_lru *, int, struct mem_cgroup *, list_lru_walk_cb, void *, unsigned long *);
282:	unsigned long list_lru_walk_one_irq(struct list_lru *, int, struct mem_cgroup *, list_lru_walk_cb, void *, unsigned long *);
578:	void memcg_drain_all_list_lrus(int, struct mem_cgroup *);
518:	int memcg_update_all_list_lrus(int);
208:	static unsigned long __list_lru_walk_one(struct list_lru_node *, int, list_lru_walk_cb, void *, unsigned long *);
339:	static int __memcg_init_list_lru_node(struct list_lru_memcg *, int, int);
391:	static void kvfree_rcu(struct callback_head *);
379:	static void memcg_destroy_list_lru_node(struct list_lru_node *);

File mm/maccess.c:
50:	long __probe_kernel_read(void *, const void *, size_t);
103:	long __probe_kernel_write(void *, const void *, size_t);
76:	long __probe_user_read(void *, const void *, size_t);
129:	long __probe_user_write(void *, const void *, size_t);
160:	long strncpy_from_unsafe(char *, const void *, long);
201:	long strncpy_from_unsafe_user(char *, const void *, long);
242:	long strnlen_unsafe_user(const void *, long);

File mm/madvise.c:
907:	long __ia32_sys_madvise(const struct pt_regs *);
907:	long __x64_sys_madvise(const struct pt_regs *);
811:	int do_madvise(unsigned long, size_t, int);
453:	static void madvise_free_page_range(struct mmu_gather *, unsigned long, unsigned long, struct vm_area_struct *);
320:	static int madvise_free_pte_range(pmd_t *, unsigned long, unsigned long, struct mm_walk *);
468:	static int madvise_free_single_vma(struct vm_area_struct *, unsigned long, unsigned long);
274:	static long madvise_willneed(struct vm_area_struct *, struct vm_area_struct **, unsigned long, unsigned long);
194:	static int swapin_walk_pmd_entry(pmd_t *, unsigned long, unsigned long, struct mm_walk *);

File mm/memblock.c:
1321:	phys_addr_t __memblock_alloc_base(phys_addr_t, phys_addr_t, phys_addr_t);
1869:	void __memblock_dump_all(void);
1574:	void __memblock_free_late(phys_addr_t, phys_addr_t);
1153:	void __next_mem_pfn_range(int *, int, unsigned long *, unsigned long *, int *);
945:	void __next_mem_range(u64 *, int, enum memblock_flags, struct memblock_type *, struct memblock_type *, phys_addr_t *, phys_addr_t *, int *);
1055:	void __next_mem_range_rev(u64 *, int, enum memblock_flags, struct memblock_type *, struct memblock_type *, phys_addr_t *, phys_addr_t *, int *);
895:	void __next_reserved_mem_region(u64 *, phys_addr_t *, phys_addr_t *);
126:	enum memblock_flags choose_memblock_flags(void);
654:	int memblock_add(phys_addr_t, phys_addr_t);
637:	int memblock_add_node(phys_addr_t, phys_addr_t, int);
539:	int memblock_add_range(struct memblock_type *, phys_addr_t, phys_addr_t, int, enum memblock_flags);
1340:	phys_addr_t memblock_alloc(phys_addr_t, phys_addr_t);
1327:	phys_addr_t memblock_alloc_base(phys_addr_t, phys_addr_t, phys_addr_t);
1298:	phys_addr_t memblock_alloc_base_nid(phys_addr_t, phys_addr_t, phys_addr_t, int, enum memblock_flags);
1305:	phys_addr_t memblock_alloc_nid(phys_addr_t, phys_addr_t, int);
1290:	phys_addr_t memblock_alloc_range(phys_addr_t, phys_addr_t, phys_addr_t, phys_addr_t, enum memblock_flags);
1345:	phys_addr_t memblock_alloc_try_nid(phys_addr_t, phys_addr_t, int);
1883:	void memblock_allow_resize(void);
1676:	void memblock_cap_memory_ranges(struct memblock_region *, int);
844:	int memblock_clear_hotplug(phys_addr_t, phys_addr_t);
882:	int memblock_clear_nomap(phys_addr_t, phys_addr_t);
325:	void memblock_discard(void);
1628:	phys_addr_t memblock_end_of_DRAM(void);
1656:	void memblock_enforce_memory_limit(phys_addr_t);
282:	phys_addr_t memblock_find_in_range(phys_addr_t, phys_addr_t, phys_addr_t, phys_addr_t);
247:	phys_addr_t memblock_find_in_range_node(phys_addr_t, phys_addr_t, phys_addr_t, phys_addr_t, int, enum memblock_flags);
773:	int memblock_free(phys_addr_t, phys_addr_t);
1838:	phys_addr_t memblock_get_current_limit(void);
1744:	bool memblock_is_map_memory(phys_addr_t);
1739:	bool memblock_is_memory(phys_addr_t);
1780:	bool memblock_is_region_memory(phys_addr_t, phys_addr_t);
1802:	bool memblock_is_region_reserved(phys_addr_t, phys_addr_t);
1734:	bool memblock_is_reserved(phys_addr_t);
832:	int memblock_mark_hotplug(phys_addr_t, phys_addr_t);
856:	int memblock_mark_mirror(phys_addr_t, phys_addr_t);
870:	int memblock_mark_nomap(phys_addr_t, phys_addr_t);
1698:	void memblock_mem_limit_remove_map(phys_addr_t);
1605:	phys_addr_t memblock_mem_size(unsigned long);
146:	bool memblock_overlaps_region(struct memblock_type *, phys_addr_t, phys_addr_t);
1595:	phys_addr_t memblock_phys_mem_size(void);
755:	int memblock_remove(phys_addr_t, phys_addr_t);
784:	int memblock_reserve(phys_addr_t, phys_addr_t);
1600:	phys_addr_t memblock_reserved_size(void);
1754:	int memblock_search_pfn_nid(unsigned long, unsigned long *, unsigned long *);
1833:	void memblock_set_current_limit(phys_addr_t);
1194:	int memblock_set_node(phys_addr_t, phys_addr_t, struct memblock_type *, int);
1623:	phys_addr_t memblock_start_of_DRAM(void);
1808:	void memblock_trim_memory(phys_addr_t);
1542:	void *memblock_virt_alloc_try_nid(phys_addr_t, phys_addr_t, phys_addr_t, phys_addr_t, int);
1506:	void *memblock_virt_alloc_try_nid_nopanic(phys_addr_t, phys_addr_t, phys_addr_t, phys_addr_t, int);
1469:	void *memblock_virt_alloc_try_nid_raw(phys_addr_t, phys_addr_t, phys_addr_t, phys_addr_t, int);
1635:	static phys_addr_t __find_max_addr(phys_addr_t);
1888:	static int early_memblock(char *);
360:	static int memblock_double_array(struct memblock_type *, phys_addr_t, phys_addr_t);
1843:	static void memblock_dump(struct memblock_type *);
505:	static void memblock_insert_region(struct memblock_type *, int, phys_addr_t, phys_addr_t, int, enum memblock_flags);
680:	static int memblock_isolate_range(struct memblock_type *, phys_addr_t, phys_addr_t, int *, int *);
468:	static void memblock_merge_regions(struct memblock_type *, struct memblock_type *);
740:	static int memblock_remove_range(struct memblock_type *, phys_addr_t, phys_addr_t);
303:	static void memblock_remove_region(struct memblock_type *, unsigned long);
1716:	static int memblock_search(phys_addr_t, struct memblock_type *, struct memblock_type *);
805:	static int memblock_setclr_flag(phys_addr_t, phys_addr_t, int, int);
1382:	static void *memblock_virt_alloc_internal(phys_addr_t, phys_addr_t, phys_addr_t, phys_addr_t, int);

File mm/memcontrol.c:
779:	void __count_memcg_events(struct mem_cgroup *, enum vm_event_item, unsigned long);
2817:	int __memcg_kmem_charge(struct page *, gfp_t, int);
2777:	int __memcg_kmem_charge_memcg(struct page *, gfp_t, int, struct mem_cgroup *);
2844:	void __memcg_kmem_uncharge(struct page *, int);
737:	void __mod_lruvec_state(struct lruvec *, enum node_stat_item, int);
691:	void __mod_memcg_state(struct mem_cgroup *, int, int);
2067:	void __unlock_page_memcg(struct mem_cgroup *);
932:	struct mem_cgroup *get_mem_cgroup_from_mm(struct mm_struct *);
966:	struct mem_cgroup *get_mem_cgroup_from_page(struct page *);
2015:	struct mem_cgroup *lock_page_memcg(struct page *);
6548:	void mem_cgroup_cancel_charge(struct page *, struct mem_cgroup *, bool);
6813:	bool mem_cgroup_charge_skmem(struct mem_cgroup *, unsigned int);
6504:	void mem_cgroup_commit_charge(struct page *, struct mem_cgroup *, bool, bool);
461:	struct cgroup_subsys_state *mem_cgroup_css_from_page(struct page *);
4839:	struct mem_cgroup *mem_cgroup_from_id(unsigned short);
910:	struct mem_cgroup *mem_cgroup_from_task(struct task_struct *);
1492:	unsigned long mem_cgroup_get_max(struct mem_cgroup *);
7087:	long mem_cgroup_get_nr_swap_pages(struct mem_cgroup *);
1958:	struct mem_cgroup *mem_cgroup_get_oom_group(struct task_struct *, struct mem_cgroup *);
2313:	void mem_cgroup_handle_over_high(void);
1015:	struct mem_cgroup *mem_cgroup_iter(struct mem_cgroup *, struct mem_cgroup *, struct mem_cgroup_reclaim_cookie *);
1130:	void mem_cgroup_iter_break(struct mem_cgroup *, struct mem_cgroup *);
6731:	void mem_cgroup_migrate(struct page *, struct page *);
1888:	bool mem_cgroup_oom_synchronize(bool);
1227:	struct lruvec *mem_cgroup_page_lruvec(struct page *, struct pglist_data *);
1431:	void mem_cgroup_print_oom_context(struct mem_cgroup *, struct task_struct *);
1997:	void mem_cgroup_print_oom_group(struct mem_cgroup *);
1452:	void mem_cgroup_print_oom_meminfo(struct mem_cgroup *);
6333:	enum mem_cgroup_protection mem_cgroup_protected(struct mem_cgroup *, struct mem_cgroup *);
1191:	int mem_cgroup_scan_tasks(struct mem_cgroup *, int (*)(struct task_struct *, void *), void *);
1604:	int mem_cgroup_select_victim_node(struct mem_cgroup *);
6776:	void mem_cgroup_sk_alloc(struct sock *);
6799:	void mem_cgroup_sk_free(struct sock *);
2985:	unsigned long mem_cgroup_soft_limit_reclaim(pg_data_t *, int, gfp_t, unsigned long *);
2877:	void mem_cgroup_split_huge_fixup(struct page *);
7100:	bool mem_cgroup_swap_full(struct page *);
6949:	void mem_cgroup_swapout(struct page *, swp_entry_t);
6422:	int mem_cgroup_try_charge(struct page *, struct mm_struct *, gfp_t, struct mem_cgroup **, bool);
6474:	int mem_cgroup_try_charge_delay(struct page *, struct mm_struct *, gfp_t, struct mem_cgroup **, bool);
7017:	int mem_cgroup_try_charge_swap(struct page *, swp_entry_t);
6689:	void mem_cgroup_uncharge(struct page *);
6712:	void mem_cgroup_uncharge_list(struct list_head *);
6847:	void mem_cgroup_uncharge_skmem(struct mem_cgroup *, unsigned int);
7063:	void mem_cgroup_uncharge_swap(swp_entry_t, unsigned int);
1270:	void mem_cgroup_update_lru_size(struct lruvec *, enum lru_list, int, int);
4326:	struct wb_domain *mem_cgroup_wb_domain(struct bdi_writeback *);
4370:	void mem_cgroup_wb_stats(struct bdi_writeback *, unsigned long *, unsigned long *, unsigned long *, unsigned long *);
406:	int memcg_expand_shrinker_maps(int);
289:	void memcg_get_cache_ids(void);
2717:	struct kmem_cache *memcg_kmem_get_cache(struct kmem_cache *);
2762:	void memcg_kmem_put_cache(struct kmem_cache *);
3660:	bool memcg_low_priority_scan_tasks(int (*)(struct task_struct *, void *), void *);
3704:	void memcg_print_bad_task(void *, int);
294:	void memcg_put_cache_ids(void);
436:	void memcg_set_shrinker_bit(struct mem_cgroup *, int, int);
259:	struct vmpressure *memcg_to_vmpressure(struct mem_cgroup *);
486:	ino_t page_cgroup_ino(struct page *);
3722:	int sysctl_memcg_qos_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
1298:	bool task_in_mem_cgroup(struct task_struct *, struct mem_cgroup *);
2085:	void unlock_page_memcg(struct page *);
266:	struct cgroup_subsys_state *vmpressure_to_css(struct vmpressure *);
1139:	static void __invalidate_reclaim_iterators(struct mem_cgroup *, struct mem_cgroup *);
5564:	static void __mem_cgroup_clear_mc(void);
4901:	static void __mem_cgroup_free(struct mem_cgroup *);
523:	static void __mem_cgroup_insert_exceeded(struct mem_cgroup_per_node *, struct mem_cgroup_tree_per_node *, unsigned long);
650:	static struct mem_cgroup_per_node *__mem_cgroup_largest_soft_limit_node(struct mem_cgroup_tree_per_node *);
563:	static void __mem_cgroup_remove_exceeded(struct mem_cgroup_per_node *, struct mem_cgroup_tree_per_node *);
3955:	static void __mem_cgroup_threshold(struct mem_cgroup *, bool);
4052:	static int __mem_cgroup_usage_register_event(struct mem_cgroup *, struct eventfd_ctx *, const char *, enum res_type);
4146:	static void __mem_cgroup_usage_unregister_event(struct mem_cgroup *, struct eventfd_ctx *, enum res_type);
2507:	static void cancel_charge(struct mem_cgroup *, unsigned int);
6859:	static int cgroup_memory(char *);
4017:	static int compare_thresholds(const void *, const void *);
2197:	static void drain_all_stock(struct mem_cgroup *);
2151:	static void drain_local_stock(struct work_struct *);
2137:	static void drain_stock(struct memcg_stock_pcp *, struct memcg_stock_pcp *);
7129:	static int enable_swap_account(char *);
5418:	static enum mc_target_type get_mctgt_type(struct vm_area_struct *, unsigned long, pte_t, union mc_target *);
5470:	static enum mc_target_type get_mctgt_type_thp(pmd_t, union mc_target *, unsigned long, struct vm_area_struct *);
2301:	static void high_work_func(struct work_struct *);
5877:	static void mem_cgroup_bind(struct cgroup_subsys_state *);
5625:	static int mem_cgroup_can_attach(struct cgroup_taskset *);
5695:	static void mem_cgroup_cancel_attach(struct cgroup_taskset *);
822:	static void mem_cgroup_charge_statistics(struct mem_cgroup *, struct page *, bool, int);
5606:	static void mem_cgroup_clear_mc(void);
5502:	static int mem_cgroup_count_precharge_pte_range(pmd_t *, unsigned long, unsigned long, struct mm_walk *);
4995:	static struct cgroup_subsys_state *mem_cgroup_css_alloc(struct cgroup_subsys_state *);
5110:	static void mem_cgroup_css_free(struct cgroup_subsys_state *);
5077:	static void mem_cgroup_css_offline(struct cgroup_subsys_state *);
5053:	static int mem_cgroup_css_online(struct cgroup_subsys_state *);
5103:	static void mem_cgroup_css_released(struct cgroup_subsys_state *);
5141:	static void mem_cgroup_css_reset(struct cgroup_subsys_state *);
5159:	static int mem_cgroup_do_precharge(unsigned long);
3118:	static ssize_t mem_cgroup_force_empty_write(struct kernfs_open_file *, char *, size_t, loff_t);
4915:	static void mem_cgroup_free(struct mem_cgroup *);
3129:	static u64 mem_cgroup_hierarchy_read(struct cgroup_subsys_state *, struct cftype *);
3135:	static int mem_cgroup_hierarchy_write(struct cgroup_subsys_state *, struct cftype *, u64);
6924:	static struct mem_cgroup *mem_cgroup_id_get_online(struct mem_cgroup *);
4812:	static void mem_cgroup_id_put_many(struct mem_cgroup *, unsigned int);
6885:	static int mem_cgroup_init(void);
1743:	static void mem_cgroup_mark_under_oom(struct mem_cgroup *);
5307:	static int mem_cgroup_move_account(struct page *, bool, struct mem_cgroup *, struct mem_cgroup *);
5701:	static int mem_cgroup_move_charge_pte_range(pmd_t *, unsigned long, unsigned long, struct mm_walk *);
3521:	static u64 mem_cgroup_move_charge_read(struct cgroup_subsys_state *, struct cftype *);
3528:	static int mem_cgroup_move_charge_write(struct cgroup_subsys_state *, struct cftype *, u64);
5852:	static void mem_cgroup_move_task(void);
3751:	static unsigned long mem_cgroup_node_nr_lru_pages(struct mem_cgroup *, int, unsigned int, bool);
3771:	static unsigned long mem_cgroup_nr_lru_pages(struct mem_cgroup *, unsigned int, bool);
4282:	static int mem_cgroup_oom_control_read(struct seq_file *, void *);
4293:	static int mem_cgroup_oom_control_write(struct cgroup_subsys_state *, struct cftype *, u64);
4044:	static void mem_cgroup_oom_notify(struct mem_cgroup *);
4243:	static int mem_cgroup_oom_register_event(struct mem_cgroup *, struct eventfd_ctx *, const char *);
1693:	static bool mem_cgroup_oom_trylock(struct mem_cgroup *);
1732:	static void mem_cgroup_oom_unlock(struct mem_cgroup *);
4265:	static void mem_cgroup_oom_unregister_event(struct mem_cgroup *, struct eventfd_ctx *);
1509:	static bool mem_cgroup_out_of_memory(struct mem_cgroup *, gfp_t, int);
3191:	static u64 mem_cgroup_read_u64(struct cgroup_subsys_state *, struct cftype *);
3484:	static ssize_t mem_cgroup_reset(struct kernfs_open_file *, char *, size_t, loff_t);
2931:	static int mem_cgroup_resize_max(struct mem_cgroup *, unsigned long, bool);
7237:	static int mem_cgroup_swap_init(void);
3931:	static u64 mem_cgroup_swappiness_read(struct cgroup_subsys_state *, struct cftype *);
3939:	static int mem_cgroup_swappiness_write(struct cgroup_subsys_state *, struct cftype *, u64);
1753:	static void mem_cgroup_unmark_under_oom(struct mem_cgroup *);
3165:	static unsigned long mem_cgroup_usage(struct mem_cgroup *, bool);
4134:	static int mem_cgroup_usage_register_event(struct mem_cgroup *, struct eventfd_ctx *, const char *);
4231:	static void mem_cgroup_usage_unregister_event(struct mem_cgroup *, struct eventfd_ctx *);
3440:	static ssize_t mem_cgroup_write(struct kernfs_open_file *, char *, size_t, loff_t);
886:	static void memcg_check_events(struct mem_cgroup *, struct page *);
4485:	static void memcg_event_ptable_queue_proc(struct file *, wait_queue_head_t *, poll_table *);
4429:	static void memcg_event_remove(struct work_struct *);
4452:	static int memcg_event_wake(wait_queue_entry_t *, unsigned int, int, void *);
4340:	static unsigned long memcg_exact_page_state(struct mem_cgroup *, int);
3269:	static void memcg_flush_percpu_vmevents(struct mem_cgroup *);
3234:	static void memcg_flush_percpu_vmstats(struct mem_cgroup *);
329:	static void memcg_free_shrinker_map_rcu(struct callback_head *);
364:	static void memcg_free_shrinker_maps(struct mem_cgroup *);
3557:	static void memcg_hierarchy_qos_set(struct mem_cgroup *, int);
2234:	static int memcg_hotplug_cpu_dead(unsigned int);
2636:	static void memcg_kmem_cache_create_func(struct work_struct *);
3789:	static int memcg_numa_stat_show(struct seq_file *, void *);
3317:	static void memcg_offline_kmem(struct mem_cgroup *);
1791:	static void memcg_oom_recover(struct mem_cgroup *);
1775:	static int memcg_oom_wake_function(wait_queue_entry_t *, unsigned int, int, void *);
3595:	static s64 memcg_qos_read(struct cgroup_subsys_state *, struct cftype *);
3609:	static int memcg_qos_write(struct cgroup_subsys_state *, struct cftype *, s64);
3848:	static int memcg_stat_show(struct seq_file *, void *);
4503:	static ssize_t memcg_write_event_control(struct kernfs_open_file *, char *, size_t, loff_t);
5890:	static u64 memory_current_read(struct cgroup_subsys_state *, struct cftype *);
6057:	static int memory_events_show(struct seq_file *, void *);
5958:	static int memory_high_show(struct seq_file *, void *);
5971:	static ssize_t memory_high_write(struct kernfs_open_file *, char *, size_t, loff_t);
5928:	static int memory_low_show(struct seq_file *, void *);
5941:	static ssize_t memory_low_write(struct kernfs_open_file *, char *, size_t, loff_t);
5995:	static int memory_max_show(struct seq_file *, void *);
6008:	static ssize_t memory_max_write(struct kernfs_open_file *, char *, size_t, loff_t);
5898:	static int memory_min_show(struct seq_file *, void *);
5911:	static ssize_t memory_min_write(struct kernfs_open_file *, char *, size_t, loff_t);
6166:	static int memory_oom_group_show(struct seq_file *, void *);
6175:	static ssize_t memory_oom_group_write(struct kernfs_open_file *, char *, size_t, loff_t);
6075:	static int memory_stat_show(struct seq_file *, void *);
4140:	static int memsw_cgroup_usage_register_event(struct mem_cgroup *, struct eventfd_ctx *, const char *);
4237:	static void memsw_cgroup_usage_unregister_event(struct mem_cgroup *, struct eventfd_ctx *);
2289:	static void reclaim_high(struct mem_cgroup *, unsigned int, gfp_t);
2173:	static void refill_stock(struct mem_cgroup *, unsigned int);
7139:	static u64 swap_current_read(struct cgroup_subsys_state *, struct cftype *);
7177:	static int swap_events_show(struct seq_file *, void *);
7147:	static int swap_max_show(struct seq_file *, void *);
7160:	static ssize_t swap_max_write(struct kernfs_open_file *, char *, size_t, loff_t);
2327:	static int try_charge(struct mem_cgroup *, gfp_t, unsigned int);
6582:	static void uncharge_batch(const struct uncharge_gather *);
6610:	static void uncharge_page(struct page *, struct uncharge_gather *);

File mm/memfd.c:
268:	long __ia32_sys_memfd_create(const struct pt_regs *);
268:	long __x64_sys_memfd_create(const struct pt_regs *);
239:	long memfd_fcntl(struct file *, unsigned int, unsigned long);
139:	static unsigned int *memfd_file_seals_ptr(struct file *);

File mm/memory-failure.c:
933:	int get_hwpoison_page(struct page *);
153:	int hwpoison_filter(struct page *);
1253:	int memory_failure(unsigned long, int);
1484:	void memory_failure_queue(unsigned long, int);
244:	void shake_page(struct page *, int);
1927:	int soft_offline_page(struct page *, int);
1560:	int unpoison_memory(unsigned long);
1653:	static int __get_any_page(struct page *, unsigned long, int);
891:	static void action_result(unsigned long, enum mf_action_page_type, enum mf_result);
311:	static void add_to_kill(struct task_struct *, struct page *, struct vm_area_struct *, struct list_head *, struct to_kill **);
515:	static void collect_procs(struct page *, struct list_head *, int);
571:	static int delete_from_lru_cache(struct page *);
968:	static bool hwpoison_user_mappings(struct page *, unsigned long, int, struct page **);
1064:	static int identify_page_state(unsigned long, struct page *, unsigned long);
364:	static void kill_procs(struct list_head *, int, bool, unsigned long, int);
786:	static int me_huge_page(struct page *, unsigned long);
634:	static int me_kernel(struct page *, unsigned long);
651:	static int me_pagecache_clean(struct page *, unsigned long);
692:	static int me_pagecache_dirty(struct page *, unsigned long);
770:	static int me_swapcache_clean(struct page *, unsigned long);
758:	static int me_swapcache_dirty(struct page *, unsigned long);
642:	static int me_unknown(struct page *, unsigned long);
1526:	static int memory_failure_init(void);
1505:	static void memory_failure_work_func(struct work_struct *);
1640:	static struct page *new_page(struct page *, unsigned long);
422:	static struct task_struct *task_early_kill(struct task_struct *, int);
596:	static int truncate_error_page(struct page *, unsigned long, struct address_space *);

File mm/memory.c:
4491:	int __access_remote_vm(struct task_struct *, struct mm_struct *, unsigned long, void *, int, unsigned int);
1440:	pte_t *__get_locked_pte(struct mm_struct *, unsigned long, spinlock_t **);
4229:	int __p4d_alloc(struct mm_struct *, pgd_t *, unsigned long);
4284:	int __pmd_alloc(struct mm_struct *, pud_t *, unsigned long);
417:	int __pte_alloc(struct mm_struct *, pmd_t *, unsigned long);
451:	int __pte_alloc_kernel(pmd_t *, unsigned long);
4252:	int __pud_alloc(struct mm_struct *, p4d_t *, unsigned long);
586:	struct page *_vm_normal_page(struct vm_area_struct *, unsigned long, pte_t, bool);
4575:	int access_process_vm(struct task_struct *, unsigned long, void *, int, unsigned int);
4564:	int access_remote_vm(struct mm_struct *, unsigned long, void *, int, unsigned int);
3459:	vm_fault_t alloc_set_pte(struct vm_fault *, struct mem_cgroup *, struct page *);
2170:	int apply_to_existing_page_range(struct mm_struct *, unsigned long, unsigned long, pte_fn_t, void *);
2156:	int apply_to_page_range(struct mm_struct *, unsigned long, unsigned long, pte_fn_t, void *);
4731:	void clear_huge_page(struct page *, unsigned long, unsigned int);
4805:	long copy_huge_page_from_user(struct page *, const void *, unsigned int, bool);
983:	int copy_page_range(struct mm_struct *, struct mm_struct *, struct vm_area_struct *);
4784:	void copy_user_huge_page(struct page *, struct page *, unsigned long, struct vm_area_struct *, unsigned int);
2892:	vm_fault_t do_swap_page(struct vm_fault *);
3524:	vm_fault_t finish_fault(struct vm_fault *);
2596:	vm_fault_t finish_mkwrite_fault(struct vm_fault *);
4413:	int follow_pfn(struct vm_area_struct *, unsigned long, unsigned long *);
4433:	int follow_phys(struct vm_area_struct *, unsigned long, unsigned int, unsigned long *, resource_size_t *);
4389:	int follow_pte_pmd(struct mm_struct *, unsigned long, unsigned long *, unsigned long *, pte_t **, pmd_t **, spinlock_t **);
320:	void free_pgd_range(struct mmu_gather *, unsigned long, unsigned long, unsigned long, unsigned long);
382:	void free_pgtables(struct mmu_gather *, struct vm_area_struct *, unsigned long, unsigned long);
4461:	int generic_access_phys(struct vm_area_struct *, unsigned long, void *, int, int);
4178:	vm_fault_t handle_mm_fault(struct vm_area_struct *, unsigned long, unsigned int);
4596:	void print_vma_addr(char *, unsigned long);
1868:	int remap_pfn_range(struct vm_area_struct *, unsigned long, unsigned long, unsigned long, pgprot_t);
158:	void sync_mm_rss(struct mm_struct *);
2801:	void unmap_mapping_page(struct page *);
2832:	void unmap_mapping_pages(struct address_space *, unsigned long, unsigned long, bool);
2866:	void unmap_mapping_range(struct address_space *, const loff_t, const loff_t, int);
1274:	void unmap_page_range(struct mmu_gather *, struct vm_area_struct *, unsigned long, unsigned long, struct zap_details *);
1356:	void unmap_vmas(struct mmu_gather *, struct vm_area_struct *, unsigned long, unsigned long);
1732:	int vm_insert_mixed(struct vm_area_struct *, unsigned long, pfn_t);
1532:	int vm_insert_page(struct vm_area_struct *, unsigned long, struct page *);
1628:	int vm_insert_pfn(struct vm_area_struct *, unsigned long, unsigned long);
1650:	int vm_insert_pfn_prot(struct vm_area_struct *, unsigned long, unsigned long, pgprot_t);
1940:	int vm_iomap_memory(struct vm_area_struct *, phys_addr_t, unsigned long);
665:	struct page *vm_normal_page_pmd(struct vm_area_struct *, unsigned long, pmd_t);
1746:	vm_fault_t vmf_insert_mixed_mkwrite(struct vm_area_struct *, unsigned long, pfn_t);
1376:	void zap_page_range(struct vm_area_struct *, unsigned long, unsigned long);
1429:	void zap_vma_ptes(struct vm_area_struct *, unsigned long, unsigned long);
2120:	static int __apply_to_page_range(struct mm_struct *, unsigned long, unsigned long, pte_fn_t, void *, bool);
3245:	static vm_fault_t __do_fault(struct vm_fault *);
4312:	static int __follow_pte_pmd(struct mm_struct *, unsigned long, unsigned long *, unsigned long *, pte_t **, pmd_t **, spinlock_t **);
4089:	static vm_fault_t __handle_mm_fault(struct vm_area_struct *, unsigned long, unsigned int);
1695:	static int __vm_insert_mixed(struct vm_area_struct *, unsigned long, pfn_t, bool);
171:	static void add_mm_counter_fast(struct mm_struct *, int, int);
4705:	static int clear_gigantic_page_chunk(unsigned long, unsigned long, struct cgp_args *);
4724:	static void clear_subpage(unsigned long, int, void *);
4776:	static void copy_subpage(unsigned long, int, void *);
133:	static int disable_randmaps(char *);
3130:	static vm_fault_t do_anonymous_page(struct vm_fault *);
3778:	static vm_fault_t do_fault(struct vm_fault *);
3843:	static vm_fault_t do_numa_page(struct vm_fault *);
2326:	static vm_fault_t do_page_mkwrite(struct vm_fault *);
2686:	static vm_fault_t do_wp_page(struct vm_fault *);
3573:	static int fault_around_bytes_fops_open(struct inode *, struct file *);
3553:	static int fault_around_bytes_get(void *, u64 *);
3563:	static int fault_around_bytes_set(void *, u64);
3576:	static int fault_around_debugfs(void);
2360:	static void fault_dirty_shared_page(struct page *, struct vm_area_struct *, struct vm_area_struct *);
284:	static void free_p4d_range(struct mmu_gather *, pgd_t *, unsigned long, unsigned long, unsigned long, unsigned long);
148:	static int init_zero_pfn(void);
1553:	static int insert_pfn(struct vm_area_struct *, unsigned long, pfn_t, pgprot_t, bool);
3300:	static int pmd_devmap_trans_unstable(pmd_t *);
493:	static void print_bad_pte(struct vm_area_struct *, unsigned long, pte_t, struct page *);
1295:	static void unmap_single_vma(struct mmu_gather *, struct vm_area_struct *, unsigned long, unsigned long, struct zap_details *);
2436:	static vm_fault_t wp_page_copy(struct vm_fault *);
2398:	static void wp_page_reuse(struct vm_fault *);
1402:	static void zap_page_range_single(struct vm_area_struct *, unsigned long, unsigned long, struct zap_details *);

File mm/memory_hotplug.c:
1132:	int __add_memory(int, u64, u64);
265:	int __add_pages(int, unsigned long, unsigned long, struct vmem_altmap *, bool);
577:	void __online_page_free(struct page *);
571:	void __online_page_increment_counters(struct page *);
566:	void __online_page_set_limits(struct page *);
1891:	void __remove_memory(int, u64, u64);
502:	void __remove_pages(unsigned long, unsigned long, struct vmem_altmap *);
1147:	int add_memory(int, u64, u64);
1054:	int add_memory_resource(int, struct resource *, bool);
58:	void get_online_mems(void);
133:	void get_page_bootmem(unsigned long, struct page *, unsigned long);
1216:	bool is_mem_section_removable(unsigned long, unsigned long);
88:	void mem_hotplug_begin(void);
94:	void mem_hotplug_done(void);
715:	void move_pfn_range_to_zone(struct zone *, unsigned long, unsigned long, struct vmem_altmap *);
1718:	int offline_pages(unsigned long, unsigned long);
818:	int online_pages(unsigned long, unsigned long, int);
63:	void put_online_mems(void);
142:	void put_page_bootmem(struct page *);
218:	void register_page_bootmem_info_node(struct pglist_data *);
1925:	void remove_memory(int, u64, u64);
449:	void remove_pfn_range_from_zone(struct zone *, unsigned long, unsigned long);
547:	int restore_online_page_callback(online_page_callback_t);
528:	int set_online_page_callback(online_page_callback_t);
1238:	int test_pages_in_a_zone(unsigned long, unsigned long, unsigned long *, unsigned long *);
1827:	void try_offline_node(int);
1020:	int try_online_node(int);
1736:	int walk_memory_range(unsigned long, unsigned long, void *, int (*)(struct memory_block *, void *));
792:	struct zone *zone_for_pfn_range(int, int, unsigned long, unsigned long);
1581:	static int __offline_pages(unsigned long, unsigned long);
993:	static int __try_online_node(int, u64, bool);
1030:	static int check_hotplug_memory_range(u64, u64);
1774:	static int check_memblock_offlined_cb(struct memory_block *, void *);
1806:	static int check_no_memblock_for_node_cb(struct memory_block *, void *);
1454:	static int check_pages_isolated_cb(unsigned long, unsigned long, void *);
1479:	static int cmdline_parse_movable_node(char *);
583:	static void generic_online_page(struct page *, unsigned int);
921:	static pg_data_t *hotadd_new_pgdat(int, u64);
1317:	static struct page *new_node_page(struct page *, unsigned long);
1436:	static int offline_isolated_pages_cb(unsigned long, unsigned long, void *);
1043:	static int online_memory_block(struct memory_block *, void *);
605:	static int online_pages_range(unsigned long, unsigned long, void *);
77:	static int setup_memhp_default_state(char *);

File mm/mempolicy.c:
1748:	struct mempolicy *__get_vma_policy(struct vm_area_struct *, unsigned long);
1640:	long __ia32_compat_sys_get_mempolicy(const struct pt_regs *);
1691:	long __ia32_compat_sys_mbind(const struct pt_regs *);
1713:	long __ia32_compat_sys_migrate_pages(const struct pt_regs *);
1670:	long __ia32_compat_sys_set_mempolicy(const struct pt_regs *);
1631:	long __ia32_sys_get_mempolicy(const struct pt_regs *);
1470:	long __ia32_sys_mbind(const struct pt_regs *);
1595:	long __ia32_sys_migrate_pages(const struct pt_regs *);
1497:	long __ia32_sys_set_mempolicy(const struct pt_regs *);
2303:	struct mempolicy *__mpol_dup(struct mempolicy *);
2327:	bool __mpol_equal(struct mempolicy *, struct mempolicy *);
326:	void __mpol_put(struct mempolicy *);
1631:	long __x64_sys_get_mempolicy(const struct pt_regs *);
1470:	long __x64_sys_mbind(const struct pt_regs *);
1595:	long __x64_sys_migrate_pages(const struct pt_regs *);
1497:	long __x64_sys_set_mempolicy(const struct pt_regs *);
1045:	struct page *alloc_new_node_page(struct page *, unsigned long);
2258:	struct page *alloc_pages_current(gfp_t, unsigned int);
2161:	struct page *alloc_pages_vma(gfp_t, int, struct vm_area_struct *, unsigned long, int, bool);
635:	unsigned long change_prot_numa(struct vm_area_struct *, unsigned long, unsigned long);
1104:	int do_migrate_pages(struct mm_struct *, const nodemask_t *, const nodemask_t *, int);
130:	struct mempolicy *get_task_policy(struct task_struct *);
2005:	int huge_node(struct vm_area_struct *, unsigned long, gfp_t, struct mempolicy **, nodemask_t **);
2040:	bool init_nodemask_of_mempolicy(nodemask_t *);
2084:	bool mempolicy_nodemask_intersects(struct task_struct *, const nodemask_t *);
1895:	unsigned int mempolicy_slab_node(void);
2725:	void mpol_free_shared_policy(struct shared_policy *);
2466:	int mpol_misplaced(struct page *, struct vm_area_struct *, unsigned long);
2877:	int mpol_parse_str(char *, struct mempolicy **);
2538:	void mpol_put_task_policy(struct task_struct *);
417:	void mpol_rebind_mm(struct mm_struct *, nodemask_t *);
406:	void mpol_rebind_task(struct task_struct *, const nodemask_t *);
2700:	int mpol_set_shared_policy(struct shared_policy *, struct vm_area_struct *, struct mempolicy *);
2661:	void mpol_shared_policy_init(struct shared_policy *, struct mempolicy *);
2426:	struct mempolicy *mpol_shared_policy_lookup(struct shared_policy *, unsigned long);
3014:	void mpol_to_str(char *, int, struct mempolicy *);
2844:	void numa_default_policy(void);
2790:	void numa_policy_init(void);
2281:	int vma_dup_policy(struct vm_area_struct *, struct vm_area_struct *);
1796:	bool vma_policy_mof(struct vm_area_struct *);
1640:	static long __do_compat_sys_get_mempolicy(int *, compat_ulong_t *, compat_ulong_t, compat_ulong_t, compat_ulong_t);
1691:	static long __do_compat_sys_mbind(compat_ulong_t, compat_ulong_t, compat_ulong_t, compat_ulong_t *, compat_ulong_t, compat_ulong_t);
1713:	static long __do_compat_sys_migrate_pages(compat_pid_t, compat_ulong_t, const compat_ulong_t *, const compat_ulong_t *);
1670:	static long __do_compat_sys_set_mempolicy(int, compat_ulong_t *, compat_ulong_t);
2120:	static struct page *alloc_page_interleave(gfp_t, unsigned int, unsigned int);
851:	static long do_set_mempolicy(unsigned short, unsigned short, nodemask_t *);
1372:	static int get_nodes(nodemask_t *, const unsigned long *, unsigned long);
1785:	static struct mempolicy *get_vma_policy(unsigned long, struct vm_area_struct *);
1604:	static int kernel_get_mempolicy(int *, unsigned long *, unsigned long, unsigned long, unsigned long);
1449:	static long kernel_mbind(unsigned long, unsigned long, unsigned long, const unsigned long *, unsigned long, unsigned int);
1503:	static int kernel_migrate_pages(pid_t, unsigned long, const unsigned long *, const unsigned long *);
1478:	static long kernel_set_mempolicy(int, const unsigned long *, unsigned long);
1016:	static int migrate_page_add(struct page *, struct list_head *, unsigned long);
1069:	static int migrate_to_node(struct mm_struct *, int, int, int);
281:	static struct mempolicy *mpol_new(unsigned short, unsigned short, nodemask_t *);
203:	static int mpol_new_interleave(struct mempolicy *, const nodemask_t *);
211:	static int mpol_new_preferred(struct mempolicy *, const nodemask_t *);
333:	static void mpol_rebind_default(struct mempolicy *, const nodemask_t *);
337:	static void mpol_rebind_nodemask(struct mempolicy *, const nodemask_t *);
388:	static void mpol_rebind_policy(struct mempolicy *, const nodemask_t *);
357:	static void mpol_rebind_preferred(struct mempolicy *, const nodemask_t *);
159:	static void mpol_relative_nodemask(nodemask_t *, const nodemask_t *, const nodemask_t *);
239:	static int mpol_set_nodemask(struct mempolicy *, const nodemask_t *, struct nodemask_scratch *);
1210:	static struct page *new_page(struct page *, unsigned long);
1942:	static unsigned int offset_il_node(struct mempolicy *, unsigned long);
1855:	static int policy_node(gfp_t, struct mempolicy *, int);
1842:	static nodemask_t *policy_nodemask(gfp_t, struct mempolicy *);
595:	static int queue_pages_hugetlb(pte_t *, unsigned long, unsigned long, unsigned long, struct mm_walk *);
531:	static int queue_pages_pte_range(pmd_t *, unsigned long, unsigned long, struct mm_walk *);
720:	static int queue_pages_range(struct mm_struct *, unsigned long, unsigned long, nodemask_t *, unsigned long, struct list_head *);
654:	static int queue_pages_test_walk(unsigned long, unsigned long, struct mm_walk *);
2763:	static int setup_numabalancing(char *);
2549:	static void sp_delete(struct shared_policy *, struct sp_node *);
2443:	static void sp_free(struct sp_node *);
2402:	static void sp_insert(struct shared_policy *, struct sp_node *);
2369:	static struct sp_node *sp_lookup(unsigned long, unsigned long, struct shared_policy *);

File mm/mempool.c:
367:	void *mempool_alloc(mempool_t *, gfp_t);
537:	void *mempool_alloc_pages(gfp_t, void *);
501:	void *mempool_alloc_slab(gfp_t, void *);
249:	mempool_t *mempool_create(int, mempool_alloc_t *, mempool_free_t *, void *);
257:	mempool_t *mempool_create_node(int, mempool_alloc_t *, mempool_free_t *, void *, gfp_t, int);
170:	void mempool_destroy(mempool_t *);
151:	void mempool_exit(mempool_t *);
444:	void mempool_free(void *, mempool_t *);
544:	void mempool_free_pages(void *, void *);
509:	void mempool_free_slab(void *, void *);
226:	int mempool_init(mempool_t *, int, mempool_alloc_t *, mempool_free_t *, void *);
180:	int mempool_init_node(mempool_t *, int, mempool_alloc_t *, mempool_free_t *, void *, gfp_t, int);
527:	void mempool_kfree(void *, void *);
520:	void *mempool_kmalloc(gfp_t, void *);
293:	int mempool_resize(mempool_t *, int);
130:	static void *remove_element(mempool_t *, mempool_t *);

File mm/migrate.c:
1829:	long __ia32_compat_sys_move_pages(const struct pt_regs *);
1820:	long __ia32_sys_move_pages(const struct pt_regs *);
308:	void __migration_entry_wait(struct mm_struct *, pte_t *, spinlock_t *);
1820:	long __x64_sys_move_pages(const struct pt_regs *);
779:	int buffer_migrate_page(struct address_space *, struct page *, struct page *, enum migrate_mode);
84:	int isolate_movable_page(struct page *, isolate_mode_t);
585:	int migrate_huge_page_move_mapping(struct address_space *, struct page *, struct page *);
1941:	int migrate_misplaced_page(struct page *, struct vm_area_struct *, int);
1996:	int migrate_misplaced_transhuge_page(struct mm_struct *, struct vm_area_struct *, pmd_t *, pmd_t, unsigned long, struct page *, int);
752:	int migrate_page(struct address_space *, struct page *, struct page *, enum migrate_mode);
731:	void migrate_page_copy(struct page *, struct page *);
437:	int migrate_page_move_mapping(struct address_space *, struct page *, struct page *, struct buffer_head *, enum migrate_mode, int);
672:	void migrate_page_states(struct page *, struct page *);
1392:	int migrate_pages(struct list_head *, new_page_t *, free_page_t *, unsigned long, enum migrate_mode, int);
63:	int migrate_prep(void);
77:	int migrate_prep_local(void);
2930:	int migrate_vma(const struct migrate_vma_ops *, struct vm_area_struct *, unsigned long, unsigned long, unsigned long *, unsigned long *, void *);
343:	void migration_entry_wait(struct mm_struct *, pmd_t *, unsigned long);
351:	void migration_entry_wait_huge(struct vm_area_struct *, struct mm_struct *, pte_t *);
359:	void pmd_migration_entry_wait(struct mm_struct *, pmd_t *);
1930:	bool pmd_trans_migrating(pmd_t);
146:	void putback_movable_page(struct page *);
167:	void putback_movable_pages(struct list_head *);
290:	void remove_migration_ptes(struct page *, struct page *, bool);
1877:	static struct page *alloc_misplaced_dst_page(struct page *, unsigned long);
381:	static bool buffer_migrate_lock_buffers(struct buffer_head *, enum migrate_mode);
1494:	static int do_move_pages_to_node(struct list_head *, int, struct mm_struct *);
1724:	static int do_pages_stat(struct mm_struct *, unsigned long, const void **, int *);
1758:	static int kernel_move_pages(pid_t, unsigned long, const void **, const int *, int *, int);
2386:	static bool migrate_vma_check_page(struct page *);
2357:	static void migrate_vma_collect(struct migrate_vma *);
2145:	static int migrate_vma_collect_hole(unsigned long, unsigned long, struct mm_walk *);
2177:	static int migrate_vma_collect_pmd(pmd_t *, unsigned long, unsigned long, struct mm_walk *);
2606:	static void migrate_vma_insert_page(unsigned long, struct page *, unsigned long *, unsigned long *, struct migrate_vma *);
917:	static int move_to_new_page(struct page *, struct page *, enum migrate_mode);
1892:	static int numamigrate_isolate_page(pg_data_t *, struct page *);
203:	static bool remove_migration_pte(struct page *, struct vm_area_struct *, unsigned long, void *);
839:	static int writeout(struct page *, struct address_space *);

File mm/mincore.c:
253:	long __ia32_sys_mincore(const struct pt_regs *);
253:	long __x64_sys_mincore(const struct pt_regs *);
95:	static int __mincore_unmapped_range(unsigned long, unsigned long, struct vm_area_struct *, unsigned char *);
24:	static int mincore_hugetlb(pte_t *, unsigned long, unsigned long, unsigned long, struct mm_walk *);
51:	static unsigned char mincore_page(struct address_space *, unsigned long);
122:	static int mincore_pte_range(pmd_t *, unsigned long, unsigned long, struct mm_walk *);
114:	static int mincore_unmapped_range(unsigned long, unsigned long, struct mm_walk *);

File mm/mlock.c:
721:	long __ia32_sys_mlock(const struct pt_regs *);
726:	long __ia32_sys_mlock2(const struct pt_regs *);
800:	long __ia32_sys_mlockall(const struct pt_regs *);
739:	long __ia32_sys_munlock(const struct pt_regs *);
721:	long __x64_sys_mlock(const struct pt_regs *);
726:	long __x64_sys_mlock2(const struct pt_regs *);
800:	long __x64_sys_mlockall(const struct pt_regs *);
739:	long __x64_sys_munlock(const struct pt_regs *);
829:	long __x64_sys_munlockall(const struct pt_regs *);
29:	bool can_do_mlock(void);
59:	void clear_page_mlock(struct page *);
90:	void mlock_vma_page(struct page *);
187:	unsigned int munlock_vma_page(struct page *);
450:	void munlock_vma_pages_range(struct vm_area_struct *, unsigned long, unsigned long);
846:	int user_shm_lock(size_t, struct user_struct *);
868:	void user_shm_unlock(size_t, struct user_struct *);
112:	static bool __munlock_isolate_lru_page(struct page *, bool);
134:	static void __munlock_isolated_page(struct page *);
159:	static void __munlock_isolation_failed(struct page *);
295:	static void __munlock_pagevec(struct pagevec *, struct zone *);
764:	static int apply_mlockall_flags(int);
588:	static int apply_vma_lock_flags(unsigned long, size_t, vm_flags_t);
676:	static int do_mlock(unsigned long, size_t, vm_flags_t);
524:	static int mlock_fixup(struct vm_area_struct *, struct vm_area_struct **, unsigned long, unsigned long, vm_flags_t);

File mm/mm_init.c:
63:	void mminit_verify_pageflags_layout(void);
25:	void mminit_verify_zonelist(void);
142:	static void mm_compute_batch(void);
172:	static int mm_compute_batch_init(void);
154:	static int mm_compute_batch_notifier(struct notifier_block *, unsigned long, void *);
184:	static int mm_sysfs_init(void);
128:	static int set_mminit_loglevel(char *);

File mm/mmap.c:
1388:	unsigned long __do_mmap(struct mm_struct *, struct file *, unsigned long, unsigned long, unsigned long, unsigned long, vm_flags_t, unsigned long, unsigned long *, struct list_head *);
189:	long __ia32_sys_brk(const struct pt_regs *);
1871:	long __ia32_sys_mmap_pgoff(const struct pt_regs *);
3188:	long __ia32_sys_munmap(const struct pt_regs *);
3198:	long __ia32_sys_remap_file_pages(const struct pt_regs *);
2935:	int __split_vma(struct mm_struct *, struct vm_area_struct *, unsigned long, int);
688:	int __vma_adjust(struct vm_area_struct *, unsigned long, unsigned long, unsigned long, struct vm_area_struct *, struct vm_area_struct *);
559:	void __vma_link_rb(struct mm_struct *, struct vm_area_struct *, struct rb_node **, struct rb_node *);
189:	long __x64_sys_brk(const struct pt_regs *);
1871:	long __x64_sys_mmap_pgoff(const struct pt_regs *);
3188:	long __x64_sys_munmap(const struct pt_regs *);
3198:	long __x64_sys_remap_file_pages(const struct pt_regs *);
3771:	struct vm_area_struct *_install_special_mapping(struct mm_struct *, unsigned long, unsigned long, unsigned long, const struct vm_special_mapping *);
3532:	struct vm_area_struct *copy_vma(struct vm_area_struct **, unsigned long, unsigned long, unsigned long, bool *);
1797:	unsigned long do_mmap(struct file *, unsigned long, unsigned long, unsigned long, unsigned long, vm_flags_t, unsigned long, unsigned long *, struct list_head *);
3013:	int do_munmap(struct mm_struct *, unsigned long, size_t, struct list_head *);
3160:	unsigned long do_vm_mmap(struct mm_struct *, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long);
3133:	int do_vm_munmap(struct mm_struct *, unsigned long, size_t);
3421:	void exit_mmap(struct mm_struct *);
2709:	int expand_downwards(struct vm_area_struct *, unsigned long);
2822:	int expand_stack(struct vm_area_struct *, unsigned long);
2828:	struct vm_area_struct *find_extend_vma(struct mm_struct *, unsigned long);
1266:	struct anon_vma *find_mergeable_anon_vma(struct vm_area_struct *);
2511:	struct vm_area_struct *find_vma(struct mm_struct *, unsigned long);
2548:	struct vm_area_struct *find_vma_prev(struct mm_struct *, unsigned long, struct vm_area_struct **);
2467:	unsigned long get_unmapped_area(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);
3495:	int insert_vm_struct(struct mm_struct *, struct vm_area_struct *);
3780:	int install_special_mapping(struct mm_struct *, unsigned long, unsigned long, unsigned long, struct page **);
1812:	unsigned long ksys_mmap_pgoff(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long);
3611:	bool may_expand_vm(struct mm_struct *, vm_flags_t, unsigned long);
3951:	void mm_drop_all_locks(struct mm_struct *);
3871:	int mm_take_all_locks(struct mm_struct *);
3973:	void mmap_init(void);
2122:	unsigned long mmap_region(struct file *, unsigned long, unsigned long, vm_flags_t, unsigned long, struct list_head *);
2999:	int split_vma(struct mm_struct *, struct vm_area_struct *, unsigned long, int);
157:	void unlink_file_vma(struct vm_area_struct *);
2129:	unsigned long unmapped_area(struct vm_unmapped_area_info *);
2232:	unsigned long unmapped_area_topdown(struct vm_unmapped_area_info *);
3414:	int vm_brk(unsigned long, unsigned long);
3387:	int vm_brk_flags(unsigned long, unsigned long, unsigned long);
107:	pgprot_t vm_get_page_prot(unsigned long);
3114:	int vm_munmap(unsigned long, size_t);
3636:	void vm_stat_account(struct mm_struct *, vm_flags_t, long);
3754:	bool vma_is_special_mapping(const struct vm_area_struct *, const struct vm_special_mapping *);
1106:	struct vm_area_struct *vma_merge(struct mm_struct *, struct vm_area_struct *, unsigned long, unsigned long, unsigned long, struct anon_vma *, struct file *, unsigned long, struct mempolicy *, struct vm_userfaultfd_ctx);
123:	void vma_set_page_prot(struct vm_area_struct *);
1908:	int vma_wants_writenotify(struct vm_area_struct *, pgprot_t);
3717:	static struct vm_area_struct *__install_special_mapping(struct mm_struct *, unsigned long, unsigned long, unsigned long, void *, const struct vm_operations_struct *);
1956:	static unsigned long __mmap_region(struct mm_struct *, struct file *, unsigned long, unsigned long, vm_flags_t, unsigned long, struct list_head *);
140:	static void __remove_shared_vm_struct(struct vm_area_struct *, struct file *, struct address_space *);
583:	static void __vma_link_file(struct vm_area_struct *);
429:	static void __vma_rb_erase(struct vm_area_struct *, struct rb_root *);
1216:	static int anon_vma_compatible(struct vm_area_struct *, struct vm_area_struct *);
1030:	static int can_vma_merge_before(struct vm_area_struct *, struct anon_vma *, unsigned long, struct vm_userfaultfd_ctx, struct file *, unsigned long);
2786:	static int cmdline_parse_stack_guard_gap(char *);
3309:	static int do_brk_flags(unsigned long, unsigned long, unsigned long, struct list_head *);
4012:	static int init_admin_reserve(void);
4084:	static int init_reserve_notifier(void);
3991:	static int init_user_reserve(void);
172:	static struct vm_area_struct *remove_vma(struct vm_area_struct *);
4041:	static int reserve_mem_notifier(struct notifier_block *, unsigned long, void *);
3653:	static void special_mapping_close(struct vm_area_struct *);
3687:	static vm_fault_t special_mapping_fault(struct vm_fault *);
3662:	static int special_mapping_mremap(struct vm_area_struct *);
3657:	static const char *special_mapping_name(struct vm_area_struct *);
2884:	static void unmap_region(struct mm_struct *, struct vm_area_struct *, struct vm_area_struct *, unsigned long, unsigned long);
3816:	static void vm_lock_mapping(struct address_space *, struct mm_struct *);
264:	static long vma_compute_subtree_gap(struct vm_area_struct *);
403:	static void vma_gap_callbacks_rotate(struct rb_node *, struct rb_node *);
611:	static void vma_link(struct mm_struct *, struct vm_area_struct *, struct vm_area_struct *, struct rb_node **, struct rb_node *);

File mm/mmu_context.c:
53:	void unuse_mm(struct mm_struct *);
22:	void use_mm(struct mm_struct *);

File mm/mmu_gather.c:
119:	bool __tlb_remove_page_size(struct mmu_gather *, struct page *, int);
90:	void arch_tlb_finish_mmu(struct mmu_gather *, unsigned long, unsigned long, bool);
44:	void arch_tlb_gather_mmu(struct mmu_gather *, struct mm_struct *, unsigned long, unsigned long);
257:	void tlb_finish_mmu(struct mmu_gather *, unsigned long, unsigned long);
80:	void tlb_flush_mmu(struct mmu_gather *);
66:	void tlb_flush_mmu_free(struct mmu_gather *);
142:	void tlb_flush_pmd_range(struct mmu_gather *, unsigned long, unsigned long);
250:	void tlb_gather_mmu(struct mmu_gather *, struct mm_struct *, unsigned long, unsigned long);
217:	void tlb_remove_table(struct mmu_gather *, void *);
206:	void tlb_table_flush(struct mmu_gather *);
193:	static void tlb_remove_table_rcu(struct callback_head *);
175:	static void tlb_remove_table_smp_sync(void *);

File mm/mmu_notifier.c:
163:	void __mmu_notifier_change_pte(struct mm_struct *, unsigned long, pte_t);
110:	int __mmu_notifier_clear_flush_young(struct mm_struct *, unsigned long, unsigned long);
127:	int __mmu_notifier_clear_young(struct mm_struct *, unsigned long, unsigned long);
235:	void __mmu_notifier_invalidate_range(struct mm_struct *, unsigned long, unsigned long);
203:	void __mmu_notifier_invalidate_range_end(struct mm_struct *, unsigned long, unsigned long, bool);
177:	int __mmu_notifier_invalidate_range_start(struct mm_struct *, unsigned long, unsigned long, bool);
362:	void __mmu_notifier_mm_destroy(struct mm_struct *);
355:	int __mmu_notifier_register(struct mmu_notifier *, struct mm_struct *);
57:	void __mmu_notifier_release(struct mm_struct *);
144:	int __mmu_notifier_test_young(struct mm_struct *, unsigned long);
254:	bool mm_has_blockable_invalidate_notifiers(struct mm_struct *);
31:	void mmu_notifier_call_srcu(struct callback_head *, void (*)(struct callback_head *));
345:	int mmu_notifier_register(struct mmu_notifier *, struct mm_struct *);
38:	void mmu_notifier_synchronize(void);
379:	void mmu_notifier_unregister(struct mmu_notifier *, struct mm_struct *);
423:	void mmu_notifier_unregister_no_release(struct mmu_notifier *, struct mm_struct *);
281:	static int do_mmu_notifier_register(struct mmu_notifier *, struct mm_struct *, int);

File mm/mmzone.c:
56:	struct zoneref *__next_zones_zonelist(struct zoneref *, enum zone_type, nodemask_t *);
13:	struct pglist_data *first_online_pgdat(void);
89:	void lruvec_init(struct lruvec *);
18:	struct pglist_data *next_online_pgdat(struct pglist_data *);
30:	struct zone *next_zone(struct zone *);
100:	int page_cpupid_xchg_last(struct page *, int);

File mm/mprotect.c:
611:	long __ia32_sys_mprotect(const struct pt_regs *);
625:	long __ia32_sys_pkey_alloc(const struct pt_regs *);
655:	long __ia32_sys_pkey_free(const struct pt_regs *);
619:	long __ia32_sys_pkey_mprotect(const struct pt_regs *);
611:	long __x64_sys_mprotect(const struct pt_regs *);
625:	long __x64_sys_pkey_alloc(const struct pt_regs *);
655:	long __x64_sys_pkey_free(const struct pt_regs *);
619:	long __x64_sys_pkey_mprotect(const struct pt_regs *);
329:	unsigned long change_protection(struct vm_area_struct *, unsigned long, unsigned long, pgprot_t, int, int);
380:	int mprotect_fixup(struct vm_area_struct *, struct vm_area_struct **, unsigned long, unsigned long, unsigned long);
279:	static unsigned long change_p4d_range(struct vm_area_struct *, pgd_t *, unsigned long, unsigned long, pgprot_t, int, int);
490:	static int do_mprotect_pkey(unsigned long, size_t, unsigned long, int);
350:	static int prot_none_hugetlb_entry(pte_t *, unsigned long, unsigned long, unsigned long, struct mm_walk *);
343:	static int prot_none_pte_entry(pte_t *, unsigned long, unsigned long, struct mm_walk *);
358:	static int prot_none_test(unsigned long, unsigned long, struct mm_walk *);

File mm/mremap.c:
516:	long __ia32_sys_mremap(const struct pt_regs *);
516:	long __x64_sys_mremap(const struct pt_regs *);
195:	unsigned long move_page_tables(struct vm_area_struct *, unsigned long, struct vm_area_struct *, unsigned long, unsigned long, bool);
256:	static unsigned long move_vma(struct vm_area_struct *, unsigned long, unsigned long, unsigned long, unsigned long, bool *, struct vm_userfaultfd_ctx *, struct list_head *);
436:	static unsigned long mremap_to(unsigned long, unsigned long, unsigned long, unsigned long, bool *, struct vm_userfaultfd_ctx *, struct list_head *, struct list_head *);
496:	static int vma_expandable(struct vm_area_struct *, unsigned long);
371:	static struct vm_area_struct *vma_to_resize(unsigned long, unsigned long, unsigned long, unsigned long *);

File mm/msync.c:
32:	long __ia32_sys_msync(const struct pt_regs *);
32:	long __x64_sys_msync(const struct pt_regs *);

File mm/nobootmem.c:
307:	void *___alloc_bootmem_node_nopanic(pg_data_t *, unsigned long, unsigned long, unsigned long, unsigned long);
299:	void *__alloc_bootmem(unsigned long, unsigned long, unsigned long);
406:	void *__alloc_bootmem_low(unsigned long, unsigned long, unsigned long);
437:	void *__alloc_bootmem_low_node(pg_data_t *, unsigned long, unsigned long, unsigned long);
412:	void *__alloc_bootmem_low_nopanic(unsigned long, unsigned long, unsigned long);
375:	void *__alloc_bootmem_node(pg_data_t *, unsigned long, unsigned long, unsigned long);
384:	void *__alloc_bootmem_node_high(pg_data_t *, unsigned long, unsigned long, unsigned long);
334:	void *__alloc_bootmem_node_nopanic(pg_data_t *, unsigned long, unsigned long, unsigned long);
261:	void *__alloc_bootmem_nopanic(unsigned long, unsigned long, unsigned long);
181:	unsigned long free_all_bootmem(void);
218:	void free_bootmem(unsigned long, unsigned long);
84:	void free_bootmem_late(unsigned long, unsigned long);
203:	void free_bootmem_node(pg_data_t *, unsigned long, unsigned long);
163:	void reset_all_zones_managed_pages(void);
155:	void reset_node_managed_pages(pg_data_t *);
269:	static void *___alloc_bootmem(unsigned long, unsigned long, unsigned long, unsigned long);
223:	static void *___alloc_bootmem_nopanic(unsigned long, unsigned long, unsigned long, unsigned long);
40:	static void *__alloc_memory_core_early(int, u64, u64, u64, u64);

File mm/oom_kill.c:
586:	bool __oom_reap_task_mm(struct mm_struct *);
797:	void exit_oom_victim(void);
126:	struct task_struct *find_lock_task_mm(struct task_struct *);
209:	unsigned long oom_badness(struct task_struct *, struct mem_cgroup *, const nodemask_t *, unsigned long);
829:	bool oom_killer_disable(long);
808:	void oom_killer_enable(void);
1198:	bool out_of_memory(struct oom_control *);
1292:	void pagefault_out_of_memory(void);
564:	bool process_shares_mm(struct task_struct *, struct mm_struct *);
1135:	int register_oom_notifier(struct notifier_block *);
1141:	int unregister_oom_notifier(struct notifier_block *);
928:	static void __oom_kill_process(struct task_struct *);
526:	static void dump_header(struct oom_control *, struct task_struct *);
768:	static void mark_oom_victim(struct task_struct *);
367:	static int oom_evaluate_task(struct task_struct *, void *);
746:	static int oom_init(void);
1011:	static int oom_kill_memcg_member(struct task_struct *, void *);
1021:	static void oom_kill_process(struct oom_control *, const char *);
710:	static int oom_reaper(void *);
160:	static bool oom_unkillable_task(struct task_struct *, struct mem_cgroup *, const nodemask_t *);
881:	static bool task_will_free_mem(struct task_struct *);
730:	static void wake_oom_reaper(struct task_struct *);

File mm/page-writeback.c:
2613:	void __cancel_dirty_page(struct page *);
2396:	int __set_page_dirty_no_writeback(struct page *);
2462:	int __set_page_dirty_nobuffers(struct page *);
2761:	int __test_set_page_writeback(struct page *, bool);
2439:	void account_page_cleaned(struct page *, struct address_space *, struct bdi_writeback *);
2410:	void account_page_dirtied(struct page *, struct address_space *);
2501:	void account_page_redirty(struct page *);
1861:	void balance_dirty_pages_ratelimited(struct address_space *);
695:	int bdi_set_max_ratio(struct backing_dev_info *, unsigned int);
674:	int bdi_set_min_ratio(struct backing_dev_info *, unsigned int);
2650:	int clear_page_dirty_for_io(struct page *);
525:	int dirty_background_bytes_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
513:	int dirty_background_ratio_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
552:	int dirty_bytes_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
537:	int dirty_ratio_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
1969:	int dirty_writeback_centisecs_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
2336:	int do_writepages(struct address_space *, struct writeback_control *);
2318:	int generic_writepages(struct address_space *, struct writeback_control *);
458:	void global_dirty_limits(unsigned long *, unsigned long *);
2005:	void laptop_io_completion(struct backing_dev_info *);
1992:	void laptop_mode_timer_fn(struct timer_list *);
2015:	void laptop_sync_completion(void);
2817:	int mapping_tagged(struct address_space *, int);
501:	bool node_dirty_ok(struct pglist_data *);
2076:	void page_writeback_init(void);
2524:	int redirty_page_for_writepage(struct writeback_control *, struct page *);
2546:	int set_page_dirty(struct page *);
2589:	int set_page_dirty_lock(struct page *);
2104:	void tag_pages_for_writeback(struct address_space *, unsigned long, unsigned long);
2711:	int test_clear_page_writeback(struct page *);
2831:	void wait_for_stable_page(struct page *);
790:	unsigned long wb_calc_thresh(struct bdi_writeback *, unsigned long);
660:	void wb_domain_exit(struct wb_domain *);
646:	int wb_domain_init(struct wb_domain *, gfp_t);
1923:	bool wb_over_bg_thresh(struct bdi_writeback *);
1394:	void wb_update_bandwidth(struct bdi_writeback *, unsigned long);
613:	void wb_writeout_inc(struct bdi_writeback *);
2160:	int write_cache_pages(struct address_space *, struct writeback_control *, writepage_t, void *);
2364:	int write_one_page(struct page *);
2039:	void writeback_set_ratelimit(void);
763:	static unsigned long __wb_calc_thresh(struct dirty_throttle_control *);
1344:	static void __wb_update_bandwidth(struct dirty_throttle_control *, struct dirty_throttle_control *, unsigned long, bool);
2301:	static int __writepage(struct page *, struct writeback_control *, void *);
1560:	static void balance_dirty_pages(struct bdi_writeback *, unsigned long);
1409:	static unsigned long dirty_poll_interval(unsigned long, unsigned long);
392:	static void domain_dirty_limits(struct dirty_throttle_control *);
1161:	static void domain_update_bandwidth(struct dirty_throttle_control *, unsigned long);
2052:	static int page_writeback_cpu_online(unsigned int);
576:	static void wb_domain_writeout_inc(struct wb_domain *, unsigned int, struct fprop_local_percpu *);
1437:	static long wb_min_pause(long, unsigned long, unsigned long, int *, struct bdi_writeback *, struct bdi_writeback *);
903:	static void wb_position_ratio(struct dirty_throttle_control *);
1186:	static void wb_update_dirty_ratelimit(struct dirty_throttle_control *, unsigned long, unsigned long);
627:	static void writeout_period(struct timer_list *);

File mm/page_alloc.c:
6196:	unsigned long __absent_pages_in_range(int, unsigned long, unsigned long);
4564:	struct page *__alloc_pages_nodemask(gfp_t, unsigned int, int, nodemask_t *);
6007:	int __early_pfn_to_nid(unsigned long, struct mminit_pfnnid_cache *);
4654:	void __free_pages(struct page *, unsigned int);
1422:	void __free_pages_bootmem(struct page *, unsigned long, unsigned int);
1337:	void __free_pages_core(struct page *, unsigned int);
4629:	unsigned long __get_free_pages(gfp_t, unsigned int);
3012:	int __isolate_free_page(struct page *, unsigned int);
8322:	void __offline_isolated_pages(unsigned long, unsigned long);
4706:	void __page_frag_cache_drain(struct page *, unsigned int);
1449:	struct page *__pageblock_pfn_to_page(unsigned long, unsigned long, struct zone *);
3069:	void __putback_isolated_page(struct page *, unsigned int, int);
3315:	bool __zone_watermark_ok(struct zone *, unsigned int, unsigned long, int, unsigned int, long);
6219:	unsigned long absent_pages_in_range(unsigned long, unsigned long);
7252:	void adjust_managed_page_count(struct page *, long);
8137:	int alloc_contig_range(unsigned long, unsigned long, unsigned int, gfp_t);
7830:	void *alloc_large_system_hash(const char *, unsigned long, unsigned long, int, int, unsigned int *, unsigned int *, unsigned long, unsigned long);
4815:	void *alloc_pages_exact(size_t, gfp_t);
4838:	void *alloc_pages_exact_nid(int, size_t, gfp_t);
5664:	void build_all_zonelists(pg_data_t *);
8463:	int cache_limit_mbytes_sysctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
8436:	int cache_limit_ratio_sysctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
1499:	void clear_zone_contiguous(struct zone *);
2766:	void drain_all_pages(struct zone *);
2735:	void drain_local_pages(struct zone *);
2677:	void drain_zone_pages(struct zone *, struct per_cpu_pages *);
1373:	int early_pfn_to_nid(unsigned long);
6842:	unsigned long find_min_pfn_with_active_regions(void);
2368:	int find_suitable_fallback(struct free_area *, unsigned int, int, bool, bool *);
7377:	void free_area_init(unsigned long *);
6501:	void free_area_init_core_hotplug(int);
6649:	void free_area_init_node(int, unsigned long *, unsigned long, unsigned long *);
7116:	void free_area_init_nodes(unsigned long *);
6036:	void free_bootmem_with_active_regions(int, unsigned long);
634:	void free_compound_page(struct page *);
8269:	void free_contig_range(unsigned long, unsigned int);
4664:	void free_pages(unsigned long, unsigned int);
4859:	void free_pages_exact(void *, size_t);
7265:	unsigned long free_reserved_area(void *, void *, int, char *);
2940:	void free_unref_page(struct page *);
2956:	void free_unref_page_list(struct list_head *);
6079:	void get_pfn_range_for_nid(unsigned int, unsigned long *, unsigned long *);
462:	unsigned long get_pfnblock_flags_mask(struct page *, unsigned long, unsigned long, unsigned long);
4640:	unsigned long get_zeroed_page(gfp_t);
4116:	bool gfp_pfmemalloc_allowed(gfp_t);
7944:	bool has_unmovable_pages(struct zone *, struct page *, int, int, int);
5979:	void init_currently_empty_zone(struct zone *, unsigned long, unsigned long);
7599:	int init_per_zone_wmark_min(void);
8373:	bool is_free_buddy_page(struct page *);
7734:	int lowmem_reserve_ratio_sysctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
2843:	void mark_free_pages(struct zone *);
7309:	void mem_init_print_info(const char *);
5699:	void memmap_init_zone(unsigned long, int, unsigned long, unsigned long, enum meminit_context, struct vmem_altmap *);
7637:	int min_free_kbytes_sysctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
2218:	int move_freepages_block(struct zone *, struct page *, int, int *);
6787:	unsigned long node_map_pfn_alignment(void);
4907:	unsigned long nr_free_buffer_pages(void);
4919:	unsigned long nr_free_pagecache_pages(void);
5335:	int numa_zonelist_order_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
7409:	void page_alloc_init(void);
1857:	void page_alloc_init_late(void);
8423:	unsigned long page_cache_over_limit(void);
4715:	void *page_frag_alloc(struct page_frag_cache *, unsigned int, gfp_t);
4777:	void page_frag_free(void *);
7747:	int percpu_pagelist_fraction_sysctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
206:	void pm_restore_gfp_mask(void);
215:	void pm_restrict_gfp_mask(void);
223:	bool pm_suspended_storage(void);
2053:	void post_alloc_hook(struct page *, unsigned int, gfp_t);
640:	void prep_compound_page(struct page *, unsigned int);
1300:	void reserve_bootmem_region(phys_addr_t, phys_addr_t);
7372:	void set_dma_reserve(unsigned long);
8398:	bool set_hwpoison_free_buddy_page(struct page *);
513:	void set_pageblock_migratetype(struct page *, int);
6420:	void set_pageblock_order(void);
482:	void set_pfnblock_flags_mask(struct page *, unsigned long, unsigned long, unsigned long, unsigned long);
1477:	void set_zone_contiguous(struct zone *);
6759:	void setup_nr_node_ids(void);
5951:	void setup_per_cpu_pageset(void);
7566:	void setup_per_zone_wmarks(void);
5939:	void setup_zone_pageset(struct zone *);
5085:	void show_free_areas(unsigned int, nodemask_t *);
4930:	long si_mem_available(void);
4981:	void si_meminfo(struct sysinfo *);
4995:	void si_meminfo_node(struct sysinfo *, int);
6059:	void sparse_memory_present_with_active_regions(int);
2999:	void split_page(struct page *, unsigned int);
7710:	int sysctl_min_slab_ratio_sysctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
7683:	int sysctl_min_unmapped_ratio_sysctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
3612:	void warn_alloc(gfp_t, nodemask_t *, const char *, ...);
7653:	int watermark_scale_factor_sysctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
6717:	void zero_resv_unavail(void);
8297:	void zone_pcp_reset(struct zone *);
8287:	void zone_pcp_update(struct zone *);
3380:	bool zone_watermark_ok(struct zone *, unsigned int, unsigned long, int, unsigned int);
3411:	bool zone_watermark_ok_safe(struct zone *, unsigned int, unsigned long, int);
3752:	static struct page *__alloc_pages_direct_compact(gfp_t, unsigned int, unsigned int, const struct alloc_context *, enum compact_priority, enum compact_result *);
4256:	static struct page *__alloc_pages_slowpath(gfp_t, unsigned int, struct alloc_context *);
5588:	static void __build_all_zonelists(void *);
1319:	static void __free_pages_ok(struct page *, unsigned int, fpi_t);
1251:	static void __init_single_page(struct page *, unsigned long, int, unsigned long);
5306:	static int __parse_numa_zonelist_order(char *);
1850:	static bool _deferred_grow_zone(struct zone *, unsigned int);
6128:	static void adjust_zone_range_for_zone_movable(int, unsigned long, unsigned long, unsigned long *, unsigned long *, unsigned long);
575:	static void bad_page(struct page *, const char *, unsigned long);
5632:	static void build_all_zonelists_init(void);
5465:	static void build_zonelists(pg_data_t *);
5286:	static int build_zonerefs_node(pg_data_t *, struct zoneref *);
7423:	static void calculate_totalreserve_pages(void);
1971:	static void check_new_page_bad(struct page *);
7194:	static int cmdline_parse_core(char *, unsigned long *, unsigned long *);
7225:	static int cmdline_parse_kernelcore(char *);
7241:	static int cmdline_parse_movablecore(char *);
1606:	static int deferred_free_chunk(unsigned long, unsigned long, struct deferred_args *);
1578:	static int deferred_free_pages(int, unsigned long, unsigned long, int);
1505:	static void deferred_free_range(unsigned long, unsigned long);
1779:	static bool deferred_grow_zone(struct zone *, unsigned int);
1645:	static int deferred_init_chunk(unsigned long, unsigned long, struct deferred_args *);
1655:	static int deferred_init_memmap(void *);
1620:	static int deferred_init_pages(int, int, unsigned long, unsigned long);
1556:	static bool deferred_pfn_valid(int, unsigned long, struct mminit_pfnnid_cache *);
2745:	static void drain_local_pages_wq(struct work_struct *);
2720:	static void drain_pages(unsigned int);
2698:	static void drain_pages_zone(unsigned int, struct zone *);
107:	static int early_fpi_to_tail(char *);
366:	static bool early_page_uninitialised(unsigned long);
6819:	static unsigned long find_min_pfn_for_node(int);
1237:	static void free_one_page(struct zone *, struct page *, unsigned long, unsigned int, int, fpi_t);
970:	static void free_pages_check_bad(struct page *);
1124:	static bool free_pcp_prepare(struct page *);
1155:	static void free_pcppages_bulk(struct zone *, int, struct per_cpu_pages *);
2903:	static void free_unref_page_commit(struct page *, unsigned long);
2891:	static bool free_unref_page_prepare(struct page *, unsigned long);
3441:	static struct page *get_page_from_freelist(gfp_t, unsigned int, int, const struct alloc_context *);
4786:	static void *make_alloc_exact(unsigned long, unsigned int, size_t);
4881:	static unsigned long nr_free_zone_pages(int);
7384:	static int page_alloc_cpu_dead(unsigned int);
5887:	static void pageset_init(struct per_cpu_pageset *);
5920:	static void pageset_set_high_and_batch(struct zone *, struct per_cpu_pageset *);
6466:	static void pgdat_init_internals(struct pglist_data *);
1535:	static void pgdat_init_report_one_done(void);
7788:	static int set_hashdist(char *);
7697:	static void setup_min_slab_ratio(void);
7669:	static void setup_min_unmapped_ratio(void);
5321:	static int setup_numa_zonelist_order(char *);
7463:	static void setup_per_zone_lowmem_reserve(void);
5031:	static bool show_mem_node_skip(int, nodemask_t *, unsigned int);
2292:	static void steal_suitable_fallback(struct zone *, struct page *, int, bool);
2445:	static bool unreserve_highatomic_pageblock(const struct alloc_context *, bool);
4025:	static void wake_all_kswapds(unsigned int, gfp_t, const struct alloc_context *);
6686:	static u64 zero_pfn_range(unsigned long, unsigned long);
5805:	static int zone_batchsize(struct zone *);
5964:	static void zone_pcp_init(struct zone *);

File mm/page_counter.c:
55:	void page_counter_cancel(struct page_counter *, unsigned long);
72:	void page_counter_charge(struct page_counter *, unsigned long);
248:	int page_counter_memparse(const char *, const char *, unsigned long *);
229:	void page_counter_set_low(struct page_counter *, unsigned long);
173:	int page_counter_set_max(struct page_counter *, unsigned long);
212:	void page_counter_set_min(struct page_counter *, unsigned long);
99:	bool page_counter_try_charge(struct page_counter *, unsigned long, struct page_counter **);
155:	void page_counter_uncharge(struct page_counter *, unsigned long);
16:	static void propagate_protected_usage(struct page_counter *, unsigned long);

File mm/page_idle.c:
118:	static ssize_t page_idle_bitmap_read(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
163:	static ssize_t page_idle_bitmap_write(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t, size_t);
92:	static void page_idle_clear_pte_refs(struct page *);
51:	static bool page_idle_clear_pte_refs_one(struct page *, struct vm_area_struct *, unsigned long, void *);
32:	static struct page *page_idle_get_page(unsigned long);
224:	static int page_idle_init(void);

File mm/page_io.c:
273:	int __swap_writepage(struct page *, struct writeback_control *, bio_end_io_t *);
50:	void end_swap_bio_write(struct bio *);
147:	int generic_swapfile_activate(struct swap_info_struct *, struct file *, sector_t *);
347:	int swap_readpage(struct page *, bool);
418:	int swap_set_page_dirty(struct page *);
245:	int swap_writepage(struct page *, struct writeback_control *);
123:	static void end_swap_bio_read(struct bio *);
29:	static struct bio *get_swap_bio(gfp_t, struct page *, bio_end_io_t *);
74:	static void swap_slot_free_notify(struct page *);

File mm/page_isolation.c:
326:	struct page *alloc_migrate_target(struct page *, unsigned long);
198:	int start_isolate_page_range(unsigned long, unsigned long, unsigned int, int);
294:	int test_pages_isolated(unsigned long, unsigned long, bool);
238:	int undo_isolate_page_range(unsigned long, unsigned long, unsigned int);
90:	static void unset_migratetype_isolate(struct page *, unsigned int);

File mm/page_vma_mapped.c:
300:	int page_mapped_in_vma(struct page *, struct vm_area_struct *);
145:	bool page_vma_mapped_walk(struct page_vma_mapped_walk *);
81:	static bool check_pte(struct page_vma_mapped_walk *);

File mm/pagewalk.c:
294:	int walk_page_range(unsigned long, unsigned long, struct mm_walk *);
344:	int walk_page_vma(struct vm_area_struct *, struct mm_walk *);
245:	static int __walk_page_range(unsigned long, unsigned long, struct mm_walk *);
220:	static int walk_page_test(unsigned long, unsigned long, struct mm_walk *);

File mm/percpu-vm.c:
332:	static struct pcpu_chunk *pcpu_create_chunk(gfp_t);
54:	static void pcpu_free_pages(struct page **, int, int, struct pcpu_chunk *);
32:	static struct page **pcpu_get_pages(void);
276:	static int pcpu_populate_chunk(struct pcpu_chunk *, int, int, gfp_t);

File mm/percpu.c:
1558:	void *__alloc_percpu(size_t, size_t);
1545:	void *__alloc_percpu_gfp(size_t, size_t, gfp_t);
1580:	void *__alloc_reserved_percpu(size_t, size_t);
1761:	bool __is_kernel_percpu_address(unsigned long, unsigned long *);
1719:	void free_percpu(void *);
1797:	bool is_kernel_percpu_address(unsigned long);
1884:	struct pcpu_alloc_info *pcpu_alloc_alloc_info(int, int);
2445:	int pcpu_embed_first_chunk(size_t, size_t, size_t, pcpu_fc_cpu_distance_fn_t *, pcpu_fc_alloc_fn_t, pcpu_fc_free_fn_t);
1919:	void pcpu_free_alloc_info(struct pcpu_alloc_info *);
2778:	unsigned long pcpu_nr_pages(void);
2574:	int pcpu_page_first_chunk(size_t, pcpu_fc_alloc_fn_t, pcpu_fc_free_fn_t, pcpu_fc_populate_pte_fn_t);
2038:	int pcpu_setup_first_chunk(const struct pcpu_alloc_info *, void *);
1825:	phys_addr_t per_cpu_ptr_to_phys(void *);
1353:	static void *pcpu_alloc(size_t, size_t, bool, gfp_t);
978:	static int pcpu_alloc_area(struct pcpu_chunk *, int, size_t, int);
1084:	static struct pcpu_chunk *pcpu_alloc_first_chunk(unsigned long, int);
1596:	static void pcpu_balance_workfn(struct work_struct *);
653:	static void pcpu_block_refresh_hint(struct pcpu_chunk *, int);
624:	static void pcpu_block_update(struct pcpu_block_md *, int, int);
680:	static void pcpu_block_update_hint_alloc(struct pcpu_chunk *, int, int);
2276:	static struct pcpu_alloc_info *pcpu_build_alloc_info(size_t, size_t, size_t, pcpu_fc_cpu_distance_fn_t *);
1236:	static void pcpu_chunk_populated(struct pcpu_chunk *, int, int, bool);
584:	static void pcpu_chunk_refresh_hint(struct pcpu_chunk *);
504:	static void pcpu_chunk_relocate(struct pcpu_chunk *, int);
558:	static void pcpu_chunk_update(struct pcpu_chunk *, int, int);
529:	static int pcpu_cnt_pop_pages(struct pcpu_chunk *, int, int);
1931:	static void pcpu_dump_alloc_info(const char *, const struct pcpu_alloc_info *);
926:	static int pcpu_find_block_fit(struct pcpu_chunk *, int, size_t, bool);
1030:	static void pcpu_free_area(struct pcpu_chunk *, int);
1212:	static void pcpu_free_chunk(struct pcpu_chunk *);
469:	static void *pcpu_mem_zalloc(size_t, gfp_t);
387:	static void pcpu_next_fit_region(struct pcpu_chunk *, int, int, int *, int *);
332:	static void pcpu_next_md_free_region(struct pcpu_chunk *, int *, int *);
269:	static void pcpu_next_unpop(unsigned long *, int *, int *, int);
191:	static void pcpu_schedule_balance_work(void);
2216:	static int percpu_alloc_setup(char *);
2788:	static int percpu_enable_async(void);

File mm/pgtable-generic.c:
26:	void p4d_clear_bad(p4d_t *);
20:	void pgd_clear_bad(pgd_t *);
151:	void pgtable_trans_huge_deposit(struct mm_struct *, pmd_t *, pgtable_t);
167:	pgtable_t pgtable_trans_huge_withdraw(struct mm_struct *, pmd_t *);
38:	void pmd_clear_bad(pmd_t *);
123:	pmd_t pmdp_huge_clear_flush(struct vm_area_struct *, unsigned long, pmd_t *);
184:	pmd_t pmdp_invalidate(struct vm_area_struct *, unsigned long, pmd_t *);
80:	pte_t ptep_clear_flush(struct vm_area_struct *, unsigned long, pte_t *);
32:	void pud_clear_bad(pud_t *);
136:	pud_t pudp_huge_clear_flush(struct vm_area_struct *, unsigned long, pud_t *);

File mm/process_vm_access.c:
354:	long __ia32_compat_sys_process_vm_readv(const struct pt_regs *);
365:	long __ia32_compat_sys_process_vm_writev(const struct pt_regs *);
298:	long __ia32_sys_process_vm_readv(const struct pt_regs *);
305:	long __ia32_sys_process_vm_writev(const struct pt_regs *);
298:	long __x64_sys_process_vm_readv(const struct pt_regs *);
305:	long __x64_sys_process_vm_writev(const struct pt_regs *);
316:	static ssize_t compat_process_vm_rw(compat_pid_t, const struct compat_iovec *, unsigned long, const struct compat_iovec *, unsigned long, unsigned long, int);
258:	static ssize_t process_vm_rw(pid_t, const struct iovec *, unsigned long, const struct iovec *, unsigned long, unsigned long, int);
155:	static ssize_t process_vm_rw_core(pid_t, struct iov_iter *, const struct iovec *, unsigned long, int, unsigned long);

File mm/readahead.c:
156:	unsigned int __do_page_cache_readahead(struct address_space *, struct file *, unsigned long, unsigned long, unsigned long);
671:	long __ia32_sys_readahead(const struct pt_regs *);
671:	long __x64_sys_readahead(const struct pt_regs *);
36:	void file_ra_state_init(struct file_ra_state *, struct address_space *);
225:	int force_page_cache_readahead(struct address_space *, struct file *, unsigned long, unsigned long);
645:	ssize_t ksys_readahead(int, loff_t, size_t);
609:	void page_cache_async_readahead(struct address_space *, struct file_ra_state *, struct file *, struct page *, unsigned long, unsigned long);
541:	void page_cache_sync_readahead(struct address_space *, struct file_ra_state *, struct file *, unsigned long, unsigned long);
89:	int read_cache_pages(struct address_space *, struct list_head *, int (*)(void *, struct page *), void *);
385:	static unsigned long ondemand_readahead(struct address_space *, struct file_ra_state *, struct file *, bool, unsigned long, unsigned long);
50:	static void read_cache_pages_invalidate_page(struct address_space *, struct page *);
117:	static int read_pages(struct address_space *, struct file *, struct list_head *, unsigned int, gfp_t);

File mm/rmap.c:
175:	int __anon_vma_prepare(struct vm_area_struct *);
1785:	void __put_anon_vma(struct anon_vma *);
267:	int anon_vma_clone(struct vm_area_struct *, struct vm_area_struct *);
321:	int anon_vma_fork(struct vm_area_struct *, struct vm_area_struct *);
445:	void anon_vma_init(void);
1108:	void do_page_add_anon_rmap(struct page *, struct vm_area_struct *, unsigned long, int);
672:	void flush_tlb_batched_pending(struct mm_struct *);
1970:	void hugepage_add_anon_rmap(struct page *, struct vm_area_struct *, unsigned long);
1984:	void hugepage_add_new_anon_rmap(struct page *, struct vm_area_struct *, unsigned long);
1691:	bool is_vma_temporary_stack(struct vm_area_struct *);
720:	pmd_t *mm_find_pmd(struct mm_struct *, unsigned long);
1097:	void page_add_anon_rmap(struct page *, struct vm_area_struct *, unsigned long, bool);
1189:	void page_add_file_rmap(struct page *, bool);
1160:	void page_add_new_anon_rmap(struct page *, struct vm_area_struct *, unsigned long, bool);
700:	unsigned long page_address_in_vma(struct page *, struct vm_area_struct *);
477:	struct anon_vma *page_get_anon_vma(struct page *);
520:	struct anon_vma *page_lock_anon_vma_read(struct page *);
975:	int page_mkclean(struct page *);
1010:	void page_move_anon_rmap(struct page *, struct vm_area_struct *);
846:	int page_referenced(struct page *, int, struct mem_cgroup *, unsigned long *);
1307:	void page_remove_rmap(struct page *, bool);
582:	void page_unlock_anon_vma_read(struct anon_vma *);
1926:	void rmap_walk(struct page *, struct rmap_walk_control *);
1937:	void rmap_walk_locked(struct page *, struct rmap_walk_control *);
1769:	void try_to_munlock(struct page *);
1725:	bool try_to_unmap(struct page *, enum ttu_flags);
594:	void try_to_unmap_flush(void);
607:	void try_to_unmap_flush_dirty(void);
382:	void unlink_anon_vmas(struct vm_area_struct *);
1953:	static void __hugepage_set_anon_rmap(struct page *, struct vm_area_struct *, unsigned long, int);
1035:	static void __page_set_anon_rmap(struct page *, struct vm_area_struct *, unsigned long, int);
137:	static void anon_vma_chain_link(struct vm_area_struct *, struct anon_vma_chain *, struct anon_vma *);
436:	static void anon_vma_ctor(void *);
1705:	static bool invalid_migration_vma(struct vm_area_struct *, void *);
967:	static bool invalid_mkclean_vma(struct vm_area_struct *, void *);
825:	static bool invalid_page_referenced_vma(struct vm_area_struct *, void *);
893:	static bool page_mkclean_one(struct page *, struct vm_area_struct *, unsigned long, void *);
1710:	static int page_not_mapped(struct page *);
763:	static bool page_referenced_one(struct page *, struct vm_area_struct *, unsigned long, void *);
1830:	static void rmap_walk_anon(struct page *, struct rmap_walk_control *, bool);
1883:	static void rmap_walk_file(struct page *, struct rmap_walk_control *, bool);
1346:	static bool try_to_unmap_one(struct page *, struct vm_area_struct *, unsigned long, void *);

File mm/shmem.c:
382:	bool shmem_charge(struct inode *, long);
4162:	struct file *shmem_file_setup(const char *, loff_t, unsigned long);
4175:	struct file *shmem_file_setup_with_mnt(struct vfsmount *, const char *, loff_t, unsigned long);
3681:	int shmem_fill_super(struct super_block *, void *, int);
2141:	unsigned long shmem_get_unmapped_area(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);
159:	int shmem_getpage(struct inode *, unsigned long, struct page **, enum sgp_type);
4008:	bool shmem_huge_enabled(struct vm_area_struct *);
3914:	int shmem_init(void);
4151:	struct file *shmem_kernel_file_setup(const char *, loff_t, unsigned long);
2248:	int shmem_lock(struct file *, int, struct user_struct *);
2350:	bool shmem_mapping(struct address_space *);
2500:	int shmem_mcopy_atomic_pte(struct mm_struct *, pmd_t *, struct vm_area_struct *, unsigned long, unsigned long, struct page **);
2511:	int shmem_mfill_zeropage_pte(struct mm_struct *, pmd_t *, struct vm_area_struct *, unsigned long);
785:	unsigned long shmem_partial_swap_usage(struct address_space *, unsigned long, unsigned long);
4230:	struct page *shmem_read_mapping_page_gfp(struct address_space *, unsigned long, gfp_t);
827:	unsigned long shmem_swap_usage(struct vm_area_struct *);
1083:	void shmem_truncate_range(struct inode *, loff_t, loff_t);
402:	void shmem_uncharge(struct inode *, long);
857:	void shmem_unlock_mapping(struct address_space *);
1318:	int shmem_unuse(swp_entry_t, struct page *);
4186:	int shmem_zero_setup(struct vm_area_struct *);
264:	bool vma_is_shmem(struct vm_area_struct *);
4108:	static struct file *__shmem_file_setup(struct vfsmount *, const char *, loff_t, unsigned long, unsigned int);
681:	static int shmem_add_to_page_cache(struct page *, struct address_space *, unsigned long, void *);
1596:	static struct page *shmem_alloc_and_acct_page(gfp_t, struct inode *, unsigned long, bool, int);
1551:	static struct page *shmem_alloc_hugepage(gfp_t, struct shmem_inode_info *, unsigned long, int);
3764:	static struct inode *shmem_alloc_inode(struct super_block *);
1582:	static struct page *shmem_alloc_page(gfp_t, struct shmem_inode_info *, unsigned long, int);
3010:	static int shmem_create(struct inode *, struct dentry *, umode_t, bool);
3773:	static void shmem_destroy_callback(struct callback_head *);
3781:	static void shmem_destroy_inode(struct inode *);
3954:	static ssize_t shmem_enabled_show(struct kobject *, struct kobj_attribute *, char *);
3977:	static ssize_t shmem_enabled_store(struct kobject *, struct kobj_attribute *, const char *, size_t);
3405:	static int shmem_encode_fh(struct inode *, __u32 *, int *, struct inode *);
1177:	static void shmem_evict_inode(struct inode *);
2791:	static long shmem_fallocate(struct file *, int, loff_t, loff_t);
2058:	static vm_fault_t shmem_fault(struct vm_fault *);
3382:	static struct dentry *shmem_fh_to_dentry(struct super_block *, struct fid *, int, int);
2755:	static loff_t shmem_file_llseek(struct file *, loff_t, int);
2588:	static ssize_t shmem_file_read_iter(struct kiocb *, struct iov_iter *);
347:	static void shmem_free_inode(struct super_block *);
764:	static int shmem_free_swap(struct address_space *, unsigned long, void *);
2288:	static struct inode *shmem_get_inode(struct super_block *, const struct inode *, umode_t, dev_t, unsigned long);
3228:	static const char *shmem_get_link(struct dentry *, struct inode *, struct delayed_call *);
3360:	static struct dentry *shmem_get_parent(struct dentry *);
2237:	static struct mempolicy *shmem_get_policy(struct vm_area_struct *, unsigned long);
1090:	static int shmem_getattr(const struct path *, struct kstat *, u32, unsigned int);
1723:	static int shmem_getpage_gfp(struct inode *, unsigned long, struct page **, enum sgp_type, gfp_t, struct vm_area_struct *, struct vm_fault *, vm_fault_t *);
3788:	static void shmem_init_inode(void *);
3263:	static int shmem_initxattrs(struct inode *, const struct xattr *, void *);
3019:	static int shmem_link(struct dentry *, struct inode *, struct dentry *);
3339:	static ssize_t shmem_listxattr(struct dentry *, char *, size_t);
3365:	static int shmem_match(struct inode *, void *);
2355:	static int shmem_mfill_atomic_pte(struct mm_struct *, pmd_t *, struct vm_area_struct *, unsigned long, unsigned long, bool, struct page **);
3000:	static int shmem_mkdir(struct inode *, struct dentry *, umode_t);
2948:	static int shmem_mknod(struct inode *, struct dentry *, umode_t, dev_t);
2276:	static int shmem_mmap(struct file *, struct vm_area_struct *);
3900:	static struct dentry *shmem_mount(struct file_system_type *, int, const char *, void *);
496:	static int shmem_parse_huge(const char *);
3441:	static int shmem_parse_options(char *, struct shmem_sb_info *, bool);
1514:	static void shmem_pseudo_vma_init(struct vm_area_struct *, struct shmem_inode_info *, unsigned long);
3222:	static void shmem_put_link(void *);
3670:	static void shmem_put_super(struct super_block *);
421:	static int shmem_radix_tree_replace(struct address_space *, unsigned long, void *, void *);
369:	static void shmem_recalc_inode(struct inode *);
3567:	static int shmem_remount_fs(struct super_block *, int *, char *);
3125:	static int shmem_rename2(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int);
1645:	static int shmem_replace_page(struct page **, gfp_t, struct shmem_inode_info *, unsigned long);
282:	static int shmem_reserve_inode(struct super_block *, ino_t *);
3061:	static int shmem_rmdir(struct inode *, struct dentry *);
2708:	static unsigned long shmem_seek_hole_data(struct address_space *, unsigned long, unsigned long, int);
2231:	static int shmem_set_policy(struct vm_area_struct *, struct mempolicy *);
1110:	static int shmem_setattr(struct dentry *, struct iattr *);
3619:	static int shmem_show_options(struct seq_file *, struct dentry *);
2923:	static int shmem_statfs(struct dentry *, struct kstatfs *);
1530:	static struct page *shmem_swapin(swp_entry_t, gfp_t, struct shmem_inode_info *, unsigned long);
3166:	static int shmem_symlink(struct inode *, struct dentry *, const char *);
2977:	static int shmem_tmpfile(struct inode *, struct dentry *, umode_t);
888:	static void shmem_undo_range(struct inode *, loff_t, loff_t, bool);
3047:	static int shmem_unlink(struct inode *, struct dentry *);
652:	static long shmem_unused_huge_count(struct super_block *, struct shrink_control *);
641:	static long shmem_unused_huge_scan(struct super_block *, struct shrink_control *);
535:	static unsigned long shmem_unused_huge_shrink(struct shmem_sb_info *, struct shrink_control *, unsigned long);
2533:	static int shmem_write_begin(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page **, void **);
2553:	static int shmem_write_end(struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *);
1373:	static int shmem_writepage(struct page *, struct writeback_control *);
3296:	static int shmem_xattr_handler_get(const struct xattr_handler *, struct dentry *, struct inode *, const char *, void *, size_t);
3306:	static int shmem_xattr_handler_set(const struct xattr_handler *, struct dentry *, struct inode *, const char *, const void *, size_t, int);
2051:	static int synchronous_wake_function(wait_queue_entry_t *, unsigned int, int, void *);

File mm/slab_common.c:
115:	int __kmem_cache_alloc_bulk(struct kmem_cache *, gfp_t, size_t, void **);
103:	void __kmem_cache_free_bulk(struct kmem_cache *, size_t, void **);
1500:	void *__krealloc(const void *, size_t, gfp_t);
1236:	int cache_random_seq_create(struct kmem_cache *, unsigned int, gfp_t);
1256:	void cache_random_seq_destroy(struct kmem_cache *);
952:	void create_boot_cache(struct kmem_cache *, const char *, unsigned int, slab_flags_t, unsigned int, unsigned int);
975:	struct kmem_cache *create_kmalloc_cache(const char *, unsigned int, slab_flags_t, unsigned int, unsigned int);
1147:	void create_kmalloc_caches(slab_flags_t);
1359:	void dump_unreclaimable_slab(void);
317:	struct kmem_cache *find_mergeable(unsigned int, unsigned int, slab_flags_t, const char *, void (*)(void *));
1192:	void *kmalloc_order(size_t, gfp_t, unsigned int);
1207:	void *kmalloc_order_trace(size_t, gfp_t, unsigned int);
1041:	struct kmem_cache *kmalloc_slab(size_t, gfp_t);
515:	struct kmem_cache *kmem_cache_create(const char *, unsigned int, unsigned int, slab_flags_t, void (*)(void *));
437:	struct kmem_cache *kmem_cache_create_usercopy(const char *, unsigned int, unsigned int, slab_flags_t, unsigned int, unsigned int, void (*)(void *));
879:	void kmem_cache_destroy(struct kmem_cache *);
933:	int kmem_cache_shrink(struct kmem_cache *);
78:	unsigned int kmem_cache_size(struct kmem_cache *);
1521:	void *krealloc(const void *, size_t, gfp_t);
1549:	void kzfree(const void *);
594:	void memcg_create_kmem_cache(struct mem_cgroup *, struct kmem_cache *);
735:	void memcg_deactivate_kmem_caches(struct mem_cgroup *);
763:	void memcg_destroy_kmem_caches(struct mem_cgroup *);
225:	void memcg_link_cache(struct kmem_cache *);
1402:	void *memcg_slab_next(struct seq_file *, void *, loff_t *);
1414:	int memcg_slab_show(struct seq_file *, void *);
1394:	void *memcg_slab_start(struct seq_file *, loff_t *);
206:	int memcg_update_all_caches(int);
1099:	void setup_kmalloc_cache_index_table(void);
1570:	int should_failslab(struct kmem_cache *, gfp_t);
710:	void slab_deactivate_memcg_cache_rcu_sched(struct kmem_cache *, void (*)(struct kmem_cache *));
135:	void slab_init_memcg_params(struct kmem_cache *);
945:	bool slab_is_available(void);
871:	void slab_kmem_cache_release(struct kmem_cache *);
1297:	void *slab_next(struct seq_file *, void *, loff_t *);
1291:	void *slab_start(struct seq_file *, loff_t *);
1302:	void slab_stop(struct seq_file *, void *);
294:	int slab_unmergeable(struct kmem_cache *);
1328:	static void cache_show(struct kmem_cache *, struct seq_file *);
364:	static struct kmem_cache *create_cache(const char *, unsigned int, unsigned int, slab_flags_t, unsigned int, unsigned int, void (*)(void *), struct mem_cgroup *, struct kmem_cache *);
177:	static void free_memcg_params(struct callback_head *);
685:	static void kmemcg_deactivate_rcufn(struct callback_head *);
664:	static void kmemcg_deactivate_workfn(struct work_struct *);
1308:	static void memcg_accumulate_slabinfo(struct kmem_cache *, struct slabinfo *);
1135:	static void new_kmalloc_cache(int, slab_flags_t);
1270:	static void print_slabinfo_header(struct seq_file *);
63:	static int setup_slab_nomerge(char *);
555:	static int shutdown_cache(struct kmem_cache *);
523:	static void slab_caches_to_rcu_destroy_workfn(struct work_struct *);
1460:	static int slab_proc_init(void);
1349:	static int slab_show(struct seq_file *, void *);
1447:	static int slabinfo_open(struct inode *, struct file *);

File mm/slub.c:
3871:	void __check_heap_object(const void *, unsigned long, struct page *, bool);
3793:	void *__kmalloc(size_t, gfp_t);
3831:	void *__kmalloc_node(size_t, gfp_t, int);
4366:	void *__kmalloc_node_track_caller(size_t, gfp_t, int, unsigned long);
4344:	void *__kmalloc_track_caller(size_t, gfp_t, unsigned long);
4294:	struct kmem_cache *__kmem_cache_alias(const char *, unsigned int, unsigned int, slab_flags_t, void (*)(void *));
4324:	int __kmem_cache_create(struct kmem_cache *, slab_flags_t);
3731:	bool __kmem_cache_empty(struct kmem_cache *);
3420:	void __kmem_cache_release(struct kmem_cache *);
3980:	int __kmem_cache_shrink(struct kmem_cache *);
3745:	int __kmem_cache_shutdown(struct kmem_cache *);
4061:	void __kmemcg_cache_deactivate(struct kmem_cache *);
127:	void *fixup_red_left(struct kmem_cache *, void *);
5924:	void get_slabinfo(struct kmem_cache *, struct slabinfo *);
3948:	void kfree(const void *);
2766:	void *kmem_cache_alloc(struct kmem_cache *, gfp_t);
3135:	int kmem_cache_alloc_bulk(struct kmem_cache *, gfp_t, size_t, void **);
2789:	void *kmem_cache_alloc_node(struct kmem_cache *, gfp_t, int);
2801:	void *kmem_cache_alloc_node_trace(struct kmem_cache *, gfp_t, int, size_t);
2778:	void *kmem_cache_alloc_trace(struct kmem_cache *, gfp_t, size_t);
1300:	slab_flags_t kmem_cache_flags(slab_flags_t, const char *, void (*)(void *), unsigned int);
3015:	void kmem_cache_free(struct kmem_cache *, void *);
3117:	void kmem_cache_free_bulk(struct kmem_cache *, size_t, void **);
4238:	void kmem_cache_init(void);
4289:	void kmem_cache_init_late(void);
3937:	size_t ksize(const void *);
712:	void object_err(struct kmem_cache *, struct page *, u8 *, char *);
5946:	void slabinfo_show_stats(struct seq_file *, struct kmem_cache *);
5950:	ssize_t slabinfo_write(struct file *, const char *, size_t, loff_t *);
5837:	void sysfs_slab_release(struct kmem_cache *);
5831:	void sysfs_slab_unlink(struct kmem_cache *);
2539:	static void *___slab_alloc(struct kmem_cache *, gfp_t, int, unsigned long, struct kmem_cache_cpu *);
2313:	static void __flush_cpu_slab(struct kmem_cache *, int);
1691:	static void __free_slab(struct kmem_cache *, struct page *);
2642:	static void *__slab_alloc(struct kmem_cache *, gfp_t, int, unsigned long, struct kmem_cache_cpu *);
2825:	static void __slab_free(struct kmem_cache *, struct page *, void *, void *, int, unsigned long);
5048:	static ssize_t aliases_show(struct kmem_cache *, char *);
4956:	static ssize_t align_show(struct kmem_cache *, char *);
5289:	static ssize_t alloc_calls_show(struct kmem_cache *, char *);
1117:	static int alloc_debug_processing(struct kmem_cache *, struct page *, void *, unsigned long);
4525:	static int alloc_loc_track(struct loc_track *, unsigned long, gfp_t);
4207:	static struct kmem_cache *bootstrap(struct kmem_cache *);
5135:	static ssize_t cache_dma_show(struct kmem_cache *, char *);
3498:	static int calculate_sizes(struct kmem_cache *, int);
756:	static int check_bytes_and_report(struct kmem_cache *, struct page *, u8 *, char *, u8 *, unsigned int, unsigned int);
877:	static int check_object(struct kmem_cache *, struct page *, void *, u8);
933:	static int check_slab(struct kmem_cache *, struct page *);
2378:	static int count_free(struct page *);
4397:	static int count_inuse(struct page *);
2390:	static unsigned long count_partial(struct kmem_cache_node *, int (*)(struct page *));
4402:	static int count_total(struct page *);
5017:	static ssize_t cpu_partial_show(struct kmem_cache *, char *);
5022:	static ssize_t cpu_partial_store(struct kmem_cache *, const char *, size_t);
5060:	static ssize_t cpu_slabs_show(struct kmem_cache *, char *);
5040:	static ssize_t ctor_show(struct kmem_cache *, char *);
2020:	static void deactivate_slab(struct kmem_cache *, struct page *, void *, struct kmem_cache_cpu *, struct kmem_cache_cpu *);
5148:	static ssize_t destroy_by_rcu_show(struct kmem_cache *, char *);
1735:	static void discard_slab(struct kmem_cache *, struct page *);
2325:	static void flush_cpu_slab(void *);
5297:	static ssize_t free_calls_show(struct kmem_cache *, char *);
1180:	static int free_debug_processing(struct kmem_cache *, struct page *, void *, void *, int, unsigned long);
3409:	static void free_kmem_cache_nodes(struct kmem_cache *);
4518:	static void free_loc_track(struct loc_track *, struct loc_track *);
451:	static void get_map(struct kmem_cache *, struct page *, unsigned long *);
1821:	static void *get_partial_node(struct kmem_cache *, struct kmem_cache_node *, gfp_t, struct kmem_cache_cpu *);
2332:	static bool has_cpu_slab(int, void *);
5128:	static ssize_t hwcache_align_show(struct kmem_cache *, char *);
1485:	static int init_cache_random_seq(struct kmem_cache *);
733:	static void init_object(struct kmem_cache *, void *, u8);
583:	static void init_tracking(struct kmem_cache *, void *);
3817:	static void *kmalloc_large_node(size_t, gfp_t, int);
5651:	static void kmem_cache_release(struct kobject *);
4043:	static void kmemcg_cache_deact_after_rcu(struct kmem_cache *);
4636:	static int list_locations(struct kmem_cache *, char *, enum track_item);
4997:	static ssize_t min_partial_show(struct kmem_cache *, char *);
5002:	static ssize_t min_partial_store(struct kmem_cache *, const char *, size_t);
1677:	static struct page *new_slab(struct kmem_cache *, gfp_t, int);
4962:	static ssize_t object_size_show(struct kmem_cache *, char *);
5072:	static ssize_t objects_partial_show(struct kmem_cache *, char *);
5066:	static ssize_t objects_show(struct kmem_cache *, char *);
4968:	static ssize_t objs_per_slab_show(struct kmem_cache *, char *);
964:	static int on_freelist(struct kmem_cache *, struct page *, void *);
4991:	static ssize_t order_show(struct kmem_cache *, char *);
4974:	static ssize_t order_store(struct kmem_cache *, const char *, size_t);
5054:	static ssize_t partial_show(struct kmem_cache *, char *);
5229:	static ssize_t poison_show(struct kmem_cache *, char *);
5234:	static ssize_t poison_store(struct kmem_cache *, const char *, size_t);
592:	static void print_track(const char *, struct track *, unsigned long);
611:	static void print_tracking(struct kmem_cache *, void *);
670:	static void print_trailer(struct kmem_cache *, struct page *, u8 *);
4621:	static void process_slab(struct loc_track *, struct kmem_cache *, struct page *, enum track_item, unsigned long *);
2248:	static void put_cpu_partial(struct kmem_cache *, struct page *, int);
1720:	static void rcu_free_slab(struct callback_head *);
5113:	static ssize_t reclaim_account_show(struct kmem_cache *, char *);
5118:	static ssize_t reclaim_account_store(struct kmem_cache *, const char *, size_t);
5209:	static ssize_t red_zone_show(struct kmem_cache *, char *);
5214:	static ssize_t red_zone_store(struct kmem_cache *, const char *, size_t);
5343:	static ssize_t remote_node_defrag_ratio_show(struct kmem_cache *, char *);
5348:	static ssize_t remote_node_defrag_ratio_store(struct kmem_cache *, const char *, size_t);
1044:	static void remove_full(struct page *, struct kmem_cache_node *, struct kmem_cache *);
749:	static void restore_bytes(struct kmem_cache *, u8, void *, void *, char *);
5167:	static ssize_t sanity_checks_show(struct kmem_cache *, char *);
5172:	static ssize_t sanity_checks_store(struct kmem_cache *, const char *, size_t);
549:	static void set_track(struct kmem_cache *, void *, enum track_item, unsigned long);
1090:	static void setup_object_debug(struct kmem_cache *, void *, struct page *);
1232:	static int setup_slub_debug(char *);
3774:	static int setup_slub_max_order(char *);
4800:	static int setup_slub_memcg_sysfs(char *);
3784:	static int setup_slub_min_objects(char *);
3765:	static int setup_slub_min_order(char *);
4813:	static ssize_t show_slab_objects(struct kmem_cache *, char *, unsigned long);
5331:	static ssize_t shrink_store(struct kmem_cache *, const char *, size_t);
5525:	static ssize_t slab_attr_show(struct kobject *, struct attribute *, char *);
5544:	static ssize_t slab_attr_store(struct kobject *, struct attribute *, const char *, size_t);
628:	static void slab_bug(struct kmem_cache *, char *, ...);
719:	static void slab_err(struct kmem_cache *, struct page *, const char *, ...);
644:	static void slab_fix(struct kmem_cache *, char *, ...);
4165:	static int slab_memory_callback(struct notifier_block *, unsigned long, void *);
2406:	static void slab_out_of_memory(struct kmem_cache *, gfp_t, int);
842:	static int slab_pad_check(struct kmem_cache *, struct page *);
4950:	static ssize_t slab_size_show(struct kmem_cache *, char *);
5878:	static int slab_sysfs_init(void);
5078:	static ssize_t slabs_cpu_partial_show(struct kmem_cache *, char *);
5155:	static ssize_t slabs_show(struct kmem_cache *, char *);
2349:	static int slub_cpu_dead(unsigned int);
5249:	static ssize_t store_user_show(struct kmem_cache *, char *);
5254:	static ssize_t store_user_store(struct kmem_cache *, const char *, size_t);
5751:	static int sysfs_slab_add(struct kmem_cache *);
5855:	static int sysfs_slab_alias(struct kmem_cache *, const char *);
5729:	static void sysfs_slab_remove_workfn(struct work_struct *);
5161:	static ssize_t total_objects_show(struct kmem_cache *, char *);
5184:	static ssize_t trace_show(struct kmem_cache *, char *);
5189:	static ssize_t trace_store(struct kmem_cache *, const char *, size_t);
5666:	static int uevent_filter(struct kset *, struct kobject *);
2180:	static void unfreeze_partials(struct kmem_cache *, struct kmem_cache_cpu *);
5142:	static ssize_t usersize_show(struct kmem_cache *, char *);
5270:	static ssize_t validate_show(struct kmem_cache *, char *);
4409:	static int validate_slab(struct kmem_cache *, struct page *, unsigned long *);
5275:	static ssize_t validate_store(struct kmem_cache *, const char *, size_t);

File mm/sparse-vmemmap.c:
105:	void *altmap_alloc_block_buf(unsigned long, struct vmem_altmap *);
248:	struct page *sparse_mem_map_populate(unsigned long, int, struct vmem_altmap *);
49:	void *vmemmap_alloc_block(unsigned long, int);
74:	void *vmemmap_alloc_block_buf(unsigned long, int);
192:	p4d_t *vmemmap_p4d_populate(pgd_t *, unsigned long, int);
204:	pgd_t *vmemmap_pgd_populate(unsigned long, int);
168:	pmd_t *vmemmap_pmd_populate(pud_t *, unsigned long, int);
216:	int vmemmap_populate_basepages(unsigned long, unsigned long, int);
143:	pte_t *vmemmap_pte_populate(pmd_t *, unsigned long, int);
180:	pud_t *vmemmap_pud_populate(p4d_t *, unsigned long, int);
132:	void vmemmap_verify(pte_t *, int, unsigned long, unsigned long);
40:	static void *__earlyonly_bootmem_alloc(int, unsigned long, unsigned long, unsigned long);
157:	static void *vmemmap_alloc_block_zero(int, unsigned long);

File mm/sparse.c:
100:	int __section_nr(struct mem_section *);
209:	void memory_present(int, unsigned long, unsigned long);
142:	void mminit_validate_memmodel_limits(unsigned long *, unsigned long *);
556:	void offline_mem_sections(unsigned long, unsigned long);
537:	void online_mem_sections(unsigned long, unsigned long);
673:	int sparse_add_one_section(int, unsigned long, struct vmem_altmap *);
429:	void *sparse_buffer_alloc(unsigned long);
258:	struct page *sparse_decode_mem_map(unsigned long, unsigned long);
507:	void sparse_init(void);
773:	void sparse_remove_one_section(struct mem_section *, unsigned long, struct vmem_altmap *);
275:	unsigned long usemap_size(void);
447:	void vmemmap_populate_print_last(void);
420:	static void sparse_buffer_fini(void);
404:	static void sparse_buffer_free(unsigned long);
246:	static unsigned long sparse_encode_mem_map(struct page *, unsigned long);
62:	static struct mem_section *sparse_index_alloc(int);
76:	static int sparse_index_init(unsigned long, int);
455:	static void sparse_init_nid(int, unsigned long, unsigned long, unsigned long);

File mm/swap.c:
936:	void __pagevec_lru_add(struct pagevec *);
824:	void __pagevec_release(struct pagevec *);
99:	void __put_page(struct page *);
309:	void activate_page(struct page *);
618:	void deactivate_file_page(struct page *);
178:	int get_kernel_page(unsigned long, int, struct page **);
150:	int get_kernel_pages(const struct kvec *, int, int, struct page **);
656:	void lru_add_drain(void);
678:	void lru_add_drain_all(void);
582:	void lru_add_drain_cpu(int);
837:	void lru_add_page_tail(struct page *, struct page *, struct lruvec *, struct list_head *);
442:	void lru_cache_add(struct page *);
459:	void lru_cache_add_active_or_unevictable(struct page *, struct vm_area_struct *);
418:	void lru_cache_add_anon(struct page *);
375:	void mark_page_accessed(struct page *);
643:	void mark_page_lazyfree(struct page *);
962:	unsigned int pagevec_lookup_entries(struct pagevec *, struct address_space *, unsigned long, unsigned int, unsigned long *);
1013:	unsigned int pagevec_lookup_range(struct pagevec *, struct address_space *, unsigned long *, unsigned long);
1032:	unsigned int pagevec_lookup_range_nr_tag(struct pagevec *, struct address_space *, unsigned long *, unsigned long, int, unsigned int);
1022:	unsigned int pagevec_lookup_range_tag(struct pagevec *, struct address_space *, unsigned long *, unsigned long, int);
981:	void pagevec_remove_exceptionals(struct pagevec *);
125:	void put_pages_list(struct list_head *);
728:	void release_pages(struct page **, int);
248:	void rotate_reclaimable_page(struct page *);
1044:	void swap_setup(void);
274:	static void __activate_page(struct page *, struct lruvec *, void *);
404:	static void __lru_cache_add(struct page *);
59:	static void __page_cache_release(struct page *);
876:	static void __pagevec_lru_add_fn(struct page *, struct lruvec *, void *);
83:	static void __put_compound_page(struct page *);
666:	static void lru_add_drain_per_cpu(struct work_struct *);
500:	static void lru_deactivate_file_fn(struct page *, struct lruvec *, void *);
550:	static void lru_lazyfree_fn(struct page *, struct lruvec *, void *);
189:	static void pagevec_lru_move_fn(struct pagevec *, void (*)(struct page *, struct lruvec *, void *), void *);
235:	static void pagevec_move_tail(struct pagevec *);
218:	static void pagevec_move_tail_fn(struct page *, struct lruvec *, void *);

File mm/swap_cgroup.c:
162:	unsigned short lookup_swap_cgroup_id(swp_entry_t);
97:	unsigned short swap_cgroup_cmpxchg(swp_entry_t, unsigned short, unsigned short);
126:	unsigned short swap_cgroup_record(swp_entry_t, unsigned short, unsigned int);
206:	void swap_cgroup_swapoff(int);
167:	int swap_cgroup_swapon(int, unsigned long);

File mm/swap_slots.c:
70:	void disable_swap_slots_cache_lock(void);
241:	int enable_swap_slots_cache(void);
278:	int free_swap_slot(swp_entry_t);
310:	swp_entry_t get_swap_page(struct page *);
87:	void reenable_swap_slots_cache_unlock(void);
202:	static void __drain_swap_slots_cache(unsigned int);
115:	static int alloc_swap_slot_cache(unsigned int);
170:	static void drain_slots_cache_cpu(unsigned int, bool, unsigned int);
233:	static int free_slot_cache(unsigned int);

File mm/swap_state.c:
115:	int __add_to_swap_cache(struct page *, swp_entry_t);
178:	void __delete_from_swap_cache(struct page *);
384:	struct page *__read_swap_cache_async(swp_entry_t, gfp_t, struct vm_area_struct *, unsigned long, bool *);
209:	int add_to_swap(struct page *);
162:	int add_to_swap_cache(struct page *, swp_entry_t, gfp_t);
266:	void delete_from_swap_cache(struct page *);
653:	void exit_swap_address_space(unsigned int);
302:	void free_page_and_swap_cache(struct page *);
313:	void free_pages_and_swap_cache(struct page **, int);
630:	int init_swap_address_space(unsigned int, unsigned long);
335:	struct page *lookup_swap_cache(swp_entry_t, struct vm_area_struct *, unsigned long);
487:	struct page *read_swap_cache_async(swp_entry_t, gfp_t, struct vm_area_struct *, unsigned long, bool);
100:	void show_swap_cache_info(void);
579:	struct page *swap_cluster_readahead(swp_entry_t, gfp_t, struct vm_fault *);
800:	struct page *swapin_readahead(swp_entry_t, gfp_t, struct vm_fault *);
72:	unsigned long total_swapcache_pages(void);
840:	static int swap_init_sysfs(void);
809:	static ssize_t vma_ra_enabled_show(struct kobject *, struct kobj_attribute *, char *);
814:	static ssize_t vma_ra_enabled_store(struct kobject *, struct kobj_attribute *, const char *, size_t);

File mm/swapfile.c:
2621:	long __ia32_sys_swapoff(const struct pt_regs *);
3207:	long __ia32_sys_swapon(const struct pt_regs *);
3610:	unsigned long __page_file_index(struct page *);
3604:	struct address_space *__page_file_mapping(struct page *);
1416:	int __swap_count(swp_entry_t);
1447:	int __swp_swapcount(swp_entry_t);
2621:	long __x64_sys_swapoff(const struct pt_regs *);
3207:	long __x64_sys_swapon(const struct pt_regs *);
3632:	int add_swap_count_continuation(swp_entry_t, gfp_t);
2418:	int add_swap_extent(struct swap_info_struct *, unsigned long, unsigned long, sector_t);
1812:	unsigned int count_swap_pages(int, int);
1700:	int free_swap_and_cache(swp_entry_t);
3024:	unsigned long generic_max_swapfile_size(void);
1214:	struct swap_info_struct *get_swap_device(swp_entry_t);
1042:	swp_entry_t get_swap_page_of_type(int);
954:	int get_swap_pages(int, swp_entry_t *, int);
2610:	bool has_usable_swap(void);
2380:	sector_t map_swap_page(struct page *, struct block_device **);
3031:	unsigned long max_swapfile_size(void);
3851:	void mem_cgroup_throttle_swaprate(struct mem_cgroup *, int, gfp_t);
3595:	struct swap_info_struct *page_swap_info(struct page *);
1397:	int page_swapcount(struct page *);
1290:	void put_swap_page(struct page *, swp_entry_t);
1621:	bool reuse_swap_page(struct page *, int *);
3460:	void si_swapinfo(struct sysinfo *);
1341:	int split_swap_cluster(swp_entry_t);
3568:	int swap_duplicate(swp_entry_t);
1276:	void swap_free(swp_entry_t);
3556:	void swap_shmem_alloc(swp_entry_t);
1750:	int swap_type_of(dev_t, sector_t, struct block_device **);
1364:	void swapcache_free_entries(swp_entry_t *, int);
3585:	int swapcache_prepare(swp_entry_t);
1796:	sector_t swapdev_block(int, unsigned long);
3590:	struct swap_info_struct *swp_swap_info(swp_entry_t);
1464:	int swp_swapcount(swp_entry_t);
1661:	int try_to_free_swap(struct page *);
2101:	int try_to_unuse(unsigned int, bool, unsigned long);
619:	static void __del_from_avail_list(struct swap_info_struct *);
2621:	static long __do_sys_swapoff(const char *);
3207:	static long __do_sys_swapon(const char *, int);
418:	static void __free_cluster(struct swap_info_struct *, unsigned long);
3488:	static int __swap_duplicate(swp_entry_t, unsigned char);
1242:	static unsigned char __swap_entry_free(struct swap_info_struct *, swp_entry_t, unsigned char);
1139:	static unsigned char __swap_entry_free_locked(struct swap_info_struct *, unsigned long, unsigned char);
2556:	static void _enable_swap_info(struct swap_info_struct *);
1095:	static struct swap_info_struct *_swap_info_get(swp_entry_t);
651:	static void add_to_avail_list(struct swap_info_struct *);
464:	static void alloc_cluster(struct swap_info_struct *, unsigned long);
361:	static void cluster_list_add_tail(struct swap_cluster_list *, struct swap_cluster_info *, unsigned int);
627:	static void del_from_avail_list(struct swap_info_struct *);
2390:	static void destroy_swap_extents(struct swap_info_struct *);
473:	static void free_cluster(struct swap_info_struct *, unsigned long);
496:	static void inc_cluster_info_page(struct swap_info_struct *, struct swap_cluster_info *, unsigned long);
2352:	static sector_t map_swap_entry(swp_entry_t, struct block_device **);
2922:	static int max_swapfiles_check(void);
2913:	static int procswaps_init(void);
693:	static int scan_swap_map_slots(struct swap_info_struct *, unsigned char, int, swp_entry_t *);
560:	static bool scan_swap_map_try_ssd_cluster(struct swap_info_struct *, unsigned long *, unsigned long *);
2527:	static void setup_swap_info(struct swap_info_struct *, int, unsigned char *, struct swap_cluster_info *);
3744:	static bool swap_count_continued(struct swap_info_struct *, unsigned long, unsigned char);
453:	static void swap_discard_work(struct work_struct *);
430:	static void swap_do_scheduled_discard(struct swap_info_struct *);
2836:	static void *swap_next(struct seq_file *, void *, loff_t *);
1506:	static bool swap_page_trans_huge_swapped(struct swap_info_struct *, swp_entry_t);
634:	static void swap_range_alloc(struct swap_info_struct *, unsigned long, unsigned int);
663:	static void swap_range_free(struct swap_info_struct *, unsigned long, unsigned int);
2861:	static int swap_show(struct seq_file *, void *);
2815:	static void *swap_start(struct seq_file *, loff_t *);
2856:	static void swap_stop(struct seq_file *, void *);
3881:	static int swapfile_init(void);
2891:	static int swaps_open(struct inode *, struct file *);
2800:	static __poll_t swaps_poll(struct file *, poll_table *);
1357:	static int swp_entry_cmp(const void *, const void *);
2026:	static int unuse_mm(struct mm_struct *, swp_entry_t, struct page *);
1976:	static int unuse_p4d_range(struct vm_area_struct *, pgd_t *, unsigned long, unsigned long, swp_entry_t, struct page *);

File mm/truncate.c:
154:	void do_invalidatepage(struct page *, unsigned int, unsigned int);
234:	int generic_error_remove_page(struct address_space *, struct page *);
254:	int invalidate_inode_page(struct page *);
764:	int invalidate_inode_pages2(struct address_space *);
669:	int invalidate_inode_pages2_range(struct address_space *, unsigned long, unsigned long);
543:	unsigned long invalidate_mapping_pages(struct address_space *, unsigned long, unsigned long);
848:	void pagecache_isize_extended(struct inode *, loff_t, loff_t);
219:	int truncate_inode_page(struct address_space *, struct page *);
473:	void truncate_inode_pages(struct address_space *, loff_t);
488:	void truncate_inode_pages_final(struct address_space *);
290:	void truncate_inode_pages_range(struct address_space *, loff_t, loff_t);
785:	void truncate_pagecache(struct inode *, loff_t);
893:	void truncate_pagecache_range(struct inode *, loff_t, loff_t);
818:	void truncate_setsize(struct inode *, loff_t);
178:	static void truncate_cleanup_page(struct page *);
61:	static void truncate_exceptional_pvec_entries(struct address_space *, struct pagevec *, unsigned long *, unsigned long);

File mm/usercopy.c:
260:	void __check_object_size(const void *, unsigned long, bool);
87:	void usercopy_abort(const char *, const char *, bool, unsigned long, unsigned long);
76:	void usercopy_warn(const char *, const char *, bool, unsigned long, unsigned long);
38:	static int check_stack_object(const void *, unsigned long);
299:	static int parse_hardened_usercopy(char *);
306:	static int set_hardened_usercopy(void);

File mm/userfaultfd.c:
630:	ssize_t mcopy_atomic(struct mm_struct *, unsigned long, unsigned long, unsigned long, bool *);
638:	ssize_t mfill_zeropage(struct mm_struct *, unsigned long, unsigned long, bool *);
175:	static pmd_t *mm_alloc_pmd(struct mm_struct *, unsigned long);

File mm/util.c:
308:	int __get_user_pages_fast(unsigned long, int, int, struct page **);
564:	int __page_mapcount(struct page *);
667:	int __vm_enough_memory(struct mm_struct *, long, int);
262:	void __vma_link_list(struct mm_struct *, struct vm_area_struct *, struct vm_area_struct *, struct rb_node *);
767:	int get_cmdline(struct task_struct *, char *, int);
339:	int get_user_pages_fast(unsigned long, int, int, struct page **);
38:	void kfree_const(const void *);
117:	void *kmemdup(const void *, size_t, gfp_t);
134:	char *kmemdup_nul(const char *, size_t, gfp_t);
50:	char *kstrdup(const char *, gfp_t);
75:	const char *kstrdup_const(const char *, gfp_t);
92:	char *kstrndup(const char *, size_t, gfp_t);
450:	void kvfree(const void *);
468:	void kvfree_sensitive(const void *, size_t);
400:	void *kvmalloc_node(size_t, gfp_t, int);
159:	void *memdup_user(const void *, size_t);
239:	void *memdup_user_nul(const void *, size_t);
602:	int overcommit_kbytes_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
590:	int overcommit_ratio_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
517:	struct anon_vma *page_anon_vma(struct page *);
498:	bool page_mapped(struct page *);
528:	struct address_space *page_mapping(struct page *);
556:	struct address_space *page_mapping_file(struct page *);
488:	void *page_rmapping(struct page *);
207:	char *strndup_user(const char *, long);
617:	unsigned long vm_commit_limit(void);
645:	unsigned long vm_memory_committed(void);
370:	unsigned long vm_mmap(struct file *, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long);
347:	unsigned long vm_mmap_pgoff(struct file *, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long);
285:	int vma_is_stack_for_current(struct vm_area_struct *);
185:	void *vmemdup_user(const void *, size_t);

File mm/vmacache.c:
62:	struct vm_area_struct *vmacache_find(struct mm_struct *, unsigned long);
36:	void vmacache_update(unsigned long, struct vm_area_struct *);

File mm/vmalloc.c:
2278:	struct vm_struct *__get_vm_area(unsigned long, unsigned long, unsigned long, unsigned long);
2286:	struct vm_struct *__get_vm_area_caller(unsigned long, unsigned long, unsigned long, unsigned long, const void *);
2757:	void *__vmalloc(unsigned long, gfp_t, pgprot_t);
2748:	void *__vmalloc_node(unsigned long, unsigned long, gfp_t, pgprot_t, unsigned long, int, const void *);
2772:	void *__vmalloc_node_flags_caller(unsigned long, int, gfp_t, void *);
2665:	void *__vmalloc_node_range(unsigned long, unsigned long, unsigned long, unsigned long, gfp_t, pgprot_t, unsigned long, int, const void *);
3426:	struct vm_struct *alloc_vm_area(size_t, pte_t **);
2330:	struct vm_struct *find_vm_area(const void *);
3449:	void free_vm_area(struct vm_struct *);
2303:	struct vm_struct *get_vm_area(unsigned long, unsigned long);
2310:	struct vm_struct *get_vm_area_caller(unsigned long, unsigned long, const void *);
547:	int is_vmalloc_or_module_addr(const void *);
537:	int map_kernel_range(unsigned long, unsigned long, pgprot_t, struct page **);
531:	int map_kernel_range_noflush(unsigned long, unsigned long, pgprot_t, struct page **);
2209:	int map_vm_area(struct vm_struct *, pgprot_t, struct page **);
3745:	void pcpu_free_vm_areas(struct vm_struct **, int);
3549:	struct vm_struct **pcpu_get_vm_areas(const unsigned long *, const size_t *, int, size_t);
1431:	int register_vmap_purge_notifier(struct notifier_block *);
3377:	int remap_vmalloc_hugepage_range(struct vm_area_struct *, void *, unsigned long);
3324:	int remap_vmalloc_hugepage_range_partial(struct vm_area_struct *, unsigned long, void *, unsigned long);
3298:	int remap_vmalloc_range(struct vm_area_struct *, void *, unsigned long);
3237:	int remap_vmalloc_range_partial(struct vm_area_struct *, unsigned long, void *, unsigned long, unsigned long);
2349:	struct vm_struct *remove_vm_area(const void *);
1518:	void set_iounmap_nonlazy(void);
2200:	void unmap_kernel_range(unsigned long, unsigned long);
334:	void unmap_kernel_range_noflush(unsigned long, unsigned long);
1437:	int unregister_vmap_purge_notifier(struct notifier_block *);
2471:	void vfree(const void *);
2446:	void vfree_atomic(const void *);
2067:	void vm_area_add_early(struct vm_struct *);
2095:	void vm_area_register_early(struct vm_struct *, size_t);
2027:	void *vm_map_ram(struct page **, unsigned int, int, pgprot_t);
1938:	void vm_unmap_aliases(void);
1986:	void vm_unmap_ram(const void *, unsigned int);
2787:	void *vmalloc(unsigned long);
2909:	void *vmalloc_32(unsigned long);
2923:	void *vmalloc_32_user(unsigned long);
2884:	void *vmalloc_exec(unsigned long);
2149:	void vmalloc_init(void);
2846:	void *vmalloc_node(unsigned long, int);
3393:	void vmalloc_sync_mappings(void);
628:	struct page *vmalloc_to_hugepage(const void *);
567:	struct page *vmalloc_to_page(const void *);
643:	unsigned long vmalloc_to_pfn(const void *);
2818:	void *vmalloc_user(unsigned long);
2514:	void *vmap(struct page **, unsigned int, unsigned long, pgprot_t);
2550:	void *vmap_hugepage(struct page **, unsigned int, unsigned long, pgprot_t);
250:	int vmap_range(unsigned long, unsigned long, phys_addr_t, pgprot_t, unsigned int);
3089:	long vread(char *, char *, unsigned long);
2495:	void vunmap(const void *);
3170:	long vwrite(char *, char *, unsigned long);
2804:	void *vzalloc(unsigned long);
2865:	void *vzalloc_node(unsigned long, int);
1443:	static void __free_vmap_area(struct vmap_area *);
2244:	static struct vm_struct *__get_vm_area_node(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, int, gfp_t, const void *);
1526:	static bool __purge_vmap_area_lazy(unsigned long, unsigned long);
2373:	static void __vunmap(const void *, int);
1353:	static struct vmap_area *alloc_vmap_area(unsigned long, unsigned long, unsigned long, unsigned long, int, gfp_t);
3401:	static int f(pte_t *, pgtable_t, unsigned long, void *);
1616:	static struct vmap_area *find_vmap_area(unsigned long);
1589:	static void free_vmap_area_noflush(struct vmap_area *);
717:	static void free_vmap_area_rb_augment_cb_copy(struct rb_node *, struct rb_node *);
717:	static void free_vmap_area_rb_augment_cb_propagate(struct rb_node *, struct rb_node *);
717:	static void free_vmap_area_rb_augment_cb_rotate(struct rb_node *, struct rb_node *);
1772:	static void free_vmap_block(struct vmap_block *);
66:	static void free_work(struct work_struct *);
967:	static void insert_vmap_area(struct vmap_area *, struct list_head *, struct rb_root *);
978:	static void insert_vmap_area_augment(struct vmap_area *, struct rb_node *, struct list_head *, struct rb_root *);
3862:	static int proc_vmalloc_init(void);
1822:	static void purge_fragmented_blocks_allcpus(void);
1576:	static void purge_vmap_area_lazy(void);
3508:	static unsigned long pvm_determine_end_from_reverse(struct vmap_area **, unsigned long);
3763:	static void *s_next(struct seq_file *, void *, loff_t *);
3798:	static int s_show(struct seq_file *, void *);
3756:	static void *s_start(struct seq_file *, loff_t *);
3768:	static void s_stop(struct seq_file *, void *);
2220:	static void setup_vmalloc_vm(struct vm_struct *, struct vmap_area *, unsigned long, const void *);
447:	static int vmap_pages_range_noflush(unsigned long, unsigned long, pgprot_t, struct page **, unsigned int);
226:	static int vmap_range_noflush(unsigned long, unsigned long, phys_addr_t, pgprot_t, unsigned int);

File mm/vmpressure.c:
243:	void vmpressure(gfp_t, struct mem_cgroup *, bool, unsigned long, unsigned long);
467:	void vmpressure_cleanup(struct vmpressure *);
452:	void vmpressure_init(struct vmpressure *);
326:	void vmpressure_prio(gfp_t, struct mem_cgroup *, int);
365:	int vmpressure_register_event(struct mem_cgroup *, struct eventfd_ctx *, const char *);
428:	void vmpressure_unregister_event(struct mem_cgroup *, struct eventfd_ctx *);
124:	static enum vmpressure_levels vmpressure_calc_level(unsigned long, unsigned long);
184:	static void vmpressure_work_fn(struct work_struct *);

File mm/vmscan.c:
1597:	int __isolate_lru_page(struct page *, isolate_mode_t);
4497:	int add_page_for_swap(struct page *, struct list_head *);
4070:	int cache_reclaim_enable_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
4086:	int cache_reclaim_sysctl_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
4391:	void check_move_unevictable_pages(struct page **, int);
767:	void drop_slab(void);
737:	void drop_slab_node(int);
398:	void free_prealloced_shrinker(struct shrinker *);
4525:	struct page *get_page_from_vaddr(struct mm_struct *, unsigned long);
1813:	int isolate_lru_page(struct page *);
4129:	int kswapd_run(int);
4152:	void kswapd_stop(int);
341:	unsigned long lruvec_lru_size(struct lruvec *, enum lru_list, int);
3297:	unsigned long mem_cgroup_shrink_node(struct mem_cgroup *, gfp_t, bool, pg_data_t *, unsigned long *);
4312:	int node_reclaim(struct pglist_data *, gfp_t, unsigned int);
4370:	int page_evictable(struct page *);
374:	int prealloc_shrinker(struct shrinker *);
1030:	void putback_lru_page(struct page *);
1549:	unsigned long reclaim_clean_pages_from_list(struct zone *, struct list_head *);
4440:	unsigned long reclaim_pages(struct list_head *);
421:	int register_shrinker(struct shrinker *);
413:	void register_shrinker_prepared(struct shrinker *);
1007:	int remove_mapping(struct address_space *, struct page *);
3914:	unsigned long shrink_all_memory(unsigned long);
4015:	unsigned long shrink_page_cache(gfp_t);
3335:	unsigned long try_to_free_mem_cgroup_pages(struct mem_cgroup *, unsigned long, gfp_t, bool);
3251:	unsigned long try_to_free_pages(struct zonelist *, int, gfp_t, nodemask_t *);
435:	void unregister_shrinker(struct shrinker *);
3861:	void wakeup_kswapd(struct zone *, gfp_t, int, enum zone_type);
322:	unsigned long zone_reclaimable_pages(struct zone *);
910:	static int __remove_mapping(struct address_space *, struct page *, bool);
3948:	static unsigned long __shrink_page_cache(gfp_t);
3118:	static bool allow_direct_reclaim(pg_data_t *);
454:	static unsigned long do_shrink_slab(struct shrink_control *, struct shrinker *, int);
3055:	static unsigned long do_try_to_free_pages(struct zonelist *, struct scan_control *);
727:	static int drop_caches_loop_limit_setup(char *);
2249:	static bool inactive_list_is_low(struct lruvec *, bool, struct scan_control *, bool);
1706:	static unsigned long isolate_lru_pages(unsigned long, struct lruvec *, struct list_head *, unsigned long *, isolate_mode_t, enum lru_list, struct scan_control *, struct scan_control *);
3773:	static int kswapd(void *);
4063:	static int kswapd_cpu_down_prep(unsigned int);
4108:	static int kswapd_cpu_online(unsigned int);
4162:	static int kswapd_init(void);
2077:	static unsigned int move_active_pages_to_lru(struct lruvec *, struct list_head *, struct list_head *, enum lru_list);
4235:	static unsigned long node_pagecache_reclaimable(struct pglist_data *);
835:	static pageout_t pageout(struct page *, struct address_space *, struct scan_control *);
3404:	static bool pgdat_balanced(pg_data_t *, int, int);
3446:	static bool prepare_kswapd_sleep(pg_data_t *, int, int);
1876:	static void putback_inactive_pages(struct lruvec *, struct list_head *);
2117:	static void shrink_active_list(unsigned long, struct lruvec *, struct scan_control *, enum lru_list);
1947:	static unsigned long shrink_inactive_list(unsigned long, struct lruvec *, struct scan_control *, enum lru_list);
2722:	static bool shrink_node(pg_data_t *, struct scan_control *);
2529:	static void shrink_node_memcg(struct pglist_data *, struct mem_cgroup *, struct scan_control *, unsigned long *);
4025:	static void shrink_page_cache_work(struct work_struct *);
1131:	static unsigned long shrink_page_list(struct list_head *, struct pglist_data *, struct scan_control *, enum ttu_flags, struct reclaim_stat *, bool);
3974:	static void shrink_shepherd(struct work_struct *);
678:	static unsigned long shrink_slab(gfp_t, int, struct mem_cgroup *, int);
3024:	static void snapshot_refaults(struct mem_cgroup *, pg_data_t *);
3167:	static bool throttle_direct_reclaim(gfp_t, struct zonelist *, nodemask_t *);
220:	static void unregister_memcg_shrinker(struct shrinker *);

File mm/vmstat.c:
460:	void __dec_node_page_state(struct page *, enum node_stat_item);
438:	void __dec_node_state(struct pglist_data *, enum node_stat_item);
454:	void __dec_zone_page_state(struct page *, enum zone_stat_item);
422:	void __dec_zone_state(struct zone *, enum zone_stat_item);
416:	void __inc_node_page_state(struct page *, enum node_stat_item);
394:	void __inc_node_state(struct pglist_data *, enum node_stat_item);
938:	void __inc_numa_state(struct zone *, enum numa_stat_item);
410:	void __inc_zone_page_state(struct page *, enum zone_stat_item);
378:	void __inc_zone_state(struct zone *, enum zone_stat_item);
335:	void __mod_node_page_state(struct pglist_data *, enum node_stat_item, long);
315:	void __mod_zone_page_state(struct zone *, enum zone_stat_item, long);
130:	void all_vm_events(unsigned long *);
195:	int calculate_normal_threshold(struct zone *);
171:	int calculate_pressure_threshold(struct zone *);
846:	void cpu_vm_stats_fold(int);
592:	void dec_node_page_state(struct page *, enum node_stat_item);
530:	void dec_zone_page_state(struct page *, enum zone_stat_item);
912:	void drain_zonestat(struct zone *, struct per_cpu_pageset *);
1077:	int fragmentation_index(struct zone *, unsigned int);
586:	void inc_node_page_state(struct page *, enum node_stat_item);
581:	void inc_node_state(struct pglist_data *, enum node_stat_item);
524:	void inc_zone_page_state(struct page *, enum zone_stat_item);
1967:	void init_mm_internals(void);
574:	void mod_node_page_state(struct pglist_data *, enum node_stat_item, long);
517:	void mod_zone_page_state(struct zone *, enum zone_stat_item, long);
991:	unsigned long node_page_state(struct pglist_data *, enum node_stat_item);
1864:	void quiet_vmstat(void);
245:	void refresh_zone_stat_thresholds(void);
290:	void set_pgdat_percpu_threshold(pg_data_t *, int (*)(struct zone *));
958:	unsigned long sum_zone_node_page_state(int, enum zone_stat_item);
975:	unsigned long sum_zone_numa_state(int, enum numa_stat_item);
77:	int sysctl_vm_numa_stat_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
144:	void vm_events_fold_cpu(int);
1759:	int vmstat_refresh(struct ctl_table *, int, void *, size_t *, loff_t *);
1053:	static int __fragmentation_index(unsigned int, struct contig_page_info *);
2135:	static int extfrag_debug_init(void);
2123:	static int extfrag_open(struct inode *, struct file *);
2107:	static int extfrag_show(struct seq_file *, void *);
2083:	static void extfrag_show_print(struct seq_file *, pg_data_t *, struct zone *);
683:	static int fold_diff(int *, int *, int *);
1308:	static void *frag_next(struct seq_file *, void *, loff_t *);
1360:	static int frag_show(struct seq_file *, void *);
1346:	static void frag_show_print(struct seq_file *, pg_data_t *, struct zone *);
1295:	static void *frag_start(struct seq_file *, loff_t *);
1316:	static void frag_stop(struct seq_file *, void *);
1832:	static bool need_update(int);
1508:	static int pagetypeinfo_show(struct seq_file *, void *);
1426:	static void pagetypeinfo_showblockcount_print(struct seq_file *, pg_data_t *, struct zone *);
1367:	static void pagetypeinfo_showfree_print(struct seq_file *, pg_data_t *, struct zone *);
744:	static int refresh_cpu_vm_stats(bool);
1754:	static void refresh_vm_stats(struct work_struct *);
110:	static void sum_vm_events(unsigned long *);
2071:	static int unusable_open(struct inode *, struct file *);
2051:	static int unusable_show(struct seq_file *, void *);
2023:	static void unusable_show_print(struct seq_file *, pg_data_t *, struct zone *);
1947:	static int vmstat_cpu_dead(unsigned int);
1941:	static int vmstat_cpu_down_prep(unsigned int);
1934:	static int vmstat_cpu_online(unsigned int);
1712:	static void *vmstat_next(struct seq_file *, void *, loff_t *);
1894:	static void vmstat_shepherd(struct work_struct *);
1720:	static int vmstat_show(struct seq_file *, void *);
1666:	static void *vmstat_start(struct seq_file *, loff_t *);
1735:	static void vmstat_stop(struct seq_file *, void *);
1809:	static void vmstat_update(struct work_struct *);
1324:	static void walk_zones_in_node(struct seq_file *, pg_data_t *, bool, void (*)(struct seq_file *, pg_data_t *, struct zone *), bool);
1645:	static int zoneinfo_show(struct seq_file *, void *);
1554:	static void zoneinfo_show_print(struct seq_file *, pg_data_t *, struct zone *);

File mm/workingset.c:
307:	void workingset_activation(struct page *);
208:	void *workingset_eviction(struct address_space *, struct page *);
235:	bool workingset_refault(void *);
343:	void workingset_update_node(struct radix_tree_node *);
362:	static unsigned long count_shadow_nodes(struct shrinker *, struct shrink_control *);
491:	static unsigned long scan_shadow_nodes(struct shrinker *, struct shrink_control *);
418:	static enum lru_status shadow_lru_isolate(struct list_head *, struct list_lru_one *, spinlock_t *, void *);
512:	static int workingset_init(void);

File mm/zbud.c:
353:	int zbud_alloc(struct zbud_pool *, size_t, gfp_t, unsigned long *);
305:	struct zbud_pool *zbud_create_pool(gfp_t, const struct zbud_ops *);
329:	void zbud_destroy_pool(struct zbud_pool *);
429:	void zbud_free(struct zbud_pool *, unsigned long);
604:	u64 zbud_get_pool_size(struct zbud_pool *);
583:	void *zbud_map(struct zbud_pool *, unsigned long);
501:	int zbud_reclaim_page(struct zbud_pool *, unsigned int);
593:	void zbud_unmap(struct zbud_pool *, unsigned long);
622:	static void exit_zbud(void);
250:	static void free_zbud_page(struct zbud_header *);
609:	static int init_zbud(void);
140:	static void *zbud_zpool_create(const char *, gfp_t, const struct zpool_ops *, struct zpool *);
154:	static void zbud_zpool_destroy(void *);
128:	static int zbud_zpool_evict(struct zbud_pool *, unsigned long);
164:	static void zbud_zpool_free(void *, unsigned long);
159:	static int zbud_zpool_malloc(void *, size_t, gfp_t, unsigned long *);
188:	static void *zbud_zpool_map(void *, unsigned long, enum zpool_mapmode);
169:	static int zbud_zpool_shrink(void *, unsigned int, unsigned int *);
198:	static u64 zbud_zpool_total_size(void *);

File mm/zpool.c:
154:	struct zpool *zpool_create_pool(const char *, const char *, gfp_t, const struct zpool_ops *);
213:	void zpool_destroy_pool(struct zpool *);
374:	bool zpool_evictable(struct zpool *);
276:	void zpool_free(struct zpool *, unsigned long);
356:	u64 zpool_get_total_size(struct zpool *);
235:	const char *zpool_get_type(struct zpool *);
120:	bool zpool_has_pool(char *);
256:	int zpool_malloc(struct zpool *, size_t, gfp_t, unsigned long *);
327:	void *zpool_map_handle(struct zpool *, unsigned long, enum zpool_mapmode);
39:	void zpool_register_driver(struct zpool_driver *);
298:	int zpool_shrink(struct zpool *, unsigned int, unsigned int *);
343:	void zpool_unmap_handle(struct zpool *, unsigned long);
58:	int zpool_unregister_driver(struct zpool_driver *);
76:	static struct zpool_driver *zpool_get_driver(const char *);
96:	static void zpool_put_driver(struct zpool_driver *);

File mm/zsmalloc.c:
2337:	unsigned long zs_compact(struct zs_pool *);
2426:	struct zs_pool *zs_create_pool(const char *);
2542:	void zs_destroy_pool(struct zs_pool *);
1560:	void zs_free(struct zs_pool *, unsigned long);
1290:	unsigned long zs_get_total_pages(struct zs_pool *);
1421:	size_t zs_huge_class_size(struct zs_pool *);
1479:	unsigned long zs_malloc(struct zs_pool *, size_t, gfp_t);
1311:	void *zs_map_object(struct zs_pool *, unsigned long, enum zs_mapmode);
2355:	void zs_pool_stats(struct zs_pool *, struct zs_pool_stats *);
1370:	void zs_unmap_object(struct zs_pool *, unsigned long);
953:	static void __free_zspage(struct zs_pool *, struct size_class *, struct zspage *);
2213:	static void async_free_zspage(struct work_struct *);
1045:	static void create_page_chain(struct zspage *, struct page **, struct size_class *, struct size_class *);
784:	static enum fullness_group fix_fullness_group(struct size_class *, struct zspage *);
985:	static void free_zspage(struct zs_pool *, struct size_class *, struct zspage *);
842:	static struct zspage *get_zspage(struct page *);
516:	static void get_zspage_mapping(enum fullness_group *, unsigned int *, struct zspage *);
738:	static void insert_zspage(struct size_class *, struct zspage *, enum fullness_group);
1765:	static struct zspage *isolate_zspage(struct size_class *, bool);
1535:	static void obj_free(unsigned long, struct size_class *, struct size_class *);
1427:	static unsigned long obj_malloc(struct zspage *, unsigned long, struct size_class *, struct size_class *);
1796:	static enum fullness_group putback_zspage(struct size_class *, struct zspage *);
1892:	static void putback_zspage_deferred(struct zs_pool *, struct zspage *, struct size_class *);
922:	static void reset_page(struct page *);
1266:	static int zs_cpu_dead(unsigned int);
1258:	static int zs_cpu_prepare(unsigned int);
2602:	static void zs_exit(void);
2575:	static int zs_init(void);
1824:	static struct dentry *zs_mount(struct file_system_type *, int, const char *, void *);
1940:	static bool zs_page_isolate(struct page *, isolate_mode_t);
1996:	static int zs_page_migrate(struct address_space *, struct page *, struct page *, enum migrate_mode);
2125:	static void zs_page_putback(struct page *);
2379:	static unsigned long zs_shrinker_count(struct shrinker *, struct shrink_control *);
2361:	static unsigned long zs_shrinker_scan(struct shrinker *, struct shrink_control *);
587:	static void zs_stat_exit(void);
651:	static int zs_stats_size_open(struct inode *, struct file *);
594:	static int zs_stats_size_show(struct seq_file *, void *);
386:	static void *zs_zpool_create(const char *, gfp_t, const struct zpool_ops *, struct zpool *);
398:	static void zs_zpool_destroy(void *);
409:	static void zs_zpool_free(void *, unsigned long);
403:	static int zs_zpool_malloc(void *, size_t, gfp_t, unsigned long *);
414:	static void *zs_zpool_map(void *, unsigned long, enum zpool_mapmode);
439:	static u64 zs_zpool_total_size(void *);
434:	static void zs_zpool_unmap(void *, unsigned long);

File mm/zswap.c:
675:	static int __zswap_param_set(const char *, const struct kernel_param *, char *, char *);
441:	static struct zswap_pool *__zswap_pool_current(void);
647:	static void __zswap_pool_empty(struct kref *);
634:	static void __zswap_pool_release(struct work_struct *);
1308:	static int init_zswap(void);
770:	static int zswap_compressor_param_set(const char *, const struct kernel_param *);
425:	static int zswap_cpu_comp_dead(unsigned int, struct hlist_node *);
407:	static int zswap_cpu_comp_prepare(unsigned int, struct hlist_node *);
1292:	static void zswap_debugfs_exit(void);
396:	static int zswap_dstmem_dead(unsigned int);
384:	static int zswap_dstmem_prepare(unsigned int);
782:	static int zswap_enabled_param_set(const char *, const struct kernel_param *);
354:	static void zswap_entry_put(struct zswap_tree *, struct zswap_entry *);
332:	static void zswap_free_entry(struct zswap_entry *);
1228:	static void zswap_frontswap_init(unsigned int);
1210:	static void zswap_frontswap_invalidate_area(unsigned int);
1186:	static void zswap_frontswap_invalidate_page(unsigned int, unsigned long);
1137:	static int zswap_frontswap_load(unsigned int, unsigned long, struct page *);
997:	static int zswap_frontswap_store(unsigned int, unsigned long, struct page *);
513:	static struct zswap_pool *zswap_pool_create(char *, char *);
452:	static struct zswap_pool *zswap_pool_current(void);
226:	static void zswap_update_total_size(void);
849:	static int zswap_writeback_entry(struct zpool *, unsigned long);
776:	static int zswap_zpool_param_set(const char *, const struct kernel_param *);

File net/802/fc.c:
106:	struct net_device *alloc_fcdev(int);
36:	static int fc_header(struct sk_buff *, struct net_device *, unsigned short, const void *, const void *, unsigned int);
82:	static void fc_setup(struct net_device *);

File net/8021q/vlan_core.c:
75:	struct net_device *__vlan_find_dev_deep_rcu(struct net_device *, __be16, u16);
101:	struct net_device *vlan_dev_real_dev(const struct net_device *);
112:	u16 vlan_dev_vlan_id(const struct net_device *);
118:	__be16 vlan_dev_vlan_proto(const struct net_device *);
9:	bool vlan_do_receive(struct sk_buff **);
255:	void vlan_filter_drop_vids(struct vlan_info *, __be16);
226:	int vlan_filter_push_vids(struct vlan_info *, __be16);
417:	bool vlan_uses_dev(const struct net_device *);
290:	int vlan_vid_add(struct net_device *, __be16, u16);
344:	void vlan_vid_del(struct net_device *, __be16, u16);
369:	int vlan_vids_add_by_dev(struct net_device *, const struct net_device *);
400:	void vlan_vids_del_by_dev(struct net_device *, const struct net_device *);
204:	static int vlan_add_rx_filter_info(struct net_device *, __be16, u16);
143:	static void vlan_info_rcu_free(struct callback_head *);
215:	static int vlan_kill_rx_filter_info(struct net_device *, __be16, u16);

File net/bpf/test_run.c:
101:	int bpf_prog_test_run_skb(struct bpf_prog *, const union bpf_attr *, union bpf_attr *);
169:	int bpf_prog_test_run_xdp(struct bpf_prog *, const union bpf_attr *, union bpf_attr *);
61:	static int bpf_test_finish(union bpf_attr *, const void *, u32, u32, u32, const union bpf_attr *);
81:	static void *bpf_test_init(u32, u32, u32, const union bpf_attr *);
29:	static u32 bpf_test_run(struct bpf_prog *, void *, u32, u32 *);

File net/compat.c:
35:	int __get_compat_msghdr(struct msghdr *, struct compat_msghdr *, struct sockaddr **, compat_uptr_t *, compat_size_t *);
561:	long __ia32_compat_sys_getsockopt(const struct pt_regs *);
822:	long __ia32_compat_sys_recv(const struct pt_regs *);
827:	long __ia32_compat_sys_recvfrom(const struct pt_regs *);
856:	long __ia32_compat_sys_recvmmsg(const struct pt_regs *);
807:	long __ia32_compat_sys_recvmsg(const struct pt_regs *);
793:	long __ia32_compat_sys_sendmmsg(const struct pt_regs *);
779:	long __ia32_compat_sys_sendmsg(const struct pt_regs *);
432:	long __ia32_compat_sys_setsockopt(const struct pt_regs *);
863:	long __ia32_compat_sys_socketcall(const struct pt_regs *);
139:	int cmsghdr_from_user_compat_to_kern(struct msghdr *, struct sock *, unsigned char *, int);
682:	int compat_mc_getsockopt(struct sock *, int, char *, int *, int (*)(struct sock *, int, int, char *, int *), int);
595:	int compat_mc_setsockopt(struct sock *, int, int, char *, unsigned int, int (*)(struct sock *, int, int, char *, unsigned int));
476:	int compat_sock_get_timestamp(struct sock *, struct timeval *);
505:	int compat_sock_get_timestampns(struct sock *, struct timespec *);
337:	struct sock_fprog *get_compat_bpf_fprog(char *);
86:	int get_compat_msghdr(struct msghdr *, struct compat_msghdr *, struct sockaddr **, struct iovec **);
225:	int put_cmsg_compat(struct msghdr *, int, int, int, void *);
281:	void scm_detach_fds_compat(struct msghdr *, struct scm_cookie *);
533:	static int __compat_sys_getsockopt(int, int, int, char *, int *);
834:	static int __compat_sys_recvmmsg(int, struct compat_mmsghdr *, unsigned int, unsigned int, struct compat_timespec *);
405:	static int __compat_sys_setsockopt(int, int, int, char *, unsigned int);

File net/core/datagram.c:
354:	int __sk_queue_drop_skb(struct sock *, struct sk_buff_head *, struct sk_buff *, unsigned int, void (*)(struct sock *, struct sk_buff *));
747:	__sum16 __skb_checksum_complete(struct sk_buff *);
731:	__sum16 __skb_checksum_complete_head(struct sk_buff *, int);
334:	void __skb_free_datagram_locked(struct sock *, struct sk_buff *, int);
292:	struct sk_buff *__skb_recv_datagram(struct sock *, unsigned int, void (*)(struct sock *, struct sk_buff *), int *, int *, int *);
244:	struct sk_buff *__skb_try_recv_datagram(struct sock *, unsigned int, void (*)(struct sock *, struct sk_buff *), int *, int *, int *, struct sk_buff **);
163:	struct sk_buff *__skb_try_recv_from_queue(struct sock *, struct sk_buff_head *, unsigned int, void (*)(struct sock *, struct sk_buff *), int *, int *, int *, struct sk_buff **);
85:	int __skb_wait_for_more_packets(struct sock *, int *, long *, const struct sk_buff *);
581:	int __zerocopy_sg_from_iter(struct sock *, struct sk_buff *, struct iov_iter *, size_t);
835:	__poll_t datagram_poll(struct file *, struct socket *, poll_table *);
786:	int skb_copy_and_csum_datagram_msg(struct sk_buff *, int, struct msghdr *);
509:	int skb_copy_datagram_from_iter(struct sk_buff *, int, struct iov_iter *, int);
418:	int skb_copy_datagram_iter(const struct sk_buff *, int, struct iov_iter *, int);
327:	void skb_free_datagram(struct sock *, struct sk_buff *);
400:	int skb_kill_datagram(struct sock *, struct sk_buff *, unsigned int);
317:	struct sk_buff *skb_recv_datagram(struct sock *, unsigned int, int, int *);
636:	int zerocopy_sg_from_iter(struct sk_buff *, struct iov_iter *);
72:	static int receiver_wake_function(wait_queue_entry_t *, unsigned int, int, void *);
648:	static int skb_copy_and_csum_datagram(const struct sk_buff *, int, struct iov_iter *, int, __wsum *);

File net/core/dev.c:
7634:	int __dev_change_flags(struct net_device *, unsigned int);
1912:	int __dev_forward_skb(struct net_device *, struct sk_buff *);
995:	struct net_device *__dev_get_by_flags(struct net *, unsigned short, unsigned short);
811:	struct net_device *__dev_get_by_index(struct net *, int);
736:	struct net_device *__dev_get_by_name(struct net *, const char *);
955:	struct net_device *__dev_getfirstbyhwtype(struct net *, unsigned short);
2791:	void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);
2769:	void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);
7699:	void __dev_notify_flags(struct net_device *, unsigned int, unsigned int);
431:	void __dev_remove_pack(struct packet_type *);
7750:	int __dev_set_mtu(struct net_device *, int);
7568:	void __dev_set_rx_mode(struct net_device *);
7986:	u32 __dev_xdp_query(struct net_device *, bpf_op_t, enum bpf_netdev_command);
5887:	void __napi_schedule(struct napi_struct *);
5936:	void __napi_schedule_irqoff(struct napi_struct *);
8362:	int __netdev_update_features(struct net_device *);
2728:	void __netif_schedule(struct Qdisc *);
2295:	int __netif_set_xps_queue(struct net_device *, const unsigned long *, u16, bool);
5763:	__sum16 __skb_gro_checksum_complete(struct sk_buff *);
3051:	struct sk_buff *__skb_gso_segment(struct sk_buff *, netdev_features_t, bool);
9114:	struct net_device *alloc_netdev_mqs(int, const char *, unsigned char, void (*)(struct net_device *), unsigned int, unsigned int);
1756:	int call_netdevice_notifiers(unsigned long, struct net_device *);
484:	void dev_add_offload(struct packet_offload *);
408:	void dev_add_pack(struct packet_type *);
1135:	int dev_alloc_name(struct net_device *, const char *);
7917:	int dev_change_carrier(struct net_device *, bool);
7735:	int dev_change_flags(struct net_device *, unsigned int);
1168:	int dev_change_name(struct net_device *, const char *);
9357:	int dev_change_net_namespace(struct net_device *, struct net *, const char *);
7974:	int dev_change_proto_down(struct net_device *, bool);
7844:	int dev_change_tx_queue_len(struct net_device *, unsigned long);
8058:	int dev_change_xdp_fd(struct net_device *, struct netlink_ext_ack *, int, u32);
1530:	void dev_close(struct net_device *);
1501:	void dev_close_many(struct list_head *, bool);
3881:	int dev_direct_xmit(struct sk_buff *, u16);
1551:	void dev_disable_lro(struct net_device *);
707:	int dev_fill_metadata_dst(struct net_device *, struct sk_buff *);
1943:	int dev_forward_skb(struct net_device *, struct sk_buff *);
1308:	int dev_get_alias(const struct net_device *, char *, size_t);
860:	struct net_device *dev_get_by_index(struct net *, int);
835:	struct net_device *dev_get_by_index_rcu(struct net *, int);
786:	struct net_device *dev_get_by_name(struct net *, const char *);
761:	struct net_device *dev_get_by_name_rcu(struct net *, const char *);
883:	struct net_device *dev_get_by_napi_id(unsigned int);
7609:	unsigned int dev_get_flags(const struct net_device *);
689:	int dev_get_iflink(const struct net_device *);
7389:	int dev_get_nest_level(struct net_device *);
7936:	int dev_get_phys_port_id(struct net_device *, struct netdev_phys_item_id *);
7955:	int dev_get_phys_port_name(struct net_device *, char *, size_t);
9046:	struct rtnl_link_stats64 *dev_get_stats(struct net_device *, struct rtnl_link_stats64 *);
1141:	int dev_get_valid_name(struct net *, struct net_device *, const char *);
941:	struct net_device *dev_getbyhwaddr_rcu(struct net *, unsigned short, const char *);
968:	struct net_device *dev_getfirstbyhwtype(struct net *, unsigned short);
3262:	struct sk_buff *dev_hard_start_xmit(struct sk_buff *, struct net_device *, struct netdev_queue *, int *);
9066:	struct netdev_queue *dev_ingress_queue_create(struct net_device *);
3543:	int dev_loopback_xmit(struct net *, struct sock *, struct sk_buff *);
1430:	int dev_open(struct net_device *);
3674:	u16 dev_pick_tx_cpu_id(struct net_device *, struct sk_buff *, struct net_device *, select_queue_fallback_t);
3666:	u16 dev_pick_tx_zero(struct net_device *, struct sk_buff *, struct net_device *, select_queue_fallback_t);
3869:	int dev_queue_xmit(struct sk_buff *);
3875:	int dev_queue_xmit_accel(struct sk_buff *, struct net_device *);
1995:	void dev_queue_xmit_nit(struct sk_buff *, struct net_device *);
542:	void dev_remove_offload(struct packet_offload *);
463:	void dev_remove_pack(struct packet_type *);
1271:	int dev_set_alias(struct net_device *, const char *, size_t);
7556:	int dev_set_allmulti(struct net_device *, int);
7876:	void dev_set_group(struct net_device *, int);
7889:	int dev_set_mac_address(struct net_device *, struct sockaddr *);
7826:	int dev_set_mtu(struct net_device *, int);
7787:	int dev_set_mtu_ext(struct net_device *, int, struct netlink_ext_ack *);
7497:	int dev_set_promiscuity(struct net_device *, int);
7596:	void dev_set_rx_mode(struct net_device *);
1021:	bool dev_valid_name(const char *);
7763:	int dev_validate_mtu(struct net_device *, int, struct netlink_ext_ack *);
4432:	int do_xdp_generic(struct bpf_prog *, struct sk_buff *);
9228:	void free_netdev(struct net_device *);
4407:	void generic_xdp_tx(struct sk_buff *, struct bpf_prog *);
5575:	struct packet_offload *gro_find_complete_by_type(__be16);
5561:	struct packet_offload *gro_find_receive_by_type(__be16);
8798:	int init_dummy_netdev(struct net_device *);
1891:	bool is_skb_forwardable(const struct net_device *, const struct sk_buff *);
6048:	void napi_busy_loop(unsigned int, bool (*)(void *, unsigned long), void *);
5942:	bool napi_complete_done(struct napi_struct *, int);
6210:	void napi_disable(struct napi_struct *);
5659:	struct sk_buff *napi_get_frags(struct napi_struct *);
5345:	void napi_gro_flush(struct napi_struct *, bool);
5747:	gro_result_t napi_gro_frags(struct napi_struct *);
5624:	gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);
6144:	bool napi_hash_del(struct napi_struct *);
5906:	bool napi_schedule_prep(struct napi_struct *);
1813:	void net_dec_egress_queue(void);
1797:	void net_dec_ingress_queue(void);
1858:	void net_disable_timestamp(void);
1838:	void net_enable_timestamp(void);
1807:	void net_inc_egress_queue(void);
1791:	void net_inc_ingress_queue(void);
6489:	void *netdev_adjacent_get_private(struct list_head *);
7348:	void netdev_adjacent_rename_links(struct net_device *, char *);
9674:	void netdev_alert(const struct net_device *, const char *, ...);
2579:	int netdev_bind_sb_channel_queue(struct net_device *, struct net_device *, u8, u16, u16);
7284:	void netdev_bonding_info_change(struct net_device *, struct netdev_bonding_info *);
625:	unsigned long netdev_boot_base(const char *, int);
649:	int netdev_boot_setup(char *);
595:	int netdev_boot_setup_check(struct net_device *);
8479:	void netdev_change_features(struct net_device *);
1584:	const char *netdev_cmd_to_name(enum netdev_cmd);
9675:	void netdev_crit(const struct net_device *, const char *, ...);
9604:	const char *netdev_drivername(const struct net_device *);
9673:	void netdev_emerg(const struct net_device *, const char *, ...);
9676:	void netdev_err(const struct net_device *, const char *, ...);
1328:	void netdev_features_change(struct net_device *);
9094:	void netdev_freemem(struct net_device *);
904:	int netdev_get_name(struct net *, char *, int);
6443:	bool netdev_has_any_upper_dev(struct net_device *);
6408:	bool netdev_has_upper_dev(struct net_device *, struct net_device *);
6428:	bool netdev_has_upper_dev_all_rcu(struct net_device *, struct net_device *);
9542:	netdev_features_t netdev_increment_features(netdev_features_t, netdev_features_t, netdev_features_t);
9679:	void netdev_info(const struct net_device *, const char *, ...);
4675:	bool netdev_is_rx_handler_busy(struct net_device *);
7373:	void *netdev_lower_dev_get_private(struct net_device *, struct net_device *);
6909:	void *netdev_lower_get_first_private_rcu(struct net_device *);
6716:	void *netdev_lower_get_next(struct net_device *, struct list_head **);
6661:	void *netdev_lower_get_next_private(struct net_device *, struct list_head **);
6687:	void *netdev_lower_get_next_private_rcu(struct net_device *, struct list_head **);
7416:	void netdev_lower_state_changed(struct net_device *, void *);
6458:	struct net_device *netdev_master_upper_dev_get(struct net_device *);
6928:	struct net_device *netdev_master_upper_dev_get_rcu(struct net_device *);
7227:	int netdev_master_upper_dev_link(struct net_device *, struct net_device *, void *, void *, struct netlink_ext_ack *);
9678:	void netdev_notice(const struct net_device *, const char *, ...);
1366:	void netdev_notify_peers(struct net_device *);
3708:	struct netdev_queue *netdev_pick_tx(struct net_device *, struct sk_buff *, struct net_device *);
9639:	void netdev_printk(const char *, const struct net_device *, const char *, ...);
8857:	int netdev_refcnt_read(const struct net_device *);
2518:	void netdev_reset_tc(struct net_device *);
8952:	void netdev_run_todo(void);
3098:	void netdev_rx_csum_fault(struct net_device *);
4696:	int netdev_rx_handler_register(struct net_device *, rx_handler_func_t *, void *);
4722:	void netdev_rx_handler_unregister(struct net_device *);
9086:	void netdev_set_default_ethtool_ops(struct net_device *, const struct ethtool_ops *);
2546:	int netdev_set_num_tc(struct net_device *, u8);
2605:	int netdev_set_sb_channel(struct net_device *, u16);
2532:	int netdev_set_tc_queue(struct net_device *, u8, u16, u16);
1342:	void netdev_state_change(struct net_device *);
9012:	void netdev_stats_to_stats64(struct rtnl_link_stats64 *, const struct net_device_stats *);
2096:	int netdev_txq_to_tc(struct net_device *, unsigned int);
2561:	void netdev_unbind_sb_channel(struct net_device *, struct net_device *);
8462:	void netdev_update_features(struct net_device *);
7204:	int netdev_upper_dev_link(struct net_device *, struct net_device *, struct netlink_ext_ack *);
7245:	void netdev_upper_dev_unlink(struct net_device *, struct net_device *);
6507:	struct net_device *netdev_upper_get_next_dev_rcu(struct net_device *, struct list_head **);
6746:	int netdev_walk_all_lower_dev(struct net_device *, int (*)(struct net_device *, void *), void *);
6853:	int netdev_walk_all_lower_dev_rcu(struct net_device *, int (*)(struct net_device *, void *), void *);
6603:	int netdev_walk_all_upper_dev_rcu(struct net_device *, int (*)(struct net_device *, void *), void *);
9677:	void netdev_warn(const struct net_device *, const char *, ...);
2822:	void netif_device_attach(struct net_device *);
2807:	void netif_device_detach(struct net_device *);
2707:	int netif_get_num_default_rss_queues(void);
6186:	void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int), int);
6240:	void netif_napi_del(struct napi_struct *);
5209:	int netif_receive_skb(struct sk_buff *);
4973:	int netif_receive_skb_core(struct sk_buff *);
5227:	void netif_receive_skb_list(struct list_head *);
4512:	int netif_rx(struct sk_buff *);
4520:	int netif_rx_ni(struct sk_buff *);
2744:	void netif_schedule_queue(struct netdev_queue *);
2679:	int netif_set_real_num_rx_queues(struct net_device *, unsigned int);
2629:	int netif_set_real_num_tx_queues(struct net_device *, unsigned int);
2493:	int netif_set_xps_queue(struct net_device *, const struct cpumask *, u16);
3214:	netdev_features_t netif_skb_features(struct sk_buff *);
8495:	void netif_stacked_transfer_operstate(const struct net_device *, struct net_device *);
8598:	void netif_tx_stop_all_queues(struct net_device *);
2756:	void netif_tx_wake_queue(struct netdev_queue *);
3167:	netdev_features_t passthru_features_check(struct sk_buff *, struct net_device *, netdev_features_t);
8845:	int register_netdev(struct net_device *);
8627:	int register_netdevice(struct net_device *);
1631:	int register_netdevice_notifier(struct notifier_block *);
4118:	bool rps_may_expire_flow(struct net_device *, u16, u32, u16);
2890:	int skb_checksum_help(struct sk_buff *);
2934:	int skb_crc32c_csum_help(struct sk_buff *);
3299:	int skb_csum_hwoffload_help(struct sk_buff *, const netdev_features_t);
2998:	struct sk_buff *skb_mac_gso_segment(struct sk_buff *, netdev_features_t);
2975:	__be16 skb_network_protocol(struct sk_buff *, int *);
9267:	void synchronize_net(void);
9335:	void unregister_netdev(struct net_device *);
9311:	void unregister_netdevice_many(struct list_head *);
1701:	int unregister_netdevice_notifier(struct notifier_block *);
9290:	void unregister_netdevice_queue(struct net_device *, struct list_head *);
3365:	struct sk_buff *validate_xmit_skb_list(struct sk_buff *, struct net_device *, bool *);
1448:	static void __dev_close_many(struct list_head *);
1375:	static int __dev_open(struct net_device *);
3763:	static int __dev_queue_xmit(struct sk_buff *, struct net_device *);
7511:	static int __dev_set_allmulti(struct net_device *, int, bool);
7438:	static int __dev_set_promiscuity(struct net_device *, int, bool);
3599:	static int __get_xps_queue_idx(struct net_device *, struct sk_buff *, struct xps_dev_maps *, unsigned int);
6971:	static int __netdev_adjacent_dev_insert(struct net_device *, struct net_device *, struct list_head *, void *, bool);
7032:	static void __netdev_adjacent_dev_remove(struct net_device *, struct net_device *, struct list_head *, u16);
7115:	static void __netdev_adjacent_dev_unlink_neighbour(struct net_device *, struct net_device *);
6392:	static int __netdev_has_upper_dev(struct net_device *, void *);
3682:	static u16 __netdev_pick_tx(struct net_device *, struct sk_buff *, struct net_device *);
9620:	static void __netdev_printk(const char *, const struct net_device *, struct va_format *);
6847:	static int __netdev_update_lower_level(struct net_device *, void *);
6841:	static int __netdev_update_upper_level(struct net_device *, void *);
7123:	static int __netdev_upper_dev_link(struct net_device *, struct net_device *, bool, void *, void *, struct netlink_ext_ack *);
5046:	static int __netif_receive_skb(struct sk_buff *);
4775:	static int __netif_receive_skb_core(struct sk_buff **, bool, struct packet_type **);
5004:	static void __netif_receive_skb_list_core(struct list_head *, bool);
4946:	static int __netif_receive_skb_one_core(struct sk_buff *, bool);
6019:	static void busy_poll_stop(struct napi_struct *, void *);
1740:	static int call_netdevice_notifiers_info(unsigned long, struct netdev_notifier_info *);
2189:	static void clean_xps_maps(struct net_device *, const unsigned long *, struct xps_dev_maps *, unsigned int, u16, u16, bool);
9694:	static void default_device_exit(struct net *);
9756:	static void default_device_exit_batch(struct list_head *);
1107:	static int dev_alloc_name_ns(struct net *, struct net_device *, const char *);
9466:	static int dev_cpu_dead(unsigned int);
5452:	static enum gro_result dev_gro_receive(struct napi_struct *, struct sk_buff *);
8115:	static int dev_new_index(struct net *);
8003:	static int dev_xdp_install(struct net_device *, bpf_op_t, struct netlink_ext_ack *, u32, struct bpf_prog *);
4221:	static int enqueue_to_backlog(struct sk_buff *, int, unsigned int *);
5242:	static void flush_backlog(struct work_struct *);
5101:	static int generic_xdp_install(struct net_device *, struct netdev_bpf *);
4010:	static int get_rps_cpu(struct net_device *, struct sk_buff *, struct rps_dev_flow **);
5411:	static void gro_pull_from_frag0(struct sk_buff *, int);
234:	static void list_netdevice(struct net_device *);
5288:	static int napi_gro_complete(struct sk_buff *);
5635:	static void napi_reuse_skb(struct sk_buff *, struct napi_struct *, struct napi_struct *);
5589:	static void napi_skb_free_stolen_head(struct sk_buff *);
6159:	static enum hrtimer_restart napi_watchdog(struct hrtimer *);
9807:	static int net_dev_init(void);
5785:	static void net_rps_send_ipi(struct softnet_data *);
6315:	static void net_rx_action(struct softirq_action *);
8131:	static void net_set_todo(struct net_device *);
4536:	static void net_tx_action(struct softirq_action *);
6940:	static int netdev_adjacent_sysfs_add(struct net_device *, struct net_device *, struct list_head *);
6951:	static void netdev_adjacent_sysfs_del(struct net_device *, char *, struct list_head *);
9560:	static struct hlist_head *netdev_create_hash(void);
9681:	static void netdev_exit(struct net *);
9574:	static int netdev_init(struct net *);
2507:	static void netdev_unbind_all_sb_channels(struct net_device *);
6557:	static int netdev_walk_all_upper_dev(struct net_device *, void *, int (*)(struct net_device *, void *));
5134:	static int netif_receive_skb_internal(struct sk_buff *);
2212:	static void netif_reset_xps_queues(struct net_device *, u16, u16);
2249:	static void netif_reset_xps_queues_gt(struct net_device *, u16);
4462:	static int netif_rx_internal(struct sk_buff *);
1824:	static void netstamp_clear(struct work_struct *);
5828:	static int process_backlog(struct napi_struct *, int);
2125:	static bool remove_xps_queue(struct xps_dev_maps *, int, u16);
8225:	static void rollback_registered(struct net_device *);
8137:	static void rollback_registered_many(struct list_head *);
4146:	static void rps_trigger_softirq(void *);
5392:	static void skb_gro_reset_offset(struct sk_buff *);
2863:	static void skb_warn_bad_offload(const struct sk_buff *);
253:	static void unlist_netdevice(struct net_device *);
3310:	static struct sk_buff *validate_xmit_skb(struct sk_buff *, struct net_device *, bool *);

File net/core/dev_addr_lists.c:
324:	void __hw_addr_init(struct netdev_hw_addr_list *);
196:	int __hw_addr_sync(struct netdev_hw_addr_list *, struct netdev_hw_addr_list *, int);
241:	int __hw_addr_sync_dev(struct netdev_hw_addr_list *, struct net_device *, int (*)(struct net_device *, const unsigned char *), int (*)(struct net_device *, const unsigned char *));
215:	void __hw_addr_unsync(struct netdev_hw_addr_list *, struct netdev_hw_addr_list *, int);
292:	void __hw_addr_unsync_dev(struct netdev_hw_addr_list *, struct net_device *, int (*)(struct net_device *, const unsigned char *));
397:	int dev_addr_add(struct net_device *, const unsigned char *, unsigned char);
422:	int dev_addr_del(struct net_device *, const unsigned char *, unsigned char);
343:	void dev_addr_flush(struct net_device *);
361:	int dev_addr_init(struct net_device *);
685:	int dev_mc_add(struct net_device *, const unsigned char *);
641:	int dev_mc_add_excl(struct net_device *, const unsigned char *);
698:	int dev_mc_add_global(struct net_device *, const unsigned char *);
726:	int dev_mc_del(struct net_device *, const unsigned char *);
740:	int dev_mc_del_global(struct net_device *, const unsigned char *);
833:	void dev_mc_flush(struct net_device *);
847:	void dev_mc_init(struct net_device *);
758:	int dev_mc_sync(struct net_device *, struct net_device *);
788:	int dev_mc_sync_multiple(struct net_device *, struct net_device *);
813:	void dev_mc_unsync(struct net_device *, struct net_device *);
488:	int dev_uc_add(struct net_device *, const unsigned char *);
457:	int dev_uc_add_excl(struct net_device *, const unsigned char *);
510:	int dev_uc_del(struct net_device *, const unsigned char *);
612:	void dev_uc_flush(struct net_device *);
626:	void dev_uc_init(struct net_device *);
537:	int dev_uc_sync(struct net_device *, struct net_device *);
567:	int dev_uc_sync_multiple(struct net_device *, struct net_device *);
592:	void dev_uc_unsync(struct net_device *, struct net_device *);
664:	static int __dev_mc_add(struct net_device *, const unsigned char *, bool);
704:	static int __dev_mc_del(struct net_device *, const unsigned char *, bool);
49:	static int __hw_addr_add_ex(struct netdev_hw_addr_list *, const unsigned char *, int, unsigned char, bool, bool, int);
23:	static int __hw_addr_create_ex(struct netdev_hw_addr_list *, const unsigned char *, int, unsigned char, bool, bool);
92:	static int __hw_addr_del_entry(struct netdev_hw_addr_list *, struct netdev_hw_addr *, bool, bool);
116:	static int __hw_addr_del_ex(struct netdev_hw_addr_list *, const unsigned char *, int, unsigned char, bool, bool);
313:	static void __hw_addr_flush(struct netdev_hw_addr_list *);
172:	static int __hw_addr_sync_multiple(struct netdev_hw_addr_list *, struct netdev_hw_addr_list *, int);
137:	static int __hw_addr_sync_one(struct netdev_hw_addr_list *, struct netdev_hw_addr *, int);
156:	static void __hw_addr_unsync_one(struct netdev_hw_addr_list *, struct netdev_hw_addr_list *, struct netdev_hw_addr *, int);

File net/core/dev_ioctl.c:
53:	int dev_ifconf(struct net *, struct ifconf *, int);
377:	int dev_ioctl(struct net *, unsigned int, struct ifreq *, bool *);
343:	void dev_load(struct net *, const char *);
38:	int register_gifconf(unsigned int, gifconf_func_t *);
224:	static int dev_ifsioc(struct net *, struct ifreq *, unsigned int);

File net/core/devlink.c:
3859:	struct devlink *devlink_alloc(const struct devlink_ops *, size_t);
1705:	int devlink_dpipe_action_put(struct sk_buff *, struct devlink_dpipe_action *);
2109:	void devlink_dpipe_entry_clear(struct devlink_dpipe_entry *);
2094:	int devlink_dpipe_entry_ctx_append(struct devlink_dpipe_dump_ctx *, struct devlink_dpipe_entry *);
2101:	int devlink_dpipe_entry_ctx_close(struct devlink_dpipe_dump_ctx *);
2061:	int devlink_dpipe_entry_ctx_prepare(struct devlink_dpipe_dump_ctx *);
4130:	int devlink_dpipe_headers_register(struct devlink *, struct devlink_dpipe_headers *);
4147:	void devlink_dpipe_headers_unregister(struct devlink *);
1658:	int devlink_dpipe_match_put(struct sk_buff *, struct devlink_dpipe_match *);
4169:	bool devlink_dpipe_table_counter_enabled(struct devlink *, const char *);
4195:	int devlink_dpipe_table_register(struct devlink *, const char *, struct devlink_dpipe_table_ops *, void *, bool);
4388:	int devlink_dpipe_table_resource_set(struct devlink *, const char *, u64, u64);
4230:	void devlink_dpipe_table_unregister(struct devlink *, const char *);
3914:	void devlink_free(struct devlink *);
4545:	int devlink_param_driverinit_value_get(struct devlink *, u32, union devlink_param_value *);
4583:	int devlink_param_driverinit_value_set(struct devlink *, u32, union devlink_param_value);
4620:	void devlink_param_value_changed(struct devlink *, u32);
4638:	void devlink_param_value_str_fill(union devlink_param_value *, const char *);
4472:	int devlink_params_register(struct devlink *, const struct devlink_param *, size_t);
4520:	void devlink_params_unregister(struct devlink *, const struct devlink_param *, size_t);
4028:	void devlink_port_attrs_set(struct devlink_port *, enum devlink_port_flavour, u32, bool, u32);
4044:	int devlink_port_get_phys_port_name(struct devlink_port *, char *, size_t);
3933:	int devlink_port_register(struct devlink *, struct devlink_port *, unsigned int);
4010:	void devlink_port_type_clear(struct devlink_port *);
3983:	void devlink_port_type_eth_set(struct devlink_port *, struct net_device *);
3997:	void devlink_port_type_ib_set(struct devlink_port *, struct ib_device *);
3957:	void devlink_port_unregister(struct devlink_port *);
4656:	struct devlink_region *devlink_region_create(struct devlink *, const char *, u32, u64);
4699:	void devlink_region_destroy(struct devlink_region *);
4727:	u32 devlink_region_shapshot_id_get(struct devlink *);
4753:	int devlink_region_snapshot_create(struct devlink_region *, u64, u8 *, u32, devlink_snapshot_data_dest_t *);
3884:	int devlink_register(struct devlink *, struct device *);
4419:	void devlink_resource_occ_get_register(struct devlink *, u64, devlink_resource_occ_get_t *, void *);
4445:	void devlink_resource_occ_get_unregister(struct devlink *, u64);
4262:	int devlink_resource_register(struct devlink *, const char *, u64, u64, u64, const struct devlink_resource_size_params *);
4359:	int devlink_resource_size_get(struct devlink *, u64, u64 *);
4327:	void devlink_resources_unregister(struct devlink *, struct devlink_resource *);
4077:	int devlink_sb_register(struct devlink *, unsigned int, u32, u16, u16, u16, u16);
4109:	void devlink_sb_unregister(struct devlink *, unsigned int);
3900:	void devlink_unregister(struct devlink *);
1792:	static int devlink_dpipe_send_and_alloc_skb(struct sk_buff **, struct genl_info *);
2049:	static struct devlink_dpipe_table *devlink_dpipe_table_find(struct list_head *, const char *);
1752:	static int devlink_dpipe_table_put(struct sk_buff *, struct devlink_dpipe_table *);
1902:	static int devlink_dpipe_value_put(struct sk_buff *, struct devlink_dpipe_value *);
105:	static struct devlink *devlink_get_from_attrs(struct net *, struct nlattr **);
4805:	static void devlink_module_exit(void);
4800:	static int devlink_module_init(void);
2161:	static int devlink_nl_cmd_dpipe_entries_get(struct sk_buff *, struct genl_info *);
2309:	static int devlink_nl_cmd_dpipe_headers_get(struct sk_buff *, struct genl_info *);
2343:	static int devlink_nl_cmd_dpipe_table_counters_set(struct sk_buff *, struct genl_info *);
1888:	static int devlink_nl_cmd_dpipe_table_get(struct sk_buff *, struct genl_info *);
1589:	static int devlink_nl_cmd_eswitch_get_doit(struct sk_buff *, struct genl_info *);
1615:	static int devlink_nl_cmd_eswitch_set_doit(struct sk_buff *, struct genl_info *);
604:	static int devlink_nl_cmd_get_doit(struct sk_buff *, struct genl_info *);
624:	static int devlink_nl_cmd_get_dumpit(struct sk_buff *, struct netlink_callback *);
3053:	static int devlink_nl_cmd_param_get_doit(struct sk_buff *, struct genl_info *);
2926:	static int devlink_nl_cmd_param_get_dumpit(struct sk_buff *, struct netlink_callback *);
3080:	static int devlink_nl_cmd_param_set_doit(struct sk_buff *, struct genl_info *);
654:	static int devlink_nl_cmd_port_get_doit(struct sk_buff *, struct genl_info *);
677:	static int devlink_nl_cmd_port_get_dumpit(struct sk_buff *, struct netlink_callback *);
738:	static int devlink_nl_cmd_port_set_doit(struct sk_buff *, struct genl_info *);
766:	static int devlink_nl_cmd_port_split_doit(struct sk_buff *, struct genl_info *);
791:	static int devlink_nl_cmd_port_unsplit_doit(struct sk_buff *, struct genl_info *);
3383:	static int devlink_nl_cmd_region_del(struct sk_buff *, struct genl_info *);
3312:	static int devlink_nl_cmd_region_get_doit(struct sk_buff *, struct genl_info *);
3344:	static int devlink_nl_cmd_region_get_dumpit(struct sk_buff *, struct netlink_callback *);
3490:	static int devlink_nl_cmd_region_read_dumpit(struct sk_buff *, struct netlink_callback *);
2643:	static int devlink_nl_cmd_reload(struct sk_buff *, struct genl_info *);
2609:	static int devlink_nl_cmd_resource_dump(struct sk_buff *, struct genl_info *);
2431:	static int devlink_nl_cmd_resource_set(struct sk_buff *, struct genl_info *);
842:	static int devlink_nl_cmd_sb_get_doit(struct sk_buff *, struct genl_info *);
865:	static int devlink_nl_cmd_sb_get_dumpit(struct sk_buff *, struct netlink_callback *);
1523:	static int devlink_nl_cmd_sb_occ_max_clear_doit(struct sk_buff *, struct genl_info *);
1511:	static int devlink_nl_cmd_sb_occ_snapshot_doit(struct sk_buff *, struct genl_info *);
944:	static int devlink_nl_cmd_sb_pool_get_doit(struct sk_buff *, struct genl_info *);
1002:	static int devlink_nl_cmd_sb_pool_get_dumpit(struct sk_buff *, struct netlink_callback *);
1049:	static int devlink_nl_cmd_sb_pool_set_doit(struct sk_buff *, struct genl_info *);
1135:	static int devlink_nl_cmd_sb_port_pool_get_doit(struct sk_buff *, struct genl_info *);
1200:	static int devlink_nl_cmd_sb_port_pool_get_dumpit(struct sk_buff *, struct netlink_callback *);
1247:	static int devlink_nl_cmd_sb_port_pool_set_doit(struct sk_buff *, struct genl_info *);
1334:	static int devlink_nl_cmd_sb_tc_pool_bind_get_doit(struct sk_buff *, struct genl_info *);
1426:	static int devlink_nl_cmd_sb_tc_pool_bind_get_dumpit(struct sk_buff *, struct netlink_callback *);
1477:	static int devlink_nl_cmd_sb_tc_pool_bind_set_doit(struct sk_buff *, struct genl_info *);
465:	static int devlink_nl_fill(struct sk_buff *, struct devlink *, enum devlink_command, u32, u32, int);
2825:	static int devlink_nl_param_fill(struct sk_buff *, struct devlink *, struct devlink_param_item *, enum devlink_command, u32, u32, int);
528:	static int devlink_nl_port_fill(struct sk_buff *, struct devlink *, struct devlink_port *, enum devlink_command, u32, u32, int);
435:	static void devlink_nl_post_doit(const struct genl_ops *, struct sk_buff *, struct genl_info *);
390:	static int devlink_nl_pre_doit(const struct genl_ops *, struct sk_buff *, struct genl_info *);
456:	static int devlink_nl_put_handle(struct sk_buff *, struct devlink *);
3222:	static int devlink_nl_region_fill(struct sk_buff *, struct devlink *, u32, u32, int, struct devlink_region *, enum devlink_command);
3260:	static void devlink_nl_region_notify(struct devlink_region *, struct devlink_snapshot *, enum devlink_command);
804:	static int devlink_nl_sb_fill(struct sk_buff *, struct devlink *, struct devlink_sb *, u32, u32, int, enum devlink_command);
904:	static int devlink_nl_sb_pool_fill(struct sk_buff *, struct devlink *, struct devlink_sb *, u16, u32, u32, int, enum devlink_command);
1076:	static int devlink_nl_sb_port_pool_fill(struct sk_buff *, struct devlink *, struct devlink_port *, struct devlink_sb *, u16, u32, u32, int, enum devlink_command);
1270:	static int devlink_nl_sb_tc_pool_bind_fill(struct sk_buff *, struct devlink *, struct devlink_port *, struct devlink_sb *, u16, enum devlink_sb_pool_type, u32, u32, int, enum devlink_command);
486:	static void devlink_notify(struct devlink *, enum devlink_command);
2710:	static struct devlink_param_item *devlink_param_find_by_name(struct list_head *, const char *);
2904:	static void devlink_param_notify(struct devlink *, struct devlink_param_item *, enum devlink_command);
3160:	static void devlink_param_unregister_one(struct devlink *, const struct devlink_param *);
578:	static void devlink_port_notify(struct devlink_port *, enum devlink_command);
349:	static struct devlink_region *devlink_region_get_by_name(struct devlink *, const char *);
372:	static void devlink_region_snapshot_del(struct devlink_snapshot *);
2362:	static struct devlink_resource *devlink_resource_find(struct devlink *, struct devlink_resource *, u64);
2489:	static int devlink_resource_put(struct devlink *, struct sk_buff *, struct devlink_resource *);
2621:	static int devlink_resources_validate(struct devlink *, struct devlink_resource *, struct genl_info *);

File net/core/drop_monitor.c:
319:	static int dropmon_net_event(struct notifier_block *, unsigned long, void *);
432:	static void exit_net_drop_monitor(void);
388:	static int init_net_drop_monitor(void);
300:	static int net_dm_cmd_config(struct sk_buff *, struct genl_info *);
306:	static int net_dm_cmd_trace(struct sk_buff *, struct genl_info *);
71:	static struct sk_buff *reset_per_cpu_data(struct per_cpu_dm_data *);
147:	static void sched_send_work(struct timer_list *);
128:	static void send_dm_alert(struct work_struct *);
154:	static void trace_drop_common(void *, struct sk_buff *);
204:	static void trace_kfree_skb_hit(void *, struct sk_buff *, void *);
209:	static void trace_napi_poll_hit(void *, struct napi_struct *, int, int);

File net/core/dst.c:
241:	void __dst_destroy_metrics_generic(struct dst_entry *, unsigned long);
95:	void *dst_alloc(struct dst_ops *, struct net_device *, int, int, unsigned short);
211:	u32 *dst_cow_metrics_generic(struct dst_entry *, unsigned long);
115:	struct dst_entry *dst_destroy(struct dst_entry *);
166:	void dst_dev_put(struct dst_entry *);
46:	int dst_discard_out(struct net *, struct sock *, struct sk_buff *);
63:	void dst_init(struct dst_entry *, struct dst_ops *, struct net_device *, int, int, unsigned short);
181:	void dst_release(struct dst_entry *);
196:	void dst_release_immediate(struct dst_entry *);
287:	struct metadata_dst *metadata_dst_alloc(u8, enum metadata_type, gfp_t);
313:	struct metadata_dst *metadata_dst_alloc_percpu(u8, enum metadata_type, gfp_t);
302:	void metadata_dst_free(struct metadata_dst *);
330:	void metadata_dst_free_percpu(struct metadata_dst *);
270:	static void __metadata_dst_init(struct metadata_dst *, enum metadata_type, u8);
150:	static void dst_destroy_rcu(struct callback_head *);
263:	static int dst_md_discard(struct sk_buff *);
256:	static int dst_md_discard_out(struct net *, struct sock *, struct sk_buff *);

File net/core/dst_cache.c:
156:	void dst_cache_destroy(struct dst_cache *);
67:	struct dst_entry *dst_cache_get(struct dst_cache *);
76:	struct rtable *dst_cache_get_ip4(struct dst_cache *, __be32 *);
124:	struct dst_entry *dst_cache_get_ip6(struct dst_cache *, struct in6_addr *);
144:	int dst_cache_init(struct dst_cache *, gfp_t);
94:	void dst_cache_set_ip4(struct dst_cache *, struct dst_entry *, __be32);
109:	void dst_cache_set_ip6(struct dst_cache *, struct dst_entry *, const struct in6_addr *);
42:	static struct dst_entry *dst_cache_per_cpu_get(struct dst_cache_pcpu *, struct dst_cache *);

File net/core/ethtool.c:
552:	int __ethtool_get_link_ksettings(struct net_device *, struct ethtool_link_ksettings *);
2632:	int dev_ethtool(struct net *, struct ifreq *);
402:	void ethtool_convert_legacy_u32_to_link_mode(unsigned long *, u32);
411:	bool ethtool_convert_link_mode_to_legacy_u32(u32 *, const unsigned long *);
387:	void ethtool_intersect_link_masks(struct ethtool_link_ksettings *, struct ethtool_link_ksettings *);
37:	u32 ethtool_op_get_link(struct net_device *);
43:	int ethtool_op_get_ts_info(struct net_device *, struct ethtool_ts_info *);
1077:	void netdev_rss_key_fill(void *, size_t);
337:	static u32 __ethtool_get_flags(struct net_device *);
2307:	static int __ethtool_get_module_eeprom(struct net_device *, struct ethtool_eeprom *, u8 *);
2270:	static int __ethtool_get_module_info(struct net_device *, struct ethtool_modinfo *);
216:	static int __ethtool_get_sset_count(struct net_device *, int);
355:	static int __ethtool_set_flags(struct net_device *, u32);
438:	static bool convert_legacy_settings_to_link_ksettings(struct ethtool_link_ksettings *, const struct ethtool_cmd *);
1058:	static int ethtool_copy_validate_indir(u32 *, void *, u32, struct ethtool_rxnfc *);
2125:	static int ethtool_flash_device(struct net_device *, char *);
1575:	static int ethtool_get_any_eeprom(struct net_device *, void *, int (*)(struct net_device *, struct ethtool_eeprom *, u8 *), u32);
1751:	static int ethtool_get_channels(struct net_device *, void *);
1686:	static int ethtool_get_coalesce(struct net_device *, void *);
847:	static int ethtool_get_drvinfo(struct net_device *, void *);
265:	static netdev_features_t ethtool_get_feature_mask(u32);
2417:	static int ethtool_get_per_queue_coalesce(struct net_device *, void *, struct ethtool_per_queue_op *);
1226:	static int ethtool_get_rxfh(struct net_device *, void *);
1116:	static int ethtool_get_rxfh_indir(struct net_device *, void *);
986:	static int ethtool_get_rxnfc(struct net_device *, u32, void *);
757:	static int ethtool_get_settings(struct net_device *, void *);
898:	static int ethtool_get_sset_info(struct net_device *, void *);
2081:	static int ethtool_get_value(struct net_device *, char *, u32, u32 (*)(struct net_device *));
1766:	static int ethtool_set_channels(struct net_device *, void *);
1701:	static int ethtool_set_coalesce(struct net_device *, void *);
2504:	static int ethtool_set_per_queue(struct net_device *, void *, u32);
2448:	static int ethtool_set_per_queue_coalesce(struct net_device *, void *, struct ethtool_per_queue_op *);
1305:	static int ethtool_set_rxfh(struct net_device *, void *);
1164:	static int ethtool_set_rxfh_indir(struct net_device *, void *);
954:	static int ethtool_set_rxnfc(struct net_device *, u32, void *);
811:	static int ethtool_set_settings(struct net_device *, void *);
589:	static int load_link_ksettings_from_user(struct ethtool_link_ksettings *, const void *);
616:	static int store_link_ksettings_for_user(void *, const struct ethtool_link_ksettings *);

File net/core/fib_notifier.c:
12:	int call_fib_notifier(struct notifier_block *, struct net *, enum fib_event_type, struct fib_notifier_info *);
24:	int call_fib_notifiers(struct net *, enum fib_event_type, struct fib_notifier_info *);
140:	struct fib_notifier_ops *fib_notifier_ops_register(const struct fib_notifier_ops *, struct net *);
161:	void fib_notifier_ops_unregister(struct fib_notifier_ops *);
91:	int register_fib_notifier(struct notifier_block *, void (*)(struct notifier_block *));
121:	int unregister_fib_notifier(struct notifier_block *);
184:	static int fib_notifier_init(void);
174:	static void fib_notifier_net_exit(struct net *);
168:	static int fib_notifier_net_init(struct net *);
35:	static unsigned int fib_seq_sum(void);

File net/core/fib_rules.c:
44:	int fib_default_rule_add(struct fib_rules_ops *, u32, u32, u32);
833:	int fib_nl_delrule(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
726:	int fib_nl_newrule(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
26:	bool fib_rule_matchall(const struct fib_rule *);
356:	int fib_rules_dump(struct net *, struct notifier_block *, int);
278:	int fib_rules_lookup(struct fib_rules_ops *, struct flowi *, int, struct fib_lookup_arg *);
153:	struct fib_rules_ops *fib_rules_register(const struct fib_rules_ops *, struct net *);
373:	unsigned int fib_rules_seq_read(struct net *, int);
187:	void fib_rules_unregister(struct fib_rules_ops *);
1130:	static void attach_rules(struct list_head *, struct net_device *);
1039:	static int dump_rules(struct sk_buff *, struct netlink_callback *, struct fib_rules_ops *);
489:	static int fib_nl2rule(struct nlmsghdr *, struct netlink_ext_ack *, struct fib_rules_ops *, struct nlattr **, struct fib_rule **, bool *, struct sk_buff *);
1066:	static int fib_nl_dumprule(struct sk_buff *, struct netlink_callback *);
958:	static int fib_nl_fill_rule(struct sk_buff *, struct fib_rule *, u32, u32, int, int, struct fib_rules_ops *, struct fib_rules_ops *);
1157:	static int fib_rules_event(struct notifier_block *, unsigned long, void *);
1209:	static int fib_rules_init(void);
1199:	static void fib_rules_net_exit(struct net *);
1192:	static int fib_rules_net_init(struct net *);
93:	static struct fib_rules_ops *lookup_rules_ops(struct net *, int);
1102:	static void notify_rule_change(int, struct fib_rule *, struct fib_rules_ops *, struct nlmsghdr *, u32);

File net/core/filter.c:
4136:	u64 bpf_bind(u64, u64, u64, u64, u64);
3247:	void bpf_clear_redirect_map(struct bpf_map *);
2066:	u64 bpf_clone_redirect(u64, u64, u64, u64, u64);
1924:	u64 bpf_csum_diff(u64, u64, u64, u64, u64);
1963:	u64 bpf_csum_update(u64, u64, u64, u64, u64);
2425:	u64 bpf_get_cgroup_classid(u64, u64, u64, u64, u64);
2449:	u64 bpf_get_hash_recalc(u64, u64, u64, u64, u64);
254:	u64 bpf_get_raw_cpu_id(u64, u64, u64, u64, u64);
2437:	u64 bpf_get_route_realm(u64, u64, u64, u64, u64);
3831:	u64 bpf_get_socket_cookie(u64, u64, u64, u64, u64);
3843:	u64 bpf_get_socket_cookie_sock_addr(u64, u64, u64, u64, u64);
3855:	u64 bpf_get_socket_cookie_sock_ops(u64, u64, u64, u64, u64);
3867:	u64 bpf_get_socket_uid(u64, u64, u64, u64, u64);
4039:	u64 bpf_getsockopt(u64, u64, u64, u64, u64);
4793:	bool bpf_helper_changes_pkt_data(void *);
1827:	u64 bpf_l3_csum_replace(u64, u64, u64, u64, u64);
1871:	u64 bpf_l4_csum_replace(u64, u64, u64, u64, u64);
4578:	u64 bpf_lwt_push_encap(u64, u64, u64, u64, u64);
2261:	u64 bpf_msg_apply_bytes(u64, u64, u64, u64, u64);
2275:	u64 bpf_msg_cork_bytes(u64, u64, u64, u64, u64);
2296:	u64 bpf_msg_pull_data(u64, u64, u64, u64, u64);
2206:	u64 bpf_msg_redirect_hash(u64, u64, u64, u64, u64);
2231:	u64 bpf_msg_redirect_map(u64, u64, u64, u64, u64);
1336:	int bpf_prog_create(struct bpf_prog **, struct sock_fprog_kern *);
1381:	int bpf_prog_create_from_user(struct bpf_prog **, struct sock_fprog *, bpf_aux_classic_check_t, bool);
1424:	void bpf_prog_destroy(struct bpf_prog *);
2109:	u64 bpf_redirect(u64, u64, u64, u64, u64);
7086:	struct sock *bpf_run_sk_reuseport(struct sock_reuseport *, struct sock *, struct bpf_prog *, struct sk_buff *, u32);
2482:	u64 bpf_set_hash(u64, u64, u64, u64, u64);
2466:	u64 bpf_set_hash_invalid(u64, u64, u64, u64, u64);
3885:	u64 bpf_setsockopt(u64, u64, u64, u64, u64);
2145:	u64 bpf_sk_redirect_hash(u64, u64, u64, u64, u64);
2172:	u64 bpf_sk_redirect_map(u64, u64, u64, u64, u64);
2869:	u64 bpf_skb_adjust_room(u64, u64, u64, u64, u64);
3772:	u64 bpf_skb_ancestor_cgroup_id(u64, u64, u64, u64, u64);
3753:	u64 bpf_skb_cgroup_id(u64, u64, u64, u64, u64);
3024:	u64 bpf_skb_change_head(u64, u64, u64, u64, u64);
2707:	u64 bpf_skb_change_proto(u64, u64, u64, u64, u64);
2958:	u64 bpf_skb_change_tail(u64, u64, u64, u64, u64);
2746:	u64 bpf_skb_change_type(u64, u64, u64, u64, u64);
3464:	u64 bpf_skb_event_output(u64, u64, u64, u64, u64);
4496:	u64 bpf_skb_fib_lookup(u64, u64, u64, u64, u64);
129:	u64 bpf_skb_get_nlattr(u64, u64, u64, u64, u64);
149:	u64 bpf_skb_get_nlattr_nest(u64, u64, u64, u64, u64);
124:	u64 bpf_skb_get_pay_offset(u64, u64, u64, u64, u64);
3494:	u64 bpf_skb_get_tunnel_key(u64, u64, u64, u64, u64);
3564:	u64 bpf_skb_get_tunnel_opt(u64, u64, u64, u64, u64);
4182:	u64 bpf_skb_get_xfrm_state(u64, u64, u64, u64, u64);
1699:	u64 bpf_skb_load_bytes(u64, u64, u64, u64, u64);
1729:	u64 bpf_skb_load_bytes_relative(u64, u64, u64, u64, u64);
200:	u64 bpf_skb_load_helper_16(u64, u64, u64, u64, u64);
220:	u64 bpf_skb_load_helper_16_no_cache(u64, u64, u64, u64, u64);
227:	u64 bpf_skb_load_helper_32(u64, u64, u64, u64, u64);
247:	u64 bpf_skb_load_helper_32_no_cache(u64, u64, u64, u64, u64);
173:	u64 bpf_skb_load_helper_8(u64, u64, u64, u64, u64);
193:	u64 bpf_skb_load_helper_8_no_cache(u64, u64, u64, u64, u64);
1774:	u64 bpf_skb_pull_data(u64, u64, u64, u64, u64);
3600:	u64 bpf_skb_set_tunnel_key(u64, u64, u64, u64, u64);
3673:	u64 bpf_skb_set_tunnel_opt(u64, u64, u64, u64, u64);
1662:	u64 bpf_skb_store_bytes(u64, u64, u64, u64, u64);
3723:	u64 bpf_skb_under_cgroup(u64, u64, u64, u64, u64);
2526:	u64 bpf_skb_vlan_pop(u64, u64, u64, u64, u64);
2500:	u64 bpf_skb_vlan_push(u64, u64, u64, u64, u64);
4110:	u64 bpf_sock_ops_cb_flags_set(u64, u64, u64, u64, u64);
5527:	void bpf_warn_invalid_xdp_action(u32);
3065:	u64 bpf_xdp_adjust_head(u64, u64, u64, u64, u64);
3117:	u64 bpf_xdp_adjust_meta(u64, u64, u64, u64, u64);
3093:	u64 bpf_xdp_adjust_tail(u64, u64, u64, u64, u64);
3806:	u64 bpf_xdp_event_output(u64, u64, u64, u64, u64);
4462:	u64 bpf_xdp_fib_lookup(u64, u64, u64, u64, u64);
3405:	u64 bpf_xdp_redirect(u64, u64, u64, u64, u64);
3427:	u64 bpf_xdp_redirect_map(u64, u64, u64, u64, u64);
2246:	struct sock *do_msg_redirect_map(struct sk_msg_buff *);
2189:	struct sock *do_sk_redirect_map(struct sk_buff *);
1548:	int sk_attach_bpf(u32, struct sock *);
1503:	int sk_attach_filter(struct sock_fprog *, struct sock *);
6997:	int sk_detach_filter(struct sock *);
1204:	bool sk_filter_charge(struct sock *, struct sk_filter *);
85:	int sk_filter_trim_cap(struct sock *, struct sk_buff *, unsigned int);
1180:	void sk_filter_uncharge(struct sock *, struct sk_filter *);
7017:	int sk_get_filter(struct sock *, struct sock_filter *, unsigned int);
1565:	int sk_reuseport_attach_bpf(u32, struct sock *);
1521:	int sk_reuseport_attach_filter(struct sock_fprog *, struct sock *);
7157:	u64 sk_reuseport_load_bytes(u64, u64, u64, u64, u64);
7174:	u64 sk_reuseport_load_bytes_relative(u64, u64, u64, u64, u64);
1610:	void sk_reuseport_prog_free(struct bpf_prog *);
7102:	u64 sk_select_reuseport(u64, u64, u64, u64, u64);
3042:	u64 sk_skb_change_head(u64, u64, u64, u64, u64);
2976:	u64 sk_skb_change_tail(u64, u64, u64, u64, u64);
1805:	u64 sk_skb_pull_data(u64, u64, u64, u64, u64);
2122:	int skb_do_redirect(struct sk_buff *);
3209:	void xdp_do_flush_map(void);
3372:	int xdp_do_generic_redirect(struct net_device *, struct sk_buff *, struct xdp_buff *, struct bpf_prog *);
3295:	int xdp_do_redirect(struct net_device *, struct xdp_buff *, struct bpf_prog *);
1141:	static void __bpf_prog_release(struct bpf_prog *);
2057:	static int __bpf_redirect(struct sk_buff *, struct net_device *, u32);
1457:	static struct bpf_prog *__get_filter(struct sock_fprog *, struct sock *);
1430:	static int __sk_attach_prog(struct bpf_prog *, struct sock *);
3233:	static void *__xdp_map_lookup_elem(struct bpf_map *, u32);
4825:	static const struct bpf_func_proto *bpf_base_func_proto(enum bpf_func_id);
5740:	static u32 bpf_convert_ctx_access(enum bpf_access_type, const struct bpf_insn *, struct bpf_insn *, struct bpf_prog *, u32 *);
534:	static int bpf_convert_filter(struct sock_filter *, int, struct bpf_prog *, int *, bool *);
4228:	static int bpf_fib_set_fwd_params(struct bpf_fib_lookup *, const struct neighbour *, const struct net_device *, const struct net_device *);
5409:	static int bpf_gen_ld_abs(const struct bpf_insn *, struct bpf_insn *);
3699:	static const struct bpf_func_proto *bpf_get_skb_set_tunnel_proto(enum bpf_func_id);
4243:	static int bpf_ipv4_fib_lookup(struct net *, struct bpf_fib_lookup *, u32, bool);
4347:	static int bpf_ipv6_fib_lookup(struct net *, struct bpf_fib_lookup *, u32, bool);
1287:	static struct bpf_prog *bpf_prepare_filter(struct bpf_prog *, bpf_aux_classic_check_t);
1108:	static int bpf_prog_store_orig_filter(struct bpf_prog *, const struct sock_fprog *);
3451:	static unsigned long bpf_skb_copy(void *, const void *, unsigned long, unsigned long);
2562:	static int bpf_skb_generic_pop(struct sk_buff *, u32, u32);
2545:	static int bpf_skb_generic_push(struct sk_buff *, u32, u32);
2902:	static int bpf_skb_grow_rcsum(struct sk_buff *, unsigned int);
5190:	static bool bpf_skb_is_valid_access(int, int, enum bpf_access_type, struct bpf_insn_access_aux *, const struct bpf_prog *);
3799:	static unsigned long bpf_xdp_copy(void *, const void *, unsigned long, unsigned long);
4913:	static const struct bpf_func_proto *cg_skb_func_proto(enum bpf_func_id, const struct bpf_prog *);
446:	static bool convert_bpf_ld_abs(struct sock_filter *, struct bpf_insn **);
5128:	static const struct bpf_func_proto *lwt_in_func_proto(enum bpf_func_id, const struct bpf_prog *);
5259:	static bool lwt_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
5101:	static const struct bpf_func_proto *lwt_out_func_proto(enum bpf_func_id, const struct bpf_prog *);
5174:	static const struct bpf_func_proto *lwt_seg6local_func_proto(enum bpf_func_id, const struct bpf_prog *);
5139:	static const struct bpf_func_proto *lwt_xmit_func_proto(enum bpf_func_id, const struct bpf_prog *);
4896:	static const struct bpf_func_proto *sk_filter_func_proto(enum bpf_func_id, const struct bpf_prog *);
5233:	static bool sk_filter_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
1174:	static void sk_filter_release(struct sk_filter *);
1161:	static void sk_filter_release_rcu(struct callback_head *);
6740:	static u32 sk_msg_convert_ctx_access(enum bpf_access_type, const struct bpf_insn *, struct bpf_insn *, struct bpf_prog *, u32 *);
5055:	static const struct bpf_func_proto *sk_msg_func_proto(enum bpf_func_id, const struct bpf_prog *);
5708:	static bool sk_msg_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
7269:	static u32 sk_reuseport_convert_ctx_access(enum bpf_access_type, const struct bpf_insn *, struct bpf_insn *, struct bpf_prog *, u32 *);
7194:	static const struct bpf_func_proto *sk_reuseport_func_proto(enum bpf_func_id, const struct bpf_prog *);
7210:	static bool sk_reuseport_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
6715:	static u32 sk_skb_convert_ctx_access(enum bpf_access_type, const struct bpf_insn *, struct bpf_insn *, struct bpf_prog *, u32 *);
5074:	static const struct bpf_func_proto *sk_skb_func_proto(enum bpf_func_id, const struct bpf_prog *);
5673:	static bool sk_skb_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
5667:	static int sk_skb_prologue(struct bpf_insn *, bool, const struct bpf_prog *);
6287:	static u32 sock_addr_convert_ctx_access(enum bpf_access_type, const struct bpf_insn *, struct bpf_insn *, struct bpf_prog *, u32 *);
4870:	static const struct bpf_func_proto *sock_addr_func_proto(enum bpf_func_id, const struct bpf_prog *);
5537:	static bool sock_addr_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
6039:	static u32 sock_filter_convert_ctx_access(enum bpf_access_type, const struct bpf_insn *, struct bpf_insn *, struct bpf_prog *, u32 *);
4854:	static const struct bpf_func_proto *sock_filter_func_proto(enum bpf_func_id, const struct bpf_prog *);
5353:	static bool sock_filter_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
6376:	static u32 sock_ops_convert_ctx_access(enum bpf_access_type, const struct bpf_insn *, struct bpf_insn *, struct bpf_prog *, u32 *);
5032:	static const struct bpf_func_proto *sock_ops_func_proto(enum bpf_func_id, const struct bpf_prog *);
5626:	static bool sock_ops_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
6143:	static u32 tc_cls_act_convert_ctx_access(enum bpf_access_type, const struct bpf_insn *, struct bpf_insn *, struct bpf_prog *, u32 *);
4924:	static const struct bpf_func_proto *tc_cls_act_func_proto(enum bpf_func_id, const struct bpf_prog *);
5450:	static bool tc_cls_act_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);
5444:	static int tc_cls_act_prologue(struct bpf_insn *, bool, const struct bpf_prog *);
6167:	static u32 xdp_convert_ctx_access(enum bpf_access_type, const struct bpf_insn *, struct bpf_insn *, struct bpf_prog *, u32 *);
5005:	static const struct bpf_func_proto *xdp_func_proto(enum bpf_func_id, const struct bpf_prog *);
5497:	static bool xdp_is_valid_access(int, int, enum bpf_access_type, const struct bpf_prog *, struct bpf_insn_access_aux *);

File net/core/flow_dissector.c:
1353:	__u32 __get_hash_from_flowi6(const struct flowi6 *, struct flow_keys *);
607:	bool __skb_flow_dissect(const struct sk_buff *, struct flow_dissector *, void *, void *, __be16, int, int, unsigned int);
98:	__be32 __skb_flow_get_ports(const struct sk_buff *, int, u8, void *, int);
1261:	void __skb_get_hash(struct sk_buff *);
1237:	u32 __skb_get_hash_symmetric(const struct sk_buff *);
1283:	u32 __skb_get_poff(const struct sk_buff *, void *, const struct flow_keys_basic *, int);
1129:	__be32 flow_get_u32_dst(const struct flow_keys *);
1113:	__be32 flow_get_u32_src(const struct flow_keys *);
1191:	u32 flow_hash_from_keys(struct flow_keys *);
1217:	void make_flow_keys_digest(struct flow_keys_digest *, const struct flow_keys *);
138:	void skb_flow_dissect_tunnel_info(const struct sk_buff *, struct flow_dissector *, void *);
35:	void skb_flow_dissector_init(struct flow_dissector *, const struct flow_dissector_key *, unsigned int);
1274:	__u32 skb_get_hash_perturb(const struct sk_buff *, const siphash_key_t *);
1343:	u32 skb_get_poff(const struct sk_buff *);
1451:	static int init_default_flow_dissectors(void);

File net/core/gen_estimator.c:
246:	bool gen_estimator_active(struct net_rate_estimator **);
252:	bool gen_estimator_read(struct net_rate_estimator **, struct gnet_stats_rate_est64 *);
203:	void gen_kill_estimator(struct net_rate_estimator **);
128:	int gen_new_estimator(struct gnet_stats_basic_packed *, struct gnet_stats_basic_cpu *, struct net_rate_estimator **, spinlock_t *, seqcount_t *, struct nlattr *);
229:	int gen_replace_estimator(struct gnet_stats_basic_packed *, struct gnet_stats_basic_cpu *, struct net_rate_estimator **, spinlock_t *, seqcount_t *, struct nlattr *);
66:	static void est_fetch_counters(struct net_rate_estimator *, struct gnet_stats_basic_packed *);
80:	static void est_timer(struct timer_list *);

File net/core/gen_stats.c:
145:	void __gnet_stats_copy_basic(const seqcount_t *, struct gnet_stats_basic_packed *, struct gnet_stats_basic_cpu *, struct gnet_stats_basic_packed *);
266:	void __gnet_stats_copy_queue(struct gnet_stats_queue *, const struct gnet_stats_queue *, const struct gnet_stats_queue *, __u32);
337:	int gnet_stats_copy_app(struct gnet_dump *, void *, int);
179:	int gnet_stats_copy_basic(const seqcount_t *, struct gnet_dump *, struct gnet_stats_basic_cpu *, struct gnet_stats_basic_packed *);
299:	int gnet_stats_copy_queue(struct gnet_dump *, struct gnet_stats_queue *, struct gnet_stats_queue *, __u32);
218:	int gnet_stats_copy_rate_est(struct gnet_dump *, struct net_rate_estimator **);
373:	int gnet_stats_finish_copy(struct gnet_dump *);
114:	int gnet_stats_start_copy(struct sk_buff *, int, spinlock_t *, struct gnet_dump *, int);
63:	int gnet_stats_start_copy_compat(struct sk_buff *, int, int, int, spinlock_t *, struct gnet_dump *, int);
251:	static void __gnet_stats_copy_queue_cpu(struct gnet_stats_queue *, const struct gnet_stats_queue *);

File net/core/gro_cells.c:
92:	void gro_cells_destroy(struct gro_cells *);
69:	int gro_cells_init(struct gro_cells *, struct net_device *);
12:	int gro_cells_receive(struct gro_cells *, struct sk_buff *);
50:	static int gro_cell_poll(struct napi_struct *, int);

File net/core/link_watch.c:
242:	void linkwatch_fire_event(struct net_device *);
211:	void linkwatch_forget_dev(struct net_device *);
79:	void linkwatch_init_dev(struct net_device *);
228:	void linkwatch_run_queue(void);
169:	static void __linkwatch_run_queue(int);
144:	static void linkwatch_do_dev(struct net_device *);
234:	static void linkwatch_event(struct work_struct *);
115:	static void linkwatch_schedule_work(int);
87:	static bool linkwatch_urgent_event(struct net_device *);
53:	static void rfc2863_policy(struct net_device *);

File net/core/lwt_bpf.c:
240:	static int bpf_build_state(struct nlattr *, unsigned int, const void *, struct lwtunnel_state **, struct netlink_ext_ack *);
188:	static void bpf_destroy_state(struct lwtunnel_state *);
371:	static int bpf_encap_cmp(struct lwtunnel_state *, struct lwtunnel_state *);
344:	static int bpf_encap_nlsize(struct lwtunnel_state *);
332:	static int bpf_fill_encap_info(struct sk_buff *, struct lwtunnel_state *);
313:	static int bpf_fill_lwt_prog(struct sk_buff *, int, struct bpf_lwt_prog *);
90:	static int bpf_input(struct sk_buff *);
393:	static int bpf_lwt_init(void);
356:	static int bpf_lwt_prog_cmp(struct bpf_lwt_prog *, struct bpf_lwt_prog *);
180:	static void bpf_lwt_prog_destroy(struct bpf_lwt_prog *);
113:	static int bpf_output(struct net *, struct sock *, struct sk_buff *);
203:	static int bpf_parse_prog(struct nlattr *, struct bpf_lwt_prog *, enum bpf_prog_type);
150:	static int bpf_xmit(struct sk_buff *);
42:	static int run_lwt_bpf(struct sk_buff *, struct bpf_lwt_prog *, bool, struct dst_entry *);

File net/core/lwtunnel.c:
212:	void lwtstate_free(struct lwtunnel_state *);
106:	int lwtunnel_build_state(u16, struct nlattr *, unsigned int, const void *, struct lwtunnel_state **, struct netlink_ext_ack *);
288:	int lwtunnel_cmp_encap(struct lwtunnel_state *, struct lwtunnel_state *);
75:	int lwtunnel_encap_add_ops(const struct lwtunnel_encap_ops *, unsigned int);
87:	int lwtunnel_encap_del_ops(const struct lwtunnel_encap_ops *, unsigned int);
226:	int lwtunnel_fill_encap(struct sk_buff *, struct lwtunnel_state *);
266:	int lwtunnel_get_encap_size(struct lwtunnel_state *);
385:	int lwtunnel_input(struct sk_buff *);
316:	int lwtunnel_output(struct net *, struct sock *, struct sk_buff *);
62:	struct lwtunnel_state *lwtunnel_state_alloc(int);
145:	int lwtunnel_valid_encap_type(u16, struct netlink_ext_ack *);
182:	int lwtunnel_valid_encap_type_attr(struct nlattr *, int, struct netlink_ext_ack *);
350:	int lwtunnel_xmit(struct sk_buff *);

File net/core/neighbour.c:
495:	struct neighbour *__neigh_create(struct neigh_table *, const void *, struct net_device *, bool);
1009:	int __neigh_event_send(struct neighbour *, struct sk_buff *);
2501:	void __neigh_for_each_release(struct neigh_table *, int (*)(struct neighbour *));
1307:	void __neigh_set_probe_once(struct neighbour *);
609:	struct pneigh_entry *__pneigh_lookup(struct neigh_table *, struct net *, const void *, struct net_device *);
2933:	void neigh_app_ns(struct neighbour *);
287:	void neigh_changeaddr(struct neigh_table *, struct net_device *);
1389:	int neigh_connected_output(struct neighbour *, struct sk_buff *);
735:	void neigh_destroy(struct neighbour *);
1412:	int neigh_direct_output(struct neighbour *, struct sk_buff *);
1321:	struct neighbour *neigh_event_ns(struct neigh_table *, u8 *, void *, struct net_device *);
2478:	void neigh_for_each(struct neigh_table *, void (*)(struct neighbour *, void *), void *);
295:	int neigh_ifdown(struct neigh_table *, struct net_device *);
444:	struct neighbour *neigh_lookup(struct neigh_table *, const void *, struct net_device *);
464:	struct neighbour *neigh_lookup_nodev(struct neigh_table *, struct net *, const void *);
1495:	struct neigh_parms *neigh_parms_alloc(struct net_device *, struct neigh_table *);
1537:	void neigh_parms_release(struct neigh_table *, struct neigh_parms *);
3023:	int neigh_proc_dointvec(struct ctl_table *, int, void *, size_t *, loff_t *);
3033:	int neigh_proc_dointvec_jiffies(struct ctl_table *, int, void *, size_t *, loff_t *);
3054:	int neigh_proc_dointvec_ms_jiffies(struct ctl_table *, int, void *, size_t *, loff_t *);
117:	unsigned long neigh_rand_reach_time(unsigned long);
146:	bool neigh_remove_one(struct neighbour *, struct neigh_table *);
1354:	int neigh_resolve_output(struct neighbour *, struct sk_buff *);
2778:	void *neigh_seq_next(struct seq_file *, void *, loff_t *);
2760:	void *neigh_seq_start(struct seq_file *, loff_t *, struct neigh_table *, unsigned int);
2805:	void neigh_seq_stop(struct seq_file *, void *);
3185:	int neigh_sysctl_register(struct net_device *, struct neigh_parms *, proc_handler *);
3274:	void neigh_sysctl_unregister(struct neigh_parms *);
1611:	int neigh_table_clear(int, struct neigh_table *);
1560:	void neigh_table_init(int, struct neigh_table *);
1129:	int neigh_update(struct neighbour *, const u8 *, u8, u32, u32);
2535:	int neigh_xmit(int, struct net_device *, const void *, struct sk_buff *);
666:	int pneigh_delete(struct neigh_table *, struct net *, const void *, struct net_device *);
1452:	void pneigh_enqueue(struct neigh_table *, struct neigh_parms *, struct sk_buff *);
620:	struct pneigh_entry *pneigh_lookup(struct neigh_table *, struct net *, const void *, struct net_device *, int);
2908:	static void __neigh_notify(struct neighbour *, int, int, u32);
593:	static struct pneigh_entry *__pneigh_lookup_1(struct pneigh_entry *, struct net *, const void *, unsigned int, struct net_device *);
1719:	static int neigh_add(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
207:	static void neigh_add_timer(struct neighbour *, unsigned long);
95:	static int neigh_blackhole(struct neighbour *, struct sk_buff *);
101:	static void neigh_cleanup_and_release(struct neighbour *);
217:	static int neigh_del_timer(struct neighbour *);
1657:	static int neigh_delete(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
2438:	static int neigh_dump_info(struct sk_buff *, struct netlink_callback *);
2225:	static int neigh_fill_info(struct sk_buff *, struct neighbour *, u32, u32, int, unsigned int);
237:	static void neigh_flush_dev(struct net_device *, struct neigh_table *);
2581:	static struct neighbour *neigh_get_first(struct seq_file *);
2620:	static struct neighbour *neigh_get_next(struct neighbour *, loff_t *, struct seq_file *);
357:	static struct neigh_hash_table *neigh_hash_alloc(unsigned int);
386:	static void neigh_hash_free_rcu(struct callback_head *);
3287:	static int neigh_init(void);
882:	static void neigh_invalidate(struct neighbour *);
792:	static void neigh_periodic_work(struct work_struct *);
907:	static void neigh_probe(struct neighbour *);
3075:	static int neigh_proc_base_reachable_time(struct ctl_table *, int, void *, size_t *, loff_t *);
3065:	static int neigh_proc_dointvec_unres_qlen(struct ctl_table *, int, void *, size_t *, loff_t *);
3044:	static int neigh_proc_dointvec_userhz_jiffies(struct ctl_table *, int, void *, size_t *, loff_t *);
3008:	static int neigh_proc_dointvec_zero_intmax(struct ctl_table *, int, void *, size_t *, loff_t *);
2991:	static void neigh_proc_update(struct ctl_table *, int);
1418:	static void neigh_proxy_process(struct timer_list *);
1529:	static void neigh_rcu_free_parms(struct callback_head *);
2836:	static void *neigh_stat_seq_next(struct seq_file *, void *, loff_t *);
2856:	static int neigh_stat_seq_show(struct seq_file *, void *);
2819:	static void *neigh_stat_seq_start(struct seq_file *, loff_t *);
2851:	static void neigh_stat_seq_stop(struct seq_file *, void *);
923:	static void neigh_timer_handler(struct timer_list *);
2172:	static int neightbl_dump_info(struct sk_buff *, struct netlink_callback *);
1863:	static int neightbl_fill_info(struct sk_buff *, struct neigh_table *, u32, u32, int, int);
1815:	static int neightbl_fill_parms(struct sk_buff *, struct neigh_parms *);
2011:	static int neightbl_set(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
2683:	static struct pneigh_entry *pneigh_get_first(struct seq_file *);
2704:	static struct pneigh_entry *pneigh_get_next(struct pneigh_entry *, loff_t *, struct seq_file *);
227:	static void pneigh_queue_purge(struct sk_buff_head *);

File net/core/net-procfs.c:
361:	int dev_proc_init(void);
351:	static void dev_mc_net_exit(struct net *);
343:	static int dev_mc_net_init(struct net *);
317:	static int dev_mc_seq_show(struct seq_file *, void *);
303:	static void dev_proc_net_exit(struct net *);
275:	static int dev_proc_net_init(struct net *);
66:	static void *dev_seq_next(struct seq_file *, void *, loff_t *);
78:	static void dev_seq_printf_stats(struct seq_file *, struct net_device *);
106:	static int dev_seq_show(struct seq_file *, void *);
53:	static void *dev_seq_start(struct seq_file *, loff_t *);
72:	static void dev_seq_stop(struct seq_file *, void *);
185:	static void *ptype_get_idx(loff_t);
214:	static void *ptype_seq_next(struct seq_file *, void *, loff_t *);
249:	static int ptype_seq_show(struct seq_file *, void *);
207:	static void *ptype_seq_start(struct seq_file *, loff_t *);
137:	static void *softnet_seq_next(struct seq_file *, void *, loff_t *);
147:	static int softnet_seq_show(struct seq_file *, void *);
132:	static void *softnet_seq_start(struct seq_file *, loff_t *);
143:	static void softnet_seq_stop(struct seq_file *, void *);

File net/core/net-sysfs.c:
959:	int net_rx_queue_update_kobjects(struct net_device *, int, int);
1821:	int netdev_class_create_file_ns(const struct class_attribute *, const void *);
1828:	void netdev_class_remove_file_ns(const struct class_attribute *, const void *);
1835:	int netdev_kobject_init(void);
1543:	int netdev_queue_update_kobjects(struct net_device *, int, int);
1776:	int netdev_register_kobject(struct net_device *);
1759:	void netdev_unregister_kobject(struct net_device *);
112:	static ssize_t addr_assign_type_show(struct device *, struct device_attribute *, char *);
113:	static ssize_t addr_len_show(struct device *, struct device_attribute *, char *);
147:	static ssize_t address_show(struct device *, struct device_attribute *, char *);
1147:	static ssize_t bql_set(const char *, const size_t, unsigned int *);
1176:	static ssize_t bql_set_hold_time(struct netdev_queue *, const char *, size_t);
1224:	static ssize_t bql_set_limit(struct netdev_queue *, const char *, size_t);
1225:	static ssize_t bql_set_limit_max(struct netdev_queue *, const char *, size_t);
1226:	static ssize_t bql_set_limit_min(struct netdev_queue *, const char *, size_t);
1168:	static ssize_t bql_show_hold_time(struct netdev_queue *, char *);
1196:	static ssize_t bql_show_inflight(struct netdev_queue *, char *);
1224:	static ssize_t bql_show_limit(struct netdev_queue *, char *);
1225:	static ssize_t bql_show_limit_max(struct netdev_queue *, char *);
1226:	static ssize_t bql_show_limit_min(struct netdev_queue *, char *);
161:	static ssize_t broadcast_show(struct device *, struct device_attribute *, char *);
292:	static ssize_t carrier_changes_show(struct device *, struct device_attribute *, char *);
314:	static ssize_t carrier_down_count_show(struct device *, struct device_attribute *, char *);
185:	static ssize_t carrier_show(struct device *, struct device_attribute *, char *);
179:	static ssize_t carrier_store(struct device *, struct device_attribute *, const char *, size_t);
304:	static ssize_t carrier_up_count_show(struct device *, struct device_attribute *, char *);
172:	static int change_carrier(struct net_device *, unsigned long);
338:	static int change_flags(struct net_device *, unsigned long);
361:	static int change_gro_flush_timeout(struct net_device *, unsigned long);
423:	static int change_group(struct net_device *, unsigned long);
326:	static int change_mtu(struct net_device *, unsigned long);
437:	static int change_proto_down(struct net_device *, unsigned long);
596:	static ssize_t collisions_show(struct device *, struct device_attribute *, char *);
110:	static ssize_t dev_id_show(struct device *, struct device_attribute *, char *);
111:	static ssize_t dev_port_show(struct device *, struct device_attribute *, char *);
251:	static ssize_t dormant_show(struct device *, struct device_attribute *, char *);
217:	static ssize_t duplex_show(struct device *, struct device_attribute *, char *);
348:	static ssize_t flags_show(struct device *, struct device_attribute *, char *);
343:	static ssize_t flags_store(struct device *, struct device_attribute *, const char *, size_t);
112:	static ssize_t format_addr_assign_type(const struct net_device *, char *);
113:	static ssize_t format_addr_len(const struct net_device *, char *);
110:	static ssize_t format_dev_id(const struct net_device *, char *);
111:	static ssize_t format_dev_port(const struct net_device *, char *);
348:	static ssize_t format_flags(const struct net_device *, char *);
376:	static ssize_t format_gro_flush_timeout(const struct net_device *, char *);
434:	static ssize_t format_group(const struct net_device *, char *);
114:	static ssize_t format_ifindex(const struct net_device *, char *);
116:	static ssize_t format_link_mode(const struct net_device *, char *);
336:	static ssize_t format_mtu(const struct net_device *, char *);
127:	static ssize_t format_name_assign_type(const struct net_device *, char *);
448:	static ssize_t format_proto_down(const struct net_device *, char *);
359:	static ssize_t format_tx_queue_len(const struct net_device *, char *);
115:	static ssize_t format_type(const struct net_device *, char *);
1051:	static unsigned int get_netdev_queue_index(struct netdev_queue *);
376:	static ssize_t gro_flush_timeout_show(struct device *, struct device_attribute *, char *);
367:	static ssize_t gro_flush_timeout_store(struct device *, struct device_attribute *, const char *, size_t);
434:	static ssize_t group_show(struct device *, struct device_attribute *, char *);
429:	static ssize_t group_store(struct device *, struct device_attribute *, const char *, size_t);
409:	static ssize_t ifalias_show(struct device *, struct device_attribute *, char *);
378:	static ssize_t ifalias_store(struct device *, struct device_attribute *, const char *, size_t);
114:	static ssize_t ifindex_show(struct device *, struct device_attribute *, char *);
118:	static ssize_t iflink_show(struct device *, struct device_attribute *, char *);
116:	static ssize_t link_mode_show(struct device *, struct device_attribute *, char *);
336:	static ssize_t mtu_show(struct device *, struct device_attribute *, char *);
331:	static ssize_t mtu_store(struct device *, struct device_attribute *, const char *, size_t);
595:	static ssize_t multicast_show(struct device *, struct device_attribute *, char *);
132:	static ssize_t name_assign_type_show(struct device *, struct device_attribute *, char *);
1624:	static bool net_current_may_mount(void);
1705:	static void net_get_ownership(struct device *, kuid_t *, kgid_t *);
1631:	static void *net_grab_current_ns(void);
1641:	static const void *net_initial_ns(void);
1698:	static const void *net_namespace(struct device *);
1646:	static const void *net_netlink_ns(struct sock *);
1008:	static ssize_t netdev_queue_attr_show(struct kobject *, struct attribute *, char *);
1021:	static ssize_t netdev_queue_attr_store(struct kobject *, struct attribute *, const char *, size_t);
1494:	static void netdev_queue_get_ownership(struct kobject *, kuid_t *, kgid_t *);
1482:	static const void *netdev_queue_namespace(struct kobject *);
1474:	static void netdev_queue_release(struct kobject *);
1685:	static void netdev_release(struct device *);
45:	static ssize_t netdev_show(const struct device *, char *, ssize_t (*)(const struct net_device *, char *), struct device_attribute *);
81:	static ssize_t netdev_store(struct device *, const char *, size_t, int (*)(struct net_device *, unsigned long), struct device_attribute *);
1661:	static int netdev_uevent(struct device *, struct kobj_uevent_env *);
556:	static ssize_t netstat_show(const struct device *, char *, unsigned long, struct device_attribute *);
273:	static ssize_t operstate_show(struct device *, struct device_attribute *, char *);
450:	static ssize_t phys_port_id_show(struct device *, struct device_attribute *, char *);
472:	static ssize_t phys_port_name_show(struct device *, struct device_attribute *, char *);
494:	static ssize_t phys_switch_id_show(char *, struct device_attribute *, struct device *);
448:	static ssize_t proto_down_show(struct device *, struct device_attribute *, char *);
442:	static ssize_t proto_down_store(struct device *, struct device_attribute *, const char *, size_t);
791:	static void rps_dev_flow_table_release(struct callback_head *);
589:	static ssize_t rx_bytes_show(struct device *, struct device_attribute *, char *);
608:	static ssize_t rx_compressed_show(struct device *, struct device_attribute *, char *);
599:	static ssize_t rx_crc_errors_show(struct device *, struct device_attribute *, char *);
593:	static ssize_t rx_dropped_show(struct device *, struct device_attribute *, char *);
591:	static ssize_t rx_errors_show(struct device *, struct device_attribute *, char *);
601:	static ssize_t rx_fifo_errors_show(struct device *, struct device_attribute *, char *);
600:	static ssize_t rx_frame_errors_show(struct device *, struct device_attribute *, char *);
597:	static ssize_t rx_length_errors_show(struct device *, struct device_attribute *, char *);
602:	static ssize_t rx_missed_errors_show(struct device *, struct device_attribute *, char *);
610:	static ssize_t rx_nohandler_show(struct device *, struct device_attribute *, char *);
598:	static ssize_t rx_over_errors_show(struct device *, struct device_attribute *, char *);
587:	static ssize_t rx_packets_show(struct device *, struct device_attribute *, char *);
666:	static ssize_t rx_queue_attr_show(struct kobject *, struct attribute *, char *);
678:	static ssize_t rx_queue_attr_store(struct kobject *, struct attribute *, const char *, size_t);
909:	static void rx_queue_get_ownership(struct kobject *, kuid_t *, kgid_t *);
897:	static const void *rx_queue_namespace(struct kobject *);
873:	static void rx_queue_release(struct kobject *);
776:	static ssize_t show_rps_dev_flow_table_cnt(struct netdev_rx_queue *, char *);
696:	static ssize_t show_rps_map(struct netdev_rx_queue *, char *);
197:	static ssize_t speed_show(struct device *, struct device_attribute *, char *);
798:	static ssize_t store_rps_dev_flow_table_cnt(struct netdev_rx_queue *, const char *, size_t);
718:	static ssize_t store_rps_map(struct netdev_rx_queue *, const char *, size_t);
1062:	static ssize_t traffic_class_show(struct netdev_queue *, char *);
603:	static ssize_t tx_aborted_errors_show(struct device *, struct device_attribute *, char *);
590:	static ssize_t tx_bytes_show(struct device *, struct device_attribute *, char *);
604:	static ssize_t tx_carrier_errors_show(struct device *, struct device_attribute *, char *);
609:	static ssize_t tx_compressed_show(struct device *, struct device_attribute *, char *);
594:	static ssize_t tx_dropped_show(struct device *, struct device_attribute *, char *);
592:	static ssize_t tx_errors_show(struct device *, struct device_attribute *, char *);
605:	static ssize_t tx_fifo_errors_show(struct device *, struct device_attribute *, char *);
606:	static ssize_t tx_heartbeat_errors_show(struct device *, struct device_attribute *, char *);
1093:	static ssize_t tx_maxrate_show(struct netdev_queue *, char *);
1099:	static ssize_t tx_maxrate_store(struct netdev_queue *, const char *, size_t);
588:	static ssize_t tx_packets_show(struct device *, struct device_attribute *, char *);
359:	static ssize_t tx_queue_len_show(struct device *, struct device_attribute *, char *);
350:	static ssize_t tx_queue_len_store(struct device *, struct device_attribute *, const char *, size_t);
1040:	static ssize_t tx_timeout_show(struct netdev_queue *, char *);
607:	static ssize_t tx_window_errors_show(struct device *, struct device_attribute *, char *);
115:	static ssize_t type_show(struct device *, struct device_attribute *, char *);
1244:	static ssize_t xps_cpus_show(struct netdev_queue *, char *);
1316:	static ssize_t xps_cpus_store(struct netdev_queue *, const char *, size_t);
1357:	static ssize_t xps_rxqs_show(struct netdev_queue *, char *);
1420:	static ssize_t xps_rxqs_store(struct netdev_queue *, const char *, size_t);

File net/core/net_namespace.c:
593:	void __put_net(struct net *);
411:	struct net *copy_net_ns(unsigned long, struct user_namespace *, struct net *);
601:	struct net *get_net_ns_by_fd(int);
279:	struct net *get_net_ns_by_id(struct net *, int);
629:	struct net *get_net_ns_by_pid(pid_t);
404:	void net_drop_ns(void *);
584:	void net_ns_barrier(void);
462:	void net_ns_get_ownership(const struct net *, kuid_t *, kgid_t *);
260:	int peernet2id(struct net *, struct net *);
233:	int peernet2id_alloc(struct net *, struct net *, gfp_t);
274:	bool peernet_has_id(struct net *, struct net *);
1097:	int register_pernet_device(struct pernet_operations *);
1051:	int register_pernet_subsys(struct pernet_operations *);
1118:	void unregister_pernet_device(struct pernet_operations *);
1070:	void unregister_pernet_subsys(struct pernet_operations *);
199:	static int __peernet2id_alloc(struct net *, struct net *, bool *);
510:	static void cleanup_net(struct work_struct *);
64:	static struct net_generic *net_alloc_generic(void);
352:	static int net_defaults_init(void);
342:	static int net_defaults_init_net(struct net *);
188:	static int net_eq_idr(int, void *, void *);
888:	static int net_ns_init(void);
659:	static void net_ns_net_exit(struct net *);
651:	static int net_ns_net_init(struct net *);
1129:	static struct ns_common *netns_get(struct task_struct *);
1153:	static int netns_install(struct nsproxy *, struct ns_common *);
1166:	static struct user_namespace *netns_owner(struct ns_common *);
1148:	static void netns_put(struct ns_common *);
147:	static void ops_exit_list(struct list_head *, const struct pernet_operations *, const struct pernet_operations *);
159:	static void ops_free_list(const struct pernet_operations *, struct list_head *);
113:	static int ops_init(const struct pernet_operations *, struct net *);
1001:	static int register_pernet_operations(struct list_head *, struct pernet_operations *);
847:	static int rtnl_net_dumpid(struct sk_buff *, struct netlink_callback *);
828:	static int rtnl_net_dumpid_one(int, void *, void *);
743:	static int rtnl_net_fill(struct sk_buff *, u32, u32, int, int, int, struct net *);
767:	static int rtnl_net_getid(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
676:	static int rtnl_net_newid(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
866:	static void rtnl_net_notifyid(struct net *, int, int, gfp_t);
298:	static int setup_net(struct net *, struct user_namespace *);
1024:	static void unregister_pernet_operations(struct pernet_operations *);

File net/core/netclassid_cgroup.c:
25:	struct cgroup_cls_state *task_cls_state(struct task_struct *);
107:	static void cgrp_attach(struct cgroup_taskset *);
33:	static struct cgroup_subsys_state *cgrp_css_alloc(struct cgroup_subsys_state *);
55:	static void cgrp_css_free(struct cgroup_subsys_state *);
44:	static int cgrp_css_online(struct cgroup_subsys_state *);
117:	static u64 read_classid(struct cgroup_subsys_state *, struct cftype *);
73:	static int update_classid_sock(const void *, struct file *, unsigned int);
91:	static void update_classid_task(struct task_struct *, u32);
122:	static int write_classid(struct cgroup_subsys_state *, struct cftype *, u64);

File net/core/netevent.c:
63:	int call_netevent_notifiers(unsigned long, void *);
32:	int register_netevent_notifier(struct notifier_block *);
48:	int unregister_netevent_notifier(struct notifier_block *);

File net/core/netpoll.c:
820:	void __netpoll_cleanup(struct netpoll *);
858:	void __netpoll_free_async(struct netpoll *);
604:	int __netpoll_setup(struct netpoll *, struct net_device *);
864:	void netpoll_cleanup(struct netpoll *);
522:	int netpoll_parse_options(struct netpoll *, char *);
173:	void netpoll_poll_dev(struct net_device *);
202:	void netpoll_poll_disable(struct net_device *);
215:	void netpoll_poll_enable(struct net_device *);
485:	void netpoll_print_options(struct netpoll *);
365:	netdev_tx_t netpoll_send_skb(struct netpoll *, struct sk_buff *);
382:	void netpoll_send_udp(struct netpoll *, const char *, int);
659:	int netpoll_setup(struct netpoll *);
848:	static void netpoll_async_cleanup(struct work_struct *);
796:	static int netpoll_init(void);
502:	static int netpoll_parse_ip_addr(const char *, union inet_addr *);
73:	static int netpoll_start_xmit(struct sk_buff *, struct net_device *, struct netdev_queue *);
99:	static void queue_process(struct work_struct *);
803:	static void rcu_cleanup_netpoll_info(struct callback_head *);
226:	static void refill_skbs(void);
242:	static void zap_completion_queue(void);

File net/core/netprio_cgroup.c:
138:	static struct cgroup_subsys_state *cgrp_css_alloc(struct cgroup_subsys_state *);
177:	static void cgrp_css_free(struct cgroup_subsys_state *);
149:	static int cgrp_css_online(struct cgroup_subsys_state *);
301:	static int init_cgroup_netprio(void);
238:	static void net_prio_attach(struct cgroup_taskset *);
275:	static int netprio_device_event(struct notifier_block *, unsigned long, void *);
116:	static int netprio_set_prio(struct net_device *, u32, struct cgroup_subsys_state *);
182:	static u64 read_prioidx(struct cgroup_subsys_state *, struct cftype *);
187:	static int read_priomap(struct seq_file *, void *);
225:	static int update_netprio(const void *, struct file *, unsigned int);
199:	static ssize_t write_priomap(struct kernfs_open_file *, char *, size_t, loff_t);

File net/core/page_pool.c:
227:	void __page_pool_put_page(struct page_pool *, struct page *, bool);
159:	struct page *page_pool_alloc_pages(struct page_pool *, gfp_t);
49:	struct page_pool *page_pool_create(const struct page_pool_params *);
296:	void page_pool_destroy(struct page_pool *);
111:	static struct page *__page_pool_alloc_pages_slow(struct page_pool *, gfp_t);
175:	static void __page_pool_clean_page(struct page_pool *, struct page *);
282:	static void __page_pool_destroy_rcu(struct callback_head *);
267:	static void __page_pool_empty_ring(struct page_pool *);
188:	static void __page_pool_return_page(struct page_pool *, struct page *);

File net/core/ptp_classifier.c:
118:	void ptp_classifier_init(void);
112:	unsigned int ptp_classify_raw(const struct sk_buff *);

File net/core/request_sock.c:
95:	void reqsk_fastopen_remove(struct sock *, struct request_sock *, bool);
38:	void reqsk_queue_alloc(struct request_sock_queue *);

File net/core/rtnetlink.c:
371:	int __rtnl_link_register(struct rtnl_link_ops *);
431:	void __rtnl_link_unregister(struct rtnl_link_ops *);
97:	void __rtnl_unlock(void);
3905:	int ndo_dflt_bridge_getlink(struct sk_buff *, u32, u32, struct net_device *, u16, u32, u32, int, u32, int (*)(struct sk_buff *, struct net_device *, u32));
3480:	int ndo_dflt_fdb_add(struct ndmsg *, struct nlattr **, struct net_device *, const unsigned char *, u16, u16);
3618:	int ndo_dflt_fdb_del(struct ndmsg *, struct nlattr **, struct net_device *, const unsigned char *, u16);
3760:	int ndo_dflt_fdb_dump(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int *);
3395:	void rtmsg_ifinfo(int, struct net_device *, unsigned int, gfp_t);
3343:	struct sk_buff *rtmsg_ifinfo_build_skb(int, struct net_device *, unsigned int, u32, gfp_t, int *, int);
3402:	void rtmsg_ifinfo_newnet(int, struct net_device *, unsigned int, gfp_t, int *, int);
3373:	void rtmsg_ifinfo_send(struct sk_buff *, struct net_device *, gfp_t);
4876:	void rtnetlink_init(void);
748:	int rtnetlink_put_metrics(struct sk_buff *, u32 *);
705:	int rtnetlink_send(struct sk_buff *, struct net *, u32, unsigned int, int);
557:	void rtnl_af_register(struct rtnl_af_ops *);
569:	void rtnl_af_unregister(struct rtnl_af_ops *);
2823:	int rtnl_configure_link(struct net_device *, const struct ifinfomsg *);
2845:	struct net_device *rtnl_create_link(struct net *, const char *, unsigned char, const struct rtnl_link_ops *, struct nlattr **);
2750:	int rtnl_delete_link(struct net_device *);
127:	int rtnl_is_locked(void);
88:	void rtnl_kfree_skbs(struct sk_buff *, struct sk_buff *);
1968:	struct net *rtnl_link_get_net(struct net *, struct nlattr **);
395:	int rtnl_link_register(struct rtnl_link_ops *);
477:	void rtnl_link_unregister(struct rtnl_link_ops *);
75:	void rtnl_lock(void);
81:	int rtnl_lock_killable(void);
1961:	int rtnl_nla_parse_ifla(struct nlattr **, const struct nlattr *, int, struct netlink_ext_ack *);
727:	void rtnl_notify(struct sk_buff *, struct net *, u32, u32, struct nlmsghdr *, gfp_t);
796:	int rtnl_put_cacheinfo(struct sk_buff *, struct dst_entry *, u32, long, u32);
266:	void rtnl_register(int, int, rtnl_doit_func, rtnl_dumpit_func, unsigned int);
240:	int rtnl_register_module(struct module *, int, int, rtnl_doit_func, rtnl_dumpit_func, unsigned int);
740:	void rtnl_set_sk_err(struct net *, u32, int);
121:	int rtnl_trylock(void);
719:	int rtnl_unicast(struct sk_buff *, struct net *, u32);
114:	void rtnl_unlock(void);
286:	int rtnl_unregister(int, int);
318:	void rtnl_unregister_all(int);
3897:	static int brport_nla_put_flag(struct sk_buff *, u32, unsigned int, unsigned int, u32);
2295:	static int do_set_master(struct net_device *, int, struct netlink_ext_ack *);
2334:	static int do_setlink(const struct sk_buff *, struct net_device *, struct ifinfomsg *, struct netlink_ext_ack *, struct nlattr **, char *, int);
1852:	static struct net *get_target_net(struct sock *, int);
977:	static size_t if_nlmsg_size(const struct net_device *, u32);
1510:	static int nla_put_ifalias(struct sk_buff *, struct net_device *);
3723:	static int nlmsg_populate_fdb(struct sk_buff *, struct netlink_callback *, struct net_device *, int *, struct netdev_hw_addr_list *);
3409:	static int nlmsg_populate_fdb_fill(struct sk_buff *, struct net_device *, u8 *, u16, u32, u32, int, int, u16, unsigned int);
3380:	static void rtmsg_ifinfo_event(int, struct net_device *, unsigned int, u32, gfp_t, int *, int);
4803:	static int rtnetlink_bind(struct net *, int);
4815:	static int rtnetlink_event(struct notifier_block *, unsigned long, void *);
4865:	static void rtnetlink_net_exit(struct net *);
4847:	static int rtnetlink_net_init(struct net *);
4798:	static void rtnetlink_rcv(struct sk_buff *);
4683:	static int rtnetlink_rcv_msg(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
4197:	static int rtnl_bridge_dellink(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
4004:	static int rtnl_bridge_getlink(struct sk_buff *, struct netlink_callback *);
4086:	static int rtnl_bridge_notify(struct net_device *);
4122:	static int rtnl_bridge_setlink(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
3263:	static u16 rtnl_calcit(struct nlmsghdr *, struct sk_buff *);
2766:	static int rtnl_dellink(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
3298:	static int rtnl_dump_all(struct sk_buff *, struct netlink_callback *);
1870:	static int rtnl_dump_ifinfo(struct sk_buff *, struct netlink_callback *);
2030:	static int rtnl_ensure_unique_netns(struct nlattr **, struct netlink_ext_ack *, bool);
3536:	static int rtnl_fdb_add(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
3642:	static int rtnl_fdb_del(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
3782:	static int rtnl_fdb_dump(struct sk_buff *, struct netlink_callback *);
3453:	static void rtnl_fdb_notify(struct net_device *, u8 *, u16, int, u16);
1583:	static int rtnl_fill_ifinfo(struct sk_buff *, struct net_device *, struct net *, int, u32, u32, u32, unsigned int, u32, u32, int *, int, int, gfp_t);
1345:	static int rtnl_fill_link_ifmap(struct sk_buff *, struct net_device *);
1164:	static int rtnl_fill_stats(struct sk_buff *, struct net_device *);
4364:	static int rtnl_fill_statsinfo(struct sk_buff *, struct net_device *, u32, u32, unsigned int, unsigned int, int *, int *, u32, int);
1315:	static int rtnl_fill_vf(struct sk_buff *, struct net_device *, u32);
1188:	static int rtnl_fill_vfinfo(struct sk_buff *, struct net_device *, int, struct nlattr *);
3193:	static int rtnl_getlink(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
2009:	static struct net *rtnl_link_get_net_capable(const struct sk_buff *, struct net *, struct nlattr **, int);
350:	static const struct rtnl_link_ops *rtnl_link_ops_get(const char *);
2934:	static int rtnl_newlink(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
1105:	static int rtnl_phys_port_id_fill(struct sk_buff *, struct net_device *);
1141:	static int rtnl_phys_switch_id_fill(struct sk_buff *, struct net_device *);
171:	static int rtnl_register_internal(struct module *, int, int, rtnl_doit_func, rtnl_dumpit_func, unsigned int);
2671:	static int rtnl_setlink(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
4621:	static int rtnl_stats_dump(struct sk_buff *, struct netlink_callback *);
4576:	static int rtnl_stats_get(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
1375:	static u32 rtnl_xdp_prog_drv(struct net_device *);
1380:	static u32 rtnl_xdp_prog_hw(struct net_device *);
1363:	static u32 rtnl_xdp_prog_skb(struct net_device *);
1386:	static int rtnl_xdp_report_one(struct sk_buff *, struct net_device *, u32 *, u8 *, u8, u32, u32 (*)(struct net_device *));
820:	static void set_operstate(struct net_device *, unsigned char);
2059:	static int validate_linkmsg(struct net_device *, struct nlattr **);

File net/core/scm.c:
119:	void __scm_destroy(struct scm_cookie *);
134:	int __scm_send(struct socket *, struct msghdr *, struct scm_cookie *);
216:	int put_cmsg(struct msghdr *, int, int, int, void *);
255:	void scm_detach_fds(struct msghdr *, struct scm_cookie *);
332:	struct scm_fp_list *scm_fp_dup(struct scm_fp_list *);

File net/core/secure_seq.c:
145:	u32 secure_ipv4_port_ephemeral(__be32, __be32, __be16);
97:	u32 secure_ipv6_port_ephemeral(const __be32 *, const __be32 *, __be16);
132:	u32 secure_tcp_seq(__be32, __be32, __be16, __be16);
117:	u32 secure_tcp_ts_off(const struct net *, __be32, __be32);
74:	u32 secure_tcpv6_seq(const __be32 *, const __be32 *, __be16, __be16);
54:	u32 secure_tcpv6_ts_off(const struct net *, const __be32 *, const __be32 *);

File net/core/skbuff.c:
1770:	int ___pskb_trim(struct sk_buff *, unsigned int);
177:	struct sk_buff *__alloc_skb(unsigned int, gfp_t, int, int);
275:	struct sk_buff *__build_skb(void *, unsigned int);
725:	void __consume_stateless_skb(struct sk_buff *);
652:	void __kfree_skb(struct sk_buff *);
766:	void __kfree_skb_defer(struct sk_buff *);
732:	void __kfree_skb_flush(void);
463:	struct sk_buff *__napi_alloc_skb(struct napi_struct *, unsigned int, gfp_t);
390:	struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);
1393:	struct sk_buff *__pskb_copy_fclone(struct sk_buff *, int, gfp_t, bool);
1901:	void *__pskb_pull_tail(struct sk_buff *, int);
2492:	__wsum __skb_checksum(const struct sk_buff *, int, int, __wsum, const struct skb_checksum_ops *);
1637:	int __skb_pad(struct sk_buff *, int, bool);
4413:	void __skb_tstamp_tx(struct sk_buff *, struct skb_shared_hwtstamps *, struct sock *, int);
5203:	int __skb_vlan_pop(struct sk_buff *, u16 *);
4844:	void __skb_warn_lro_forwarding(const struct sk_buff *);
5313:	struct sk_buff *alloc_skb_with_frags(unsigned long, unsigned long, int, int *, gfp_t);
310:	struct sk_buff *build_skb(void *, unsigned int);
708:	void consume_skb(struct sk_buff *);
666:	void kfree_skb(struct sk_buff *);
676:	void kfree_skb_list(struct sk_buff *);
4851:	void kfree_skb_partial(struct sk_buff *, bool);
908:	int mm_account_pinned_pages(struct mmpin *, size_t);
939:	void mm_unaccount_pinned_pages(struct mmpin *);
369:	void *napi_alloc_frag(unsigned int);
771:	void napi_consume_skb(struct sk_buff *, int);
354:	void *netdev_alloc_frag(unsigned int);
1457:	int pskb_expand_head(struct sk_buff *, int, int, gfp_t);
5597:	struct sk_buff *pskb_extract(struct sk_buff *, int, int, gfp_t);
1685:	void *pskb_put(struct sk_buff *, struct sk_buff *, int);
1857:	int pskb_trim_rcsum_slow(struct sk_buff *, unsigned int);
3371:	void skb_abort_seq_read(struct skb_seq_state *);
515:	void skb_add_rx_frag(struct sk_buff *, int, struct page *, int, int, unsigned int);
2978:	void skb_append(struct sk_buff *, struct sk_buff *, struct sk_buff_head *);
3431:	int skb_append_datato_frags(struct sock *, struct sk_buff *, int (*)(void *, char *, int, int, int, struct sk_buff *), void *, int);
3478:	int skb_append_pagefrags(struct sk_buff *, struct page *, int, size_t);
2570:	__wsum skb_checksum(const struct sk_buff *, int, int, __wsum);
4736:	int skb_checksum_setup(struct sk_buff *, bool);
4811:	struct sk_buff *skb_checksum_trimmed(struct sk_buff *, unsigned int, __sum16 (*)(struct sk_buff *));
1275:	struct sk_buff *skb_clone(struct sk_buff *, gfp_t);
4325:	struct sk_buff *skb_clone_sk(struct sk_buff *);
525:	void skb_coalesce_rx_frag(struct sk_buff *, int, int, unsigned int);
4390:	void skb_complete_tx_timestamp(struct sk_buff *, struct skb_shared_hwtstamps *);
4470:	void skb_complete_wifi_ack(struct sk_buff *, bool);
5626:	void skb_condense(struct sk_buff *);
1354:	struct sk_buff *skb_copy(const struct sk_buff *, gfp_t);
2584:	__wsum skb_copy_and_csum_bits(const struct sk_buff *, int, u8 *, int, __wsum);
2796:	void skb_copy_and_csum_dev(const struct sk_buff *, u8 *);
2039:	int skb_copy_bits(const struct sk_buff *, int, void *, int);
1583:	struct sk_buff *skb_copy_expand(const struct sk_buff *, int, int, gfp_t);
1320:	void skb_copy_header(struct sk_buff *, const struct sk_buff *);
1187:	int skb_copy_ubufs(struct sk_buff *, gfp_t);
4146:	int skb_cow_data(struct sk_buff *, int, struct sk_buff **);
2832:	struct sk_buff *skb_dequeue(struct sk_buff_head *);
2852:	struct sk_buff *skb_dequeue_tail(struct sk_buff_head *);
5188:	int skb_ensure_writable(struct sk_buff *, int);
3404:	unsigned int skb_find_text(struct sk_buff *, unsigned int, unsigned int, struct ts_config *);
3876:	int skb_gro_receive(struct sk_buff *, struct sk_buff *);
5116:	bool skb_gso_validate_mac_len(const struct sk_buff *, unsigned int);
5101:	bool skb_gso_validate_network_len(const struct sk_buff *, unsigned int);
1304:	void skb_headers_offset_update(struct sk_buff *, int);
3988:	void skb_init(void);
3000:	void skb_insert(struct sk_buff *, struct sk_buff *, struct sk_buff_head *);
901:	struct sk_buff *skb_morph(struct sk_buff *, struct sk_buff *);
4508:	bool skb_partial_csum_set(struct sk_buff *, u16, u16);
3261:	void skb_prepare_seq_read(struct sk_buff *, unsigned int, unsigned int, struct skb_seq_state *);
1745:	void *skb_pull(struct sk_buff *, unsigned int);
3507:	void *skb_pull_rcsum(struct sk_buff *, unsigned int);
1725:	void *skb_push(struct sk_buff *, unsigned int);
1704:	void *skb_put(struct sk_buff *, unsigned int);
2917:	void skb_queue_head(struct sk_buff_head *, struct sk_buff *);
2872:	void skb_queue_purge(struct sk_buff_head *);
2938:	void skb_queue_tail(struct sk_buff_head *, struct sk_buff *);
2890:	unsigned int skb_rbtree_purge(struct rb_root *);
1546:	struct sk_buff *skb_realloc_headroom(struct sk_buff *, unsigned int);
619:	void skb_release_head_state(struct sk_buff *);
4959:	void skb_scrub_packet(struct sk_buff *, bool);
3540:	struct sk_buff *skb_segment(struct sk_buff *, netdev_features_t);
2390:	int skb_send_sock(struct sock *, struct sk_buff *, int, int);
2301:	int skb_send_sock_locked(struct sock *, struct sk_buff *, int, int);
3297:	unsigned int skb_seq_read(unsigned int, const u8 **, struct skb_seq_state *);
3131:	int skb_shift(struct sk_buff *, struct sk_buff *, int);
2276:	int skb_splice_bits(struct sk_buff *, struct sock *, unsigned int, struct pipe_inode_info *, unsigned int, unsigned int);
3078:	void skb_split(struct sk_buff *, struct sk_buff *, const u32);
2414:	int skb_store_bits(struct sk_buff *, int, const void *, int);
4088:	int skb_to_sgvec(struct sk_buff *, struct scatterlist *, int, int);
4120:	int skb_to_sgvec_nomark(struct sk_buff *, struct scatterlist *, int, int);
1760:	void skb_trim(struct sk_buff *, unsigned int);
4869:	bool skb_try_coalesce(struct sk_buff *, struct sk_buff *, bool *, int *);
4462:	void skb_tstamp_tx(struct sk_buff *, struct skb_shared_hwtstamps *);
694:	void skb_tx_error(struct sk_buff *);
2958:	void skb_unlink(struct sk_buff *, struct sk_buff_head *);
5242:	int skb_vlan_pop(struct sk_buff *);
5275:	int skb_vlan_push(struct sk_buff *, __be16, u16);
5148:	struct sk_buff *skb_vlan_untag(struct sk_buff *);
2740:	int skb_zerocopy(struct sk_buff *, struct sk_buff *, int, int);
2702:	unsigned int skb_zerocopy_headlen(const struct sk_buff *);
1121:	int skb_zerocopy_iter_stream(struct sock *, struct sk_buff *, struct msghdr *, int, struct ubuf_info *);
4286:	struct sk_buff *sock_dequeue_err_skb(struct sock *);
4258:	int sock_queue_err_skb(struct sock *, struct sk_buff *);
948:	struct ubuf_info *sock_zerocopy_alloc(struct sock *, size_t);
1045:	void sock_zerocopy_callback(struct ubuf_info *, bool);
1094:	void sock_zerocopy_put(struct ubuf_info *);
1105:	void sock_zerocopy_put_abort(struct ubuf_info *);
985:	struct ubuf_info *sock_zerocopy_realloc(struct sock *, size_t, struct ubuf_info *);
805:	static void __copy_skb_header(struct sk_buff *, const struct sk_buff *);
127:	static void *__kmalloc_reserve(size_t, gfp_t, int, bool *, unsigned long);
859:	static struct sk_buff *__skb_clone(struct sk_buff *, struct sk_buff *);
4346:	static void __skb_complete_tx_timestamp(struct sk_buff *, struct sock *, int, bool);
2224:	static bool __skb_splice_bits(struct sk_buff *, struct pipe_inode_info *, unsigned int *, unsigned int *, struct splice_pipe_desc *, struct sock *);
4005:	static int __skb_to_sgvec(struct sk_buff *, struct scatterlist *, int, int, unsigned int);
2185:	static bool __splice_segment(struct page *, unsigned int, unsigned int, unsigned int *, unsigned int *, struct splice_pipe_desc *, bool, struct sock *, struct pipe_inode_info *);
589:	static void kfree_skbmem(struct sk_buff *);
5584:	static int pskb_carve(struct sk_buff *, const u32, gfp_t);
4549:	static __sum16 *skb_checksum_setup_ip(struct sk_buff *, int, unsigned int);
556:	static void skb_free_head(struct sk_buff *);
4993:	static unsigned int skb_gso_transport_seglen(const struct sk_buff *);
4376:	static bool skb_may_tx_timestamp(struct sock *, bool);
4526:	static int skb_maybe_pull_tail(struct sk_buff *, unsigned int, unsigned int);
97:	static void skb_panic(struct sk_buff *, unsigned int, void *, const char *);
3096:	static int skb_prepare_for_shift(struct sk_buff *);
636:	static void skb_release_all(struct sk_buff *);
566:	static void skb_release_data(struct sk_buff *);
3387:	static void skb_ts_finish(struct ts_config *, struct ts_state *);
3380:	static unsigned int skb_ts_get_next_block(unsigned int, const u8 **, struct ts_config *, struct ts_state *);
1152:	static int skb_zerocopy_clone(struct sk_buff *, struct sk_buff *, gfp_t);
4239:	static void sock_rmem_free(struct sk_buff *);
2121:	static void sock_spd_release(struct splice_pipe_desc *, unsigned int);
2676:	static __wsum warn_crc32c_csum_combine(__wsum, __wsum, int, int);
2668:	static __wsum warn_crc32c_csum_update(const void *, int, __wsum);

File net/core/sock.c:
2683:	void __receive_sock(struct file *);
2368:	void __release_sock(struct sock *);
322:	int __sk_backlog_rcv(struct sock *, struct sk_buff *);
493:	struct dst_entry *__sk_dst_check(struct sock *, u32);
2401:	void __sk_flush_backlog(struct sock *);
2442:	int __sk_mem_raise_allocated(struct sock *, int, int, int);
2566:	void __sk_mem_reclaim(struct sock *, int);
2548:	void __sk_mem_reduce_allocated(struct sock *, int);
2529:	int __sk_mem_schedule(struct sock *, int, int);
449:	int __sk_receive_skb(struct sock *, struct sk_buff *, const int, unsigned int, bool);
2151:	int __sock_cmsg_send(struct sock *, struct msghdr *, struct cmsghdr *, struct sockcm_cookie *);
402:	int __sock_queue_rcv_skb(struct sock *, struct sk_buff *);
1872:	void __sock_wfree(struct sk_buff *);
3078:	int compat_sock_common_getsockopt(struct socket *, int, int, char *, int *);
3119:	int compat_sock_common_setsockopt(struct socket *, int, int, char *, unsigned int);
2951:	bool lock_sock_fast(struct sock *);
2903:	void lock_sock_nested(struct sock *, int);
3333:	int proto_register(struct proto *, int);
3397:	void proto_unregister(struct proto *);
2919:	void release_sock(struct sock *);
1554:	struct sock *sk_alloc(struct net *, int, gfp_t, struct proto *, int);
2289:	int sk_alloc_sg(struct sock *, int, struct scatterlist *, int, int *, unsigned int *, int);
3562:	bool sk_busy_loop_end(void *, unsigned long);
178:	bool sk_capable(const struct sock *, int);
305:	void sk_clear_memalloc(struct sock *);
1693:	struct sock *sk_clone_lock(const struct sock *, const gfp_t);
3132:	void sk_common_release(struct sock *);
1627:	void sk_destruct(struct sock *);
509:	struct dst_entry *sk_dst_check(struct sock *, u32);
1653:	void sk_free(struct sock *);
1806:	void sk_free_unlock_clone(struct sock *);
3169:	void sk_get_meminfo(const struct sock *, u32 *);
631:	bool sk_mc_loop(struct sock *);
193:	bool sk_net_capable(const struct sock *, int);
161:	bool sk_ns_capable(const struct sock *, struct user_namespace *, int);
2278:	bool sk_page_frag_refill(struct sock *, struct page_frag *);
2805:	void sk_reset_timer(struct sock *, struct timer_list *, unsigned long);
2797:	void sk_send_sigurg(struct sock *);
297:	void sk_set_memalloc(struct sock *);
2574:	int sk_set_peek_off(struct sock *, int);
1816:	void sk_setup_caps(struct sock *, struct dst_entry *);
2813:	void sk_stop_timer(struct sock *, struct timer_list *);
2419:	int sk_wait_data(struct sock *, long *, const struct sk_buff *);
1908:	void skb_orphan_partial(struct sk_buff *);
2245:	bool skb_page_frag_refill(unsigned int, struct page_frag *, gfp_t);
1880:	void skb_set_owner_w(struct sk_buff *, struct sock *);
2100:	struct sk_buff *sock_alloc_send_pskb(struct sock *, unsigned long, unsigned long, int, int *, int);
2144:	struct sk_buff *sock_alloc_send_skb(struct sock *, unsigned long, int, int *);
2193:	int sock_cmsg_send(struct sock *, struct msghdr *, struct sockcm_cookie *);
3068:	int sock_common_getsockopt(struct socket *, int, int, char *, int *);
3091:	int sock_common_recvmsg(struct socket *, struct msghdr *, size_t, int);
3109:	int sock_common_setsockopt(struct socket *, int, int, char *, unsigned int);
1947:	void sock_efree(struct sk_buff *);
3008:	void sock_enable_timestamp(struct sock *, int);
2974:	int sock_get_timestamp(struct sock *, struct timeval *);
2991:	int sock_get_timestampns(struct sock *, struct timespec *);
1118:	int sock_getsockopt(struct socket *, int, int, char *, int *);
1964:	unsigned long sock_i_ino(struct sock *);
1953:	kuid_t sock_i_uid(struct sock *);
2820:	void sock_init_data(struct socket *, struct sock *);
3215:	int sock_inuse_get(struct net *);
2056:	void sock_kfree_s(struct sock *, void *, int);
2022:	void *sock_kmalloc(struct sock *, int, gfp_t);
2062:	void sock_kzfree_s(struct sock *, void *, int);
3417:	int sock_load_diag_module(int, int);
2607:	int sock_no_accept(struct socket *, struct socket *, int, bool);
2588:	int sock_no_bind(struct socket *, struct sockaddr *, int);
2594:	int sock_no_connect(struct socket *, struct sockaddr *, int, int);
2646:	int sock_no_getsockopt(struct socket *, int, int, char *, int *);
2621:	int sock_no_ioctl(struct socket *, unsigned int, unsigned long);
2627:	int sock_no_listen(struct socket *, int);
2672:	int sock_no_mmap(struct file *, struct socket *, struct vm_area_struct *);
2665:	int sock_no_recvmsg(struct socket *, struct msghdr *, size_t, int);
2653:	int sock_no_sendmsg(struct socket *, struct msghdr *, size_t);
2700:	ssize_t sock_no_sendpage(struct socket *, struct page *, int, size_t, int);
2714:	ssize_t sock_no_sendpage_locked(struct sock *, struct page *, int, size_t, int);
2639:	int sock_no_setsockopt(struct socket *, int, int, char *, unsigned int);
2601:	int sock_no_socketpair(struct socket *, struct socket *);
1999:	struct sk_buff *sock_omalloc(struct sock *, unsigned long, gfp_t);
3192:	void sock_prot_inuse_add(struct net *, struct proto *, int);
3198:	int sock_prot_inuse_get(struct net *, struct proto *);
437:	int sock_queue_rcv_skb(struct sock *, struct sk_buff *);
3025:	int sock_recv_errqueue(struct sock *, struct msghdr *, int, int, int);
1933:	void sock_rfree(struct sk_buff *);
655:	int sock_setsockopt(struct socket *, int, int, char *, unsigned int);
1846:	void sock_wfree(struct sk_buff *);
1978:	struct sk_buff *sock_wmalloc(struct sock *, unsigned long, int, gfp_t);
2350:	static void __lock_sock(struct sock *);
1592:	static void __sk_destruct(struct callback_head *);
1642:	static void __sk_free(struct sock *);
3255:	static int net_inuse_init(void);
3541:	static void proto_exit_net(struct net *);
3552:	static int proto_init(void);
3532:	static int proto_init_net(struct net *);
3447:	static void *proto_seq_next(struct seq_file *, void *, loff_t *);
3507:	static int proto_seq_show(struct seq_file *, void *);
3440:	static void *proto_seq_start(struct seq_file *, loff_t *);
3452:	static void proto_seq_stop(struct seq_file *, void *);
1491:	static struct sock *sk_prot_alloc(struct proto *, gfp_t, int);
2793:	static void sock_def_destruct(struct sock *);
2745:	static void sock_def_error_report(struct sock *);
2757:	static void sock_def_readable(struct sock *);
2734:	static void sock_def_wakeup(struct sock *);
2770:	static void sock_def_write_space(struct sock *);
391:	static void sock_disable_timestamp(struct sock *, unsigned long);
3244:	static void sock_inuse_exit_net(struct net *);
3227:	static int sock_inuse_init_net(struct net *);
1992:	static void sock_ofree(struct sk_buff *);
338:	static int sock_set_timeout(long *, char *, int);
368:	static void sock_warn_obsolete_bsdism(const char *);

File net/core/sock_diag.c:
151:	void sock_diag_broadcast_destroy(struct sock *);
35:	int sock_diag_check_cookie(struct sock *, const __u32 *);
295:	int sock_diag_destroy(struct sock *, int);
69:	int sock_diag_put_filterinfo(bool, struct sock *, struct sk_buff *, int);
59:	int sock_diag_put_meminfo(struct sock *, struct sk_buff *, int);
179:	int sock_diag_register(const struct sock_diag_handler *);
163:	void sock_diag_register_inet_compat(int (*)(struct sk_buff *, struct nlmsghdr *));
50:	void sock_diag_save_cookie(struct sock *, __u32 *);
197:	void sock_diag_unregister(const struct sock_diag_handler *);
171:	void sock_diag_unregister_inet_compat(int (*)(struct sk_buff *, struct nlmsghdr *));
23:	u64 sock_gen_cookie(struct sock *);
320:	static void diag_net_exit(struct net *);
307:	static int diag_net_init(struct net *);
278:	static int sock_diag_bind(struct net *, int);
119:	static void sock_diag_broadcast_destroy_work(struct work_struct *);
331:	static int sock_diag_init(void);
271:	static void sock_diag_rcv(struct sk_buff *);
242:	static int sock_diag_rcv_msg(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);

File net/core/sock_reuseport.c:
150:	int reuseport_add_sock(struct sock *, struct sock *, bool);
55:	int reuseport_alloc(struct sock *, bool);
317:	int reuseport_attach_prog(struct sock *, struct bpf_prog *);
192:	void reuseport_detach_sock(struct sock *);
22:	int reuseport_get_id(struct sock_reuseport *);
263:	struct sock *reuseport_select_sock(struct sock *, u32, struct sk_buff *, int);
133:	static void reuseport_free_rcu(struct callback_head *);

File net/core/stream.c:
183:	int sk_stream_error(struct sock *, int, int);
193:	void sk_stream_kill_queues(struct sock *);
96:	void sk_stream_wait_close(struct sock *, long);
56:	int sk_stream_wait_connect(struct sock *, long *);
118:	int sk_stream_wait_memory(struct sock *, long *);
30:	void sk_stream_write_space(struct sock *);

File net/core/sysctl_net_core.c:
110:	static int flow_limit_cpu_sysctl(struct ctl_table *, int, void *, size_t *, loff_t *);
189:	static int flow_limit_table_len_sysctl(struct ctl_table *, int, void *, size_t *, loff_t *);
231:	static int proc_do_dev_weight(struct ctl_table *, int, void *, size_t *, loff_t *);
246:	static int proc_do_rss_key(struct ctl_table *, int, void *, size_t *, loff_t *);
259:	static int proc_dointvec_minmax_bpf_enable(struct ctl_table *, int, void *, size_t *, loff_t *);
286:	static int proc_dointvec_minmax_bpf_restricted(struct ctl_table *, int, void *, size_t *, loff_t *);
298:	static int proc_dolongvec_minmax_bpf_restricted(struct ctl_table *, int, void *, size_t *, loff_t *);
40:	static int rps_sock_flow_sysctl(struct ctl_table *, int, void *, size_t *, loff_t *);
212:	static int set_default_qdisc(struct ctl_table *, int, void *, size_t *, loff_t *);
610:	static int sysctl_core_init(void);
595:	static void sysctl_core_net_exit(struct net *);
564:	static int sysctl_core_net_init(struct net *);

File net/core/timestamping.c:
35:	void skb_clone_tx_timestamp(struct sk_buff *);
58:	bool skb_defer_rx_timestamp(struct sk_buff *);

File net/core/tso.c:
47:	void tso_build_data(struct sk_buff *, struct tso_t *, int);
16:	void tso_build_hdr(struct sk_buff *, char *, struct tso_t *, int, bool);
9:	int tso_count_descs(struct sk_buff *);
65:	void tso_start(struct sk_buff *, struct tso_t *);

File net/core/utils.c:
122:	int in4_pton(const char *, int, u8 *, int, const char **);
188:	int in6_pton(const char *, int, u8 *, int, const char **);
54:	__be32 in_aton(const char *);
406:	bool inet_addr_is_any(struct sockaddr *);
462:	void inet_proto_csum_replace16(__sum16 *, struct sk_buff *, const __be32 *, const __be32 *, bool);
429:	void inet_proto_csum_replace4(__sum16 *, struct sk_buff *, __be32, __be32, bool);
479:	void inet_proto_csum_replace_by_diff(__sum16 *, struct sk_buff *, __wsum, bool);
373:	int inet_pton_with_scope(struct net *, __kernel_sa_family_t, const char *, const char *, struct __kernel_sockaddr_storage *);
42:	int net_ratelimit(void);
305:	static int inet4_pton(const char *, u16, struct __kernel_sockaddr_storage *);
324:	static int inet6_pton(struct net *, const char *, u16, struct __kernel_sockaddr_storage *);

File net/core/xdp.c:
380:	bool xdp_attachment_flags_ok(struct xdp_attachment_info *, struct netdev_bpf *);
371:	int xdp_attachment_query(struct xdp_attachment_info *, struct netdev_bpf *);
392:	void xdp_attachment_setup(struct xdp_attachment_info *, struct netdev_bpf *);
365:	void xdp_return_buff(struct xdp_buff *);
353:	void xdp_return_frame(struct xdp_frame *);
359:	void xdp_return_frame_rx_napi(struct xdp_frame *);
173:	bool xdp_rxq_info_is_reg(struct xdp_rxq_info *);
139:	int xdp_rxq_info_reg(struct xdp_rxq_info *, struct net_device *, u32);
241:	int xdp_rxq_info_reg_mem_model(struct xdp_rxq_info *, enum xdp_mem_type, void *);
114:	void xdp_rxq_info_unreg(struct xdp_rxq_info *);
167:	void xdp_rxq_info_unused(struct xdp_rxq_info *);
76:	static void __xdp_mem_allocator_rcu_free(struct callback_head *);
313:	static void __xdp_return(void *, struct xdp_mem_info *, bool, unsigned long);
55:	static int xdp_mem_id_cmp(struct rhashtable_compare_arg *, const void *);
43:	static u32 xdp_mem_id_hashfn(const void *, u32, u32);

File net/dcb/dcbevent.c:
38:	int call_dcbevent_notifiers(unsigned long, void *);
26:	int register_dcbevent_notifier(struct notifier_block *);
32:	int unregister_dcbevent_notifier(struct notifier_block *);

File net/dcb/dcbnl.c:
1818:	u8 dcb_getapp(struct net_device *, struct dcb_app *);
1935:	int dcb_ieee_delapp(struct net_device *, struct dcb_app *);
2027:	u8 dcb_ieee_getapp_default_prio_mask(const struct net_device *);
1997:	void dcb_ieee_getapp_dscp_prio_mask_map(const struct net_device *, struct dcb_ieee_app_dscp_map *);
1881:	u8 dcb_ieee_getapp_mask(struct net_device *, struct dcb_app *);
1967:	void dcb_ieee_getapp_prio_dscp_mask_map(const struct net_device *, struct dcb_ieee_app_prio_map *);
1904:	int dcb_ieee_setapp(struct net_device *, struct dcb_app *);
1840:	int dcb_setapp(struct net_device *, struct dcb_app *);
1406:	int dcbnl_cee_notify(struct net_device *, int, int, u32, u32);
1399:	int dcbnl_ieee_notify(struct net_device *, int, int, u32, u32);
556:	static int __dcbnl_pg_getcfg(struct net_device *, struct nlattr **, struct sk_buff *, int, struct nlmsghdr *);
767:	static int __dcbnl_pg_setcfg(struct net_device *, struct nlattr **, struct sk_buff *, int, u32, struct nlmsghdr *);
1796:	static int dcb_app_add(const struct dcb_app *, int);
1780:	static struct dcb_app_type *dcb_app_lookup(const struct dcb_app *, int, int);
1723:	static int dcb_doit(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
869:	static int dcbnl_bcn_getcfg(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
930:	static int dcbnl_bcn_setcfg(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
970:	static int dcbnl_build_peer_app(struct net_device *, struct sk_buff *, int, int, int);
1224:	static int dcbnl_cee_fill(struct sk_buff *, struct net_device *);
1673:	static int dcbnl_cee_get(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
1171:	static int dcbnl_cee_pg_fill(struct sk_buff *, struct net_device *, int);
438:	static int dcbnl_getapp(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
287:	static int dcbnl_getcap(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
1564:	static int dcbnl_getdcbx(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
1591:	static int dcbnl_getfeatcfg(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
331:	static int dcbnl_getnumtcs(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
273:	static int dcbnl_getperm_hwaddr(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
229:	static int dcbnl_getpfccfg(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
410:	static int dcbnl_getpfcstate(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
218:	static int dcbnl_getstate(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
1519:	static int dcbnl_ieee_del(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
1028:	static int dcbnl_ieee_fill(struct sk_buff *, struct net_device *);
1508:	static int dcbnl_ieee_get(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
1419:	static int dcbnl_ieee_set(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
2047:	static int dcbnl_init(void);
193:	static struct sk_buff *dcbnl_newmsg(int, u8, u32, u32, u32, struct nlmsghdr **);
1365:	static int dcbnl_notify(struct net_device *, int, int, u32, u32, int);
696:	static int dcbnl_pgrx_getcfg(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
863:	static int dcbnl_pgrx_setcfg(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
690:	static int dcbnl_pgtx_getcfg(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
857:	static int dcbnl_pgtx_setcfg(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
749:	static int dcbnl_setall(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
507:	static int dcbnl_setapp(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
1574:	static int dcbnl_setdcbx(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
1636:	static int dcbnl_setfeatcfg(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
377:	static int dcbnl_setnumtcs(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
719:	static int dcbnl_setpfccfg(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
420:	static int dcbnl_setpfcstate(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);
702:	static int dcbnl_setstate(struct net_device *, struct nlmsghdr *, u32, struct nlattr **, struct sk_buff *);

File net/ethernet/eth.c:
393:	struct net_device *alloc_etherdev_mqs(int, unsigned int, unsigned int);
528:	unsigned char *arch_get_platform_mac_address(void);
406:	struct net_device *devm_alloc_etherdev_mqs(struct device *, int, unsigned int, unsigned int);
329:	int eth_change_mtu(struct net_device *, int);
291:	void eth_commit_mac_addr_change(struct net_device *, void *);
127:	u32 eth_get_headlen(void *, unsigned int);
489:	int eth_gro_complete(struct sk_buff *, int);
435:	struct sk_buff *eth_gro_receive(struct list_head *, struct sk_buff *);
82:	int eth_header(struct sk_buff *, struct net_device *, unsigned short, const void *, const void *, unsigned int);
228:	int eth_header_cache(const struct neighbour *, struct hh_cache *, __be16);
260:	void eth_header_cache_update(struct hh_cache *, const struct net_device *, const unsigned char *);
212:	int eth_header_parse(const struct sk_buff *, unsigned char *);
309:	int eth_mac_addr(struct net_device *, void *);
533:	int eth_platform_get_mac_address(struct device *, u8 *);
274:	int eth_prepare_mac_addr_change(struct net_device *, void *);
156:	__be16 eth_type_trans(struct sk_buff *, struct net_device *);
337:	int eth_validate_addr(struct net_device *);
359:	void ether_setup(struct net_device *);
429:	ssize_t sysfs_format_mac(char *, const unsigned char *, int);
401:	static void devm_free_netdev(struct device *, void *);
519:	static int eth_offload_init(void);

File net/ipv4/af_inet.c:
457:	int __inet_bind(struct sock *, struct sockaddr *, int, bool, bool);
603:	int __inet_stream_connect(struct socket *, struct sockaddr *, int, int, int);
729:	int inet_accept(struct socket *, struct socket *, int, bool);
434:	int inet_bind(struct socket *, struct sockaddr *, int);
1600:	int inet_ctl_sock_create(struct sock **, unsigned short, unsigned short, unsigned char, struct net *);
1528:	__be32 inet_current_timestamp(void);
552:	int inet_dgram_connect(struct socket *, struct sockaddr *, int, int);
760:	int inet_getname(struct socket *, struct sockaddr *, int);
1559:	int inet_gro_complete(struct sk_buff *, int);
1388:	struct sk_buff *inet_gro_receive(struct list_head *, struct sk_buff *);
1291:	struct sk_buff *inet_gso_segment(struct sk_buff *, netdev_features_t);
904:	int inet_ioctl(struct socket *, unsigned int, unsigned long);
195:	int inet_listen(struct socket *, int);
1548:	int inet_recv_error(struct sock *, struct msghdr *, int, int *);
820:	int inet_recvmsg(struct socket *, struct msghdr *, size_t, int);
1120:	void inet_register_protosw(struct inet_protosw *);
406:	int inet_release(struct socket *);
787:	int inet_sendmsg(struct socket *, struct msghdr *, size_t);
802:	ssize_t inet_sendpage(struct socket *, struct page *, int, size_t, int);
838:	int inet_shutdown(struct socket *, int);
1230:	int inet_sk_rebuild_header(struct sock *);
1278:	void inet_sk_set_state(struct sock *, int);
1285:	void inet_sk_state_store(struct sock *, int);
134:	void inet_sock_destruct(struct sock *);
713:	int inet_stream_connect(struct socket *, struct sockaddr *, int, int);
1167:	void inet_unregister_protosw(struct inet_protosw *);
1626:	unsigned long snmp_fold_field(void *, int);
1620:	u64 snmp_get_cpu_field(void *, int, int);
175:	static int inet_autobind(struct sock *);
968:	static int inet_compat_ioctl(struct socket *, unsigned int, unsigned long);
247:	static int inet_create(struct net *, struct socket *, int, int);
1824:	static void inet_exit_net(struct net *);
1890:	static int inet_init(void);
1784:	static int inet_init_net(struct net *);
1593:	static int ipip_gro_complete(struct sk_buff *, int);
1509:	static struct sk_buff *ipip_gro_receive(struct list_head *, struct sk_buff *);
1763:	static void ipv4_mib_exit_net(struct net *);
1710:	static int ipv4_mib_init_net(struct net *);
1866:	static int ipv4_offload_init(void);

File net/ipv4/arp.c:
525:	struct sk_buff *arp_create(int, int, __be32, struct net_device *, __be32, const unsigned char *, const unsigned char *, const unsigned char *);
1274:	void arp_ifdown(struct net_device *);
1291:	void arp_init(void);
1177:	int arp_ioctl(struct net *, unsigned int, void *);
188:	int arp_mc_map(__be32, u8 *, struct net_device *, int);
324:	void arp_send(int, int, __be32, struct net_device *, __be32, const unsigned char *, const unsigned char *, const unsigned char *);
640:	void arp_xmit(struct sk_buff *);
224:	static int arp_constructor(struct neighbour *);
295:	static void arp_error_report(struct neighbour *, struct sk_buff *);
212:	static u32 arp_hash(const void *, const struct net_device *, __u32 *);
397:	static int arp_ignore(struct in_device *, __be32, __be32);
219:	static bool arp_key_eq(const struct neighbour *, const void *);
1431:	static void arp_net_exit(struct net *);
1423:	static int arp_net_init(struct net *);
1243:	static int arp_netdev_event(struct notifier_block *, unsigned long, void *);
679:	static int arp_process(struct net *, struct sock *, struct sk_buff *);
940:	static int arp_rcv(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *);
1152:	static int arp_req_delete(struct net *, struct arpreq *, struct net_device *);
1022:	static int arp_req_set(struct net *, struct arpreq *, struct net_device *);
302:	static void arp_send_dst(int, int, __be32, struct net_device *, __be32, const unsigned char *, const unsigned char *, const unsigned char *, struct dst_entry *);
1387:	static int arp_seq_show(struct seq_file *, void *);
1404:	static void *arp_seq_start(struct seq_file *, loff_t *);
334:	static void arp_solicit(struct neighbour *, struct sk_buff *);
632:	static int arp_xmit_finish(struct net *, struct sock *, struct sk_buff *);
930:	static void parp_redo(struct sk_buff *);

File net/ipv4/cipso_ipv4.c:
311:	int cipso_v4_cache_add(const unsigned char *, const struct netlbl_lsm_secattr *);
208:	void cipso_v4_cache_invalidate(void);
396:	int cipso_v4_doi_add(struct cipso_v4_doi *, struct netlbl_audit *);
478:	void cipso_v4_doi_free(struct cipso_v4_doi *);
566:	struct cipso_v4_doi *cipso_v4_doi_getdef(u32);
590:	void cipso_v4_doi_putdef(struct cipso_v4_doi *);
524:	int cipso_v4_doi_remove(u32, struct netlbl_audit *);
615:	int cipso_v4_doi_walk(u32 *, int (*)(struct cipso_v4_doi *, void *), void *);
1731:	void cipso_v4_error(struct sk_buff *, int, u32);
2096:	int cipso_v4_getattr(const unsigned char *, struct netlbl_lsm_secattr *);
1513:	unsigned char *cipso_v4_optptr(const struct sk_buff *);
2081:	void cipso_v4_req_delattr(struct request_sock *);
1927:	int cipso_v4_req_setattr(struct request_sock *, const struct cipso_v4_doi *, const struct netlbl_lsm_secattr *);
2252:	int cipso_v4_skbuff_delattr(struct sk_buff *);
2174:	int cipso_v4_skbuff_setattr(struct sk_buff *, const struct cipso_v4_doi *, const struct netlbl_lsm_secattr *);
2058:	void cipso_v4_sock_delattr(struct sock *);
2148:	int cipso_v4_sock_getattr(struct sock *, struct netlbl_lsm_secattr *);
1842:	int cipso_v4_sock_setattr(struct sock *, const struct cipso_v4_doi *, const struct netlbl_lsm_secattr *);
1561:	int cipso_v4_validate(const struct sk_buff *, unsigned char **);
146:	static void cipso_v4_cache_entry_free(struct cipso_v4_map_cache_entry *);
1992:	static int cipso_v4_delopt(struct ip_options_rcu **);
505:	static void cipso_v4_doi_free_rcu(struct callback_head *);
1773:	static int cipso_v4_genopt(unsigned char *, const struct cipso_v4_doi *, const struct netlbl_lsm_secattr *, u32);
2294:	static int cipso_v4_init(void);
683:	static int cipso_v4_map_lvl_hton(u32, u32 *, const struct cipso_v4_doi *, const struct cipso_v4_doi *);
715:	static int cipso_v4_map_lvl_ntoh(u32, u32 *, const struct cipso_v4_doi *, const struct cipso_v4_doi *);

File net/ipv4/datagram.c:
24:	int __ip4_datagram_connect(struct sock *, struct sockaddr *, int);
89:	int ip4_datagram_connect(struct sock *, struct sockaddr *, int);
104:	void ip4_datagram_release_cb(struct sock *);

File net/ipv4/devinet.c:
144:	struct net_device *__ip_dev_find(struct net *, __be32, bool);
2517:	void devinet_init(void);
975:	int devinet_ioctl(struct net *, unsigned int, struct ifreq *);
227:	void in_dev_finish_destroy(struct in_device *);
324:	int inet_addr_onlink(struct in_device *, __be32, __be32);
1368:	__be32 inet_confirm_addr(struct net *, struct in_device *, __be32, __be32, int);
579:	struct in_ifaddr *inet_ifa_byprefix(struct in_device *, __be32, __be32);
175:	struct in_ifaddr *inet_lookup_ifaddr_rcu(struct net *, __be32);
1909:	void inet_netconf_notify_devconf(struct net *, int, int, int, struct ipv4_devconf *);
1260:	__be32 inet_select_addr(const struct net_device *, __be32, int);
563:	struct in_device *inetdev_by_index(struct net *, int);
1396:	int register_inetaddr_notifier(struct notifier_block *);
1408:	int register_inetaddr_validator_notifier(struct notifier_block *);
1402:	int unregister_inetaddr_notifier(struct notifier_block *);
1414:	int unregister_inetaddr_validator_notifier(struct notifier_block *);
2325:	static int __devinet_sysctl_register(struct net *, char *, int, struct ipv4_devconf *);
2360:	static void __devinet_sysctl_unregister(struct net *, int, struct ipv4_devconf *);
339:	static void __inet_del_ifa(struct in_device *, struct in_ifaddr **, int, struct nlmsghdr *, u32);
453:	static int __inet_insert_ifa(struct in_ifaddr *, struct nlmsghdr *, u32, struct netlink_ext_ack *);
668:	static void check_lifetime(struct work_struct *);
1323:	static __be32 confirm_addr_indev(__be32, __be32, int, struct in_device *);
2138:	static int devinet_conf_proc(struct ctl_table *, int, void *, size_t *, loff_t *);
2487:	static void devinet_exit_net(struct net *);
2414:	static int devinet_init_net(struct net *);
2191:	static int devinet_sysctl_forward(struct ctl_table *, int, void *, size_t *, loff_t *);
2374:	static int devinet_sysctl_register(struct in_device *);
2391:	static void devinet_sysctl_unregister(struct in_device *);
291:	static void in_dev_rcu_put(struct callback_head *);
954:	static int inet_abc_len(__be32);
1657:	static int inet_dump_ifaddr(struct sk_buff *, struct netlink_callback *);
1595:	static int inet_fill_ifaddr(struct sk_buff *, struct in_ifaddr *, u32, u32, int, unsigned int);
1752:	static int inet_fill_link_af(struct sk_buff *, const struct net_device *, u32);
1741:	static size_t inet_get_link_af_size(const struct net_device *, u32);
1210:	static int inet_gifconf(struct net_device *, char *, int, int);
130:	static void inet_hash_remove(struct in_ifaddr *);
2004:	static int inet_netconf_dump_devconf(struct sk_buff *, struct netlink_callback *);
1849:	static int inet_netconf_fill_devconf(struct sk_buff *, int, struct ipv4_devconf *, u32, u32, int, unsigned int, int);
1942:	static int inet_netconf_get_devconf(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
214:	static void inet_rcu_free_ifa(struct callback_head *);
617:	static int inet_rtm_deladdr(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
895:	static int inet_rtm_newaddr(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
1804:	static int inet_set_link_af(struct net_device *, const struct nlattr *);
1776:	static int inet_validate_link_af(const struct net_device *, const struct nlattr *);
1467:	static int inetdev_event(struct notifier_block *, unsigned long, void *);
245:	static struct in_device *inetdev_init(struct net_device *);
591:	static int ip_mc_autojoin_config(struct net *, bool, const struct in_ifaddr *);
2235:	static int ipv4_doint_and_flush(struct ctl_table *, int, void *, size_t *, loff_t *);
1714:	static void rtmsg_ifa(int, struct in_ifaddr *, struct nlmsghdr *, u32);
766:	static void set_ifa_lifetime(struct in_ifaddr *, __u32, __u32);

File net/ipv4/fib_frontend.c:
897:	void fib_add_ifaddr(struct in_ifaddr *);
280:	__be32 fib_compute_spec_dst(struct sk_buff *);
970:	void fib_del_ifaddr(struct in_ifaddr *, struct in_ifaddr *);
119:	struct fib_table *fib_get_table(struct net *, u32);
942:	void fib_modify_prefix_metric(struct in_ifaddr *, u32);
83:	struct fib_table *fib_new_table(struct net *, u32);
163:	int fib_unmerge(struct net *);
414:	int fib_validate_source(struct sk_buff *, __be32, __be32, u8, int, struct net_device *, struct in_device *, u32 *);
252:	unsigned int inet_addr_type(struct net *, __be32);
270:	unsigned int inet_addr_type_dev_table(struct net *, const struct net_device *, __be32);
246:	unsigned int inet_addr_type_table(struct net *, __be32, u32);
258:	unsigned int inet_dev_addr_type(struct net *, const struct net_device *, __be32);
1417:	void ip_fib_init(void);
597:	int ip_rt_ioctl(struct net *, unsigned int, struct rtentry *);
326:	static int __fib_validate_source(struct sk_buff *, __be32, __be32, u8, int, struct net_device *, int, struct in_device *, u32 *);
217:	static unsigned int __inet_dev_addr_type(const struct net_device *, __be32, u32, struct net *);
1208:	static void fib_disable_ip(struct net_device *, unsigned long, bool);
195:	static void fib_flush(struct net *);
1218:	static int fib_inetaddr_event(struct notifier_block *, unsigned long, void *);
857:	static void fib_magic(int, int, __be32, int, u32, struct in_ifaddr *, struct in_ifaddr *);
1405:	static void fib_net_exit(struct net *);
1379:	static int fib_net_init(struct net *);
1249:	static int fib_netdev_event(struct notifier_block *, unsigned long, void *);
801:	static int inet_dump_fib(struct sk_buff *, struct netlink_callback *);
752:	static int inet_rtm_delroute(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
776:	static int inet_rtm_newroute(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
1345:	static void ip_fib_net_exit(struct net *);
1160:	static void nl_fib_input(struct sk_buff *);
1125:	static void nl_fib_lookup(struct fib_result_nl *, struct net *);
659:	static int rtm_to_fib_config(struct net *, struct sk_buff *, struct nlmsghdr *, struct fib_config *, struct netlink_ext_ack *);

File net/ipv4/fib_notifier.c:
12:	int call_fib4_notifier(struct notifier_block *, struct net *, enum fib_event_type, struct fib_notifier_info *);
20:	int call_fib4_notifiers(struct net *, enum fib_event_type, struct fib_notifier_info *);
71:	void fib4_notifier_exit(struct net *);
57:	int fib4_notifier_init(struct net *);
37:	static int fib4_dump(struct net *, struct notifier_block *);
30:	static unsigned int fib4_seq_read(struct net *);

File net/ipv4/fib_rules.c:
81:	int __fib_lookup(struct net *, struct flowi4 *, struct fib_result *, unsigned int);
59:	bool fib4_rule_default(const struct fib_rule *);
71:	int fib4_rules_dump(struct net *, struct notifier_block *);
422:	void fib4_rules_exit(struct net *);
399:	int fib4_rules_init(struct net *);
76:	unsigned int fib4_rules_seq_read(struct net *);
108:	static int fib4_rule_action(struct fib_rule *, struct flowi *, int, struct fib_lookup_arg *);
300:	static int fib4_rule_compare(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **);
214:	static int fib4_rule_configure(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *);
277:	static int fib4_rule_delete(struct fib_rule *);
328:	static int fib4_rule_fill(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *);
360:	static void fib4_rule_flush_cache(struct fib_rules_ops *);
171:	static int fib4_rule_match(struct fib_rule *, struct flowi *, int);
353:	static size_t fib4_rule_nlmsg_payload(struct fib_rule *);
143:	static bool fib4_rule_suppress(struct fib_rule *, struct fib_lookup_arg *);

File net/ipv4/fib_semantics.c:
1028:	struct fib_info *fib_create_info(struct fib_config *, struct netlink_ext_ack *);
1291:	int fib_dump_info(struct sk_buff *, u32, u32, int, u32, u8, __be32, int, u8, struct fib_info *, unsigned int);
987:	__be32 fib_info_update_nh_saddr(struct net *, struct fib_nh *);
696:	bool fib_metrics_match(struct fib_config *, struct fib_info *);
632:	int fib_nh_match(struct fib_config *, struct fib_info *, struct netlink_ext_ack *);
245:	void fib_release_info(struct fib_info *);
1755:	void fib_select_multipath(struct fib_result *, int);
1780:	void fib_select_path(struct net *, struct fib_result *, struct flowi4 *, const struct sk_buff *);
1419:	int fib_sync_down_addr(struct net_device *, __be32);
1529:	int fib_sync_down_dev(struct net_device *, unsigned long, bool);
1511:	void fib_sync_mtu(struct net_device *, u32);
1674:	int fib_sync_up(struct net_device *, unsigned int);
228:	void free_fib_info(struct fib_info *);
341:	int ip_fib_check_default(__be32, struct net_device *);
407:	void rtmsg_fib(int, __be32, struct fib_alias *, int, u32, const struct nl_info *, unsigned int);
780:	static int fib_check_nh(struct fib_config *, struct fib_nh *, struct netlink_ext_ack *);
436:	static int fib_detect_death(struct fib_info *, int, struct fib_info **, int *, int);
914:	static struct hlist_head *fib_info_hash_alloc(int);
924:	static void fib_info_hash_free(struct hlist_head *, int);
294:	static unsigned int fib_info_hashfn(const struct fib_info *);
559:	static void fib_rebalance(struct fib_info *);
208:	static void free_fib_info_rcu(struct callback_head *);

File net/ipv4/fib_trie.c:
2009:	void fib_free_table(struct fib_table *);
1984:	void fib_notify(struct net *, struct notifier_block *);
2744:	void fib_proc_exit(struct net *);
2720:	int fib_proc_init(struct net *);
1545:	int fib_table_delete(struct net *, struct fib_table *, struct fib_config *, struct netlink_ext_ack *);
2055:	int fib_table_dump(struct fib_table *, struct sk_buff *, struct netlink_callback *);
1859:	int fib_table_flush(struct net *, struct fib_table *, bool);
1790:	void fib_table_flush_external(struct fib_table *);
1124:	int fib_table_insert(struct net *, struct fib_table *, struct fib_config *, struct netlink_ext_ack *);
1316:	int fib_table_lookup(struct fib_table *, const struct flowi4 *, struct fib_result *, int);
2093:	void fib_trie_init(void);
2104:	struct fib_table *fib_trie_table(u32, struct fib_table *);
1731:	struct fib_table *fib_trie_unmerge(struct fib_table *);
304:	static void __alias_free_mem(struct callback_head *);
320:	static void __node_free_rcu(struct callback_head *);
1997:	static void __trie_free_rcu(struct callback_head *);
986:	static struct fib_alias *fib_find_alias(struct hlist_head *, u8, u8, u32, u32);
1071:	static int fib_insert_alias(struct trie *, struct key_vector *, struct key_vector *, struct fib_alias *, struct fib_alias *, t_key);
2608:	static void *fib_route_seq_next(struct seq_file *, void *, loff_t *);
2656:	static int fib_route_seq_show(struct seq_file *, void *);
2582:	static void *fib_route_seq_start(struct seq_file *, loff_t *);
2319:	static void fib_table_print(struct seq_file *, struct fib_table *);
2148:	static struct key_vector *fib_trie_get_next(struct fib_trie_iter *);
2401:	static void *fib_trie_seq_next(struct seq_file *, void *, loff_t *);
2491:	static int fib_trie_seq_show(struct seq_file *, void *);
2394:	static void *fib_trie_seq_start(struct seq_file *, loff_t *);
2441:	static void fib_trie_seq_stop(struct seq_file *, void *);
2330:	static int fib_triestat_seq_show(struct seq_file *, void *);
1616:	static struct key_vector *leaf_walk_rcu(struct key_vector **, t_key);
918:	static void node_pull_suffix(struct key_vector *, unsigned char);
423:	static void put_child(struct key_vector *, unsigned long, struct key_vector *);
513:	static struct key_vector *replace(struct trie *, struct key_vector *, struct key_vector *);
853:	static struct key_vector *resize(struct trie *, struct key_vector *);
495:	static void tnode_free(struct key_vector *);
382:	static struct key_vector *tnode_new(t_key, int, int);
452:	static void update_children(struct key_vector *);
714:	static unsigned char update_suffix(struct key_vector *);

File net/ipv4/gre_offload.c:
240:	static int gre_gro_complete(struct sk_buff *, int);
120:	static struct sk_buff *gre_gro_receive(struct list_head *, struct sk_buff *);
18:	static struct sk_buff *gre_gso_segment(struct sk_buff *, netdev_features_t);
278:	static int gre_offload_init(void);

File net/ipv4/icmp.c:
598:	void __icmp_send(struct sk_buff *, int, int, __be32, const struct ip_options *);
1159:	void icmp_err(struct sk_buff *, u32);
253:	bool icmp_global_allow(void);
1334:	int icmp_init(void);
788:	void icmp_ndo_send(struct sk_buff *, int, int, __be32);
347:	void icmp_out_count(struct net *, unsigned char);
1070:	int icmp_rcv(struct sk_buff *);
1061:	static bool icmp_discard(struct sk_buff *);
998:	static bool icmp_echo(struct sk_buff *);
357:	static int icmp_glue_bits(void *, char *, int, int, int, struct sk_buff *);
373:	static void icmp_push_reply(struct icmp_bxm *, struct flowi4 *, struct ipcm_cookie *, struct rtable **);
970:	static bool icmp_redirect(struct sk_buff *);
408:	static void icmp_reply(struct icmp_bxm *, struct sk_buff *);
487:	static struct rtable *icmp_route_lookup(struct net *, struct flowi4 *, struct sk_buff *, const struct iphdr *, __be32, u8, u32, int, int, struct icmp_bxm *);
1257:	static void icmp_sk_exit(struct net *);
1267:	static int icmp_sk_init(struct net *);
821:	static void icmp_socket_deliver(struct sk_buff *, u32);
1025:	static bool icmp_timestamp(struct sk_buff *);
857:	static bool icmp_unreach(struct sk_buff *);
305:	static bool icmpv4_global_allow(struct net *, int, int);
320:	static bool icmpv4_xrlim_allow(struct net *, struct rtable *, int, int, struct flowi4 *);

File net/ipv4/igmp.c:
3092:	int igmp_mc_init(void);
1070:	int igmp_rcv(struct sk_buff *);
2719:	int ip_check_mc_rcu(struct in_device *, __be32, __be32, u8);
1630:	int ip_mc_check_igmp(struct sk_buff *, struct sk_buff **);
1681:	void ip_mc_dec_group(struct in_device *, __be32);
1811:	void ip_mc_destroy_dev(struct in_device *);
1739:	void ip_mc_down(struct in_device *);
2693:	void ip_mc_drop_socket(struct sock *);
2590:	int ip_mc_gsfget(struct sock *, struct group_filter *, struct group_filter *, int *);
1473:	void ip_mc_inc_group(struct in_device *, __be32);
1775:	void ip_mc_init_dev(struct in_device *);
2229:	int ip_mc_join_group(struct sock *, struct ip_mreqn *);
2237:	int ip_mc_join_group_ssm(struct sock *, struct ip_mreqn *, unsigned int);
2263:	int ip_mc_leave_group(struct sock *, struct ip_mreqn *);
2532:	int ip_mc_msfget(struct sock *, struct ip_msfilter *, struct ip_msfilter *, int *);
2447:	int ip_mc_msfilter(struct sock *, struct ip_msfilter *, int);
1723:	void ip_mc_remap(struct in_device *);
2645:	int ip_mc_sf_allow(struct sock *, __be32, __be32, int, int);
2311:	int ip_mc_source(int, int, struct sock *, struct ip_mreq_source *, int);
1713:	void ip_mc_unmap(struct in_device *);
1790:	void ip_mc_up(struct in_device *);
1425:	static void __ip_mc_inc_group(struct in_device *, __be32, unsigned int);
2177:	static int __ip_mc_join_group(struct sock *, struct ip_mreqn *, unsigned int);
461:	static struct sk_buff *add_grec(struct sk_buff *, struct ip_mc_list *, int, int, int);
436:	static struct sk_buff *add_grhead(struct sk_buff *, int, struct igmpv3_grec **, unsigned int, struct ip_mc_list *, struct ip_mc_list *);
798:	static void igmp_gq_timer_expire(struct timer_list *);
1324:	static void igmp_group_added(struct ip_mc_list *);
1286:	static void igmp_group_dropped(struct ip_mc_list *);
827:	static void igmp_ifc_event(struct in_device *);
242:	static void igmp_ifc_start_timer(struct in_device *, int);
807:	static void igmp_ifc_timer_expire(struct timer_list *);
2830:	static void *igmp_mc_seq_next(struct seq_file *, void *, loff_t *);
2851:	static int igmp_mc_seq_show(struct seq_file *, void *);
2823:	static void *igmp_mc_seq_start(struct seq_file *, loff_t *);
2841:	static void igmp_mc_seq_stop(struct seq_file *, void *);
2931:	static struct ip_sf_list *igmp_mcf_get_next(struct ip_sf_list *, struct seq_file *);
2975:	static void *igmp_mcf_seq_next(struct seq_file *, void *, loff_t *);
2999:	static int igmp_mcf_seq_show(struct seq_file *, void *);
2968:	static void *igmp_mcf_seq_start(struct seq_file *, loff_t *);
2986:	static void igmp_mcf_seq_stop(struct seq_file *, void *);
3057:	static void igmp_net_exit(struct net *);
3026:	static int igmp_net_init(struct net *);
3070:	static int igmp_netdev_event(struct notifier_block *, unsigned long, void *);
726:	static int igmp_send_report(struct in_device *, struct ip_mc_list *, int);
219:	static void igmp_start_timer(struct ip_mc_list *, int);
207:	static void igmp_stop_timer(struct ip_mc_list *);
837:	static void igmp_timer_expire(struct timer_list *);
1256:	static void igmpv3_clear_delrec(struct in_device *);
628:	static void igmpv3_clear_zeros(struct ip_sf_list **);
1214:	static void igmpv3_del_delrec(struct in_device *, struct ip_mc_list *);
350:	static struct sk_buff *igmpv3_newpack(struct net_device *, unsigned int);
588:	static int igmpv3_send_report(struct in_device *, struct ip_mc_list *);
421:	static int igmpv3_sendpack(struct sk_buff *);
172:	static void ip_ma_put(struct ip_mc_list *);
2088:	static int ip_mc_add_src(struct in_device *, __be32 *, int, int, __be32 *, int);
2157:	static void ip_mc_clear_src(struct ip_mc_list *);
1867:	static int ip_mc_del1_src(struct ip_mc_list *, int, __be32 *);
1916:	static int ip_mc_del_src(struct in_device *, __be32 *, int, int, __be32 *, int);
1832:	static struct in_device *ip_mc_find_dev(struct net *, struct ip_mreqn *);
2243:	static int ip_mc_leave_src(struct sock *, struct ip_mc_socklist *, struct in_device *);
1564:	static __sum16 ip_mc_validate_checksum(struct sk_buff *);
275:	static int is_in(struct ip_mc_list *, struct ip_sf_list *, int, int, int);
646:	static void kfree_pmc(struct ip_mc_list *);
2025:	static int sf_setstate(struct ip_mc_list *);
139:	static int unsolicited_report_interval(struct in_device *);

File net/ipv4/inet_connection_sock.c:
455:	struct sock *inet_csk_accept(struct sock *, int, int *, bool);
1061:	void inet_csk_addr2sockaddr(struct sock *, struct sockaddr *);
555:	void inet_csk_clear_xmit_timers(struct sock *);
827:	struct sock *inet_csk_clone_lock(const struct sock *, const struct request_sock *, const gfp_t);
1073:	int inet_csk_compat_getsockopt(struct sock *, int, int, char *, int *);
1086:	int inet_csk_compat_setsockopt(struct sock *, int, int, char *, unsigned int);
995:	struct sock *inet_csk_complete_hashdance(struct sock *, struct sock *, struct request_sock *, bool);
567:	void inet_csk_delete_keepalive_timer(struct sock *);
871:	void inet_csk_destroy_sock(struct sock *);
346:	int inet_csk_get_port(struct sock *, unsigned short);
541:	void inet_csk_init_xmit_timers(struct sock *, void (*)(struct timer_list *), void (*)(struct timer_list *), void (*)(struct timer_list *));
913:	int inet_csk_listen_start(struct sock *, int);
1015:	void inet_csk_listen_stop(struct sock *);
899:	void inet_csk_prepare_forced_close(struct sock *);
970:	struct sock *inet_csk_reqsk_queue_add(struct sock *, struct request_sock *, struct sock *);
708:	bool inet_csk_reqsk_queue_drop(struct sock *, struct request_sock *);
720:	void inet_csk_reqsk_queue_drop_and_put(struct sock *, struct request_sock *);
811:	void inet_csk_reqsk_queue_hash_add(struct sock *, struct request_sock *, unsigned long);
573:	void inet_csk_reset_keepalive_timer(struct sock *, unsigned long);
615:	struct dst_entry *inet_csk_route_child_sock(const struct sock *, struct sock *, const struct request_sock *);
579:	struct dst_entry *inet_csk_route_req(const struct sock *, struct flowi4 *, const struct request_sock *);
291:	void inet_csk_update_fastreuse(struct inet_bind_bucket *, struct sock *);
1126:	struct dst_entry *inet_csk_update_pmtu(struct sock *, u32);
124:	void inet_get_local_port_range(struct net *, int *, int *);
115:	bool inet_rcv_saddr_any(const struct sock *);
95:	bool inet_rcv_saddr_equal(const struct sock *, const struct sock *, bool);
679:	int inet_rtx_syn_ack(const struct sock *, struct request_sock *);
946:	static void inet_child_forget(struct sock *, struct request_sock *, struct sock *);
137:	static int inet_csk_bind_conflict(const struct sock *, const struct inet_bind_bucket *, bool, bool);
1100:	static struct dst_entry *inet_csk_rebuild_route(struct sock *, struct flowi *);
38:	static bool ipv6_rcv_saddr_equal(const struct in6_addr *, const struct in6_addr *, __be32, __be32, bool, bool, bool, bool);
727:	static void reqsk_timer_handler(struct timer_list *);

File net/ipv4/inet_fragment.c:
204:	void inet_frag_destroy(struct inet_frag_queue *);
284:	struct inet_frag_queue *inet_frag_find(struct netns_frags *, void *);
156:	void inet_frag_kill(struct inet_frag_queue *);
490:	struct sk_buff *inet_frag_pull_head(struct inet_frag_queue *);
306:	int inet_frag_queue_insert(struct inet_frag_queue *, struct sk_buff *, int, int);
182:	unsigned int inet_frag_rbtree_purge(struct rb_root *);
439:	void inet_frag_reasm_finish(struct inet_frag_queue *, struct sk_buff *, void *);
370:	void *inet_frag_reasm_prepare(struct inet_frag_queue *, struct sk_buff *, struct sk_buff *);
148:	void inet_frags_exit_net(struct netns_frags *);
117:	void inet_frags_fini(struct inet_frags *);
106:	int inet_frags_init(struct inet_frags *);
171:	static void inet_frag_destroy_rcu(struct callback_head *);
127:	static void inet_frags_free_cb(void *, void *);

File net/ipv4/inet_hashtables.c:
588:	int __inet_hash(struct sock *, struct sock *);
669:	int __inet_hash_connect(struct inet_timewait_death_row *, struct sock *, u32, int (*)(struct inet_timewait_death_row *, struct sock *, __u16, struct inet_timewait_sock **));
132:	int __inet_inherit_port(const struct sock *, struct sock *);
396:	struct sock *__inet_lookup_established(struct net *, struct inet_hashinfo *, const __be32, const __be16, const __be32, const u16, const int, const int);
304:	struct sock *__inet_lookup_listener(struct net *, struct inet_hashinfo *, struct sk_buff *, int, const __be32, __be16, const __be32, const unsigned short, const int, const int);
65:	struct inet_bind_bucket *inet_bind_bucket_create(struct kmem_cache *, struct net *, struct inet_bind_hashbucket *, const unsigned short, int);
88:	void inet_bind_bucket_destroy(struct kmem_cache *, struct inet_bind_bucket *);
96:	void inet_bind_hash(struct sock *, struct inet_bind_bucket *, const unsigned short);
523:	bool inet_ehash_insert(struct sock *, struct sock *);
835:	int inet_ehash_locks_alloc(struct inet_hashinfo *);
549:	bool inet_ehash_nolisten(struct sock *, struct sock *);
623:	int inet_hash(struct sock *);
784:	int inet_hash_connect(struct inet_timewait_death_row *, struct sock *);
811:	void inet_hashinfo2_init(struct inet_hashinfo *, const char *, unsigned long, int, unsigned long, unsigned long);
796:	void inet_hashinfo_init(struct inet_hashinfo *);
124:	void inet_put_port(struct sock *);
637:	void inet_unhash(struct sock *);
390:	void sock_edemux(struct sk_buff *);
376:	void sock_gen_put(struct sock *);
445:	static int __inet_check_established(struct inet_timewait_death_row *, struct sock *, __u16, struct inet_timewait_sock **);
32:	static u32 inet_ehashfn(const struct net *, const __be32, const __u16, const __be32, const __be16);
180:	static struct inet_listen_hashbucket *inet_lhash2_bucket_sk(struct inet_hashinfo *, struct sock *);
270:	static struct sock *inet_lhash2_lookup(struct net *, struct inet_listen_hashbucket *, struct sk_buff *, int, const __be32, __be16, const __be32, const unsigned short, const int, const int);

File net/ipv4/inet_timewait_sock.c:
219:	void __inet_twsk_schedule(struct inet_timewait_sock *, int, bool);
154:	struct inet_timewait_sock *inet_twsk_alloc(const struct sock *, struct inet_timewait_death_row *, const int);
28:	void inet_twsk_bind_unhash(struct inet_timewait_sock *, struct inet_hashinfo *);
211:	void inet_twsk_deschedule_put(struct inet_timewait_sock *);
65:	void inet_twsk_free(struct inet_timewait_sock *);
100:	void inet_twsk_hashdance(struct inet_timewait_sock *, struct sock *, struct inet_hashinfo *);
256:	void inet_twsk_purge(struct inet_hashinfo *, int);
76:	void inet_twsk_put(struct inet_timewait_sock *);
43:	static void inet_twsk_kill(struct inet_timewait_sock *);
143:	static void tw_timer_handler(struct timer_list *);

File net/ipv4/inetpeer.c:
182:	struct inet_peer *inet_getpeer(struct inet_peer_base *, const struct inetpeer_addr *, int);
74:	void inet_initpeers(void);
57:	void inet_peer_base_init(struct inet_peer_base *);
273:	bool inet_peer_xrlim_allow(struct inet_peer *, int);
243:	void inet_putpeer(struct inet_peer *);
296:	void inetpeer_invalidate_tree(struct inet_peer_base *);
141:	static void inetpeer_free_rcu(struct callback_head *);
98:	static struct inet_peer *lookup(const struct inetpeer_addr *, struct inet_peer_base *, unsigned int, struct inet_peer **, unsigned int *, struct rb_node **, struct rb_node ***);

File net/ipv4/ip_forward.c:
79:	int ip_forward(struct sk_buff *);
65:	static int ip_forward_finish(struct net *, struct sock *, struct sk_buff *);

File net/ipv4/ip_fragment.c:
502:	struct sk_buff *ip_check_defrag(struct net *, struct sk_buff *, u32);
473:	int ip_defrag(struct net *, struct sk_buff *, u32);
740:	void ipfrag_init(void);
98:	static void ip4_frag_free(struct inet_frag_queue *);
82:	static void ip4_frag_init(struct inet_frag_queue *, const void *);
708:	static u32 ip4_key_hashfn(const void *, u32, u32);
722:	static int ip4_obj_cmpfn(struct rhashtable_compare_arg *, const void *);
714:	static u32 ip4_obj_hashfn(const void *, u32, u32);
135:	static void ip_expire(struct timer_list *);
696:	static void ipv4_frags_exit_net(struct net *);
657:	static int ipv4_frags_init_net(struct net *);

File net/ipv4/ip_input.c:
154:	bool ip_call_ra_chain(struct sk_buff *);
589:	void ip_list_rcv(struct list_head *, struct packet_type *, struct net_device *);
244:	int ip_local_deliver(struct sk_buff *);
516:	int ip_rcv(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *);
191:	static int ip_local_deliver_finish(struct net *, struct sock *, struct sk_buff *);
421:	static struct sk_buff *ip_rcv_core(struct sk_buff *, struct net *);
400:	static int ip_rcv_finish(struct net *, struct sock *, struct sk_buff *);
309:	static int ip_rcv_finish_core(struct net *, struct sk_buff *, struct net_device *, struct sock *);
580:	static void ip_sublist_rcv(struct list_head *, struct net_device *, struct net *);
529:	static void ip_sublist_rcv_finish(struct list_head *);

File net/ipv4/ip_options.c:
254:	int __ip_options_compile(struct net *, struct ip_options *, struct sk_buff *, __be32 *);
90:	int __ip_options_echo(struct net *, struct ip_options *, struct sk_buff *, const struct ip_options *);
568:	void ip_forward_options(struct sk_buff *);
44:	void ip_options_build(struct sk_buff *, struct ip_options *, __be32, struct rtable *, int);
477:	int ip_options_compile(struct net *, struct ip_options *, struct sk_buff *);
208:	void ip_options_fragment(struct sk_buff *);
556:	int ip_options_get(struct net *, struct ip_options_rcu **, unsigned char *, int);
542:	int ip_options_get_from_user(struct net *, struct ip_options_rcu **, unsigned char *, int);
615:	int ip_options_rcv_srr(struct sk_buff *, struct net_device *);
494:	void ip_options_undo(struct ip_options *);
527:	static int ip_options_get_finish(struct net *, struct ip_options_rcu **, struct ip_options_rcu *, int);

File net/ipv4/ip_output.c:
98:	int __ip_local_out(struct net *, struct sock *, struct sk_buff *);
1354:	struct sk_buff *__ip_make_skb(struct sock *, struct flowi4 *, struct sk_buff_head *, struct inet_cork *);
427:	int __ip_queue_xmit(struct sock *, struct sk_buff *, struct flowi *, __u8);
1185:	int ip_append_data(struct sock *, struct flowi4 *, int (*)(void *, char *, int, int, int, struct sk_buff *), void *, int, int, struct ipcm_cookie *, struct rtable **, unsigned int);
1211:	ssize_t ip_append_page(struct sock *, struct flowi4 *, struct page *, int, size_t, int);
144:	int ip_build_and_send_pkt(struct sk_buff *, const struct sock *, __be32, __be32, struct ip_options_rcu *);
573:	int ip_do_fragment(struct net *, struct sock *, struct sk_buff *, int (*)(struct net *, struct sock *, struct sk_buff *));
1489:	void ip_flush_pending_frames(struct sock *);
833:	int ip_generic_getfrag(void *, char *, int, int, int, struct sk_buff *);
1617:	void ip_init(void);
119:	int ip_local_out(struct net *, struct sock *, struct sk_buff *);
1494:	struct sk_buff *ip_make_skb(struct sock *, struct flowi4 *, int (*)(void *, char *, int, int, int, struct sk_buff *), void *, int, int, struct ipcm_cookie *, struct rtable **, struct inet_cork *, unsigned int);
335:	int ip_mc_output(struct net *, struct sock *, struct sk_buff *);
397:	int ip_output(struct net *, struct sock *, struct sk_buff *);
1462:	int ip_push_pending_frames(struct sock *, struct flowi4 *);
91:	void ip_send_check(struct iphdr *);
1447:	int ip_send_skb(struct net *, struct sk_buff *);
1545:	void ip_send_unicast_reply(struct sock *, struct sk_buff *, const struct ip_options *, __be32, __be32, const struct ip_reply_arg *, unsigned int);
861:	static int __ip_append_data(struct sock *, struct sk_buff_head *, struct inet_cork *, struct page_frag *, int (*)(void *, char *, int, int, int, struct sk_buff *), void *, int, int, unsigned int, struct flowi4 *);
1477:	static void __ip_flush_pending_frames(struct sk_buff_head *, struct inet_cork *, struct sock *);
418:	static void ip_copy_addrs(struct iphdr *, const struct flowi4 *);
518:	static void ip_copy_metadata(struct sk_buff *, struct sk_buff *);
293:	static int ip_finish_output(struct net *, struct sock *, struct sk_buff *);
185:	static int ip_finish_output2(struct net *, struct sock *, struct sk_buff *);
544:	static int ip_fragment(struct net *, struct sock *, struct sk_buff *, unsigned int, int (*)(struct net *, struct sock *, struct sk_buff *));
321:	static int ip_mc_finish_output(struct net *, struct sock *, struct sk_buff *);
1531:	static int ip_reply_glue_bits(void *, char *, int, int, int, struct sk_buff *);
1125:	static int ip_setup_cork(struct sock *, struct inet_cork *, struct ipcm_cookie *, struct rtable **);

File net/ipv4/ip_sockglue.c:
1587:	int compat_ip_getsockopt(struct sock *, int, int, char *, int *);
1267:	int compat_ip_setsockopt(struct sock *, int, int, char *, unsigned int);
171:	void ip_cmsg_recv_offset(struct msghdr *, struct sock *, struct sk_buff *, int, int);
242:	int ip_cmsg_send(struct sock *, struct msghdr *, struct ipcm_cookie *, bool);
1556:	int ip_getsockopt(struct sock *, int, int, char *, int *);
392:	void ip_icmp_error(struct sock *, struct sk_buff *, int, __be16, u32, u8 *);
421:	void ip_local_error(struct sock *, int, __be32, __be16, u32);
335:	int ip_ra_control(struct sock *, unsigned char, void (*)(struct sock *));
500:	int ip_recv_error(struct sock *, struct msghdr *, int, int *);
1240:	int ip_setsockopt(struct sock *, int, int, char *, unsigned int);
1208:	void ipv4_pktinfo_prepare(const struct sock *, struct sk_buff *);
1309:	static int do_ip_getsockopt(struct sock *, int, int, char *, int *, unsigned int);
590:	static int do_ip_setsockopt(struct sock *, int, char *, unsigned int, int);
327:	static void ip_ra_destroy_rcu(struct callback_head *);

File net/ipv4/ip_tunnel_core.c:
101:	int __iptunnel_pull_header(struct sk_buff *, int, __be16, bool, bool);
417:	void ip_tunnel_core_init(void);
196:	void ip_tunnel_get_stats64(struct net_device *, struct rtnl_link_stats64 *);
432:	void ip_tunnel_need_metadata(void);
438:	void ip_tunnel_unneed_metadata(void);
163:	int iptunnel_handle_offloads(struct sk_buff *, int);
134:	struct metadata_dst *iptunnel_metadata_reply(struct metadata_dst *, gfp_t);
59:	void iptunnel_xmit(struct sock *, struct rtable *, struct sk_buff *, __be32, __be32, __u8, __u8, __u8, __be16, bool);
333:	static int ip6_tun_build_state(struct nlattr *, unsigned int, const void *, struct lwtunnel_state **, struct netlink_ext_ack *);
399:	static int ip6_tun_encap_nlsize(struct lwtunnel_state *);
382:	static int ip6_tun_fill_encap_info(struct sk_buff *, struct lwtunnel_state *);
234:	static int ip_tun_build_state(struct nlattr *, unsigned int, const void *, struct lwtunnel_state **, struct netlink_ext_ack *);
310:	static int ip_tun_cmp_encap(struct lwtunnel_state *, struct lwtunnel_state *);
300:	static int ip_tun_encap_nlsize(struct lwtunnel_state *);
283:	static int ip_tun_fill_encap_info(struct sk_buff *, struct lwtunnel_state *);

File net/ipv4/ipmr.c:
3008:	int ip_mr_init(void);
2085:	int ip_mr_input(struct sk_buff *);
1554:	int ip_mroute_getsockopt(struct sock *, int, char *, int *);
1372:	int ip_mroute_setsockopt(struct sock *, int, char *, unsigned int);
1673:	int ipmr_compat_ioctl(struct sock *, unsigned int, void *);
2246:	int ipmr_get_route(struct net *, struct sk_buff *, __be32, __be32, struct rtmsg *, u32);
1598:	int ipmr_ioctl(struct sock *, int, void *);
297:	bool ipmr_rule_default(const struct fib_rule *);
2192:	int pim_rcv_v1(struct sk_buff *);
607:	static int __pim_rcv(struct mr_table *, struct sk_buff *, unsigned int);
2354:	static int _ipmr_fill_mroute(struct mr_table *, struct sk_buff *, u32, u32, struct mr_mfc *, int, int);
1939:	static void ip_mr_forward(struct net *, struct mr_table *, struct net_device *, struct sk_buff *, struct mfc_cache *, int);
732:	static void ipmr_cache_free_rcu(struct callback_head *);
1047:	static int ipmr_cache_report(struct mr_table *, struct sk_buff *, vifi_t, int);
1126:	static int ipmr_cache_unresolved(struct mr_table *, vifi_t, struct sk_buff *, struct net_device *);
426:	static void ipmr_del_tunnel(struct net_device *, struct vifctl *);
747:	static void ipmr_destroy_unres(struct mr_table *, struct mfc_cache *);
1732:	static int ipmr_device_event(struct notifier_block *, unsigned long, void *);
2924:	static int ipmr_dump(struct net *, struct notifier_block *);
776:	static void ipmr_expire_process(struct timer_list *);
149:	static int ipmr_fib_lookup(struct net *, struct flowi4 *, struct mr_table **);
2310:	static int ipmr_fill_mroute(struct mr_table *, struct sk_buff *, u32, u32, struct mfc_cache *, int, int);
1788:	static int ipmr_forward_finish(struct net *, struct sock *, struct sk_buff *);
416:	static void ipmr_free_table(struct mr_table *);
362:	static int ipmr_hash_cmp(struct rhashtable_compare_arg *, const void *);
458:	static bool ipmr_init_vif_indev(const struct net_device *);
1221:	static int ipmr_mfc_add(struct net *, struct mr_table *, struct mfcctl *, int, int);
1200:	static int ipmr_mfc_delete(struct mr_table *, int, struct mfcctl *, struct mfcctl *);
2861:	static int ipmr_mfc_seq_show(struct seq_file *, void *);
2849:	static void *ipmr_mfc_seq_start(struct seq_file *, loff_t *);
121:	static struct mr_table *ipmr_mr_table_iter(struct net *, struct mr_table *);
2993:	static void ipmr_net_exit(struct net *);
2958:	static int ipmr_net_init(struct net *);
400:	static struct mr_table *ipmr_new_table(struct net *, u32);
382:	static void ipmr_new_table_set(struct mr_table *, struct net *);
474:	static struct net_device *ipmr_new_tunnel(struct net *, struct vifctl *);
1826:	static void ipmr_queue_xmit(struct net *, struct mr_table *, int, struct sk_buff *, int, struct mfc_cache *);
2058:	static struct mr_table *ipmr_rt_fib_lookup(struct net *, struct sk_buff *);
2718:	static int ipmr_rtm_dumplink(struct sk_buff *, struct netlink_callback *);
2533:	static int ipmr_rtm_dumproute(struct sk_buff *, struct netlink_callback *);
2472:	static int ipmr_rtm_getroute(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
2645:	static int ipmr_rtm_route(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
170:	static int ipmr_rule_action(struct fib_rule *, struct flowi *, int, struct fib_lookup_arg *);
213:	static int ipmr_rule_compare(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **);
206:	static int ipmr_rule_configure(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *);
219:	static int ipmr_rule_fill(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *);
197:	static int ipmr_rule_match(struct fib_rule *, struct flowi *, int);
287:	static int ipmr_rules_dump(struct net *, struct notifier_block *);
274:	static void ipmr_rules_exit(struct net *);
2917:	static unsigned int ipmr_seq_read(struct net *);
815:	static void ipmr_update_thresholds(struct mr_table *, struct mr_mfc *, unsigned char *);
2819:	static int ipmr_vif_seq_show(struct seq_file *, void *);
2796:	static void *ipmr_vif_seq_start(struct seq_file *, loff_t *);
2813:	static void ipmr_vif_seq_stop(struct seq_file *, void *);
1302:	static void mroute_clean_tables(struct mr_table *, bool);
2383:	static void mroute_netlink_event(struct mr_table *, struct mfc_cache *, int);
1346:	static void mrtsock_destruct(struct sock *);
2219:	static int pim_rcv(struct sk_buff *);
550:	static int reg_vif_get_iflink(const struct net_device *);
560:	static void reg_vif_setup(struct net_device *);
524:	static netdev_tx_t reg_vif_xmit(struct sk_buff *, struct net_device *);
837:	static int vif_add(struct net *, struct mr_table *, struct vifctl *, int);
673:	static int vif_delete(struct mr_table *, int, int, struct list_head *);

File net/ipv4/ipmr_base.c:
329:	int mr_dump(struct net *, struct notifier_block *, unsigned short, int (*)(struct net *, struct notifier_block *), struct mr_table *(*)(struct net *, struct mr_table *), rwlock_t *);
208:	int mr_fill_mroute(struct mr_table *, struct sk_buff *, struct mr_mfc *, struct rtmsg *);
93:	void *mr_mfc_find_any(struct mr_table *, int, void *);
78:	void *mr_mfc_find_any_parent(struct mr_table *, int);
64:	void *mr_mfc_find_parent(struct mr_table *, void *, int);
147:	void *mr_mfc_seq_idx(struct net *, struct mr_mfc_iter *, loff_t);
172:	void *mr_mfc_seq_next(struct seq_file *, void *, loff_t *);
271:	int mr_rtm_dumproute(struct sk_buff *, struct netlink_callback *, struct mr_table *(*)(struct net *, struct mr_table *), int (*)(struct mr_table *, struct sk_buff *, u32, u32, struct mr_mfc *, int, int), spinlock_t *);
32:	struct mr_table *mr_table_alloc(struct net *, u32, struct mr_table_ops *, void (*)(struct timer_list *), void (*)(struct mr_table *, struct net *));
114:	void *mr_vif_seq_idx(struct net *, struct mr_vif_iter *, loff_t);
128:	void *mr_vif_seq_next(struct seq_file *, void *, loff_t *);
9:	void vif_device_init(struct vif_device *, struct net_device *, unsigned long, unsigned char, unsigned short, unsigned short);

File net/ipv4/metrics.c:
8:	int ip_metrics_convert(struct net *, struct nlattr *, int, u32 *);

File net/ipv4/netfilter.c:
20:	int ip_route_me_harder(struct net *, struct sock *, struct sk_buff *, unsigned int);
85:	int nf_ip_reroute(struct sk_buff *, const struct nf_queue_entry *);
103:	int nf_ip_route(struct net *, struct dst_entry **, struct flowi *, bool);

File net/ipv4/netlink.c:
9:	int rtm_getroute_parse_ip_proto(struct nlattr *, u8 *, u8, struct netlink_ext_ack *);

File net/ipv4/ping.c:
410:	int ping_bind(struct sock *, struct sockaddr *, int);
289:	void ping_close(struct sock *, long);
654:	int ping_common_sendmsg(int, struct msghdr *, size_t, void *, size_t);
481:	void ping_err(struct sk_buff *, int, u32);
82:	int ping_get_port(struct sock *, unsigned short);
602:	int ping_getfrag(void *, char *, int, int, int, struct sk_buff *);
148:	int ping_hash(struct sock *);
1185:	void ping_init(void);
257:	int ping_init_sock(struct sock *);
1178:	void ping_proc_exit(void);
1173:	int ping_proc_init(void);
948:	int ping_queue_rcv_skb(struct sock *, struct sk_buff *);
966:	bool ping_rcv(struct sk_buff *);
858:	int ping_recvmsg(struct sock *, struct msghdr *, size_t, int, int, int *);
1090:	void *ping_seq_next(struct seq_file *, void *, loff_t *);
1072:	void *ping_seq_start(struct seq_file *, loff_t *, sa_family_t);
1104:	void ping_seq_stop(struct seq_file *, void *);
156:	void ping_unhash(struct sock *);
1021:	static struct sock *ping_get_first(int, struct seq_file *);
1062:	static struct sock *ping_get_idx(struct seq_file *, loff_t);
1048:	static struct sock *ping_get_next(struct sock *, struct seq_file *);
174:	static struct sock *ping_lookup(struct net *, struct sk_buff *, u16);
1163:	static void ping_v4_proc_exit_net(struct net *);
1155:	static int ping_v4_proc_init_net(struct net *);
699:	static int ping_v4_sendmsg(struct sock *, struct msghdr *, size_t);
1132:	static int ping_v4_seq_show(struct seq_file *, void *);
1085:	static void *ping_v4_seq_start(struct seq_file *, loff_t *);

File net/ipv4/proc.c:
526:	int ip_misc_proc_init(void);
315:	static void icmpmsg_put(struct seq_file *);
298:	static void icmpmsg_put_line(struct seq_file *, unsigned long *, unsigned short *, int);
514:	static void ip_proc_exit_net(struct net *);
492:	static int ip_proc_init_net(struct net *);
462:	static int netstat_seq_show(struct seq_file *, void *);
447:	static int snmp_seq_show(struct seq_file *, void *);
371:	static int snmp_seq_show_ipstats(struct seq_file *, void *);
397:	static int snmp_seq_show_tcp_udp(struct seq_file *, void *);
54:	static int sockstat_seq_show(struct seq_file *, void *);

File net/ipv4/protocol.c:
48:	int inet_add_offload(const struct net_offload *, unsigned char);
35:	int inet_add_protocol(const struct net_protocol *, unsigned char);
68:	int inet_del_offload(const struct net_offload *, unsigned char);
55:	int inet_del_protocol(const struct net_protocol *, unsigned char);

File net/ipv4/raw.c:
124:	struct sock *__raw_v4_lookup(struct net *, struct sock *, unsigned short, __be32, __be32, int, int);
950:	int raw_abort(struct sock *, int);
97:	int raw_hash_sk(struct sock *);
290:	void raw_icmp_error(struct sk_buff *, int, u32);
1154:	void raw_init(void);
211:	int raw_local_deliver(struct sk_buff *, int);
1131:	void raw_proc_exit(void);
1126:	int raw_proc_init(void);
332:	int raw_rcv(struct sock *, struct sk_buff *);
1049:	void *raw_seq_next(struct seq_file *, void *, loff_t *);
1040:	void *raw_seq_start(struct seq_file *, loff_t *);
1062:	void raw_seq_stop(struct seq_file *, void *);
113:	void raw_unhash_sk(struct sock *);
895:	static int compat_raw_getsockopt(struct sock *, int, int, char *, int *);
934:	static int compat_raw_ioctl(struct sock *, unsigned int, unsigned long);
865:	static int compat_raw_setsockopt(struct sock *, int, int, char *, unsigned int);
719:	static int raw_bind(struct sock *, struct sockaddr *, int);
701:	static void raw_close(struct sock *, long);
711:	static void raw_destroy(struct sock *);
1116:	static void raw_exit_net(struct net *);
995:	static struct sock *raw_get_first(struct seq_file *);
1012:	static struct sock *raw_get_next(struct seq_file *, struct sock *);
471:	static int raw_getfrag(void *, char *, int, int, int, struct sk_buff *);
825:	static int raw_geticmpfilter(struct sock *, char *, int *);
886:	static int raw_getsockopt(struct sock *, int, int, char *, int *);
1107:	static int raw_init_net(struct net *);
904:	static int raw_ioctl(struct sock *, int, unsigned long);
319:	static int raw_rcv_skb(struct sock *, struct sk_buff *);
754:	static int raw_recvmsg(struct sock *, struct msghdr *, size_t, int, int, int *);
502:	static int raw_sendmsg(struct sock *, struct msghdr *, size_t);
1089:	static int raw_seq_show(struct seq_file *, void *);
816:	static int raw_seticmpfilter(struct sock *, char *, int);
856:	static int raw_setsockopt(struct sock *, int, int, char *, unsigned int);
807:	static int raw_sk_init(struct sock *);
1144:	static int raw_sysctl_init(struct net *);

File net/ipv4/route.c:
504:	void __ip_select_ident(struct net *, struct iphdr *, int);
1887:	int fib_multipath_hash(const struct net *, const struct flowi4 *, const struct sk_buff *, struct flow_keys *);
485:	u32 ip_idents_reserve(u32, int);
1664:	int ip_mc_validate_source(struct sk_buff *, __be32, __be32, u8, struct net_device *, struct in_device *, u32 *);
1411:	u32 ip_mtu_from_fib_result(struct fib_result *, __be32);
2180:	int ip_route_input_noref(struct sk_buff *, __be32, __be32, u8, struct net_device *);
2196:	int ip_route_input_rcu(struct sk_buff *, __be32, __be32, u8, struct net_device *, struct fib_result *);
2647:	struct rtable *ip_route_output_flow(struct net *, struct flowi4 *, const struct sock *);
2375:	struct rtable *ip_route_output_key_hash(struct net *, struct flowi4 *, const struct sk_buff *);
2400:	struct rtable *ip_route_output_key_hash_rcu(struct net *, struct flowi4 *, struct fib_result *, const struct sk_buff *);
1271:	void ip_rt_get_source(u8 *, struct sk_buff *, struct rtable *);
3216:	int ip_rt_init(void);
2983:	void ip_rt_multicast_event(struct in_device *);
883:	void ip_rt_send_redirect(struct sk_buff *);
3290:	void ip_static_sysctl_init(void);
2611:	struct dst_entry *ipv4_blackhole_route(struct net *, struct dst_entry *);
1163:	void ipv4_redirect(struct sk_buff *, struct net *, int, u32, u8, int);
1180:	void ipv4_sk_redirect(struct sk_buff *, struct sock *);
1109:	void ipv4_sk_update_pmtu(struct sk_buff *, struct sock *, u32);
1071:	void ipv4_update_pmtu(struct sk_buff *, struct net *, u32, int, u32, u8, int);
1521:	void rt_add_uncached_list(struct rtable *);
431:	void rt_cache_flush(struct net *);
1532:	void rt_del_uncached_list(struct rtable *);
1631:	struct rtable *rt_dst_alloc(struct net_device *, unsigned int, u16, bool, bool, bool);
1554:	void rt_flush_dev(struct net_device *);
522:	static void __build_flow_key(const struct net *, struct flowi4 *, const struct sock *, const struct iphdr *, int, u8, u8, u32, int);
747:	static void __ip_do_redirect(struct rtable *, struct sk_buff *, struct flowi4 *, bool);
1026:	static void __ip_rt_update_pmtu(struct rtable *, struct flowi4 *, u32);
1091:	static void __ipv4_sk_update_pmtu(struct sock *, u32, struct sk_buff *, struct sk_buff *);
1380:	static struct fib_nh_exception *find_exception(struct fib_nh *, __be32);
585:	static void fnhe_flush_routes(struct fib_nh_exception *);
626:	static u32 fnhe_hashfun(__be32);
2842:	static int inet_rtm_getroute(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
832:	static void ip_do_redirect(struct dst_entry *, struct sock *, struct sk_buff *);
950:	static int ip_error(struct sk_buff *);
1732:	static void ip_handle_martian_source(struct net_device *, struct sk_buff *, __be32, __be32, struct in_device *, struct in_device *);
1973:	static int ip_route_input_slow(struct sk_buff *, __be32, __be32, u8, struct net_device *, struct fib_result *);
1252:	static int ip_rt_bug(struct net *, struct sock *, struct sk_buff *);
400:	static void ip_rt_do_proc_exit(struct net *);
368:	static int ip_rt_do_proc_init(struct net *);
1060:	static void ip_rt_update_pmtu(struct dst_entry *, struct sock *, struct sk_buff *, u32, bool);
2571:	static struct dst_entry *ipv4_blackhole_dst_check(struct dst_entry *, u32);
2576:	static unsigned int ipv4_blackhole_mtu(const struct dst_entry *);
457:	static void ipv4_confirm_neigh(const struct dst_entry *, const void *);
152:	static u32 *ipv4_cow_metrics(struct dst_entry *, unsigned long);
1314:	static unsigned int ipv4_default_advmss(const struct dst_entry *);
1196:	static struct dst_entry *ipv4_dst_check(struct dst_entry *, u32);
1543:	static void ipv4_dst_destroy(struct dst_entry *);
3198:	static void ipv4_inetpeer_exit(struct net *);
3187:	static int ipv4_inetpeer_init(struct net *);
1241:	static void ipv4_link_failure(struct sk_buff *);
1323:	static unsigned int ipv4_mtu(const struct dst_entry *);
849:	static struct dst_entry *ipv4_negative_advice(struct dst_entry *);
436:	static struct neighbour *ipv4_neigh_lookup(const struct dst_entry *, struct sk_buff *, const void *);
2594:	static u32 *ipv4_rt_blackhole_cow_metrics(struct dst_entry *, unsigned long);
2589:	static void ipv4_rt_blackhole_redirect(struct dst_entry *, struct sock *, struct sk_buff *);
2583:	static void ipv4_rt_blackhole_update_pmtu(struct dst_entry *, struct sock *, struct sk_buff *, u32, bool);
2994:	static int ipv4_sysctl_rtcache_flush(struct ctl_table *, int, void *, size_t *, loff_t *);
343:	static int rt_acct_proc_show(struct seq_file *, void *);
1484:	static bool rt_cache_route(struct fib_nh *, struct rtable *);
212:	static void *rt_cache_seq_next(struct seq_file *, void *, loff_t *);
239:	static int rt_cache_seq_open(struct inode *, struct file *);
222:	static int rt_cache_seq_show(struct seq_file *, void *);
205:	static void *rt_cache_seq_start(struct seq_file *, loff_t *);
218:	static void rt_cache_seq_stop(struct seq_file *, void *);
268:	static void *rt_cpu_seq_next(struct seq_file *, void *, loff_t *);
330:	static int rt_cpu_seq_open(struct inode *, struct file *);
288:	static int rt_cpu_seq_show(struct seq_file *, void *);
252:	static void *rt_cpu_seq_start(struct seq_file *, loff_t *);
3175:	static int rt_genid_init(struct net *);
1582:	static void rt_set_nexthop(struct rtable *, __be32, const struct fib_result *, struct fib_nh_exception *, struct fib_info *, u32, const bool, u16);
3159:	static void sysctl_route_net_exit(struct net *);
3131:	static int sysctl_route_net_init(struct net *);
649:	static void update_or_create_fnhe(struct fib_nh *, __be32, __be32, u32, bool, unsigned long);

File net/ipv4/syncookies.c:
194:	int __cookie_v4_check(const struct iphdr *, const struct tcphdr *, u32);
165:	u32 __cookie_v4_init_sequence(const struct iphdr *, const struct tcphdr *, u16 *);
269:	bool cookie_ecn_ok(const struct tcp_options_received *, const struct net *, const struct dst_entry *);
69:	u64 cookie_init_timestamp(struct request_sock *);
240:	bool cookie_timestamp_decode(const struct net *, struct tcp_options_received *);
288:	struct sock *cookie_v4_check(struct sock *, struct sk_buff *);
182:	__u32 cookie_v4_init_sequence(const struct sk_buff *, __u16 *);
205:	struct sock *tcp_get_cookie_sock(struct sock *, struct sk_buff *, struct request_sock *, struct dst_entry *, u32);
52:	static u32 cookie_hash(__be32, __be32, __be16, __be16, u32, int);

File net/ipv4/sysctl_net_ipv4.c:
208:	static int ipv4_fwd_update_priority(struct ctl_table *, int, void *, size_t *, loff_t *);
75:	static int ipv4_local_port_range(struct ctl_table *, int, void *, size_t *, loff_t *);
172:	static int ipv4_ping_group_range(struct ctl_table *, int, void *, size_t *, loff_t *);
111:	static int ipv4_privileged_ports(struct ctl_table *, int, void *, size_t *, loff_t *);
1341:	static void ipv4_sysctl_exit_net(struct net *);
1305:	static int ipv4_sysctl_init_net(struct net *);
262:	static int proc_allowed_congestion_control(struct ctl_table *, int, void *, size_t *, loff_t *);
425:	static int proc_fib_multipath_hash_policy(struct ctl_table *, int, void *, size_t *, loff_t *);
245:	static int proc_tcp_available_congestion_control(struct ctl_table *, int, void *, size_t *, loff_t *);
406:	static int proc_tcp_available_ulp(struct ctl_table *, int, void *, size_t *, loff_t *);
442:	static int proc_tcp_compression_ports(struct ctl_table *, int, void *, size_t *, loff_t *);
225:	static int proc_tcp_congestion_control(struct ctl_table *, int, void *, size_t *, loff_t *);
358:	static int proc_tcp_early_demux(struct ctl_table *, int, void *, size_t *, loff_t *);
282:	static int proc_tcp_fastopen_key(struct ctl_table *, int, void *, size_t *, loff_t *);
390:	static int proc_tfo_blackhole_detect_timeout(struct ctl_table *, int, void *, size_t *, loff_t *);
374:	static int proc_udp_early_demux(struct ctl_table *, int, void *, size_t *, loff_t *);
1356:	static int sysctl_ipv4_init(void);

File net/ipv4/tcp.c:
3641:	int compat_tcp_getsockopt(struct sock *, int, int, char *, int *);
3120:	int compat_tcp_setsockopt(struct sock *, int, int, char *, unsigned int);
968:	ssize_t do_tcp_sendpages(struct sock *, struct page *, int, size_t, int);
878:	struct sk_buff *sk_stream_alloc_skb(struct sock *, int, gfp_t, bool);
3808:	int tcp_abort(struct sock *, int);
3697:	bool tcp_alloc_md5sig_pool(void);
2329:	bool tcp_check_oom(struct sock *, int);
2343:	void tcp_close(struct sock *, long);
2558:	int tcp_disconnect(struct sock *, int);
3787:	void tcp_done(struct sock *);
328:	void tcp_enter_memory_pressure(struct sock *);
1152:	void tcp_free_fastopen_req(struct tcp_sock *);
3151:	void tcp_get_info(struct sock *, struct tcp_info *);
3719:	struct tcp_md5sig_pool *tcp_get_md5sig_pool(void);
3293:	struct sk_buff *tcp_get_timestamping_opt_stats(const struct sock *);
3628:	int tcp_getsockopt(struct sock *, int, int, char *, int *);
3880:	void tcp_init(void);
411:	void tcp_init_sock(struct sock *);
464:	void tcp_init_transfer(struct sock *, int);
620:	int tcp_ioctl(struct sock *, int, unsigned long);
343:	void tcp_leave_memory_pressure(struct sock *);
3772:	int tcp_md5_hash_key(struct tcp_md5sig_pool *, const struct tcp_md5sig_key *);
3733:	int tcp_md5_hash_skb_data(struct tcp_md5sig_pool *, const struct sk_buff *, unsigned int);
1756:	int tcp_mmap(struct file *, struct socket *, struct vm_area_struct *);
1719:	int tcp_peek_len(struct socket *);
518:	__poll_t tcp_poll(struct file *, struct socket *, poll_table *);
1647:	int tcp_read_sock(struct sock *, read_descriptor_t *, sk_read_actor_t);
1945:	int tcp_recvmsg(struct sock *, struct msghdr *, size_t, int, int, int *);
1462:	int tcp_sendmsg(struct sock *, struct msghdr *, size_t);
1205:	int tcp_sendmsg_locked(struct sock *, struct msghdr *, size_t);
1115:	int tcp_sendpage(struct sock *, struct page *, int, size_t, int);
1103:	int tcp_sendpage_locked(struct sock *, struct page *, int, size_t, int);
1726:	int tcp_set_rcvlowat(struct sock *, int);
2211:	void tcp_set_state(struct sock *, int);
3107:	int tcp_setsockopt(struct sock *, int, int, char *, unsigned int);
2309:	void tcp_shutdown(struct sock *, int);
789:	ssize_t tcp_splice_read(struct socket *, loff_t *, struct pipe_inode_info *, size_t, unsigned int);
2541:	void tcp_write_queue_purge(struct sock *);
3347:	static int do_tcp_getsockopt(struct sock *, int, char *, int *, int);
2751:	static int do_tcp_setsockopt(struct sock *, int, char *, unsigned int, int);
3855:	static int set_thash_entries(char *);
675:	static void skb_entail(struct sock *, struct sk_buff *);
1554:	static void tcp_cleanup_rbuf(struct sock *, int);
3131:	static void tcp_get_info_chrono_stats(const struct tcp_sock *, struct tcp_info *);
719:	static void tcp_push(struct sock *, int, int, int, int);
1612:	static struct sk_buff *tcp_recv_skb(struct sock *, u32, u32 *);
958:	static void tcp_remove_empty_skb(struct sock *, struct sk_buff *);
942:	static int tcp_send_mss(struct sock *, int *, int);
753:	static int tcp_splice_data_recv(read_descriptor_t *, struct sk_buff *, unsigned int, size_t);
477:	static void tcp_tx_timestamp(struct sock *, u16);

File net/ipv4/tcp_comp.c:
791:	void comp_setup_strp(struct sock *, struct tcp_comp_context *);
752:	bool comp_stream_read(const struct sock *);
900:	void tcp_cleanup_compression(struct sock *);
928:	int tcp_comp_init(void);
832:	void tcp_init_compression(struct sock *);
86:	bool tcp_syn_comp_enabled(const struct sock *);
94:	bool tcp_synack_comp_enabled(const struct sock *, const struct inet_request_sock *);
765:	static void comp_data_ready(struct sock *);
772:	static void comp_queue(struct strparser *, struct sk_buff *);
781:	static int comp_read_size(struct strparser *, struct sk_buff *);
888:	static void tcp_comp_context_free(struct callback_head *);
77:	static bool tcp_comp_enabled(__be32, __be32, int);
279:	static int tcp_comp_push_sg(struct sock *, struct scatterlist *, int);
694:	static int tcp_comp_recvmsg(struct sock *, struct msghdr *, size_t, int, int, int *);
396:	static int tcp_comp_sendmsg(struct sock *, struct msghdr *, size_t);
808:	static void tcp_comp_write_space(struct sock *);

File net/ipv4/tcp_cong.c:
156:	void tcp_assign_congestion_control(struct sock *);
53:	struct tcp_congestion_ops *tcp_ca_find_key(u32);
120:	u32 tcp_ca_get_key_by_name(struct net *, const char *, bool *);
139:	char *tcp_ca_get_name_by_key(u32, char *);
209:	void tcp_cleanup_congestion_control(struct sock *);
416:	void tcp_cong_avoid_ai(struct tcp_sock *, u32, u32);
283:	void tcp_get_allowed_congestion_control(char *, size_t);
257:	void tcp_get_available_congestion_control(char *, size_t);
272:	void tcp_get_default_congestion_control(struct net *, char *);
176:	void tcp_init_congestion_control(struct sock *);
69:	int tcp_register_congestion_control(struct tcp_congestion_ops *);
442:	void tcp_reno_cong_avoid(struct sock *, u32, u32);
461:	u32 tcp_reno_ssthresh(struct sock *);
469:	u32 tcp_reno_undo_cwnd(struct sock *);
301:	int tcp_set_allowed_congestion_control(char *);
344:	int tcp_set_congestion_control(struct sock *, const char *, bool, bool, bool);
219:	int tcp_set_default_congestion_control(struct net *, const char *);
402:	u32 tcp_slow_start(struct tcp_sock *, u32);
103:	void tcp_unregister_congestion_control(struct tcp_congestion_ops *);
36:	static struct tcp_congestion_ops *tcp_ca_find_autoload(const char *, struct net *);
249:	static int tcp_congestion_default(void);
189:	static void tcp_reinit_congestion_control(struct sock *, const struct tcp_congestion_ops *);

File net/ipv4/tcp_cubic.c:
431:	static void bictcp_acked(struct sock *, const struct ack_sample *);
334:	static void bictcp_cong_avoid(struct sock *, u32, u32);
152:	static void bictcp_cwnd_event(struct sock *, enum tcp_ca_event);
139:	static void bictcp_init(struct sock *);
353:	static u32 bictcp_recalc_ssthresh(struct sock *);
370:	static void bictcp_state(struct sock *, u8);
471:	static int cubictcp_register(void);
506:	static void cubictcp_unregister(void);

File net/ipv4/tcp_fastopen.c:
534:	void tcp_fastopen_active_detect_blackhole(struct sock *, bool);
453:	void tcp_fastopen_active_disable(struct sock *);
508:	void tcp_fastopen_active_disable_ofo_check(struct sock *);
473:	bool tcp_fastopen_active_should_disable(struct sock *);
175:	void tcp_fastopen_add_skb(struct sock *, struct sk_buff *);
379:	bool tcp_fastopen_cookie_check(struct sock *, u16 *, struct tcp_fastopen_cookie *);
54:	void tcp_fastopen_ctx_destroy(struct net *);
408:	bool tcp_fastopen_defer_connect(struct sock *, int *);
44:	void tcp_fastopen_destroy_cipher(struct sock *);
13:	void tcp_fastopen_init_key_once(struct net *);
69:	int tcp_fastopen_reset_cipher(struct net *, struct sock *, void *, unsigned int);
325:	struct sock *tcp_try_fastopen(struct sock *, struct sk_buff *, struct request_sock *, struct tcp_fastopen_cookie *, const struct dst_entry *);
36:	static void tcp_fastopen_ctx_free(struct callback_head *);
312:	static bool tcp_fastopen_no_cookie(const struct sock *, const struct dst_entry *, int);

File net/ipv4/tcp_input.c:
126:	void clean_acked_data_disable(struct inet_connection_sock *);
118:	void clean_acked_data_enable(struct inet_connection_sock *, void (*)(struct sock *, u32));
6401:	struct request_sock *inet_reqsk_alloc(const struct request_sock_ops *, struct sock *, bool);
1927:	void tcp_clear_retrans(struct tcp_sock *);
6472:	int tcp_conn_request(struct request_sock_ops *, const struct tcp_request_sock_ops *, struct sock *, struct sk_buff *);
2472:	void tcp_cwnd_reduction(struct sock *, int, int);
4743:	void tcp_data_ready(struct sock *);
2516:	void tcp_enter_cwr(struct sock *);
1983:	void tcp_enter_loss(struct sock *);
219:	void tcp_enter_quickack_mode(struct sock *, unsigned int);
2637:	void tcp_enter_recovery(struct sock *, bool);
4141:	void tcp_fin(struct sock *);
5729:	void tcp_finish_connect(struct sock *, struct sk_buff *);
433:	void tcp_init_buffer_space(struct sock *);
853:	__u32 tcp_init_cwnd(const struct tcp_sock *, const struct dst_entry *);
496:	void tcp_initialize_rcv_mss(struct sock *);
3436:	bool tcp_oow_rate_limited(struct net *, const struct sk_buff *, int, u32 *);
3997:	const u8 *tcp_parse_md5sig_option(const struct tcphdr *);
3826:	void tcp_parse_options(const struct net *, const struct sk_buff *, struct tcp_options_received *, int, struct tcp_fastopen_cookie *);
4883:	void tcp_rbtree_insert(struct rb_root *, struct sk_buff *);
5549:	void tcp_rcv_established(struct sock *, struct sk_buff *);
597:	void tcp_rcv_space_adjust(struct sock *);
6062:	int tcp_rcv_state_process(struct sock *, struct sk_buff *);
2986:	void tcp_rearm_rto(struct sock *);
4100:	void tcp_reset(struct sock *);
4691:	int tcp_send_rcvq(struct sock *, struct msghdr *, size_t);
2593:	void tcp_simple_retransmit(struct sock *);
942:	void tcp_skb_mark_lost_uncond_verify(struct tcp_sock *, struct sk_buff *);
1368:	int tcp_skb_shift(struct sk_buff *, struct sk_buff *, int, int);
2963:	void tcp_synack_rtt_meas(struct sock *, struct request_sock *);
5229:	static void __tcp_ack_snd_check(struct sock *, int);
267:	static void __tcp_ecn_check_ce(struct sock *, const struct sk_buff *);
3580:	static int tcp_ack(struct sock *, const struct sk_buff *, int);
2916:	static bool tcp_ack_update_rtt(struct sock *, const int, long, long, long, struct rate_sample *);
1888:	static void tcp_add_reno_sack(struct sock *, int);
2299:	static bool tcp_any_retrans_done(const struct sock *);
874:	static void tcp_check_sack_reordering(struct sock *, const u32, const int);
5205:	static void tcp_check_space(struct sock *);
3065:	static int tcp_clean_rtx_queue(struct sock *, u32, u32, struct tcp_sacktag_state *);
4910:	static void tcp_collapse(struct sock *, struct sk_buff_head *, struct rb_root *, struct sk_buff *, struct sk_buff *, u32, u32);
4865:	static struct sk_buff *tcp_collapse_one(struct sock *, struct sk_buff *, struct sk_buff_head *, struct rb_root *);
4756:	static void tcp_data_queue(struct sock *, struct sk_buff *);
4448:	static void tcp_drop(struct sock *, struct sk_buff *);
4243:	static void tcp_dsack_extend(struct sock *, u32, u32);
670:	static void tcp_event_data_recv(struct sock *, struct sk_buff *);
2786:	static void tcp_fastretrans_alert(struct sock *, const u32, int, int *, int *);
2766:	static bool tcp_force_fast_retransmit(struct sock *);
403:	static void tcp_grow_window(struct sock *, const struct sk_buff *, const struct sk_buff *);
2747:	static void tcp_identify_packet_loss(struct sock *, int *);
2184:	static void tcp_mark_head_lost(struct sock *, int, int);
1139:	static int tcp_match_skb_to_sack(struct sock *, struct sk_buff *, u32, u32);
3564:	static u32 tcp_newly_delivered(struct sock *, u32, int);
4431:	static bool tcp_ooo_try_coalesce(struct sock *, struct sk_buff *, struct sk_buff *, bool *);
3769:	static void tcp_parse_fastopen_option(int, const unsigned char *, bool, struct tcp_fastopen_cookie *, bool);
3504:	static void tcp_process_tlp_ack(struct sock *, u32, int);
5071:	static bool tcp_prune_ofo_queue(struct sock *);
4673:	static int tcp_queue_rcv(struct sock *, struct sk_buff *, int, bool *);
1188:	static u8 tcp_sacktag_one(struct sock *, struct tcp_sacktag_state *, u8, u32, u32, int, int, u64);
1522:	static struct sk_buff *tcp_sacktag_walk(struct sk_buff *, struct sock *, struct tcp_sack_block *, struct tcp_sacktag_state *, u32, u32, bool);
1652:	static int tcp_sacktag_write_queue(struct sock *, const struct sk_buff *, u32, struct tcp_sacktag_state *);
3448:	static void tcp_send_challenge_ack(struct sock *, const struct sk_buff *);
4253:	static void tcp_send_dupack(struct sock *, const struct sk_buff *);
1272:	static bool tcp_shifted_skb(struct sock *, struct sk_buff *, struct sk_buff *, struct tcp_sacktag_state *, unsigned int, int, int, bool);
329:	static void tcp_sndbuf_expand(struct sock *);
4394:	static bool tcp_try_coalesce(struct sock *, struct sk_buff *, struct sk_buff *, bool *);
2529:	static void tcp_try_keep_open(struct sock *);
4511:	static int tcp_try_rmem_schedule(struct sock *, struct sk_buff *, unsigned int);
2427:	static bool tcp_try_undo_loss(struct sock *, bool);
2376:	static bool tcp_try_undo_recovery(struct sock *);
2341:	static void tcp_undo_cwnd_reduction(struct sock *, bool);
789:	static void tcp_update_pacing_rate(struct sock *);
5373:	static void tcp_urg(struct sock *, struct sk_buff *, const struct tcphdr *);
5418:	static bool tcp_validate_incoming(struct sock *, struct sk_buff *, const struct tcphdr *, int);
3546:	static void tcp_xmit_recovery(struct sock *, int);

File net/ipv4/tcp_ipv4.c:
622:	void __tcp_v4_send_check(struct sk_buff *, __be32, __be32);
2010:	void inet_sk_rx_dst_set(struct sock *, const struct sk_buff *);
2543:	void tcp4_proc_exit(void);
2538:	int tcp4_proc_init(void);
1631:	bool tcp_add_backlog(struct sock *, struct sk_buff *);
1749:	int tcp_filter(struct sock *, struct sk_buff *);
1058:	int tcp_md5_do_add(struct sock *, const union tcp_md5_addr *, int, u8, const u8 *, u8, gfp_t);
1116:	int tcp_md5_do_del(struct sock *, const union tcp_md5_addr *, int, u8);
977:	struct tcp_md5sig_key *tcp_md5_do_lookup(const struct sock *, const union tcp_md5_addr *, int);
389:	void tcp_req_err(struct sock *, u32, bool);
2327:	void *tcp_seq_next(struct seq_file *, void *, loff_t *);
2304:	void *tcp_seq_start(struct seq_file *, loff_t *);
2358:	void tcp_seq_stop(struct seq_file *, void *);
111:	int tcp_twsk_unique(struct sock *, struct sock *, void *);
1391:	int tcp_v4_conn_request(struct sock *, struct sk_buff *);
204:	int tcp_v4_connect(struct sock *, struct sockaddr *, int);
2067:	void tcp_v4_destroy_sock(struct sock *);
1531:	int tcp_v4_do_rcv(struct sock *, struct sk_buff *);
1593:	int tcp_v4_early_demux(struct sk_buff *);
429:	void tcp_v4_err(struct sk_buff *, u32);
2735:	void tcp_v4_init(void);
1238:	int tcp_v4_md5_hash_skb(char *, const struct tcp_md5sig_key *, const struct sock *, const struct sk_buff *);
1047:	struct tcp_md5sig_key *tcp_v4_md5_lookup(const struct sock *, const struct sock *);
343:	void tcp_v4_mtu_reduced(struct sock *);
1789:	int tcp_v4_rcv(struct sk_buff *);
632:	void tcp_v4_send_check(struct sock *, struct sk_buff *);
1411:	struct sock *tcp_v4_syn_recv_sock(const struct sock *, struct sk_buff *, struct request_sock *, struct dst_entry *, struct request_sock *, bool *);
2183:	static void *established_get_first(struct seq_file *, struct seq_file *);
2215:	static void *established_get_next(struct seq_file *, void *);
2122:	static void *listening_get_next(void *, struct seq_file *, struct seq_file *);
2528:	static void tcp4_proc_exit_net(struct net *);
2520:	static int tcp4_proc_init_net(struct net *);
2484:	static int tcp4_seq_show(struct seq_file *, void *);
2254:	static void *tcp_get_idx(struct seq_file *, loff_t);
1019:	static struct tcp_md5sig_key *tcp_md5_do_lookup_exact(const struct sock *, const union tcp_md5_addr *, int, u8);
2597:	static void tcp_sk_exit(struct net *);
2719:	static void tcp_sk_exit_batch(struct list_head *);
2609:	static int tcp_sk_init(struct net *);
1763:	static void tcp_v4_fill_cb(struct sk_buff *, const struct iphdr *, const struct tcphdr *);
1288:	static bool tcp_v4_inbound_md5_hash(const struct sock *, const struct sk_buff *);
1346:	static void tcp_v4_init_req(struct request_sock *, const struct sock *, struct sk_buff *);
98:	static u32 tcp_v4_init_seq(const struct sk_buff *);
2052:	static int tcp_v4_init_sock(struct sock *);
106:	static u32 tcp_v4_init_ts_off(const struct net *, const struct sk_buff *);
1207:	static int tcp_v4_md5_hash_hdr(char *, const struct tcp_md5sig_key *, __be32, __be32, const struct tcphdr *);
1182:	static int tcp_v4_md5_hash_headers(struct tcp_md5sig_pool *, __be32, __be32, const struct tcphdr *, int);
1147:	static int tcp_v4_parse_md5_keys(struct sock *, int, char *, int);
188:	static int tcp_v4_pre_connect(struct sock *, struct sockaddr *, int);
964:	static void tcp_v4_reqsk_destructor(struct request_sock *);
899:	static void tcp_v4_reqsk_send_ack(const struct sock *, struct sk_buff *, struct request_sock *);
1757:	static void tcp_v4_restore_cb(struct sk_buff *);
1358:	static struct dst_entry *tcp_v4_route_req(const struct sock *, struct flowi *, const struct request_sock *);
798:	static void tcp_v4_send_ack(const struct sock *, struct sk_buff *, u32, u32, u32, u32, u32, int, struct tcp_md5sig_key *, int, u8);
653:	static void tcp_v4_send_reset(const struct sock *, struct sk_buff *);
930:	static int tcp_v4_send_synack(const struct sock *, struct dst_entry *, struct flowi *, struct request_sock *, struct tcp_fastopen_cookie *, enum tcp_synack_type);

File net/ipv4/tcp_metrics.c:
548:	void tcp_fastopen_cache_get(struct sock *, u16 *, struct tcp_fastopen_cookie *);
571:	void tcp_fastopen_cache_set(struct sock *, u16, struct tcp_fastopen_cookie *, bool, u16);
440:	void tcp_init_metrics(struct sock *);
1029:	void tcp_metrics_init(void);
527:	bool tcp_peer_is_proven(struct request_sock *, struct dst_entry *);
320:	void tcp_update_metrics(struct sock *);
782:	static int __parse_nl_addr(struct inetpeer_addr *, unsigned int *, int, int, int, struct genl_info *);
211:	static struct tcp_metrics_block *__tcp_get_metrics(const struct inetpeer_addr *, const struct inetpeer_addr *, struct net *, unsigned int);
978:	static int set_tcpmhash_entries(char *);
271:	static struct tcp_metrics_block *tcp_get_metrics(struct sock *, struct dst_entry *, bool);
626:	static int tcp_metrics_fill_info(struct sk_buff *, struct tcp_metrics_block *);
880:	static void tcp_metrics_flush_all(struct net *);
907:	static int tcp_metrics_nl_cmd_del(struct sk_buff *, struct genl_info *);
824:	static int tcp_metrics_nl_cmd_get(struct sk_buff *, struct genl_info *);
749:	static int tcp_metrics_nl_dump(struct sk_buff *, struct netlink_callback *);
1019:	static void tcp_net_metrics_exit_batch(struct list_head *);
993:	static int tcp_net_metrics_init(struct net *);
134:	static void tcpm_check_stamp(struct tcp_metrics_block *, struct dst_entry *);
93:	static void tcpm_suck_dst(struct tcp_metrics_block *, const struct dst_entry *, bool);

File net/ipv4/tcp_minisocks.c:
398:	void tcp_ca_openreq_child(struct sock *, const struct dst_entry *);
590:	struct sock *tcp_check_req(struct sock *, struct sk_buff *, struct request_sock *, bool, bool *);
843:	int tcp_child_process(struct sock *, struct sock *, struct sk_buff *);
448:	struct sock *tcp_create_openreq_child(const struct sock *, struct request_sock *, struct sk_buff *);
352:	void tcp_openreq_init_rwin(struct request_sock *, const struct sock *, const struct dst_entry *);
252:	void tcp_time_wait(struct sock *, int, int);
91:	enum tcp_tw_status tcp_timewait_state_process(struct inet_timewait_sock *, struct sk_buff *, const struct tcphdr *);
338:	void tcp_twsk_destructor(struct sock *);

File net/ipv4/tcp_offload.c:
291:	int tcp_gro_complete(struct sk_buff *);
183:	struct sk_buff *tcp_gro_receive(struct list_head *, struct sk_buff *);
57:	struct sk_buff *tcp_gso_segment(struct sk_buff *, netdev_features_t);
344:	int tcpv4_offload_init(void);
321:	static int tcp4_gro_complete(struct sk_buff *, int);
308:	static struct sk_buff *tcp4_gro_receive(struct list_head *, struct sk_buff *);
32:	static struct sk_buff *tcp4_gso_segment(struct sk_buff *, netdev_features_t);

File net/ipv4/tcp_output.c:
2615:	void __tcp_push_pending_frames(struct sock *, unsigned int, int);
2890:	int __tcp_retransmit_skb(struct sock *, struct sk_buff *, int);
2694:	u32 __tcp_select_window(struct sock *);
3663:	void __tcp_send_ack(struct sock *, u32);
3108:	void sk_forced_mem_schedule(struct sock *, int);
2309:	void tcp_chrono_start(struct sock *, const enum tcp_chrono);
2322:	void tcp_chrono_stop(struct sock *, const enum tcp_chrono);
3551:	int tcp_connect(struct sock *);
1617:	unsigned int tcp_current_mss(struct sock *);
128:	void tcp_cwnd_restart(struct sock *, s32);
1327:	int tcp_fragment(struct sock *, enum tcp_queue, struct sk_buff *, u32, unsigned int, gfp_t);
3253:	struct sk_buff *tcp_make_synack(const struct sock *, struct dst_entry *, struct request_sock *, struct tcp_fastopen_cookie *, enum tcp_synack_type);
1531:	int tcp_mss_to_mtu(struct sock *, int);
1522:	int tcp_mtu_to_mss(struct sock *, int);
1554:	void tcp_mtup_init(struct sock *);
1011:	enum hrtimer_restart tcp_pace_kick(struct hrtimer *);
2633:	void tcp_push_one(struct sock *, unsigned int);
900:	void tcp_release_cb(struct sock *);
3001:	int tcp_retransmit_skb(struct sock *, struct sk_buff *, int);
3833:	int tcp_rtx_synack(const struct sock *, struct request_sock *);
2481:	bool tcp_schedule_loss_probe(struct sock *, bool);
192:	void tcp_select_initial_window(const struct sock *, int, __u32, __u32 *, __u32 *, int, __u8 *, __u32);
3700:	void tcp_send_ack(struct sock *);
3176:	void tcp_send_active_reset(struct sock *, gfp_t);
3609:	void tcp_send_delayed_ack(struct sock *);
3125:	void tcp_send_fin(struct sock *);
2548:	void tcp_send_loss_probe(struct sock *);
3795:	void tcp_send_probe0(struct sock *);
3210:	int tcp_send_synack(struct sock *);
3739:	void tcp_send_window_probe(struct sock *);
2772:	void tcp_skb_collapse_tstamp(struct sk_buff *, const struct sk_buff *);
1592:	unsigned int tcp_sync_mss(struct sock *, u32);
942:	void tcp_tasklet_init(void);
1463:	int tcp_trim_head(struct sock *, struct sk_buff *, u32);
961:	void tcp_wfree(struct sk_buff *);
3749:	int tcp_write_wakeup(struct sock *, int);
3031:	void tcp_xmit_retransmit_queue(struct sock *);
1424:	static int __pskb_trim_head(struct sk_buff *, int);
1490:	static int __tcp_mtu_to_mss(struct sock *, int);
1058:	static int __tcp_transmit_skb(struct sock *, struct sk_buff *, int, gfp_t, u32);
1256:	static void tcp_adjust_pcount(struct sock *, const struct sk_buff *, int);
766:	static unsigned int tcp_established_options(struct sock *, struct sk_buff *, struct tcp_out_options *, struct tcp_md5sig_key **);
52:	static void tcp_event_new_data_sent(struct sock *, struct sk_buff *);
1287:	static void tcp_fragment_tstamp(struct sk_buff *, struct sk_buff *);
458:	static void tcp_options_write(__be32 *, struct tcp_sock *, struct tcp_out_options *);
2267:	static bool tcp_small_queue_check(struct sock *, unsigned int, const struct sk_buff *);
863:	static void tcp_tasklet_func(unsigned long);
848:	static void tcp_tsq_handler(struct sock *);
830:	static void tcp_tsq_write(struct sock *);
2354:	static bool tcp_write_xmit(struct sock *, unsigned int, int, int, gfp_t);
3716:	static int tcp_xmit_probe_skb(struct sock *, int, int);

File net/ipv4/tcp_rate.c:
181:	void tcp_rate_check_app_limited(struct sock *);
108:	void tcp_rate_gen(struct sock *, u32, u32, bool, struct rate_sample *);
75:	void tcp_rate_skb_delivered(struct sock *, struct sk_buff *, struct rate_sample *);
39:	void tcp_rate_skb_sent(struct sock *, struct sk_buff *);

File net/ipv4/tcp_recovery.c:
5:	void tcp_mark_skb_lost(struct sock *, struct sk_buff *);
231:	void tcp_newreno_mark_lost(struct sock *, bool);
135:	void tcp_rack_advance(struct tcp_sock *, u8, u32, u64);
112:	bool tcp_rack_mark_lost(struct sock *);
166:	void tcp_rack_reo_timeout(struct sock *);
50:	s32 tcp_rack_skb_timeout(struct tcp_sock *, struct sk_buff *, u32);
202:	void tcp_rack_update_reo_wnd(struct sock *, struct rate_sample *);
76:	static void tcp_rack_detect_loss(struct sock *, u32 *);

File net/ipv4/tcp_timer.c:
270:	void tcp_delack_timer_handler(struct sock *);
752:	void tcp_init_xmit_timers(struct sock *);
426:	void tcp_retransmit_timer(struct sock *);
631:	void tcp_set_keepalive(struct sock *, int);
623:	void tcp_syn_ack_timeout(const struct request_sock *);
567:	void tcp_write_timer_handler(struct sock *);
190:	static bool retransmits_timed_out(struct sock *, unsigned int, unsigned int);
731:	static enum hrtimer_restart tcp_compressed_ack_kick(struct hrtimer *);
317:	static void tcp_delack_timer(struct timer_list *);
644:	static void tcp_keepalive_timer(struct timer_list *);
83:	static int tcp_out_of_resources(struct sock *, bool);
49:	static void tcp_write_err(struct sock *);
605:	static void tcp_write_timer(struct timer_list *);

File net/ipv4/tcp_ulp.c:
122:	void tcp_cleanup_ulp(struct sock *);
107:	void tcp_get_available_ulp(char *, size_t);
81:	int tcp_register_ulp(struct tcp_ulp_ops *);
137:	int tcp_set_ulp(struct sock *, const char *);
165:	int tcp_set_ulp_id(struct sock *, int);
96:	void tcp_unregister_ulp(struct tcp_ulp_ops *);

File net/ipv4/udp.c:
1589:	struct sk_buff *__skb_recv_udp(struct sock *, unsigned int, int, int *, int *, int *);
604:	void __udp4_lib_err(struct sk_buff *, u32, struct udp_table *);
465:	struct sock *__udp4_lib_lookup(struct net *, __be32, __be16, __be32, __be16, int, int, struct udp_table *, struct sk_buff *);
2201:	int __udp4_lib_rcv(struct sk_buff *, struct udp_table *, int);
1785:	int __udp_disconnect(struct sock *, int);
1384:	int __udp_enqueue_schedule_skb(struct sock *, struct sk_buff *);
2633:	int compat_udp_getsockopt(struct sock *, int, int, char *, int *);
2557:	int compat_udp_setsockopt(struct sock *, int, int, char *, unsigned int);
1484:	void skb_consume_udp(struct sock *, struct sk_buff *, int);
703:	void udp4_hwcsum(struct sk_buff *, __be32, __be32);
558:	struct sock *udp4_lib_lookup(struct net *, __be32, __be16, __be32, __be16, int);
543:	struct sock *udp4_lib_lookup_skb(struct sk_buff *, __be16, __be16);
2893:	void udp4_proc_exit(void);
2888:	int udp4_proc_init(void);
2841:	int udp4_seq_show(struct seq_file *, void *);
2672:	int udp_abort(struct sock *, int);
895:	int udp_cmsg_send(struct sock *, struct msghdr *, u16 *);
2428:	void udp_destroy_sock(struct sock *);
1458:	void udp_destruct_sock(struct sock *);
1809:	int udp_disconnect(struct sock *, int);
1925:	void udp_encap_enable(void);
676:	void udp_err(struct sk_buff *, u32);
2944:	u32 udp_flow_hashrnd(void);
684:	void udp_flush_pending_frames(struct sock *);
2624:	int udp_getsockopt(struct sock *, int, int, char *, int *);
2974:	void udp_init(void);
1476:	int udp_init_sock(struct sock *);
1564:	int udp_ioctl(struct sock *, int, unsigned long);
240:	int udp_lib_get_port(struct sock *, unsigned short, unsigned int);
2567:	int udp_lib_getsockopt(struct sock *, int, int, char *, int *);
1849:	void udp_lib_rehash(struct sock *, u16);
2448:	int udp_lib_setsockopt(struct sock *, int, int, char *, unsigned int, int (*)(struct sock *));
1818:	void udp_lib_unhash(struct sock *);
2654:	__poll_t udp_poll(struct file *, struct socket *, poll_table *);
1772:	int udp_pre_connect(struct sock *, struct sockaddr *, int);
861:	int udp_push_pending_frames(struct sock *);
2423:	int udp_rcv(struct sk_buff *);
1665:	int udp_recvmsg(struct sock *, struct msghdr *, size_t, int, int, int *);
919:	int udp_sendmsg(struct sock *, struct msghdr *, size_t);
1199:	int udp_sendpage(struct sock *, struct page *, int, size_t, int);
2795:	void *udp_seq_next(struct seq_file *, void *, loff_t *);
2786:	void *udp_seq_start(struct seq_file *, loff_t *);
2809:	void udp_seq_stop(struct seq_file *, void *);
745:	void udp_set_csum(bool, struct sk_buff *, __be32, __be32, int);
2547:	int udp_setsockopt(struct sock *, int, int, char *, unsigned int);
2045:	bool udp_sk_rx_dst_set(struct sock *, struct dst_entry *);
1345:	void udp_skb_destructor(struct sock *, struct sk_buff *);
2917:	void udp_table_init(struct udp_table *, const char *);
2355:	int udp_v4_early_demux(struct sk_buff *);
355:	int udp_v4_get_port(struct sock *, unsigned short);
1505:	static struct sk_buff *__first_packet_length(struct sock *, struct sk_buff_head *, int *);
1378:	static void busylock_release(spinlock_t *);
367:	static int compute_score(struct sock *, struct net *, __be32, __be16, __be32, unsigned short, int, int, bool);
1536:	static int first_packet_length(struct sock *);
2900:	static int set_uhash_entries(char *);
426:	static struct sock *udp4_lib_lookup2(struct net *, __be32, __be16, __be32, unsigned int, int, int, bool, struct udp_hslot *, struct sk_buff *);
2878:	static void udp4_proc_exit_net(struct net *);
2870:	static int udp4_proc_init_net(struct net *);
413:	static u32 udp_ehashfn(const struct net *, const __be32, const __u16, const __be32, const __be16);
2730:	static struct sock *udp_get_first(int, struct seq_file *, struct seq_file *);
2776:	static struct sock *udp_get_idx(struct seq_file *, loff_t);
2758:	static struct sock *udp_get_next(struct seq_file *, struct sock *);
142:	static int udp_lib_lport_inuse(struct net *, __u16, const struct udp_hslot *, unsigned long *, struct sock *, unsigned int);
178:	static int udp_lib_lport_inuse2(struct net *, __u16, struct udp_hslot *, struct sock *);
1939:	static int udp_queue_rcv_skb(struct sock *, struct sk_buff *);
1298:	static void udp_rmem_release(struct sock *, int, int, bool);
768:	static int udp_send_skb(struct sk_buff *, struct flowi4 *, struct inet_cork *, struct inet_cork *);
1353:	static void udp_skb_dtor_locked(struct sock *, struct sk_buff *);
2964:	static int udp_sysctl_init(struct net *);
2178:	static int udp_unicast_rcv_skb(struct sock *, struct sk_buff *, struct udphdr *);
1887:	static void udp_v4_rehash(struct sock *);

File net/ipv4/udp_offload.c:
190:	struct sk_buff *__udp_gso_segment(struct sk_buff *, netdev_features_t);
151:	struct sk_buff *skb_udp_tunnel_segment(struct sk_buff *, netdev_features_t, bool);
435:	int udp_gro_complete(struct sk_buff *, int, udp_lookup_t);
351:	struct sk_buff *udp_gro_receive(struct list_head *, struct sk_buff *, struct udphdr *, udp_lookup_t);
488:	int udpv4_offload_init(void);
464:	static int udp4_gro_complete(struct sk_buff *, int);
408:	static struct sk_buff *udp4_gro_receive(struct list_head *, struct sk_buff *);
291:	static struct sk_buff *udp4_ufo_fragment(struct sk_buff *, netdev_features_t);

File net/ipv4/udplite.c:
111:	void udplite4_register(void);
90:	static void udplite4_proc_exit_net(struct net *);
82:	static int udplite4_proc_init_net(struct net *);
28:	static void udplite_err(struct sk_buff *, u32);
23:	static int udplite_rcv(struct sk_buff *);

File net/ipv4/xfrm4_input.c:
21:	int xfrm4_extract_input(struct xfrm_state *, struct sk_buff *);
173:	int xfrm4_rcv(struct sk_buff *);
52:	int xfrm4_transport_finish(struct sk_buff *, int);
87:	int xfrm4_udp_encap_rcv(struct sock *, struct sk_buff *);
32:	static int xfrm4_rcv_encap_finish(struct net *, struct sock *, struct sk_buff *);
26:	static int xfrm4_rcv_encap_finish2(struct net *, struct sock *, struct sk_buff *);

File net/ipv4/xfrm4_output.c:
48:	int xfrm4_extract_output(struct xfrm_state *, struct sk_buff *);
107:	void xfrm4_local_error(struct sk_buff *, u32);
99:	int xfrm4_output(struct net *, struct sock *, struct sk_buff *);
76:	int xfrm4_output_finish(struct sock *, struct sk_buff *);
61:	int xfrm4_prepare_output(struct xfrm_state *, struct sk_buff *);
85:	static int __xfrm4_output(struct net *, struct sock *, struct sk_buff *);

File net/ipv4/xfrm4_policy.c:
380:	void xfrm4_init(void);
21:	static struct dst_entry *__xfrm4_dst_lookup(struct net *, struct flowi4 *, int, int, const xfrm_address_t *, u32, const xfrm_address_t *);
111:	static void _decode_session4(struct sk_buff *, struct flowi *, int);
243:	static void xfrm4_dst_destroy(struct dst_entry *);
253:	static void xfrm4_dst_ifdown(struct dst_entry *, struct net_device *, int);
46:	static struct dst_entry *xfrm4_dst_lookup(struct net *, int, int, const xfrm_address_t *, const xfrm_address_t *, u32);
83:	static int xfrm4_fill_dst(struct xfrm_dst *, struct net_device *, const struct flowi *);
56:	static int xfrm4_get_saddr(struct net *, int, xfrm_address_t *, xfrm_address_t *, u32);
72:	static int xfrm4_get_tos(const struct flowi *);
77:	static int xfrm4_init_path(struct xfrm_dst *, struct dst_entry *, int);
364:	static void xfrm4_net_exit(struct net *);
347:	static int xfrm4_net_init(struct net *);
234:	static void xfrm4_redirect(struct dst_entry *, struct sock *, struct sk_buff *);
224:	static void xfrm4_update_pmtu(struct dst_entry *, struct sock *, struct sk_buff *, u32, bool);

File net/ipv4/xfrm4_protocol.c:
257:	int xfrm4_protocol_deregister(struct xfrm4_protocol *, unsigned char);
296:	void xfrm4_protocol_init(void);
210:	int xfrm4_protocol_register(struct xfrm4_protocol *, unsigned char);
49:	int xfrm4_rcv_cb(struct sk_buff *, u8, int);
66:	int xfrm4_rcv_encap(struct sk_buff *, int, __be32, int);
135:	static void xfrm4_ah_err(struct sk_buff *, u32);
118:	static int xfrm4_ah_rcv(struct sk_buff *);
109:	static void xfrm4_esp_err(struct sk_buff *, u32);
92:	static int xfrm4_esp_rcv(struct sk_buff *);
161:	static void xfrm4_ipcomp_err(struct sk_buff *, u32);
144:	static int xfrm4_ipcomp_rcv(struct sk_buff *);

File net/ipv4/xfrm4_state.c:
58:	int xfrm4_extract_header(struct sk_buff *);
90:	void xfrm4_state_init(void);
26:	static void __xfrm4_init_tempsel(struct xfrm_selector *, const struct flowi *);
18:	static int xfrm4_init_flags(struct xfrm_state *);
44:	static void xfrm4_init_temprop(struct xfrm_state *, const struct xfrm_tmpl *, const xfrm_address_t *, const xfrm_address_t *);

File net/ipv6/addrconf.c:
1790:	int __ipv6_get_lladdr(struct inet6_dev *, struct in6_addr *, u32);
2975:	int addrconf_add_ifaddr(struct net *, void *);
3118:	void addrconf_add_linklocal(struct inet6_dev *, const struct in6_addr *, u32);
6854:	void addrconf_cleanup(void);
2018:	void addrconf_dad_failure(struct sk_buff *, struct inet6_ifaddr *);
3000:	int addrconf_del_ifaddr(struct net *, void *);
6744:	int addrconf_init(void);
2093:	void addrconf_join_solict(struct net_device *, const struct in6_addr *);
2105:	void addrconf_leave_solict(struct inet6_dev *, const struct in6_addr *);
2602:	void addrconf_prefix_rcv(struct net_device *, u8 *, int, bool);
2501:	int addrconf_prefix_rcv_add_addr(struct net *, struct net_device *, const struct prefix_info *, struct inet6_dev *, const struct in6_addr *, int, u32, bool, bool, __u32, u32);
2759:	int addrconf_set_dstaddr(struct net *, void *);
4324:	void if6_proc_exit(void);
4319:	int if6_proc_init(void);
899:	void inet6_ifa_finish_destroy(struct inet6_ifaddr *);
5612:	void inet6_ifinfo_notify(int, struct inet6_dev *);
569:	void inet6_netconf_notify_devconf(struct net *, int, int, int, struct ipv6_devconf *);
1838:	int ipv6_chk_addr(struct net *, const struct in6_addr *, const struct net_device *, int);
1855:	int ipv6_chk_addr_and_flags(struct net *, const struct in6_addr *, const struct net_device *, bool, int, u32);
1901:	bool ipv6_chk_custom_prefix(const struct in6_addr *, const unsigned int, struct net_device *);
4332:	int ipv6_chk_home_addr(struct net *, const struct in6_addr *);
1923:	int ipv6_chk_prefix(const struct in6_addr *, struct net_device *);
1692:	int ipv6_dev_get_saddr(struct net *, const struct net_device *, const struct in6_addr *, unsigned int, struct in6_addr *);
1945:	struct inet6_ifaddr *ipv6_get_ifaddr(struct net *, const struct in6_addr *, struct net_device *, int);
1809:	int ipv6_get_lladdr(struct net_device *, struct in6_addr *, u32);
6579:	static int __addrconf_sysctl_register(struct net *, char *, struct inet6_dev *, struct ipv6_devconf *);
6624:	static void __addrconf_sysctl_unregister(struct net *, int, struct ipv6_devconf *);
1598:	static int __ipv6_dev_get_saddr(struct net *, struct ipv6_saddr_dst *, struct inet6_dev *, struct ipv6_saddr_score *, int);
5708:	static void __ipv6_ifa_notify(int, struct inet6_ifaddr *);
2195:	static int __ipv6_isatap_ifid(u8 *, __be32);
5284:	static void __snmp6_fill_stats64(u64 *, void *, int, size_t);
3018:	static void add_addr(struct inet6_dev *, const struct in6_addr *, int, int);
2408:	static struct inet6_dev *addrconf_add_dev(struct net_device *);
2390:	static void addrconf_add_mroute(struct net_device *);
3237:	static void addrconf_addr_gen(struct inet6_dev *, bool);
4101:	static void addrconf_dad_completed(struct inet6_ifaddr *, bool, bool);
3865:	static void addrconf_dad_kick(struct inet6_ifaddr *);
4175:	static void addrconf_dad_run(struct inet6_dev *, bool);
3959:	static void addrconf_dad_start(struct inet6_ifaddr *);
1971:	static void addrconf_dad_stop(struct inet6_ifaddr *, int);
3974:	static void addrconf_dad_work(struct work_struct *);
310:	static void addrconf_del_dad_work(struct inet6_ifaddr *);
3281:	static void addrconf_dev_config(struct net_device *);
6107:	static void addrconf_disable_policy_idev(struct inet6_dev *, int);
6715:	static void addrconf_exit_net(struct net *);
2352:	static struct fib6_info *addrconf_get_prefix_route(const struct in6_addr *, int, const struct net_device *, u32, u32);
3653:	static int addrconf_ifdown(struct net_device *, int);
6669:	static int addrconf_init_net(struct net *);
2117:	static void addrconf_join_anycast(struct inet6_ifaddr *);
2130:	static void addrconf_leave_anycast(struct inet6_ifaddr *);
324:	static void addrconf_mod_dad_work(struct inet6_ifaddr *, unsigned long);
316:	static void addrconf_mod_rs_timer(struct inet6_dev *, unsigned long);
3433:	static int addrconf_notify(struct notifier_block *, unsigned long, void *);
2321:	static void addrconf_prefix_route(struct in6_addr *, int, u32, struct net_device *, unsigned long, u32, gfp_t);
3815:	static void addrconf_rs_timer(struct timer_list *);
5939:	static int addrconf_sysctl_addr_gen_mode(struct ctl_table *, int, void *, size_t *, loff_t *);
5872:	static int addrconf_sysctl_disable(struct ctl_table *, int, void *, size_t *, loff_t *);
6170:	static int addrconf_sysctl_disable_policy(struct ctl_table *, int, void *, size_t *, loff_t *);
5774:	static int addrconf_sysctl_forward(struct ctl_table *, int, void *, size_t *, loff_t *);
6068:	static int addrconf_sysctl_ignore_routes_with_linkdown(struct ctl_table *, int, void *, size_t *, loff_t *);
5800:	static int addrconf_sysctl_mtu(struct ctl_table *, int, void *, size_t *, loff_t *);
5898:	static int addrconf_sysctl_proxy_ndp(struct ctl_table *, int, void *, size_t *, loff_t *);
6640:	static int addrconf_sysctl_register(struct inet6_dev *);
6001:	static int addrconf_sysctl_stable_secret(struct ctl_table *, int, void *, size_t *, loff_t *);
6659:	static void addrconf_sysctl_unregister(struct inet6_dev *);
4357:	static void addrconf_verify_rtnl(void);
4474:	static void addrconf_verify_work(struct work_struct *);
1140:	static enum cleanup_prefix_rt_t check_cleanup_prefix_route(struct inet6_ifaddr *, unsigned long *);
1178:	static void cleanup_prefix_route(struct inet6_ifaddr *, unsigned long, bool, bool);
5814:	static void dev_disable_change(struct inet6_dev *);
738:	static void dev_forward_change(struct inet6_dev *);
4486:	static struct in6_addr *extract_addr(struct nlattr *, struct nlattr *, struct in6_addr **);
4309:	static void if6_proc_net_exit(struct net *);
4301:	static int if6_proc_net_init(struct net *);
4266:	static void *if6_seq_next(struct seq_file *, void *, loff_t *);
4281:	static int if6_seq_show(struct seq_file *, void *);
4259:	static void *if6_seq_start(struct seq_file *, loff_t *);
4275:	static void if6_seq_stop(struct seq_file *, void *);
2840:	static int inet6_addr_add(struct net *, int, struct ifa6_config *, struct netlink_ext_ack *);
2932:	static int inet6_addr_del(struct net *, int, u32, const struct in6_addr *, unsigned int);
5025:	static int inet6_dump_addr(struct sk_buff *, struct netlink_callback *, enum addr_type_t);
5086:	static int inet6_dump_ifacaddr(struct sk_buff *, struct netlink_callback *);
5071:	static int inet6_dump_ifaddr(struct sk_buff *, struct netlink_callback *);
5573:	static int inet6_dump_ifinfo(struct sk_buff *, struct netlink_callback *);
5078:	static int inet6_dump_ifmcaddr(struct sk_buff *, struct netlink_callback *);
4835:	static int inet6_fill_ifaddr(struct sk_buff *, struct inet6_ifaddr *, u32, u32, int, unsigned int);
5528:	static int inet6_fill_ifinfo(struct sk_buff *, struct inet6_dev *, u32, u32, int, unsigned int);
5319:	static int inet6_fill_ifla6_attrs(struct sk_buff *, struct inet6_dev *, u32);
5379:	static int inet6_fill_link_af(struct sk_buff *, const struct net_device *, u32);
5370:	static size_t inet6_get_link_af_size(const struct net_device *, u32);
666:	static int inet6_netconf_dump_devconf(struct sk_buff *, struct netlink_callback *);
516:	static int inet6_netconf_fill_devconf(struct sk_buff *, int, struct ipv6_devconf *, u32, u32, int, unsigned int, int);
600:	static int inet6_netconf_get_devconf(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
4514:	static int inet6_rtm_deladdr(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
5093:	static int inet6_rtm_getaddr(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
4699:	static int inet6_rtm_newaddr(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
5496:	static int inet6_set_link_af(struct net_device *, const struct nlattr *);
5464:	static int inet6_validate_link_af(const struct net_device *, const struct nlattr *);
987:	static struct inet6_ifaddr *ipv6_add_addr(struct inet6_dev *, struct ifa6_config *, bool, struct netlink_ext_ack *);
366:	static struct inet6_dev *ipv6_add_dev(struct net_device *);
1257:	static int ipv6_create_tempaddr(struct inet6_ifaddr *, struct inet6_ifaddr *, bool);
1201:	static void ipv6_del_addr(struct inet6_ifaddr *);
474:	static struct inet6_dev *ipv6_find_idev(struct net_device *);
2234:	static int ipv6_generate_eui64(u8 *, struct net_device *);
3164:	static int ipv6_generate_stable_address(struct in6_addr *, u8, const struct inet6_dev *);
1464:	static int ipv6_get_saddr_eval(struct net *, struct ipv6_saddr_score *, struct ipv6_saddr_dst *, int);
5763:	static void ipv6_ifa_notify(int, struct inet6_ifaddr *);
2820:	static int ipv6_mc_config(struct sock *, bool, const struct in6_addr *, int);
2281:	static void ipv6_regen_rndid(struct inet6_dev *);
2428:	static void manage_tempaddrs(struct inet6_dev *, struct inet6_ifaddr *, __u32, __u32, bool, unsigned long);
4543:	static int modify_prefix_route(struct inet6_ifaddr *, unsigned long, u32, bool);
4800:	static int put_cacheinfo(struct sk_buff *, unsigned long, unsigned long, u32, u32);

File net/ipv6/addrconf_core.c:
36:	int __ipv6_addr_type(const struct in6_addr *);
215:	void in6_dev_finish_destroy(struct inet6_dev *);
105:	int inet6addr_notifier_call_chain(unsigned long, void *);
124:	int inet6addr_validator_notifier_call_chain(unsigned long, void *);
93:	int register_inet6addr_notifier(struct notifier_block *);
111:	int register_inet6addr_validator_notifier(struct notifier_block *);
99:	int unregister_inet6addr_notifier(struct notifier_block *);
117:	int unregister_inet6addr_validator_notifier(struct notifier_block *);
138:	static struct fib6_table *eafnosupport_fib6_get_table(struct net *, u32);
151:	static struct fib6_info *eafnosupport_fib6_lookup(struct net *, int, struct flowi6 *, int);
158:	static struct fib6_info *eafnosupport_fib6_multipath_select(const struct net *, struct fib6_info *, struct flowi6 *, int, const struct sk_buff *, int);
144:	static struct fib6_info *eafnosupport_fib6_table_lookup(struct net *, struct fib6_table *, int, struct flowi6 *, int);
166:	static u32 eafnosupport_ip6_mtu_from_fib6(struct fib6_info *, struct in6_addr *, struct in6_addr *);
130:	static struct dst_entry *eafnosupport_ipv6_dst_lookup_flow(struct net *, const struct sock *, struct flowi6 *, const struct in6_addr *);
205:	static void in6_dev_finish_destroy_rcu(struct callback_head *);

File net/ipv6/addrlabel.c:
140:	u32 ipv6_addr_label(struct net *, const struct in6_addr *, int, int);
362:	void ipv6_addr_label_cleanup(void);
357:	int ipv6_addr_label_init(void);
558:	int ipv6_addr_label_rtnl_register(void);
127:	static struct ip6addrlbl_entry *__ipv6_addr_label(struct net *, const struct in6_addr *, int, int);
242:	static int ip6addrlbl_add(struct net *, const struct in6_addr *, int, int, u32, int);
469:	static int ip6addrlbl_dump(struct sk_buff *, struct netlink_callback *);
446:	static int ip6addrlbl_fill(struct sk_buff *, struct ip6addrlbl_entry *, u32, u32, u32, unsigned int, int);
502:	static int ip6addrlbl_get(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
338:	static void ip6addrlbl_net_exit(struct net *);
307:	static int ip6addrlbl_net_init(struct net *);
384:	static int ip6addrlbl_newdel(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);

File net/ipv6/af_inet6.c:
436:	int inet6_bind(struct socket *, struct sockaddr *, int);
476:	void inet6_destroy_sock(struct sock *);
509:	int inet6_getname(struct socket *, struct sockaddr *, int);
544:	int inet6_ioctl(struct socket *, unsigned int, unsigned long);
642:	int inet6_register_protosw(struct inet_protosw *);
459:	int inet6_release(struct socket *);
714:	int inet6_sk_rebuild_header(struct sock *);
699:	void inet6_unregister_protosw(struct inet_protosw *);
97:	bool ipv6_mod_enabled(void);
757:	bool ipv6_opt_accepted(const struct sock *, const struct sk_buff *, const struct inet6_skb_parm *);
276:	static int __inet6_bind(struct sock *, struct sockaddr *, int, bool, bool);
110:	static int inet6_create(struct net *, struct socket *, int, int);
922:	static int inet6_init(void);
889:	static void inet6_net_exit(struct net *);
844:	static int inet6_net_init(struct net *);
835:	static void ipv6_cleanup_mibs(struct net *);

File net/ipv6/anycast.c:
309:	int __ipv6_dev_ac_dec(struct inet6_dev *, const struct in6_addr *);
250:	int __ipv6_dev_ac_inc(struct inet6_dev *, const struct in6_addr *);
176:	void __ipv6_sock_ac_close(struct sock *);
545:	void ac6_proc_exit(struct net *);
536:	int ac6_proc_init(struct net *);
353:	void ipv6_ac_destroy_dev(struct inet6_dev *);
397:	bool ipv6_chk_acast_addr(struct net *, struct net_device *, const struct in6_addr *);
418:	bool ipv6_chk_acast_addr_src(struct net *, struct net_device *, const struct in6_addr *);
203:	void ipv6_sock_ac_close(struct sock *);
145:	int ipv6_sock_ac_drop(struct sock *, int, const struct in6_addr *);
53:	int ipv6_sock_ac_join(struct sock *, int, const struct in6_addr *);
459:	static struct ifacaddr6 *ac6_get_next(struct ifacaddr6 *, struct seq_file *);
498:	static void *ac6_seq_next(struct seq_file *, void *, loff_t *);
518:	static int ac6_seq_show(struct seq_file *, void *);
491:	static void *ac6_seq_start(struct seq_file *, loff_t *);
506:	static void ac6_seq_stop(struct seq_file *, void *);
219:	static void aca_put(struct ifacaddr6 *);
377:	static bool ipv6_chk_acast_dev(struct net_device *, const struct in6_addr *);

File net/ipv6/calipso.c:
1468:	void calipso_exit(void);
1458:	int calipso_init(void);
584:	bool calipso_validate(const struct sk_buff *, const unsigned char *);
278:	static int calipso_cache_add(const unsigned char *, const struct netlbl_lsm_secattr *);
115:	static void calipso_cache_entry_free(struct calipso_map_cache_entry *);
173:	static void calipso_cache_invalidate(void);
362:	static int calipso_doi_add(struct calipso_doi *, struct netlbl_audit *);
417:	static void calipso_doi_free(struct calipso_doi *);
432:	static void calipso_doi_free_rcu(struct callback_head *);
492:	static struct calipso_doi *calipso_doi_getdef(u32);
516:	static void calipso_doi_putdef(struct calipso_doi *);
451:	static int calipso_doi_remove(u32, struct netlbl_audit *);
541:	static int calipso_doi_walk(u32 *, int (*)(struct calipso_doi *, void *), void *);
737:	static int calipso_genopt(unsigned char *, u32, u32, const struct netlbl_lsm_secattr *, const struct calipso_doi *);
985:	static int calipso_opt_del(struct ipv6_opt_hdr *, struct ipv6_opt_hdr **);
860:	static int calipso_opt_find(struct ipv6_opt_hdr *, unsigned int *, unsigned int *);
1028:	static int calipso_opt_getattr(const unsigned char *, struct netlbl_lsm_secattr *);
922:	static struct ipv6_opt_hdr *calipso_opt_insert(struct ipv6_opt_hdr *, const struct calipso_doi *, const struct netlbl_lsm_secattr *);
794:	static int calipso_opt_update(struct sock *, struct ipv6_opt_hdr *);
701:	static int calipso_pad_write(unsigned char *, unsigned int, unsigned int);
1245:	static void calipso_req_delattr(struct request_sock *);
1203:	static int calipso_req_setattr(struct request_sock *, const struct calipso_doi *, const struct netlbl_lsm_secattr *);
1383:	static int calipso_skbuff_delattr(struct sk_buff *);
1282:	static unsigned char *calipso_skbuff_optptr(const struct sk_buff *);
1308:	static int calipso_skbuff_setattr(struct sk_buff *, const struct calipso_doi *, const struct netlbl_lsm_secattr *);
1170:	static void calipso_sock_delattr(struct sock *);
1086:	static int calipso_sock_getattr(struct sock *, struct netlbl_lsm_secattr *);
1139:	static int calipso_sock_setattr(struct sock *, const struct calipso_doi *, const struct netlbl_lsm_secattr *);
822:	static int calipso_tlv_len(struct ipv6_opt_hdr *, unsigned int);

File net/ipv6/datagram.c:
137:	int __ip6_datagram_connect(struct sock *, struct sockaddr *, int);
1030:	void __ip6_dgram_sock_seq_show(struct seq_file *, struct sock *, __u16, __u16, int, int);
270:	int ip6_datagram_connect(struct sock *, struct sockaddr *, int);
281:	int ip6_datagram_connect_v6_only(struct sock *, struct sockaddr *, int);
69:	int ip6_datagram_dst_update(struct sock *, bool);
577:	void ip6_datagram_recv_common_ctl(struct sock *, struct msghdr *, struct sk_buff *);
733:	void ip6_datagram_recv_ctl(struct sock *, struct msghdr *, struct sk_buff *);
602:	void ip6_datagram_recv_specific_ctl(struct sock *, struct msghdr *, struct sk_buff *);
117:	void ip6_datagram_release_cb(struct sock *);
741:	int ip6_datagram_send_ctl(struct net *, struct sock *, struct msghdr *, struct flowi6 *, struct ipcm6_cookie *);
291:	void ipv6_icmp_error(struct sock *, struct sk_buff *, int, __be16, u32, u8 *);
326:	void ipv6_local_error(struct sock *, int, struct flowi6 *, u32);
366:	void ipv6_local_rxpmtu(struct sock *, struct flowi6 *, u32);
436:	int ipv6_recv_error(struct sock *, struct msghdr *, int, int *);
529:	int ipv6_recv_rxpmtu(struct sock *, struct msghdr *, int, int *);

File net/ipv6/exthdrs.c:
1143:	struct in6_addr *fl6_update_dst(struct flowi6 *, const struct ipv6_txoptions *, struct in6_addr *);
995:	struct ipv6_txoptions *ipv6_dup_options(struct sock *, struct ipv6_txoptions *);
701:	void ipv6_exthdrs_exit(void);
676:	int ipv6_exthdrs_init(void);
1112:	struct ipv6_txoptions *ipv6_fixup_options(struct ipv6_txoptions *, struct ipv6_txoptions *);
824:	int ipv6_parse_hopopts(struct sk_buff *);
987:	void ipv6_push_frag_opts(struct sk_buff *, struct ipv6_txoptions *, u8 *);
970:	void ipv6_push_nfrag_opts(struct sk_buff *, struct ipv6_txoptions *, u8 *, struct in6_addr **, struct in6_addr *);
1056:	struct ipv6_txoptions *ipv6_renew_options(struct sock *, struct ipv6_txoptions *, int, struct ipv6_opt_hdr *);
117:	static bool ip6_parse_tlv(const struct tlvtype_proc *, struct sk_buff *, int);
211:	static bool ipv6_dest_hao(struct sk_buff *, int);
280:	static int ipv6_destopt_rcv(struct sk_buff *);
788:	static bool ipv6_hop_calipso(struct sk_buff *, int);
744:	static bool ipv6_hop_jumbo(struct sk_buff *, int);
727:	static bool ipv6_hop_ra(struct sk_buff *, int);
961:	static void ipv6_push_exthdr(struct sk_buff *, u8 *, u8, struct ipv6_opt_hdr *);
1017:	static void ipv6_renew_option(int, struct ipv6_opt_hdr **, struct ipv6_opt_hdr *, struct ipv6_opt_hdr *, int, char **);
479:	static int ipv6_rthdr_rcv(struct sk_buff *);

File net/ipv6/exthdrs_core.c:
12:	bool ipv6_ext_hdr(u8);
185:	int ipv6_find_hdr(const struct sk_buff *, unsigned int *, int, unsigned short *, int *);
115:	int ipv6_find_tlv(const struct sk_buff *, int, int);
71:	int ipv6_skip_exthdr(const struct sk_buff *, int, u8 *, __be16 *);

File net/ipv6/exthdrs_offload.c:
23:	int ipv6_exthdrs_offload_init(void);

File net/ipv6/fib6_notifier.c:
10:	int call_fib6_notifier(struct notifier_block *, struct net *, enum fib_event_type, struct fib_notifier_info *);
18:	int call_fib6_notifiers(struct net *, enum fib_event_type, struct fib_notifier_info *);
60:	void fib6_notifier_exit(struct net *);
48:	int fib6_notifier_init(struct net *);
30:	static int fib6_dump(struct net *, struct notifier_block *);
25:	static unsigned int fib6_seq_read(struct net *);

File net/ipv6/fib6_rules.c:
64:	struct fib6_info *fib6_lookup(struct net *, int, struct flowi6 *, int);
42:	bool fib6_rule_default(const struct fib_rule *);
96:	struct dst_entry *fib6_rule_lookup(struct net *, struct flowi6 *, const struct sk_buff *, int, pol_lookup_t);
503:	void fib6_rules_cleanup(void);
53:	int fib6_rules_dump(struct net *, struct notifier_block *);
497:	int fib6_rules_init(void);
58:	unsigned int fib6_rules_seq_read(struct net *);
258:	static int fib6_rule_action(struct fib_rule *, struct flowi *, int, struct fib_lookup_arg *);
389:	static int fib6_rule_compare(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **);
338:	static int fib6_rule_configure(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *);
378:	static int fib6_rule_delete(struct fib_rule *);
414:	static int fib6_rule_fill(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *);
294:	static int fib6_rule_match(struct fib_rule *, struct flowi *, int);
434:	static size_t fib6_rule_nlmsg_payload(struct fib_rule *);
132:	static int fib6_rule_saddr(struct net *, struct fib_rule *, int, struct flowi6 *, const struct net_device *);
267:	static bool fib6_rule_suppress(struct fib_rule *, struct fib_lookup_arg *);
485:	static void fib6_rules_net_exit(struct net *);
458:	static int fib6_rules_net_init(struct net *);

File net/ipv6/icmp.c:
420:	void icmp6_send(struct sk_buff *, u8, u8, __u32, const struct in6_addr *, const struct inet6_skb_parm *);
1030:	void icmpv6_cleanup(void);
1072:	int icmpv6_err_convert(u8, u8, int *);
939:	void icmpv6_flow_init(struct sock *, struct flowi6 *, u8, const struct in6_addr *, const struct in6_addr *, int);
1005:	int icmpv6_init(void);
752:	void icmpv6_notify(struct sk_buff *, u8, u8, __be32);
599:	void icmpv6_param_prob(struct sk_buff *, u8, int);
253:	void icmpv6_push_pending_frames(struct sock *, struct flowi6 *, struct icmp6hdr *, int);
611:	int ip6_err_gen_icmpv6_unreach(struct sk_buff *, int, int, unsigned int);
1124:	struct ctl_table *ipv6_icmp_sysctl_init(struct net *);
671:	static void icmpv6_echo_reply(struct sk_buff *);
87:	static void icmpv6_err(struct sk_buff *, struct inet6_skb_parm *, u8, u8, int, __be32);
297:	static int icmpv6_getfrag(void *, char *, int, int, int, struct sk_buff *);
800:	static int icmpv6_rcv(struct sk_buff *);
334:	static struct dst_entry *icmpv6_route_lookup(struct net *, struct sk_buff *, struct sock *, struct flowi6 *);
990:	static void icmpv6_sk_exit(struct net *);
955:	static int icmpv6_sk_init(struct net *);

File net/ipv6/inet6_connection_sock.c:
63:	void inet6_csk_addr2sockaddr(struct sock *, struct sockaddr *);
31:	struct dst_entry *inet6_csk_route_req(const struct sock *, struct flowi6 *, const struct request_sock *, u8);
146:	struct dst_entry *inet6_csk_update_pmtu(struct sock *, u32);
118:	int inet6_csk_xmit(struct sock *, struct sk_buff *, struct flowi *);
83:	static struct dst_entry *inet6_csk_route_socket(struct sock *, struct flowi6 *);

File net/ipv6/inet6_hashtables.c:
53:	struct sock *__inet6_lookup_established(struct net *, struct inet_hashinfo *, const struct in6_addr *, const __be16, const struct in6_addr *, const u16, const int, const int);
28:	u32 inet6_ehashfn(const struct net *, const struct in6_addr *, const u16, const struct in6_addr *, const __be16);
333:	int inet6_hash(struct sock *);
321:	int inet6_hash_connect(struct inet_timewait_death_row *, struct sock *);
230:	struct sock *inet6_lookup(struct net *, struct inet_hashinfo *, struct sk_buff *, int, const struct in6_addr *, const __be16, const struct in6_addr *, const __be16, const int);
160:	struct sock *inet6_lookup_listener(struct net *, struct inet_hashinfo *, struct sk_buff *, int, const struct in6_addr *, const __be16, const struct in6_addr *, const unsigned short, const int, const int);
247:	static int __inet6_check_established(struct inet_timewait_death_row *, struct sock *, const __u16, struct inet_timewait_sock **);
126:	static struct sock *inet6_lhash2_lookup(struct net *, struct inet_listen_hashbucket *, struct sk_buff *, int, const struct in6_addr *, const __be16, const struct in6_addr *, const unsigned short, const int, const int);

File net/ipv6/ip6_checksum.c:
65:	int udp6_csum_init(struct sk_buff *, struct udphdr *, int);
115:	void udp6_set_csum(bool, struct sk_buff *, const struct in6_addr *, const struct in6_addr *, int);

File net/ipv6/ip6_fib.c:
1224:	int fib6_add(struct fib6_node *, struct fib6_info *, struct nl_info *, struct netlink_ext_ack *);
2071:	void fib6_clean_all(struct net *, int (*)(struct fib6_info *, void *), void *);
1811:	int fib6_del(struct fib6_info *, struct nl_info *);
1190:	void fib6_force_start_gc(struct net *);
2274:	void fib6_gc_cleanup(void);
306:	struct fib6_table *fib6_get_table(struct net *, u32);
148:	struct fib6_info *fib6_info_alloc(gfp_t);
170:	void fib6_info_destroy_rcu(struct callback_head *);
2243:	int fib6_init(void);
1554:	struct fib6_node *fib6_locate(struct fib6_node *, const struct in6_addr *, int, const struct in6_addr *, int, bool);
634:	void fib6_metric_set(struct fib6_info *, int, u32);
288:	struct fib6_table *fib6_new_table(struct net *, u32);
1464:	struct fib6_node *fib6_node_lookup(struct fib6_node *, const struct in6_addr *, const struct in6_addr *);
2115:	void fib6_run_gc(unsigned long, struct net *, bool);
450:	int fib6_tables_dump(struct net *, struct notifier_block *);
376:	unsigned int fib6_tables_seq_read(struct net *);
108:	void fib6_update_sernum(struct net *, struct fib6_info *);
1212:	void fib6_update_sernum_upto_root(struct net *, struct fib6_info *);
2050:	static void __fib6_clean_all(struct net *, int (*)(struct fib6_info *, void *), int, void *);
2088:	static int fib6_age(struct fib6_info *, void *);
1976:	static int fib6_clean_node(struct fib6_walker *);
2032:	static void fib6_clean_tree(struct net *, struct fib6_node *, int (*)(struct fib6_info *, void *), int, void *);
522:	static int fib6_dump_done(struct netlink_callback *);
505:	static void fib6_dump_end(struct netlink_callback *);
478:	static int fib6_dump_node(struct fib6_walker *);
2077:	static void fib6_flush_trees(struct net *);
2143:	static void fib6_gc_timer_cb(struct timer_list *);
2216:	static void fib6_net_exit(struct net *);
2150:	static int fib6_net_init(struct net *);
430:	static int fib6_node_dump(struct fib6_walker *);
904:	static void fib6_purge_rt(struct fib6_info *, struct fib6_node *, struct net *);
1624:	static struct fib6_node *fib6_repair_tree(struct net *, struct fib6_node *, struct fib6_table *);
1962:	static int fib6_walk(struct net *, struct fib6_walker *);
1872:	static int fib6_walk_continue(struct fib6_walker *);
78:	static void fib6_walker_link(struct net *, struct fib6_walker *);
85:	static void fib6_walker_unlink(struct net *, struct fib6_walker *);
571:	static int inet6_dump_fib(struct sk_buff *, struct netlink_callback *);
2372:	static void *ipv6_route_seq_next(struct seq_file *, void *, loff_t *);
2326:	static void ipv6_route_seq_setup_walk(struct ipv6_route_iter *, struct net *);
2281:	static int ipv6_route_seq_show(struct seq_file *, void *);
2408:	static void *ipv6_route_seq_start(struct seq_file *, loff_t *);
2434:	static void ipv6_route_seq_stop(struct seq_file *, void *);
2307:	static int ipv6_route_yield(struct fib6_walker *);
216:	static struct fib6_node *node_alloc(struct net *);
233:	static void node_free_rcu(struct callback_head *);

File net/ipv6/ip6_flowlabel.c:
269:	void fl6_free_socklist(struct sock *);
300:	struct ipv6_txoptions *fl6_merge_options(struct ipv6_txoptions *, struct ip6_flowlabel *, struct ipv6_txoptions *);
247:	struct ip6_flowlabel *fl6_sock_lookup(struct sock *, __be32);
859:	void ip6_flowlabel_cleanup(void);
854:	int ip6_flowlabel_init(void);
519:	int ipv6_flowlabel_opt(struct sock *, char *, int);
482:	int ipv6_flowlabel_opt_get(struct sock *, struct in6_flowlabel_req *, int);
338:	static int fl6_renew(struct ip6_flowlabel *, unsigned long, unsigned long);
361:	static struct ip6_flowlabel *fl_create(struct net *, struct sock *, struct in6_flowlabel_req *, char *, int, int *);
97:	static void fl_free_rcu(struct callback_head *);
85:	static struct ip6_flowlabel *fl_lookup(struct net *, __be32);
114:	static void fl_release(struct ip6_flowlabel *);
136:	static void ip6_fl_gc(struct timer_list *);
843:	static void ip6_flowlabel_net_exit(struct net *);
821:	static int ip6_flowlabel_proc_init(struct net *);
771:	static void *ip6fl_seq_next(struct seq_file *, void *, loff_t *);
789:	static int ip6fl_seq_show(struct seq_file *, void *);
760:	static void *ip6fl_seq_start(struct seq_file *, loff_t *);
783:	static void ip6fl_seq_stop(struct seq_file *, void *);

File net/ipv6/ip6_icmp.c:
52:	void icmpv6_ndo_send(struct sk_buff *, u8, u8, __u32);

File net/ipv6/ip6_input.c:
439:	int ip6_input(struct sk_buff *);
447:	int ip6_mc_input(struct sk_buff *);
66:	int ip6_rcv_finish(struct net *, struct sock *, struct sk_buff *);
287:	void ipv6_list_rcv(struct list_head *, struct packet_type *, struct net_device *);
266:	int ipv6_rcv(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *);
326:	static int ip6_input_finish(struct net *, struct sock *, struct sk_buff *);
123:	static struct sk_buff *ip6_rcv_core(struct sk_buff *, struct net *, struct net_device *, struct net_device *);
50:	static void ip6_rcv_finish_core(struct sk_buff *, struct sock *, struct net *);
278:	static void ip6_sublist_rcv(struct list_head *, struct net_device *, struct net *);
79:	static void ip6_sublist_rcv_finish(struct list_head *);

File net/ipv6/ip6_offload.c:
338:	static int ip4ip6_gro_complete(struct sk_buff *, int);
282:	static struct sk_buff *ip4ip6_gro_receive(struct list_head *, struct sk_buff *);
331:	static int ip6ip6_gro_complete(struct sk_buff *, int);
297:	static int ipv6_gro_complete(struct sk_buff *, int);
167:	static struct sk_buff *ipv6_gro_receive(struct list_head *, struct sk_buff *);
23:	static int ipv6_gso_pull_exthdrs(struct sk_buff *, int);
58:	static struct sk_buff *ipv6_gso_segment(struct sk_buff *, netdev_features_t);
377:	static int ipv6_offload_init(void);
324:	static int sit_gro_complete(struct sk_buff *, int);
267:	static struct sk_buff *sit_ip6ip6_gro_receive(struct list_head *, struct sk_buff *);

File net/ipv6/ip6_output.c:
1659:	struct sk_buff *__ip6_make_skb(struct sock *, struct sk_buff_head *, struct inet_cork_full *, struct inet6_cork *);
1602:	int ip6_append_data(struct sock *, int (*)(void *, char *, int, int, int, struct sk_buff *), void *, int, int, struct ipcm6_cookie *, struct flowi6 *, struct rt6_info *, unsigned int);
215:	bool ip6_autoflowlabel(struct net *, const struct ipv6_pinfo *);
1095:	int ip6_dst_lookup(struct net *, struct sock *, struct dst_entry **, struct flowi6 *);
1114:	struct dst_entry *ip6_dst_lookup_flow(struct net *, const struct sock *, struct flowi6 *, const struct in6_addr *);
1782:	void ip6_flush_pending_frames(struct sock *);
441:	int ip6_forward(struct sk_buff *);
621:	int ip6_fragment(struct net *, struct sock *, struct sk_buff *, int (*)(struct net *, struct sock *, struct sk_buff *));
1789:	struct sk_buff *ip6_make_skb(struct sock *, int (*)(void *, char *, int, int, int, struct sk_buff *), void *, int, int, struct ipcm6_cookie *, struct flowi6 *, struct rt6_info *, unsigned int, struct inet_cork_full *);
195:	int ip6_output(struct net *, struct sock *, struct sk_buff *);
1753:	int ip6_push_pending_frames(struct sock *);
1735:	int ip6_send_skb(struct sk_buff *);
1148:	struct dst_entry *ip6_sk_dst_lookup_flow(struct sock *, struct flowi6 *, const struct in6_addr *, bool);
229:	int ip6_xmit(const struct sock *, struct sk_buff *, struct flowi6 *, __u32, struct ipv6_txoptions *, int);
1278:	static int __ip6_append_data(struct sock *, struct flowi6 *, struct sk_buff_head *, struct inet_cork *, struct page_frag *, int (*)(void *, char *, int, int, int, struct sk_buff *), void *, int, int, unsigned int, struct ipcm6_cookie *, struct inet6_cork *);
1765:	static void __ip6_flush_pending_frames(struct sock *, struct sk_buff_head *, struct inet_cork_full *, struct inet6_cork *);
602:	static void ip6_copy_metadata(struct sk_buff *, struct sk_buff *);
1639:	static void ip6_cork_release(struct inet_cork_full *, struct inet6_cork *);
967:	static int ip6_dst_lookup_tail(struct net *, const struct sock *, struct dst_entry **, struct flowi6 *);
164:	static int ip6_finish_output(struct net *, struct sock *, struct sk_buff *);
62:	static int ip6_finish_output2(struct net *, struct sock *, struct sk_buff *);
411:	static int ip6_forward_finish(struct net *, struct sock *, struct sk_buff *);
1202:	static int ip6_setup_cork(struct sock *, struct inet_cork_full *, struct inet6_cork *, struct ipcm6_cookie *, struct rt6_info *, struct flowi6 *);

File net/ipv6/ip6mr.c:
1395:	void ip6_mr_cleanup(void);
1353:	int ip6_mr_init(void);
2166:	int ip6_mr_input(struct sk_buff *);
1781:	int ip6_mroute_getsockopt(struct sock *, int, char *, int *);
1623:	int ip6_mroute_setsockopt(struct sock *, int, char *, unsigned int);
1906:	int ip6mr_compat_ioctl(struct sock *, unsigned int, void *);
2233:	int ip6mr_get_route(struct net *, struct sk_buff *, struct rtmsg *, u32);
1831:	int ip6mr_ioctl(struct sock *, int, void *);
283:	bool ip6mr_rule_default(const struct fib_rule *);
1564:	int ip6mr_sk_done(struct sock *);
1600:	bool mroute6_is_socket(struct net *, struct sk_buff *);
2347:	static int _ip6mr_fill_mroute(struct mr_table *, struct sk_buff *, u32, u32, struct mr_mfc *, int, int);
2063:	static void ip6_mr_forward(struct net *, struct mr_table *, struct net_device *, struct sk_buff *, struct mfc6_cache *);
936:	static struct mfc6_cache *ip6mr_cache_find(struct mr_table *, const struct in6_addr *, const struct in6_addr *);
949:	static struct mfc6_cache *ip6mr_cache_find_any(struct mr_table *, struct in6_addr *, mifi_t);
755:	static void ip6mr_cache_free_rcu(struct callback_head *);
1040:	static int ip6mr_cache_report(struct mr_table *, struct sk_buff *, mifi_t, int);
1135:	static int ip6mr_cache_unresolved(struct mr_table *, mifi_t, struct sk_buff *, struct net_device *);
771:	static void ip6mr_destroy_unres(struct mr_table *, struct mfc6_cache *);
1234:	static int ip6mr_device_event(struct notifier_block *, unsigned long, void *);
1264:	static int ip6mr_dump(struct net *, struct notifier_block *);
135:	static int ip6mr_fib_lookup(struct net *, struct flowi6 *, struct mr_table **);
2303:	static int ip6mr_fill_mroute(struct mr_table *, struct sk_buff *, u32, u32, struct mfc6_cache *, int, int);
1978:	static int ip6mr_forward2(struct net *, struct mr_table *, struct sk_buff *, int, struct mfc6_cache *);
1965:	static int ip6mr_forward2_finish(struct net *, struct sock *, struct sk_buff *);
393:	static void ip6mr_free_table(struct mr_table *);
343:	static int ip6mr_hash_cmp(struct rhashtable_compare_arg *, const void *);
1406:	static int ip6mr_mfc_add(struct net *, struct mr_table *, struct mf6cctl *, int, int);
107:	static struct mr_table *ip6mr_mr_table_iter(struct net *, struct mr_table *);
1338:	static void ip6mr_net_exit(struct net *);
1303:	static int ip6mr_net_init(struct net *);
381:	static struct mr_table *ip6mr_new_table(struct net *, u32);
363:	static void ip6mr_new_table_set(struct mr_table *, struct net *);
2466:	static int ip6mr_rtm_dumproute(struct sk_buff *, struct netlink_callback *);
156:	static int ip6mr_rule_action(struct fib_rule *, struct flowi *, int, struct fib_lookup_arg *);
199:	static int ip6mr_rule_compare(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **);
192:	static int ip6mr_rule_configure(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *);
205:	static int ip6mr_rule_fill(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *);
183:	static int ip6mr_rule_match(struct fib_rule *, struct flowi *, int);
273:	static int ip6mr_rules_dump(struct net *, struct notifier_block *);
260:	static void ip6mr_rules_exit(struct net *);
1257:	static unsigned int ip6mr_seq_read(struct net *);
838:	static void ip6mr_update_thresholds(struct mr_table *, struct mr_mfc *, unsigned char *);
429:	static int ip6mr_vif_seq_show(struct seq_file *, void *);
406:	static void *ip6mr_vif_seq_start(struct seq_file *, loff_t *);
423:	static void ip6mr_vif_seq_stop(struct seq_file *, void *);
797:	static void ipmr_do_expire_process(struct mr_table *);
821:	static void ipmr_expire_process(struct timer_list *);
470:	static int ipmr_mfc_seq_show(struct seq_file *, void *);
458:	static void *ipmr_mfc_seq_start(struct seq_file *, loff_t *);
696:	static int mif6_delete(struct mr_table *, int, int, struct list_head *);
2376:	static void mr6_netlink_event(struct mr_table *, struct mfc6_cache *, int);
1499:	static void mroute_clean_tables(struct mr_table *, bool);
522:	static int pim6_rcv(struct sk_buff *);
624:	static int reg_vif_get_iflink(const struct net_device *);
634:	static void reg_vif_setup(struct net_device *);
593:	static netdev_tx_t reg_vif_xmit(struct sk_buff *, struct net_device *);

File net/ipv6/ipv6_sockglue.c:
1400:	int compat_ipv6_getsockopt(struct sock *, int, int, char *, int *);
954:	int compat_ipv6_setsockopt(struct sock *, int, int, char *, unsigned int);
62:	int ip6_ra_control(struct sock *, int);
1370:	int ipv6_getsockopt(struct sock *, int, int, char *, int *);
931:	int ipv6_setsockopt(struct sock *, int, int, char *, unsigned int);
104:	struct ipv6_txoptions *ipv6_update_options(struct sock *, struct ipv6_txoptions *);
1020:	static int do_ipv6_getsockopt(struct sock *, int, char *, int *, unsigned int, int);
143:	static int do_ipv6_setsockopt(struct sock *, int, char *, unsigned int, int);

File net/ipv6/mcast.c:
948:	int __ipv6_dev_mc_dec(struct inet6_dev *, const struct in6_addr *);
293:	void __ipv6_sock_mc_close(struct sock *);
3018:	void igmp6_cleanup(void);
1338:	int igmp6_event_query(struct sk_buff *);
1458:	int igmp6_event_report(struct sk_buff *);
3008:	int igmp6_init(void);
3023:	void igmp6_late_cleanup(void);
3013:	int igmp6_late_init(void);
624:	bool inet6_mc_check(struct sock *, const struct in6_addr *, const struct in6_addr *);
553:	int ip6_mc_msfget(struct sock *, struct group_filter *, struct group_filter *, int *);
464:	int ip6_mc_msfilter(struct sock *, struct group_filter *);
332:	int ip6_mc_source(int, int, struct sock *, struct group_source_req *);
995:	bool ipv6_chk_mcast_addr(struct net_device *, const struct in6_addr *, const struct in6_addr *);
976:	int ipv6_dev_mc_dec(struct net_device *, const struct in6_addr *);
940:	int ipv6_dev_mc_inc(struct net_device *, const struct in6_addr *);
2104:	void ipv6_mc_dad_complete(struct inet6_dev *);
2600:	void ipv6_mc_destroy_dev(struct inet6_dev *);
2534:	void ipv6_mc_down(struct inet6_dev *);
2582:	void ipv6_mc_init_dev(struct inet6_dev *);
2527:	void ipv6_mc_remap(struct inet6_dev *);
2515:	void ipv6_mc_unmap(struct inet6_dev *);
2565:	void ipv6_mc_up(struct inet6_dev *);
321:	void ipv6_sock_mc_close(struct sock *);
221:	int ipv6_sock_mc_drop(struct sock *, int, const struct in6_addr *);
206:	int ipv6_sock_mc_join(struct sock *, int, const struct in6_addr *);
212:	int ipv6_sock_mc_join_ssm(struct sock *, int, const struct in6_addr *, unsigned int);
887:	static int __ipv6_dev_mc_inc(struct net_device *, const struct in6_addr *, unsigned int);
137:	static int __ipv6_sock_mc_join(struct sock *, int, const struct in6_addr *, unsigned int);
1732:	static struct sk_buff *add_grec(struct sk_buff *, struct ifmcaddr6 *, int, int, int, int);
1708:	static struct sk_buff *add_grhead(struct sk_buff *, int, struct mld2_grec **, unsigned int, struct ifmcaddr6 *, struct ifmcaddr6 *);
663:	static void igmp6_group_added(struct ifmcaddr6 *);
699:	static void igmp6_group_dropped(struct ifmcaddr6 *);
1084:	static void igmp6_group_queried(struct ifmcaddr6 *, unsigned long);
2412:	static void igmp6_join_group(struct ifmcaddr6 *);
2700:	static struct ifmcaddr6 *igmp6_mc_get_next(struct ifmcaddr6 *, struct seq_file *);
2739:	static void *igmp6_mc_seq_next(struct seq_file *, void *, loff_t *);
2760:	static int igmp6_mc_seq_show(struct seq_file *, void *);
2732:	static void *igmp6_mc_seq_start(struct seq_file *, loff_t *);
2747:	static void igmp6_mc_seq_stop(struct seq_file *, void *);
2822:	static struct ip6_sf_list *igmp6_mcf_get_next(struct ip6_sf_list *, struct seq_file *);
2870:	static void *igmp6_mcf_seq_next(struct seq_file *, void *, loff_t *);
2897:	static int igmp6_mcf_seq_show(struct seq_file *, void *);
2863:	static void *igmp6_mcf_seq_start(struct seq_file *, loff_t *);
2881:	static void igmp6_mcf_seq_stop(struct seq_file *, void *);
2996:	static void igmp6_net_exit(struct net *);
2960:	static int igmp6_net_init(struct net *);
1983:	static void igmp6_send(struct in6_addr *, struct net_device *, int);
2497:	static void igmp6_timer_handler(struct timer_list *);
2331:	static int ip6_mc_add_src(struct inet6_dev *, const struct in6_addr *, int, int, const struct in6_addr *, int);
2392:	static void ip6_mc_clear_src(struct ifmcaddr6 *);
2130:	static int ip6_mc_del1_src(struct ifmcaddr6 *, int, const struct in6_addr *);
2167:	static int ip6_mc_del_src(struct inet6_dev *, const struct in6_addr *, int, int, const struct in6_addr *, int);
263:	static struct inet6_dev *ip6_mc_find_dev_rcu(struct net *, const struct in6_addr *, int);
1566:	static void ip6_mc_hdr(struct sock *, struct sk_buff *, struct net_device *, const struct in6_addr *, const struct in6_addr *, int, int);
2435:	static int ip6_mc_leave_src(struct sock *, struct ipv6_mc_socklist *, struct inet6_dev *);
2645:	static int ipv6_mc_netdev_event(struct notifier_block *, unsigned long, void *);
2554:	static void ipv6_mc_reset(struct inet6_dev *);
1508:	static bool is_in(struct ifmcaddr6 *, struct ip6_sf_list *, int, int, int);
846:	static void ma_put(struct ifmcaddr6 *);
808:	static void mld_clear_delrec(struct inet6_dev *);
1892:	static void mld_clear_zeros(struct ip6_sf_list **);
1066:	static void mld_dad_start_timer(struct inet6_dev *, unsigned long);
2116:	static void mld_dad_timer_expire(struct timer_list *);
769:	static void mld_del_delrec(struct inet6_dev *, struct ifmcaddr6 *);
1044:	static void mld_gq_stop_timer(struct inet6_dev *);
2466:	static void mld_gq_timer_expire(struct timer_list *);
2489:	static void mld_ifc_event(struct inet6_dev *);
1051:	static void mld_ifc_start_timer(struct inet6_dev *, unsigned long);
1059:	static void mld_ifc_stop_timer(struct inet6_dev *);
2475:	static void mld_ifc_timer_expire(struct timer_list *);
1190:	static bool mld_in_v1_mode(const struct inet6_dev *);
1591:	static struct sk_buff *mld_newpack(struct inet6_dev *, unsigned int);
2079:	static void mld_send_initial_cr(struct inet6_dev *);
1857:	static void mld_send_report(struct inet6_dev *, struct ifmcaddr6 *);
1644:	static void mld_sendpack(struct sk_buff *);
2267:	static int sf_setstate(struct ifmcaddr6 *);

File net/ipv6/mcast_snoop.c:
202:	int ipv6_mc_check_mld(struct sk_buff *, struct sk_buff **);
134:	static __sum16 ipv6_mc_validate_checksum(struct sk_buff *);

File net/ipv6/ndisc.c:
144:	void __ndisc_fill_addr_option(struct sk_buff *, int, void *, int, int);
1933:	void ndisc_cleanup(void);
1822:	int ndisc_ifinfo_sysctl_change(struct ctl_table *, int, void *, size_t *, loff_t *);
1895:	int ndisc_init(void);
1928:	void ndisc_late_cleanup(void);
1923:	int ndisc_late_init(void);
284:	int ndisc_mc_map(const struct in6_addr *, char *, struct net_device *, int);
215:	struct ndisc_options *ndisc_parse_options(const struct net_device *, u8 *, int, struct ndisc_options *);
1709:	int ndisc_rcv(struct sk_buff *);
502:	void ndisc_send_na(struct net_device *, const struct in6_addr *, const struct in6_addr *, bool, bool, bool, bool);
584:	void ndisc_send_ns(struct net_device *, const struct in6_addr *, const struct in6_addr *, const struct in6_addr *, u64);
1563:	void ndisc_send_redirect(struct sk_buff *, const struct in6_addr *);
636:	void ndisc_send_rs(struct net_device *, const struct in6_addr *, const struct in6_addr *);
744:	void ndisc_update(const struct net_device *, struct neighbour *, const u8 *, u8, u32, u8, struct ndisc_options *);
395:	static struct sk_buff *ndisc_alloc_skb(struct net_device *, int);
322:	static int ndisc_constructor(struct neighbour *);
689:	static void ndisc_error_report(struct neighbour *, struct sk_buff *);
310:	static u32 ndisc_hash(const void *, const struct net_device *, __u32 *);
317:	static bool ndisc_key_eq(const struct neighbour *, const void *);
1885:	static void ndisc_net_exit(struct net *);
1860:	static int ndisc_net_init(struct net *);
1761:	static int ndisc_netdev_event(struct notifier_block *, unsigned long, void *);
182:	static struct nd_opt_hdr *ndisc_next_option(struct nd_opt_hdr *, struct nd_opt_hdr *);
937:	static void ndisc_recv_na(struct sk_buff *);
753:	static void ndisc_recv_ns(struct sk_buff *);
1051:	static void ndisc_recv_rs(struct sk_buff *);
1507:	static void ndisc_redirect_rcv(struct sk_buff *);
1153:	static void ndisc_router_discovery(struct sk_buff *);
452:	static void ndisc_send_skb(struct sk_buff *, const struct in6_addr *, const struct in6_addr *);
558:	static void ndisc_send_unsol_na(struct net_device *);
701:	static void ndisc_solicit(struct neighbour *, struct sk_buff *);
370:	static int pndisc_constructor(struct pneigh_entry *);
383:	static void pndisc_destructor(struct pneigh_entry *);
1689:	static void pndisc_redo(struct sk_buff *);

File net/ipv6/netfilter.c:
20:	int ip6_route_me_harder(struct net *, struct sock *, struct sk_buff *);
128:	void ipv6_netfilter_fini(void);
119:	int ipv6_netfilter_init(void);
74:	static int nf_ip6_reroute(struct sk_buff *, const struct nf_queue_entry *);
89:	static int nf_ip6_route(struct net *, struct dst_entry **, struct flowi *, bool);

File net/ipv6/output_core.c:
129:	int __ip6_local_out(struct net *, struct sock *, struct sk_buff *);
109:	int ip6_dst_hoplimit(struct dst_entry *);
63:	int ip6_find_1stfragopt(struct sk_buff *, u8 **);
154:	int ip6_local_out(struct net *, struct sock *, struct sk_buff *);
34:	__be32 ipv6_proxy_select_ident(struct net *, struct sk_buff *);
52:	__be32 ipv6_select_ident(struct net *, const struct in6_addr *, const struct in6_addr *);

File net/ipv6/ping.c:
262:	void pingv6_exit(void);
242:	int pingv6_init(void);
40:	static int dummy_icmpv6_err_convert(u8, u8, int *);
36:	static void dummy_ip6_datagram_recv_ctl(struct sock *, struct msghdr *, struct sk_buff *);
46:	static int dummy_ipv6_chk_addr(struct net *, const struct in6_addr *, const struct net_device *, int);
44:	static void dummy_ipv6_icmp_error(struct sock *, struct sk_buff *, int, __be16, u32, u8 *);
31:	static int dummy_ipv6_recv_error(struct sock *, struct msghdr *, int, int *);
231:	static void ping_v6_proc_exit_net(struct net *);
223:	static int ping_v6_proc_init_net(struct net *);
52:	static int ping_v6_sendmsg(struct sock *, struct msghdr *, size_t);
202:	static int ping_v6_seq_show(struct seq_file *, void *);
197:	static void *ping_v6_seq_start(struct seq_file *, loff_t *);

File net/ipv6/proc.c:
318:	void ipv6_misc_proc_exit(void);
313:	int ipv6_misc_proc_init(void);
246:	int snmp6_register_dev(struct inet6_dev *);
267:	int snmp6_unregister_dev(struct inet6_dev *);
301:	static void ipv6_proc_exit_net(struct net *);
279:	static int ipv6_proc_init_net(struct net *);
233:	static int snmp6_dev_seq_show(struct seq_file *, void *);
217:	static int snmp6_seq_show(struct seq_file *, void *);
147:	static void snmp6_seq_show_icmpv6msg(struct seq_file *, atomic_long_t *);
183:	static void snmp6_seq_show_item(struct seq_file *, void *, const struct snmp_mib *, atomic_long_t *);
204:	static void snmp6_seq_show_item64(struct seq_file *, void *, size_t, const struct snmp_mib *);
38:	static int sockstat6_seq_show(struct seq_file *, void *);

File net/ipv6/protocol.c:
56:	int inet6_add_offload(const struct net_offload *, unsigned char);
32:	int inet6_add_protocol(const struct inet6_protocol *, unsigned char);
63:	int inet6_del_offload(const struct net_offload *, unsigned char);
39:	int inet6_del_protocol(const struct inet6_protocol *, unsigned char);

File net/ipv6/raw.c:
73:	struct sock *__raw_v6_lookup(struct net *, struct sock *, unsigned short, const struct in6_addr *, const struct in6_addr *, int, int);
365:	void raw6_icmp_error(struct sk_buff *, int, u8, u8, int, __be32);
234:	bool raw6_local_deliver(struct sk_buff *, int);
1354:	void raw6_proc_exit(void);
1349:	int raw6_proc_init(void);
1399:	void rawv6_exit(void);
1394:	int rawv6_init(void);
137:	int rawv6_mh_filter_register(mh_filter_t *);
144:	int rawv6_mh_filter_unregister(mh_filter_t *);
420:	int rawv6_rcv(struct sock *, struct sk_buff *);
1175:	static int compat_rawv6_getsockopt(struct sock *, int, int, char *, int *);
1228:	static int compat_rawv6_ioctl(struct sock *, unsigned int, unsigned long);
1090:	static int compat_rawv6_setsockopt(struct sock *, int, int, char *, unsigned int);
1113:	static int do_rawv6_getsockopt(struct sock *, int, char *, int *, int);
1019:	static int do_rawv6_setsockopt(struct sock *, int, int, char *, unsigned int);
1252:	static void raw6_destroy(struct sock *);
1339:	static void raw6_exit_net(struct net *);
739:	static int raw6_getfrag(void *, char *, int, int, int, struct sk_buff *);
1330:	static int raw6_init_net(struct net *);
1310:	static int raw6_seq_show(struct seq_file *, void *);
246:	static int rawv6_bind(struct sock *, struct sockaddr *, int);
1244:	static void rawv6_close(struct sock *, long);
993:	static int rawv6_geticmpfilter(struct sock *, int, char *, int *, int);
1151:	static int rawv6_getsockopt(struct sock *, int, int, char *, int *);
1261:	static int rawv6_init_sk(struct sock *);
1198:	static int rawv6_ioctl(struct sock *, int, unsigned long);
394:	static int rawv6_rcv_skb(struct sock *, struct sk_buff *);
466:	static int rawv6_recvmsg(struct sock *, struct msghdr *, size_t, int, int, int *);
770:	static int rawv6_sendmsg(struct sock *, struct msghdr *, size_t);
976:	static int rawv6_seticmpfilter(struct sock *, int, char *, int, int);
1066:	static int rawv6_setsockopt(struct sock *, int, int, char *, unsigned int);

File net/ipv6/reassembly.c:
596:	void ipv6_frag_exit(void);
558:	int ipv6_frag_init(void);
75:	static void ip6_frag_expire(struct timer_list *);
326:	static int ipv6_frag_rcv(struct sk_buff *);
539:	static void ipv6_frags_exit_net(struct net *);
520:	static int ipv6_frags_init_net(struct net *);

File net/ipv6/route.c:
3820:	struct fib6_info *addrconf_f6i_alloc(struct net *, struct inet6_dev *, const struct in6_addr *, bool, gfp_t);
433:	struct fib6_info *fib6_multipath_select(const struct net *, struct fib6_info *, struct flowi6 *, int, const struct sk_buff *, int);
1874:	struct fib6_info *fib6_table_lookup(struct net *, struct fib6_table *, int, struct flowi6 *, int);
2731:	struct dst_entry *icmp6_dst_alloc(struct net_device *, struct flowi6 *);
5067:	void inet6_rt_notify(int, struct fib6_info *, struct nl_info *, unsigned int);
2178:	struct dst_entry *ip6_blackhole_route(struct net *, struct dst_entry *);
3265:	int ip6_del_rt(struct net *, struct fib6_info *);
355:	struct rt6_info *ip6_dst_alloc(struct net *, struct net_device *, int);
1177:	int ip6_ins_rt(struct net *, struct fib6_info *);
2701:	u32 ip6_mtu_from_fib6(struct fib6_info *, struct in6_addr *, struct in6_addr *);
204:	struct neighbour *ip6_neigh_lookup(const struct in6_addr *, struct net_device *, struct sk_buff *, const void *);
1905:	struct rt6_info *ip6_pol_route(struct net *, struct fib6_table *, int, struct flowi6 *, const struct sk_buff *, int);
2598:	void ip6_redirect(struct sk_buff *, struct net *, int, u32, kuid_t);
2620:	void ip6_redirect_no_header(struct sk_buff *, struct net *, int, u32);
3228:	int ip6_route_add(struct fib6_config *, gfp_t, struct netlink_ext_ack *);
5532:	void ip6_route_cleanup(void);
5440:	int ip6_route_init(void);
5424:	void ip6_route_init_special_entries(void);
2110:	void ip6_route_input(struct sk_buff *);
1992:	struct dst_entry *ip6_route_input_lookup(struct net *, struct net_device *, struct flowi6 *, const struct sk_buff *, int);
1124:	struct dst_entry *ip6_route_lookup(struct net *, struct flowi6 *, const struct sk_buff *, int);
2149:	struct dst_entry *ip6_route_output_flags(struct net *, const struct sock *, struct flowi6 *, int);
2474:	void ip6_sk_dst_store_flow(struct sock *, struct dst_entry *, const struct flowi6 *);
2641:	void ip6_sk_redirect(struct sk_buff *, struct sock *);
2452:	void ip6_sk_update_pmtu(struct sk_buff *, struct sock *, __be32);
2430:	void ip6_update_pmtu(struct sk_buff *, struct net *, __be32, int, u32, kuid_t);
3718:	int ipv6_route_ioctl(struct net *, unsigned int, void *);
5249:	struct ctl_table *ipv6_route_sysctl_init(struct net *);
3621:	struct fib6_info *rt6_add_dflt_router(struct net *, const struct in6_addr *, struct net_device *, unsigned int);
1842:	void rt6_age_exceptions(struct fib6_info *, struct fib6_gc_args *, unsigned long);
3914:	void rt6_clean_tohost(struct net *, struct in6_addr *);
4158:	void rt6_disable_ip(struct net_device *, unsigned long);
4897:	int rt6_dump_route(struct fib6_info *, void *);
1538:	void rt6_flush_exceptions(struct fib6_info *);
3596:	struct fib6_info *rt6_get_dflt_router(struct net *, const struct in6_addr *, struct net_device *);
1131:	struct rt6_info *rt6_lookup(struct net *, const struct in6_addr *, const struct in6_addr *, int, const struct sk_buff *, int);
4205:	void rt6_mtu_change(struct net_device *, unsigned int);
2054:	u32 rt6_multipath_hash(const struct net *, const struct flowi6 *, const struct sk_buff *, struct flow_keys *);
3996:	void rt6_multipath_rebalance(struct fib6_info *);
3676:	void rt6_purge_dflt_routers(struct net *);
3882:	void rt6_remove_prefsrc(struct inet6_ifaddr *);
798:	int rt6_route_rcv(struct net_device *, u8 *, int, const struct in6_addr *);
4146:	void rt6_sync_down_dev(struct net_device *, unsigned long);
4034:	void rt6_sync_up(struct net_device *, unsigned int);
137:	void rt6_uncached_list_add(struct rt6_info *);
148:	void rt6_uncached_list_del(struct rt6_info *);
3244:	static int __ip6_del_rt(struct fib6_info *, struct nl_info *);
1163:	static int __ip6_ins_rt(struct fib6_info *, struct nl_info *, struct netlink_ext_ack *);
2497:	static struct rt6_info *__ip6_route_redirect(struct net *, struct fib6_table *, struct flowi6 *, const struct sk_buff *, int);
2367:	static void __ip6_rt_update_pmtu(struct dst_entry *, const struct sock *, const struct ipv6hdr *, u32, bool);
1400:	static struct rt6_exception *__rt6_find_exception_rcu(struct rt6_exception_bucket **, const struct in6_addr *, const struct in6_addr *);
1367:	static struct rt6_exception *__rt6_find_exception_spinlock(struct rt6_exception_bucket **, const struct in6_addr *, const struct in6_addr *);
3896:	static int fib6_clean_tohost(struct fib6_info *, void *);
4103:	static int fib6_ifdown(struct fib6_info *, void *);
4020:	static int fib6_ifup(struct fib6_info *, void *);
3863:	static int fib6_remove_prefsrc(struct fib6_info *, void *);
664:	static struct fib6_info *find_match(struct fib6_info *, int, int, int *, struct fib6_info *, bool *);
4615:	static int inet6_rtm_delroute(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
4921:	static int inet6_rtm_getroute(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
4633:	static int inet6_rtm_newroute(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
263:	static unsigned int ip6_blackhole_mtu(const struct dst_entry *);
229:	static void ip6_confirm_neigh(const struct dst_entry *, const void *);
1048:	static struct rt6_info *ip6_create_rt_rcu(struct fib6_info *);
2648:	static unsigned int ip6_default_advmss(const struct dst_entry *);
2256:	static struct dst_entry *ip6_dst_check(struct dst_entry *, u32);
370:	static void ip6_dst_destroy(struct dst_entry *);
2770:	static int ip6_dst_gc(struct dst_ops *);
392:	static void ip6_dst_ifdown(struct dst_entry *, struct net_device *, int);
220:	static struct neighbour *ip6_dst_neigh_lookup(const struct dst_entry *, struct sk_buff *, const void *);
1030:	static bool ip6_hold_safe(struct net *, struct rt6_info **, bool);
2304:	static void ip6_link_failure(struct sk_buff *);
2670:	static unsigned int ip6_mtu(const struct dst_entry *);
2284:	static struct dst_entry *ip6_negative_advice(struct dst_entry *);
2813:	static struct rt6_info *ip6_nh_lookup_table(struct net *, struct fib6_config *, const struct in6_addr *, u32, int);
3794:	static int ip6_pkt_discard(struct sk_buff *);
3799:	static int ip6_pkt_discard_out(struct net *, struct sock *, struct sk_buff *);
3759:	static int ip6_pkt_drop(struct sk_buff *, u8, int);
3805:	static int ip6_pkt_prohibit(struct sk_buff *);
3810:	static int ip6_pkt_prohibit_out(struct net *, struct sock *, struct sk_buff *);
1983:	static struct rt6_info *ip6_pol_route_input(struct net *, struct fib6_table *, struct flowi6 *, const struct sk_buff *, int);
1072:	static struct rt6_info *ip6_pol_route_lookup(struct net *, struct fib6_table *, struct flowi6 *, const struct sk_buff *, int);
2140:	static struct rt6_info *ip6_pol_route_output(struct net *, struct fib6_table *, struct flowi6 *, const struct sk_buff *, int);
3340:	static int ip6_route_del(struct fib6_config *, struct netlink_ext_ack *);
5098:	static int ip6_route_dev_notify(struct notifier_block *, unsigned long, void *);
3002:	static struct fib6_info *ip6_route_info_create(struct fib6_config *, gfp_t, struct netlink_ext_ack *);
4406:	static void ip6_route_mpath_notify(struct fib6_info *, struct fib6_info *, struct nl_info *, __u16);
4427:	static int ip6_route_multipath_add(struct fib6_config *, struct netlink_ext_ack *);
4577:	static int ip6_route_multipath_del(struct fib6_config *, struct netlink_ext_ack *);
5354:	static void ip6_route_net_exit(struct net *);
5376:	static void ip6_route_net_exit_late(struct net *);
5279:	static int ip6_route_net_init(struct net *);
5365:	static int ip6_route_net_init_late(struct net *);
2583:	static struct dst_entry *ip6_route_redirect(struct net *, const struct flowi6 *, const struct sk_buff *, const struct in6_addr *);
276:	static void ip6_rt_blackhole_redirect(struct dst_entry *, struct sock *, struct sk_buff *);
270:	static void ip6_rt_blackhole_update_pmtu(struct dst_entry *, struct sock *, struct sk_buff *, u32, bool);
1184:	static struct rt6_info *ip6_rt_cache_alloc(struct fib6_info *, const struct in6_addr *, const struct in6_addr *);
995:	static void ip6_rt_copy_init(struct rt6_info *, struct fib6_info *);
878:	static struct net_device *ip6_rt_get_dev_rcu(struct fib6_info *);
2422:	static void ip6_rt_update_pmtu(struct dst_entry *, struct sock *, struct sk_buff *, u32, bool);
5400:	static void ipv6_inetpeer_exit(struct net *);
5389:	static int ipv6_inetpeer_init(struct net *);
5156:	static int ipv6_sysctl_rtcache_flush(struct ctl_table *, int, void *, size_t *, loff_t *);
4719:	static int rt6_add_nexthop(struct sk_buff *, struct fib6_info *);
3563:	static struct fib6_info *rt6_add_route_info(struct net *, const struct in6_addr *, int, const struct in6_addr *, struct net_device *, unsigned int);
417:	static bool rt6_check_expired(const struct rt6_info *);
3405:	static void rt6_do_redirect(struct dst_entry *, struct sock *, struct sk_buff *);
2346:	static void rt6_do_update_pmtu(struct rt6_info *, u32);
1338:	static u32 rt6_exception_hash(const struct in6_addr *, const struct in6_addr *);
4746:	static int rt6_fill_node(struct net *, struct sk_buff *, struct fib6_info *, struct dst_entry *, struct in6_addr *, int, int, u32, u32, unsigned int, struct in6_addr *);
1568:	static struct rt6_info *rt6_find_cached_rt(struct fib6_info *, const struct in6_addr *, const struct in6_addr *);
3527:	static struct fib6_info *rt6_get_route_info(struct net *, const struct in6_addr *, int, const struct in6_addr *, struct net_device *);
346:	static void rt6_info_init(struct rt6_info *);
1450:	static int rt6_insert_exception(struct rt6_info *, struct fib6_info *);
3947:	static bool rt6_is_dead(const struct fib6_info *);
4170:	static int rt6_mtu_change_route(struct fib6_info *, void *);
4679:	static int rt6_nexthop_info(struct sk_buff *, struct fib6_info *, unsigned int *, bool);
4649:	static size_t rt6_nlmsg_size(struct fib6_info *, struct fib6_info *);
511:	static void rt6_probe_deferred(struct work_struct *);
1295:	static void rt6_remove_exception(struct rt6_exception_bucket *, struct rt6_exception *);
1611:	static int rt6_remove_exception_rt(struct rt6_info *);
631:	static int rt6_score_route(struct fib6_info *, int, int);
5137:	static int rt6_stats_seq_show(struct seq_file *, void *);
3973:	static void rt6_upper_bound_set(struct fib6_info *, int *, int);
4235:	static int rtm_to_fib6_config(struct sk_buff *, struct nlmsghdr *, struct fib6_config *, struct netlink_ext_ack *);

File net/ipv6/seg6.c:
487:	void seg6_exit(void);
439:	int seg6_init(void);
33:	bool seg6_validate_srh(struct ipv6_sr_hdr *, int);
339:	static int seg6_genl_dumphmac_start(struct netlink_callback *);
199:	static int seg6_genl_get_tunsrc(struct sk_buff *, struct genl_info *);
170:	static int seg6_genl_set_tunsrc(struct sk_buff *, struct genl_info *);
163:	static int seg6_genl_sethmac(struct sk_buff *, struct genl_info *);
381:	static void seg6_net_exit(struct net *);
356:	static int seg6_net_init(struct net *);

File net/ipv6/syncookies.c:
122:	int __cookie_v6_check(const struct ipv6hdr *, const struct tcphdr *, __u32);
97:	u32 __cookie_v6_init_sequence(const struct ipv6hdr *, const struct tcphdr *, __u16 *);
133:	struct sock *cookie_v6_check(struct sock *, struct sk_buff *);
114:	__u32 cookie_v6_init_sequence(const struct sk_buff *, __u16 *);
45:	static u32 cookie_hash(const struct in6_addr *, const struct in6_addr *, __be16, __be16, u32, int);

File net/ipv6/sysctl_net_ipv6.c:
293:	int ipv6_sysctl_register(void);
312:	void ipv6_sysctl_unregister(void);
267:	static void ipv6_sysctl_net_exit(struct net *);
200:	static int ipv6_sysctl_net_init(struct net *);
29:	static int proc_rt6_multipath_hash_policy(struct ctl_table *, int, void *, size_t *, loff_t *);

File net/ipv6/tcp_ipv6.c:
1964:	void tcp6_proc_exit(struct net *);
1956:	int tcp6_proc_init(struct net *);
2085:	void tcpv6_exit(void);
2059:	int tcpv6_init(void);
93:	static void inet6_sk_rx_dst_set(struct sock *, const struct sk_buff *);
1919:	static int tcp6_seq_show(struct seq_file *, void *);
1050:	static int tcp_v6_conn_request(struct sock *, struct sk_buff *);
135:	static int tcp_v6_connect(struct sock *, struct sockaddr *, int);
1782:	static void tcp_v6_destroy_sock(struct sock *);
1297:	static int tcp_v6_do_rcv(struct sock *, struct sk_buff *);
1662:	static void tcp_v6_early_demux(struct sk_buff *);
362:	static void tcp_v6_err(struct sk_buff *, struct inet6_skb_parm *, u8, u8, int, __be32);
1425:	static void tcp_v6_fill_cb(struct sk_buff *, const struct ipv6hdr *, const struct tcphdr *);
705:	static bool tcp_v6_inbound_md5_hash(const struct sock *, const struct sk_buff *);
750:	static void tcp_v6_init_req(struct request_sock *, const struct sock *, struct sk_buff *);
106:	static u32 tcp_v6_init_seq(const struct sk_buff *);
1767:	static int tcp_v6_init_sock(struct sock *);
114:	static u32 tcp_v6_init_ts_off(const struct net *, const struct sk_buff *);
598:	static int tcp_v6_md5_hash_headers(struct tcp_md5sig_pool *, const struct in6_addr *, const struct in6_addr *, const struct tcphdr *, int);
656:	static int tcp_v6_md5_hash_skb(char *, const struct tcp_md5sig_key *, const struct sock *, const struct sk_buff *);
545:	static struct tcp_md5sig_key *tcp_v6_md5_lookup(const struct sock *, const struct sock *);
336:	static void tcp_v6_mtu_reduced(struct sock *);
551:	static int tcp_v6_parse_md5_keys(struct sock *, int, char *, int);
120:	static int tcp_v6_pre_connect(struct sock *, struct sockaddr *, int);
1449:	static int tcp_v6_rcv(struct sk_buff *);
532:	static void tcp_v6_reqsk_destructor(struct request_sock *);
1017:	static void tcp_v6_reqsk_send_ack(const struct sock *, struct sk_buff *, struct request_sock *);
1071:	static void tcp_v6_restore_cb(struct sk_buff *);
775:	static struct dst_entry *tcp_v6_route_req(const struct sock *, struct flowi *, const struct request_sock *);
918:	static void tcp_v6_send_reset(const struct sock *, struct sk_buff *);
809:	static void tcp_v6_send_response(const struct sock *, struct sk_buff *, u32, u32, u32, u32, u32, int, struct tcp_md5sig_key *, int, u8, __be32);
489:	static int tcp_v6_send_synack(const struct sock *, struct dst_entry *, struct flowi *, struct request_sock *, struct tcp_fastopen_cookie *, enum tcp_synack_type);
1081:	static struct sock *tcp_v6_syn_recv_sock(const struct sock *, struct sk_buff *, struct request_sock *, struct dst_entry *, struct request_sock *, bool *);
2043:	static void tcpv6_net_exit(struct net *);
2048:	static void tcpv6_net_exit_batch(struct list_head *);
2037:	static int tcpv6_net_init(struct net *);

File net/ipv6/tcpv6_offload.c:
78:	int tcpv6_offload_init(void);
32:	static int tcp6_gro_complete(struct sk_buff *, int);
18:	static struct sk_buff *tcp6_gro_receive(struct list_head *, struct sk_buff *);
44:	static struct sk_buff *tcp6_gso_segment(struct sk_buff *, netdev_features_t);

File net/ipv6/udp.c:
470:	void __udp6_lib_err(struct sk_buff *, struct inet6_skb_parm *, u8, u8, int, __be32, struct udp_table *);
197:	struct sock *__udp6_lib_lookup(struct net *, const struct in6_addr *, __be16, const struct in6_addr *, __be16, int, int, struct udp_table *, struct sk_buff *);
781:	int __udp6_lib_rcv(struct sk_buff *, struct udp_table *, int);
1527:	int compat_udpv6_getsockopt(struct sock *, int, int, char *, int *);
1508:	int compat_udpv6_setsockopt(struct sock *, int, int, char *, unsigned int);
293:	struct sock *udp6_lib_lookup(struct net *, const struct in6_addr *, __be16, const struct in6_addr *, __be16, int);
278:	struct sock *udp6_lib_lookup_skb(struct sk_buff *, __be16, __be16);
1585:	void udp6_proc_exit(struct net *);
1577:	int udp6_proc_init(struct net *);
1549:	int udp6_seq_show(struct seq_file *, void *);
92:	int udp_v6_get_port(struct sock *, unsigned short);
1475:	void udpv6_destroy_sock(struct sock *);
556:	void udpv6_encap_enable(void);
1652:	void udpv6_exit(void);
1518:	int udpv6_getsockopt(struct sock *, int, int, char *, int *);
1633:	int udpv6_init(void);
321:	int udpv6_recvmsg(struct sock *, struct msghdr *, size_t, int, int, int *);
1155:	int udpv6_sendmsg(struct sock *, struct msghdr *, size_t);
1498:	int udpv6_setsockopt(struct sock *, int, int, char *, unsigned int);
113:	static int compute_score(struct sock *, struct net *, const struct in6_addr *, __be16, const struct in6_addr *, unsigned short, int, int, bool);
69:	static u32 udp6_ehashfn(const struct net *, const struct in6_addr *, const u16, const struct in6_addr *, const __be16);
160:	static struct sock *udp6_lib_lookup2(struct net *, const struct in6_addr *, __be16, const struct in6_addr *, unsigned int, int, int, bool, struct udp_hslot *, struct sk_buff *);
764:	static int udp6_unicast_rcv_skb(struct sock *, struct sk_buff *, struct udphdr *);
913:	static void udp_v6_early_demux(struct sk_buff *);
962:	static void udp_v6_flush_pending_frames(struct sock *);
1128:	static int udp_v6_push_pending_frames(struct sock *);
104:	static void udp_v6_rehash(struct sock *);
1043:	static int udp_v6_send_skb(struct sk_buff *, struct flowi6 *, struct inet_cork *, struct inet_cork *);
548:	static void udpv6_err(struct sk_buff *, struct inet6_skb_parm *, u8, u8, int, __be32);
975:	static int udpv6_pre_connect(struct sock *, struct sockaddr *, int);
562:	static int udpv6_queue_rcv_skb(struct sock *, struct sk_buff *);
954:	static int udpv6_rcv(struct sk_buff *);

File net/ipv6/udp_offload.c:
174:	int udpv6_offload_exit(void);
169:	int udpv6_offload_init(void);
145:	static int udp6_gro_complete(struct sk_buff *, int);
117:	static struct sk_buff *udp6_gro_receive(struct list_head *, struct sk_buff *);
20:	static struct sk_buff *udp6_ufo_fragment(struct sk_buff *, netdev_features_t);

File net/ipv6/udplite.c:
125:	void udplite6_proc_exit(void);
120:	int udplite6_proc_init(void);
89:	void udplitev6_exit(void);
70:	int udplitev6_init(void);
110:	static void udplite6_proc_exit_net(struct net *);
101:	static int udplite6_proc_init_net(struct net *);
23:	static void udplitev6_err(struct sk_buff *, struct inet6_skb_parm *, u8, u8, int, __be32);
18:	static int udplitev6_rcv(struct sk_buff *);

File net/ipv6/xfrm6_input.c:
20:	int xfrm6_extract_input(struct xfrm_state *, struct sk_buff *);
84:	int xfrm6_input_addr(struct sk_buff *, xfrm_address_t *, xfrm_address_t *, u8);
79:	int xfrm6_rcv(struct sk_buff *);
25:	int xfrm6_rcv_spi(struct sk_buff *, int, __be32, struct ip6_tnl *);
72:	int xfrm6_rcv_tnl(struct sk_buff *, struct ip6_tnl *);
43:	int xfrm6_transport_finish(struct sk_buff *, int);
35:	static int xfrm6_transport_finish2(struct net *, struct sock *, struct sk_buff *);

File net/ipv6/xfrm6_output.c:
101:	int xfrm6_extract_output(struct xfrm_state *, struct sk_buff *);
23:	int xfrm6_find_1stfragopt(struct xfrm_state *, struct sk_buff *, u8 **);
58:	void xfrm6_local_error(struct sk_buff *, u32);
187:	int xfrm6_output(struct net *, struct sock *, struct sk_buff *);
129:	int xfrm6_output_finish(struct sock *, struct sk_buff *);
114:	int xfrm6_prepare_output(struct xfrm_state *, struct sk_buff *);
145:	static int __xfrm6_output(struct net *, struct sock *, struct sk_buff *);
138:	static int __xfrm6_output_finish(struct net *, struct sock *, struct sk_buff *);
47:	static void xfrm6_local_rxpmtu(struct sk_buff *, u32);

File net/ipv6/xfrm6_policy.c:
429:	void xfrm6_fini(void);
404:	int xfrm6_init(void);
122:	static void _decode_session6(struct sk_buff *, struct flowi *, int);
242:	static void xfrm6_dst_destroy(struct dst_entry *);
254:	static void xfrm6_dst_ifdown(struct dst_entry *, struct net_device *, int);
29:	static struct dst_entry *xfrm6_dst_lookup(struct net *, int, int, const xfrm_address_t *, const xfrm_address_t *, u32);
92:	static int xfrm6_fill_dst(struct xfrm_dst *, struct net_device *, const struct flowi *);
57:	static int xfrm6_get_saddr(struct net *, int, xfrm_address_t *, xfrm_address_t *, u32);
74:	static int xfrm6_get_tos(const struct flowi *);
79:	static int xfrm6_init_path(struct xfrm_dst *, struct dst_entry *, int);
393:	static void xfrm6_net_exit(struct net *);
376:	static int xfrm6_net_init(struct net *);
233:	static void xfrm6_redirect(struct dst_entry *, struct sock *, struct sk_buff *);
223:	static void xfrm6_update_pmtu(struct dst_entry *, struct sock *, struct sk_buff *, u32, bool);

File net/ipv6/xfrm6_protocol.c:
231:	int xfrm6_protocol_deregister(struct xfrm6_protocol *, unsigned char);
275:	void xfrm6_protocol_fini(void);
270:	int xfrm6_protocol_init(void);
184:	int xfrm6_protocol_register(struct xfrm6_protocol *, unsigned char);
49:	int xfrm6_rcv_cb(struct sk_buff *, u8, int);
110:	static void xfrm6_ah_err(struct sk_buff *, struct inet6_skb_parm *, u8, u8, int, __be32);
93:	static int xfrm6_ah_rcv(struct sk_buff *);
83:	static void xfrm6_esp_err(struct sk_buff *, struct inet6_skb_parm *, u8, u8, int, __be32);
66:	static int xfrm6_esp_rcv(struct sk_buff *);
137:	static void xfrm6_ipcomp_err(struct sk_buff *, struct inet6_skb_parm *, u8, u8, int, __be32);
120:	static int xfrm6_ipcomp_rcv(struct sk_buff *);

File net/ipv6/xfrm6_state.c:
155:	int xfrm6_extract_header(struct sk_buff *);
193:	void xfrm6_state_fini(void);
188:	int xfrm6_state_init(void);
25:	static void __xfrm6_init_tempsel(struct xfrm_selector *, const struct flowi *);
61:	static int __xfrm6_sort(void **, void **, int, int (*)(void *), int);
116:	static int __xfrm6_state_sort(struct xfrm_state **, struct xfrm_state **, int);
93:	static int __xfrm6_state_sort_cmp(void *);
149:	static int __xfrm6_tmpl_sort(struct xfrm_tmpl **, struct xfrm_tmpl **, int);
130:	static int __xfrm6_tmpl_sort_cmp(void *);
45:	static void xfrm6_init_temprop(struct xfrm_state *, const struct xfrm_tmpl *, const xfrm_address_t *, const xfrm_address_t *);

File net/l3mdev/l3mdev.c:
140:	int l3mdev_fib_rule_match(struct net *, struct flowi *, struct fib_lookup_arg *);
82:	u32 l3mdev_fib_table_by_index(struct net *, int);
55:	u32 l3mdev_fib_table_rcu(const struct net_device *);
109:	struct dst_entry *l3mdev_link_scope_lookup(struct net *, struct flowi6 *);
21:	int l3mdev_master_ifindex_rcu(const struct net_device *);
170:	void l3mdev_update_flow(struct net *, struct flowi *);

File net/mpls/mpls_gso.c:
99:	static void mpls_gso_exit(void);
89:	static int mpls_gso_init(void);
22:	static struct sk_buff *mpls_gso_segment(struct sk_buff *, netdev_features_t);

File net/netfilter/core.c:
696:	int netfilter_init(void);
614:	void nf_conntrack_destroy(struct nf_conntrack *);
600:	void nf_ct_attach(struct sk_buff *, const struct sk_buff *);
626:	bool nf_ct_get_tuple_skb(struct nf_conntrack_tuple *, const struct sk_buff *);
435:	void nf_hook_entries_delete_raw(struct nf_hook_entries **, const struct nf_hook_ops *);
184:	int nf_hook_entries_insert_raw(struct nf_hook_entries **, const struct nf_hook_ops *);
504:	int nf_hook_slow(struct sk_buff *, struct nf_hook_state *, const struct nf_hook_entries *, unsigned int);
539:	void nf_hook_slow_list(struct list_head *, struct nf_hook_state *, const struct nf_hook_entries *);
448:	int nf_register_net_hook(struct net *, const struct nf_hook_ops *);
472:	int nf_register_net_hooks(struct net *, const struct nf_hook_ops *, unsigned int);
424:	void nf_unregister_net_hook(struct net *, const struct nf_hook_ops *);
492:	void nf_unregister_net_hooks(struct net *, const struct nf_hook_ops *, unsigned int);
559:	int skb_make_writable(struct sk_buff *, unsigned int);
66:	static void __nf_hook_entries_free(struct callback_head *);
221:	static void *__nf_hook_entries_try_shrink(struct nf_hook_entries *, struct nf_hook_entries **);
313:	static int __nf_register_net_hook(struct net *, int, const struct nf_hook_ops *);
385:	static void __nf_unregister_net_hook(struct net *, int, const struct nf_hook_ops *);
90:	static unsigned int accept_all(void *, struct sk_buff *, const struct nf_hook_state *);
49:	static struct nf_hook_entries *allocate_hook_entries_size(u16);
163:	static void hooks_validate(const struct nf_hook_entries *);
686:	static void netfilter_net_exit(struct net *);
658:	static int netfilter_net_init(struct net *);
74:	static void nf_hook_entries_free(struct nf_hook_entries *);
103:	static struct nf_hook_entries *nf_hook_entries_grow(const struct nf_hook_entries *, const struct nf_hook_ops *);
266:	static struct nf_hook_entries **nf_hook_entry_head(struct net *, int, unsigned int, struct net_device *);

File net/netfilter/nf_log.c:
574:	int netfilter_log_init(void);
127:	int nf_log_bind_pf(struct net *, u_int8_t, const struct nf_logger *);
275:	int nf_log_buf_add(struct nf_log_buf *, const char *, ...);
310:	void nf_log_buf_close(struct nf_log_buf *);
295:	struct nf_log_buf *nf_log_buf_open(void);
214:	void nf_log_packet(struct net *, u_int8_t, unsigned int, const struct sk_buff *, const struct net_device *, const struct net_device *, const struct nf_loginfo *, const char *, ...);
78:	int nf_log_register(u_int8_t, struct nf_logger *);
44:	int nf_log_set(struct net *, u_int8_t, const struct nf_logger *);
243:	void nf_log_trace(struct net *, u_int8_t, unsigned int, const struct sk_buff *, const struct net_device *, const struct net_device *, const struct nf_loginfo *, const char *, ...);
143:	void nf_log_unbind_pf(struct net *, u_int8_t);
111:	void nf_log_unregister(struct nf_logger *);
62:	void nf_log_unset(struct net *, const struct nf_logger *);
160:	int nf_logger_find_get(int, enum nf_log_type);
195:	void nf_logger_put(int, enum nf_log_type);
153:	void nf_logger_request_module(int, enum nf_log_type);
27:	static struct nf_logger *__find_logger(int, const char *);
561:	static void nf_log_net_exit(struct net *);
539:	static int nf_log_net_init(struct net *);
415:	static int nf_log_proc_dostring(struct ctl_table *, int, void *, size_t *, loff_t *);
337:	static void *seq_next(struct seq_file *, void *, loff_t *);
354:	static int seq_show(struct seq_file *, void *);
325:	static void *seq_start(struct seq_file *, loff_t *);
349:	static void seq_stop(struct seq_file *, void *);

File net/netfilter/nf_queue.c:
215:	int nf_queue(struct sk_buff *, struct nf_hook_state *, const struct nf_hook_entries *, unsigned int, unsigned int);
76:	void nf_queue_entry_get_refs(struct nf_queue_entry *);
49:	void nf_queue_entry_release_refs(struct nf_queue_entry *);
101:	void nf_queue_nf_hook_drop(struct net *);
34:	void nf_register_queue_handler(struct net *, const struct nf_queue_handler *);
277:	void nf_reinject(struct nf_queue_entry *, unsigned int);
43:	void nf_unregister_queue_handler(struct net *);

File net/netfilter/nf_sockopt.c:
160:	int compat_nf_getsockopt(struct sock *, u_int8_t, int, char *, int *);
153:	int compat_nf_setsockopt(struct sock *, u_int8_t, int, char *, unsigned int);
119:	int nf_getsockopt(struct sock *, u_int8_t, int, char *, int *);
25:	int nf_register_sockopt(struct nf_sockopt_ops *);
112:	int nf_setsockopt(struct sock *, u_int8_t, int, char *, unsigned int);
54:	void nf_unregister_sockopt(struct nf_sockopt_ops *);
62:	static struct nf_sockopt_ops *nf_sockopt_find(u_int8_t, int, int, struct sock *);

File net/netfilter/utils.c:
122:	__sum16 nf_checksum(struct sk_buff *, unsigned int, unsigned int, u8, unsigned short);
141:	__sum16 nf_checksum_partial(struct sk_buff *, unsigned int, unsigned int, unsigned int, u8, unsigned short);
63:	__sum16 nf_ip6_checksum(struct sk_buff *, unsigned int, unsigned int, u8);
10:	__sum16 nf_ip_checksum(struct sk_buff *, unsigned int, unsigned int, u8);
183:	int nf_reroute(struct sk_buff *, struct nf_queue_entry *);
162:	int nf_route(struct net *, struct dst_entry **, struct flowi *, bool, unsigned short);

File net/netfilter/x_tables.c:
948:	unsigned int *xt_alloc_entry_offsets(unsigned int);
1169:	struct xt_table_info *xt_alloc_table_info(unsigned int);
897:	int xt_check_entry_offsets(const void *, const char *, unsigned int, unsigned int);
465:	int xt_check_match(struct xt_mtchk_param *, unsigned int, u_int8_t, bool);
448:	int xt_check_proc_name(const char *, unsigned int);
569:	int xt_check_table_hooks(const struct xt_table_info *, unsigned int);
985:	int xt_check_target(struct xt_tgchk_param *, unsigned int, u_int8_t, bool);
650:	int xt_compat_add_offset(u_int8_t, unsigned int, int);
684:	int xt_compat_calc_jump(u_int8_t, unsigned int);
805:	int xt_compat_check_entry_offsets(const void *, const char *, unsigned int, unsigned int);
671:	void xt_compat_flush_offsets(u_int8_t);
702:	int xt_compat_init_offsets(u8, unsigned int);
1276:	void xt_compat_lock(u_int8_t);
736:	void xt_compat_match_from_user(struct xt_entry_match *, void **, unsigned int *);
729:	int xt_compat_match_offset(const struct xt_match *);
769:	int xt_compat_match_to_user(const struct xt_entry_match *, void **, unsigned int *);
1116:	void xt_compat_target_from_user(struct xt_entry_target *, void **, unsigned int *);
1109:	int xt_compat_target_offset(const struct xt_target *);
1143:	int xt_compat_target_to_user(const struct xt_entry_target *, void **, unsigned int *);
1282:	void xt_compat_unlock(u_int8_t);
1055:	void *xt_copy_counters_from_user(const void *, unsigned int, struct xt_counters_info *, bool);
1338:	struct xt_counters *xt_counters_alloc(unsigned int);
297:	int xt_data_to_user(void *, const void *, int, int, int);
965:	bool xt_find_jump_offset(const unsigned int *, unsigned int, unsigned int);
181:	struct xt_match *xt_find_match(u8, const char *, u8);
378:	int xt_find_revision(u8, const char *, u8, int, int *);
1202:	struct xt_table *xt_find_table_lock(struct net *, u_int8_t, const char *);
230:	struct xt_target *xt_find_target(u8, const char *, u8);
1187:	void xt_free_table_info(struct xt_table_info *);
1697:	struct nf_hook_ops *xt_hook_ops_alloc(const struct xt_table *, nf_hookfn *);
317:	int xt_match_to_user(const struct xt_entry_match *, struct xt_entry_match *);
1834:	bool xt_percpu_counter_alloc(struct xt_percpu_counter_alloc_state *, struct xt_counters *);
1858:	void xt_percpu_counter_free(struct xt_counters *);
1792:	void xt_proto_fini(struct net *, u_int8_t);
1726:	int xt_proto_init(struct net *, u_int8_t);
123:	int xt_register_match(struct xt_match *);
146:	int xt_register_matches(struct xt_match *, unsigned int);
1425:	struct xt_table *xt_register_table(struct net *, const struct xt_table *, struct xt_table_info *, struct xt_table_info *);
73:	int xt_register_target(struct xt_target *);
96:	int xt_register_targets(struct xt_target *, unsigned int);
1354:	struct xt_table_info *xt_replace_table(struct xt_table *, unsigned int, struct xt_table_info *, int *);
212:	struct xt_match *xt_request_find_match(uint8_t, const char *, uint8_t);
1251:	struct xt_table *xt_request_find_table_lock(struct net *, u_int8_t, const char *);
260:	struct xt_target *xt_request_find_target(u8, const char *, u8);
1269:	void xt_table_unlock(struct xt_table *);
325:	int xt_target_to_user(const struct xt_entry_target *, struct xt_entry_target *);
135:	void xt_unregister_match(struct xt_match *);
166:	void xt_unregister_matches(struct xt_match *, unsigned int);
1474:	void *xt_unregister_table(struct xt_table *);
85:	void xt_unregister_target(struct xt_target *);
116:	void xt_unregister_targets(struct xt_target *, unsigned int);
643:	static bool error_tg_ok(unsigned int, const char *, unsigned int, unsigned int);
333:	static int match_revfn(u8, const char *, u8, int *);
355:	static int target_revfn(u8, const char *, u8, int *);
402:	static char *textify_hooks(char *, unsigned int, uint8_t, size_t);
618:	static bool verdict_ok(int);
1917:	static void xt_fini(void);
1889:	static int xt_init(void);
1619:	static void *xt_match_seq_next(struct seq_file *, void *, loff_t *);
1624:	static int xt_match_seq_show(struct seq_file *, void *);
1614:	static void *xt_match_seq_start(struct seq_file *, loff_t *);
1545:	static void *xt_mttg_seq_next(struct seq_file *, loff_t *, bool, void *);
1599:	static void xt_mttg_seq_stop(struct seq_file *, void *);
1876:	static void xt_net_exit(struct net *);
1867:	static int xt_net_init(struct net *);
278:	static int xt_obj_to_user(u16 *, u16, void *, const char *, u8 *, u8);
1498:	static void *xt_table_seq_next(struct seq_file *, void *, loff_t *);
1513:	static int xt_table_seq_show(struct seq_file *, void *);
1489:	static void *xt_table_seq_start(struct seq_file *, loff_t *);
1506:	static void xt_table_seq_stop(struct seq_file *, void *);
1653:	static void *xt_target_seq_next(struct seq_file *, void *, loff_t *);
1658:	static int xt_target_seq_show(struct seq_file *, void *);
1648:	static void *xt_target_seq_start(struct seq_file *, loff_t *);

File net/netfilter/xt_tcpudp.c:
65:	static bool tcp_mt(const struct sk_buff *, struct xt_action_param *);
120:	static int tcp_mt_check(const struct xt_mtchk_param *);
225:	static void tcpudp_mt_exit(void);
220:	static int tcpudp_mt_init(void);
128:	static bool udp_mt(const struct sk_buff *, struct xt_action_param *);
155:	static int udp_mt_check(const struct xt_mtchk_param *);

File net/netlabel/netlabel_addrlist.c:
162:	int netlbl_af4list_add(struct netlbl_af4list *, struct list_head *);
324:	void netlbl_af4list_audit_addr(struct audit_buffer *, int, const char *, __be32, __be32);
253:	struct netlbl_af4list *netlbl_af4list_remove(__be32, __be32, struct list_head *);
235:	void netlbl_af4list_remove_entry(struct netlbl_af4list *);
60:	struct netlbl_af4list *netlbl_af4list_search(__be32, struct list_head *);
84:	struct netlbl_af4list *netlbl_af4list_search_exact(__be32, __be32, struct list_head *);
199:	int netlbl_af6list_add(struct netlbl_af6list *, struct list_head *);
357:	void netlbl_af6list_audit_addr(struct audit_buffer *, int, const char *, const struct in6_addr *, const struct in6_addr *);
293:	struct netlbl_af6list *netlbl_af6list_remove(const struct in6_addr *, const struct in6_addr *, struct list_head *);
275:	void netlbl_af6list_remove_entry(struct netlbl_af6list *);
110:	struct netlbl_af6list *netlbl_af6list_search(const struct in6_addr *, struct list_head *);
135:	struct netlbl_af6list *netlbl_af6list_search_exact(const struct in6_addr *, const struct in6_addr *, struct list_head *);

File net/netlabel/netlabel_calipso.c:
733:	int calipso_cache_add(const unsigned char *, const struct netlbl_lsm_secattr *);
715:	void calipso_cache_invalidate(void);
412:	int calipso_doi_add(struct calipso_doi *, struct netlbl_audit *);
431:	void calipso_doi_free(struct calipso_doi *);
470:	struct calipso_doi *calipso_doi_getdef(u32);
488:	void calipso_doi_putdef(struct calipso_doi *);
450:	int calipso_doi_remove(u32, struct netlbl_audit *);
509:	int calipso_doi_walk(u32 *, int (*)(struct calipso_doi *, void *), void *);
654:	int calipso_getattr(const unsigned char *, struct netlbl_lsm_secattr *);
634:	unsigned char *calipso_optptr(const struct sk_buff *);
617:	void calipso_req_delattr(struct request_sock *);
597:	int calipso_req_setattr(struct request_sock *, const struct calipso_doi *, const struct netlbl_lsm_secattr *);
697:	int calipso_skbuff_delattr(struct sk_buff *);
676:	int calipso_skbuff_setattr(struct sk_buff *, const struct calipso_doi *, const struct netlbl_lsm_secattr *);
577:	void calipso_sock_delattr(struct sock *);
533:	int calipso_sock_getattr(struct sock *, struct netlbl_lsm_secattr *);
557:	int calipso_sock_setattr(struct sock *, const struct calipso_doi *, const struct netlbl_lsm_secattr *);
373:	int netlbl_calipso_genl_init(void);
388:	const struct netlbl_calipso_ops *netlbl_calipso_ops_register(const struct netlbl_calipso_ops *);
112:	static int netlbl_calipso_add(struct sk_buff *, struct genl_info *);
144:	static int netlbl_calipso_list(struct sk_buff *, struct genl_info *);
244:	static int netlbl_calipso_listall(struct sk_buff *, struct netlink_callback *);
205:	static int netlbl_calipso_listall_cb(struct calipso_doi *, void *);
293:	static int netlbl_calipso_remove(struct sk_buff *, struct genl_info *);
272:	static int netlbl_calipso_remove_cb(struct netlbl_dom_map *, void *);

File net/netlabel/netlabel_cipso_v4.c:
789:	int netlbl_cipsov4_genl_init(void);
413:	static int netlbl_cipsov4_add(struct sk_buff *, struct genl_info *);
93:	static int netlbl_cipsov4_add_common(struct cipso_v4_doi *, struct genl_info *);
458:	static int netlbl_cipsov4_list(struct sk_buff *, struct genl_info *);
658:	static int netlbl_cipsov4_listall(struct sk_buff *, struct netlink_callback *);
619:	static int netlbl_cipsov4_listall_cb(struct cipso_v4_doi *, void *);
707:	static int netlbl_cipsov4_remove(struct sk_buff *, struct genl_info *);
686:	static int netlbl_cipsov4_remove_cb(struct netlbl_dom_map *, void *);

File net/netlabel/netlabel_domainhash.c:
417:	int netlbl_domhsh_add(struct netlbl_dom_map *, struct netlbl_audit *);
573:	int netlbl_domhsh_add_default(struct netlbl_dom_map *, struct netlbl_audit *);
870:	struct netlbl_dom_map *netlbl_domhsh_getentry(const char *, u16);
888:	struct netlbl_dommap_def *netlbl_domhsh_getentry_af4(const char *, __be32);
918:	struct netlbl_dommap_def *netlbl_domhsh_getentry_af6(const char *, const struct in6_addr *);
374:	int netlbl_domhsh_init(u32);
807:	int netlbl_domhsh_remove(const char *, u16, struct netlbl_audit *);
673:	int netlbl_domhsh_remove_af4(const char *, const struct in_addr *, const struct in_addr *, struct netlbl_audit *);
742:	int netlbl_domhsh_remove_af6(const char *, const struct in6_addr *, const struct in6_addr *, struct netlbl_audit *);
853:	int netlbl_domhsh_remove_default(u16, struct netlbl_audit *);
591:	int netlbl_domhsh_remove_entry(struct netlbl_dom_map *, struct netlbl_audit *);
952:	int netlbl_domhsh_walk(u32 *, u32 *, int (*)(struct netlbl_dom_map *, void *), void *);
220:	static void netlbl_domhsh_audit_add(struct netlbl_dom_map *, struct netlbl_af4list *, struct netlbl_af6list *, int, struct netlbl_audit *);
78:	static void netlbl_domhsh_free_entry(struct callback_head *);
118:	static u32 netlbl_domhsh_hash(const char *);
150:	static struct netlbl_dom_map *netlbl_domhsh_search(const char *, u16);
184:	static struct netlbl_dom_map *netlbl_domhsh_search_def(const char *, u16);

File net/netlabel/netlabel_kapi.c:
1487:	struct audit_buffer *netlbl_audit_start(int, struct netlbl_audit *);
935:	void netlbl_bitmap_setbit(unsigned char *, u32, u8);
894:	int netlbl_bitmap_walk(const unsigned char *, u32, u32, u8);
1446:	int netlbl_cache_add(const struct sk_buff *, u16, const struct netlbl_lsm_secattr *);
1426:	void netlbl_cache_invalidate(void);
739:	int netlbl_catmap_getlong(struct netlbl_lsm_catmap *, u32 *, unsigned long *);
789:	int netlbl_catmap_setbit(struct netlbl_lsm_catmap **, u32, gfp_t);
856:	int netlbl_catmap_setlong(struct netlbl_lsm_catmap **, u32, unsigned long, gfp_t);
820:	int netlbl_catmap_setrng(struct netlbl_lsm_catmap **, u32, u32, gfp_t);
622:	int netlbl_catmap_walk(struct netlbl_lsm_catmap *, u32);
677:	int netlbl_catmap_walkrng(struct netlbl_lsm_catmap *, u32);
421:	int netlbl_cfg_calipso_add(struct calipso_doi *, struct netlbl_audit *);
441:	void netlbl_cfg_calipso_del(u32, struct netlbl_audit *);
462:	int netlbl_cfg_calipso_map_add(u32, const char *, const struct in6_addr *, const struct in6_addr *, struct netlbl_audit *);
302:	int netlbl_cfg_cipsov4_add(struct cipso_v4_doi *, struct netlbl_audit *);
318:	void netlbl_cfg_cipsov4_del(u32, struct netlbl_audit *);
337:	int netlbl_cfg_cipsov4_map_add(u32, const char *, const struct in_addr *, const struct in_addr *, struct netlbl_audit *);
70:	int netlbl_cfg_map_del(const char *, u16, const void *, const void *, struct netlbl_audit *);
109:	int netlbl_cfg_unlbl_map_add(const char *, u16, const void *, const void *, struct netlbl_audit *);
222:	int netlbl_cfg_unlbl_static_add(struct net *, const char *, const void *, const void *, u16, u32, struct netlbl_audit *);
265:	int netlbl_cfg_unlbl_static_del(struct net *, const char *, const void *, const void *, u16, struct netlbl_audit *);
1116:	int netlbl_conn_setattr(struct sock *, struct sockaddr *, const struct netlbl_lsm_secattr *);
966:	int netlbl_enabled(void);
1264:	void netlbl_req_delattr(struct request_sock *);
1196:	int netlbl_req_setattr(struct request_sock *, const struct netlbl_lsm_secattr *);
1407:	void netlbl_skbuff_err(struct sk_buff *, u16, int, int);
1370:	int netlbl_skbuff_getattr(const struct sk_buff *, u16, struct netlbl_lsm_secattr *);
1289:	int netlbl_skbuff_setattr(struct sk_buff *, u16, const struct netlbl_lsm_secattr *);
1057:	void netlbl_sock_delattr(struct sock *);
1083:	int netlbl_sock_getattr(struct sock *, struct netlbl_lsm_secattr *);
989:	int netlbl_sock_setattr(struct sock *, u16, const struct netlbl_lsm_secattr *);
567:	static struct netlbl_lsm_catmap *_netlbl_catmap_getnode(struct netlbl_lsm_catmap **, u32, unsigned int, gfp_t);
1505:	static int netlbl_init(void);

File net/netlabel/netlabel_mgmt.c:
854:	int netlbl_mgmt_genl_init(void);
434:	static int netlbl_mgmt_add(struct sk_buff *, struct genl_info *);
90:	static int netlbl_mgmt_add_common(struct netlbl_audit *, struct genl_info *);
558:	static int netlbl_mgmt_adddef(struct sk_buff *, struct genl_info *);
527:	static int netlbl_mgmt_listall(struct sk_buff *, struct netlink_callback *);
491:	static int netlbl_mgmt_listall_cb(struct netlbl_dom_map *, void *);
608:	static int netlbl_mgmt_listdef(struct sk_buff *, struct genl_info *);
295:	static int netlbl_mgmt_listentry(struct sk_buff *, struct netlbl_dom_map *);
696:	static int netlbl_mgmt_protocols(struct sk_buff *, struct netlink_callback *);
662:	static int netlbl_mgmt_protocols_cb(struct sk_buff *, u32, struct netlink_callback *, struct netlink_callback *);
465:	static int netlbl_mgmt_remove(struct sk_buff *, struct genl_info *);
588:	static int netlbl_mgmt_removedef(struct sk_buff *, struct genl_info *);
740:	static int netlbl_mgmt_version(struct sk_buff *, struct genl_info *);

File net/netlabel/netlabel_unlabeled.c:
1538:	int netlbl_unlabel_defconf(void);
1398:	int netlbl_unlabel_genl_init(void);
1464:	int netlbl_unlabel_getattr(const struct sk_buff *, u16, struct netlbl_lsm_secattr *);
1422:	int netlbl_unlabel_init(u32);
377:	int netlbl_unlhsh_add(struct net *, const char *, const void *, const void *, u32, u32, struct netlbl_audit *);
641:	int netlbl_unlhsh_remove(struct net *, const char *, const void *, const void *, u32, struct netlbl_audit *);
822:	static int netlbl_unlabel_accept(struct sk_buff *, struct genl_info *);
748:	static void netlbl_unlabel_acceptflg_set(u8, struct netlbl_audit *);
777:	static int netlbl_unlabel_addrinfo_get(void **, void **, u32 *, struct genl_info *);
849:	static int netlbl_unlabel_list(struct sk_buff *, struct genl_info *);
890:	static int netlbl_unlabel_staticadd(struct sk_buff *, struct genl_info *);
942:	static int netlbl_unlabel_staticadddef(struct sk_buff *, struct genl_info *);
1176:	static int netlbl_unlabel_staticlist(struct sk_buff *, struct netlink_callback *);
1078:	static int netlbl_unlabel_staticlist_gen(u32, const struct netlbl_unlhsh_addr4 *, const struct netlbl_unlhsh_addr6 *, void *, const struct netlbl_unlhsh_iface *);
1259:	static int netlbl_unlabel_staticlistdef(struct sk_buff *, struct netlink_callback *);
991:	static int netlbl_unlabel_staticremove(struct sk_buff *, struct genl_info *);
1033:	static int netlbl_unlabel_staticremovedef(struct sk_buff *, struct genl_info *);
161:	static void netlbl_unlhsh_free_iface(struct callback_head *);
712:	static int netlbl_unlhsh_netdev_handler(struct notifier_block *, unsigned long, void *);
216:	static struct netlbl_unlhsh_iface *netlbl_unlhsh_search_iface(int);

File net/netlabel/netlabel_user.c:
97:	struct audit_buffer *netlbl_audit_start_common(int, struct netlbl_audit *);
63:	int netlbl_netlink_init(void);

File net/netlink/af_netlink.c:
2108:	int __netlink_change_ngroups(struct sock *, unsigned int);
2154:	void __netlink_clear_multicast_users(struct sock *, unsigned int);
2286:	int __netlink_dump_start(struct sock *, struct sk_buff *, const struct nlmsghdr *, struct netlink_dump_control *);
2024:	struct sock *__netlink_kernel_create(struct net *, int, struct module *, struct netlink_kernel_cfg *);
871:	bool __netlink_ns_capable(const struct netlink_skb_parms *, struct user_namespace *, int);
2164:	struct nlmsghdr *__nlmsg_put(struct sk_buff *, u32, u32, int, int, int);
2360:	void netlink_ack(struct sk_buff *, struct nlmsghdr *, int, const struct netlink_ext_ack *);
183:	int netlink_add_tap(struct netlink_tap *);
1224:	int netlink_attachskb(struct sock *, struct sk_buff *, long *, struct sock *);
1545:	int netlink_broadcast(struct sock *, struct sk_buff *, u32, u32, gfp_t);
1494:	int netlink_broadcast_filtered(struct sock *, struct sk_buff *, u32, u32, gfp_t, int (*)(struct sock *, struct sk_buff *, void *), void *);
906:	bool netlink_capable(const struct sk_buff *, int);
2143:	int netlink_change_ngroups(struct sock *, unsigned int);
1283:	void netlink_detachskb(struct sock *, struct sk_buff *);
1173:	struct sock *netlink_getsockbyfilp(struct file *);
1369:	int netlink_has_listeners(struct sock *, unsigned int);
2099:	void netlink_kernel_release(struct sock *);
922:	bool netlink_net_capable(const struct sk_buff *, int);
890:	bool netlink_ns_capable(const struct sk_buff *, struct user_namespace *, int);
2436:	int netlink_rcv_skb(struct sk_buff *, int (*)(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *));
2654:	int netlink_register_notifier(struct notifier_block *);
228:	int netlink_remove_tap(struct netlink_tap *);
1275:	int netlink_sendskb(struct sock *, struct sk_buff *);
1596:	int netlink_set_err(struct sock *, u32, u32, int);
429:	void netlink_table_grab(void);
454:	void netlink_table_ungrab(void);
1333:	int netlink_unicast(struct sock *, struct sk_buff *, u32, int);
2660:	int netlink_unregister_notifier(struct notifier_block *);
2490:	int nlmsg_notify(struct sock *, struct sk_buff *, u32, unsigned int, int, gfp_t);
639:	static int __netlink_create(struct net *, struct socket *, struct mutex *, int, int);
312:	static void __netlink_deliver_tap(struct sk_buff *, struct netlink_tap_net *);
508:	static struct sock *__netlink_lookup(struct netlink_table *, u32, struct net *);
1264:	static int __netlink_sendskb(struct sock *, struct sk_buff *);
2549:	static void *__netlink_seq_next(struct seq_file *);
731:	static void deferred_put_nlk_sk(struct callback_head *);
824:	static int netlink_autobind(struct socket *);
993:	static int netlink_bind(struct socket *, struct sockaddr *, int);
490:	static int netlink_compare(struct rhashtable_compare_arg *, const void *);
500:	static void netlink_compare_arg_init(struct netlink_compare_arg *, struct net *, u32);
1081:	static int netlink_connect(struct socket *, struct sockaddr *, int, int);
671:	static int netlink_create(struct net *, struct socket *, int, int);
2012:	static void netlink_data_ready(struct sock *);
2186:	static int netlink_dump(struct sock *);
1124:	static int netlink_getname(struct socket *, struct sockaddr *, int);
1729:	static int netlink_getsockopt(struct socket *, int, int, char *, int *);
2735:	static u32 netlink_hash(const void *, u32, u32);
568:	static int netlink_insert(struct sock *, u32);
1146:	static int netlink_ioctl(struct socket *, unsigned int, unsigned long);
528:	static struct sock *netlink_lookup(struct net *, int, u32);
2703:	static void netlink_net_exit(struct net *);
2693:	static int netlink_net_init(struct net *);
346:	static void netlink_overrun(struct sock *);
2752:	static int netlink_proto_init(void);
946:	static int netlink_realloc_groups(struct sock *);
1923:	static int netlink_recvmsg(struct socket *, struct msghdr *, size_t, int);
751:	static int netlink_release(struct socket *);
1840:	static int netlink_sendmsg(struct socket *, struct msghdr *, size_t);
2602:	static void *netlink_seq_next(struct seq_file *, void *, loff_t *);
2619:	static int netlink_seq_show(struct seq_file *, void *);
2583:	static void *netlink_seq_start(struct seq_file *, loff_t *);
2608:	static void netlink_seq_stop(struct seq_file *, void *);
1635:	static int netlink_setsockopt(struct socket *, int, int, char *, unsigned int);
370:	static void netlink_skb_destructor(struct sk_buff *);
383:	static void netlink_skb_set_owner_r(struct sk_buff *, struct sock *);
392:	static void netlink_sock_destruct(struct sock *);
415:	static void netlink_sock_destruct_work(struct work_struct *);
248:	static void netlink_tap_exit_net(struct net *);
239:	static int netlink_tap_init_net(struct net *);
1289:	static struct sk_buff *netlink_trim(struct sk_buff *, gfp_t);
979:	static void netlink_undo_bind(int, unsigned long, struct sock *);
545:	static void netlink_update_listeners(struct sock *);
1619:	static void netlink_update_socket_mc(struct netlink_sock *, unsigned int, int);
935:	static void netlink_update_subscriptions(struct sock *, unsigned int);

File net/netlink/genetlink.c:
1073:	struct nlattr **genl_family_attrbuf(const struct genl_family *);
31:	void genl_lock(void);
1130:	void genl_notify(const struct genl_family *, struct sk_buff *, struct genl_info *, u32, gfp_t);
322:	int genl_register_family(struct genl_family *);
37:	void genl_unlock(void);
404:	int genl_unregister_family(const struct genl_family *);
1119:	int genlmsg_multicast_allns(const struct genl_family *, struct sk_buff *, u32, unsigned int, gfp_t);
441:	void *genlmsg_put(struct sk_buff *, u32, u32, const struct genl_family *, int, u8);
803:	static struct sk_buff *ctrl_build_family_msg(const struct genl_family *, u32, int, u8);
776:	static int ctrl_dumpfamily(struct sk_buff *, struct netlink_callback *);
648:	static int ctrl_fill_info(const struct genl_family *, u32, u32, u32, struct sk_buff *, u8);
850:	static int ctrl_getfamily(struct sk_buff *, struct genl_info *);
964:	static int genl_bind(struct net *, int);
897:	static int genl_ctrl_event(int, const struct genl_family *, const struct genl_multicast_group *, int);
98:	static const struct genl_family *genl_family_find_byname(char *);
501:	static int genl_family_rcv_msg(const struct genl_family *, struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
1043:	static int genl_init(void);
487:	static int genl_lock_done(struct netlink_callback *);
475:	static int genl_lock_dumpit(struct sk_buff *, struct netlink_callback *);
461:	static int genl_lock_start(struct netlink_callback *);
1032:	static void genl_pernet_exit(struct net *);
1011:	static int genl_pernet_init(struct net *);
635:	static void genl_rcv(struct sk_buff *);
614:	static int genl_rcv_msg(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
991:	static void genl_unbind(struct net *, int);

File net/nsh/nsh.c:
50:	int nsh_pop(struct sk_buff *);
17:	int nsh_push(struct sk_buff *, const struct nshhdr *);
145:	static void nsh_cleanup_module(void);
79:	static struct sk_buff *nsh_gso_segment(struct sk_buff *, netdev_features_t);
139:	static int nsh_init_module(void);

File net/packet/af_packet.c:
1474:	static void __fanout_link(struct sock *, struct packet_sock *);
1526:	static void __fanout_set_data_bpf(struct packet_fanout *, struct bpf_prog *);
395:	static int __packet_get_status(void *, struct packet_sock *);
278:	static u16 __packet_pick_tx_queue(struct net_device *, struct sk_buff *, struct net_device *);
1239:	static int __packet_rcv_has_room(struct packet_sock *, struct sk_buff *);
369:	static void __packet_set_status(int, void *, struct packet_sock *);
305:	static void __register_prot_hook(struct sock *);
1213:	static bool __tpacket_has_room(struct packet_sock *, int);
332:	static void __unregister_prot_hook(struct sock *, bool);
4036:	static int compat_packet_setsockopt(struct socket *, int, int, char *, unsigned int);
1350:	static unsigned int fanout_demux_rollover(struct packet_fanout *, struct sk_buff *, unsigned int, bool, unsigned int);
4215:	static void free_pg_vec(struct pgv *, unsigned int, unsigned int);
1505:	static bool match_fanout_group(struct packet_type *, struct sock *);
3210:	static int packet_bind(struct socket *, struct sockaddr *, int);
3189:	static int packet_bind_spkt(struct socket *, struct sockaddr *, int);
3238:	static int packet_create(struct net *, struct socket *, int, int);
3515:	static int packet_dev_mc(struct net_device *, struct packet_mclist *, int);
244:	static int packet_direct_xmit(struct sk_buff *);
3092:	static int packet_do_bind(struct sock *, const char *, int, __be16);
4645:	static void packet_exit(void);
3483:	static int packet_getname(struct socket *, struct sockaddr *, int);
3463:	static int packet_getname_spkt(struct socket *, struct sockaddr *, int);
3915:	static int packet_getsockopt(struct socket *, int, int, char *, int *);
4653:	static int packet_init(void);
4107:	static int packet_ioctl(struct socket *, unsigned int, unsigned long);
471:	static void *packet_lookup_frame(struct packet_sock *, unsigned int, int, struct packet_ring_buffer *, struct packet_ring_buffer *, struct packet_ring_buffer *);
4200:	static void packet_mm_close(struct vm_area_struct *);
4190:	static void packet_mm_open(struct vm_area_struct *);
4449:	static int packet_mmap(struct file *, struct socket *, struct vm_area_struct *);
4633:	static void packet_net_exit(struct net *);
4621:	static int packet_net_init(struct net *);
4056:	static int packet_notifier(struct notifier_block *, unsigned long, void *);
4160:	static __poll_t packet_poll(struct file *, struct socket *, poll_table *);
2037:	static int packet_rcv(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *);
1417:	static int packet_rcv_fanout(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *);
1270:	static int packet_rcv_has_room(struct packet_sock *, struct sk_buff *);
1796:	static int packet_rcv_spkt(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *);
1177:	static unsigned int packet_read_pending(const struct packet_ring_buffer *);
3319:	static int packet_recvmsg(struct socket *, struct msghdr *, size_t, int);
3017:	static int packet_release(struct socket *);
3001:	static int packet_sendmsg(struct socket *, struct msghdr *, size_t);
1868:	static int packet_sendmsg_spkt(struct socket *, struct msghdr *, size_t);
4577:	static void *packet_seq_next(struct seq_file *, void *, loff_t *);
4589:	static int packet_seq_show(struct seq_file *, void *);
4568:	static void *packet_seq_start(struct seq_file *, loff_t *);
4583:	static void packet_seq_stop(struct seq_file *, void *);
4283:	static int packet_set_ring(struct sock *, union tpacket_req_u *, int, int);
3663:	static int packet_setsockopt(struct socket *, int, int, char *, unsigned int);
1285:	static void packet_sock_destruct(struct sock *);
996:	static void prb_fill_curr_block(char *, struct tpacket_kbdq_core *, unsigned int, struct tpacket_block_desc *, struct tpacket_block_desc *);
814:	static void prb_open_block(struct tpacket_kbdq_core *, struct tpacket_block_desc *);
914:	static void prb_retire_current_block(struct tpacket_kbdq_core *, struct packet_sock *, unsigned int);
643:	static void prb_retire_rx_blk_timer_expired(struct timer_list *);
2416:	static void tpacket_destruct_skb(struct sk_buff *);
419:	static __u32 tpacket_get_timestamp(struct sk_buff *, struct timespec *, unsigned int);
2152:	static int tpacket_rcv(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *);
2625:	static int tpacket_snd(struct packet_sock *, struct msghdr *);

File net/sched/act_api.c:
122:	int __tcf_idr_release(struct tc_action *, bool, bool);
1678:	int tc_setup_cb_egdev_call(const struct net_device *, enum tc_setup_type, void *, bool);
1647:	int tc_setup_cb_egdev_register(const struct net_device *, tc_setup_cb_t *, void *);
1669:	void tc_setup_cb_egdev_unregister(const struct net_device *, tc_setup_cb_t *, void *);
953:	int tcf_action_copy_stats(struct sk_buff *, struct tc_action *, int);
646:	int tcf_action_destroy(struct tc_action **, int);
738:	int tcf_action_dump(struct sk_buff *, struct tc_action **, int, int);
701:	int tcf_action_dump_1(struct sk_buff *, struct tc_action *, int, int);
695:	int tcf_action_dump_old(struct sk_buff *, struct tc_action *, int, int);
598:	int tcf_action_exec(struct sk_buff *, struct tc_action **, int, struct tcf_result *);
917:	int tcf_action_init(struct net *, struct tcf_proto *, struct nlattr *, struct nlattr *, char *, int, int, struct tc_action **, size_t *, bool, struct netlink_ext_ack *);
790:	struct tc_action *tcf_action_init_1(struct net *, struct tcf_proto *, struct nlattr *, struct nlattr *, char *, int, int, bool, struct netlink_ext_ack *);
284:	int tcf_generic_walker(struct tc_action_net *, struct sk_buff *, struct netlink_callback *, int, const struct tc_action_ops *, struct netlink_ext_ack *);
436:	int tcf_idr_check_alloc(struct tc_action_net *, u32 *, struct tc_action **, int);
419:	void tcf_idr_cleanup(struct tc_action_net *, u32);
357:	int tcf_idr_create(struct tc_action_net *, u32, struct nlattr *, struct tc_action **, const struct tc_action_ops *, int, bool);
406:	void tcf_idr_insert(struct tc_action_net *, struct tc_action *);
303:	int tcf_idr_search(struct tc_action_net *, struct tc_action **, u32);
483:	void tcf_idrinfo_destroy(const struct tc_action_ops *, struct tcf_idrinfo *);
505:	int tcf_register_action(struct tc_action_ops *, struct pernet_operations *);
537:	int tcf_unregister_action(struct tc_action_ops *, struct pernet_operations *);
102:	static int __tcf_action_put(struct tc_action *, bool);
1387:	static struct nlattr *find_dump_kind(struct nlattr **);
1711:	static int tc_action_init(void);
1336:	static int tc_ctl_action(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
1410:	static int tc_dump_action(struct sk_buff *, struct netlink_callback *);
578:	static struct tc_action_ops *tc_lookup_action(struct nlattr *);
559:	static struct tc_action_ops *tc_lookup_action_n(char *);
1233:	static int tca_action_gd(struct net *, struct nlattr *, struct nlmsghdr *, u32, int, struct netlink_ext_ack *);
997:	static int tca_get_fill(struct sk_buff *, struct tc_action **, u32, u32, u16, int, int, int);
1305:	static int tcf_action_add(struct net *, struct nlattr *, struct nlmsghdr *, u32, int, struct netlink_ext_ack *);
93:	static void tcf_action_cleanup(struct tc_action *);
1524:	static struct tcf_action_egdev *tcf_action_egdev_lookup(const struct net_device *);
1557:	static void tcf_action_egdev_put(struct tcf_action_egdev *);
1697:	static void tcf_action_net_exit(struct net *);
1690:	static int tcf_action_net_init(struct net *);
678:	static void tcf_action_put_many(struct tc_action **);
58:	static void tcf_free_cookie_rcu(struct callback_head *);

File net/sched/cls_api.c:
872:	struct tcf_block_cb *__tcf_block_cb_register(struct tcf_block *, tc_setup_cb_t *, void *, void *, struct netlink_ext_ack *);
910:	void __tcf_block_cb_unregister(struct tcf_block *, struct tcf_block_cb *);
91:	int register_tcf_proto_ops(struct tcf_proto_ops *);
2197:	int tc_setup_cb_call(struct tcf_block *, struct tcf_exts *, enum tc_setup_type, void *, bool);
833:	unsigned int tcf_block_cb_decref(struct tcf_block_cb *);
827:	void tcf_block_cb_incref(struct tcf_block_cb *);
816:	struct tcf_block_cb *tcf_block_cb_lookup(struct tcf_block *, tc_setup_cb_t *, void *);
810:	void *tcf_block_cb_priv(struct tcf_block_cb *);
898:	int tcf_block_cb_register(struct tcf_block *, tc_setup_cb_t *, void *, void *, struct netlink_ext_ack *);
921:	void tcf_block_cb_unregister(struct tcf_block *, tc_setup_cb_t *, void *);
732:	int tcf_block_get(struct tcf_block **, struct tcf_proto **, struct Qdisc *, struct netlink_ext_ack *);
663:	int tcf_block_get_ext(struct tcf_block **, struct Qdisc *, struct tcf_block_ext_info *, struct netlink_ext_ack *);
621:	void tcf_block_netif_keep_dst(struct tcf_block *);
791:	void tcf_block_put(struct tcf_block *);
749:	void tcf_block_put_ext(struct tcf_block *, struct Qdisc *, struct tcf_block_ext_info *);
314:	struct tcf_chain *tcf_chain_get_by_act(struct tcf_block *, u32);
343:	void tcf_chain_put_by_act(struct tcf_chain *);
960:	int tcf_classify(struct sk_buff *, const struct tcf_proto *, struct tcf_result *, bool);
2094:	void tcf_exts_change(struct tcf_exts *, struct tcf_exts *);
2038:	void tcf_exts_destroy(struct tcf_exts *);
2115:	int tcf_exts_dump(struct sk_buff *, struct tcf_exts *);
2156:	int tcf_exts_dump_stats(struct sk_buff *, struct tcf_exts *);
2050:	int tcf_exts_validate(struct net *, struct tcf_proto *, struct nlattr **, struct nlattr *, struct tcf_exts *, bool, struct netlink_ext_ack *);
135:	bool tcf_queue_work(struct rcu_work *, work_func_t);
111:	int unregister_tcf_proto_ops(struct tcf_proto_ops *);
277:	static struct tcf_chain *__tcf_chain_get(struct tcf_block *, u32, bool, bool);
322:	static void __tcf_chain_put(struct tcf_chain *, bool);
44:	static const struct tcf_proto_ops *__tcf_proto_lookup_ops(const char *);
1711:	static int tc_chain_fill_node(struct tcf_chain *, struct net *, struct sk_buff *, struct tcf_block *, u32, u32, u16, int);
1759:	static int tc_chain_notify(struct tcf_chain *, struct sk_buff *, u32, u16, int, bool);
1826:	static int tc_ctl_chain(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
1345:	static int tc_del_tfilter(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
1940:	static int tc_dump_chain(struct sk_buff *, struct netlink_callback *);
1622:	static int tc_dump_tfilter(struct sk_buff *, struct netlink_callback *);
2241:	static int tc_filter_init(void);
1463:	static int tc_get_tfilter(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
1188:	static int tc_new_tfilter(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
536:	static struct tcf_block *tcf_block_find(struct net *, struct Qdisc **, u32 *, unsigned long *, int, u32, struct netlink_ext_ack *);
647:	static void tcf_block_owner_del(struct tcf_block *, struct Qdisc *, enum tcf_block_binder_type);
840:	static int tcf_block_playback_offloads(struct tcf_block *, tc_setup_cb_t *, void *, bool, bool, struct netlink_ext_ack *);
457:	static void tcf_chain0_head_change_cb_del(struct tcf_block *, struct tcf_block_ext_info *, struct tcf_block_ext_info *);
201:	static struct tcf_chain *tcf_chain_create(struct tcf_block *, u32);
1568:	static bool tcf_chain_dump(struct Qdisc *, u32, struct sk_buff *, struct netlink_callback *, long, long *, struct tcf_chain *, struct tcf_chain *);
355:	static void tcf_chain_flush(struct tcf_chain *);
725:	static void tcf_chain_head_change_dflt(struct tcf_proto *, void *);
1031:	static void tcf_chain_tp_remove(struct tcf_chain *, struct tcf_chain_info *, struct tcf_proto *);
1070:	static int tcf_fill_node(struct net *, struct sk_buff *, struct tcf_proto *, struct tcf_block *, struct Qdisc *, u32, void *, u32, u32, u16, int);
2227:	static void tcf_net_exit(struct net *);
2219:	static int tcf_net_init(struct net *);
1557:	static int tcf_node_dump(struct tcf_proto *, void *, struct tcf_walker *);
187:	static void tcf_proto_destroy(struct tcf_proto *, struct netlink_ext_ack *);
63:	static const struct tcf_proto_ops *tcf_proto_lookup_ops(const char *, struct netlink_ext_ack *);
1113:	static int tfilter_notify(struct net *, struct sk_buff *, struct nlmsghdr *, struct tcf_proto *, struct tcf_block *, struct Qdisc *, u32, void *, int, bool);

File net/sched/cls_cgroup.c:
60:	static void __cls_cgroup_destroy(struct cls_cgroup_head *);
78:	static int cls_cgroup_change(struct net *, struct sk_buff *, struct tcf_proto *, unsigned long, u32, struct nlattr **, void **, bool, struct netlink_ext_ack *);
29:	static int cls_cgroup_classify(struct sk_buff *, const struct tcf_proto *, struct tcf_result *);
147:	static int cls_cgroup_delete(struct tcf_proto *, void *, bool *, struct netlink_ext_ack *);
133:	static void cls_cgroup_destroy(struct tcf_proto *, struct netlink_ext_ack *);
68:	static void cls_cgroup_destroy_work(struct work_struct *);
168:	static int cls_cgroup_dump(struct net *, struct tcf_proto *, void *, struct sk_buff *, struct tcmsg *);
46:	static void *cls_cgroup_get(struct tcf_proto *, u32);
51:	static int cls_cgroup_init(struct tcf_proto *);
153:	static void cls_cgroup_walk(struct tcf_proto *, struct tcf_walker *);
214:	static void exit_cgroup_cls(void);
209:	static int init_cgroup_cls(void);

File net/sched/ematch.c:
502:	int __tcf_em_tree_match(struct sk_buff *, struct tcf_ematch_tree *, struct tcf_pkt_info *);
126:	int tcf_em_register(struct tcf_ematch_ops *);
402:	void tcf_em_tree_destroy(struct tcf_ematch_tree *);
439:	int tcf_em_tree_dump(struct sk_buff *, struct tcf_ematch_tree *, int);
307:	int tcf_em_tree_validate(struct tcf_proto *, struct nlattr *, struct tcf_ematch_tree *);
158:	void tcf_em_unregister(struct tcf_ematch_ops *);
96:	static struct tcf_ematch_ops *tcf_em_lookup(u16);

File net/sched/sch_api.c:
555:	void __qdisc_calculate_pkt_len(struct sk_buff *, const struct qdisc_size_table *);
707:	void qdisc_class_hash_destroy(struct Qdisc_class_hash *);
657:	void qdisc_class_hash_grow(struct Qdisc *, struct Qdisc_class_hash *);
693:	int qdisc_class_hash_init(struct Qdisc_class_hash *);
713:	void qdisc_class_hash_insert(struct Qdisc_class_hash *, struct Qdisc_class_common *);
725:	void qdisc_class_hash_remove(struct Qdisc_class_hash *, struct Qdisc_class_common *);
197:	void qdisc_get_default(char *, size_t);
395:	struct qdisc_rate_table *qdisc_get_rtab(struct tc_ratespec *, struct nlattr *, struct netlink_ext_ack *);
280:	void qdisc_hash_add(struct Qdisc *, bool);
291:	void qdisc_hash_del(struct Qdisc *);
300:	struct Qdisc *qdisc_lookup(struct net_device *, u32);
432:	void qdisc_put_rtab(struct qdisc_rate_table *);
526:	void qdisc_put_stab(struct qdisc_size_table *);
220:	int qdisc_set_default(const char *);
753:	void qdisc_tree_reduce_backlog(struct Qdisc *, unsigned int, unsigned int);
584:	void qdisc_warn_nonwc(const char *, struct Qdisc *);
637:	void qdisc_watchdog_cancel(struct qdisc_watchdog *);
615:	void qdisc_watchdog_init(struct qdisc_watchdog *, struct Qdisc *);
606:	void qdisc_watchdog_init_clockid(struct qdisc_watchdog *, struct Qdisc *, clockid_t);
621:	void qdisc_watchdog_schedule_ns(struct qdisc_watchdog *, u64);
133:	int register_qdisc(struct Qdisc_ops *);
177:	int unregister_qdisc(struct Qdisc_ops *);
1286:	static int check_loop(struct Qdisc *, struct Qdisc *, int);
1302:	static int check_loop_fn(struct Qdisc *, unsigned long, struct qdisc_walker *);
923:	static void notify_and_destroy(struct net *, struct sk_buff *, struct nlmsghdr *, u32, struct Qdisc *, struct Qdisc *);
2159:	static int pktsched_init(void);
2139:	static void psched_net_exit(struct net *);
2128:	static int psched_net_init(struct net *);
2118:	static int psched_show(struct seq_file *, void *);
2014:	static int qdisc_class_dump(struct Qdisc *, unsigned long, struct qdisc_walker *);
643:	static struct hlist_head *qdisc_class_hash_alloc(unsigned int);
1073:	static struct Qdisc *qdisc_create(struct net_device *, struct netdev_queue *, struct Qdisc *, u32, u32, struct nlattr **, int *, struct netlink_ext_ack *);
458:	static struct qdisc_size_table *qdisc_get_stab(struct nlattr *, struct netlink_ext_ack *);
943:	static int qdisc_graft(struct net_device *, struct Qdisc *, struct sk_buff *, struct nlmsghdr *, u32, struct Qdisc *, struct Qdisc *, struct netlink_ext_ack *);
318:	static struct Qdisc *qdisc_leaf(struct Qdisc *, u32);
204:	static struct Qdisc_ops *qdisc_lookup_default(const char *);
336:	static struct Qdisc_ops *qdisc_lookup_ops(struct nlattr *);
262:	static struct Qdisc *qdisc_match_from_root(struct Qdisc *, u32);
892:	static int qdisc_notify(struct net *, struct sk_buff *, struct nlmsghdr *, u32, struct Qdisc *, struct Qdisc *);
594:	static enum hrtimer_restart qdisc_watchdog(struct hrtimer *);
250:	static int sch_default_qdisc(void);
521:	static void stab_kfree_rcu(struct callback_head *);
1831:	static void tc_bind_tclass(struct Qdisc *, u32, u32, unsigned long);
1871:	static int tc_ctl_tclass(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
1653:	static int tc_dump_qdisc(struct sk_buff *, struct netlink_callback *);
1599:	static int tc_dump_qdisc_root(struct Qdisc *, struct sk_buff *, struct netlink_callback *, int *, int, bool, bool);
2084:	static int tc_dump_tclass(struct sk_buff *, struct netlink_callback *);
2024:	static int tc_dump_tclass_qdisc(struct Qdisc *, struct sk_buff *, struct netlink_callback *, int *, int, struct tcmsg *);
2053:	static int tc_dump_tclass_root(struct Qdisc *, struct sk_buff *, struct tcmsg *, struct netlink_callback *, int *, int);
803:	static int tc_fill_qdisc(struct sk_buff *, struct Qdisc *, u32, u32, u32, u16, int);
1711:	static int tc_fill_tclass(struct sk_buff *, struct Qdisc *, unsigned long, u32, u32, u16, int);
1333:	static int tc_get_qdisc(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
1418:	static int tc_modify_qdisc(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
1817:	static int tcf_node_bind(struct tcf_proto *, void *, struct tcf_walker *);
1757:	static int tclass_notify(struct net *, struct sk_buff *, struct nlmsghdr *, struct Qdisc *, unsigned long, int);

File net/sched/sch_blackhole.c:
27:	static struct sk_buff *blackhole_dequeue(struct Qdisc *);
20:	static int blackhole_enqueue(struct sk_buff *, struct Qdisc *, struct sk_buff **);
41:	static int blackhole_init(void);

File net/sched/sch_fifo.c:
171:	struct Qdisc *fifo_create_dflt(struct Qdisc *, struct Qdisc_ops *, unsigned int, struct netlink_ext_ack *);
146:	int fifo_set_limit(struct Qdisc *, unsigned int);
22:	static int bfifo_enqueue(struct sk_buff *, struct Qdisc *, struct sk_buff **);
92:	static int fifo_dump(struct Qdisc *, struct sk_buff *);
58:	static int fifo_init(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *);
31:	static int pfifo_enqueue(struct sk_buff *, struct Qdisc *, struct sk_buff **);
40:	static int pfifo_tail_enqueue(struct sk_buff *, struct Qdisc *, struct sk_buff **);

File net/sched/sch_fq_codel.c:
261:	static struct sk_buff *dequeue_func(struct codel_vars *, void *);
279:	static void drop_func(struct sk_buff *, void *);
600:	static unsigned long fq_codel_bind(struct Qdisc *, unsigned long, u32);
380:	static int fq_codel_change(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *);
287:	static struct sk_buff *fq_codel_dequeue(struct Qdisc *);
453:	static void fq_codel_destroy(struct Qdisc *);
525:	static int fq_codel_dump(struct Qdisc *, struct sk_buff *);
620:	static int fq_codel_dump_class(struct Qdisc *, unsigned long, struct sk_buff *, struct tcmsg *);
627:	static int fq_codel_dump_class_stats(struct Qdisc *, unsigned long, struct gnet_dump *);
563:	static int fq_codel_dump_stats(struct Qdisc *, struct gnet_dump *);
189:	static int fq_codel_enqueue(struct sk_buff *, struct Qdisc *, struct sk_buff **);
595:	static unsigned long fq_codel_find(struct Qdisc *, u32);
462:	static int fq_codel_init(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *);
590:	static struct Qdisc *fq_codel_leaf(struct Qdisc *, unsigned long);
728:	static void fq_codel_module_exit(void);
723:	static int fq_codel_module_init(void);
348:	static void fq_codel_reset(struct Qdisc *);
610:	static struct tcf_block *fq_codel_tcf_block(struct Qdisc *, unsigned long, struct netlink_ext_ack *);
606:	static void fq_codel_unbind(struct Qdisc *, unsigned long);
674:	static void fq_codel_walk(struct Qdisc *, struct qdisc_walker *);

File net/sched/sch_generic.c:
475:	void __netdev_watchdog_up(struct net_device *);
398:	void __qdisc_run(struct Qdisc *);
1081:	void dev_activate(struct net_device *);
1233:	void dev_deactivate(struct net_device *);
1192:	void dev_deactivate_many(struct list_head *);
998:	struct Qdisc *dev_graft_qdisc(struct netdev_queue *, struct Qdisc *);
1286:	void dev_init_scheduler(struct net_device *);
1254:	int dev_qdisc_change_tx_queue_len(struct net_device *);
1311:	void dev_shutdown(struct net_device *);
412:	unsigned long dev_trans_start(struct net_device *);
1395:	void mini_qdisc_pair_init(struct mini_Qdisc_pair *, struct Qdisc *, struct mini_Qdisc **);
1362:	void mini_qdisc_pair_swap(struct mini_Qdisc_pair *, struct tcf_proto *);
525:	void netif_carrier_off(struct net_device *);
506:	void netif_carrier_on(struct net_device *);
1322:	void psched_ratecfg_precompute(struct psched_ratecfg *, const struct tc_ratespec *, u64);
815:	struct Qdisc *qdisc_alloc(struct netdev_queue *, const struct Qdisc_ops *, struct netlink_ext_ack *);
894:	struct Qdisc *qdisc_create_dflt(struct netdev_queue *, const struct Qdisc_ops *, unsigned int, struct netlink_ext_ack *);
956:	void qdisc_destroy(struct Qdisc *);
946:	void qdisc_free(struct Qdisc *);
923:	void qdisc_reset(struct Qdisc *);
304:	bool sch_direct_xmit(struct sk_buff *, struct Qdisc *, struct net_device *, struct netdev_queue *, spinlock_t *, bool);
1124:	static void dev_reset_queue(struct netdev_queue *, struct net_device *, void *);
432:	static void dev_watchdog(struct timer_list *);
1358:	static void mini_qdisc_rcu_func(struct callback_head *);
548:	static struct sk_buff *noop_dequeue(struct Qdisc *);
541:	static int noop_enqueue(struct sk_buff *, struct Qdisc *, struct sk_buff **);
591:	static int noqueue_init(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *);
779:	static int pfifo_fast_change_tx_queue_len(struct Qdisc *, unsigned int);
657:	static struct sk_buff *pfifo_fast_dequeue(struct Qdisc *);
759:	static void pfifo_fast_destroy(struct Qdisc *);
721:	static int pfifo_fast_dump(struct Qdisc *, struct sk_buff *);
635:	static int pfifo_fast_enqueue(struct sk_buff *, struct Qdisc *, struct sk_buff **);
734:	static int pfifo_fast_init(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *);
680:	static struct sk_buff *pfifo_fast_peek(struct Qdisc *);
695:	static void pfifo_fast_reset(struct Qdisc *);

File net/sched/sch_mq.c:
111:	static void mq_attach(struct Qdisc *);
57:	static void mq_destroy(struct Qdisc *);
133:	static int mq_dump(struct Qdisc *, struct sk_buff *);
229:	static int mq_dump_class(struct Qdisc *, unsigned long, struct sk_buff *, struct tcmsg *);
240:	static int mq_dump_class_stats(struct Qdisc *, unsigned long, struct gnet_dump *);
220:	static unsigned long mq_find(struct Qdisc *, u32);
196:	static int mq_graft(struct Qdisc *, unsigned long, struct Qdisc *, struct Qdisc **, struct netlink_ext_ack *);
72:	static int mq_init(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *);
213:	static struct Qdisc *mq_leaf(struct Qdisc *, unsigned long);
27:	static int mq_offload(struct Qdisc *, enum tc_mq_command);
190:	static struct netdev_queue *mq_select_queue(struct Qdisc *, struct tcmsg *);
253:	static void mq_walk(struct Qdisc *, struct qdisc_walker *);

File net/socket.c:
2144:	int __copy_msghdr_from_user(struct msghdr *, struct user_msghdr *, struct sockaddr **, struct iovec **, size_t *);
1769:	long __ia32_sys_accept(const struct pt_regs *);
1763:	long __ia32_sys_accept4(const struct pt_regs *);
1614:	long __ia32_sys_bind(const struct pt_regs *);
1827:	long __ia32_sys_connect(const struct pt_regs *);
1901:	long __ia32_sys_getpeername(const struct pt_regs *);
1865:	long __ia32_sys_getsockname(const struct pt_regs *);
2102:	long __ia32_sys_getsockopt(const struct pt_regs *);
1646:	long __ia32_sys_listen(const struct pt_regs *);
2025:	long __ia32_sys_recv(const struct pt_regs *);
2014:	long __ia32_sys_recvfrom(const struct pt_regs *);
2722:	long __ia32_sys_recvmmsg(const struct pt_regs *);
2576:	long __ia32_sys_recvmsg(const struct pt_regs *);
1962:	long __ia32_sys_send(const struct pt_regs *);
2445:	long __ia32_sys_sendmmsg(const struct pt_regs *);
2369:	long __ia32_sys_sendmsg(const struct pt_regs *);
1951:	long __ia32_sys_sendto(const struct pt_regs *);
2065:	long __ia32_sys_setsockopt(const struct pt_regs *);
2127:	long __ia32_sys_shutdown(const struct pt_regs *);
1476:	long __ia32_sys_socket(const struct pt_regs *);
2749:	long __ia32_sys_socketcall(const struct pt_regs *);
1577:	long __ia32_sys_socketpair(const struct pt_regs *);
1305:	int __sock_create(struct net *, int, int, int, struct socket **, int);
759:	void __sock_recv_timestamp(struct msghdr *, struct sock *, struct sk_buff *);
838:	void __sock_recv_ts_and_drops(struct msghdr *, struct sock *, struct sk_buff *);
814:	void __sock_recv_wifi_status(struct msghdr *, struct sock *, struct sk_buff *);
623:	void __sock_tx_timestamp(__u16, __u8 *);
1745:	int __sys_accept4(int, struct sockaddr *, int *, int);
1651:	int __sys_accept4_file(struct file *, unsigned int, struct sockaddr *, int *, int, unsigned long);
1591:	int __sys_bind(int, struct sockaddr *, int);
1808:	int __sys_connect(int, struct sockaddr *, int);
1787:	int __sys_connect_file(struct file *, struct __kernel_sockaddr_storage *, int, int);
1876:	int __sys_getpeername(int, struct sockaddr *, int *);
1838:	int __sys_getsockname(int, struct sockaddr *, int *);
1625:	int __sys_listen(int, int);
1973:	int __sys_recvfrom(int, void *, size_t, unsigned int, struct sockaddr *, int *);
2586:	int __sys_recvmmsg(int, struct mmsghdr *, unsigned int, unsigned int, struct timespec *);
2555:	long __sys_recvmsg(int, struct user_msghdr *, unsigned int, bool);
2544:	long __sys_recvmsg_sock(struct socket *, struct msghdr *, struct user_msghdr *, struct sockaddr *, unsigned int);
2378:	int __sys_sendmmsg(int, struct mmsghdr *, unsigned int, unsigned int, bool);
2348:	long __sys_sendmsg(int, struct user_msghdr *, unsigned int, bool);
2338:	long __sys_sendmsg_sock(struct socket *, struct msghdr *, unsigned int);
1912:	int __sys_sendto(int, void *, size_t, unsigned int, struct sockaddr *, int);
2112:	int __sys_shutdown(int, int);
1449:	int __sys_socket(int, int, int);
1485:	int __sys_socketpair(int, int, int, int *);
1769:	long __x64_sys_accept(const struct pt_regs *);
1763:	long __x64_sys_accept4(const struct pt_regs *);
1614:	long __x64_sys_bind(const struct pt_regs *);
1827:	long __x64_sys_connect(const struct pt_regs *);
1901:	long __x64_sys_getpeername(const struct pt_regs *);
1865:	long __x64_sys_getsockname(const struct pt_regs *);
2102:	long __x64_sys_getsockopt(const struct pt_regs *);
1646:	long __x64_sys_listen(const struct pt_regs *);
2025:	long __x64_sys_recv(const struct pt_regs *);
2014:	long __x64_sys_recvfrom(const struct pt_regs *);
2722:	long __x64_sys_recvmmsg(const struct pt_regs *);
2576:	long __x64_sys_recvmsg(const struct pt_regs *);
1962:	long __x64_sys_send(const struct pt_regs *);
2445:	long __x64_sys_sendmmsg(const struct pt_regs *);
2369:	long __x64_sys_sendmsg(const struct pt_regs *);
1951:	long __x64_sys_sendto(const struct pt_regs *);
2065:	long __x64_sys_setsockopt(const struct pt_regs *);
2127:	long __x64_sys_shutdown(const struct pt_regs *);
1476:	long __x64_sys_socket(const struct pt_regs *);
2749:	long __x64_sys_socketcall(const struct pt_regs *);
1577:	long __x64_sys_socketpair(const struct pt_regs *);
979:	void brioctl_set(int (*)(struct net *, unsigned int, void *));
1001:	void dlci_ioctl_set(int (*)(unsigned int, void *));
1058:	struct ns_common *get_net_ns(struct ns_common *);
3559:	int kernel_accept(struct socket *, struct socket **, int);
3528:	int kernel_bind(struct socket *, struct sockaddr *, int);
3597:	int kernel_connect(struct socket *, struct sockaddr *, int, int);
3628:	int kernel_getpeername(struct socket *, struct sockaddr *);
3613:	int kernel_getsockname(struct socket *, struct sockaddr *);
3646:	int kernel_getsockopt(struct socket *, int, int, char *, int *);
3542:	int kernel_listen(struct socket *, int);
886:	int kernel_recvmsg(struct socket *, struct msghdr *, struct kvec *, size_t, size_t, int);
677:	int kernel_sendmsg(struct socket *, struct msghdr *, struct kvec *, size_t, size_t);
698:	int kernel_sendmsg_locked(struct sock *, struct msghdr *, struct kvec *, size_t, size_t);
3710:	int kernel_sendpage(struct socket *, struct page *, int, size_t, int);
3732:	int kernel_sendpage_locked(struct sock *, struct page *, int, size_t, int);
3679:	int kernel_setsockopt(struct socket *, int, int, char *, unsigned int);
3769:	u32 kernel_sock_ip_overhead(struct sock *);
3753:	int kernel_sock_shutdown(struct socket *, enum sock_shutdown_cmd);
182:	int move_addr_to_kernel(void *, int, struct __kernel_sockaddr_storage *);
2451:	int recvmsg_copy_msghdr(struct msghdr *, struct user_msghdr *, unsigned int, struct sockaddr **, struct iovec **);
2294:	int sendmsg_copy_msghdr(struct msghdr *, struct user_msghdr *, unsigned int, struct iovec **);
562:	struct socket *sock_alloc(void);
399:	struct file *sock_alloc_file(struct socket *, int, const char *);
1425:	int sock_create(int, int, int, struct socket **);
1443:	int sock_create_kern(struct net *, int, int, int, struct socket **);
1165:	int sock_create_lite(int, int, int, struct socket **);
447:	struct socket *sock_from_file(struct file *, int *);
2923:	bool sock_is_registered(int);
862:	int sock_recvmsg(struct socket *, struct msghdr *, int);
2872:	int sock_register(const struct net_proto_family *);
617:	void sock_release(struct socket *);
656:	int sock_sendmsg(struct socket *, struct msghdr *);
2909:	void sock_unregister(int);
1264:	int sock_wake_async(struct socket_wq *, int, int);
2981:	void socket_seq_show(struct seq_file *);
470:	struct socket *sockfd_lookup(int, int *);
990:	void vlan_ioctl_set(int (*)(struct net *, void *));
2472:	static int ____sys_recvmsg(struct socket *, struct msghdr *, struct user_msghdr *, struct sockaddr *, unsigned int, int);
2213:	static int ____sys_sendmsg(struct socket *, struct msghdr *, unsigned int, struct used_address *, unsigned int);
2523:	static int ___sys_recvmsg(struct socket *, struct user_msghdr *, struct msghdr *, unsigned int, int);
2314:	static int ___sys_sendmsg(struct socket *, struct user_msghdr *, struct msghdr *, unsigned int, struct used_address *, unsigned int);
592:	static void __sock_release(struct socket *, struct inode *);
2076:	static int __sys_getsockopt(int, int, int, char *, int *);
2036:	static int __sys_setsockopt(int, int, int, char *, int);
3194:	static int compat_ifr_data_ioctl(struct net *, unsigned int, struct compat_ifreq *);
3494:	static long compat_sock_ioctl(struct file *, unsigned int, unsigned long);
2194:	static int copy_msghdr_from_user(struct msghdr *, struct user_msghdr *, struct sockaddr **, struct iovec **);
2697:	static int do_sys_recvmmsg(int, struct mmsghdr *, unsigned int, unsigned int, struct timespec *);
3046:	static int ethtool_ioctl(struct net *, struct compat_ifreq *);
275:	static void init_once(void *);
210:	static int move_addr_to_user(struct __kernel_sockaddr_storage *, int, void *, int *);
3322:	static int routing_ioctl(struct net *, struct socket *, unsigned int, void *);
239:	static struct inode *sock_alloc_inode(struct super_block *);
1223:	static int sock_close(struct inode *, struct file *);
266:	static void sock_destroy_inode(struct inode *);
1009:	static long sock_do_ioctl(struct net *, struct socket *, unsigned int, unsigned long);
1240:	static int sock_fasync(int, struct file *, int);
2928:	static int sock_init(void);
1064:	static long sock_ioctl(struct file *, unsigned int, unsigned long);
1216:	static int sock_mmap(struct file *, struct vm_area_struct *);
1196:	static __poll_t sock_poll(struct file *, poll_table *);
927:	static ssize_t sock_read_iter(struct kiocb *, struct iov_iter *);
856:	static int sock_recvmsg_nosec(struct socket *, struct msghdr *, int);
900:	static ssize_t sock_sendpage(struct file *, struct page *, int, size_t, loff_t *, int);
915:	static ssize_t sock_splice_read(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int);
949:	static ssize_t sock_write_iter(struct kiocb *, struct iov_iter *);
488:	static struct socket *sockfd_lookup_light(int, int *, int *);
303:	static char *sockfs_dname(struct dentry *, char *, int);
505:	static ssize_t sockfs_listxattr(struct dentry *, char *, size_t);
354:	static struct dentry *sockfs_mount(struct file_system_type *, int, const char *, void *);
334:	static int sockfs_security_xattr_set(const struct xattr_handler *, struct dentry *, struct inode *, const char *, const void *, size_t, int);
533:	static int sockfs_setattr(struct dentry *, struct iattr *);
313:	static int sockfs_xattr_get(const struct xattr_handler *, struct dentry *, struct inode *, const char *, void *, size_t);

File net/strparser/strparser.c:
496:	void __strp_unpause(struct strparser *);
542:	void strp_check_rcv(struct strparser *);
380:	void strp_data_ready(struct strparser *);
522:	void strp_done(struct strparser *);
454:	int strp_init(struct strparser *, struct sock *, const struct strp_callbacks *);
331:	int strp_process(struct strparser *, struct sk_buff *, unsigned int, size_t, size_t, long);
536:	void strp_stop(struct strparser *);
508:	void strp_unpause(struct strparser *);
99:	static int __strp_recv(read_descriptor_t *, struct sk_buff *, unsigned int, size_t, size_t, long);
353:	static int default_read_sock_done(struct strparser *, int);
47:	static void strp_abort_strp(struct strparser *, int);
555:	static void strp_mod_exit(void);
548:	static int strp_mod_init(void);
432:	static void strp_msg_timeout(struct work_struct *);
359:	static int strp_read_sock(struct strparser *);
344:	static int strp_recv(read_descriptor_t *, struct sk_buff *, unsigned int, size_t);
444:	static void strp_sock_lock(struct strparser *);
449:	static void strp_sock_unlock(struct strparser *);
427:	static void strp_work(struct work_struct *);

File net/switchdev/switchdev.c:
571:	int call_switchdev_notifiers(unsigned long, struct net_device *, struct switchdev_notifier_info *);
545:	int register_switchdev_notifier(struct notifier_block *);
134:	void switchdev_deferred_process(void);
183:	int switchdev_port_attr_get(struct net_device *, struct switchdev_attr *);
331:	int switchdev_port_attr_set(struct net_device *, const struct switchdev_attr *);
461:	int switchdev_port_obj_add(struct net_device *, const struct switchdev_obj *);
527:	int switchdev_port_obj_del(struct net_device *, const struct switchdev_obj *);
579:	bool switchdev_port_same_parent_id(struct net_device *, struct net_device *);
67:	void *switchdev_trans_item_dequeue(struct switchdev_trans *);
39:	void switchdev_trans_item_enqueue(struct switchdev_trans *, void *, void (*)(const void *), struct switchdev_trans_item *);
557:	int unregister_switchdev_notifier(struct notifier_block *);
219:	static int __switchdev_port_attr_set(struct net_device *, const struct switchdev_attr *, struct switchdev_trans *);
356:	static int __switchdev_port_obj_add(struct net_device *, const struct switchdev_obj *, struct switchdev_trans *);
50:	static struct switchdev_trans_item *__switchdev_trans_item_dequeue(struct switchdev_trans *);
157:	static int switchdev_deferred_enqueue(struct net_device *, const void *, switchdev_deferred_func_t *, size_t);
148:	static void switchdev_deferred_process_work(struct work_struct *);
341:	static size_t switchdev_obj_size(const struct switchdev_obj *);
297:	static void switchdev_port_attr_set_deferred(struct net_device *, const void *);
254:	static int switchdev_port_attr_set_now(struct net_device *, const struct switchdev_attr *);
426:	static void switchdev_port_obj_add_deferred(struct net_device *, const void *);
382:	static int switchdev_port_obj_add_now(struct net_device *, const struct switchdev_obj *);
496:	static void switchdev_port_obj_del_deferred(struct net_device *, const void *);
471:	static int switchdev_port_obj_del_now(struct net_device *, const struct switchdev_obj *);
82:	static void switchdev_trans_items_destroy(struct switchdev_trans *);
90:	static void switchdev_trans_items_warn_destroy(struct net_device *, struct switchdev_trans *);

File net/sysctl_net.c:
95:	int net_sysctl_init(void);
117:	struct ctl_table_header *register_net_sysctl(struct net *, const char *, struct ctl_table *);
124:	void unregister_net_sysctl_table(struct ctl_table_header *);
35:	static int is_seen(struct ctl_table_set *);
30:	static struct ctl_table_set *net_ctl_header_lookup(struct ctl_table_root *);
41:	static int net_ctl_permissions(struct ctl_table_header *, struct ctl_table *);
55:	static void net_ctl_set_ownership(struct ctl_table_header *, struct ctl_table *, kuid_t *, kgid_t *);
84:	static void sysctl_net_exit(struct net *);
78:	static int sysctl_net_init(struct net *);

File net/unix/af_unix.c:
2585:	long unix_inq_len(struct sock *);
2609:	long unix_outq_len(struct sock *);
208:	struct sock *unix_peer_get(struct sock *);
284:	static struct sock *__unix_find_socket_byname(struct net *, struct sockaddr_un *, int, int, unsigned int);
264:	static void __unix_insert_socket(struct hlist_head *, struct sock *);
2966:	static void af_unix_exit(void);
2948:	static int af_unix_init(void);
601:	static void init_peercred(struct sock *);
1618:	static void maybe_add_creds(struct sk_buff *, const struct socket *, const struct sock *);
1629:	static int maybe_init_creds(struct scm_cookie *, struct socket *, const struct sock *);
1465:	static int unix_accept(struct socket *, struct socket *, int, bool);
884:	static int unix_autobind(struct socket *, struct socket *);
1029:	static int unix_bind(struct socket *, struct sockaddr *, int);
2680:	static int unix_compat_ioctl(struct socket *, unsigned int, unsigned long);
2114:	static void unix_copy_addr(struct sock *, struct msghdr *, struct msghdr *);
839:	static int unix_create(struct net *, struct socket *, int, int);
798:	static struct sock *unix_create1(struct net *, struct socket *, int);
1145:	static int unix_dgram_connect(struct socket *, struct sockaddr *, int, int);
482:	static void unix_dgram_disconnected(struct sock *, struct sock *);
406:	static void unix_dgram_peer_wake_disconnect(struct sock *, struct sock *);
437:	static int unix_dgram_peer_wake_me(struct sock *, struct sock *);
365:	static int unix_dgram_peer_wake_relay(wait_queue_entry_t *, unsigned int, int, void *);
2721:	static __poll_t unix_dgram_poll(struct file *, struct socket *, poll_table *);
2124:	static int unix_dgram_recvmsg(struct socket *, struct msghdr *, size_t, int);
1662:	static int unix_dgram_sendmsg(struct socket *, struct msghdr *, size_t);
945:	static struct sock *unix_find_other(struct net *, struct sockaddr_un *, int, int, unsigned int, int *);
1510:	static int unix_getname(struct socket *, struct sockaddr *, int);
2651:	static int unix_ioctl(struct socket *, unsigned int, unsigned long);
641:	static int unix_listen(struct socket *, int);
234:	static int unix_mkname(struct sockaddr_un *, int, unsigned int *);
2937:	static void unix_net_exit(struct net *);
2917:	static int unix_net_init(struct net *);
2804:	static struct sock *unix_next_socket(struct seq_file *, struct sock *, loff_t *);
1542:	static void unix_peek_fds(struct sk_buff *, struct scm_cookie *);
2686:	static __poll_t unix_poll(struct file *, struct socket *, poll_table *);
871:	static int unix_release(struct socket *);
526:	static void unix_release_sock(struct sock *, int);
1589:	static int unix_scm_to_skb(struct scm_cookie *, struct sk_buff *, bool);
2845:	static void *unix_seq_next(struct seq_file *, void *, loff_t *);
2857:	static int unix_seq_show(struct seq_file *, void *);
2831:	static void *unix_seq_start(struct seq_file *, loff_t *);
2851:	static void unix_seq_stop(struct seq_file *, void *);
2103:	static int unix_seqpacket_recvmsg(struct socket *, struct msghdr *, size_t, int);
2084:	static int unix_seqpacket_sendmsg(struct socket *, struct msghdr *, size_t);
702:	static int unix_set_peek_off(struct sock *, int);
2539:	static int unix_shutdown(struct socket *, int);
499:	static void unix_sock_destructor(struct sock *);
1435:	static int unix_socketpair(struct socket *, struct socket *);
1120:	static void unix_state_double_lock(struct sock *, struct sock *);
1135:	static void unix_state_double_unlock(struct sock *, struct sock *);
1246:	static int unix_stream_connect(struct socket *, struct sockaddr *, int, int);
2483:	static int unix_stream_read_actor(struct sk_buff *, int, int, struct unix_stream_read_state *);
2286:	static int unix_stream_read_generic(struct unix_stream_read_state *, bool);
2494:	static int unix_stream_recvmsg(struct socket *, struct msghdr *, size_t, int);
1869:	static int unix_stream_sendmsg(struct socket *, struct msghdr *, size_t);
1968:	static ssize_t unix_stream_sendpage(struct socket *, struct page *, int, size_t, int);
2508:	static int unix_stream_splice_actor(struct sk_buff *, int, int, struct unix_stream_read_state *);
2517:	static ssize_t unix_stream_splice_read(struct socket *, loff_t *, struct pipe_inode_info *, size_t, unsigned int);
1225:	static long unix_wait_for_peer(struct sock *, long);
463:	static void unix_write_space(struct sock *);

File net/unix/garbage.c:
207:	void unix_gc(void);
196:	void wait_for_unix_gc(void);
172:	static void dec_inflight(struct unix_sock *);
177:	static void inc_inflight(struct unix_sock *);
182:	static void inc_inflight_move_tail(struct unix_sock *);
138:	static void scan_children(struct sock *, void (*)(struct unix_sock *), struct sk_buff_head *);
96:	static void scan_inflight(struct sock *, void (*)(struct unix_sock *), struct sk_buff_head *);

File net/unix/scm.c:
103:	int unix_attach_fds(struct scm_cookie *, struct sk_buff *);
137:	void unix_destruct_scm(struct sk_buff *);
125:	void unix_detach_fds(struct scm_cookie *, struct sk_buff *);
23:	struct sock *unix_get_socket(struct file *);
47:	void unix_inflight(struct user_struct *, struct file *);
68:	void unix_notinflight(struct user_struct *, struct file *);

File net/unix/sysctl_net_unix.c:
29:	int unix_sysctl_register(struct net *);
54:	void unix_sysctl_unregister(struct net *);

File net/xdp/xdp_umem.c:
22:	void xdp_add_sk_umem(struct xdp_umem *, struct xdp_sock *);
34:	void xdp_del_sk_umem(struct xdp_umem *, struct xdp_sock *);
182:	void xdp_get_umem(struct xdp_umem *);
187:	void xdp_put_umem(struct xdp_umem *);
61:	int xdp_umem_assign_dev(struct xdp_umem *, struct net_device *, u32, u16);
342:	struct xdp_umem *xdp_umem_create(struct xdp_umem_reg *);
46:	int xdp_umem_query(struct net_device *, u16);
360:	bool xdp_umem_validate_queues(struct xdp_umem *);
175:	static void xdp_umem_release_deferred(struct work_struct *);
144:	static void xdp_umem_unaccount_pages(struct xdp_umem *, struct xdp_umem *);
129:	static void xdp_umem_unpin_pages(struct xdp_umem *, struct xdp_umem *);

File net/xdp/xsk.c:
106:	void xsk_flush(struct xdp_sock *);
112:	int xsk_generic_rcv(struct xdp_sock *, struct xdp_buff *);
38:	bool xsk_is_setup_for_bpf_map(struct xdp_sock *);
93:	int xsk_rcv(struct xdp_sock *, struct xdp_buff *);
143:	void xsk_umem_complete_tx(struct xdp_umem *, u32);
161:	bool xsk_umem_consume_tx(struct xdp_umem *, dma_addr_t *, u32 *);
149:	void xsk_umem_consume_tx_done(struct xdp_umem *);
50:	void xsk_umem_discard_addr(struct xdp_umem *);
44:	u64 *xsk_umem_peek_addr(struct xdp_umem *, u64 *);
379:	static int xsk_bind(struct socket *, struct sockaddr *, int);
720:	static int xsk_create(struct net *, struct socket *, int, int);
708:	static void xsk_destruct(struct sock *);
196:	static void xsk_destruct_skb(struct sk_buff *);
567:	static int xsk_getsockopt(struct socket *, int, int, char *, int *);
768:	static int xsk_init(void);
307:	static int xsk_init_queue(u32, struct xsk_queue **, bool);
639:	static int xsk_mmap(struct file *, struct socket *, struct vm_area_struct *);
292:	static __poll_t xsk_poll(struct file *, struct socket *, struct poll_table_struct *);
325:	static int xsk_release(struct socket *);
274:	static int xsk_sendmsg(struct socket *, struct msghdr *, size_t);
485:	static int xsk_setsockopt(struct socket *, int, int, char *, unsigned int);

File net/xdp/xsk_queue.c:
28:	struct xsk_queue *xskq_create(u32, bool);
56:	void xskq_destroy(struct xsk_queue *);
10:	void xskq_set_umem(struct xsk_queue *, struct xdp_umem_props *);

File net/xfrm/xfrm_algo.c:
679:	struct xfrm_algo_desc *xfrm_aalg_get_byid(int);
757:	struct xfrm_algo_desc *xfrm_aalg_get_byidx(unsigned int);
709:	struct xfrm_algo_desc *xfrm_aalg_get_byname(const char *, int);
745:	struct xfrm_algo_desc *xfrm_aead_get_byname(const char *, int, int);
693:	struct xfrm_algo_desc *xfrm_calg_get_byid(int);
723:	struct xfrm_algo_desc *xfrm_calg_get_byname(const char *, int);
807:	int xfrm_count_pfkey_auth_supported(void);
818:	int xfrm_count_pfkey_enc_supported(void);
686:	struct xfrm_algo_desc *xfrm_ealg_get_byid(int);
766:	struct xfrm_algo_desc *xfrm_ealg_get_byidx(unsigned int);
716:	struct xfrm_algo_desc *xfrm_ealg_get_byname(const char *, int);
780:	void xfrm_probe_algs(void);
735:	static int xfrm_aead_name_match(const struct xfrm_algo_desc *, const void *);
673:	static int xfrm_alg_id_match(const struct xfrm_algo_desc *, const void *);
700:	static int xfrm_alg_name_match(const struct xfrm_algo_desc *, const void *);
644:	static struct xfrm_algo_desc *xfrm_find_algo(const struct xfrm_algo_list *, int (*)(const struct xfrm_algo_desc *, const void *), const void *, int);

File net/xfrm/xfrm_device.c:
26:	struct sk_buff *validate_xmit_xfrm(struct sk_buff *, netdev_features_t, bool *);
264:	void xfrm_dev_backlog(struct softnet_data *);
347:	void xfrm_dev_init(void);
206:	bool xfrm_dev_offload_ok(struct sk_buff *, struct xfrm_state *);
237:	void xfrm_dev_resume(struct sk_buff *);
139:	int xfrm_dev_state_add(struct net *, struct xfrm_state *, struct xfrm_user_offload *);
325:	static int xfrm_dev_event(struct notifier_block *, unsigned long, void *);

File net/xfrm/xfrm_hash.c:
16:	struct hlist_head *xfrm_hash_alloc(unsigned int);
32:	void xfrm_hash_free(struct hlist_head *, unsigned int);

File net/xfrm/xfrm_input.c:
114:	void __secpath_destroy(struct sec_path *);
123:	struct sec_path *secpath_dup(struct sec_path *);
148:	int secpath_set(struct sk_buff *);
223:	int xfrm_input(struct sk_buff *, int, __be32, int);
547:	void xfrm_input_init(void);
51:	int xfrm_input_register_afinfo(const struct xfrm_input_afinfo *);
510:	int xfrm_input_resume(struct sk_buff *, int);
68:	int xfrm_input_unregister_afinfo(const struct xfrm_input_afinfo *);
168:	int xfrm_parse_spi(struct sk_buff *, u8, __be32 *, __be32 *);
203:	int xfrm_prepare_input(struct xfrm_state *, struct sk_buff *);
529:	int xfrm_trans_queue(struct sk_buff *, int (*)(struct net *, struct sock *, struct sk_buff *));
85:	static const struct xfrm_input_afinfo *xfrm_input_get_afinfo(unsigned int);
516:	static void xfrm_trans_reinject(unsigned long);

File net/xfrm/xfrm_output.c:
266:	int xfrm_inner_extract_output(struct xfrm_state *, struct sk_buff *);
281:	void xfrm_local_error(struct sk_buff *, int);
211:	int xfrm_output(struct sock *, struct sk_buff *);
146:	int xfrm_output_resume(struct sk_buff *, int);
175:	static int xfrm_output2(struct net *, struct sock *, struct sk_buff *);
180:	static int xfrm_output_gso(struct sk_buff *, struct sock *, struct net *);

File net/xfrm/xfrm_policy.c:
2290:	int __xfrm_decode_session(struct sk_buff *, struct flowi *, unsigned int, int);
129:	struct dst_entry *__xfrm_dst_lookup(struct net *, int, int, const xfrm_address_t *, const xfrm_address_t *, int, u32);
2319:	int __xfrm_policy_check(struct sock *, int, struct sk_buff *, unsigned short);
2483:	int __xfrm_route_forward(struct sk_buff *, unsigned short);
1341:	int __xfrm_sk_clone_policy(struct sock *, const struct sock *);
3000:	void xfrm_audit_policy_add(struct xfrm_policy *, int, bool);
3014:	void xfrm_audit_policy_delete(struct xfrm_policy *, int, bool);
2547:	void xfrm_dst_ifdown(struct dst_entry *, struct net_device *);
2774:	void xfrm_if_register_cb(const struct xfrm_if_cb *);
2782:	void xfrm_if_unregister_cb(void);
2954:	void xfrm_init(void);
2196:	struct dst_entry *xfrm_lookup(struct net *, struct dst_entry *, const struct flowi *, const struct sock *, int);
2207:	struct dst_entry *xfrm_lookup_route(struct net *, struct dst_entry *, const struct flowi *, const struct sock *, int);
2043:	struct dst_entry *xfrm_lookup_with_ifid(struct net *, struct dst_entry *, const struct flowi *, const struct sock *, int, u32);
3187:	int xfrm_migrate(const struct xfrm_selector *, u8, u8, struct xfrm_migrate *, int, struct xfrm_kmaddress *, struct net *, struct xfrm_encap_tmpl *);
263:	struct xfrm_policy *xfrm_policy_alloc(struct net *, gfp_t);
847:	struct xfrm_policy *xfrm_policy_byid(struct net *, u32, u32, u8, int, u32, int, int *);
806:	struct xfrm_policy *xfrm_policy_bysel_ctx(struct net *, u32, u32, u8, int, struct xfrm_selector *, struct xfrm_sec_ctx *, int, int *);
1258:	int xfrm_policy_delete(struct xfrm_policy *, int);
295:	void xfrm_policy_destroy(struct xfrm_policy *);
934:	int xfrm_policy_flush(struct net *, u8, bool);
647:	void xfrm_policy_hash_rebuild(struct net *);
740:	int xfrm_policy_insert(int, struct xfrm_policy *, int);
2717:	int xfrm_policy_register_afinfo(const struct xfrm_policy_afinfo *, int);
2753:	void xfrm_policy_unregister_afinfo(const struct xfrm_policy_afinfo *);
993:	int xfrm_policy_walk(struct net *, struct xfrm_policy_walk *, int (*)(struct xfrm_policy *, int, int, void *), void *);
1050:	void xfrm_policy_walk_done(struct xfrm_policy_walk *, struct net *);
1041:	void xfrm_policy_walk_init(struct xfrm_policy_walk *, u8);
98:	bool xfrm_selector_match(const struct xfrm_selector *, const struct flowi *, unsigned short);
1273:	int xfrm_sk_policy_insert(struct sock *, int, struct xfrm_policy *);
536:	void xfrm_spd_getinfo(struct net *, struct xfrmk_spdinfo *);
1219:	static void __xfrm_policy_link(struct xfrm_policy *, int);
1228:	static struct xfrm_policy *__xfrm_policy_unlink(struct xfrm_policy *, int);
357:	static struct hlist_head *policy_hash_bysel(struct net *, const struct xfrm_selector *, unsigned short, int);
376:	static struct hlist_head *policy_hash_direct(struct net *, const xfrm_address_t *, const xfrm_address_t *, unsigned short, int);
1854:	static int xdst_queue_output(struct net *, struct sock *, struct sk_buff *);
1492:	static struct xfrm_dst *xfrm_alloc_dst(int, struct net *);
2966:	static void xfrm_audit_common_policyinfo(struct xfrm_policy *, struct audit_buffer *);
2709:	static void xfrm_confirm_neigh(const struct dst_entry *, const void *);
2668:	static unsigned int xfrm_default_advmss(const struct dst_entry *);
2513:	static struct dst_entry *xfrm_dst_check(struct dst_entry *, u32);
1695:	static int xfrm_expand_policies(const struct flowi *, u16, struct xfrm_policy **, int *, int *);
655:	static u32 xfrm_gen_index(struct net *, int, u32);
568:	static void xfrm_hash_rebuild(struct work_struct *);
550:	static void xfrm_hash_resize(struct work_struct *);
2557:	static void xfrm_link_failure(struct sk_buff *);
3031:	static bool xfrm_migrate_selector_match(const struct xfrm_selector *, const struct xfrm_selector *);
2673:	static unsigned int xfrm_mtu(const struct dst_entry *);
2562:	static struct dst_entry *xfrm_negative_advice(struct dst_entry *);
2698:	static struct neighbour *xfrm_neigh_lookup(const struct dst_entry *, struct sk_buff *, const void *);
2941:	static void xfrm_net_exit(struct net *);
2907:	static int xfrm_net_init(struct net *);
285:	static void xfrm_policy_destroy_rcu(struct callback_head *);
2878:	static void xfrm_policy_fini(struct net *);
310:	static void xfrm_policy_kill(struct xfrm_policy *);
1159:	static struct xfrm_policy *xfrm_policy_lookup(struct net *, const struct flowi *, u16, u8, u32);
1088:	static struct xfrm_policy *xfrm_policy_lookup_bytype(struct net *, u8, const struct flowi *, u16, u8, u32);
1066:	static int xfrm_policy_match(const struct xfrm_policy *, const struct flowi *, u8, u16, int, u32);
1778:	static void xfrm_policy_queue_process(struct timer_list *);
703:	static void xfrm_policy_requeue(struct xfrm_policy *, struct xfrm_policy *);
189:	static void xfrm_policy_timer(struct timer_list *);
1741:	static struct xfrm_dst *xfrm_resolve_and_create_bundle(struct xfrm_policy **, int, const struct flowi *, u16, struct dst_entry *);
1175:	static struct xfrm_policy *xfrm_sk_policy_lookup(const struct sock *, int, const struct flowi *, u16, u32);
1439:	static int xfrm_tmpl_resolve(struct xfrm_policy **, int, const struct flowi *, struct xfrm_state **, unsigned short);

File net/xfrm/xfrm_proc.c:
76:	void xfrm_proc_fini(struct net *);
68:	int xfrm_proc_init(struct net *);
51:	static int xfrm_statistics_seq_show(struct seq_file *, void *);

File net/xfrm/xfrm_replay.c:
740:	int xfrm_init_replay(struct xfrm_state *);
24:	u32 xfrm_replay_seqhi(struct xfrm_state *, __be32);
150:	static void xfrm_replay_advance(struct xfrm_state *, __be32);
241:	static void xfrm_replay_advance_bmp(struct xfrm_state *, __be32);
506:	static void xfrm_replay_advance_esn(struct xfrm_state *, __be32);
118:	static int xfrm_replay_check(struct xfrm_state *, struct sk_buff *, __be32);
197:	static int xfrm_replay_check_bmp(struct xfrm_state *, struct sk_buff *, __be32);
435:	static int xfrm_replay_check_esn(struct xfrm_state *, struct sk_buff *, __be32);
50:	static void xfrm_replay_notify(struct xfrm_state *, int);
289:	static void xfrm_replay_notify_bmp(struct xfrm_state *, int);
340:	static void xfrm_replay_notify_esn(struct xfrm_state *, int);
565:	static int xfrm_replay_overflow_offload(struct xfrm_state *, struct sk_buff *);
603:	static int xfrm_replay_overflow_offload_bmp(struct xfrm_state *, struct sk_buff *);
642:	static int xfrm_replay_overflow_offload_esn(struct xfrm_state *, struct sk_buff *);
494:	static int xfrm_replay_recheck_esn(struct xfrm_state *, struct sk_buff *, __be32);

File net/xfrm/xfrm_state.c:
2281:	int __xfrm_init_state(struct xfrm_state *, bool, bool);
619:	int __xfrm_state_delete(struct xfrm_state *);
603:	void __xfrm_state_destroy(struct xfrm_state *, bool);
2105:	bool km_is_alive(const struct km_event *);
2062:	int km_migrate(const struct xfrm_selector *, u8, u8, const struct xfrm_migrate *, int, const struct xfrm_kmaddress *, const struct xfrm_encap_tmpl *);
2033:	int km_new_mapping(struct xfrm_state *, xfrm_address_t *, __be16);
2050:	void km_policy_expired(struct xfrm_policy *, int, int, u32);
1978:	void km_policy_notify(struct xfrm_policy *, int, const struct km_event *);
2017:	int km_query(struct xfrm_state *, struct xfrm_tmpl *, struct xfrm_policy *);
2086:	int km_report(struct net *, u8, struct xfrm_selector *, xfrm_address_t *);
2002:	void km_state_expired(struct xfrm_state *, int, u32);
1989:	void km_state_notify(struct xfrm_state *, const struct km_event *);
1796:	int verify_spi_info(u8, u32, u32);
1820:	int xfrm_alloc_spi(struct xfrm_state *, u32, u32);
2487:	void xfrm_audit_state_add(struct xfrm_state *, int, bool);
2501:	void xfrm_audit_state_delete(struct xfrm_state *, int, bool);
2579:	void xfrm_audit_state_icvfail(struct xfrm_state *, struct sk_buff *, u8);
2562:	void xfrm_audit_state_notfound(struct sk_buff *, u16, __be32, __be32);
2550:	void xfrm_audit_state_notfound_simple(struct sk_buff *, u16);
2533:	void xfrm_audit_state_replay(struct xfrm_state *, struct sk_buff *, __be32);
2515:	void xfrm_audit_state_replay_overflow(struct xfrm_state *, struct sk_buff *);
761:	int xfrm_dev_state_flush(struct net *, struct net_device *, bool);
1689:	struct xfrm_state *xfrm_find_acq(struct net *, const struct xfrm_mark *, u8, u32, u32, u8, const xfrm_address_t *, const xfrm_address_t *, int, unsigned short);
1772:	struct xfrm_state *xfrm_find_acq_byseq(struct net *, u32, u32);
2249:	void xfrm_flush_gc(void);
1783:	u32 xfrm_get_acqseq(void);
2370:	int xfrm_init_state(struct xfrm_state *);
1470:	struct xfrm_state *xfrm_migrate_state_find(struct xfrm_migrate *, struct net *);
2173:	int xfrm_register_km(struct xfrm_mgr *);
334:	int xfrm_register_mode(struct xfrm_mode *, int);
180:	int xfrm_register_type(const struct xfrm_type *, unsigned short);
256:	int xfrm_register_type_offload(const struct xfrm_type_offload *, unsigned short);
803:	void xfrm_sad_getinfo(struct net *, struct xfrmk_sadinfo *);
1290:	int xfrm_state_add(struct xfrm_state *);
2229:	struct xfrm_state_afinfo *xfrm_state_afinfo_get_rcu(unsigned int);
571:	struct xfrm_state *xfrm_state_alloc(struct net *);
1639:	int xfrm_state_check_expire(struct xfrm_state *);
649:	int xfrm_state_delete(struct xfrm_state *);
2256:	void xfrm_state_delete_tunnel(struct xfrm_state *);
949:	struct xfrm_state *xfrm_state_find(const xfrm_address_t *, const xfrm_address_t *, const struct flowi *, struct xfrm_tmpl *, struct xfrm_policy *, int *, unsigned short, u32);
2419:	void xfrm_state_fini(struct net *);
718:	int xfrm_state_flush(struct net *, u8, bool, bool);
429:	void xfrm_state_free(struct xfrm_state *);
2237:	struct xfrm_state_afinfo *xfrm_state_get_afinfo(unsigned int);
2383:	int xfrm_state_init(struct net *);
1199:	void xfrm_state_insert(struct xfrm_state *);
1662:	struct xfrm_state *xfrm_state_lookup(struct net *, u32, const xfrm_address_t *, __be32, u8, unsigned short);
1675:	struct xfrm_state *xfrm_state_lookup_byaddr(struct net *, u32, const xfrm_address_t *, const xfrm_address_t *, u8, unsigned short);
1124:	struct xfrm_state *xfrm_state_lookup_byspi(struct net *, __be32, unsigned short);
1517:	struct xfrm_state *xfrm_state_migrate(struct xfrm_state *, struct xfrm_migrate *, struct xfrm_encap_tmpl *);
2270:	int xfrm_state_mtu(struct xfrm_state *, int);
2192:	int xfrm_state_register_afinfo(struct xfrm_state_afinfo *);
1727:	int xfrm_state_sort(struct xfrm_state **, struct xfrm_state **, int, unsigned short);
2209:	int xfrm_state_unregister_afinfo(struct xfrm_state_afinfo *);
1548:	int xfrm_state_update(struct xfrm_state *);
1894:	int xfrm_state_walk(struct net *, struct xfrm_state_walk *, int (*)(struct xfrm_state *, int, void *), void *);
1947:	void xfrm_state_walk_done(struct xfrm_state_walk *, struct net *);
1936:	void xfrm_state_walk_init(struct xfrm_state_walk *, u8, struct xfrm_address_filter *);
1091:	struct xfrm_state *xfrm_stateonly_find(struct net *, u32, u32, xfrm_address_t *, xfrm_address_t *, unsigned short, u8, u8, u32);
1705:	int xfrm_tmpl_sort(struct xfrm_tmpl **, struct xfrm_tmpl **, int, unsigned short, struct net *);
2182:	int xfrm_unregister_km(struct xfrm_mgr *);
368:	int xfrm_unregister_mode(struct xfrm_mode *, int);
201:	int xfrm_unregister_type(const struct xfrm_type *, unsigned short);
278:	int xfrm_unregister_type_offload(const struct xfrm_type_offload *, unsigned short);
2123:	int xfrm_user_policy(struct sock *, int, u8 *, int);
435:	static void ___xfrm_state_destroy(struct xfrm_state *);
1211:	static struct xfrm_state *__find_acq_core(struct net *, const struct xfrm_mark *, unsigned short, u8, u32, u32, u8, const xfrm_address_t *, const xfrm_address_t *, int);
1753:	static struct xfrm_state *__xfrm_find_acq_byseq(u32, u32, struct net *, struct net *);
1177:	static void __xfrm_state_bump_genids(struct xfrm_state *);
1146:	static void __xfrm_state_insert(struct xfrm_state *);
834:	static struct xfrm_state *__xfrm_state_lookup(struct net *, u32, const xfrm_address_t *, __be32, u8, unsigned short);
859:	static struct xfrm_state *__xfrm_state_lookup_byaddr(struct net *, u32, const xfrm_address_t *, const xfrm_address_t *, u8, unsigned short);
2463:	static void xfrm_audit_helper_pktinfo(struct sk_buff *, u16, struct audit_buffer *);
2439:	static void xfrm_audit_helper_sainfo(struct xfrm_state *, struct audit_buffer *);
396:	static struct xfrm_mode *xfrm_get_mode(unsigned int, int);
900:	static void xfrm_hash_grow_check(struct net *, int);
115:	static void xfrm_hash_resize(struct work_struct *);
1960:	static void xfrm_replay_timer_handler(struct timer_list *);
466:	static void xfrm_state_gc_task(struct work_struct *);
908:	static void xfrm_state_look_at(struct xfrm_policy *, struct xfrm_state *, const struct flowi *, unsigned short, struct xfrm_state **, int *, int *);
482:	static enum hrtimer_restart xfrm_timer_handler(struct hrtimer *);

File net/xfrm/xfrm_sysctl.c:
73:	void xfrm_sysctl_fini(struct net *);
44:	int xfrm_sysctl_init(struct net *);

File net/xfrm/xfrm_user.c:
1973:	static int build_aevent(struct sk_buff *, struct xfrm_state *, const struct km_event *, const struct km_event *, const struct km_event *);
1583:	static void copy_from_user_policy(struct xfrm_policy *, struct xfrm_userpolicy_info *);
812:	static int copy_sec_ctx(struct xfrm_sec_ctx *, struct sk_buff *);
1465:	static void copy_templates(struct xfrm_policy *, struct xfrm_user_tmpl *, int);
1595:	static void copy_to_user_policy(struct xfrm_policy *, struct xfrm_userpolicy_info *, int);
1742:	static int copy_to_user_policy_type(u8, struct sk_buff *);
786:	static void copy_to_user_state(struct xfrm_state *, struct xfrm_usersa_info *);
881:	static int copy_to_user_state_extra(struct xfrm_state *, struct xfrm_usersa_info *, struct sk_buff *);
1689:	static int copy_to_user_tmpl(struct xfrm_policy *, struct sk_buff *);
1760:	static int dump_one_policy(struct xfrm_policy *, int, int, void *);
972:	static int dump_one_state(struct xfrm_state *, int, void *);
1490:	static int validate_tmpl(int, struct xfrm_user_tmpl *, u16);
1399:	static int verify_newpolicy_info(struct xfrm_userpolicy_info *, struct xfrm_userpolicy_info *, struct xfrm_userpolicy_info *, struct xfrm_userpolicy_info *, struct xfrm_userpolicy_info *, struct xfrm_userpolicy_info *, struct xfrm_userpolicy_info *);
2256:	static int xfrm_add_acquire(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
2158:	static int xfrm_add_pol_expire(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
1644:	static int xfrm_add_policy(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
670:	static int xfrm_add_sa(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
2222:	static int xfrm_add_sa_expire(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
1304:	static int xfrm_alloc_userspi(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
2983:	static struct xfrm_policy *xfrm_compile_policy(struct sock *, int, u8 *, int, int *);
749:	static int xfrm_del_sa(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
2361:	static int xfrm_do_migrate(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
1812:	static int xfrm_dump_policy(struct sk_buff *, struct netlink_callback *);
1793:	static int xfrm_dump_policy_done(struct netlink_callback *);
1802:	static int xfrm_dump_policy_start(struct netlink_callback *);
1009:	static int xfrm_dump_sa(struct sk_buff *, struct netlink_callback *);
997:	static int xfrm_dump_sa_done(struct netlink_callback *);
2130:	static int xfrm_flush_policy(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
1935:	static int xfrm_flush_sa(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
2035:	static int xfrm_get_ae(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
1854:	static int xfrm_get_policy(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
1280:	static int xfrm_get_sa(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
1260:	static int xfrm_get_sadinfo(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
1201:	static int xfrm_get_spdinfo(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
3316:	static bool xfrm_is_alive(const struct km_event *);
2684:	static void xfrm_netlink_rcv(struct sk_buff *);
2079:	static int xfrm_new_ae(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
1610:	static struct xfrm_policy *xfrm_policy_construct(struct net *, struct xfrm_userpolicy_info *, struct nlattr **, int *);
2963:	static int xfrm_send_acquire(struct xfrm_state *, struct xfrm_tmpl *, struct xfrm_policy *);
3293:	static int xfrm_send_mapping(struct xfrm_state *, xfrm_address_t *, __be16);
2499:	static int xfrm_send_migrate(const struct xfrm_selector *, u8, u8, const struct xfrm_migrate *, int, const struct xfrm_kmaddress *, const struct xfrm_encap_tmpl *);
3195:	static int xfrm_send_policy_notify(struct xfrm_policy *, int, const struct km_event *);
3246:	static int xfrm_send_report(struct net *, u8, struct xfrm_selector *, xfrm_address_t *);
2889:	static int xfrm_send_state_notify(struct xfrm_state *, const struct km_event *);
1156:	static int xfrm_set_spdinfo(struct sk_buff *, struct nlmsghdr *, struct nlattr **);
569:	static struct xfrm_state *xfrm_state_construct(struct net *, struct xfrm_usersa_info *, struct nlattr **, int *);
1053:	static struct sk_buff *xfrm_state_netlink(struct sk_buff *, struct xfrm_state *, u32);
515:	static void xfrm_update_ae_params(struct xfrm_state *, struct nlattr **, int);
3378:	static void xfrm_user_exit(void);
3363:	static int xfrm_user_init(void);
3348:	static void xfrm_user_net_exit(struct list_head *);
3332:	static int xfrm_user_net_init(struct net *);
2632:	static int xfrm_user_rcv_msg(struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *);
715:	static struct xfrm_state *xfrm_user_state_lookup(struct net *, struct xfrm_usersa_id *, struct nlattr **, int *);

File security/commoncap.c:
834:	int cap_bprm_set_creds(struct linux_binprm *);
71:	int cap_capable(const struct cred *, struct user_namespace *, int, int);
205:	int cap_capget(struct task_struct *, kernel_cap_t *, kernel_cap_t *, kernel_cap_t *);
248:	int cap_capset(struct cred *, const struct cred *, const kernel_cap_t *, const kernel_cap_t *, const kernel_cap_t *);
502:	int cap_convert_nscap(struct dentry *, void **, size_t);
376:	int cap_inode_getsecurity(struct inode *, const char *, void **, bool);
319:	int cap_inode_killpriv(struct dentry *);
302:	int cap_inode_need_killpriv(struct dentry *);
972:	int cap_inode_removexattr(struct dentry *, const char *);
939:	int cap_inode_setxattr(struct dentry *, const char *, const void *, size_t, int);
1346:	int cap_mmap_addr(unsigned long);
1360:	int cap_mmap_file(struct file *, unsigned long, unsigned long, unsigned long);
139:	int cap_ptrace_access_check(struct task_struct *, unsigned int);
176:	int cap_ptrace_traceme(struct task_struct *);
117:	int cap_settime(const struct timespec64 *, const struct timezone *);
1062:	int cap_task_fix_setuid(struct cred *, const struct cred *, int);
1195:	int cap_task_prctl(int, unsigned long, unsigned long, unsigned long, unsigned long);
1145:	int cap_task_setioprio(struct task_struct *, int);
1132:	int cap_task_setscheduler(struct task_struct *);
1327:	int cap_vm_enough_memory(struct mm_struct *, long);
1389:	void capability_add_hooks(void);
597:	int get_vfs_caps_from_disk(const struct dentry *, struct cpu_vfs_cap_data *);
1111:	static int cap_safe_nice(struct task_struct *);
329:	static bool rootid_owns_currentns(kuid_t);

File security/device_cgroup.c:
804:	int __devcgroup_check_permission(short, u32, u32, short);
140:	static void __dev_exception_clean(struct dev_cgroup *);
85:	static int dev_exception_add(struct dev_cgroup *, struct dev_exception_item *);
117:	static void dev_exception_rm(struct dev_cgroup *, struct dev_exception_item *);
59:	static int dev_exceptions_copy(struct list_head *, struct list_head *);
755:	static ssize_t devcgroup_access_write(struct kernfs_open_file *, char *, size_t, loff_t);
208:	static struct cgroup_subsys_state *devcgroup_css_alloc(struct cgroup_subsys_state *);
221:	static void devcgroup_css_free(struct cgroup_subsys_state *);
195:	static void devcgroup_offline(struct cgroup_subsys_state *);
174:	static int devcgroup_online(struct cgroup_subsys_state *);
267:	static int devcgroup_seq_show(struct seq_file *, void *);
313:	static bool match_exception(struct list_head *, short, u32, u32, short);
350:	static bool match_exception_partial(struct list_head *, short, u32, u32, short);
236:	static void set_access(char *, short);
259:	static void set_majmin(char *, unsigned int);
389:	static bool verify_new_ex(struct dev_cgroup *, struct dev_exception_item *, enum devcg_behavior);

File security/inode.c:
227:	struct dentry *securityfs_create_dir(const char *, struct dentry *);
199:	struct dentry *securityfs_create_file(const char *, umode_t, struct dentry *, void *, const struct file_operations *);
259:	struct dentry *securityfs_create_symlink(const char *, struct dentry *, const char *, const struct inode_operations *);
294:	void securityfs_remove(struct dentry *);
47:	static int fill_super(struct super_block *, void *, int);
61:	static struct dentry *get_sb(struct file_system_type *, int, const char *, void *);
317:	static ssize_t lsm_read(struct file *, char *, size_t, loff_t *);
106:	static struct dentry *securityfs_create_dentry(const char *, umode_t, struct dentry *, void *, const struct file_operations *, const struct inode_operations *);
37:	static void securityfs_destroy_inode(struct inode *);
29:	static void securityfs_i_callback(struct callback_head *);
330:	static int securityfs_init(void);

File security/integrity/digsig.c:
52:	int integrity_digsig_verify(const unsigned int, const char *, int, const char *, int);
82:	int integrity_init_keyring(const unsigned int);
113:	int integrity_load_x509(const unsigned int, const char *);

File security/integrity/digsig_asymmetric.c:
82:	int asymmetric_verify(struct key *, const char *, int, const char *, int);
134:	int integrity_kernel_module_request(char *);

File security/integrity/evm/evm_crypto.c:
267:	int evm_calc_hash(struct dentry *, const char *, const char *, size_t, char, struct evm_digest *);
259:	int evm_calc_hmac(struct dentry *, const char *, const char *, size_t, struct evm_digest *);
339:	int evm_init_hmac(struct inode *, const struct xattr *, char *);
359:	int evm_init_key(void);
55:	int evm_set_key(void *, size_t);
308:	int evm_update_evmxattr(struct dentry *, const char *, const char *, size_t);
192:	static int evm_calc_hmac_or_hash(struct dentry *, const char *, const char *, size_t, uint8_t, struct evm_digest *);
147:	static void hmac_add_misc(struct shash_desc *, struct inode *, char, char *);
77:	static struct shash_desc *init_desc(char, uint8_t);

File security/integrity/evm/evm_main.c:
526:	int evm_inode_init_security(struct inode *, const struct xattr *, struct xattr *);
463:	void evm_inode_post_removexattr(struct dentry *, const char *);
514:	void evm_inode_post_setattr(struct dentry *, int);
441:	void evm_inode_post_setxattr(struct dentry *, const char *, const void *, size_t);
408:	int evm_inode_removexattr(struct dentry *, const char *);
480:	int evm_inode_setattr(struct dentry *, struct iattr *);
378:	int evm_inode_setxattr(struct dentry *, const char *, const void *, size_t);
273:	enum integrity_status evm_verifyxattr(struct dentry *, const char *, void *, size_t, struct integrity_iint_cache *);
319:	static int evm_protect_xattr(struct dentry *, const char *, size_t, const void *);
233:	static int evm_protected_xattr(const char *);
63:	static int evm_set_fixmode(char *);
298:	static enum integrity_status evm_verify_current_integrity(struct dentry *);
131:	static enum integrity_status evm_verify_hmac(struct dentry *, const char *, char *, size_t, struct integrity_iint_cache *);
566:	static int init_evm(void);

File security/integrity/evm/evm_posix_acl.c:
16:	int posix_xattr_acl(const char *);

File security/integrity/evm/evm_secfs.c:
287:	int evm_init_secfs(void);
44:	static ssize_t evm_read_key(struct file *, char *, size_t, loff_t *);
71:	static ssize_t evm_write_key(struct file *, const char *, size_t, loff_t *);

File security/integrity/iint.c:
60:	struct integrity_iint_cache *integrity_iint_find(struct inode *);
141:	void integrity_inode_free(struct inode *);
98:	struct integrity_iint_cache *integrity_inode_get(struct inode *);
188:	int integrity_kernel_read(struct file *, loff_t, void *, unsigned long);
212:	void integrity_load_keys(void);
156:	static void init_once(void *);
218:	static int integrity_fs_init(void);
170:	static int integrity_iintcache_init(void);

File security/integrity/ima/ima_api.c:
130:	void ima_add_violation(struct file *, const unsigned char *, struct integrity_iint_cache *, const char *, const char *);
41:	int ima_alloc_init_template(struct ima_event_data *, struct ima_template_entry **);
310:	void ima_audit_measurement(struct integrity_iint_cache *, const unsigned char *);
198:	int ima_collect_measurement(struct integrity_iint_cache *, struct file *, void *, loff_t, enum hash_algo);
357:	const char *ima_d_path(const struct path *, char **, char *);
28:	void ima_free_template_entry(struct ima_template_entry *);
178:	int ima_get_action(struct inode *, const struct cred *, u32, int, enum ima_hooks, int *);
277:	void ima_store_measurement(struct integrity_iint_cache *, struct file *, const unsigned char *, struct evm_ima_xattr_data *, int, int);
89:	int ima_store_template(struct ima_template_entry *, int, struct inode *, const unsigned char *, int);

File security/integrity/ima/ima_appraise.c:
211:	int ima_appraise_measurement(enum ima_hooks, struct integrity_iint_cache *, struct file *, const unsigned char *, struct evm_ima_xattr_data *, int);
85:	enum integrity_status ima_get_cache_status(struct integrity_iint_cache *, enum ima_hooks);
152:	enum hash_algo ima_get_hash_algo(struct evm_ima_xattr_data *, int);
388:	void ima_inode_post_setattr(struct dentry *);
461:	int ima_inode_removexattr(struct dentry *, const char *);
443:	int ima_inode_setxattr(struct dentry *, const char *, const void *, size_t);
51:	int ima_must_appraise(struct inode *, int, enum ima_hooks);
191:	int ima_read_xattr(struct dentry *, struct evm_ima_xattr_data **);
357:	void ima_update_xattr(struct integrity_iint_cache *, struct file *);
41:	bool is_ima_appraise_enabled(void);
21:	static int default_appraise_setup(char *);
63:	static int ima_fix_xattr(struct dentry *, struct integrity_iint_cache *);
425:	static void ima_reset_appraise_flags(struct inode *, int);

File security/integrity/ima/ima_crypto.c:
692:	int ima_calc_boot_aggregate(struct ima_digest_data *);
640:	int ima_calc_buffer_hash(const void *, loff_t, struct ima_digest_data *);
517:	int ima_calc_field_array_hash(struct ima_field_data *, struct ima_template_desc *, int, struct ima_digest_data *);
413:	int ima_calc_file_hash(struct file *, struct ima_digest_data *);
65:	int ima_init_crypto(void);
168:	static struct crypto_ahash *ima_alloc_atfm(enum hash_algo);
121:	static void *ima_alloc_pages(loff_t, size_t *, int);
81:	static struct crypto_shash *ima_alloc_tfm(enum hash_algo);
470:	static int ima_calc_field_array_hash_tfm(struct ima_field_data *, int, struct ima_digest_data *, struct crypto_shash *, struct ima_template_desc *, struct ima_template_desc *);
39:	static int param_set_bufsize(const char *, const struct kernel_param *);

File security/integrity/ima/ima_fs.c:
455:	int ima_fs_init(void);
132:	int ima_measurements_show(struct seq_file *, void *);
212:	void ima_print_digest(struct seq_file *, u8 *, u32);
118:	void ima_putc(struct seq_file *, void *, int);
35:	static int default_canonical_fmt_setup(char *);
266:	static int ima_ascii_measurements_open(struct inode *, struct file *);
221:	static int ima_ascii_measurements_show(struct seq_file *, void *);
99:	static void *ima_measurements_next(struct seq_file *, void *, loff_t *);
200:	static int ima_measurements_open(struct inode *, struct file *);
82:	static void *ima_measurements_start(struct seq_file *, loff_t *);
114:	static void ima_measurements_stop(struct seq_file *, void *);
387:	static int ima_open_policy(struct inode *, struct file *);
412:	static int ima_release_policy(struct inode *, struct file *);
56:	static ssize_t ima_show_htable_violations(struct file *, char *, size_t, loff_t *);
68:	static ssize_t ima_show_measurements_count(struct file *, char *, size_t, loff_t *);
315:	static ssize_t ima_write_policy(struct file *, const char *, size_t, loff_t *);

File security/integrity/ima/ima_init.c:
107:	int ima_init(void);
46:	static int ima_add_boot_aggregate(void);

File security/integrity/ima/ima_main.c:
363:	int ima_bprm_check(struct linux_binprm *);
389:	int ima_file_check(struct file *, int);
154:	void ima_file_free(struct file *);
337:	int ima_file_mmap(struct file *, unsigned long);
509:	int ima_load_data(enum kernel_load_data_id);
407:	void ima_post_path_mknod(struct dentry *);
468:	int ima_post_read_file(struct file *, void *, loff_t, enum kernel_read_file_id);
433:	int ima_read_file(struct file *, enum kernel_read_file_id);
44:	static int hash_setup(char *);
542:	static int init_ima(void);
169:	static int process_measurement(struct file *, const struct cred *, u32, char *, loff_t, int, enum ima_hooks);

File security/integrity/ima/ima_policy.c:
552:	int ima_check_policy(void);
1041:	void ima_delete_rules(void);
482:	void ima_init_policy(void);
402:	int ima_match_policy(struct inode *, const struct cred *, u32, enum ima_hooks, int, int, int *);
997:	ssize_t ima_parse_add_rule(char *);
570:	void ima_update_policy(void);
449:	void ima_update_policy_flag(void);
237:	static int default_appraise_policy_setup(char *);
203:	static int default_measure_policy_setup(char *);
657:	static void ima_log_string_op(struct audit_buffer *, char *, char *, bool (*)(kuid_t, kuid_t));
632:	static int ima_lsm_rule_init(struct ima_rule_entry *, substring_t *, int, int);
676:	static int ima_parse_rule(char *, struct ima_rule_entry *);
216:	static int policy_setup(char *);

File security/integrity/ima/ima_queue.c:
162:	int ima_add_template_entry(struct ima_template_entry *, int, const char *, struct inode *, const unsigned char *);
133:	unsigned long ima_get_binary_runtime_size(void);
206:	int ima_restore_measurement_entry(struct ima_template_entry *);
96:	static int ima_add_digest_entry(struct ima_template_entry *, bool);

File security/integrity/ima/ima_template.c:
231:	int ima_init_template(void);
206:	void ima_init_template_list(void);
323:	int ima_restore_measurement_list(loff_t, void *);
221:	struct ima_template_desc *ima_template_desc_current(void);
91:	static int ima_template_fmt_setup(char *);
55:	static int ima_template_setup(char *);
111:	static struct ima_template_desc *lookup_template_desc(const char *);
155:	static int template_desc_init_fields(const char *, struct ima_template_field ***, int *);

File security/integrity/ima/ima_template_lib.c:
264:	int ima_eventdigest_init(struct ima_event_data *, struct ima_field_data *);
310:	int ima_eventdigest_ng_init(struct ima_event_data *, struct ima_field_data *);
362:	int ima_eventname_init(struct ima_event_data *, struct ima_field_data *);
371:	int ima_eventname_ng_init(struct ima_event_data *, struct ima_field_data *);
380:	int ima_eventsig_init(struct ima_event_data *, struct ima_field_data *);
178:	int ima_parse_buf(void *, void *, void **, int, struct ima_field_data *, int *, unsigned long *, int, char *);
139:	void ima_show_template_digest(struct seq_file *, enum ima_show_type, struct ima_field_data *);
145:	void ima_show_template_digest_ng(struct seq_file *, enum ima_show_type, struct ima_field_data *);
158:	void ima_show_template_sig(struct seq_file *, enum ima_show_type, struct ima_field_data *);
152:	void ima_show_template_string(struct seq_file *, enum ima_show_type, struct ima_field_data *);
225:	static int ima_eventdigest_init_common(u8 *, u32, u8, struct ima_field_data *);
328:	static int ima_eventname_init_common(struct ima_event_data *, struct ima_field_data *, bool);
120:	static void ima_show_template_field_data(struct seq_file *, enum ima_show_type, enum data_formats, struct ima_field_data *);
35:	static int ima_write_template_field_data(const void *, const u32, enum data_formats, struct ima_field_data *);

File security/integrity/integrity_audit.c:
31:	void integrity_audit_msg(int, struct inode *, const unsigned char *, const char *, const char *, int, int);
21:	static int integrity_audit_setup(char *);

File security/keys/big_key.c:
343:	void big_key_describe(const struct key *, struct seq_file *);
325:	void big_key_destroy(struct key *);
297:	void big_key_free_preparse(struct key_preparsed_payload *);
204:	int big_key_preparse(struct key_preparsed_payload *);
359:	long big_key_read(const struct key *, char *, size_t);
311:	void big_key_revoke(struct key *);
163:	static void *big_key_alloc_buffer(size_t);
104:	static int big_key_crypt(enum big_key_op, struct big_key_buf *, size_t, u8 *);
143:	static void big_key_free_buffer(struct big_key_buf *);
416:	static int big_key_init(void);

File security/keys/compat.c:
59:	long __ia32_compat_sys_keyctl(const struct pt_regs *);
27:	static long compat_keyctl_instantiate_key_iov(key_serial_t, const struct compat_iovec *, unsigned int, key_serial_t);

File security/keys/encrypted-keys/ecryptfs_format.c:
50:	int ecryptfs_fill_auth_tok(struct ecryptfs_auth_tok *, const char *);
21:	u8 *ecryptfs_get_auth_tok_key(struct ecryptfs_auth_tok *);
33:	void ecryptfs_get_versions(int *, int *, int *);

File security/keys/encrypted-keys/encrypted.c:
717:	static void __ekey_init(struct encrypted_key_payload *, const char *, const char *, const char *);
325:	static int calc_hash(struct crypto_shash *, u8 *, const u8 *, unsigned int);
339:	static int calc_hmac(u8 *, const u8 *, const u8 *, unsigned int, unsigned int);
1006:	static void cleanup_encrypted(void);
522:	static int datablob_hmac_verify(struct encrypted_key_payload *, const u8 *, const u8 *, size_t);
171:	static int datablob_parse(char *, const char **, char **, char **, char **);
560:	static int derived_key_decrypt(struct encrypted_key_payload *, const u8 *, unsigned int);
458:	static int derived_key_encrypt(struct encrypted_key_payload *, const u8 *, unsigned int);
967:	static void encrypted_destroy(struct key *);
786:	static int encrypted_instantiate(struct key *, struct key_preparsed_payload *);
607:	static struct encrypted_key_payload *encrypted_key_alloc(struct key *, const char *, const char *, const char *);
830:	static void encrypted_rcu_free(struct callback_head *);
905:	static long encrypted_read(const struct key *, char *, size_t);
847:	static int encrypted_update(struct key *, struct key_preparsed_payload *);
362:	static int get_derived_key(u8 *, enum derived_key_type, const u8 *, size_t);
982:	static int init_encrypted(void);
389:	static struct skcipher_request *init_skcipher_req(const u8 *, unsigned int);
422:	static struct key *request_master_key(const u8 **, size_t *, struct encrypted_key_payload *);
137:	static int valid_master_desc(const char *, const char *);

File security/keys/encrypted-keys/masterkey_trusted.c:
31:	struct key *request_trusted_key(const char *, const u8 **, size_t *);

File security/keys/gc.c:
104:	void key_gc_keytype(struct key_type *);
56:	void key_schedule_gc(time64_t);
77:	void key_schedule_gc_links(void);
173:	static void key_garbage_collector(struct work_struct *);
87:	static void key_gc_timer_func(struct timer_list *);
127:	static void key_gc_unused_keys(struct list_head *);

File security/keys/key.c:
1083:	int generic_key_instantiate(struct key *, struct key_preparsed_payload *);
228:	struct key *key_alloc(struct key_type *, const char *, kuid_t, kgid_t, const struct cred *, key_perm_t, unsigned long, struct key_restriction *);
801:	key_ref_t key_create_or_update(key_ref_t, const char *, const char *, const void *, size_t, key_perm_t, unsigned long);
1163:	void key_init(void);
496:	int key_instantiate_and_link(struct key *, const void *, size_t, struct key *, struct key *);
1058:	void key_invalidate(struct key *);
648:	struct key *key_lookup(key_serial_t);
371:	int key_payload_reserve(struct key *, size_t);
634:	void key_put(struct key *);
567:	int key_reject_and_link(struct key *, unsigned int, unsigned int, struct key *, struct key *);
1024:	void key_revoke(struct key *);
710:	void key_set_timeout(struct key *, unsigned int);
690:	struct key_type *key_type_lookup(const char *);
730:	void key_type_put(struct key_type *);
971:	int key_update(key_ref_t, const void *, size_t);
54:	struct key_user *key_user_lookup(kuid_t);
123:	void key_user_put(struct key_user *);
1113:	int register_key_type(struct key_type *);
1149:	void unregister_key_type(struct key_type *);
423:	static int __key_instantiate_and_link(struct key *, struct key_preparsed_payload *, struct key *, struct key *, struct assoc_array_edit **);

File security/keys/keyctl.c:
63:	long __ia32_sys_add_key(const struct pt_regs *);
1701:	long __ia32_sys_keyctl(const struct pt_regs *);
156:	long __ia32_sys_request_key(const struct pt_regs *);
63:	long __x64_sys_add_key(const struct pt_regs *);
1701:	long __x64_sys_keyctl(const struct pt_regs *);
156:	long __x64_sys_request_key(const struct pt_regs *);
1449:	long keyctl_assume_authority(key_serial_t);
891:	long keyctl_chown_key(key_serial_t, uid_t, gid_t);
586:	long keyctl_describe_key(key_serial_t, char *, size_t);
247:	long keyctl_get_keyring_ID(key_serial_t, int);
1494:	long keyctl_get_security(key_serial_t, char *, size_t);
1184:	long keyctl_instantiate_key(key_serial_t, const void *, size_t, key_serial_t);
1107:	long keyctl_instantiate_key_common(key_serial_t, struct iov_iter *, key_serial_t);
1214:	long keyctl_instantiate_key_iov(key_serial_t, const struct iovec *, unsigned int, key_serial_t);
409:	long keyctl_invalidate_key(key_serial_t);
277:	long keyctl_join_session_keyring(const char *);
456:	long keyctl_keyring_clear(key_serial_t);
503:	long keyctl_keyring_link(key_serial_t, key_serial_t);
658:	long keyctl_keyring_search(key_serial_t, const char *, const char *, key_serial_t);
540:	long keyctl_keyring_unlink(key_serial_t, key_serial_t);
1250:	long keyctl_negate_key(key_serial_t, unsigned int, key_serial_t);
767:	long keyctl_read_key(key_serial_t, char *, size_t);
1270:	long keyctl_reject_key(key_serial_t, unsigned int, unsigned int, key_serial_t);
1660:	long keyctl_restrict_keyring(key_serial_t, const char *, const char *);
368:	long keyctl_revoke_key(key_serial_t);
1558:	long keyctl_session_to_parent(void);
1328:	long keyctl_set_reqkey_keyring(int);
1392:	long keyctl_set_timeout(key_serial_t, unsigned int);
1008:	long keyctl_setperm_key(key_serial_t, key_perm_t);
314:	long keyctl_update_key(key_serial_t, const void *, size_t);
745:	static long __keyctl_read_key(struct key *, char *, size_t);
1047:	static long get_instantiation_keyring(key_serial_t, struct key **, struct request_key_auth *);
34:	static int key_get_type_from_user(char *, const char *, unsigned int);
1084:	static int keyctl_change_reqkey_auth(struct key *);

File security/keys/keyring.c:
1284:	void __key_link(struct key *, struct assoc_array_edit **);
1196:	int __key_link_begin(struct key *, const struct keyring_index_key *, struct assoc_array_edit **);
1267:	int __key_link_check_live_key(struct key *, struct key *);
1297:	void __key_link_end(struct key *, const struct keyring_index_key *, struct assoc_array_edit *);
1053:	key_ref_t find_key_to_update(key_ref_t, const struct keyring_index_key *);
1096:	struct key *find_keyring_by_name(const char *, bool);
538:	bool key_default_cmp(const struct key *, const struct key_match_data *);
1350:	int key_link(struct key *, struct key *);
1393:	int key_unlink(struct key *, struct key *);
490:	struct key *keyring_alloc(const char *, kuid_t, kgid_t, const struct cred *, key_perm_t, unsigned long, struct key_restriction *, struct key *);
1434:	int keyring_clear(struct key *);
1502:	void keyring_gc(struct key *, time64_t);
978:	int keyring_restrict(key_ref_t, const char *, const char *);
1547:	void keyring_restriction_gc(struct key *, struct key_type *);
903:	key_ref_t keyring_search(key_ref_t, struct key_type *, const char *);
864:	key_ref_t keyring_search_aux(key_ref_t, struct keyring_search_context *);
527:	int restrict_link_reject(struct key *, const struct key_type *, const union key_payload *, struct key *);
171:	static unsigned long hash_key_type_and_desc(const struct keyring_index_key *);
278:	static bool keyring_compare_object(const void *, const void *);
410:	static void keyring_describe(const struct key *, struct seq_file *);
385:	static void keyring_destroy(struct key *);
1174:	static int keyring_detect_cycle(struct key *, struct key *);
1150:	static int keyring_detect_cycle_iterator(const void *, void *);
293:	static int keyring_diff_objects(const void *, const void *);
360:	static void keyring_free_object(void *);
139:	static void keyring_free_preparse(struct key_preparsed_payload *);
1487:	static int keyring_gc_check_iterator(const void *, void *);
1476:	static bool keyring_gc_select_iterator(void *, void *);
230:	static unsigned long keyring_get_key_chunk(const void *, int);
272:	static unsigned long keyring_get_object_key_chunk(const void *, int);
148:	static int keyring_instantiate(struct key *, struct key_preparsed_payload *);
131:	static int keyring_preparse(struct key_preparsed_payload *);
454:	static long keyring_read(const struct key *, char *, size_t);
431:	static int keyring_read_iterator(const void *, void *);
1464:	static void keyring_revoke(struct key *);
547:	static int keyring_search_iterator(const void *, void *);
636:	static bool search_nested_keyrings(struct key *, struct keyring_search_context *);

File security/keys/permission.c:
30:	int key_task_permission(const key_ref_t, const struct cred *, unsigned int);
89:	int key_validate(const struct key *);

File security/keys/persistent.c:
131:	long keyctl_get_persistent(uid_t, key_serial_t);

File security/keys/proc.c:
254:	static struct rb_node *__key_user_next(struct user_namespace *, struct rb_node *);
48:	static int key_proc_init(void);
293:	static void *proc_key_users_next(struct seq_file *, void *, loff_t *);
305:	static int proc_key_users_show(struct seq_file *, void *);
276:	static void *proc_key_users_start(struct seq_file *, loff_t *);
299:	static void proc_key_users_stop(struct seq_file *, void *);
140:	static void *proc_keys_next(struct seq_file *, void *, loff_t *);
158:	static int proc_keys_show(struct seq_file *, void *);
117:	static void *proc_keys_start(struct seq_file *, loff_t *);
152:	static void proc_keys_stop(struct seq_file *, void *);

File security/keys/process_keys.c:
186:	int install_process_keyring_to_cred(struct cred *);
234:	int install_session_keyring_to_cred(struct cred *, struct key *);
139:	int install_thread_keyring_to_cred(struct cred *);
45:	int install_user_keyrings(void);
771:	long join_session_keyring(const char *);
845:	void key_change_session_keyring(struct callback_head *);
308:	void key_fsgid_changed(struct task_struct *);
294:	void key_fsuid_changed(struct task_struct *);
534:	key_ref_t lookup_user_key(key_serial_t, unsigned long, key_perm_t);
510:	bool lookup_user_key_possessed(const struct key *, const struct key_match_data *);
340:	key_ref_t search_my_process_keyrings(struct keyring_search_context *);
452:	key_ref_t search_process_keyrings(struct keyring_search_context *);
886:	static int init_root_keyring(void);

File security/keys/request_key.c:
34:	void complete_request_key(struct key *, int);
632:	struct key *request_key(struct key_type *, const char *, const char *);
523:	struct key *request_key_and_link(struct key_type *, const char *, const void *, size_t, void *, struct key *, unsigned long);
705:	struct key *request_key_async(struct key_type *, const char *, const void *, size_t);
730:	struct key *request_key_async_with_auxdata(struct key_type *, const char *, const void *, size_t, void *);
669:	struct key *request_key_with_auxdata(struct key_type *, const char *, const void *, size_t, void *);
603:	int wait_for_key_construction(struct key *, bool);
93:	static int call_sbin_request_key(struct key *, void *);
65:	static void umh_keys_cleanup(struct subprocess_info *);
55:	static int umh_keys_init(struct subprocess_info *, struct cred *);

File security/keys/request_key_auth.c:
241:	struct key *key_get_instantiation_authkey(key_serial_t);
156:	struct key *request_key_auth_new(struct key *, const char *, const void *, size_t, struct key *);
128:	static void free_request_key_auth(struct request_key_auth *);
69:	static void request_key_auth_describe(const struct key *, struct seq_file *);
143:	static void request_key_auth_destroy(struct key *);
52:	static void request_key_auth_free_preparse(struct key_preparsed_payload *);
59:	static int request_key_auth_instantiate(struct key *, struct key_preparsed_payload *);
47:	static int request_key_auth_preparse(struct key_preparsed_payload *);
87:	static long request_key_auth_read(const struct key *, char *, size_t);
116:	static void request_key_auth_revoke(struct key *);

File security/keys/trusted.c:
124:	static int TSS_authhmac(unsigned char *, const unsigned char *, unsigned int, unsigned char *, unsigned char *, unsigned char, unsigned char, unsigned int);
175:	static int TSS_checkhmac1(unsigned char *, const uint32_t, const unsigned char *, const unsigned char *, unsigned int, unsigned int);
256:	static int TSS_checkhmac2(unsigned char *, const uint32_t, const unsigned char *, const unsigned char *, unsigned int, const unsigned char *, unsigned int, unsigned int, unsigned int);
77:	static int TSS_rawhmac(unsigned char *, const unsigned char *, unsigned int, unsigned int);
1223:	static void cleanup_trusted(void);
855:	static int datablob_parse(char *, struct trusted_key_payload *, struct trusted_key_options *);
736:	static int getoptions(char *, struct trusted_key_options *, struct trusted_key_payload *);
46:	static struct sdesc *init_sdesc(struct crypto_shash *);
1210:	static int init_trusted(void);
661:	static int key_seal(struct trusted_key_payload *, struct trusted_key_options *);
428:	static int oiap(struct tpm_buf *, uint32_t *, unsigned char *);
377:	static int pcrlock(const int);
573:	static int tpm_unseal(struct tpm_buf *, uint32_t, const unsigned char *, const unsigned char *, int, const unsigned char *, unsigned char *, unsigned int *);
1160:	static void trusted_destroy(struct key *);
957:	static int trusted_instantiate(struct key *, struct key_preparsed_payload *);
914:	static struct trusted_key_options *trusted_options_alloc(void);
934:	static struct trusted_key_payload *trusted_payload_alloc(struct key *);
1048:	static void trusted_rcu_free(struct callback_head *);
1138:	static long trusted_read(const struct key *, char *, size_t);
1176:	static void trusted_shash_release(void);
1059:	static int trusted_update(struct key *, struct key_preparsed_payload *);

File security/keys/user_defined.c:
162:	void user_describe(const struct key *, struct seq_file *);
150:	void user_destroy(struct key *);
87:	void user_free_preparse(struct key_preparsed_payload *);
63:	int user_preparse(struct key_preparsed_payload *);
175:	long user_read(const struct key *, char *, size_t);
132:	void user_revoke(struct key *);
105:	int user_update(struct key *, struct key_preparsed_payload *);
197:	static int logon_vet_description(const char *);
93:	static void user_free_payload_rcu(struct callback_head *);

File security/lsm_audit.c:
446:	void common_lsm_audit(struct common_audit_data *, void (*)(struct audit_buffer *, void *), void (*)(struct audit_buffer *, void *));
42:	int ipv4_skb_to_auditdata(struct sk_buff *, struct common_audit_data *, u8 *);
111:	int ipv6_skb_to_auditdata(struct sk_buff *, struct common_audit_data *, u8 *);
211:	static void dump_common_audit_data(struct audit_buffer *, struct common_audit_data *);

File security/min_addr.c:
32:	int mmap_min_addr_handler(struct ctl_table *, int, void *, size_t *, loff_t *);
47:	static int init_mmap_min_addr(void);

File security/security.c:
183:	int call_lsm_notifier(enum lsm_event, void *);
189:	int register_lsm_notifier(struct notifier_block *);
170:	void security_add_hooks(struct security_hook_list *, int, char *);
1765:	void security_audit_rule_free(void *);
1755:	int security_audit_rule_init(u32, u32, char *, void **);
1760:	int security_audit_rule_known(struct audit_krule *);
1770:	int security_audit_rule_match(u32, u32, u32, void *, struct audit_context *);
235:	int security_binder_set_context_mgr(struct task_struct *);
240:	int security_binder_transaction(struct task_struct *, struct task_struct *);
246:	int security_binder_transfer_binder(struct task_struct *, struct task_struct *);
252:	int security_binder_transfer_file(struct task_struct *, struct task_struct *, struct file *);
1779:	int security_bpf(int, union bpf_attr *, unsigned int);
1783:	int security_bpf_map(struct bpf_map *, fmode_t);
1791:	int security_bpf_map_alloc(struct bpf_map *);
1799:	void security_bpf_map_free(struct bpf_map *);
1787:	int security_bpf_prog(struct bpf_prog *);
1795:	int security_bpf_prog_alloc(struct bpf_prog_aux *);
1803:	void security_bpf_prog_free(struct bpf_prog_aux *);
346:	int security_bprm_check(struct linux_binprm *);
361:	void security_bprm_committed_creds(struct linux_binprm *);
356:	void security_bprm_committing_creds(struct linux_binprm *);
341:	int security_bprm_set_creds(struct linux_binprm *);
286:	int security_capable(const struct cred *, struct user_namespace *, int);
292:	int security_capable_noaudit(const struct cred *, struct user_namespace *, int);
268:	int security_capget(struct task_struct *, kernel_cap_t *, kernel_cap_t *, kernel_cap_t *);
277:	int security_capset(struct cred *, const struct cred *, const kernel_cap_t *, const kernel_cap_t *, const kernel_cap_t *);
1000:	int security_cred_alloc_blank(struct cred *, gfp_t);
1005:	void security_cred_free(struct cred *);
1027:	void security_cred_getsecid(const struct cred *, u32 *);
1291:	void security_d_instantiate(struct dentry *, struct inode *);
466:	int security_dentry_create_files_as(struct dentry *, int, struct qstr *, const struct cred *, struct cred *);
457:	int security_dentry_init_security(struct dentry *, int, const struct qstr *, void **, u32 *);
882:	int security_file_alloc(struct file *);
958:	int security_file_fcntl(struct file *, unsigned int, unsigned long);
887:	void security_file_free(struct file *);
892:	int security_file_ioctl(struct file *, unsigned int, unsigned long);
953:	int security_file_lock(struct file *, unsigned int);
947:	int security_file_mprotect(struct vm_area_struct *, unsigned long, unsigned long);
979:	int security_file_open(struct file *);
871:	int security_file_permission(struct file *, int);
974:	int security_file_receive(struct file *);
968:	int security_file_send_sigiotask(struct task_struct *, struct fown_struct *, int);
963:	void security_file_set_fowner(struct file *);
1299:	int security_getprocattr(struct task_struct *, char *, char **);
1617:	int security_ib_alloc_security(void **);
1611:	int security_ib_endport_manage_subnet(void *, const char *, u8);
1623:	void security_ib_free_security(void *);
1605:	int security_ib_pkey_access(void *, u64, u16);
1519:	void security_inet_conn_established(struct sock *, struct sk_buff *);
1506:	int security_inet_conn_request(struct sock *, struct sk_buff *, struct request_sock *);
1513:	void security_inet_csk_clone(struct sock *, const struct request_sock *);
70:	int security_init(void);
445:	int security_inode_alloc(struct inode *);
859:	int security_inode_copy_up(struct dentry *, struct cred **);
865:	int security_inode_copy_up_xattr(const char *);
617:	int security_inode_create(struct inode *, struct dentry *, umode_t);
696:	int security_inode_follow_link(struct dentry *, struct inode *, bool);
451:	void security_inode_free(struct inode *);
724:	int security_inode_getattr(const struct path *);
1358:	int security_inode_getsecctx(struct inode *, void **, u32 *);
854:	void security_inode_getsecid(struct inode *, u32 *);
809:	int security_inode_getsecurity(struct inode *, const char *, void **, bool);
764:	int security_inode_getxattr(struct dentry *, const char *);
475:	int security_inode_init_security(struct inode *, struct inode *, const struct qstr *, const initxattrs, void *);
1340:	void security_inode_invalidate_secctx(struct inode *);
804:	int security_inode_killpriv(struct dentry *);
625:	int security_inode_link(struct dentry *, struct inode *, struct dentry *);
846:	int security_inode_listsecurity(struct inode *, char *, size_t);
771:	int security_inode_listxattr(struct dentry *);
648:	int security_inode_mkdir(struct inode *, struct dentry *, umode_t);
663:	int security_inode_mknod(struct inode *, struct dentry *, umode_t, dev_t);
799:	int security_inode_need_killpriv(struct dentry *);
1346:	int security_inode_notifysecctx(struct inode *, void *, u32);
704:	int security_inode_permission(struct inode *, int);
755:	void security_inode_post_setxattr(struct dentry *, const char *, const void *, size_t, int);
689:	int security_inode_readlink(struct dentry *);
778:	int security_inode_removexattr(struct dentry *, const char *);
670:	int security_inode_rename(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int);
656:	int security_inode_rmdir(struct inode *, struct dentry *);
711:	int security_inode_setattr(struct dentry *, struct iattr *);
1352:	int security_inode_setsecctx(struct dentry *, void *, u32);
827:	int security_inode_setsecurity(struct inode *, const char *, const void *, size_t, int);
731:	int security_inode_setxattr(struct dentry *, const char *, const void *, size_t, int);
640:	int security_inode_symlink(struct inode *, struct dentry *, const char *);
633:	int security_inode_unlink(struct inode *, struct dentry *);
1192:	void security_ipc_getsecid(struct kern_ipc_perm *, u32 *);
1187:	int security_ipc_permission(struct kern_ipc_perm *, short);
1314:	int security_ismaclabel(const char *);
1034:	int security_kernel_act_as(struct cred *, u32);
1039:	int security_kernel_create_files_as(struct cred *, struct inode *);
1077:	int security_kernel_load_data(enum kernel_load_data_id);
1044:	int security_kernel_module_request(char *);
1065:	int security_kernel_post_read_file(struct file *, char *, loff_t, enum kernel_read_file_id);
1054:	int security_kernel_read_file(struct file *, enum kernel_read_file_id);
1728:	int security_key_alloc(struct key *, const struct cred *, unsigned long);
1734:	void security_key_free(struct key *);
1745:	int security_key_getsecurity(struct key *, char **);
1739:	int security_key_permission(key_ref_t, const struct cred *, unsigned int);
942:	int security_mmap_addr(unsigned long);
931:	int security_mmap_file(struct file *, unsigned long, unsigned long);
157:	int security_module_enable(const char *);
1198:	int security_msg_msg_alloc(struct msg_msg *);
1203:	void security_msg_msg_free(struct msg_msg *);
1208:	int security_msg_queue_alloc(struct kern_ipc_perm *);
1218:	int security_msg_queue_associate(struct kern_ipc_perm *, int);
1213:	void security_msg_queue_free(struct kern_ipc_perm *);
1223:	int security_msg_queue_msgctl(struct kern_ipc_perm *, int);
1234:	int security_msg_queue_msgrcv(struct kern_ipc_perm *, struct msg_msg *, struct task_struct *, long, int);
1228:	int security_msg_queue_msgsnd(struct kern_ipc_perm *, struct msg_msg *, int);
1309:	int security_netlink_send(struct sock *, struct sk_buff *);
510:	int security_old_inode_init_security(struct inode *, struct inode *, const struct qstr *, const char **, void **, size_t *);
1017:	int security_prepare_creds(struct cred *, const struct cred *, gfp_t);
258:	int security_ptrace_access_check(struct task_struct *, unsigned int);
263:	int security_ptrace_traceme(struct task_struct *);
303:	int security_quota_on(struct dentry *);
298:	int security_quotactl(int, int, int, struct super_block *);
1334:	void security_release_secctx(char *, u32);
1494:	void security_req_classify_flow(const struct request_sock *, struct flowi *);
366:	int security_sb_alloc(struct super_block *);
429:	int security_sb_clone_mnt_opts(const struct super_block *, struct super_block *, unsigned long, unsigned long *);
376:	int security_sb_copy_data(char *, char *);
371:	void security_sb_free(struct super_block *);
387:	int security_sb_kern_mount(struct super_block *, int, void *);
402:	int security_sb_mount(const char *, const struct path *, const char *, unsigned long, void *);
439:	int security_sb_parse_opts_str(char *, struct security_mnt_opts *);
413:	int security_sb_pivotroot(const struct path *, const struct path *);
382:	int security_sb_remount(struct super_block *, void *);
418:	int security_sb_set_mnt_opts(struct super_block *, struct security_mnt_opts *, unsigned long, unsigned long *);
392:	int security_sb_show_options(struct seq_file *, struct super_block *);
397:	int security_sb_statfs(struct dentry *);
408:	int security_sb_umount(struct vfsmount *, int);
1580:	int security_sctp_assoc_request(struct sctp_endpoint *, struct sk_buff *);
1586:	int security_sctp_bind_connect(struct sock *, int, struct sockaddr *, int);
1594:	void security_sctp_sk_clone(struct sctp_endpoint *, struct sock *, struct sock *);
1327:	int security_secctx_to_secid(const char *, u32, u32 *);
1320:	int security_secid_to_secctx(u32, char **, u32 *);
1538:	void security_secmark_refcount_dec(void);
1532:	void security_secmark_refcount_inc(void);
1526:	int security_secmark_relabel_packet(u32);
1265:	int security_sem_alloc(struct kern_ipc_perm *);
1275:	int security_sem_associate(struct kern_ipc_perm *, int);
1270:	void security_sem_free(struct kern_ipc_perm *);
1280:	int security_sem_semctl(struct kern_ipc_perm *, int);
1285:	int security_sem_semop(struct kern_ipc_perm *, struct sembuf *, unsigned int, int);
1304:	int security_setprocattr(const char *, void *, size_t);
313:	int security_settime64(const struct timespec64 *, const struct timezone *);
1240:	int security_shm_alloc(struct kern_ipc_perm *);
1250:	int security_shm_associate(struct kern_ipc_perm *, int);
1245:	void security_shm_free(struct kern_ipc_perm *);
1260:	int security_shm_shmat(struct kern_ipc_perm *, char *, int);
1255:	int security_shm_shmctl(struct kern_ipc_perm *, int);
1472:	int security_sk_alloc(struct sock *, int, gfp_t);
1488:	void security_sk_classify_flow(struct sock *, struct flowi *);
1482:	void security_sk_clone(const struct sock *, struct sock *);
1477:	void security_sk_free(struct sock *);
1715:	void security_skb_classify_flow(struct sk_buff *, struct flowi *);
1500:	void security_sock_graft(struct sock *, struct socket *);
1452:	int security_sock_rcv_skb(struct sock *, struct sk_buff *);
1411:	int security_socket_accept(struct socket *, struct socket *);
1396:	int security_socket_bind(struct socket *, struct sockaddr *, int);
1401:	int security_socket_connect(struct socket *, struct sockaddr *, int);
1378:	int security_socket_create(int, int, int, int);
1432:	int security_socket_getpeername(struct socket *);
1465:	int security_socket_getpeersec_dgram(struct socket *, struct sk_buff *, u32 *);
1458:	int security_socket_getpeersec_stream(struct socket *, char *, int *, unsigned int);
1427:	int security_socket_getsockname(struct socket *);
1437:	int security_socket_getsockopt(struct socket *, int, int);
1406:	int security_socket_listen(struct socket *, int);
1383:	int security_socket_post_create(struct socket *, int, int, int, int);
1421:	int security_socket_recvmsg(struct socket *, struct msghdr *, int, int);
1416:	int security_socket_sendmsg(struct socket *, struct msghdr *, int);
1442:	int security_socket_setsockopt(struct socket *, int, int);
1447:	int security_socket_shutdown(struct socket *, int);
1390:	int security_socket_socketpair(struct socket *, struct socket *);
308:	int security_syslog(int);
990:	int security_task_alloc(struct task_struct *, unsigned long);
1088:	int security_task_fix_setuid(struct cred *, const struct cred *, int);
995:	void security_task_free(struct task_struct *);
1126:	int security_task_getioprio(struct task_struct *);
1099:	int security_task_getpgid(struct task_struct *);
1148:	int security_task_getscheduler(struct task_struct *);
1109:	void security_task_getsecid(struct task_struct *, u32 *);
1104:	int security_task_getsid(struct task_struct *);
1158:	int security_task_kill(struct task_struct *, struct siginfo *, int, const struct cred *);
1153:	int security_task_movememory(struct task_struct *);
1164:	int security_task_prctl(int, unsigned long, unsigned long, unsigned long, unsigned long);
1131:	int security_task_prlimit(const struct cred *, const struct cred *, unsigned int);
1121:	int security_task_setioprio(struct task_struct *, int);
1116:	int security_task_setnice(struct task_struct *, int);
1094:	int security_task_setpgid(struct task_struct *, pid_t);
1137:	int security_task_setrlimit(struct task_struct *, unsigned int, struct rlimit *);
1143:	int security_task_setscheduler(struct task_struct *);
1182:	void security_task_to_inode(struct task_struct *, struct inode *);
1022:	void security_transfer_creds(struct cred *, const struct cred *);
1544:	int security_tun_dev_alloc_security(void **);
1568:	int security_tun_dev_attach(struct sock *, void *);
1562:	int security_tun_dev_attach_queue(void *);
1556:	int security_tun_dev_create(void);
1550:	void security_tun_dev_free_security(void *);
1574:	int security_tun_dev_open(void *);
1372:	int security_unix_may_send(struct socket *, struct socket *);
1366:	int security_unix_stream_connect(struct sock *, struct sock *, struct sock *);
318:	int security_vm_enough_memory_mm(struct mm_struct *, long);
1710:	int security_xfrm_decode_session(struct sk_buff *, u32 *);
1632:	int security_xfrm_policy_alloc(struct xfrm_sec_ctx **, struct xfrm_user_sec_ctx *, gfp_t);
1640:	int security_xfrm_policy_clone(struct xfrm_sec_ctx *, struct xfrm_sec_ctx **);
1652:	int security_xfrm_policy_delete(struct xfrm_sec_ctx *);
1646:	void security_xfrm_policy_free(struct xfrm_sec_ctx *);
1681:	int security_xfrm_policy_lookup(struct xfrm_sec_ctx *, u32, u8);
1657:	int security_xfrm_state_alloc(struct xfrm_state *, struct xfrm_user_sec_ctx *);
1664:	int security_xfrm_state_alloc_acquire(struct xfrm_state *, struct xfrm_sec_ctx *, u32);
1670:	int security_xfrm_state_delete(struct xfrm_state *);
1676:	void security_xfrm_state_free(struct xfrm_state *);
1686:	int security_xfrm_state_pol_flow_match(struct xfrm_state *, struct xfrm_policy *, const struct flowi *);
195:	int unregister_lsm_notifier(struct notifier_block *);
96:	static int choose_lsm(char *);

File security/selinux/avc.c:
812:	int avc_add_callback(int (*)(u32), u32);
1233:	void avc_disable(void);
110:	unsigned int avc_get_cache_threshold(struct selinux_avc *);
222:	int avc_get_hash_stats(struct selinux_avc *, char *);
1051:	int avc_has_extended_perms(struct selinux_state *, u32, u32, u16, u32, u8, u8, struct common_audit_data *);
1193:	int avc_has_perm(struct selinux_state *, u32, u32, u16, u32, struct common_audit_data *);
1209:	int avc_has_perm_flags(struct selinux_state *, u32, u32, u16, u32, struct common_audit_data *, int);
1147:	int avc_has_perm_noaudit(struct av_decision *, unsigned int, u32, u16, u32, u32, struct selinux_state *);
206:	void avc_init(void);
1228:	u32 avc_policy_seqno(struct selinux_state *);
115:	void avc_set_cache_threshold(struct selinux_avc *, unsigned int);
983:	int avc_ss_reset(struct selinux_avc *, u32);
96:	void selinux_avc_init(struct selinux_avc **);
763:	int slow_avc_audit(struct selinux_state *, u32, u32, u16, u32, u32, u32, int, struct common_audit_data *, unsigned int);
568:	static struct avc_node *avc_alloc_node(struct selinux_avc *);
748:	static void avc_audit_post_callback(struct audit_buffer *, void *);
732:	static void avc_audit_pre_callback(struct audit_buffer *, void *);
1014:	static struct avc_node *avc_compute_av(struct selinux_state *, u32, u32, u16, struct av_decision *, struct avc_xperms_node *);
324:	static void avc_copy_xperms_decision(struct extended_perms_decision *, struct extended_perms_decision *);
1026:	static int avc_denied(struct selinux_state *, u32, u32, u16, u32, u8, u8, unsigned int, struct av_decision *);
954:	static void avc_flush(struct selinux_avc *);
510:	static void avc_node_delete(struct selinux_avc *, struct avc_node *);
502:	static void avc_node_free(struct callback_head *);
517:	static void avc_node_kill(struct selinux_avc *, struct avc_node *);
587:	static void avc_node_populate(struct avc_node *, u32, u32, u16, struct av_decision *);
525:	static void avc_node_replace(struct selinux_avc *, struct avc_node *, struct avc_node *);
845:	static int avc_update_node(struct selinux_avc *, u32, u32, u8, u8, u32, u32, u16, u32, struct extended_perms_decision *, u32);
364:	static struct avc_xperms_decision_node *avc_xperms_decision_alloc(u8);
296:	static void avc_xperms_decision_free(struct avc_xperms_decision_node *);
310:	static void avc_xperms_free(struct avc_xperms_node *);
423:	static int avc_xperms_populate(struct avc_xperms_node *, struct avc_node *);

File security/selinux/exports.c:
19:	bool selinux_is_enabled(void);

File security/selinux/hooks.c:
7268:	void selinux_complete_init(void);
7376:	int selinux_disable(struct selinux_state *);
279:	static int __inode_security_revalidate(struct inode *, struct dentry *, bool);
3180:	static int audit_inode_permission(struct inode *, u32, u32, u32, int, unsigned int);
6877:	static int bpf_fd_pass(struct file *, u32);
2451:	static int check_nnp_nosuid(const struct task_security_struct *, const struct task_security_struct *, const struct linux_binprm *, const struct linux_binprm *);
141:	static int checkreqprot_setup(char *);
1804:	static int cred_has_capability(const struct cred *, int, int, bool);
7263:	static void delayed_superblock_init(struct super_block *, void *);
111:	static int enforcing_setup(char *);
1920:	static int file_has_perm(const struct cred *, struct file *, u32);
3705:	static int file_map_prot_check(struct file *, unsigned long, int);
3280:	static bool has_cap_mac_admin(bool);
1547:	static int inode_doinit_with_dentry(struct inode *, struct dentry *);
344:	static void inode_free_rcu(struct callback_head *);
1844:	static int inode_has_perm(const struct cred *, u32, struct common_audit_data *, struct inode *, struct inode *);
5990:	static int ipc_alloc_security(struct kern_ipc_perm *, u16);
6035:	static int ipc_has_perm(u32, struct kern_ipc_perm *, struct kern_ipc_perm *);
2621:	static int match_file(const void *, struct file *, unsigned int);
482:	static int may_context_mount_inode_relabel(u32, const struct cred *, struct superblock_security_struct *);
463:	static int may_context_mount_sb_relabel(u32, const struct cred *, struct superblock_security_struct *);
1986:	static int may_create(struct inode *, struct dentry *, u16);
2033:	static int may_link(struct inode *, struct dentry *, int);
541:	static int sb_finish_set_opts(struct super_block *);
2221:	static int selinux_binder_set_context_mgr(struct task_struct *);
2231:	static int selinux_binder_transaction(struct task_struct *, struct task_struct *);
2252:	static int selinux_binder_transfer_binder(struct task_struct *, struct task_struct *);
2263:	static int selinux_binder_transfer_file(struct task_struct *, struct task_struct *, struct file *);
6833:	static int selinux_bpf(int, union bpf_attr *, unsigned int);
6904:	static int selinux_bpf_map(struct bpf_map *, fmode_t);
6926:	static int selinux_bpf_map_alloc(struct bpf_map *);
6940:	static void selinux_bpf_map_free(struct bpf_map *);
6915:	static int selinux_bpf_prog(struct bpf_prog *);
6948:	static int selinux_bpf_prog_alloc(struct bpf_prog_aux *);
6962:	static void selinux_bpf_prog_free(struct bpf_prog_aux *);
2725:	static void selinux_bprm_committed_creds(struct linux_binprm *);
2678:	static void selinux_bprm_committing_creds(struct linux_binprm *);
2505:	static int selinux_bprm_set_creds(struct linux_binprm *);
2351:	static int selinux_capable(const struct cred *, struct user_namespace *, int, int);
2323:	static int selinux_capget(struct task_struct *, kernel_cap_t *, kernel_cap_t *, kernel_cap_t *);
2331:	static int selinux_capset(struct cred *, const struct cred *, const kernel_cap_t *, const kernel_cap_t *, const kernel_cap_t *);
3948:	static int selinux_cred_alloc_blank(struct cred *, gfp_t);
3963:	static void selinux_cred_free(struct cred *);
4006:	static void selinux_cred_getsecid(const struct cred *, u32 *);
3979:	static int selinux_cred_prepare(struct cred *, const struct cred *, gfp_t);
3998:	static void selinux_cred_transfer(struct cred *, const struct cred *);
6437:	static void selinux_d_instantiate(struct dentry *, struct inode *);
3041:	static int selinux_dentry_create_files_as(struct dentry *, int, struct qstr *, const struct cred *, struct cred *);
3023:	static int selinux_dentry_init_security(struct dentry *, int, const struct qstr *, void **, u32 *);
1962:	static int selinux_determine_inode_label(const struct task_security_struct *, struct inode *, const struct qstr *, u16, u32 *);
126:	static int selinux_enabled_setup(char *);
3603:	static int selinux_file_alloc_security(struct file *);
3829:	static int selinux_file_fcntl(struct file *, unsigned int, unsigned long);
3608:	static void selinux_file_free_security(struct file *);
3656:	static int selinux_file_ioctl(struct file *, unsigned int, unsigned long);
3822:	static int selinux_file_lock(struct file *, unsigned int);
3780:	static int selinux_file_mprotect(struct vm_area_struct *, unsigned long, unsigned long);
3907:	static int selinux_file_open(struct file *);
3583:	static int selinux_file_permission(struct file *, int);
3900:	static int selinux_file_receive(struct file *);
3877:	static int selinux_file_send_sigiotask(struct task_struct *, struct fown_struct *, int);
3869:	static void selinux_file_set_fowner(struct file *);
6443:	static int selinux_getprocattr(struct task_struct *, char *, char **);
6813:	static int selinux_ib_alloc_security(void **);
6788:	static int selinux_ib_endport_manage_subnet(void *, const char *, u8);
6766:	static int selinux_ib_pkey_access(void *, u64, u16);
5478:	static void selinux_inet_conn_established(struct sock *, struct sk_buff *);
5440:	static int selinux_inet_conn_request(struct sock *, struct sk_buff *, struct request_sock *);
5461:	static void selinux_inet_csk_clone(struct sock *, const struct request_sock *);
5012:	static int selinux_inet_sys_rcv_skb(struct net *, int, char *, u16, u32, struct common_audit_data *);
7208:	static int selinux_init(void);
3013:	static int selinux_inode_alloc_security(struct inode *);
3533:	static int selinux_inode_copy_up(struct dentry *, struct cred **);
3553:	static int selinux_inode_copy_up_xattr(const char *);
3110:	static int selinux_inode_create(struct inode *, struct dentry *, umode_t);
3158:	static int selinux_inode_follow_link(struct dentry *, struct inode *, bool);
3018:	static void selinux_inode_free_security(struct inode *);
3275:	static int selinux_inode_getattr(const struct path *);
6686:	static int selinux_inode_getsecctx(struct inode *, void **, u32 *);
3527:	static void selinux_inode_getsecid(struct inode *, u32 *);
3450:	static int selinux_inode_getsecurity(struct inode *, const char *, void **, bool);
3414:	static int selinux_inode_getxattr(struct dentry *, const char *);
3062:	static int selinux_inode_init_security(struct inode *, struct inode *, const struct qstr *, const char **, void **, size_t *);
6658:	static void selinux_inode_invalidate_secctx(struct inode *);
3115:	static int selinux_inode_link(struct dentry *, struct inode *, struct dentry *);
3519:	static int selinux_inode_listsecurity(struct inode *, char *, size_t);
3421:	static int selinux_inode_listxattr(struct dentry *);
3130:	static int selinux_inode_mkdir(struct inode *, struct dentry *, umode_t);
3140:	static int selinux_inode_mknod(struct inode *, struct dentry *, umode_t, dev_t);
6670:	static int selinux_inode_notifysecctx(struct inode *, void *, u32);
3200:	static int selinux_inode_permission(struct inode *, int);
3381:	static void selinux_inode_post_setxattr(struct dentry *, const char *, const void *, size_t, int);
3151:	static int selinux_inode_readlink(struct dentry *);
3428:	static int selinux_inode_removexattr(struct dentry *, const char *);
3145:	static int selinux_inode_rename(struct inode *, struct dentry *, struct inode *, struct dentry *);
3135:	static int selinux_inode_rmdir(struct inode *, struct dentry *);
3247:	static int selinux_inode_setattr(struct dentry *, struct iattr *);
6681:	static int selinux_inode_setsecctx(struct dentry *, void *, u32);
3489:	static int selinux_inode_setsecurity(struct inode *, const char *, const void *, size_t, int);
3292:	static int selinux_inode_setxattr(struct dentry *, const char *, const void *, size_t, int);
3125:	static int selinux_inode_symlink(struct inode *, struct dentry *, const char *);
3120:	static int selinux_inode_unlink(struct inode *, struct dentry *);
5661:	static unsigned int selinux_ip_forward(struct sk_buff *, const struct net_device *, u16);
5735:	static unsigned int selinux_ip_output(struct sk_buff *, u16);
5827:	static unsigned int selinux_ip_postroute(struct sk_buff *, const struct net_device *, u16);
5793:	static unsigned int selinux_ip_postroute_compat(struct sk_buff *, int, u16);
6431:	static void selinux_ipc_getsecid(struct kern_ipc_perm *, u32 *);
6415:	static int selinux_ipc_permission(struct kern_ipc_perm *, short);
5719:	static unsigned int selinux_ipv4_forward(void *, struct sk_buff *, const struct nf_hook_state *);
5777:	static unsigned int selinux_ipv4_output(void *, struct sk_buff *, const struct nf_hook_state *);
5967:	static unsigned int selinux_ipv4_postroute(void *, struct sk_buff *, const struct nf_hook_state *);
5727:	static unsigned int selinux_ipv6_forward(void *, struct sk_buff *, const struct nf_hook_state *);
5785:	static unsigned int selinux_ipv6_output(void *, struct sk_buff *, const struct nf_hook_state *);
5975:	static unsigned int selinux_ipv6_postroute(void *, struct sk_buff *, const struct nf_hook_state *);
6636:	static int selinux_ismaclabel(const char *);
4015:	static int selinux_kernel_act_as(struct cred *, u32);
4039:	static int selinux_kernel_create_files_as(struct cred *, struct inode *);
4118:	static int selinux_kernel_load_data(enum kernel_load_data_id);
4069:	static int selinux_kernel_module_from_file(struct file *);
4057:	static int selinux_kernel_module_request(char *);
4102:	static int selinux_kernel_read_file(struct file *, enum kernel_read_file_id);
6698:	static int selinux_key_alloc(struct key *, const struct cred *, unsigned long);
6718:	static void selinux_key_free(struct key *);
6749:	static int selinux_key_getsecurity(struct key *, char **);
6726:	static int selinux_key_permission(key_ref_t, const struct cred *, unsigned int);
198:	static int selinux_lsm_notifier_avc_callback(u32);
3744:	static int selinux_mmap_addr(unsigned long);
3758:	static int selinux_mmap_file(struct file *, unsigned long, unsigned long, unsigned long);
2988:	static int selinux_mount(const char *, const struct path *, const char *, unsigned long, void *);
6051:	static int selinux_msg_msg_alloc_security(struct msg_msg *);
6056:	static void selinux_msg_msg_free_security(struct msg_msg *);
6062:	static int selinux_msg_queue_alloc_security(struct kern_ipc_perm *);
6093:	static int selinux_msg_queue_associate(struct kern_ipc_perm *, int);
6088:	static void selinux_msg_queue_free_security(struct kern_ipc_perm *);
6109:	static int selinux_msg_queue_msgctl(struct kern_ipc_perm *, int);
6186:	static int selinux_msg_queue_msgrcv(struct kern_ipc_perm *, struct msg_msg *, struct task_struct *, long, int);
6140:	static int selinux_msg_queue_msgsnd(struct kern_ipc_perm *, struct msg_msg *, int);
187:	static int selinux_netcache_avc_callback(u32);
5985:	static int selinux_netlink_send(struct sock *, struct sk_buff *);
7341:	static int selinux_nf_ip_init(void);
7324:	static int selinux_nf_register(struct net *);
7330:	static void selinux_nf_unregister(struct net *);
1109:	static int selinux_parse_opts_str(char *, struct security_mnt_opts *);
4449:	static int selinux_parse_skb(struct sk_buff *, struct common_audit_data *, char **, int, u8 *);
181:	static int selinux_peerlbl_enabled(void);
2302:	static int selinux_ptrace_access_check(struct task_struct *, unsigned int);
2316:	static int selinux_ptrace_traceme(struct task_struct *);
2385:	static int selinux_quota_on(struct dentry *);
2357:	static int selinux_quotactl(int, int, int, struct super_block *);
6653:	static void selinux_release_secctx(char *, u32);
5513:	static void selinux_req_classify_flow(const struct request_sock *, struct flowi *);
2773:	static int selinux_sb_alloc_security(struct super_block *);
1028:	static int selinux_sb_clone_mnt_opts(const struct super_block *, struct super_block *, unsigned long, unsigned long *);
2832:	static int selinux_sb_copy_data(char *, char *);
2778:	static void selinux_sb_free_security(struct super_block *);
2959:	static int selinux_sb_kern_mount(struct super_block *, int, void *);
2874:	static int selinux_sb_remount(struct super_block *, void *);
1303:	static int selinux_sb_show_options(struct seq_file *, struct super_block *);
2978:	static int selinux_sb_statfs(struct dentry *);
5271:	static int selinux_sctp_assoc_request(struct sctp_endpoint *, struct sk_buff *);
5343:	static int selinux_sctp_bind_connect(struct sock *, int, struct sockaddr *, int);
5422:	static void selinux_sctp_sk_clone(struct sctp_endpoint *, struct sock *, struct sock *);
6647:	static int selinux_secctx_to_secid(const char *, u32, u32 *);
6641:	static int selinux_secid_to_secctx(u32, char **, u32 *);
5508:	static void selinux_secmark_refcount_dec(void);
5503:	static void selinux_secmark_refcount_inc(void);
5490:	static int selinux_secmark_relabel_packet(u32);
6310:	static int selinux_sem_alloc_security(struct kern_ipc_perm *);
6341:	static int selinux_sem_associate(struct kern_ipc_perm *, int);
6358:	static int selinux_sem_semctl(int, struct kern_ipc_perm *);
6402:	static int selinux_sem_semop(struct kern_ipc_perm *, struct sembuf *, unsigned int, int);
740:	static int selinux_set_mnt_opts(struct super_block *, struct security_mnt_opts *, unsigned long, unsigned long *);
6493:	static int selinux_setprocattr(const char *, void *, size_t);
6213:	static int selinux_shm_alloc_security(struct kern_ipc_perm *);
6244:	static int selinux_shm_associate(struct kern_ipc_perm *, int);
6296:	static int selinux_shm_shmat(struct kern_ipc_perm *, char *, int);
6261:	static int selinux_shm_shmctl(struct kern_ipc_perm *, int);
5206:	static int selinux_sk_alloc_security(struct sock *, int, gfp_t);
5232:	static void selinux_sk_clone_security(const struct sock *, struct sock *);
5223:	static void selinux_sk_free_security(struct sock *);
5244:	static void selinux_sk_getsecid(struct sock *, u32 *);
4505:	static int selinux_skb_peerlbl_sid(struct sk_buff *, u16, u32 *);
5255:	static void selinux_sock_graft(struct sock *, struct socket *);
5037:	static int selinux_sock_rcv_skb_compat(struct sock *, struct sk_buff *, u16);
4890:	static int selinux_socket_accept(struct socket *, struct socket *);
4658:	static int selinux_socket_bind(struct socket *, struct sockaddr *, int);
4872:	static int selinux_socket_connect(struct socket *, struct sockaddr *, int);
4789:	static int selinux_socket_connect_helper(struct sockaddr *, int, struct socket *);
4588:	static int selinux_socket_create(int, int, int, int);
5178:	static int selinux_socket_getpeersec_dgram(struct socket *, struct sk_buff *, u32 *);
5142:	static int selinux_socket_getpeersec_stream(struct socket *, char *, int *, unsigned int);
4928:	static int selinux_socket_getsockname(struct socket *);
4949:	static int selinux_socket_getsockopt(struct socket *, int, int);
4885:	static int selinux_socket_listen(struct socket *, int);
4608:	static int selinux_socket_post_create(struct socket *, int, int, int, int);
4922:	static int selinux_socket_recvmsg(struct socket *, struct msghdr *, int, int);
4916:	static int selinux_socket_sendmsg(struct socket *, struct msghdr *, int);
4938:	static int selinux_socket_setsockopt(struct socket *, int, int);
4955:	static int selinux_socket_shutdown(struct socket *, int);
5071:	static int selinux_socket_sock_rcv_skb(struct sock *, struct sk_buff *);
4642:	static int selinux_socket_socketpair(struct socket *, struct socket *);
4995:	static int selinux_socket_unix_may_send(struct socket *, struct socket *);
4960:	static int selinux_socket_unix_stream_connect(struct sock *, struct sock *, struct sock *);
2392:	static int selinux_syslog(int);
3936:	static int selinux_task_alloc(struct task_struct *, unsigned long);
4172:	static int selinux_task_getioprio(struct task_struct *);
4139:	static int selinux_task_getpgid(struct task_struct *);
4153:	static void selinux_task_getsecid(struct task_struct *, u32 *);
4146:	static int selinux_task_getsid(struct task_struct *);
4233:	static int selinux_task_kill(struct task_struct *, struct siginfo *, int, const struct cred *);
4179:	static int selinux_task_prlimit(const struct cred *, const struct cred *, unsigned int);
4158:	static int selinux_task_setnice(struct task_struct *, int);
4132:	static int selinux_task_setpgid(struct task_struct *, pid_t);
4195:	static int selinux_task_setrlimit(struct task_struct *, unsigned int, struct rlimit *);
4212:	static int selinux_task_setscheduler(struct task_struct *);
4251:	static void selinux_task_to_inode(struct task_struct *, struct inode *);
5519:	static int selinux_tun_dev_alloc_security(void **);
5562:	static int selinux_tun_dev_attach(struct sock *, void *);
5553:	static int selinux_tun_dev_attach_queue(void *);
5537:	static int selinux_tun_dev_create(void);
5532:	static void selinux_tun_dev_free_security(void *);
5580:	static int selinux_tun_dev_open(void *);
3003:	static int selinux_umount(struct vfsmount *, int);
2423:	static int selinux_vm_enough_memory(struct mm_struct *, long);
4570:	static int sock_has_perm(struct sock *, u32);
1232:	static int superblock_doinit(struct super_block *, void *);

File security/selinux/ibpkey.c:
215:	void sel_ib_pkey_flush(void);
192:	int sel_ib_pkey_sid(u64, u16, u32 *);
233:	static int sel_ib_pkey_init(void);

File security/selinux/netif.c:
246:	void sel_netif_flush(void);
200:	int sel_netif_sid(struct net *, int, u32 *);
116:	static void sel_netif_destroy(struct sel_netif *);
273:	static int sel_netif_init(void);
258:	static int sel_netif_netdev_notifier_handler(struct notifier_block *, unsigned long, void *);

File security/selinux/netlabel.c:
137:	void selinux_netlbl_cache_invalidate(void);
155:	void selinux_netlbl_err(struct sk_buff *, u16, int, int);
338:	int selinux_netlbl_inet_conn_request(struct request_sock *, u16);
367:	void selinux_netlbl_inet_csk_clone(struct sock *, u16);
285:	int selinux_netlbl_sctp_assoc_request(struct sctp_endpoint *, struct sk_buff *);
385:	void selinux_netlbl_sctp_sk_clone(struct sock *, struct sock *);
168:	void selinux_netlbl_sk_security_free(struct sk_security_struct *);
184:	void selinux_netlbl_sk_security_reset(struct sk_security_struct *);
202:	int selinux_netlbl_skbuff_getsid(struct sk_buff *, u16, u32 *, u32 *);
239:	int selinux_netlbl_skbuff_setsid(struct sk_buff *, u16, u32);
442:	int selinux_netlbl_sock_rcv_skb(struct sk_security_struct *, struct sk_buff *, u16, struct common_audit_data *);
617:	int selinux_netlbl_socket_connect(struct sock *, struct sockaddr *);
595:	int selinux_netlbl_socket_connect_locked(struct sock *, struct sockaddr *);
403:	int selinux_netlbl_socket_post_create(struct sock *, u16);
515:	int selinux_netlbl_socket_setsockopt(struct socket *, int, int);
55:	static int selinux_netlbl_sidlookup_cached(struct sk_buff *, u16, struct netlbl_lsm_secattr *, u32 *);
81:	static struct netlbl_lsm_secattr *selinux_netlbl_sock_genattr(struct sock *);
555:	static int selinux_netlbl_socket_connect_helper(struct sock *, struct sockaddr *);

File security/selinux/netlink.c:
106:	void selnl_notify_policyload(u32);
101:	void selnl_notify_setenforce(int);
111:	static int selnl_init(void);
70:	static void selnl_notify(int, void *);

File security/selinux/netnode.c:
285:	void sel_netnode_flush(void);
262:	int sel_netnode_sid(void *, u16, u32 *);
114:	static struct sel_netnode *sel_netnode_find(const void *, u16);
302:	static int sel_netnode_init(void);

File security/selinux/netport.c:
219:	void sel_netport_flush(void);
196:	int sel_netport_sid(u8, u16, u32 *);
236:	static int sel_netport_init(void);

File security/selinux/nlmsgtab.c:
158:	int selinux_nlmsg_lookup(u16, u16, u32 *);

File security/selinux/selinuxfs.c:
2073:	void exit_sel_fs(void);
2034:	static int init_sel_fs(void);
1526:	static void *sel_avc_stats_seq_next(struct seq_file *, void *, loff_t *);
1531:	static int sel_avc_stats_seq_show(struct seq_file *, void *);
1516:	static void *sel_avc_stats_seq_start(struct seq_file *, loff_t *);
1549:	static void sel_avc_stats_seq_stop(struct seq_file *, void *);
1267:	static ssize_t sel_commit_bools_write(struct file *, const char *, size_t, loff_t *);
1897:	static int sel_fill_super(struct super_block *, void *, int);
2019:	static void sel_kill_sb(struct super_block *);
1868:	static struct dentry *sel_make_dir(struct dentry *, const char *, unsigned long *);
1158:	static struct inode *sel_make_inode(struct super_block *, int);
506:	static int sel_make_policy_nodes(struct selinux_fs_info *);
246:	static int sel_mmap_handle_status(struct file *, struct vm_area_struct *);
482:	static int sel_mmap_policy(struct file *, struct vm_area_struct *);
456:	static vm_fault_t sel_mmap_policy_fault(struct vm_fault *);
2013:	static struct dentry *sel_mount(struct file_system_type *, int, const char *, void *);
1559:	static int sel_open_avc_cache_stats(struct inode *, struct file *);
221:	static int sel_open_handle_status(struct inode *, struct file *);
374:	static int sel_open_policy(struct inode *, struct file *);
1416:	static ssize_t sel_read_avc_cache_threshold(struct file *, char *, size_t, loff_t *);
1470:	static ssize_t sel_read_avc_hash_stats(struct file *, char *, size_t, loff_t *);
1169:	static ssize_t sel_read_bool(struct file *, char *, size_t, loff_t *);
629:	static ssize_t sel_read_checkreqprot(struct file *, char *, size_t, loff_t *);
1676:	static ssize_t sel_read_class(struct file *, char *, size_t, loff_t *);
122:	static ssize_t sel_read_enforce(struct file *, char *, size_t, loff_t *);
234:	static ssize_t sel_read_handle_status(struct file *, char *, size_t, loff_t *);
200:	static ssize_t sel_read_handle_unknown(struct file *, char *, size_t, loff_t *);
1608:	static ssize_t sel_read_initcon(struct file *, char *, size_t, loff_t *);
352:	static ssize_t sel_read_mls(struct file *, char *, size_t, loff_t *);
1690:	static ssize_t sel_read_perm(struct file *, char *, size_t, loff_t *);
441:	static ssize_t sel_read_policy(struct file *, char *, size_t, loff_t *);
1704:	static ssize_t sel_read_policycap(struct file *, char *, size_t, loff_t *);
328:	static ssize_t sel_read_policyvers(struct file *, char *, size_t, loff_t *);
426:	static int sel_release_policy(struct inode *, struct file *);
813:	static ssize_t sel_write_access(struct file *, char *, size_t);
1429:	static ssize_t sel_write_avc_cache_threshold(struct file *, const char *, size_t, loff_t *);
1210:	static ssize_t sel_write_bool(struct file *, const char *, size_t, loff_t *);
640:	static ssize_t sel_write_checkreqprot(struct file *, const char *, size_t, loff_t *);
593:	static ssize_t sel_write_context(struct file *, char *, size_t);
864:	static ssize_t sel_write_create(struct file *, char *, size_t);
276:	static ssize_t sel_write_disable(struct file *, const char *, size_t, loff_t *);
135:	static ssize_t sel_write_enforce(struct file *, const char *, size_t, loff_t *);
531:	static ssize_t sel_write_load(struct file *, const char *, size_t, loff_t *);
1094:	static ssize_t sel_write_member(struct file *, char *, size_t);
968:	static ssize_t sel_write_relabel(struct file *, char *, size_t);
1029:	static ssize_t sel_write_user(struct file *, char *, size_t);
682:	static ssize_t sel_write_validatetrans(struct file *, const char *, size_t, loff_t *);
100:	static void selinux_fs_info_free(struct super_block *);
779:	static ssize_t selinux_transaction_write(struct file *, const char *, size_t, loff_t *);

File security/selinux/ss/avtab.c:
311:	int avtab_alloc(struct avtab *, u32);
660:	void avtab_cache_init(void);
279:	void avtab_destroy(struct avtab *);
346:	void avtab_hash_eval(struct avtab *, char *);
304:	int avtab_init(struct avtab *);
153:	struct avtab_node *avtab_insert_nonunique(struct avtab *, struct avtab_key *, struct avtab_datum *);
557:	int avtab_read(struct avtab *, void *, struct policydb *);
389:	int avtab_read_item(struct avtab *, void *, struct policydb *, int (*)(struct avtab *, struct avtab_key *, struct avtab_datum *, void *), void *);
183:	struct avtab_datum *avtab_search(struct avtab *, struct avtab_key *);
219:	struct avtab_node *avtab_search_node(struct avtab *, struct avtab_key *);
251:	struct avtab_node *avtab_search_node_next(struct avtab_node *, int);
636:	int avtab_write(struct policydb *, struct avtab *, void *);
601:	int avtab_write_item(struct policydb *, struct avtab_node *, void *);
69:	static struct avtab_node *avtab_insert_node(int, struct avtab_node *, struct avtab_key *, struct avtab_datum *, struct avtab_node *, struct avtab *, struct avtab *);
551:	static int avtab_insertf(struct avtab *, struct avtab_key *, struct avtab_datum *, void *);

File security/selinux/ss/conditional.c:
638:	void cond_compute_av(struct avtab *, struct avtab_key *, struct av_decision *, struct extended_perms *);
619:	void cond_compute_xperms(struct avtab *, struct avtab_key *, struct extended_perms_decision *);
187:	int cond_destroy_bool(void *, void *, void *);
194:	int cond_index_bool(void *, void *, void *);
176:	int cond_init_bool_indexes(struct policydb *);
169:	void cond_policydb_destroy(struct policydb *);
119:	int cond_policydb_init(struct policydb *);
222:	int cond_read_bool(struct policydb *, struct hashtab *, void *);
455:	int cond_read_list(struct policydb *, void *);
495:	int cond_write_bool(void *, void *, void *);
595:	int cond_write_list(struct policydb *, struct cond_node *, void *);
90:	int evaluate_cond_node(struct policydb *, struct cond_node *);
274:	static int cond_insertf(struct avtab *, struct avtab_key *, struct avtab_datum *, void *);
143:	static void cond_node_destroy(struct cond_node *);
355:	static int cond_read_av_list(struct policydb *, void *, struct cond_av_list **, struct cond_av_list *);
527:	static int cond_write_av_list(struct policydb *, struct cond_av_list *, struct policy_file *);

File security/selinux/ss/context.h:
142:	static void context_destroy(struct context *);
41:	static int mls_context_cpy(struct context *, struct context *);
81:	static int mls_context_cpy_high(struct context *, struct context *);
61:	static int mls_context_cpy_low(struct context *, struct context *);

File security/selinux/ss/ebitmap.c:
525:	void ebitmap_cache_init(void);
30:	int ebitmap_cmp(struct ebitmap *, struct ebitmap *);
201:	int ebitmap_contains(struct ebitmap *, struct ebitmap *, u32);
52:	int ebitmap_cpy(struct ebitmap *, struct ebitmap *);
327:	void ebitmap_destroy(struct ebitmap *);
242:	int ebitmap_get_bit(struct ebitmap *, unsigned long);
91:	int ebitmap_netlbl_export(struct ebitmap *, struct netlbl_lsm_catmap **);
143:	int ebitmap_netlbl_import(struct ebitmap *, struct netlbl_lsm_catmap *);
346:	int ebitmap_read(struct ebitmap *, void *);
259:	int ebitmap_set_bit(struct ebitmap *, unsigned long, int);
450:	int ebitmap_write(struct ebitmap *, void *);

File security/selinux/ss/hashtab.c:
173:	void hashtab_cache_init(void);
15:	struct hashtab *hashtab_create(u32 (*)(struct hashtab *, const void *), int (*)(struct hashtab *, const void *, const void *), u32);
99:	void hashtab_destroy(struct hashtab *);
42:	int hashtab_insert(struct hashtab *, void *, void *);
123:	int hashtab_map(struct hashtab *, int (*)(void *, void *, void *), void *);
80:	void *hashtab_search(struct hashtab *, const void *);
147:	void hashtab_stat(struct hashtab *, struct hashtab_info *);

File security/selinux/ss/mls.c:
36:	int mls_compute_context_len(struct policydb *, struct context *);
509:	int mls_compute_sid(struct policydb *, struct context *, struct context *, u16, u32, struct context *, bool);
193:	int mls_context_isvalid(struct policydb *, struct context *);
236:	int mls_context_to_sid(struct policydb *, char, char **, struct context *, struct sidtab *, u32);
466:	int mls_convert_context(struct policydb *, struct policydb *, struct context *);
626:	int mls_export_netlbl_cat(struct policydb *, struct context *, struct netlbl_lsm_secattr *);
584:	void mls_export_netlbl_lvl(struct policydb *, struct context *, struct netlbl_lsm_secattr *);
379:	int mls_from_string(struct policydb *, char *, struct context *, gfp_t);
655:	int mls_import_netlbl_cat(struct policydb *, struct context *, struct netlbl_lsm_secattr *);
605:	void mls_import_netlbl_lvl(struct policydb *, struct context *, struct netlbl_lsm_secattr *);
162:	int mls_level_isvalid(struct policydb *, struct mls_level *);
182:	int mls_range_isvalid(struct policydb *, struct mls_range *);
405:	int mls_range_set(struct context *, struct mls_range *);
422:	int mls_setup_user_range(struct policydb *, struct context *, struct user_datum *, struct context *);
89:	void mls_sid_to_context(struct policydb *, struct context *, char **);

File security/selinux/ss/policydb.c:
932:	int policydb_class_isvalid(struct policydb *, unsigned int);
957:	int policydb_context_isvalid(struct policydb *, struct context *);
803:	void policydb_destroy(struct policydb *);
900:	int policydb_load_isids(struct policydb *, struct sidtab *);
2297:	int policydb_read(struct policydb *, void *);
939:	int policydb_role_isvalid(struct policydb *, unsigned int);
946:	int policydb_type_isvalid(struct policydb *, unsigned int);
3437:	int policydb_write(struct policydb *, void *);
1821:	u32 string_to_av_perm(struct policydb *, u16, const char *);
1810:	u16 string_to_security_class(struct policydb *, const char *);
472:	static int cat_index(void *, void *, void *);
1637:	static int cat_read(struct policydb *, struct hashtab *, void *);
2677:	static int cat_write(void *, void *, void *);
362:	static int class_index(void *, void *, void *);
1322:	static int class_read(struct policydb *, struct hashtab *, void *);
2907:	static int class_write(void *, void *, void *);
653:	static int cls_destroy(void *, void *, void *);
626:	static int common_destroy(void *, void *, void *);
344:	static int common_index(void *, void *, void *);
1157:	static int common_read(struct policydb *, struct hashtab *, void *);
2812:	static int common_write(void *, void *, void *);
640:	static void constraint_expr_destroy(struct constraint_expr *);
1061:	static int context_read_and_validate(struct context *, struct policydb *, void *);
2763:	static int context_write(struct context *, void *, struct policydb *);
3375:	static int filename_write_helper(void *, void *, void *);
231:	static int filenametr_cmp(struct hashtab *, const void *, const void *);
766:	static int filenametr_destroy(void *, void *, void *);
216:	static u32 filenametr_hash(struct hashtab *, const void *);
3311:	static int hashtab_cnt(void *, void *, void *);
1524:	static int mls_read_level(struct mls_level *, void *);
1002:	static int mls_read_range_helper(struct mls_range *, void *);
2593:	static int mls_write_level(struct mls_level *, void *);
2614:	static int mls_write_range_helper(struct mls_range *, void *);
787:	static void ocontext_destroy(struct ocontext *, int);
619:	static int perm_destroy(void *, void *, void *);
1124:	static int perm_read(struct hashtab *, void *, struct policydb *);
2790:	static int perm_write(void *, void *, void *);
776:	static int range_tr_destroy(void *, void *, void *);
3319:	static int range_write_helper(void *, void *, void *);
260:	static int rangetr_cmp(struct hashtab *, const void *, const void *);
253:	static u32 rangetr_hash(struct hashtab *, const void *);
1226:	static int read_cons_helper(struct constraint_node **, int, int, void *, struct policydb *);
1718:	static int role_bounds_sanity_check(void *, void *, void *);
695:	static int role_destroy(void *, void *, void *);
380:	static int role_index(void *, void *, void *);
1416:	static int role_read(struct policydb *, struct hashtab *, void *);
2995:	static int role_write(void *, void *, void *);
732:	static int sens_destroy(void *, void *, void *);
450:	static int sens_index(void *, void *, void *);
1596:	static int sens_read(struct policydb *, struct hashtab *, void *);
2649:	static int sens_write(void *, void *, void *);
1101:	static int str_read(char **, gfp_t, void *, u32);
1754:	static int type_bounds_sanity_check(void *, void *, void *);
401:	static int type_index(void *, void *, void *);
1472:	static int type_read(struct policydb *, struct hashtab *, void *);
3034:	static int type_write(void *, void *, void *);
1682:	static int user_bounds_sanity_check(void *, void *, void *);
716:	static int user_destroy(void *, void *, void *);
429:	static int user_index(void *, void *, void *);
1546:	static int user_read(struct policydb *, struct hashtab *, void *);
3075:	static int user_write(void *, void *, void *);
2860:	static int write_cons_helper(struct constraint_node *, void *, struct policydb *);

File security/selinux/ss/policydb.h:
348:	static int next_entry(void *, struct policy_file *, size_t);
359:	static int put_entry(const void *, size_t, int, struct policy_file *);

File security/selinux/ss/services.c:
863:	int security_bounded_transition(struct selinux_state *, u32, u32);
1876:	int security_change_sid(struct selinux_state *, u32, u32, u16, u32 *);
1107:	void security_compute_av(struct selinux_state *, u32, u32, u16, struct av_decision *, struct extended_perms *);
1164:	void security_compute_av_user(struct selinux_state *, u32, u32, u16, struct av_decision *);
1009:	void security_compute_xperms_decision(struct selinux_state *, u32, u32, u16, u8, struct extended_perms_decision *);
1529:	int security_context_str_to_sid(struct selinux_state *, const char *, u32 *, gfp_t);
1521:	int security_context_to_sid(struct selinux_state *, const char *, u32, u32 *, gfp_t);
1554:	int security_context_to_sid_default(struct selinux_state *, const char *, u32, u32 *, u32, gfp_t);
1562:	int security_context_to_sid_force(struct selinux_state *, const char *, u32, u32 *);
2762:	int security_fs_use(struct selinux_state *, struct super_block *);
2744:	int security_genfs_sid(struct selinux_state *, const char *, char *, u16, u32 *);
3248:	int security_get_allow_unknown(struct selinux_state *);
2922:	int security_get_bool_value(struct selinux_state *, int);
2808:	int security_get_bools(struct selinux_state *, int *, char ***, int **);
3149:	int security_get_classes(struct selinux_state *, char ***, int *);
1275:	const char *security_get_initial_sid_context(u32);
3196:	int security_get_permissions(struct selinux_state *, char *, char ***, int *);
3243:	int security_get_reject_unknown(struct selinux_state *);
2561:	int security_get_user_sids(struct selinux_state *, u32, char *, u32 **, u32 *);
2364:	int security_ib_endport_sid(struct selinux_state *, const char *, u8, u32 *);
2318:	int security_ib_pkey_sid(struct selinux_state *, u64, u16, u32 *);
2107:	int security_load_policy(struct selinux_state *, void *, size_t);
1852:	int security_member_sid(struct selinux_state *, u32, u32, u16, u32 *);
248:	int security_mls_enabled(struct selinux_state *);
3069:	int security_net_peersid_resolve(struct selinux_state *, u32, u32, u32, u32 *);
2410:	int security_netif_sid(struct selinux_state *, char *, u32 *);
3594:	int security_netlbl_secattr_to_sid(struct selinux_state *, struct netlbl_lsm_secattr *, u32 *);
3664:	int security_netlbl_sid_to_secattr(struct selinux_state *, u32, struct netlbl_lsm_secattr *);
2472:	int security_node_sid(struct selinux_state *, u16, void *, u32, u32 *);
3263:	int security_policycap_supported(struct selinux_state *, unsigned int);
2254:	size_t security_policydb_len(struct selinux_state *);
2272:	int security_port_sid(struct selinux_state *, u8, u16, u32 *);
3703:	int security_read_policy(struct selinux_state *, void **, size_t *);
2870:	int security_set_bools(struct selinux_state *, int, int *);
2980:	int security_sid_mls_copy(struct selinux_state *, u32, u32, u32 *);
1348:	int security_sid_to_context(struct selinux_state *, u32, char **, u32 *);
1355:	int security_sid_to_context_force(struct selinux_state *, u32, char **, u32 *);
1821:	int security_transition_sid(struct selinux_state *, u32, u32, u16, const struct qstr *, u32 *);
1830:	int security_transition_sid_user(struct selinux_state *, u32, u32, u16, const char *, u32 *);
846:	int security_validate_transition(struct selinux_state *, u32, u32, u32, u16);
838:	int security_validate_transition_user(struct selinux_state *, u32, u32, u32, u16);
3281:	void selinux_audit_rule_free(void *);
3291:	int selinux_audit_rule_init(u32, u32, char *, void **);
3391:	int selinux_audit_rule_known(struct audit_krule *);
3415:	int selinux_audit_rule_match(u32, u32, u32, void *, struct audit_context *);
85:	void selinux_ss_init(struct selinux_ss **);
955:	void services_compute_xperms_decision(struct extended_perms_decision *, struct avtab_node *);
594:	void services_compute_xperms_drivers(struct extended_perms *, struct avtab_node *);
3526:	static int aurule_avc_callback(u32);
3535:	static int aurule_init(void);
1888:	static int clone_sid(u32, struct context *, void *);
1570:	static int compute_sid_handle_invalid_context(struct selinux_state *, struct context *, struct context *, u16, struct context *);
266:	static int constraint_expr_eval(struct context *, struct context *, struct context *, struct constraint_expr *, struct policydb *);
619:	static void context_struct_compute_av(struct policydb *, struct context *, struct context *, u16, struct av_decision *, struct extended_perms *);
1223:	static int context_struct_to_string(struct policydb *, struct context *, char **, u32 *);
1932:	static int convert_context(struct context *, void *, u32);
445:	static int dump_masked_av_helper(void *, void *, void *);
3136:	static int get_classes_callback(void *, void *, void *);
3183:	static int get_permissions_callback(void *, void *, void *);
1628:	static int security_compute_sid(struct selinux_state *, u32, u32, u16, u32, const char *, u32 *, bool);
758:	static int security_compute_validatetrans(struct selinux_state *, u32, u32, u32, u16, bool);
1447:	static int security_context_to_sid_core(const char *, u32, u32 *, u32, gfp_t, int, struct selinux_state *, struct selinux_state *);
457:	static void security_dump_masked_av(struct policydb *, struct context *, struct context *, u16, u32, const char *);
2073:	static void security_load_policycaps(struct selinux_state *);
1282:	static int security_sid_to_context_core(u32, char **, u32 *, int, struct selinux_state *, struct selinux_state *);
105:	static int selinux_set_mapping(struct policydb *, struct selinux_map *, struct security_class_mapping *);
1365:	static int string_to_context_struct(struct policydb *, struct sidtab *, char *, u32, struct context *, u32);
536:	static void type_attribute_bounds_av(struct policydb *, struct context *, struct context *, u16, struct av_decision *);

File security/selinux/ss/sidtab.c:
191:	int sidtab_context_to_sid(struct sidtab *, struct context *, u32 *);
260:	void sidtab_destroy(struct sidtab *);
233:	void sidtab_hash_eval(struct sidtab *, char *);
18:	int sidtab_init(struct sidtab *);
34:	int sidtab_insert(struct sidtab *, u32, struct context *);
119:	int sidtab_map(struct sidtab *, int (*)(u32, struct context *, void *), void *);
109:	struct context *sidtab_search(struct sidtab *, u32);
114:	struct context *sidtab_search_force(struct sidtab *, u32);
284:	void sidtab_set(struct sidtab *, struct sidtab *);
299:	void sidtab_shutdown(struct sidtab *);
79:	static struct context *sidtab_search_core(struct sidtab *, u32, int);

File security/selinux/ss/status.c:
45:	struct page *selinux_kernel_status_page(struct selinux_state *);
108:	void selinux_status_update_policyload(struct selinux_state *, int);
82:	void selinux_status_update_setenforce(struct selinux_state *, int);

File security/selinux/ss/symtab.c:
36:	int symtab_init(struct symtab *, unsigned int);
26:	static int symcmp(struct hashtab *, const void *, const void *);
12:	static unsigned int symhash(struct hashtab *, const void *);

File security/selinux/xfrm.c:
264:	int selinux_xfrm_decode_session(struct sk_buff *, u32 *, int);
287:	int selinux_xfrm_policy_alloc(struct xfrm_sec_ctx **, struct xfrm_user_sec_ctx *, gfp_t);
298:	int selinux_xfrm_policy_clone(struct xfrm_sec_ctx *, struct xfrm_sec_ctx **);
327:	int selinux_xfrm_policy_delete(struct xfrm_sec_ctx *);
319:	void selinux_xfrm_policy_free(struct xfrm_sec_ctx *);
156:	int selinux_xfrm_policy_lookup(struct xfrm_sec_ctx *, u32, u8);
441:	int selinux_xfrm_postroute_last(u32, struct sk_buff *, struct common_audit_data *, u8);
273:	int selinux_xfrm_skb_sid(struct sk_buff *, u32 *);
407:	int selinux_xfrm_sock_rcv_skb(u32, struct sk_buff *, struct common_audit_data *);
336:	int selinux_xfrm_state_alloc(struct xfrm_state *, struct xfrm_user_sec_ctx *);
346:	int selinux_xfrm_state_alloc_acquire(struct xfrm_state *, struct xfrm_sec_ctx *, u32);
395:	int selinux_xfrm_state_delete(struct xfrm_state *);
387:	void selinux_xfrm_state_free(struct xfrm_state *);
179:	int selinux_xfrm_state_pol_flow_match(struct xfrm_state *, struct xfrm_policy *, const struct flowi *);
77:	static int selinux_xfrm_alloc_user(struct xfrm_sec_ctx **, struct xfrm_user_sec_ctx *, gfp_t);
139:	static int selinux_xfrm_delete(struct xfrm_sec_ctx *);
127:	static void selinux_xfrm_free(struct xfrm_sec_ctx *);
229:	static int selinux_xfrm_skb_sid_ingress(u32 *, int, struct sk_buff *);

File security/yama/yama_lsm.c:
482:	void yama_add_hooks(void);
404:	int yama_ptrace_traceme(struct task_struct *);
209:	void yama_task_free(struct task_struct *);
225:	int yama_task_prctl(int, unsigned long, unsigned long, unsigned long, unsigned long);
55:	static void __report_access(struct callback_head *);
78:	static void report_access(const char *, struct task_struct *, struct task_struct *);
276:	static int task_is_descendant(struct task_struct *, struct task_struct *);
436:	static int yama_dointvec_minmax(struct ctl_table *, int, void *, size_t *, loff_t *);
358:	static int yama_ptrace_access_check(struct task_struct *, unsigned int);
145:	static int yama_ptracer_add(struct task_struct *, struct task_struct *);
183:	static void yama_ptracer_del(struct task_struct *, struct task_struct *);
119:	static void yama_relation_cleanup(struct work_struct *);
